begin_compilation
  name " HotSpotCompilation-9381[java.lang.AbstractStringBuilder.append(boolean)]"
  method "HotSpotCompilation-9381[java.lang.AbstractStringBuilder.append(boolean)]"
  date 1527005208531
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B62" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a1363 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a1363  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/lang/AbstractStringBuilder;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v99 v210 v224 v1377 v100 v1376 j728 j791 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1377 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1363 v295 v387 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1363 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.value
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1377 
=== Succesors ===
next: i1364 
=== Usages ===
a231 v1397 v1378 v1452 a1453 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1377 #next: i1364  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32 [0 - 1] ⇈0000000000000001
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v5 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(boolean)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 615
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
v631 a760 a688 i1364 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@~|@floating>@ <|@
tid v1378 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1363 
=== Succesors ===
=== Usages ===
i1364 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1363  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1364 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v1378 
=== Succesors ===
next: i1365 
=== Usages ===
i124 i103 i590 i591 i145 v376 v343 v283 v529 v569 i1360 v1361 
=== Predecessor ===
a1363 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v1378 #next: i1365  <|@  <|@
f <@~|@floating>@ <|@
tid v1376 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1365 v237 v248 v259 v270 v281 v296 v305 v314 v323 v332 v341 v352 v363 v374 v388 v397 v406 v415 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1365 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 91]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1376 
=== Succesors ===
next: v8 
=== Usages ===
i51 i11 v1393 v297 v1384 i18 v343 i191 i193 v389 v1379 v1389 v1361 
=== Predecessor ===
i1364 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1376 #next: v8  <|@  <|@
f <@~|@floating>@ <|@
tid i192 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:625) [bci: 146]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i193 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i193 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:625) [bci: 146]
stamp: i32
=== Inputs ===
x: i1365 
y: i192 
=== Succesors ===
=== Usages ===
v314 v1387 v416 v406 v1396 v376 v259 v1392 v1382 v363 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1365 y: i192  <|@  <|@
f <@~|@floating>@ <|@
tid i146 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:150) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i147 i191 i1359 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i191 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:624) [bci: 128]
stamp: i32
=== Inputs ===
x: i1365 
y: i146 
=== Succesors ===
=== Usages ===
v305 v1386 v1381 v397 v1395 v1391 v248 v352 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1365 y: i146  <|@  <|@
f <@~|@floating>@ <|@
tid i17 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:617) [bci: 24]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i18 v104 v125 i145 v180 v158 i1360 i664 i738 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:617) [bci: 25]
stamp: i32
=== Inputs ===
x: i1365 
y: i17 
=== Succesors ===
=== Usages ===
v388 v1380 v1390 v1394 v296 v1385 v237 v341 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1365 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 9]
rawvalue: 4
stableDimension: 0
stamp: i32 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i11 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 10]
stamp: i32
=== Inputs ===
x: i1365 
y: i10 
=== Succesors ===
=== Usages ===
v333 i103 i148 i450 v323 v1388 v283 v415 v270 v374 v1383 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1365 y: i10  <|@  <|@
f <@~|@floating>@ <|@
tid i735 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v734 v795 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i729 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j730 j792 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j733 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1409 v1419 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1355 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i16 [0] ⇈0000000000000000
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1331 v1349 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1356 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1333 v1350 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1357 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1335 v1351 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1358 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1337 v1352 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1354 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1338 v1353 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1140 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1141 j1192 j1254 j1305 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1082 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1096 j1159 j1215 j1272 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1136 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1137 j1189 j1251 j1302 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1104 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1105 j1165 j1223 j1278 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1132 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1133 j1186 j1248 j1299 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j718 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1284 j1231 j1113 j1171 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1128 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1129 j1183 j1245 j1296 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j228 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1121 j1290 j1239 j1177 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1122 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] ⇊fffffffffffffff0 ⇈fffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1123 j1178 j1240 j1291 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j699 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1241 j1232 v1292 j1106 j1114 v1124 j1285 j1166 j1172 v1179 j1279 j1224 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v662 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a688 a760 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v798 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v720 v783 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j663 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v716 v780 v817 v944 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i695 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i696 i767 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i665 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i666 i739 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i672 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v673 v745 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i160 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 22]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
rawvalue: 2147483639
stableDimension: 0
stamp: i32 [2147483639] ⇊000000007ffffff7 ⇈000000007ffffff7
stampKind: i32
value: int[2147483639|0x7ffffff7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i161 i182 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i433 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:627) [bci: 188]
rawvalue: 101
stableDimension: 0
stamp: i16 [101] ⇊0000000000000065 ⇈0000000000000065
stampKind: i16
value: short[101|0x65]
=== Inputs ===
=== Succesors ===
=== Usages ===
v291 v340 v383 v423 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v5 a760 a688 v149 v162 v171 v183 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v5 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i4 
=== Succesors ===
=== Usages ===
v8 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 1]
stamp: void
trueSuccessorProbability: 0.6295884659318947
=== Inputs ===
condition: v5 
=== Succesors ===
trueSuccessor: v6 
falseSuccessor: v7 
=== Usages ===
=== Predecessor ===
i1365 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5 #trueSuccessor: v6 #falseSuccessor: v7  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B7" 
    xhandlers
    flags 
    probability 4603846048306411702
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 89]
stamp: void
=== Inputs ===
=== Succesors ===
next: v128 
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v128  <|@  <|@
f <@~|@floating>@ <|@
tid i50 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 94]
rawvalue: 5
stableDimension: 0
stamp: i32 [5] ⇊0000000000000005 ⇈0000000000000005
stampKind: i32
value: int[5|0x5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i51 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i51 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 95]
stamp: i32
=== Inputs ===
x: i1365 
y: i50 
=== Succesors ===
=== Usages ===
v281 i124 i170 i451 v332 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1365 y: i50  <|@  <|@
f <@~|@floating>@ <|@
tid i124 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: i32
=== Inputs ===
x: i51 
y: i1364 
=== Succesors ===
=== Usages ===
v125 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i51 y: i1364  <|@  <|@
f <@~|@floating>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i124 
y: i17 
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i124 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid i431 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 170]
rawvalue: 115
stableDimension: 0
stamp: i16 [115] ⇊0000000000000073 ⇈0000000000000073
stampKind: i16
value: short[115|0x73]
=== Inputs ===
=== Succesors ===
=== Usages ===
v280 v331 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i429 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:625) [bci: 152]
rawvalue: 108
stableDimension: 0
stamp: i16 [108] ⇊000000000000006c ⇈000000000000006c
stampKind: i16
value: short[108|0x6c]
=== Inputs ===
=== Succesors ===
=== Usages ===
v269 v322 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i427 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:624) [bci: 134]
rawvalue: 97
stableDimension: 0
stamp: i16 [97] ⇊0000000000000061 ⇈0000000000000061
stampKind: i16
value: short[97|0x61]
=== Inputs ===
=== Succesors ===
=== Usages ===
v258 v313 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i425 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:623) [bci: 116]
rawvalue: 102
stableDimension: 0
stamp: i16 [102] ⇊0000000000000066 ⇈0000000000000066
stampKind: i16
value: short[102|0x66]
=== Inputs ===
=== Succesors ===
=== Usages ===
v247 v304 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: void
trueSuccessorProbability: 0.953003048985209
=== Inputs ===
condition: v125 
=== Succesors ===
trueSuccessor: v126 
falseSuccessor: v127 
=== Usages ===
=== Predecessor ===
v6 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v125 #trueSuccessor: v126 #falseSuccessor: v127  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4603579536644911359
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: void
=== Inputs ===
=== Succesors ===
next: v466 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v466  <|@  <|@
f <@~|@floating>@ <|@
tid v1361 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:617) [bci: 31]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1365 
y: i1364 
=== Succesors ===
=== Usages ===
v466 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1365 y: i1364  <|@  <|@
f <@*|@fixed>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:623) [bci: 116]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1361 
=== Succesors ===
trueSuccessor: v463 
falseSuccessor: v465 
=== Usages ===
=== Predecessor ===
v126 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1361 #trueSuccessor: v463 #falseSuccessor: v465  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4603579536644911359
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:623) [bci: 116]
stamp: void
=== Inputs ===
=== Succesors ===
next: v470 
=== Usages ===
v457 
=== Predecessor ===
v466 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v470  <|@  <|@
f <@~|@floating>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:627) [bci: 188]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i11 
y: i1364 
=== Succesors ===
=== Usages ===
v470 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i11 y: i1364  <|@  <|@
f <@*|@fixed>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:627) [bci: 188]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v283 
=== Succesors ===
trueSuccessor: v467 
falseSuccessor: v469 
=== Usages ===
=== Predecessor ===
v463 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v283 #trueSuccessor: v467 #falseSuccessor: v469  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4603579536644911359
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:627) [bci: 188]
stamp: void
=== Inputs ===
=== Succesors ===
next: v237 
=== Usages ===
v457 
=== Predecessor ===
v470 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v237  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:623) [bci: 111]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1376 
value: i18 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v247 
=== Usages ===
=== Predecessor ===
v467 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1376 value: i18 stateAfter: - lastLocationAccess: - #next: v247  <|@  <|@
f <@~|@floating>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v467 v463 
=== Succesors ===
=== Usages ===
v258 v291 v280 v247 v269 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v467 v463  <|@  <|@
f <@~|@floating>@ <|@
tid a1453 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1363 
=== Succesors ===
=== Usages ===
v1379 v1380 v1381 v1382 v1383 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1363  <|@  <|@
f <@~|@floating>@ <|@
tid v1379 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1453 
index: i1365 
=== Succesors ===
=== Usages ===
v247 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1453 index: i1365  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:623) [bci: 116]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v457 
address: v1379 
value: i425 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v248 
=== Usages ===
=== Predecessor ===
v237 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v457 address: v1379 value: i425 stateAfter: - lastLocationAccess: - #next: v248  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:624) [bci: 129]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1376 
value: i191 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v258 
=== Usages ===
=== Predecessor ===
v247 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1376 value: i191 stateAfter: - lastLocationAccess: - #next: v258  <|@  <|@
f <@~|@floating>@ <|@
tid v1380 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1453 
index: i18 
=== Succesors ===
=== Usages ===
v258 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1453 index: i18  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:624) [bci: 134]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v457 
address: v1380 
value: i427 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v259 
=== Usages ===
=== Predecessor ===
v248 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v457 address: v1380 value: i427 stateAfter: - lastLocationAccess: - #next: v259  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:625) [bci: 147]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1376 
value: i193 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v269 
=== Usages ===
=== Predecessor ===
v258 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1376 value: i193 stateAfter: - lastLocationAccess: - #next: v269  <|@  <|@
f <@~|@floating>@ <|@
tid v1381 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1453 
index: i191 
=== Succesors ===
=== Usages ===
v269 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1453 index: i191  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:625) [bci: 152]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v457 
address: v1381 
value: i429 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v270 
=== Usages ===
=== Predecessor ===
v259 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v457 address: v1381 value: i429 stateAfter: - lastLocationAccess: - #next: v270  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 165]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1376 
value: i11 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v280 
=== Usages ===
=== Predecessor ===
v269 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1376 value: i11 stateAfter: - lastLocationAccess: - #next: v280  <|@  <|@
f <@~|@floating>@ <|@
tid v1382 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1453 
index: i193 
=== Succesors ===
=== Usages ===
v280 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1453 index: i193  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 170]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v457 
address: v1382 
value: i431 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v281 
=== Usages ===
=== Predecessor ===
v270 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v457 address: v1382 value: i431 stateAfter: - lastLocationAccess: - #next: v281  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:627) [bci: 183]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1376 
value: i51 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v291 
=== Usages ===
=== Predecessor ===
v280 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1376 value: i51 stateAfter: - lastLocationAccess: - #next: v291  <|@  <|@
f <@~|@floating>@ <|@
tid v1383 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1453 
index: i11 
=== Succesors ===
=== Usages ===
v291 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1453 index: i11  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v291 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:627) [bci: 188]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v457 
address: v1383 
value: i433 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v210 
=== Usages ===
=== Predecessor ===
v281 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v457 address: v1383 value: i433 stateAfter: - lastLocationAccess: - #next: v210  <|@  <|@
f <@*|@fixed>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 189]
stamp: void
=== Inputs ===
result: a1 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v291 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v469 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:627) [bci: 188]
stamp: void
=== Inputs ===
=== Succesors ===
next: v636 
=== Usages ===
=== Predecessor ===
v470 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v636  <|@  <|@
f <@~|@floating>@ <|@
tid i637 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -72731
stableDimension: 0
stamp: i32 [-72731] ⇊00000000fffee3e5 ⇈00000000fffee3e5
stampKind: i32
value: int[-72731|0xfffffffffffee3e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i629 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v636 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v625 
=== Predecessor ===
v469 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:623) [bci: 116]
stamp: void
=== Inputs ===
=== Succesors ===
next: v634 
=== Usages ===
=== Predecessor ===
v466 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v634  <|@  <|@
f <@~|@floating>@ <|@
tid i635 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -61467
stableDimension: 0
stamp: i32 [-61467] ⇊00000000ffff0fe5 ⇈00000000ffff0fe5
stampKind: i32
value: int[-61467|0xffffffffffff0fe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i629 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v634 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v625 
=== Predecessor ===
v465 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4584185594576434903
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: void
=== Inputs ===
=== Succesors ===
next: v474 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v474  <|@  <|@
f <@~|@floating>@ <|@
tid i1360 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:150) [bci: 6]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i1364 
y: i17 
=== Succesors ===
=== Usages ===
i1359 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1364 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid i1359 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:150) [bci: 8]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i1360 
y: i146 
=== Succesors ===
=== Usages ===
i170 i451 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1360 y: i146  <|@  <|@
f <@~|@floating>@ <|@
tid i170 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:151) [bci: 12]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: i32
=== Inputs ===
x: i1359 
y: i51 
=== Succesors ===
=== Usages ===
v171 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1359 y: i51  <|@  <|@
f <@~|@floating>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:151) [bci: 13]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i170 
y: i4 
=== Succesors ===
=== Usages ===
i451 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i170 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i451 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v171 
trueValue: i51 
falseValue: i1359 
=== Succesors ===
=== Usages ===
v333 v297 v180 i182 j806 v673 v569 i591 a688 v715 i664 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v171 trueValue: i51 falseValue: i1359  <|@  <|@
f <@~|@floating>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i451 
y: i17 
=== Succesors ===
=== Usages ===
v474 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i451 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v180 
=== Succesors ===
trueSuccessor: v473 
falseSuccessor: v471 
=== Usages ===
=== Predecessor ===
v127 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v180 #trueSuccessor: v473 #falseSuccessor: v471  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: void
=== Inputs ===
=== Succesors ===
next: v632 
=== Usages ===
=== Predecessor ===
v474 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v632  <|@  <|@
f <@~|@floating>@ <|@
tid i633 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -74771
stableDimension: 0
stamp: i32 [-74771] ⇊00000000fffedbed ⇈00000000fffedbed
stampKind: i32
value: int[-74771|0xfffffffffffedbed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i629 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v625 
=== Predecessor ===
v473 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4584185594576434903
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: void
=== Inputs ===
=== Succesors ===
next: v478 
=== Usages ===
=== Predecessor ===
v474 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v478  <|@  <|@
f <@~|@floating>@ <|@
tid i182 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 25]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: i32
=== Inputs ===
x: i160 
y: i451 
=== Succesors ===
=== Usages ===
v183 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i160 y: i451  <|@  <|@
f <@~|@floating>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i182 
y: i4 
=== Succesors ===
=== Usages ===
v478 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i182 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v183 
=== Succesors ===
trueSuccessor: v477 
falseSuccessor: v475 
=== Usages ===
=== Predecessor ===
v471 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v183 #trueSuccessor: v477 #falseSuccessor: v475  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: void
=== Inputs ===
=== Succesors ===
next: v644 
=== Usages ===
=== Predecessor ===
v478 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v644  <|@  <|@
f <@~|@floating>@ <|@
tid i645 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -75027
stableDimension: 0
stamp: i32 [-75027] ⇊00000000fffedaed ⇈00000000fffedaed
stampKind: i32
value: int[-75027|0xfffffffffffedaed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i629 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v644 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v625 
=== Predecessor ===
v477 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B61" 
    xhandlers
    flags 
    probability 4584185594576434903
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: void
=== Inputs ===
=== Succesors ===
next: v482 
=== Usages ===
=== Predecessor ===
v478 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v482  <|@  <|@
f <@~|@floating>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:623) [bci: 116]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1365 
y: i451 
=== Succesors ===
=== Usages ===
v482 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1365 y: i451  <|@  <|@
f <@*|@fixed>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:623) [bci: 116]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v297 
=== Succesors ===
trueSuccessor: v479 
falseSuccessor: v481 
=== Usages ===
=== Predecessor ===
v475 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v297 #trueSuccessor: v479 #falseSuccessor: v481  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B60" 
    xhandlers
    flags 
    probability 4584185594576434903
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:623) [bci: 116]
stamp: void
=== Inputs ===
=== Succesors ===
next: v486 
=== Usages ===
v458 
=== Predecessor ===
v482 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v486  <|@  <|@
f <@~|@floating>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:627) [bci: 188]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i11 
y: i451 
=== Succesors ===
=== Usages ===
v486 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i11 y: i451  <|@  <|@
f <@*|@fixed>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:627) [bci: 188]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v333 
=== Succesors ===
trueSuccessor: v483 
falseSuccessor: v485 
=== Usages ===
=== Predecessor ===
v479 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v333 #trueSuccessor: v483 #falseSuccessor: v485  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B17" 
    xhandlers
    flags 
    probability 4584185594576434903
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:627) [bci: 188]
stamp: void
=== Inputs ===
=== Succesors ===
next: j667 
=== Usages ===
v458 
=== Predecessor ===
v486 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j667  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j667 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j712 
=== Usages ===
v1400 v1401 
=== Predecessor ===
v483 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j712  <|@  <|@
f <@~|@floating>@ <|@
tid v1400 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j667 
index: - 
=== Succesors ===
=== Usages ===
j712 v714 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j667 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j712 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1400 
=== Succesors ===
next: j713 
=== Usages ===
j671 v1402 v1403 a687 v1408 v1404 v1405 v1406 v1407 
=== Predecessor ===
j667 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1400 #next: j713  <|@  <|@
f <@~|@floating>@ <|@
tid v1401 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j667 
index: - 
=== Succesors ===
=== Usages ===
j713 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j667 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j713 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1401 
=== Succesors ===
next: v676 
=== Usages ===
v677 
=== Predecessor ===
j712 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1401 #next: v676  <|@  <|@
f <@~|@floating>@ <|@
tid v673 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i451 
y: i672 
=== Succesors ===
=== Usages ===
v676 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i451 y: i672  <|@  <|@
f <@*|@fixed>@ <|@
tid v676 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v673 
=== Succesors ===
trueSuccessor: v675 
falseSuccessor: v674 
=== Usages ===
=== Predecessor ===
j713 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v673 #trueSuccessor: v675 #falseSuccessor: v674  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4583332757259633806
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v675 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: void
=== Inputs ===
=== Succesors ===
next: v683 
=== Usages ===
=== Predecessor ===
v676 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v683  <|@  <|@
f <@~|@floating>@ <|@
tid i664 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i451 
y: i17 
=== Succesors ===
=== Usages ===
i696 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i451 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid i696 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i664 
y: i695 
=== Succesors ===
=== Usages ===
i666 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i664 y: i695  <|@  <|@
f <@~|@floating>@ <|@
tid i666 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i696 
y: i665 
=== Succesors ===
=== Usages ===
j670 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i696 y: i665  <|@  <|@
f <@~|@floating>@ <|@
tid j670 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i666 
=== Succesors ===
=== Usages ===
j671 v1404 v1405 v1406 v1407 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i666  <|@  <|@
f <@~|@floating>@ <|@
tid j671 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: i64
=== Inputs ===
x: j670 
y: j712 
=== Succesors ===
=== Usages ===
v677 v714 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j670 y: j712  <|@  <|@
f <@~|@floating>@ <|@
tid v677 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j713 
y: j671 
=== Succesors ===
=== Usages ===
v683 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j713 y: j671  <|@  <|@
f <@*|@fixed>@ <|@
tid v683 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v677 
=== Succesors ===
trueSuccessor: v682 
falseSuccessor: v681 
=== Usages ===
=== Predecessor ===
v675 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v677 #trueSuccessor: v682 #falseSuccessor: v681  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B18" 
    xhandlers
    flags 
    probability 4553547966588975281
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v682 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: void
=== Inputs ===
=== Succesors ===
next: v680 
=== Usages ===
=== Predecessor ===
v683 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v680  <|@  <|@
f <@*|@fixed>@ <|@
tid v680 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v679 
=== Predecessor ===
v682 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4583256001901121707
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v681 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: void
=== Inputs ===
=== Succesors ===
next: v714 
=== Usages ===
=== Predecessor ===
v683 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v714  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v714 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1400 
value: j671 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v701 
=== Usages ===
=== Predecessor ===
v681 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1400 value: j671 stateAfter: - lastLocationAccess: - #next: v701  <|@  <|@
f <@~|@floating>@ <|@
tid v1404 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j670 
index: j712 
=== Succesors ===
=== Usages ===
v701 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j670 index: j712  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: void
=== Inputs ===
address: v1404 
=== Succesors ===
next: v704 
=== Usages ===
=== Predecessor ===
v714 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1404 #next: v704  <|@  <|@
f <@~|@floating>@ <|@
tid v1405 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j670 
index: j712 
=== Succesors ===
=== Usages ===
v704 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j670 index: j712  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v704 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: void
=== Inputs ===
address: v1405 
=== Succesors ===
next: v707 
=== Usages ===
=== Predecessor ===
v701 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1405 #next: v707  <|@  <|@
f <@~|@floating>@ <|@
tid v1406 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j670 
index: j712 
=== Succesors ===
=== Usages ===
v707 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j670 index: j712  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v707 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: void
=== Inputs ===
address: v1406 
=== Succesors ===
next: v710 
=== Usages ===
=== Predecessor ===
v704 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1406 #next: v710  <|@  <|@
f <@~|@floating>@ <|@
tid v1407 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j670 
index: j712 
=== Succesors ===
=== Usages ===
v710 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j670 index: j712  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v710 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: void
=== Inputs ===
address: v1407 
=== Succesors ===
next: v715 
=== Usages ===
=== Predecessor ===
v707 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1407 #next: v715  <|@  <|@
f <@~|@floating>@ <|@
tid v1402 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j712 
index: - 
=== Succesors ===
=== Usages ===
v715 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j712 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v715 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1402 
value: i451 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v716 
=== Usages ===
=== Predecessor ===
v710 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1402 value: i451 stateAfter: - lastLocationAccess: - #next: v716  <|@  <|@
f <@~|@floating>@ <|@
tid v1403 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j712 
index: - 
=== Succesors ===
=== Usages ===
v716 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j712 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v716 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1403 
value: j663 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v720 
=== Usages ===
=== Predecessor ===
v715 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1403 value: j663 stateAfter: - lastLocationAccess: - #next: v720  <|@  <|@
f <@~|@floating>@ <|@
tid v1408 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j712 
index: - 
=== Succesors ===
=== Usages ===
v720 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j712 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v720 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1408 
value: v798 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v686 
=== Usages ===
=== Predecessor ===
v716 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1408 value: v798 stateAfter: - lastLocationAccess: - #next: v686  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v686 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: void
=== Inputs ===
=== Succesors ===
next: a687 
=== Usages ===
=== Predecessor ===
v720 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a687  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a687 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j712 
=== Succesors ===
next: v689 
=== Usages ===
a692 
=== Predecessor ===
v686 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j712 #next: v689  <|@  <|@
f <@*|@fixed>@ <|@
tid v689 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v690 
=== Predecessor ===
a687 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4568969121060721220
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v674 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: void
=== Inputs ===
=== Succesors ===
next: v678 
=== Usages ===
=== Predecessor ===
v676 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v678  <|@  <|@
f <@*|@fixed>@ <|@
tid v678 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v679 
=== Predecessor ===
v674 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4569583163928818010
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v679 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v678 v680 
=== Succesors ===
next: a688 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v678 v680 #next: a688  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a688 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v662 i451 i4 
=== Succesors ===
next: v691 
=== Usages ===
a692 
=== Predecessor ===
v679 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v662 i451 i4 #next: v691  <|@  <|@
f <@*|@fixed>@ <|@
tid v691 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v690 
=== Predecessor ===
a688 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4584185594576434902
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a692 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v690 
values: a687 a688 
=== Succesors ===
=== Usages ===
v1421 a602 v1399 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v690 values: a687 a688  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v690 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v689 v691 
=== Succesors ===
next: v1196 
=== Usages ===
a692 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v689 v691 #next: v1196  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1196 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v947 
=== Usages ===
j1197 j1199 
=== Predecessor ===
v690 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v947  <|@  <|@
f <@~|@floating>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1364 
y: i451 
=== Succesors ===
=== Usages ===
i591 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1364 y: i451  <|@  <|@
f <@~|@floating>@ <|@
tid i591 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v569 
trueValue: i1364 
falseValue: i451 
=== Succesors ===
=== Usages ===
j807 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v569 trueValue: i1364 falseValue: i451  <|@  <|@
f <@~|@floating>@ <|@
tid j807 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i591 
=== Succesors ===
=== Usages ===
j1254 v1421 j811 v944 v1073 j1240 j1245 j1248 j1251 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i591  <|@  <|@
f <@~|@floating>@ <|@
tid v944 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j807 
y: j663 
=== Succesors ===
=== Usages ===
v947 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j807 y: j663  <|@  <|@
f <@*|@fixed>@ <|@
tid v947 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v944 
=== Succesors ===
trueSuccessor: v945 
falseSuccessor: v946 
=== Usages ===
=== Predecessor ===
v1196 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v944 #trueSuccessor: v945 #falseSuccessor: v946  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B38" 
    xhandlers
    flags 
    probability 4579681994949064406
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v945 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v963 
=== Usages ===
=== Predecessor ===
v947 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v963  <|@  <|@
f <@*|@fixed>@ <|@
tid v963 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v964 
=== Predecessor ===
v945 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4579681994949064406
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v946 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v950 
=== Usages ===
=== Predecessor ===
v947 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v950  <|@  <|@
f <@~|@floating>@ <|@
tid v1399 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a692 
index: - 
=== Succesors ===
=== Usages ===
j1199 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a692 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1199 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1196 
address: v1399 
=== Succesors ===
=== Usages ===
v1437 v1439 v1441 v1443 v1445 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1196 address: v1399  <|@  <|@
f <@~|@floating>@ <|@
tid v1397 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1363 
=== Succesors ===
=== Usages ===
j1197 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1363  <|@  <|@
f <@~|@floating>@ <|@
tid j1197 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1196 
address: v1397 
=== Succesors ===
=== Usages ===
v1438 v1440 v1442 v1444 v1446 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1196 address: v1397  <|@  <|@
f <@~|@floating>@ <|@
tid j1240 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j807 
y: j1122 
=== Succesors ===
=== Usages ===
v1241 v1243 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j807 y: j1122  <|@  <|@
f <@~|@floating>@ <|@
tid v1241 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1240 
y: j699 
=== Succesors ===
=== Usages ===
v950 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1240 y: j699  <|@  <|@
f <@*|@fixed>@ <|@
tid v950 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1241 
=== Succesors ===
trueSuccessor: v948 
falseSuccessor: v949 
=== Usages ===
=== Predecessor ===
v946 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1241 #trueSuccessor: v948 #falseSuccessor: v949  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4577549901657061664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v948 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v959 
=== Usages ===
=== Predecessor ===
v950 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v959  <|@  <|@
f <@*|@fixed>@ <|@
tid v959 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v960 
=== Predecessor ===
v948 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4570674795694323414
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v949 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v951 
=== Usages ===
=== Predecessor ===
v950 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v951  <|@  <|@
f <@*|@fixed>@ <|@
tid v951 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v952 
=== Predecessor ===
v949 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B59" 
    successors "B25" "B59" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4579681994949064406
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1232 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v952 
values: j699 j1239 
=== Succesors ===
=== Usages ===
v1446 j1239 v1445 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v952 values: j699 j1239  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v952 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v951 
=== Succesors ===
next: v1366 
=== Usages ===
v1366 v955 v956 j1232 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v951 #next: v1366  <|@  <|@
f <@~|@floating>@ <|@
tid v1446 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1197 
index: j1232 
=== Succesors ===
=== Usages ===
v1366 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1197 index: j1232  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1366 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v952 
address: v1446 
=== Succesors ===
next: v1348 
=== Usages ===
v1348 
=== Predecessor ===
v952 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v952 address: v1446 #next: v1348  <|@  <|@
f <@~|@floating>@ <|@
tid v1445 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1199 
index: j1232 
=== Succesors ===
=== Usages ===
v1348 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1199 index: j1232  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1348 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1445 
value: v1366 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v958 
=== Usages ===
=== Predecessor ===
v1366 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1445 value: v1366 stateAfter: - lastLocationAccess: - #next: v958  <|@  <|@
f <@~|@floating>@ <|@
tid j1239 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1232 
y: j228 
=== Succesors ===
=== Usages ===
j1224 j1232 v1243 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1232 y: j228  <|@  <|@
f <@~|@floating>@ <|@
tid v1243 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1240 
y: j1239 
=== Succesors ===
=== Usages ===
v958 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1240 y: j1239  <|@  <|@
f <@*|@fixed>@ <|@
tid v958 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1243 
=== Succesors ===
trueSuccessor: v955 
falseSuccessor: v957 
=== Usages ===
=== Predecessor ===
v1348 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1243 #trueSuccessor: v955 #falseSuccessor: v957  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4570674795694323414
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v955 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v952 
=== Succesors ===
next: v961 
=== Usages ===
=== Predecessor ===
v958 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v952 #next: v961  <|@  <|@
f <@*|@fixed>@ <|@
tid v961 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v960 
=== Predecessor ===
v955 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4579681994949064406
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1224 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v960 
values: j699 j1239 
=== Succesors ===
=== Usages ===
v1444 j1231 j1216 v1246 v1443 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v960 values: j699 j1239  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v960 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v959 v961 
=== Succesors ===
next: v982 
=== Usages ===
j1224 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v959 v961 #next: v982  <|@  <|@
f <@~|@floating>@ <|@
tid j1245 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j807 
y: j1128 
=== Succesors ===
=== Usages ===
v1246 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j807 y: j1128  <|@  <|@
f <@~|@floating>@ <|@
tid v1246 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1245 
y: j1224 
=== Succesors ===
=== Usages ===
v982 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1245 y: j1224  <|@  <|@
f <@*|@fixed>@ <|@
tid v982 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1246 
=== Succesors ===
trueSuccessor: v981 
falseSuccessor: v980 
=== Usages ===
=== Predecessor ===
v960 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1246 #trueSuccessor: v981 #falseSuccessor: v980  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4570674795694323414
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v981 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v985 
=== Usages ===
=== Predecessor ===
v982 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v985  <|@  <|@
f <@*|@fixed>@ <|@
tid v985 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v971 
=== Predecessor ===
v981 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4577549901657061664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v980 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1367 
=== Usages ===
v1367 
=== Predecessor ===
v982 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1367  <|@  <|@
f <@~|@floating>@ <|@
tid v1444 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1197 
index: j1224 
=== Succesors ===
=== Usages ===
v1367 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1197 index: j1224  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1367 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v980 
address: v1444 
=== Succesors ===
next: v1346 
=== Usages ===
v1346 
=== Predecessor ===
v980 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v980 address: v1444 #next: v1346  <|@  <|@
f <@~|@floating>@ <|@
tid v1443 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1199 
index: j1224 
=== Succesors ===
=== Usages ===
v1346 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1199 index: j1224  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1346 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1443 
value: v1367 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v970 
=== Usages ===
=== Predecessor ===
v1367 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1443 value: v1367 stateAfter: - lastLocationAccess: - #next: v970  <|@  <|@
f <@~|@floating>@ <|@
tid j1231 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1224 
y: j718 
=== Succesors ===
=== Usages ===
j1216 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1224 y: j718  <|@  <|@
f <@*|@fixed>@ <|@
tid v970 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v971 
=== Predecessor ===
v1346 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4579681994949064406
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1216 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v971 
values: j1231 j1224 
=== Succesors ===
=== Usages ===
v1442 j1223 j1208 v1249 v1441 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v971 values: j1231 j1224  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v971 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v970 v985 
=== Succesors ===
next: v988 
=== Usages ===
j1216 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v970 v985 #next: v988  <|@  <|@
f <@~|@floating>@ <|@
tid j1248 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j807 
y: j1132 
=== Succesors ===
=== Usages ===
v1249 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j807 y: j1132  <|@  <|@
f <@~|@floating>@ <|@
tid v1249 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1248 
y: j1216 
=== Succesors ===
=== Usages ===
v988 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1248 y: j1216  <|@  <|@
f <@*|@fixed>@ <|@
tid v988 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1249 
=== Succesors ===
trueSuccessor: v987 
falseSuccessor: v986 
=== Usages ===
=== Predecessor ===
v971 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1249 #trueSuccessor: v987 #falseSuccessor: v986  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4570674795694323414
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v987 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v991 
=== Usages ===
=== Predecessor ===
v988 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v991  <|@  <|@
f <@*|@fixed>@ <|@
tid v991 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v974 
=== Predecessor ===
v987 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4577549901657061664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v986 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1368 
=== Usages ===
v1368 
=== Predecessor ===
v988 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1368  <|@  <|@
f <@~|@floating>@ <|@
tid v1442 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1197 
index: j1216 
=== Succesors ===
=== Usages ===
v1368 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1197 index: j1216  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1368 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v986 
address: v1442 
=== Succesors ===
next: v1344 
=== Usages ===
v1344 
=== Predecessor ===
v986 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v986 address: v1442 #next: v1344  <|@  <|@
f <@~|@floating>@ <|@
tid v1441 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1199 
index: j1216 
=== Succesors ===
=== Usages ===
v1344 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1199 index: j1216  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1344 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1441 
value: v1368 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v973 
=== Usages ===
=== Predecessor ===
v1368 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1441 value: v1368 stateAfter: - lastLocationAccess: - #next: v973  <|@  <|@
f <@~|@floating>@ <|@
tid j1223 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1216 
y: j1104 
=== Succesors ===
=== Usages ===
j1208 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1216 y: j1104  <|@  <|@
f <@*|@fixed>@ <|@
tid v973 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v974 
=== Predecessor ===
v1344 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4579681994949064406
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1208 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v974 
values: j1223 j1216 
=== Succesors ===
=== Usages ===
v1440 j1215 j1200 v1252 v1439 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v974 values: j1223 j1216  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v974 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v973 v991 
=== Succesors ===
next: v994 
=== Usages ===
j1208 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v973 v991 #next: v994  <|@  <|@
f <@~|@floating>@ <|@
tid j1251 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j807 
y: j1136 
=== Succesors ===
=== Usages ===
v1252 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j807 y: j1136  <|@  <|@
f <@~|@floating>@ <|@
tid v1252 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1251 
y: j1208 
=== Succesors ===
=== Usages ===
v994 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1251 y: j1208  <|@  <|@
f <@*|@fixed>@ <|@
tid v994 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1252 
=== Succesors ===
trueSuccessor: v993 
falseSuccessor: v992 
=== Usages ===
=== Predecessor ===
v974 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1252 #trueSuccessor: v993 #falseSuccessor: v992  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4570674795694323414
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v993 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v997 
=== Usages ===
=== Predecessor ===
v994 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v997  <|@  <|@
f <@*|@fixed>@ <|@
tid v997 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v977 
=== Predecessor ===
v993 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4577549901657061664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v992 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1369 
=== Usages ===
v1369 
=== Predecessor ===
v994 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1369  <|@  <|@
f <@~|@floating>@ <|@
tid v1440 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1197 
index: j1208 
=== Succesors ===
=== Usages ===
v1369 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1197 index: j1208  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1369 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v992 
address: v1440 
=== Succesors ===
next: v1342 
=== Usages ===
v1342 
=== Predecessor ===
v992 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v992 address: v1440 #next: v1342  <|@  <|@
f <@~|@floating>@ <|@
tid v1439 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1199 
index: j1208 
=== Succesors ===
=== Usages ===
v1342 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1199 index: j1208  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1342 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1439 
value: v1369 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v976 
=== Usages ===
=== Predecessor ===
v1369 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1439 value: v1369 stateAfter: - lastLocationAccess: - #next: v976  <|@  <|@
f <@~|@floating>@ <|@
tid j1215 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1208 
y: j1082 
=== Succesors ===
=== Usages ===
j1200 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1208 y: j1082  <|@  <|@
f <@*|@fixed>@ <|@
tid v976 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v977 
=== Predecessor ===
v1342 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4579681994949064406
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1200 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v977 
values: j1215 j1208 
=== Succesors ===
=== Usages ===
v1438 v1255 v1437 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v977 values: j1215 j1208  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v977 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v976 v997 
=== Succesors ===
next: v1000 
=== Usages ===
j1200 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v976 v997 #next: v1000  <|@  <|@
f <@~|@floating>@ <|@
tid j1254 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j807 
y: j1140 
=== Succesors ===
=== Usages ===
v1255 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j807 y: j1140  <|@  <|@
f <@~|@floating>@ <|@
tid v1255 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1254 
y: j1200 
=== Succesors ===
=== Usages ===
v1000 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1254 y: j1200  <|@  <|@
f <@*|@fixed>@ <|@
tid v1000 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1255 
=== Succesors ===
trueSuccessor: v999 
falseSuccessor: v998 
=== Usages ===
=== Predecessor ===
v977 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1255 #trueSuccessor: v999 #falseSuccessor: v998  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4570674795694323414
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v999 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1003 
=== Usages ===
=== Predecessor ===
v1000 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1003  <|@  <|@
f <@*|@fixed>@ <|@
tid v1003 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v964 
=== Predecessor ===
v999 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4577549901657061664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v998 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i1370 
=== Usages ===
i1370 
=== Predecessor ===
v1000 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1370  <|@  <|@
f <@~|@floating>@ <|@
tid v1438 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1197 
index: j1200 
=== Succesors ===
=== Usages ===
i1370 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1197 index: j1200  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1370 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v998 
address: v1438 
=== Succesors ===
next: v1340 
=== Usages ===
v1340 
=== Predecessor ===
v998 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v998 address: v1438 #next: v1340  <|@  <|@
f <@~|@floating>@ <|@
tid v1437 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1199 
index: j1200 
=== Succesors ===
=== Usages ===
v1340 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1199 index: j1200  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1340 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1437 
value: i1370 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v979 
=== Usages ===
=== Predecessor ===
i1370 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1437 value: i1370 stateAfter: - lastLocationAccess: - #next: v979  <|@  <|@
f <@*|@fixed>@ <|@
tid v979 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v964 
=== Predecessor ===
v1340 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" "B37" "B36" 
    successors "B39" "B57" 
    xhandlers
    flags 
    probability 4584185594576434902
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v964 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v963 v979 v1003 
=== Succesors ===
next: v1258 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v963 v979 v1003 #next: v1258  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1258 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v1010 
=== Usages ===
j1260 
=== Predecessor ===
v964 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v1010  <|@  <|@
f <@~|@floating>@ <|@
tid j806 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i451 
=== Succesors ===
=== Usages ===
j811 v1073 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i451  <|@  <|@
f <@~|@floating>@ <|@
tid v1073 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j807 
y: j806 
=== Succesors ===
=== Usages ===
v1010 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j807 y: j806  <|@  <|@
f <@*|@fixed>@ <|@
tid v1010 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1073 
=== Succesors ===
trueSuccessor: v1009 
falseSuccessor: v1008 
=== Usages ===
=== Predecessor ===
v1258 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1073 #trueSuccessor: v1009 #falseSuccessor: v1008  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4579681994949064406
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1009 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1013 
=== Usages ===
=== Predecessor ===
v1010 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1013  <|@  <|@
f <@~|@floating>@ <|@
tid v1421 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a692 
index: j807 
=== Succesors ===
=== Usages ===
j1260 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a692 index: j807  <|@  <|@
f <@~|@floating>@ <|@
tid j1260 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1258 
address: v1421 
=== Succesors ===
=== Usages ===
v1447 v1448 v1449 v1450 v1451 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1258 address: v1421  <|@  <|@
f <@~|@floating>@ <|@
tid j811 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j806 
y: j807 
=== Succesors ===
=== Usages ===
j1305 j1291 j1296 j1299 j1302 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j806 y: j807  <|@  <|@
f <@~|@floating>@ <|@
tid j1291 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j811 
y: j1122 
=== Succesors ===
=== Usages ===
v1292 v1294 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j811 y: j1122  <|@  <|@
f <@~|@floating>@ <|@
tid v1292 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1291 
y: j699 
=== Succesors ===
=== Usages ===
v1013 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1291 y: j699  <|@  <|@
f <@*|@fixed>@ <|@
tid v1013 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1292 
=== Succesors ===
trueSuccessor: v1011 
falseSuccessor: v1012 
=== Usages ===
=== Predecessor ===
v1009 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1292 #trueSuccessor: v1011 #falseSuccessor: v1012  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    probability 4577549901657061664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1011 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1022 
=== Usages ===
=== Predecessor ===
v1013 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1022  <|@  <|@
f <@*|@fixed>@ <|@
tid v1022 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1023 
=== Predecessor ===
v1011 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4570674795694323414
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1012 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1014 
=== Usages ===
=== Predecessor ===
v1013 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1014  <|@  <|@
f <@*|@fixed>@ <|@
tid v1014 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1015 
=== Predecessor ===
v1012 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B56" 
    successors "B43" "B56" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4579681994949064406
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1285 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1015 
values: j699 j1290 
=== Succesors ===
=== Usages ===
v1451 j1290 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1015 values: j699 j1290  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1015 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1014 
=== Succesors ===
next: v1353 
=== Usages ===
j1285 v1018 v1019 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1014 #next: v1353  <|@  <|@
f <@~|@floating>@ <|@
tid v1451 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1260 
index: j1285 
=== Succesors ===
=== Usages ===
v1353 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1260 index: j1285  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1353 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1451 
value: v1354 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1021 
=== Usages ===
=== Predecessor ===
v1015 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1451 value: v1354 stateAfter: - lastLocationAccess: - #next: v1021  <|@  <|@
f <@~|@floating>@ <|@
tid j1290 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1285 
y: j228 
=== Succesors ===
=== Usages ===
j1279 j1285 v1294 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1285 y: j228  <|@  <|@
f <@~|@floating>@ <|@
tid v1294 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1291 
y: j1290 
=== Succesors ===
=== Usages ===
v1021 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1291 y: j1290  <|@  <|@
f <@*|@fixed>@ <|@
tid v1021 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1294 
=== Succesors ===
trueSuccessor: v1018 
falseSuccessor: v1020 
=== Usages ===
=== Predecessor ===
v1353 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1294 #trueSuccessor: v1018 #falseSuccessor: v1020  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4570674795694323414
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1018 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1015 
=== Succesors ===
next: v1024 
=== Usages ===
=== Predecessor ===
v1021 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1015 #next: v1024  <|@  <|@
f <@*|@fixed>@ <|@
tid v1024 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1023 
=== Predecessor ===
v1018 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4579681994949064406
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1279 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1023 
values: j699 j1290 
=== Succesors ===
=== Usages ===
v1450 j1284 j1273 v1297 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1023 values: j699 j1290  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1023 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1022 v1024 
=== Succesors ===
next: v1045 
=== Usages ===
j1279 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1022 v1024 #next: v1045  <|@  <|@
f <@~|@floating>@ <|@
tid j1296 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j811 
y: j1128 
=== Succesors ===
=== Usages ===
v1297 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j811 y: j1128  <|@  <|@
f <@~|@floating>@ <|@
tid v1297 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1296 
y: j1279 
=== Succesors ===
=== Usages ===
v1045 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1296 y: j1279  <|@  <|@
f <@*|@fixed>@ <|@
tid v1045 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1297 
=== Succesors ===
trueSuccessor: v1044 
falseSuccessor: v1043 
=== Usages ===
=== Predecessor ===
v1023 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1297 #trueSuccessor: v1044 #falseSuccessor: v1043  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4570674795694323414
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1044 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1048 
=== Usages ===
=== Predecessor ===
v1045 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1048  <|@  <|@
f <@*|@fixed>@ <|@
tid v1048 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1034 
=== Predecessor ===
v1044 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4577549901657061664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1043 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1352 
=== Usages ===
=== Predecessor ===
v1045 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1352  <|@  <|@
f <@~|@floating>@ <|@
tid v1450 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1260 
index: j1279 
=== Succesors ===
=== Usages ===
v1352 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1260 index: j1279  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1352 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1450 
value: v1358 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1033 
=== Usages ===
=== Predecessor ===
v1043 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1450 value: v1358 stateAfter: - lastLocationAccess: - #next: v1033  <|@  <|@
f <@~|@floating>@ <|@
tid j1284 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1279 
y: j718 
=== Succesors ===
=== Usages ===
j1273 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1279 y: j718  <|@  <|@
f <@*|@fixed>@ <|@
tid v1033 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1034 
=== Predecessor ===
v1352 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4579681994949064406
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1273 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1034 
values: j1284 j1279 
=== Succesors ===
=== Usages ===
v1449 j1278 j1267 v1300 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1034 values: j1284 j1279  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1034 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1033 v1048 
=== Succesors ===
next: v1051 
=== Usages ===
j1273 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1033 v1048 #next: v1051  <|@  <|@
f <@~|@floating>@ <|@
tid j1299 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j811 
y: j1132 
=== Succesors ===
=== Usages ===
v1300 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j811 y: j1132  <|@  <|@
f <@~|@floating>@ <|@
tid v1300 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1299 
y: j1273 
=== Succesors ===
=== Usages ===
v1051 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1299 y: j1273  <|@  <|@
f <@*|@fixed>@ <|@
tid v1051 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1300 
=== Succesors ===
trueSuccessor: v1050 
falseSuccessor: v1049 
=== Usages ===
=== Predecessor ===
v1034 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1300 #trueSuccessor: v1050 #falseSuccessor: v1049  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4570674795694323414
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1050 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1054 
=== Usages ===
=== Predecessor ===
v1051 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1054  <|@  <|@
f <@*|@fixed>@ <|@
tid v1054 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1037 
=== Predecessor ===
v1050 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4577549901657061664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1049 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1351 
=== Usages ===
=== Predecessor ===
v1051 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1351  <|@  <|@
f <@~|@floating>@ <|@
tid v1449 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1260 
index: j1273 
=== Succesors ===
=== Usages ===
v1351 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1260 index: j1273  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1351 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1449 
value: v1357 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1036 
=== Usages ===
=== Predecessor ===
v1049 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1449 value: v1357 stateAfter: - lastLocationAccess: - #next: v1036  <|@  <|@
f <@~|@floating>@ <|@
tid j1278 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1273 
y: j1104 
=== Succesors ===
=== Usages ===
j1267 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1273 y: j1104  <|@  <|@
f <@*|@fixed>@ <|@
tid v1036 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1037 
=== Predecessor ===
v1351 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4579681994949064406
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1267 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1037 
values: j1278 j1273 
=== Succesors ===
=== Usages ===
v1448 j1272 j1261 v1303 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1037 values: j1278 j1273  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1037 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1036 v1054 
=== Succesors ===
next: v1057 
=== Usages ===
j1267 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1036 v1054 #next: v1057  <|@  <|@
f <@~|@floating>@ <|@
tid j1302 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j811 
y: j1136 
=== Succesors ===
=== Usages ===
v1303 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j811 y: j1136  <|@  <|@
f <@~|@floating>@ <|@
tid v1303 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1302 
y: j1267 
=== Succesors ===
=== Usages ===
v1057 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1302 y: j1267  <|@  <|@
f <@*|@fixed>@ <|@
tid v1057 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1303 
=== Succesors ===
trueSuccessor: v1056 
falseSuccessor: v1055 
=== Usages ===
=== Predecessor ===
v1037 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1303 #trueSuccessor: v1056 #falseSuccessor: v1055  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4570674795694323414
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1056 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1060 
=== Usages ===
=== Predecessor ===
v1057 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1060  <|@  <|@
f <@*|@fixed>@ <|@
tid v1060 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1040 
=== Predecessor ===
v1056 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4577549901657061664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1055 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1350 
=== Usages ===
=== Predecessor ===
v1057 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1350  <|@  <|@
f <@~|@floating>@ <|@
tid v1448 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1260 
index: j1267 
=== Succesors ===
=== Usages ===
v1350 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1260 index: j1267  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1350 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1448 
value: v1356 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1039 
=== Usages ===
=== Predecessor ===
v1055 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1448 value: v1356 stateAfter: - lastLocationAccess: - #next: v1039  <|@  <|@
f <@~|@floating>@ <|@
tid j1272 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1267 
y: j1082 
=== Succesors ===
=== Usages ===
j1261 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1267 y: j1082  <|@  <|@
f <@*|@fixed>@ <|@
tid v1039 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1040 
=== Predecessor ===
v1350 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4579681994949064406
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1261 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1040 
values: j1272 j1267 
=== Succesors ===
=== Usages ===
v1447 v1306 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1040 values: j1272 j1267  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1040 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1039 v1060 
=== Succesors ===
next: v1063 
=== Usages ===
j1261 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1039 v1060 #next: v1063  <|@  <|@
f <@~|@floating>@ <|@
tid j1305 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j811 
y: j1140 
=== Succesors ===
=== Usages ===
v1306 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j811 y: j1140  <|@  <|@
f <@~|@floating>@ <|@
tid v1306 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1305 
y: j1261 
=== Succesors ===
=== Usages ===
v1063 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1305 y: j1261  <|@  <|@
f <@*|@fixed>@ <|@
tid v1063 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1306 
=== Succesors ===
trueSuccessor: v1062 
falseSuccessor: v1061 
=== Usages ===
=== Predecessor ===
v1040 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1306 #trueSuccessor: v1062 #falseSuccessor: v1061  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4570674795694323414
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1062 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1066 
=== Usages ===
=== Predecessor ===
v1063 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1066  <|@  <|@
f <@*|@fixed>@ <|@
tid v1066 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1027 
=== Predecessor ===
v1062 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4577549901657061664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1061 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1349 
=== Usages ===
=== Predecessor ===
v1063 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1349  <|@  <|@
f <@~|@floating>@ <|@
tid v1447 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1260 
index: j1261 
=== Succesors ===
=== Usages ===
v1349 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1260 index: j1261  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1349 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1447 
value: i1355 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1042 
=== Usages ===
=== Predecessor ===
v1061 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1447 value: i1355 stateAfter: - lastLocationAccess: - #next: v1042  <|@  <|@
f <@*|@fixed>@ <|@
tid v1042 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1027 
=== Predecessor ===
v1349 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4577549901657061664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1020 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1019 
=== Usages ===
=== Predecessor ===
v1021 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1019  <|@  <|@
f <@*|@fixed>@ <|@
tid v1019 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v1015 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1020 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1015  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B58" 
    xhandlers
    flags 
    probability 4579681994949064406
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1008 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1026 
=== Usages ===
=== Predecessor ===
v1010 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1026  <|@  <|@
f <@*|@fixed>@ <|@
tid v1026 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1027 
=== Predecessor ===
v1008 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B55" "B54" 
    successors 
    xhandlers
    flags 
    probability 4584185594576434902
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1027 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1026 v1042 v1066 
=== Succesors ===
next: a602 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1026 v1042 v1066 #next: a602  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a602 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a692 
=== Succesors ===
next: v295 
=== Usages ===
v1386 a294 v1385 v1388 v1387 v1384 
=== Predecessor ===
v1027 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a692 #next: v295  <|@  <|@
f <@~|@floating>@ <|@
tid a294 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
op: Compress
stamp: n! -
=== Inputs ===
value: a602 
=== Succesors ===
=== Usages ===
v295 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a602  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: AbstractStringBuilder.value
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1377 
value: a294 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j728 
=== Usages ===
=== Predecessor ===
a602 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1377 value: a294 stateAfter: - lastLocationAccess: - #next: j728  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j728 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v734 
=== Usages ===
j730 
=== Predecessor ===
v295 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v734  <|@  <|@
f <@~|@floating>@ <|@
tid j730 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j728 
y: i729 
=== Succesors ===
=== Usages ===
v1409 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j728 y: i729  <|@  <|@
f <@~|@floating>@ <|@
tid v1409 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j730 
index: j733 
=== Succesors ===
=== Usages ===
v734 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j730 index: j733  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v734 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1409 
value: i735 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v296 
=== Usages ===
=== Predecessor ===
j728 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1409 value: i735 stateAfter: - lastLocationAccess: - #next: v296  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:623) [bci: 111]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1376 
value: i18 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v304 
=== Usages ===
=== Predecessor ===
v734 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1376 value: i18 stateAfter: - lastLocationAccess: - #next: v304  <|@  <|@
f <@~|@floating>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v483 v479 
=== Succesors ===
=== Usages ===
v313 v340 v331 v304 v322 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v483 v479  <|@  <|@
f <@~|@floating>@ <|@
tid v1384 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a602 
index: i1365 
=== Succesors ===
=== Usages ===
v304 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a602 index: i1365  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:623) [bci: 116]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v458 
address: v1384 
value: i425 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v305 
=== Usages ===
=== Predecessor ===
v296 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v458 address: v1384 value: i425 stateAfter: - lastLocationAccess: - #next: v305  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:624) [bci: 129]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1376 
value: i191 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v313 
=== Usages ===
=== Predecessor ===
v304 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1376 value: i191 stateAfter: - lastLocationAccess: - #next: v313  <|@  <|@
f <@~|@floating>@ <|@
tid v1385 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a602 
index: i18 
=== Succesors ===
=== Usages ===
v313 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a602 index: i18  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:624) [bci: 134]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v458 
address: v1385 
value: i427 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v314 
=== Usages ===
=== Predecessor ===
v305 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v458 address: v1385 value: i427 stateAfter: - lastLocationAccess: - #next: v314  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:625) [bci: 147]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1376 
value: i193 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v322 
=== Usages ===
=== Predecessor ===
v313 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1376 value: i193 stateAfter: - lastLocationAccess: - #next: v322  <|@  <|@
f <@~|@floating>@ <|@
tid v1386 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a602 
index: i191 
=== Succesors ===
=== Usages ===
v322 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a602 index: i191  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:625) [bci: 152]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v458 
address: v1386 
value: i429 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v323 
=== Usages ===
=== Predecessor ===
v314 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v458 address: v1386 value: i429 stateAfter: - lastLocationAccess: - #next: v323  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 165]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1376 
value: i11 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v331 
=== Usages ===
=== Predecessor ===
v322 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1376 value: i11 stateAfter: - lastLocationAccess: - #next: v331  <|@  <|@
f <@~|@floating>@ <|@
tid v1387 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a602 
index: i193 
=== Succesors ===
=== Usages ===
v331 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a602 index: i193  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 170]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v458 
address: v1387 
value: i431 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v332 
=== Usages ===
=== Predecessor ===
v323 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v458 address: v1387 value: i431 stateAfter: - lastLocationAccess: - #next: v332  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:627) [bci: 183]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1376 
value: i51 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v340 
=== Usages ===
=== Predecessor ===
v331 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1376 value: i51 stateAfter: - lastLocationAccess: - #next: v340  <|@  <|@
f <@~|@floating>@ <|@
tid v1388 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a602 
index: i11 
=== Succesors ===
=== Usages ===
v340 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a602 index: i11  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:627) [bci: 188]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v458 
address: v1388 
value: i433 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v100 
=== Usages ===
=== Predecessor ===
v332 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v458 address: v1388 value: i433 stateAfter: - lastLocationAccess: - #next: v100  <|@  <|@
f <@*|@fixed>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 189]
stamp: void
=== Inputs ===
result: a1 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v340 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4577549901657061664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v957 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v956 
=== Usages ===
=== Predecessor ===
v958 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v956  <|@  <|@
f <@*|@fixed>@ <|@
tid v956 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v952 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v957 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v952  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:627) [bci: 188]
stamp: void
=== Inputs ===
=== Succesors ===
next: v650 
=== Usages ===
=== Predecessor ===
v486 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v650  <|@  <|@
f <@~|@floating>@ <|@
tid i651 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -85531
stableDimension: 0
stamp: i32 [-85531] ⇊00000000fffeb1e5 ⇈00000000fffeb1e5
stampKind: i32
value: int[-85531|0xfffffffffffeb1e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i629 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v650 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v625 
=== Predecessor ===
v485 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:623) [bci: 116]
stamp: void
=== Inputs ===
=== Succesors ===
next: v648 
=== Usages ===
=== Predecessor ===
v482 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v648  <|@  <|@
f <@~|@floating>@ <|@
tid i649 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -76315
stableDimension: 0
stamp: i32 [-76315] ⇊00000000fffed5e5 ⇈00000000fffed5e5
stampKind: i32
value: int[-76315|0xfffffffffffed5e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i629 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v648 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v625 
=== Predecessor ===
v481 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B63" "B68" 
    xhandlers
    flags 
    probability 4600344360905117332
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v107 
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v107  <|@  <|@
f <@~|@floating>@ <|@
tid i103 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: i32
=== Inputs ===
x: i11 
y: i1364 
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i11 y: i1364  <|@  <|@
f <@~|@floating>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i103 
y: i17 
=== Succesors ===
=== Usages ===
v107 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i103 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid i444 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:619) [bci: 67]
rawvalue: 117
stableDimension: 0
stamp: i16 [117] ⇊0000000000000075 ⇈0000000000000075
stampKind: i16
value: short[117|0x75]
=== Inputs ===
=== Succesors ===
=== Usages ===
v373 v414 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i442 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:618) [bci: 49]
rawvalue: 114
stableDimension: 0
stamp: i16 [114] ⇊0000000000000072 ⇈0000000000000072
stampKind: i16
value: short[114|0x72]
=== Inputs ===
=== Succesors ===
=== Usages ===
v362 v405 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i440 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:617) [bci: 31]
rawvalue: 116
stableDimension: 0
stamp: i16 [116] ⇊0000000000000074 ⇈0000000000000074
stampKind: i16
value: short[116|0x74]
=== Inputs ===
=== Succesors ===
=== Usages ===
v351 v396 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: void
trueSuccessorProbability: 0.953003048985209
=== Inputs ===
condition: v104 
=== Succesors ===
trueSuccessor: v105 
falseSuccessor: v106 
=== Usages ===
=== Predecessor ===
v7 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v104 #trueSuccessor: v105 #falseSuccessor: v106  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B67" 
    xhandlers
    flags 
    probability 4600030762423806969
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v490 
=== Usages ===
=== Predecessor ===
v107 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v490  <|@  <|@
f <@~|@floating>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:617) [bci: 31]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1365 
y: i1364 
=== Succesors ===
=== Usages ===
v490 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1365 y: i1364  <|@  <|@
f <@*|@fixed>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:617) [bci: 31]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v343 
=== Succesors ===
trueSuccessor: v487 
falseSuccessor: v489 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v343 #trueSuccessor: v487 #falseSuccessor: v489  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4600030762423806969
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:617) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v494 
=== Usages ===
v455 
=== Predecessor ===
v490 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v494  <|@  <|@
f <@~|@floating>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:620) [bci: 85]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i193 
y: i1364 
=== Succesors ===
=== Usages ===
v494 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i193 y: i1364  <|@  <|@
f <@*|@fixed>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:620) [bci: 85]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v376 
=== Succesors ===
trueSuccessor: v491 
falseSuccessor: v493 
=== Usages ===
=== Predecessor ===
v487 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v376 #trueSuccessor: v491 #falseSuccessor: v493  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors 
    xhandlers
    flags 
    probability 4600030762423806969
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v491 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:620) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v341 
=== Usages ===
v455 
=== Predecessor ===
v494 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v341  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:617) [bci: 26]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1376 
value: i18 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v351 
=== Usages ===
=== Predecessor ===
v491 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1376 value: i18 stateAfter: - lastLocationAccess: - #next: v351  <|@  <|@
f <@~|@floating>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v491 v487 
=== Succesors ===
=== Usages ===
v362 v383 v373 v351 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v491 v487  <|@  <|@
f <@~|@floating>@ <|@
tid a231 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1363 
=== Succesors ===
=== Usages ===
v1392 v1390 v1389 v1391 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1363  <|@  <|@
f <@~|@floating>@ <|@
tid v1389 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a231 
index: i1365 
=== Succesors ===
=== Usages ===
v351 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a231 index: i1365  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:617) [bci: 31]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v455 
address: v1389 
value: i440 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v352 
=== Usages ===
=== Predecessor ===
v341 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v455 address: v1389 value: i440 stateAfter: - lastLocationAccess: - #next: v352  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:618) [bci: 44]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1376 
value: i191 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v362 
=== Usages ===
=== Predecessor ===
v351 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1376 value: i191 stateAfter: - lastLocationAccess: - #next: v362  <|@  <|@
f <@~|@floating>@ <|@
tid v1390 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a231 
index: i18 
=== Succesors ===
=== Usages ===
v362 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a231 index: i18  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:618) [bci: 49]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v455 
address: v1390 
value: i442 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v363 
=== Usages ===
=== Predecessor ===
v352 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v455 address: v1390 value: i442 stateAfter: - lastLocationAccess: - #next: v363  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:619) [bci: 62]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1376 
value: i193 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v373 
=== Usages ===
=== Predecessor ===
v362 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1376 value: i193 stateAfter: - lastLocationAccess: - #next: v373  <|@  <|@
f <@~|@floating>@ <|@
tid v1391 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a231 
index: i191 
=== Succesors ===
=== Usages ===
v373 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a231 index: i191  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:619) [bci: 67]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v455 
address: v1391 
value: i444 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v374 
=== Usages ===
=== Predecessor ===
v363 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v455 address: v1391 value: i444 stateAfter: - lastLocationAccess: - #next: v374  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:620) [bci: 80]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1376 
value: i11 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v383 
=== Usages ===
=== Predecessor ===
v373 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1376 value: i11 stateAfter: - lastLocationAccess: - #next: v383  <|@  <|@
f <@~|@floating>@ <|@
tid v1392 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a231 
index: i193 
=== Succesors ===
=== Usages ===
v383 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a231 index: i193  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:620) [bci: 85]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v455 
address: v1392 
value: i433 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v224 
=== Usages ===
=== Predecessor ===
v374 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v455 address: v1392 value: i433 stateAfter: - lastLocationAccess: - #next: v224  <|@  <|@
f <@*|@fixed>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 189]
stamp: void
=== Inputs ===
result: a1 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v383 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v493 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:620) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v642 
=== Usages ===
=== Predecessor ===
v494 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v642  <|@  <|@
f <@~|@floating>@ <|@
tid i643 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -96539
stableDimension: 0
stamp: i32 [-96539] ⇊00000000fffe86e5 ⇈00000000fffe86e5
stampKind: i32
value: int[-96539|0xfffffffffffe86e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i629 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v642 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v625 
=== Predecessor ===
v493 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:617) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v640 
=== Usages ===
=== Predecessor ===
v490 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v640  <|@  <|@
f <@~|@floating>@ <|@
tid i641 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -88091
stableDimension: 0
stamp: i32 [-88091] ⇊00000000fffea7e5 ⇈00000000fffea7e5
stampKind: i32
value: int[-88091|0xfffffffffffea7e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i629 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v625 
=== Predecessor ===
v489 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" "B70" 
    xhandlers
    flags 
    probability 4580674797109389737
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v498 
=== Usages ===
=== Predecessor ===
v107 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v498  <|@  <|@
f <@~|@floating>@ <|@
tid i145 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:150) [bci: 6]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i1364 
y: i17 
=== Succesors ===
=== Usages ===
i147 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1364 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid i147 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:150) [bci: 8]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i145 
y: i146 
=== Succesors ===
=== Usages ===
i148 i450 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i145 y: i146  <|@  <|@
f <@~|@floating>@ <|@
tid i148 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:151) [bci: 12]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: i32
=== Inputs ===
x: i147 
y: i11 
=== Succesors ===
=== Usages ===
v149 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i147 y: i11  <|@  <|@
f <@~|@floating>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:151) [bci: 13]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i148 
y: i4 
=== Succesors ===
=== Usages ===
i450 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i148 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i450 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v149 
trueValue: i11 
falseValue: i147 
=== Succesors ===
=== Usages ===
v416 v389 v158 i161 j799 v745 v529 i590 a760 v779 i738 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v149 trueValue: i11 falseValue: i147  <|@  <|@
f <@~|@floating>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i450 
y: i17 
=== Succesors ===
=== Usages ===
v498 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i450 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v498 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v158 
=== Succesors ===
trueSuccessor: v497 
falseSuccessor: v495 
=== Usages ===
=== Predecessor ===
v106 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v158 #trueSuccessor: v497 #falseSuccessor: v495  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v638 
=== Usages ===
=== Predecessor ===
v498 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v638  <|@  <|@
f <@~|@floating>@ <|@
tid i639 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -98323
stableDimension: 0
stamp: i32 [-98323] ⇊00000000fffe7fed ⇈00000000fffe7fed
stampKind: i32
value: int[-98323|0xfffffffffffe7fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i629 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v625 
=== Predecessor ===
v497 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4580674797109389737
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v502 
=== Usages ===
=== Predecessor ===
v498 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v502  <|@  <|@
f <@~|@floating>@ <|@
tid i161 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 25]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: i32
=== Inputs ===
x: i160 
y: i450 
=== Succesors ===
=== Usages ===
v162 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i160 y: i450  <|@  <|@
f <@~|@floating>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i161 
y: i4 
=== Succesors ===
=== Usages ===
v502 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i161 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v162 
=== Succesors ===
trueSuccessor: v501 
falseSuccessor: v499 
=== Usages ===
=== Predecessor ===
v495 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v162 #trueSuccessor: v501 #falseSuccessor: v499  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v646 
=== Usages ===
=== Predecessor ===
v502 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v646  <|@  <|@
f <@~|@floating>@ <|@
tid i647 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -98579
stableDimension: 0
stamp: i32 [-98579] ⇊00000000fffe7eed ⇈00000000fffe7eed
stampKind: i32
value: int[-98579|0xfffffffffffe7eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i629 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v646 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v625 
=== Predecessor ===
v501 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B122" 
    xhandlers
    flags 
    probability 4580674797109389737
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v506 
=== Usages ===
=== Predecessor ===
v502 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v506  <|@  <|@
f <@~|@floating>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:617) [bci: 31]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1365 
y: i450 
=== Succesors ===
=== Usages ===
v506 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1365 y: i450  <|@  <|@
f <@*|@fixed>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:617) [bci: 31]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v389 
=== Succesors ===
trueSuccessor: v503 
falseSuccessor: v505 
=== Usages ===
=== Predecessor ===
v499 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v389 #trueSuccessor: v503 #falseSuccessor: v505  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B121" 
    xhandlers
    flags 
    probability 4580674797109389737
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v503 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:617) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v510 
=== Usages ===
v456 
=== Predecessor ===
v506 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v510  <|@  <|@
f <@~|@floating>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:620) [bci: 85]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i193 
y: i450 
=== Succesors ===
=== Usages ===
v510 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i193 y: i450  <|@  <|@
f <@*|@fixed>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:620) [bci: 85]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v416 
=== Succesors ===
trueSuccessor: v507 
falseSuccessor: v509 
=== Usages ===
=== Predecessor ===
v503 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v416 #trueSuccessor: v507 #falseSuccessor: v509  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B78" 
    xhandlers
    flags 
    probability 4580674797109389737
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:620) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: j740 
=== Usages ===
v456 
=== Predecessor ===
v510 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j740  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j740 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j776 
=== Usages ===
v1410 v1411 
=== Predecessor ===
v507 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j776  <|@  <|@
f <@~|@floating>@ <|@
tid v1410 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j740 
index: - 
=== Succesors ===
=== Usages ===
j776 v778 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j740 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j776 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1410 
=== Succesors ===
next: j777 
=== Usages ===
j744 v1412 v1413 a759 v1418 v1414 v1415 v1416 v1417 
=== Predecessor ===
j740 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1410 #next: j777  <|@  <|@
f <@~|@floating>@ <|@
tid v1411 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j740 
index: - 
=== Succesors ===
=== Usages ===
j777 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j740 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j777 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1411 
=== Succesors ===
next: v748 
=== Usages ===
v749 
=== Predecessor ===
j776 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1411 #next: v748  <|@  <|@
f <@~|@floating>@ <|@
tid v745 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i450 
y: i672 
=== Succesors ===
=== Usages ===
v748 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i450 y: i672  <|@  <|@
f <@*|@fixed>@ <|@
tid v748 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v745 
=== Succesors ===
trueSuccessor: v747 
falseSuccessor: v746 
=== Usages ===
=== Predecessor ===
j777 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v745 #trueSuccessor: v747 #falseSuccessor: v746  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4580173039539293157
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v747 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v755 
=== Usages ===
=== Predecessor ===
v748 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v755  <|@  <|@
f <@~|@floating>@ <|@
tid i738 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i450 
y: i17 
=== Succesors ===
=== Usages ===
i767 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i450 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid i767 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i738 
y: i695 
=== Succesors ===
=== Usages ===
i739 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i738 y: i695  <|@  <|@
f <@~|@floating>@ <|@
tid i739 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i767 
y: i665 
=== Succesors ===
=== Usages ===
j743 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i767 y: i665  <|@  <|@
f <@~|@floating>@ <|@
tid j743 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i739 
=== Succesors ===
=== Usages ===
j744 v1414 v1415 v1416 v1417 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i739  <|@  <|@
f <@~|@floating>@ <|@
tid j744 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: i64
=== Inputs ===
x: j743 
y: j776 
=== Succesors ===
=== Usages ===
v749 v778 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j743 y: j776  <|@  <|@
f <@~|@floating>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j777 
y: j744 
=== Succesors ===
=== Usages ===
v755 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j777 y: j744  <|@  <|@
f <@*|@fixed>@ <|@
tid v755 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v749 
=== Succesors ===
trueSuccessor: v754 
falseSuccessor: v753 
=== Usages ===
=== Predecessor ===
v747 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v749 #trueSuccessor: v754 #falseSuccessor: v753  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B79" 
    xhandlers
    flags 
    probability 4549912271224343072
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v754 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v752 
=== Usages ===
=== Predecessor ===
v755 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v752  <|@  <|@
f <@*|@fixed>@ <|@
tid v752 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v751 
=== Predecessor ===
v754 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B80" 
    xhandlers
    flags 
    probability 4580094941680174497
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v753 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v778 
=== Usages ===
=== Predecessor ===
v755 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v778  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v778 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1410 
value: j744 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v769 
=== Usages ===
=== Predecessor ===
v753 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1410 value: j744 stateAfter: - lastLocationAccess: - #next: v769  <|@  <|@
f <@~|@floating>@ <|@
tid v1414 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j743 
index: j776 
=== Succesors ===
=== Usages ===
v769 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j743 index: j776  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v769 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: void
=== Inputs ===
address: v1414 
=== Succesors ===
next: v771 
=== Usages ===
=== Predecessor ===
v778 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1414 #next: v771  <|@  <|@
f <@~|@floating>@ <|@
tid v1415 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j743 
index: j776 
=== Succesors ===
=== Usages ===
v771 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j743 index: j776  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v771 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: void
=== Inputs ===
address: v1415 
=== Succesors ===
next: v773 
=== Usages ===
=== Predecessor ===
v769 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1415 #next: v773  <|@  <|@
f <@~|@floating>@ <|@
tid v1416 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j743 
index: j776 
=== Succesors ===
=== Usages ===
v773 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j743 index: j776  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v773 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: void
=== Inputs ===
address: v1416 
=== Succesors ===
next: v775 
=== Usages ===
=== Predecessor ===
v771 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1416 #next: v775  <|@  <|@
f <@~|@floating>@ <|@
tid v1417 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j743 
index: j776 
=== Succesors ===
=== Usages ===
v775 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j743 index: j776  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v775 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: void
=== Inputs ===
address: v1417 
=== Succesors ===
next: v779 
=== Usages ===
=== Predecessor ===
v773 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1417 #next: v779  <|@  <|@
f <@~|@floating>@ <|@
tid v1412 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j776 
index: - 
=== Succesors ===
=== Usages ===
v779 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j776 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1412 
value: i450 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v780 
=== Usages ===
=== Predecessor ===
v775 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1412 value: i450 stateAfter: - lastLocationAccess: - #next: v780  <|@  <|@
f <@~|@floating>@ <|@
tid v1413 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j776 
index: - 
=== Succesors ===
=== Usages ===
v780 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j776 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v780 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1413 
value: j663 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v783 
=== Usages ===
=== Predecessor ===
v779 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1413 value: j663 stateAfter: - lastLocationAccess: - #next: v783  <|@  <|@
f <@~|@floating>@ <|@
tid v1418 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j776 
index: - 
=== Succesors ===
=== Usages ===
v783 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j776 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v783 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1418 
value: v798 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v758 
=== Usages ===
=== Predecessor ===
v780 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1418 value: v798 stateAfter: - lastLocationAccess: - #next: v758  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v758 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: a759 
=== Usages ===
=== Predecessor ===
v783 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a759  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a759 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j776 
=== Succesors ===
next: v761 
=== Usages ===
a764 
=== Predecessor ===
v758 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j776 #next: v761  <|@  <|@
f <@*|@fixed>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v762 
=== Predecessor ===
a759 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    probability 4565670944020487232
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v746 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v750 
=== Usages ===
=== Predecessor ===
v748 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v750  <|@  <|@
f <@*|@fixed>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v751 
=== Predecessor ===
v746 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B76" 
    successors "B80" 
    xhandlers
    flags 
    probability 4566393474921426308
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v751 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v750 v752 
=== Succesors ===
next: a760 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v750 v752 #next: a760  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a760 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v662 i450 i4 
=== Succesors ===
next: v763 
=== Usages ===
a764 
=== Predecessor ===
v751 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v662 i450 i4 #next: v763  <|@  <|@
f <@*|@fixed>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v762 
=== Predecessor ===
a760 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4580674797109389737
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a764 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v762 
values: a759 a760 
=== Succesors ===
=== Usages ===
v1420 a598 v1398 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v762 values: a759 a760  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v761 v763 
=== Succesors ===
next: v1076 
=== Usages ===
a764 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v761 v763 #next: v1076  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1076 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v820 
=== Usages ===
j1077 j1079 
=== Predecessor ===
v762 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v820  <|@  <|@
f <@~|@floating>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1364 
y: i450 
=== Succesors ===
=== Usages ===
i590 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1364 y: i450  <|@  <|@
f <@~|@floating>@ <|@
tid i590 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v529 
trueValue: i1364 
falseValue: i450 
=== Succesors ===
=== Usages ===
j800 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v529 trueValue: i1364 falseValue: i450  <|@  <|@
f <@~|@floating>@ <|@
tid j800 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i590 
=== Succesors ===
=== Usages ===
j1141 v1420 j804 v817 v1071 j1123 j1129 j1133 j1137 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i590  <|@  <|@
f <@~|@floating>@ <|@
tid v817 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j800 
y: j663 
=== Succesors ===
=== Usages ===
v820 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j800 y: j663  <|@  <|@
f <@*|@fixed>@ <|@
tid v820 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v817 
=== Succesors ===
trueSuccessor: v818 
falseSuccessor: v819 
=== Usages ===
=== Predecessor ===
v1076 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v817 #trueSuccessor: v818 #falseSuccessor: v819  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B99" 
    xhandlers
    flags 
    probability 4576171197482019241
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v818 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v837 
=== Usages ===
=== Predecessor ===
v820 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v837  <|@  <|@
f <@*|@fixed>@ <|@
tid v837 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v838 
=== Predecessor ===
v818 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    probability 4576171197482019241
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v819 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v823 
=== Usages ===
=== Predecessor ===
v820 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v823  <|@  <|@
f <@~|@floating>@ <|@
tid v1398 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a764 
index: - 
=== Succesors ===
=== Usages ===
j1079 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a764 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1079 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1076 
address: v1398 
=== Succesors ===
=== Usages ===
v1422 v1424 v1426 v1428 v1430 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1076 address: v1398  <|@  <|@
f <@~|@floating>@ <|@
tid v1452 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1363 
=== Succesors ===
=== Usages ===
j1077 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1363  <|@  <|@
f <@~|@floating>@ <|@
tid j1077 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1076 
address: v1452 
=== Succesors ===
=== Usages ===
v1423 v1425 v1427 v1429 v1431 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1076 address: v1452  <|@  <|@
f <@~|@floating>@ <|@
tid j1123 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j800 
y: j1122 
=== Succesors ===
=== Usages ===
v1124 v1126 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j800 y: j1122  <|@  <|@
f <@~|@floating>@ <|@
tid v1124 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1123 
y: j699 
=== Succesors ===
=== Usages ===
v823 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1123 y: j699  <|@  <|@
f <@*|@fixed>@ <|@
tid v823 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1124 
=== Succesors ===
trueSuccessor: v821 
falseSuccessor: v822 
=== Usages ===
=== Predecessor ===
v819 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1124 #trueSuccessor: v821 #falseSuccessor: v822  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B87" 
    xhandlers
    flags 
    probability 4574176385705131646
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v821 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v833 
=== Usages ===
=== Predecessor ===
v823 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v833  <|@  <|@
f <@*|@fixed>@ <|@
tid v833 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v834 
=== Predecessor ===
v821 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    probability 4567163998227278249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v822 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v824 
=== Usages ===
=== Predecessor ===
v823 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v824  <|@  <|@
f <@*|@fixed>@ <|@
tid v824 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v825 
=== Predecessor ===
v822 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B120" 
    successors "B86" "B120" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4576171197482019241
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1114 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v825 
values: j699 j1121 
=== Succesors ===
=== Usages ===
v1431 j1121 v1430 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v825 values: j699 j1121  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v825 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v824 
=== Succesors ===
next: v1371 
=== Usages ===
v1371 v829 v830 j1114 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v824 #next: v1371  <|@  <|@
f <@~|@floating>@ <|@
tid v1431 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1077 
index: j1114 
=== Succesors ===
=== Usages ===
v1371 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1077 index: j1114  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1371 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v825 
address: v1431 
=== Succesors ===
next: v1328 
=== Usages ===
v1328 
=== Predecessor ===
v825 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v825 address: v1431 #next: v1328  <|@  <|@
f <@~|@floating>@ <|@
tid v1430 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1079 
index: j1114 
=== Succesors ===
=== Usages ===
v1328 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1079 index: j1114  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1328 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1430 
value: v1371 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v832 
=== Usages ===
=== Predecessor ===
v1371 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1430 value: v1371 stateAfter: - lastLocationAccess: - #next: v832  <|@  <|@
f <@~|@floating>@ <|@
tid j1121 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1114 
y: j228 
=== Succesors ===
=== Usages ===
j1106 j1114 v1126 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1114 y: j228  <|@  <|@
f <@~|@floating>@ <|@
tid v1126 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1123 
y: j1121 
=== Succesors ===
=== Usages ===
v832 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1123 y: j1121  <|@  <|@
f <@*|@fixed>@ <|@
tid v832 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1126 
=== Succesors ===
trueSuccessor: v829 
falseSuccessor: v831 
=== Usages ===
=== Predecessor ===
v1328 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1126 #trueSuccessor: v829 #falseSuccessor: v831  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B87" 
    xhandlers
    flags 
    probability 4567163998227278249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v829 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v825 
=== Succesors ===
next: v835 
=== Usages ===
=== Predecessor ===
v832 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v825 #next: v835  <|@  <|@
f <@*|@fixed>@ <|@
tid v835 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v834 
=== Predecessor ===
v829 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B83" "B86" 
    successors "B88" "B89" 
    xhandlers
    flags 
    probability 4576171197482019241
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1106 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v834 
values: j699 j1121 
=== Succesors ===
=== Usages ===
v1429 j1113 j1097 v1130 v1428 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v834 values: j699 j1121  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v834 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v833 v835 
=== Succesors ===
next: v856 
=== Usages ===
j1106 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v833 v835 #next: v856  <|@  <|@
f <@~|@floating>@ <|@
tid j1129 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j800 
y: j1128 
=== Succesors ===
=== Usages ===
v1130 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j800 y: j1128  <|@  <|@
f <@~|@floating>@ <|@
tid v1130 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1129 
y: j1106 
=== Succesors ===
=== Usages ===
v856 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1129 y: j1106  <|@  <|@
f <@*|@fixed>@ <|@
tid v856 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1130 
=== Succesors ===
trueSuccessor: v855 
falseSuccessor: v854 
=== Usages ===
=== Predecessor ===
v834 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1130 #trueSuccessor: v855 #falseSuccessor: v854  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4567163998227278249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v855 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v859 
=== Usages ===
=== Predecessor ===
v856 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v859  <|@  <|@
f <@*|@fixed>@ <|@
tid v859 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v845 
=== Predecessor ===
v855 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4574176385705131646
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v854 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1372 
=== Usages ===
v1372 
=== Predecessor ===
v856 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1372  <|@  <|@
f <@~|@floating>@ <|@
tid v1429 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1077 
index: j1106 
=== Succesors ===
=== Usages ===
v1372 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1077 index: j1106  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1372 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v854 
address: v1429 
=== Succesors ===
next: v1326 
=== Usages ===
v1326 
=== Predecessor ===
v854 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v854 address: v1429 #next: v1326  <|@  <|@
f <@~|@floating>@ <|@
tid v1428 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1079 
index: j1106 
=== Succesors ===
=== Usages ===
v1326 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1079 index: j1106  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1326 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1428 
value: v1372 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v844 
=== Usages ===
=== Predecessor ===
v1372 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1428 value: v1372 stateAfter: - lastLocationAccess: - #next: v844  <|@  <|@
f <@~|@floating>@ <|@
tid j1113 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1106 
y: j718 
=== Succesors ===
=== Usages ===
j1097 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1106 y: j718  <|@  <|@
f <@*|@fixed>@ <|@
tid v844 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v845 
=== Predecessor ===
v1326 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B88" 
    successors "B91" "B92" 
    xhandlers
    flags 
    probability 4576171197482019241
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1097 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v845 
values: j1113 j1106 
=== Succesors ===
=== Usages ===
v1427 j1105 j1089 v1134 v1426 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v845 values: j1113 j1106  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v845 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v844 v859 
=== Succesors ===
next: v862 
=== Usages ===
j1097 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v844 v859 #next: v862  <|@  <|@
f <@~|@floating>@ <|@
tid j1133 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j800 
y: j1132 
=== Succesors ===
=== Usages ===
v1134 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j800 y: j1132  <|@  <|@
f <@~|@floating>@ <|@
tid v1134 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1133 
y: j1097 
=== Succesors ===
=== Usages ===
v862 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1133 y: j1097  <|@  <|@
f <@*|@fixed>@ <|@
tid v862 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1134 
=== Succesors ===
trueSuccessor: v861 
falseSuccessor: v860 
=== Usages ===
=== Predecessor ===
v845 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1134 #trueSuccessor: v861 #falseSuccessor: v860  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" 
    xhandlers
    flags 
    probability 4567163998227278249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v861 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v865 
=== Usages ===
=== Predecessor ===
v862 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v865  <|@  <|@
f <@*|@fixed>@ <|@
tid v865 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v848 
=== Predecessor ===
v861 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" 
    xhandlers
    flags 
    probability 4574176385705131646
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v860 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1373 
=== Usages ===
v1373 
=== Predecessor ===
v862 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1373  <|@  <|@
f <@~|@floating>@ <|@
tid v1427 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1077 
index: j1097 
=== Succesors ===
=== Usages ===
v1373 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1077 index: j1097  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1373 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v860 
address: v1427 
=== Succesors ===
next: v1324 
=== Usages ===
v1324 
=== Predecessor ===
v860 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v860 address: v1427 #next: v1324  <|@  <|@
f <@~|@floating>@ <|@
tid v1426 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1079 
index: j1097 
=== Succesors ===
=== Usages ===
v1324 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1079 index: j1097  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1324 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1426 
value: v1373 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v847 
=== Usages ===
=== Predecessor ===
v1373 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1426 value: v1373 stateAfter: - lastLocationAccess: - #next: v847  <|@  <|@
f <@~|@floating>@ <|@
tid j1105 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1097 
y: j1104 
=== Succesors ===
=== Usages ===
j1089 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1097 y: j1104  <|@  <|@
f <@*|@fixed>@ <|@
tid v847 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v848 
=== Predecessor ===
v1324 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" "B91" 
    successors "B94" "B95" 
    xhandlers
    flags 
    probability 4576171197482019241
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1089 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v848 
values: j1105 j1097 
=== Succesors ===
=== Usages ===
v1425 j1096 j1080 v1138 v1424 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v848 values: j1105 j1097  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v848 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v847 v865 
=== Succesors ===
next: v868 
=== Usages ===
j1089 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v847 v865 #next: v868  <|@  <|@
f <@~|@floating>@ <|@
tid j1137 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j800 
y: j1136 
=== Succesors ===
=== Usages ===
v1138 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j800 y: j1136  <|@  <|@
f <@~|@floating>@ <|@
tid v1138 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1137 
y: j1089 
=== Succesors ===
=== Usages ===
v868 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1137 y: j1089  <|@  <|@
f <@*|@fixed>@ <|@
tid v868 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1138 
=== Succesors ===
trueSuccessor: v867 
falseSuccessor: v866 
=== Usages ===
=== Predecessor ===
v848 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1138 #trueSuccessor: v867 #falseSuccessor: v866  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" 
    xhandlers
    flags 
    probability 4567163998227278249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v867 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v871 
=== Usages ===
=== Predecessor ===
v868 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v871  <|@  <|@
f <@*|@fixed>@ <|@
tid v871 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v851 
=== Predecessor ===
v867 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" 
    xhandlers
    flags 
    probability 4574176385705131646
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v866 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1374 
=== Usages ===
v1374 
=== Predecessor ===
v868 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1374  <|@  <|@
f <@~|@floating>@ <|@
tid v1425 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1077 
index: j1089 
=== Succesors ===
=== Usages ===
v1374 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1077 index: j1089  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1374 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v866 
address: v1425 
=== Succesors ===
next: v1322 
=== Usages ===
v1322 
=== Predecessor ===
v866 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v866 address: v1425 #next: v1322  <|@  <|@
f <@~|@floating>@ <|@
tid v1424 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1079 
index: j1089 
=== Succesors ===
=== Usages ===
v1322 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1079 index: j1089  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1322 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1424 
value: v1374 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v850 
=== Usages ===
=== Predecessor ===
v1374 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1424 value: v1374 stateAfter: - lastLocationAccess: - #next: v850  <|@  <|@
f <@~|@floating>@ <|@
tid j1096 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1089 
y: j1082 
=== Succesors ===
=== Usages ===
j1080 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1089 y: j1082  <|@  <|@
f <@*|@fixed>@ <|@
tid v850 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v851 
=== Predecessor ===
v1322 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" "B94" 
    successors "B97" "B98" 
    xhandlers
    flags 
    probability 4576171197482019241
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1080 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v851 
values: j1096 j1089 
=== Succesors ===
=== Usages ===
v1423 v1142 v1422 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v851 values: j1096 j1089  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v851 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v850 v871 
=== Succesors ===
next: v874 
=== Usages ===
j1080 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v850 v871 #next: v874  <|@  <|@
f <@~|@floating>@ <|@
tid j1141 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j800 
y: j1140 
=== Succesors ===
=== Usages ===
v1142 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j800 y: j1140  <|@  <|@
f <@~|@floating>@ <|@
tid v1142 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1141 
y: j1080 
=== Succesors ===
=== Usages ===
v874 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1141 y: j1080  <|@  <|@
f <@*|@fixed>@ <|@
tid v874 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1142 
=== Succesors ===
trueSuccessor: v873 
falseSuccessor: v872 
=== Usages ===
=== Predecessor ===
v851 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1142 #trueSuccessor: v873 #falseSuccessor: v872  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B99" 
    xhandlers
    flags 
    probability 4567163998227278249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v873 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v877 
=== Usages ===
=== Predecessor ===
v874 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v877  <|@  <|@
f <@*|@fixed>@ <|@
tid v877 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v838 
=== Predecessor ===
v873 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B99" 
    xhandlers
    flags 
    probability 4574176385705131646
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v872 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i1375 
=== Usages ===
i1375 
=== Predecessor ===
v874 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1375  <|@  <|@
f <@~|@floating>@ <|@
tid v1423 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1077 
index: j1080 
=== Succesors ===
=== Usages ===
i1375 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1077 index: j1080  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1375 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v872 
address: v1423 
=== Succesors ===
next: v1320 
=== Usages ===
v1320 
=== Predecessor ===
v872 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v872 address: v1423 #next: v1320  <|@  <|@
f <@~|@floating>@ <|@
tid v1422 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1079 
index: j1080 
=== Succesors ===
=== Usages ===
v1320 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1079 index: j1080  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1320 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1422 
value: i1375 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v853 
=== Usages ===
=== Predecessor ===
i1375 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1422 value: i1375 stateAfter: - lastLocationAccess: - #next: v853  <|@  <|@
f <@*|@fixed>@ <|@
tid v853 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v838 
=== Predecessor ===
v1320 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B81" "B98" "B97" 
    successors "B100" "B118" 
    xhandlers
    flags 
    probability 4580674797109389737
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v838 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v837 v853 v877 
=== Succesors ===
next: v1145 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v837 v853 v877 #next: v1145  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1145 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v884 
=== Usages ===
j1147 
=== Predecessor ===
v838 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v884  <|@  <|@
f <@~|@floating>@ <|@
tid j799 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i450 
=== Succesors ===
=== Usages ===
j804 v1071 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i450  <|@  <|@
f <@~|@floating>@ <|@
tid v1071 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j800 
y: j799 
=== Succesors ===
=== Usages ===
v884 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j800 y: j799  <|@  <|@
f <@*|@fixed>@ <|@
tid v884 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1071 
=== Succesors ===
trueSuccessor: v883 
falseSuccessor: v882 
=== Usages ===
=== Predecessor ===
v1145 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1071 #trueSuccessor: v883 #falseSuccessor: v882  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B101" "B102" 
    xhandlers
    flags 
    probability 4576171197482019241
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v883 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v887 
=== Usages ===
=== Predecessor ===
v884 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v887  <|@  <|@
f <@~|@floating>@ <|@
tid v1420 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a764 
index: j800 
=== Succesors ===
=== Usages ===
j1147 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a764 index: j800  <|@  <|@
f <@~|@floating>@ <|@
tid j1147 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1145 
address: v1420 
=== Succesors ===
=== Usages ===
v1432 v1433 v1434 v1435 v1436 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1145 address: v1420  <|@  <|@
f <@~|@floating>@ <|@
tid j804 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j799 
y: j800 
=== Succesors ===
=== Usages ===
j1192 j1178 j1183 j1186 j1189 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j799 y: j800  <|@  <|@
f <@~|@floating>@ <|@
tid j1178 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j804 
y: j1122 
=== Succesors ===
=== Usages ===
v1179 v1181 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j804 y: j1122  <|@  <|@
f <@~|@floating>@ <|@
tid v1179 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1178 
y: j699 
=== Succesors ===
=== Usages ===
v887 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1178 y: j699  <|@  <|@
f <@*|@fixed>@ <|@
tid v887 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1179 
=== Succesors ===
trueSuccessor: v885 
falseSuccessor: v886 
=== Usages ===
=== Predecessor ===
v883 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1179 #trueSuccessor: v885 #falseSuccessor: v886  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B105" 
    xhandlers
    flags 
    probability 4574176385705131646
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v885 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v896 
=== Usages ===
=== Predecessor ===
v887 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v896  <|@  <|@
f <@*|@fixed>@ <|@
tid v896 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v897 
=== Predecessor ===
v885 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B103" 
    xhandlers
    flags 
    probability 4567163998227278249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v886 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v888 
=== Usages ===
=== Predecessor ===
v887 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v888  <|@  <|@
f <@*|@fixed>@ <|@
tid v888 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v889 
=== Predecessor ===
v886 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" "B117" 
    successors "B104" "B117" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4576171197482019241
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1172 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v889 
values: j699 j1177 
=== Succesors ===
=== Usages ===
v1436 j1177 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v889 values: j699 j1177  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v889 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v888 
=== Succesors ===
next: v1338 
=== Usages ===
j1172 v892 v893 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v888 #next: v1338  <|@  <|@
f <@~|@floating>@ <|@
tid v1436 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1147 
index: j1172 
=== Succesors ===
=== Usages ===
v1338 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1147 index: j1172  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1338 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1436 
value: v1354 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v895 
=== Usages ===
=== Predecessor ===
v889 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1436 value: v1354 stateAfter: - lastLocationAccess: - #next: v895  <|@  <|@
f <@~|@floating>@ <|@
tid j1177 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1172 
y: j228 
=== Succesors ===
=== Usages ===
j1166 j1172 v1181 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1172 y: j228  <|@  <|@
f <@~|@floating>@ <|@
tid v1181 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1178 
y: j1177 
=== Succesors ===
=== Usages ===
v895 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1178 y: j1177  <|@  <|@
f <@*|@fixed>@ <|@
tid v895 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1181 
=== Succesors ===
trueSuccessor: v892 
falseSuccessor: v894 
=== Usages ===
=== Predecessor ===
v1338 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1181 #trueSuccessor: v892 #falseSuccessor: v894  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B105" 
    xhandlers
    flags 
    probability 4567163998227278249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v892 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v889 
=== Succesors ===
next: v898 
=== Usages ===
=== Predecessor ===
v895 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v889 #next: v898  <|@  <|@
f <@*|@fixed>@ <|@
tid v898 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v897 
=== Predecessor ===
v892 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B101" "B104" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4576171197482019241
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1166 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v897 
values: j699 j1177 
=== Succesors ===
=== Usages ===
v1435 j1171 j1160 v1184 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v897 values: j699 j1177  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v897 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v896 v898 
=== Succesors ===
next: v919 
=== Usages ===
j1166 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v896 v898 #next: v919  <|@  <|@
f <@~|@floating>@ <|@
tid j1183 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j804 
y: j1128 
=== Succesors ===
=== Usages ===
v1184 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j804 y: j1128  <|@  <|@
f <@~|@floating>@ <|@
tid v1184 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1183 
y: j1166 
=== Succesors ===
=== Usages ===
v919 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1183 y: j1166  <|@  <|@
f <@*|@fixed>@ <|@
tid v919 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1184 
=== Succesors ===
trueSuccessor: v918 
falseSuccessor: v917 
=== Usages ===
=== Predecessor ===
v897 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1184 #trueSuccessor: v918 #falseSuccessor: v917  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4567163998227278249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v918 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v922 
=== Usages ===
=== Predecessor ===
v919 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v922  <|@  <|@
f <@*|@fixed>@ <|@
tid v922 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v908 
=== Predecessor ===
v918 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4574176385705131646
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v917 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1337 
=== Usages ===
=== Predecessor ===
v919 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1337  <|@  <|@
f <@~|@floating>@ <|@
tid v1435 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1147 
index: j1166 
=== Succesors ===
=== Usages ===
v1337 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1147 index: j1166  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1337 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1435 
value: v1358 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v907 
=== Usages ===
=== Predecessor ===
v917 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1435 value: v1358 stateAfter: - lastLocationAccess: - #next: v907  <|@  <|@
f <@~|@floating>@ <|@
tid j1171 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1166 
y: j718 
=== Succesors ===
=== Usages ===
j1160 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1166 y: j718  <|@  <|@
f <@*|@fixed>@ <|@
tid v907 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v908 
=== Predecessor ===
v1337 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    probability 4576171197482019241
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1160 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v908 
values: j1171 j1166 
=== Succesors ===
=== Usages ===
v1434 j1165 j1154 v1187 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v908 values: j1171 j1166  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v908 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v907 v922 
=== Succesors ===
next: v925 
=== Usages ===
j1160 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v907 v922 #next: v925  <|@  <|@
f <@~|@floating>@ <|@
tid j1186 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j804 
y: j1132 
=== Succesors ===
=== Usages ===
v1187 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j804 y: j1132  <|@  <|@
f <@~|@floating>@ <|@
tid v1187 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1186 
y: j1160 
=== Succesors ===
=== Usages ===
v925 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1186 y: j1160  <|@  <|@
f <@*|@fixed>@ <|@
tid v925 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1187 
=== Succesors ===
trueSuccessor: v924 
falseSuccessor: v923 
=== Usages ===
=== Predecessor ===
v908 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1187 #trueSuccessor: v924 #falseSuccessor: v923  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    probability 4567163998227278249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v924 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v928 
=== Usages ===
=== Predecessor ===
v925 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v928  <|@  <|@
f <@*|@fixed>@ <|@
tid v928 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v911 
=== Predecessor ===
v924 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    probability 4574176385705131646
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v923 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1335 
=== Usages ===
=== Predecessor ===
v925 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1335  <|@  <|@
f <@~|@floating>@ <|@
tid v1434 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1147 
index: j1160 
=== Succesors ===
=== Usages ===
v1335 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1147 index: j1160  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1335 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1434 
value: v1357 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v910 
=== Usages ===
=== Predecessor ===
v923 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1434 value: v1357 stateAfter: - lastLocationAccess: - #next: v910  <|@  <|@
f <@~|@floating>@ <|@
tid j1165 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1160 
y: j1104 
=== Succesors ===
=== Usages ===
j1154 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1160 y: j1104  <|@  <|@
f <@*|@fixed>@ <|@
tid v910 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v911 
=== Predecessor ===
v1335 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" "B109" 
    successors "B112" "B113" 
    xhandlers
    flags 
    probability 4576171197482019241
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1154 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v911 
values: j1165 j1160 
=== Succesors ===
=== Usages ===
v1433 j1159 j1148 v1190 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v911 values: j1165 j1160  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v911 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v910 v928 
=== Succesors ===
next: v931 
=== Usages ===
j1154 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v910 v928 #next: v931  <|@  <|@
f <@~|@floating>@ <|@
tid j1189 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j804 
y: j1136 
=== Succesors ===
=== Usages ===
v1190 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j804 y: j1136  <|@  <|@
f <@~|@floating>@ <|@
tid v1190 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1189 
y: j1154 
=== Succesors ===
=== Usages ===
v931 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1189 y: j1154  <|@  <|@
f <@*|@fixed>@ <|@
tid v931 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1190 
=== Succesors ===
trueSuccessor: v930 
falseSuccessor: v929 
=== Usages ===
=== Predecessor ===
v911 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1190 #trueSuccessor: v930 #falseSuccessor: v929  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    probability 4567163998227278249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v930 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v934 
=== Usages ===
=== Predecessor ===
v931 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v934  <|@  <|@
f <@*|@fixed>@ <|@
tid v934 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v914 
=== Predecessor ===
v930 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    probability 4574176385705131646
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v929 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1333 
=== Usages ===
=== Predecessor ===
v931 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1333  <|@  <|@
f <@~|@floating>@ <|@
tid v1433 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1147 
index: j1154 
=== Succesors ===
=== Usages ===
v1333 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1147 index: j1154  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1333 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1433 
value: v1356 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v913 
=== Usages ===
=== Predecessor ===
v929 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1433 value: v1356 stateAfter: - lastLocationAccess: - #next: v913  <|@  <|@
f <@~|@floating>@ <|@
tid j1159 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1154 
y: j1082 
=== Succesors ===
=== Usages ===
j1148 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1154 y: j1082  <|@  <|@
f <@*|@fixed>@ <|@
tid v913 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v914 
=== Predecessor ===
v1333 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" "B112" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4576171197482019241
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1148 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v914 
values: j1159 j1154 
=== Succesors ===
=== Usages ===
v1432 v1193 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v914 values: j1159 j1154  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v914 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v913 v934 
=== Succesors ===
next: v937 
=== Usages ===
j1148 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v913 v934 #next: v937  <|@  <|@
f <@~|@floating>@ <|@
tid j1192 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j804 
y: j1140 
=== Succesors ===
=== Usages ===
v1193 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j804 y: j1140  <|@  <|@
f <@~|@floating>@ <|@
tid v1193 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1192 
y: j1148 
=== Succesors ===
=== Usages ===
v937 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1192 y: j1148  <|@  <|@
f <@*|@fixed>@ <|@
tid v937 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1193 
=== Succesors ===
trueSuccessor: v936 
falseSuccessor: v935 
=== Usages ===
=== Predecessor ===
v914 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1193 #trueSuccessor: v936 #falseSuccessor: v935  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B119" 
    xhandlers
    flags 
    probability 4567163998227278249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v936 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v940 
=== Usages ===
=== Predecessor ===
v937 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v940  <|@  <|@
f <@*|@fixed>@ <|@
tid v940 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v901 
=== Predecessor ===
v936 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B119" 
    xhandlers
    flags 
    probability 4574176385705131646
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v935 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1331 
=== Usages ===
=== Predecessor ===
v937 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1331  <|@  <|@
f <@~|@floating>@ <|@
tid v1432 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1147 
index: j1148 
=== Succesors ===
=== Usages ===
v1331 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1147 index: j1148  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1331 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1432 
value: i1355 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v916 
=== Usages ===
=== Predecessor ===
v935 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1432 value: i1355 stateAfter: - lastLocationAccess: - #next: v916  <|@  <|@
f <@*|@fixed>@ <|@
tid v916 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v901 
=== Predecessor ===
v1331 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B103" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4574176385705131646
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v894 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v893 
=== Usages ===
=== Predecessor ===
v895 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v893  <|@  <|@
f <@*|@fixed>@ <|@
tid v893 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v889 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v894 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v889  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B119" 
    xhandlers
    flags 
    probability 4576171197482019241
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v882 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v900 
=== Usages ===
=== Predecessor ===
v884 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v900  <|@  <|@
f <@*|@fixed>@ <|@
tid v900 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v901 
=== Predecessor ===
v882 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" "B116" "B115" 
    successors 
    xhandlers
    flags 
    probability 4580674797109389737
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v901 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v900 v916 v940 
=== Succesors ===
next: a598 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v900 v916 v940 #next: a598  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a598 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a764 
=== Succesors ===
next: v387 
=== Usages ===
v1393 a386 v1394 v1396 v1395 
=== Predecessor ===
v901 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a764 #next: v387  <|@  <|@
f <@~|@floating>@ <|@
tid a386 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
op: Compress
stamp: n! -
=== Inputs ===
value: a598 
=== Succesors ===
=== Usages ===
v387 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a598  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: AbstractStringBuilder.value
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1377 
value: a386 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j791 
=== Usages ===
=== Predecessor ===
a598 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1377 value: a386 stateAfter: - lastLocationAccess: - #next: j791  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j791 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v795 
=== Usages ===
j792 
=== Predecessor ===
v387 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v795  <|@  <|@
f <@~|@floating>@ <|@
tid j792 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j791 
y: i729 
=== Succesors ===
=== Usages ===
v1419 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j791 y: i729  <|@  <|@
f <@~|@floating>@ <|@
tid v1419 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j792 
index: j733 
=== Succesors ===
=== Usages ===
v795 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j792 index: j733  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v795 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1419 
value: i735 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v388 
=== Usages ===
=== Predecessor ===
j791 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1419 value: i735 stateAfter: - lastLocationAccess: - #next: v388  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:617) [bci: 26]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1376 
value: i18 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v396 
=== Usages ===
=== Predecessor ===
v795 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1376 value: i18 stateAfter: - lastLocationAccess: - #next: v396  <|@  <|@
f <@~|@floating>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v507 v503 
=== Succesors ===
=== Usages ===
v405 v423 v414 v396 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v507 v503  <|@  <|@
f <@~|@floating>@ <|@
tid v1393 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a598 
index: i1365 
=== Succesors ===
=== Usages ===
v396 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a598 index: i1365  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:617) [bci: 31]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v456 
address: v1393 
value: i440 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v397 
=== Usages ===
=== Predecessor ===
v388 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v456 address: v1393 value: i440 stateAfter: - lastLocationAccess: - #next: v397  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:618) [bci: 44]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1376 
value: i191 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v405 
=== Usages ===
=== Predecessor ===
v396 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1376 value: i191 stateAfter: - lastLocationAccess: - #next: v405  <|@  <|@
f <@~|@floating>@ <|@
tid v1394 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a598 
index: i18 
=== Succesors ===
=== Usages ===
v405 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a598 index: i18  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:618) [bci: 49]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v456 
address: v1394 
value: i442 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v406 
=== Usages ===
=== Predecessor ===
v397 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v456 address: v1394 value: i442 stateAfter: - lastLocationAccess: - #next: v406  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:619) [bci: 62]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1376 
value: i193 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v414 
=== Usages ===
=== Predecessor ===
v405 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1376 value: i193 stateAfter: - lastLocationAccess: - #next: v414  <|@  <|@
f <@~|@floating>@ <|@
tid v1395 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a598 
index: i191 
=== Succesors ===
=== Usages ===
v414 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a598 index: i191  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:619) [bci: 67]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v456 
address: v1395 
value: i444 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v415 
=== Usages ===
=== Predecessor ===
v406 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v456 address: v1395 value: i444 stateAfter: - lastLocationAccess: - #next: v415  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:620) [bci: 80]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1376 
value: i11 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v423 
=== Usages ===
=== Predecessor ===
v414 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1376 value: i11 stateAfter: - lastLocationAccess: - #next: v423  <|@  <|@
f <@~|@floating>@ <|@
tid v1396 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a598 
index: i193 
=== Succesors ===
=== Usages ===
v423 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a598 index: i193  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:620) [bci: 85]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v456 
address: v1396 
value: i433 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v99 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v456 address: v1396 value: i433 stateAfter: - lastLocationAccess: - #next: v99  <|@  <|@
f <@*|@fixed>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 189]
stamp: void
=== Inputs ===
result: a1 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v423 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B85" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4574176385705131646
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v831 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v830 
=== Usages ===
=== Predecessor ===
v832 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v830  <|@  <|@
f <@*|@fixed>@ <|@
tid v830 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v825 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v831 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v825  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v509 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:620) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v654 
=== Usages ===
=== Predecessor ===
v510 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v654  <|@  <|@
f <@~|@floating>@ <|@
tid i655 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -106779
stableDimension: 0
stamp: i32 [-106779] ⇊00000000fffe5ee5 ⇈00000000fffe5ee5
stampKind: i32
value: int[-106779|0xfffffffffffe5ee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i629 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v654 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v625 
=== Predecessor ===
v509 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:617) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v652 
=== Usages ===
=== Predecessor ===
v506 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v652  <|@  <|@
f <@~|@floating>@ <|@
tid i653 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -99867
stableDimension: 0
stamp: i32 [-99867] ⇊00000000fffe79e5 ⇈00000000fffe79e5
stampKind: i32
value: int[-99867|0xfffffffffffe79e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i629 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v652 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v625 
=== Predecessor ===
v505 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B8" "B6" "B5" "B69" "B67" "B66" "B10" "B71" "B61" "B60" "B122" "B121" 
    successors 
    xhandlers
    flags 
    probability 2371145203810566144
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i629 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-106779 - -59659] ⇊00000000fffe00e5 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v625 
values: i633 i635 i637 i639 i641 i643 i645 i647 i649 i651 i653 i655 
=== Succesors ===
=== Usages ===
v631 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v625 values: i633 i635 i637 i639 i641 i643 i645 i647 i649 i651 i653 i655  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v625 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v632 v634 v636 v638 v640 v642 v644 v646 v648 v650 v652 v654 
=== Succesors ===
next: v631 
=== Usages ===
i629 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v632 v634 v636 v638 v640 v642 v644 v646 v648 v650 v652 v654 #next: v631  <|@  <|@
f <@~|@floating>@ <|@
tid a628 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v631 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v631 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i629 
speculation: a628 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v625 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i629 speculation: a628  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B62" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a1363 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a1363  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/lang/AbstractStringBuilder;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v99 v210 v224 v1377 v100 v1376 j728 j791 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1377 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1363 v295 v387 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1363 <|@
result v2|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.value
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1377 
=== Succesors ===
next: i1364 
=== Usages ===
a231 v1397 v1378 v1452 a1453 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1377 #next: i1364  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32 [0 - 1] ⇈0000000000000001
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v5 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(boolean)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 615
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
v631 a760 a688 i1364 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@~|@floating>@ <|@
tid v1378 <|@
result [v2|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1363 
=== Succesors ===
=== Usages ===
i1364 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1363  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1364 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v1378 
=== Succesors ===
next: i1365 
=== Usages ===
i124 i103 i590 i591 i145 v376 v343 v283 v529 v569 i1360 v1361 
=== Predecessor ===
a1363 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v1378 #next: i1365  <|@  <|@
f <@~|@floating>@ <|@
tid v1376 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1365 v237 v248 v259 v270 v281 v296 v305 v314 v323 v332 v341 v352 v363 v374 v388 v397 v406 v415 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1365 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 91]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1376 
=== Succesors ===
next: v8 
=== Usages ===
i51 i11 v1393 v297 v1384 i18 v343 i191 i193 v389 v1379 v1389 v1361 
=== Predecessor ===
i1364 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1376 #next: v8  <|@  <|@
f <@~|@floating>@ <|@
tid i192 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:625) [bci: 146]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i193 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i193 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:625) [bci: 146]
stamp: i32
=== Inputs ===
x: i1365 
y: i192 
=== Succesors ===
=== Usages ===
v314 v1387 v416 v406 v1396 v376 v259 v1392 v1382 v363 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1365 y: i192  <|@  <|@
f <@~|@floating>@ <|@
tid i146 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:150) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i147 i191 i1359 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i191 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:624) [bci: 128]
stamp: i32
=== Inputs ===
x: i1365 
y: i146 
=== Succesors ===
=== Usages ===
v305 v1386 v1381 v397 v1395 v1391 v248 v352 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1365 y: i146  <|@  <|@
f <@~|@floating>@ <|@
tid i17 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:617) [bci: 24]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i18 v104 v125 i145 v180 v158 i1360 i664 i738 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:617) [bci: 25]
stamp: i32
=== Inputs ===
x: i1365 
y: i17 
=== Succesors ===
=== Usages ===
v388 v1380 v1390 v1394 v296 v1385 v237 v341 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1365 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
result int[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 9]
rawvalue: 4
stableDimension: 0
stamp: i32 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i11 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 10]
stamp: i32
=== Inputs ===
x: i1365 
y: i10 
=== Succesors ===
=== Usages ===
v333 i103 i148 i450 v323 v1388 v283 v415 v270 v374 v1383 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1365 y: i10  <|@  <|@
f <@~|@floating>@ <|@
tid i735 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v734 v795 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i729 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j730 j792 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j733 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1409 v1419 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1355 <|@
result short[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i16 [0] ⇈0000000000000000
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1331 v1349 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1356 <|@
result v10|V32_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1333 v1350 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1357 <|@
result v11|V64_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1335 v1351 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1358 <|@
result v12|V128_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1337 v1352 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1354 <|@
result v13|V256_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1338 v1353 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1140 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1141 j1192 j1254 j1305 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1082 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1096 j1159 j1215 j1272 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1136 <|@
result long[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1137 j1189 j1251 j1302 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1104 <|@
result long[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1105 j1165 j1223 j1278 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1132 <|@
result long[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1133 j1186 j1248 j1299 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j718 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1284 j1231 j1113 j1171 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1128 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1129 j1183 j1245 j1296 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j228 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1121 j1290 j1239 j1177 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1122 <|@
result long[-16|0xfffffffffffffff0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] ⇊fffffffffffffff0 ⇈fffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1123 j1178 j1240 j1291 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j699 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1241 j1232 v1292 j1106 j1114 v1124 j1285 j1166 j1172 v1179 j1279 j1224 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v662 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a688 a760 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v798 <|@
result meta{HotSpotType<[C, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v720 v783 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j663 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v716 v780 v817 v944 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i695 <|@
result int[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i696 i767 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i665 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i666 i739 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i672 <|@
result int[16777215|0xffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v673 v745 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i160 <|@
result int[2147483639|0x7ffffff7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 22]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
rawvalue: 2147483639
stableDimension: 0
stamp: i32 [2147483639] ⇊000000007ffffff7 ⇈000000007ffffff7
stampKind: i32
value: int[2147483639|0x7ffffff7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i161 i182 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i433 <|@
result short[101|0x65] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:627) [bci: 188]
rawvalue: 101
stableDimension: 0
stamp: i16 [101] ⇊0000000000000065 ⇈0000000000000065
stampKind: i16
value: short[101|0x65]
=== Inputs ===
=== Succesors ===
=== Usages ===
v291 v340 v383 v423 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v5 a760 a688 v149 v162 v171 v183 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v5 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i4 
=== Succesors ===
=== Usages ===
v8 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 1]
stamp: void
trueSuccessorProbability: 0.6295884659318947
=== Inputs ===
condition: v5 
=== Succesors ===
trueSuccessor: v6 
falseSuccessor: v7 
=== Usages ===
=== Predecessor ===
i1365 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5 #trueSuccessor: v6 #falseSuccessor: v7  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1f760f52 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v3|DWORD = MOV [v2|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = LEA [v4|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = LEA [v4|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = INC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = LEA [v4|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction v10|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction v11|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction v12|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction v13|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6295884659318947 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B7" 
    xhandlers
    flags 
    probability 4603846048306411702
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 89]
stamp: void
=== Inputs ===
=== Succesors ===
next: v128 
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v128  <|@  <|@
f <@~|@floating>@ <|@
tid i50 <|@
result int[5|0x5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 94]
rawvalue: 5
stableDimension: 0
stamp: i32 [5] ⇊0000000000000005 ⇈0000000000000005
stampKind: i32
value: int[5|0x5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i51 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i51 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 95]
stamp: i32
=== Inputs ===
x: i1365 
y: i50 
=== Succesors ===
=== Usages ===
v281 i124 i170 i451 v332 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1365 y: i50  <|@  <|@
f <@~|@floating>@ <|@
tid i124 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: i32
=== Inputs ===
x: i51 
y: i1364 
=== Succesors ===
=== Usages ===
v125 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i51 y: i1364  <|@  <|@
f <@~|@floating>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i124 
y: i17 
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i124 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid i431 <|@
result short[115|0x73] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 170]
rawvalue: 115
stableDimension: 0
stamp: i16 [115] ⇊0000000000000073 ⇈0000000000000073
stampKind: i16
value: short[115|0x73]
=== Inputs ===
=== Succesors ===
=== Usages ===
v280 v331 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i429 <|@
result short[108|0x6c] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:625) [bci: 152]
rawvalue: 108
stableDimension: 0
stamp: i16 [108] ⇊000000000000006c ⇈000000000000006c
stampKind: i16
value: short[108|0x6c]
=== Inputs ===
=== Succesors ===
=== Usages ===
v269 v322 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i427 <|@
result short[97|0x61] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:624) [bci: 134]
rawvalue: 97
stableDimension: 0
stamp: i16 [97] ⇊0000000000000061 ⇈0000000000000061
stampKind: i16
value: short[97|0x61]
=== Inputs ===
=== Succesors ===
=== Usages ===
v258 v313 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i425 <|@
result short[102|0x66] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:623) [bci: 116]
rawvalue: 102
stableDimension: 0
stamp: i16 [102] ⇊0000000000000066 ⇈0000000000000066
stampKind: i16
value: short[102|0x66]
=== Inputs ===
=== Succesors ===
=== Usages ===
v247 v304 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: void
trueSuccessorProbability: 0.953003048985209
=== Inputs ===
condition: v125 
=== Succesors ===
trueSuccessor: v126 
falseSuccessor: v127 
=== Usages ===
=== Predecessor ===
v6 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v125 #trueSuccessor: v126 #falseSuccessor: v127  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = LEA [v4|DWORD + 5] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = SUB (x: v15|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v16|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.953003048985209 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4603579536644911359
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: void
=== Inputs ===
=== Succesors ===
next: v466 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v466  <|@  <|@
f <@~|@floating>@ <|@
tid v1361 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:617) [bci: 31]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1365 
y: i1364 
=== Succesors ===
=== Usages ===
v466 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1365 y: i1364  <|@  <|@
f <@*|@fixed>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:623) [bci: 116]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1361 
=== Succesors ===
trueSuccessor: v463 
falseSuccessor: v465 
=== Usages ===
=== Predecessor ===
v126 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1361 #trueSuccessor: v463 #falseSuccessor: v465  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4603579536644911359
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:623) [bci: 116]
stamp: void
=== Inputs ===
=== Succesors ===
next: v470 
=== Usages ===
v457 
=== Predecessor ===
v466 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v470  <|@  <|@
f <@~|@floating>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:627) [bci: 188]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i11 
y: i1364 
=== Succesors ===
=== Usages ===
v470 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i11 y: i1364  <|@  <|@
f <@*|@fixed>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:627) [bci: 188]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v283 
=== Succesors ===
trueSuccessor: v467 
falseSuccessor: v469 
=== Usages ===
=== Predecessor ===
v463 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v283 #trueSuccessor: v467 #falseSuccessor: v469  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4603579536644911359
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:627) [bci: 188]
stamp: void
=== Inputs ===
=== Succesors ===
next: v237 
=== Usages ===
v457 
=== Predecessor ===
v470 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v237  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:623) [bci: 111]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1376 
value: i18 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v247 
=== Usages ===
=== Predecessor ===
v467 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1376 value: i18 stateAfter: - lastLocationAccess: - #next: v247  <|@  <|@
f <@~|@floating>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v467 v463 
=== Succesors ===
=== Usages ===
v258 v291 v280 v247 v269 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v467 v463  <|@  <|@
f <@~|@floating>@ <|@
tid a1453 <|@
result v17|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1363 
=== Succesors ===
=== Usages ===
v1379 v1380 v1381 v1382 v1383 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1363  <|@  <|@
f <@~|@floating>@ <|@
tid v1379 <|@
result [v17|QWORD[.] + v4|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1453 
index: i1365 
=== Succesors ===
=== Usages ===
v247 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1453 index: i1365  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:623) [bci: 116]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v457 
address: v1379 
value: i425 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v248 
=== Usages ===
=== Predecessor ===
v237 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v457 address: v1379 value: i425 stateAfter: - lastLocationAccess: - #next: v248  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:624) [bci: 129]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1376 
value: i191 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v258 
=== Usages ===
=== Predecessor ===
v247 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1376 value: i191 stateAfter: - lastLocationAccess: - #next: v258  <|@  <|@
f <@~|@floating>@ <|@
tid v1380 <|@
result [v17|QWORD[.] + v7|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1453 
index: i18 
=== Succesors ===
=== Usages ===
v258 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1453 index: i18  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:624) [bci: 134]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v457 
address: v1380 
value: i427 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v259 
=== Usages ===
=== Predecessor ===
v248 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v457 address: v1380 value: i427 stateAfter: - lastLocationAccess: - #next: v259  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:625) [bci: 147]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1376 
value: i193 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v269 
=== Usages ===
=== Predecessor ===
v258 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1376 value: i193 stateAfter: - lastLocationAccess: - #next: v269  <|@  <|@
f <@~|@floating>@ <|@
tid v1381 <|@
result [v17|QWORD[.] + v6|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1453 
index: i191 
=== Succesors ===
=== Usages ===
v269 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1453 index: i191  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:625) [bci: 152]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v457 
address: v1381 
value: i429 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v270 
=== Usages ===
=== Predecessor ===
v259 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v457 address: v1381 value: i429 stateAfter: - lastLocationAccess: - #next: v270  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 165]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1376 
value: i11 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v280 
=== Usages ===
=== Predecessor ===
v269 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1376 value: i11 stateAfter: - lastLocationAccess: - #next: v280  <|@  <|@
f <@~|@floating>@ <|@
tid v1382 <|@
result [v17|QWORD[.] + v5|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1453 
index: i193 
=== Succesors ===
=== Usages ===
v280 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1453 index: i193  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 170]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v457 
address: v1382 
value: i431 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v281 
=== Usages ===
=== Predecessor ===
v270 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v457 address: v1382 value: i431 stateAfter: - lastLocationAccess: - #next: v281  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:627) [bci: 183]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1376 
value: i51 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v291 
=== Usages ===
=== Predecessor ===
v280 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1376 value: i51 stateAfter: - lastLocationAccess: - #next: v291  <|@  <|@
f <@~|@floating>@ <|@
tid v1383 <|@
result [v17|QWORD[.] + v8|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1453 
index: i11 
=== Succesors ===
=== Usages ===
v291 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1453 index: i11  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v291 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:627) [bci: 188]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v457 
address: v1383 
value: i433 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v210 
=== Usages ===
=== Predecessor ===
v281 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v457 address: v1383 value: i433 stateAfter: - lastLocationAccess: - #next: v210  <|@  <|@
f <@*|@fixed>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 189]
stamp: void
=== Inputs ===
result: a1 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v291 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3f307c23 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV [v17|QWORD[.] + v4|DWORD * 2 + 16] y: 102 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v17|QWORD[.] + v7|DWORD * 2 + 16] y: 97 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v17|QWORD[.] + v6|DWORD * 2 + 16] y: 108 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v17|QWORD[.] + v5|DWORD * 2 + 16] y: 115 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v17|QWORD[.] + v8|DWORD * 2 + 16] y: 101 size: WORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v469 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:627) [bci: 188]
stamp: void
=== Inputs ===
=== Succesors ===
next: v636 
=== Usages ===
=== Predecessor ===
v470 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v636  <|@  <|@
f <@~|@floating>@ <|@
tid i637 <|@
result int[-72731|0xfffffffffffee3e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -72731
stableDimension: 0
stamp: i32 [-72731] ⇊00000000fffee3e5 ⇈00000000fffee3e5
stampKind: i32
value: int[-72731|0xfffffffffffee3e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i629 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v636 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v625 
=== Predecessor ===
v469 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-72731|0xfffffffffffee3e5]] destination: B5 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:623) [bci: 116]
stamp: void
=== Inputs ===
=== Succesors ===
next: v634 
=== Usages ===
=== Predecessor ===
v466 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v634  <|@  <|@
f <@~|@floating>@ <|@
tid i635 <|@
result int[-61467|0xffffffffffff0fe5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -61467
stableDimension: 0
stamp: i32 [-61467] ⇊00000000ffff0fe5 ⇈00000000ffff0fe5
stampKind: i32
value: int[-61467|0xffffffffffff0fe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i629 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v634 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v625 
=== Predecessor ===
v465 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-61467|0xffffffffffff0fe5]] destination: B6 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4584185594576434903
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: void
=== Inputs ===
=== Succesors ===
next: v474 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v474  <|@  <|@
f <@~|@floating>@ <|@
tid i1360 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:150) [bci: 6]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i1364 
y: i17 
=== Succesors ===
=== Usages ===
i1359 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1364 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid i1359 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:150) [bci: 8]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i1360 
y: i146 
=== Succesors ===
=== Usages ===
i170 i451 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1360 y: i146  <|@  <|@
f <@~|@floating>@ <|@
tid i170 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:151) [bci: 12]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: i32
=== Inputs ===
x: i1359 
y: i51 
=== Succesors ===
=== Usages ===
v171 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1359 y: i51  <|@  <|@
f <@~|@floating>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:151) [bci: 13]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i170 
y: i4 
=== Succesors ===
=== Usages ===
i451 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i170 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i451 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v171 
trueValue: i51 
falseValue: i1359 
=== Succesors ===
=== Usages ===
v333 v297 v180 i182 j806 v673 v569 i591 a688 v715 i664 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v171 trueValue: i51 falseValue: i1359  <|@  <|@
f <@~|@floating>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i451 
y: i17 
=== Succesors ===
=== Usages ===
v474 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i451 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v180 
=== Succesors ===
trueSuccessor: v473 
falseSuccessor: v471 
=== Usages ===
=== Predecessor ===
v127 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v180 #trueSuccessor: v473 #falseSuccessor: v471  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SHL v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = LEA [v18|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = SUB (x: v19|DWORD, ~y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v20|DWORD, y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = CMOVE (falseValue: v19|DWORD, ~trueValue: v15|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction CMP v21|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: void
=== Inputs ===
=== Succesors ===
next: v632 
=== Usages ===
=== Predecessor ===
v474 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v632  <|@  <|@
f <@~|@floating>@ <|@
tid i633 <|@
result int[-74771|0xfffffffffffedbed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -74771
stableDimension: 0
stamp: i32 [-74771] ⇊00000000fffedbed ⇈00000000fffedbed
stampKind: i32
value: int[-74771|0xfffffffffffedbed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i629 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v625 
=== Predecessor ===
v473 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-74771|0xfffffffffffedbed]] destination: B8 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4584185594576434903
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: void
=== Inputs ===
=== Succesors ===
next: v478 
=== Usages ===
=== Predecessor ===
v474 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v478  <|@  <|@
f <@~|@floating>@ <|@
tid i182 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 25]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: i32
=== Inputs ===
x: i160 
y: i451 
=== Succesors ===
=== Usages ===
v183 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i160 y: i451  <|@  <|@
f <@~|@floating>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i182 
y: i4 
=== Succesors ===
=== Usages ===
v478 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i182 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v183 
=== Succesors ===
trueSuccessor: v477 
falseSuccessor: v475 
=== Usages ===
=== Predecessor ===
v471 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v183 #trueSuccessor: v477 #falseSuccessor: v475  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVE input: int[2147483639|0x7ffffff7] <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = SUB (x: v22|DWORD, ~y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v23|DWORD, y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: void
=== Inputs ===
=== Succesors ===
next: v644 
=== Usages ===
=== Predecessor ===
v478 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v644  <|@  <|@
f <@~|@floating>@ <|@
tid i645 <|@
result int[-75027|0xfffffffffffedaed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -75027
stableDimension: 0
stamp: i32 [-75027] ⇊00000000fffedaed ⇈00000000fffedaed
stampKind: i32
value: int[-75027|0xfffffffffffedaed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i629 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v644 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v625 
=== Predecessor ===
v477 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-75027|0xfffffffffffedaed]] destination: B10 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B61" 
    xhandlers
    flags 
    probability 4584185594576434903
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: void
=== Inputs ===
=== Succesors ===
next: v482 
=== Usages ===
=== Predecessor ===
v478 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v482  <|@  <|@
f <@~|@floating>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:623) [bci: 116]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1365 
y: i451 
=== Succesors ===
=== Usages ===
v482 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1365 y: i451  <|@  <|@
f <@*|@fixed>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:623) [bci: 116]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v297 
=== Succesors ===
trueSuccessor: v479 
falseSuccessor: v481 
=== Usages ===
=== Predecessor ===
v475 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v297 #trueSuccessor: v479 #falseSuccessor: v481  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B60" 
    xhandlers
    flags 
    probability 4584185594576434903
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:623) [bci: 116]
stamp: void
=== Inputs ===
=== Succesors ===
next: v486 
=== Usages ===
v458 
=== Predecessor ===
v482 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v486  <|@  <|@
f <@~|@floating>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:627) [bci: 188]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i11 
y: i451 
=== Succesors ===
=== Usages ===
v486 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i11 y: i451  <|@  <|@
f <@*|@fixed>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:627) [bci: 188]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v333 
=== Succesors ===
trueSuccessor: v483 
falseSuccessor: v485 
=== Usages ===
=== Predecessor ===
v479 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v333 #trueSuccessor: v483 #falseSuccessor: v485  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B17" 
    xhandlers
    flags 
    probability 4584185594576434903
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:627) [bci: 188]
stamp: void
=== Inputs ===
=== Succesors ===
next: j667 
=== Usages ===
v458 
=== Predecessor ===
v486 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j667  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j667 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j712 
=== Usages ===
v1400 v1401 
=== Predecessor ===
v483 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j712  <|@  <|@
f <@~|@floating>@ <|@
tid v1400 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j667 
index: - 
=== Succesors ===
=== Usages ===
j712 v714 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j667 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j712 <|@
result v24|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1400 
=== Succesors ===
next: j713 
=== Usages ===
j671 v1402 v1403 a687 v1408 v1404 v1405 v1406 v1407 
=== Predecessor ===
j667 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1400 #next: j713  <|@  <|@
f <@~|@floating>@ <|@
tid v1401 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j667 
index: - 
=== Succesors ===
=== Usages ===
j713 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j667 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j713 <|@
result v25|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1401 
=== Succesors ===
next: v676 
=== Usages ===
v677 
=== Predecessor ===
j712 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1401 #next: v676  <|@  <|@
f <@~|@floating>@ <|@
tid v673 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i451 
y: i672 
=== Succesors ===
=== Usages ===
v676 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i451 y: i672  <|@  <|@
f <@*|@fixed>@ <|@
tid v676 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v673 
=== Succesors ===
trueSuccessor: v675 
falseSuccessor: v674 
=== Usages ===
=== Predecessor ===
j713 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v673 #trueSuccessor: v675 #falseSuccessor: v674  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v21|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4583332757259633806
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v675 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: void
=== Inputs ===
=== Succesors ===
next: v683 
=== Usages ===
=== Predecessor ===
v676 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v683  <|@  <|@
f <@~|@floating>@ <|@
tid i664 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i451 
y: i17 
=== Succesors ===
=== Usages ===
i696 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i451 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid i696 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i664 
y: i695 
=== Succesors ===
=== Usages ===
i666 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i664 y: i695  <|@  <|@
f <@~|@floating>@ <|@
tid i666 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i696 
y: i665 
=== Succesors ===
=== Usages ===
j670 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i696 y: i665  <|@  <|@
f <@~|@floating>@ <|@
tid j670 <|@
result v29|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i666 
=== Succesors ===
=== Usages ===
j671 v1404 v1405 v1406 v1407 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i666  <|@  <|@
f <@~|@floating>@ <|@
tid j671 <|@
result v30|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: i64
=== Inputs ===
x: j670 
y: j712 
=== Succesors ===
=== Usages ===
v677 v714 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j670 y: j712  <|@  <|@
f <@~|@floating>@ <|@
tid v677 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j713 
y: j671 
=== Succesors ===
=== Usages ===
v683 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j713 y: j671  <|@  <|@
f <@*|@fixed>@ <|@
tid v683 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v677 
=== Succesors ===
trueSuccessor: v682 
falseSuccessor: v681 
=== Usages ===
=== Predecessor ===
v675 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v677 #trueSuccessor: v682 #falseSuccessor: v681  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = SHL v21|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = LEA [v26|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = AND v27|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOVSXD v28|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = ADD (x: v29|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v30|QWORD, y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B18" 
    xhandlers
    flags 
    probability 4553547966588975281
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v682 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: void
=== Inputs ===
=== Succesors ===
next: v680 
=== Usages ===
=== Predecessor ===
v683 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v680  <|@  <|@
f <@*|@fixed>@ <|@
tid v680 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v679 
=== Predecessor ===
v682 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4583256001901121707
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v681 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: void
=== Inputs ===
=== Succesors ===
next: v714 
=== Usages ===
=== Predecessor ===
v683 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v714  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v714 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1400 
value: j671 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v701 
=== Usages ===
=== Predecessor ===
v681 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1400 value: j671 stateAfter: - lastLocationAccess: - #next: v701  <|@  <|@
f <@~|@floating>@ <|@
tid v1404 <|@
result [v29|QWORD + v24|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j670 
index: j712 
=== Succesors ===
=== Usages ===
v701 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j670 index: j712  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: void
=== Inputs ===
address: v1404 
=== Succesors ===
next: v704 
=== Usages ===
=== Predecessor ===
v714 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1404 #next: v704  <|@  <|@
f <@~|@floating>@ <|@
tid v1405 <|@
result [v29|QWORD + v24|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j670 
index: j712 
=== Succesors ===
=== Usages ===
v704 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j670 index: j712  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v704 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: void
=== Inputs ===
address: v1405 
=== Succesors ===
next: v707 
=== Usages ===
=== Predecessor ===
v701 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1405 #next: v707  <|@  <|@
f <@~|@floating>@ <|@
tid v1406 <|@
result [v29|QWORD + v24|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j670 
index: j712 
=== Succesors ===
=== Usages ===
v707 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j670 index: j712  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v707 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: void
=== Inputs ===
address: v1406 
=== Succesors ===
next: v710 
=== Usages ===
=== Predecessor ===
v704 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1406 #next: v710  <|@  <|@
f <@~|@floating>@ <|@
tid v1407 <|@
result [v29|QWORD + v24|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j670 
index: j712 
=== Succesors ===
=== Usages ===
v710 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j670 index: j712  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v710 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: void
=== Inputs ===
address: v1407 
=== Succesors ===
next: v715 
=== Usages ===
=== Predecessor ===
v707 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1407 #next: v715  <|@  <|@
f <@~|@floating>@ <|@
tid v1402 <|@
result [v24|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j712 
index: - 
=== Succesors ===
=== Usages ===
v715 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j712 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v715 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1402 
value: i451 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v716 
=== Usages ===
=== Predecessor ===
v710 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1402 value: i451 stateAfter: - lastLocationAccess: - #next: v716  <|@  <|@
f <@~|@floating>@ <|@
tid v1403 <|@
result [v24|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j712 
index: - 
=== Succesors ===
=== Usages ===
v716 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j712 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v716 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1403 
value: j663 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v720 
=== Usages ===
=== Predecessor ===
v715 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1403 value: j663 stateAfter: - lastLocationAccess: - #next: v720  <|@  <|@
f <@~|@floating>@ <|@
tid v1408 <|@
result [v24|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j712 
index: - 
=== Succesors ===
=== Usages ===
v720 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j712 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v720 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1408 
value: v798 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v686 
=== Usages ===
=== Predecessor ===
v716 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1408 value: v798 stateAfter: - lastLocationAccess: - #next: v686  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v686 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: void
=== Inputs ===
=== Succesors ===
next: a687 
=== Usages ===
=== Predecessor ===
v720 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a687  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a687 <|@
result v31|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j712 
=== Succesors ===
next: v689 
=== Usages ===
a692 
=== Predecessor ===
v686 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j712 #next: v689  <|@  <|@
f <@*|@fixed>@ <|@
tid v689 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v690 
=== Predecessor ===
a687 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v29|QWORD + v24|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v29|QWORD + v24|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v29|QWORD + v24|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v29|QWORD + v24|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD + 12], y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v24|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v24|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = MOVE v24|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v31|QWORD[.]] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4568969121060721220
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v674 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: void
=== Inputs ===
=== Succesors ===
next: v678 
=== Usages ===
=== Predecessor ===
v676 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v678  <|@  <|@
f <@*|@fixed>@ <|@
tid v678 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v679 
=== Predecessor ===
v674 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4569583163928818010
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v679 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v678 v680 
=== Succesors ===
next: a688 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v678 v680 #next: a688  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a688 <|@
result v32|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v662 i451 i4 
=== Succesors ===
next: v691 
=== Usages ===
a692 
=== Predecessor ===
v679 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v662 i451 i4 #next: v691  <|@  <|@
f <@*|@fixed>@ <|@
tid v691 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v690 
=== Predecessor ===
a688 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v21|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|QWORD[.]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4584185594576434902
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a692 <|@
result v33|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v690 
values: a687 a688 
=== Succesors ===
=== Usages ===
v1421 a602 v1399 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v690 values: a687 a688  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v690 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v689 v691 
=== Succesors ===
next: v1196 
=== Usages ===
a692 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v689 v691 #next: v1196  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1196 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v947 
=== Usages ===
j1197 j1199 
=== Predecessor ===
v690 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v947  <|@  <|@
f <@~|@floating>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1364 
y: i451 
=== Succesors ===
=== Usages ===
i591 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1364 y: i451  <|@  <|@
f <@~|@floating>@ <|@
tid i591 <|@
result v34|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v569 
trueValue: i1364 
falseValue: i451 
=== Succesors ===
=== Usages ===
j807 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v569 trueValue: i1364 falseValue: i451  <|@  <|@
f <@~|@floating>@ <|@
tid j807 <|@
result v35|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i591 
=== Succesors ===
=== Usages ===
j1254 v1421 j811 v944 v1073 j1240 j1245 j1248 j1251 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i591  <|@  <|@
f <@~|@floating>@ <|@
tid v944 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j807 
y: j663 
=== Succesors ===
=== Usages ===
v947 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j807 y: j663  <|@  <|@
f <@*|@fixed>@ <|@
tid v947 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v944 
=== Succesors ===
trueSuccessor: v945 
falseSuccessor: v946 
=== Usages ===
=== Predecessor ===
v1196 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v944 #trueSuccessor: v945 #falseSuccessor: v946  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = CMOVE (falseValue: v21|DWORD, ~trueValue: v3|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = MOVSXD v34|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v35|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B38" 
    xhandlers
    flags 
    probability 4579681994949064406
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v945 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v963 
=== Usages ===
=== Predecessor ===
v947 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v963  <|@  <|@
f <@*|@fixed>@ <|@
tid v963 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v964 
=== Predecessor ===
v945 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4579681994949064406
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v946 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v950 
=== Usages ===
=== Predecessor ===
v947 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v950  <|@  <|@
f <@~|@floating>@ <|@
tid v1399 <|@
result [v33|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a692 
index: - 
=== Succesors ===
=== Usages ===
j1199 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a692 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1199 <|@
result v36|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1196 
address: v1399 
=== Succesors ===
=== Usages ===
v1437 v1439 v1441 v1443 v1445 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1196 address: v1399  <|@  <|@
f <@~|@floating>@ <|@
tid v1397 <|@
result [v2|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1363 
=== Succesors ===
=== Usages ===
j1197 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1363  <|@  <|@
f <@~|@floating>@ <|@
tid j1197 <|@
result v37|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1196 
address: v1397 
=== Succesors ===
=== Usages ===
v1438 v1440 v1442 v1444 v1446 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1196 address: v1397  <|@  <|@
f <@~|@floating>@ <|@
tid j1240 <|@
result v38|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j807 
y: j1122 
=== Succesors ===
=== Usages ===
v1241 v1243 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j807 y: j1122  <|@  <|@
f <@~|@floating>@ <|@
tid v1241 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1240 
y: j699 
=== Succesors ===
=== Usages ===
v950 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1240 y: j699  <|@  <|@
f <@*|@fixed>@ <|@
tid v950 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1241 
=== Succesors ===
trueSuccessor: v948 
falseSuccessor: v949 
=== Usages ===
=== Predecessor ===
v946 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1241 #trueSuccessor: v948 #falseSuccessor: v949  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = LEA [v33|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[*] = LEA [v2|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = LEA [v35|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v38|QWORD, y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4577549901657061664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v948 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v959 
=== Usages ===
=== Predecessor ===
v950 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v959  <|@  <|@
f <@*|@fixed>@ <|@
tid v959 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v960 
=== Predecessor ===
v948 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4570674795694323414
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v949 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v951 
=== Usages ===
=== Predecessor ===
v950 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v951  <|@  <|@
f <@*|@fixed>@ <|@
tid v951 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v952 
=== Predecessor ===
v949 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B59" 
    successors "B25" "B59" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4579681994949064406
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1232 <|@
result v39|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v952 
values: j699 j1239 
=== Succesors ===
=== Usages ===
v1446 j1239 v1445 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v952 values: j699 j1239  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v952 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v951 
=== Succesors ===
next: v1366 
=== Usages ===
v1366 v955 v956 j1232 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v951 #next: v1366  <|@  <|@
f <@~|@floating>@ <|@
tid v1446 <|@
result [v37|QWORD[*] + v39|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1197 
index: j1232 
=== Succesors ===
=== Usages ===
v1366 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1197 index: j1232  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1366 <|@
result v40|V256_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v952 
address: v1446 
=== Succesors ===
next: v1348 
=== Usages ===
v1348 
=== Predecessor ===
v952 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v952 address: v1446 #next: v1348  <|@  <|@
f <@~|@floating>@ <|@
tid v1445 <|@
result [v36|QWORD[.] + v39|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1199 
index: j1232 
=== Succesors ===
=== Usages ===
v1348 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1199 index: j1232  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1348 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1445 
value: v1366 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v958 
=== Usages ===
=== Predecessor ===
v1366 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1445 value: v1366 stateAfter: - lastLocationAccess: - #next: v958  <|@  <|@
f <@~|@floating>@ <|@
tid j1239 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1232 
y: j228 
=== Succesors ===
=== Usages ===
j1224 j1232 v1243 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1232 y: j228  <|@  <|@
f <@~|@floating>@ <|@
tid v1243 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1240 
y: j1239 
=== Succesors ===
=== Usages ===
v958 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1240 y: j1239  <|@  <|@
f <@*|@fixed>@ <|@
tid v958 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1243 
=== Succesors ===
trueSuccessor: v955 
falseSuccessor: v957 
=== Usages ===
=== Predecessor ===
v1348 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1243 #trueSuccessor: v955 #falseSuccessor: v957  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|V256_WORD = H [v37|QWORD[*] + v39|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v36|QWORD[.] + v39|QWORD * 2], input: v40|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = LEA [v39|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v41|QWORD, y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4570674795694323414
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v955 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v952 
=== Succesors ===
next: v961 
=== Usages ===
=== Predecessor ===
v958 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v952 #next: v961  <|@  <|@
f <@*|@fixed>@ <|@
tid v961 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v960 
=== Predecessor ===
v955 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v41|QWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4579681994949064406
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1224 <|@
result v42|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v960 
values: j699 j1239 
=== Succesors ===
=== Usages ===
v1444 j1231 j1216 v1246 v1443 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v960 values: j699 j1239  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v960 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v959 v961 
=== Succesors ===
next: v982 
=== Usages ===
j1224 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v959 v961 #next: v982  <|@  <|@
f <@~|@floating>@ <|@
tid j1245 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j807 
y: j1128 
=== Succesors ===
=== Usages ===
v1246 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j807 y: j1128  <|@  <|@
f <@~|@floating>@ <|@
tid v1246 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1245 
y: j1224 
=== Succesors ===
=== Usages ===
v982 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1245 y: j1224  <|@  <|@
f <@*|@fixed>@ <|@
tid v982 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1246 
=== Succesors ===
trueSuccessor: v981 
falseSuccessor: v980 
=== Usages ===
=== Predecessor ===
v960 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1246 #trueSuccessor: v981 #falseSuccessor: v980  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v42|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = LEA [v35|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v42|QWORD, y: v43|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4570674795694323414
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v981 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v985 
=== Usages ===
=== Predecessor ===
v982 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v985  <|@  <|@
f <@*|@fixed>@ <|@
tid v985 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v971 
=== Predecessor ===
v981 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v42|QWORD] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4577549901657061664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v980 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1367 
=== Usages ===
v1367 
=== Predecessor ===
v982 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1367  <|@  <|@
f <@~|@floating>@ <|@
tid v1444 <|@
result [v37|QWORD[*] + v42|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1197 
index: j1224 
=== Succesors ===
=== Usages ===
v1367 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1197 index: j1224  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1367 <|@
result v44|V128_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v980 
address: v1444 
=== Succesors ===
next: v1346 
=== Usages ===
v1346 
=== Predecessor ===
v980 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v980 address: v1444 #next: v1346  <|@  <|@
f <@~|@floating>@ <|@
tid v1443 <|@
result [v36|QWORD[.] + v42|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1199 
index: j1224 
=== Succesors ===
=== Usages ===
v1346 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1199 index: j1224  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1346 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1443 
value: v1367 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v970 
=== Usages ===
=== Predecessor ===
v1367 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1443 value: v1367 stateAfter: - lastLocationAccess: - #next: v970  <|@  <|@
f <@~|@floating>@ <|@
tid j1231 <|@
result v45|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1224 
y: j718 
=== Succesors ===
=== Usages ===
j1216 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1224 y: j718  <|@  <|@
f <@*|@fixed>@ <|@
tid v970 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v971 
=== Predecessor ===
v1346 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v44|V128_WORD = H [v37|QWORD[*] + v42|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v36|QWORD[.] + v42|QWORD * 2], input: v44|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = LEA [v42|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v45|QWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4579681994949064406
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1216 <|@
result v46|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v971 
values: j1231 j1224 
=== Succesors ===
=== Usages ===
v1442 j1223 j1208 v1249 v1441 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v971 values: j1231 j1224  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v971 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v970 v985 
=== Succesors ===
next: v988 
=== Usages ===
j1216 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v970 v985 #next: v988  <|@  <|@
f <@~|@floating>@ <|@
tid j1248 <|@
result v47|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j807 
y: j1132 
=== Succesors ===
=== Usages ===
v1249 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j807 y: j1132  <|@  <|@
f <@~|@floating>@ <|@
tid v1249 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1248 
y: j1216 
=== Succesors ===
=== Usages ===
v988 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1248 y: j1216  <|@  <|@
f <@*|@fixed>@ <|@
tid v988 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1249 
=== Succesors ===
trueSuccessor: v987 
falseSuccessor: v986 
=== Usages ===
=== Predecessor ===
v971 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1249 #trueSuccessor: v987 #falseSuccessor: v986  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v46|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = LEA [v35|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v46|QWORD, y: v47|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4570674795694323414
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v987 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v991 
=== Usages ===
=== Predecessor ===
v988 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v991  <|@  <|@
f <@*|@fixed>@ <|@
tid v991 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v974 
=== Predecessor ===
v987 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v46|QWORD] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4577549901657061664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v986 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1368 
=== Usages ===
v1368 
=== Predecessor ===
v988 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1368  <|@  <|@
f <@~|@floating>@ <|@
tid v1442 <|@
result [v37|QWORD[*] + v46|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1197 
index: j1216 
=== Succesors ===
=== Usages ===
v1368 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1197 index: j1216  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1368 <|@
result v48|V64_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v986 
address: v1442 
=== Succesors ===
next: v1344 
=== Usages ===
v1344 
=== Predecessor ===
v986 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v986 address: v1442 #next: v1344  <|@  <|@
f <@~|@floating>@ <|@
tid v1441 <|@
result [v36|QWORD[.] + v46|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1199 
index: j1216 
=== Succesors ===
=== Usages ===
v1344 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1199 index: j1216  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1344 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1441 
value: v1368 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v973 
=== Usages ===
=== Predecessor ===
v1368 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1441 value: v1368 stateAfter: - lastLocationAccess: - #next: v973  <|@  <|@
f <@~|@floating>@ <|@
tid j1223 <|@
result v49|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1216 
y: j1104 
=== Succesors ===
=== Usages ===
j1208 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1216 y: j1104  <|@  <|@
f <@*|@fixed>@ <|@
tid v973 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v974 
=== Predecessor ===
v1344 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|V64_WORD = H [v37|QWORD[*] + v46|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v36|QWORD[.] + v46|QWORD * 2], input: v48|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = LEA [v46|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|QWORD] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4579681994949064406
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1208 <|@
result v50|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v974 
values: j1223 j1216 
=== Succesors ===
=== Usages ===
v1440 j1215 j1200 v1252 v1439 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v974 values: j1223 j1216  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v974 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v973 v991 
=== Succesors ===
next: v994 
=== Usages ===
j1208 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v973 v991 #next: v994  <|@  <|@
f <@~|@floating>@ <|@
tid j1251 <|@
result v51|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j807 
y: j1136 
=== Succesors ===
=== Usages ===
v1252 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j807 y: j1136  <|@  <|@
f <@~|@floating>@ <|@
tid v1252 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1251 
y: j1208 
=== Succesors ===
=== Usages ===
v994 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1251 y: j1208  <|@  <|@
f <@*|@fixed>@ <|@
tid v994 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1252 
=== Succesors ===
trueSuccessor: v993 
falseSuccessor: v992 
=== Usages ===
=== Predecessor ===
v974 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1252 #trueSuccessor: v993 #falseSuccessor: v992  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = LEA [v35|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v50|QWORD, y: v51|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4570674795694323414
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v993 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v997 
=== Usages ===
=== Predecessor ===
v994 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v997  <|@  <|@
f <@*|@fixed>@ <|@
tid v997 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v977 
=== Predecessor ===
v993 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v50|QWORD] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4577549901657061664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v992 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1369 
=== Usages ===
v1369 
=== Predecessor ===
v994 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1369  <|@  <|@
f <@~|@floating>@ <|@
tid v1440 <|@
result [v37|QWORD[*] + v50|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1197 
index: j1208 
=== Succesors ===
=== Usages ===
v1369 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1197 index: j1208  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1369 <|@
result v52|V32_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v992 
address: v1440 
=== Succesors ===
next: v1342 
=== Usages ===
v1342 
=== Predecessor ===
v992 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v992 address: v1440 #next: v1342  <|@  <|@
f <@~|@floating>@ <|@
tid v1439 <|@
result [v36|QWORD[.] + v50|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1199 
index: j1208 
=== Succesors ===
=== Usages ===
v1342 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1199 index: j1208  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1342 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1439 
value: v1369 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v976 
=== Usages ===
=== Predecessor ===
v1369 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1439 value: v1369 stateAfter: - lastLocationAccess: - #next: v976  <|@  <|@
f <@~|@floating>@ <|@
tid j1215 <|@
result v53|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1208 
y: j1082 
=== Succesors ===
=== Usages ===
j1200 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1208 y: j1082  <|@  <|@
f <@*|@fixed>@ <|@
tid v976 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v977 
=== Predecessor ===
v1342 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|V32_WORD = H [v37|QWORD[*] + v50|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v36|QWORD[.] + v50|QWORD * 2], input: v52|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = LEA [v50|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v53|QWORD] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4579681994949064406
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1200 <|@
result v54|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v977 
values: j1215 j1208 
=== Succesors ===
=== Usages ===
v1438 v1255 v1437 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v977 values: j1215 j1208  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v977 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v976 v997 
=== Succesors ===
next: v1000 
=== Usages ===
j1200 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v976 v997 #next: v1000  <|@  <|@
f <@~|@floating>@ <|@
tid j1254 <|@
result v55|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j807 
y: j1140 
=== Succesors ===
=== Usages ===
v1255 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j807 y: j1140  <|@  <|@
f <@~|@floating>@ <|@
tid v1255 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1254 
y: j1200 
=== Succesors ===
=== Usages ===
v1000 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1254 y: j1200  <|@  <|@
f <@*|@fixed>@ <|@
tid v1000 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1255 
=== Succesors ===
trueSuccessor: v999 
falseSuccessor: v998 
=== Usages ===
=== Predecessor ===
v977 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1255 #trueSuccessor: v999 #falseSuccessor: v998  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = DEC v35|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v54|QWORD, y: v55|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4570674795694323414
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v999 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1003 
=== Usages ===
=== Predecessor ===
v1000 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1003  <|@  <|@
f <@*|@fixed>@ <|@
tid v1003 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v964 
=== Predecessor ===
v999 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4577549901657061664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v998 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i1370 
=== Usages ===
i1370 
=== Predecessor ===
v1000 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1370  <|@  <|@
f <@~|@floating>@ <|@
tid v1438 <|@
result [v37|QWORD[*] + v54|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1197 
index: j1200 
=== Succesors ===
=== Usages ===
i1370 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1197 index: j1200  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1370 <|@
result v56|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v998 
address: v1438 
=== Succesors ===
next: v1340 
=== Usages ===
v1340 
=== Predecessor ===
v998 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v998 address: v1438 #next: v1340  <|@  <|@
f <@~|@floating>@ <|@
tid v1437 <|@
result [v36|QWORD[.] + v54|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1199 
index: j1200 
=== Succesors ===
=== Usages ===
v1340 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1199 index: j1200  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1340 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1437 
value: i1370 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v979 
=== Usages ===
=== Predecessor ===
i1370 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1437 value: i1370 stateAfter: - lastLocationAccess: - #next: v979  <|@  <|@
f <@*|@fixed>@ <|@
tid v979 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v964 
=== Predecessor ===
v1340 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOVSX [v37|QWORD[*] + v54|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v36|QWORD[.] + v54|QWORD * 2], y: v56|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" "B37" "B36" 
    successors "B39" "B57" 
    xhandlers
    flags 
    probability 4584185594576434902
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v964 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v963 v979 v1003 
=== Succesors ===
next: v1258 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v963 v979 v1003 #next: v1258  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1258 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v1010 
=== Usages ===
j1260 
=== Predecessor ===
v964 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v1010  <|@  <|@
f <@~|@floating>@ <|@
tid j806 <|@
result v57|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i451 
=== Succesors ===
=== Usages ===
j811 v1073 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i451  <|@  <|@
f <@~|@floating>@ <|@
tid v1073 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j807 
y: j806 
=== Succesors ===
=== Usages ===
v1010 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j807 y: j806  <|@  <|@
f <@*|@fixed>@ <|@
tid v1010 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1073 
=== Succesors ===
trueSuccessor: v1009 
falseSuccessor: v1008 
=== Usages ===
=== Predecessor ===
v1258 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1073 #trueSuccessor: v1009 #falseSuccessor: v1008  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOVSXD v21|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v57|QWORD, y: v35|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4579681994949064406
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1009 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1013 
=== Usages ===
=== Predecessor ===
v1010 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1013  <|@  <|@
f <@~|@floating>@ <|@
tid v1421 <|@
result [v33|QWORD[.] + v35|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a692 
index: j807 
=== Succesors ===
=== Usages ===
j1260 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a692 index: j807  <|@  <|@
f <@~|@floating>@ <|@
tid j1260 <|@
result v58|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1258 
address: v1421 
=== Succesors ===
=== Usages ===
v1447 v1448 v1449 v1450 v1451 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1258 address: v1421  <|@  <|@
f <@~|@floating>@ <|@
tid j811 <|@
result v59|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j806 
y: j807 
=== Succesors ===
=== Usages ===
j1305 j1291 j1296 j1299 j1302 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j806 y: j807  <|@  <|@
f <@~|@floating>@ <|@
tid j1291 <|@
result v60|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j811 
y: j1122 
=== Succesors ===
=== Usages ===
v1292 v1294 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j811 y: j1122  <|@  <|@
f <@~|@floating>@ <|@
tid v1292 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1291 
y: j699 
=== Succesors ===
=== Usages ===
v1013 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1291 y: j699  <|@  <|@
f <@*|@fixed>@ <|@
tid v1013 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1292 
=== Succesors ===
trueSuccessor: v1011 
falseSuccessor: v1012 
=== Usages ===
=== Predecessor ===
v1009 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1292 #trueSuccessor: v1011 #falseSuccessor: v1012  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = LEA [v33|QWORD[.] + v35|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = SUB (x: v57|QWORD, ~y: v35|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = LEA [v59|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v60|QWORD, y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    probability 4577549901657061664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1011 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1022 
=== Usages ===
=== Predecessor ===
v1013 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1022  <|@  <|@
f <@*|@fixed>@ <|@
tid v1022 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1023 
=== Predecessor ===
v1011 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4570674795694323414
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1012 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1014 
=== Usages ===
=== Predecessor ===
v1013 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1014  <|@  <|@
f <@*|@fixed>@ <|@
tid v1014 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1015 
=== Predecessor ===
v1012 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B56" 
    successors "B43" "B56" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4579681994949064406
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1285 <|@
result v61|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1015 
values: j699 j1290 
=== Succesors ===
=== Usages ===
v1451 j1290 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1015 values: j699 j1290  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1015 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1014 
=== Succesors ===
next: v1353 
=== Usages ===
j1285 v1018 v1019 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1014 #next: v1353  <|@  <|@
f <@~|@floating>@ <|@
tid v1451 <|@
result [v58|QWORD[.] + v61|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1260 
index: j1285 
=== Succesors ===
=== Usages ===
v1353 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1260 index: j1285  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1353 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1451 
value: v1354 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1021 
=== Usages ===
=== Predecessor ===
v1015 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1451 value: v1354 stateAfter: - lastLocationAccess: - #next: v1021  <|@  <|@
f <@~|@floating>@ <|@
tid j1290 <|@
result v62|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1285 
y: j228 
=== Succesors ===
=== Usages ===
j1279 j1285 v1294 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1285 y: j228  <|@  <|@
f <@~|@floating>@ <|@
tid v1294 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1291 
y: j1290 
=== Succesors ===
=== Usages ===
v1021 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1291 y: j1290  <|@  <|@
f <@*|@fixed>@ <|@
tid v1021 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1294 
=== Succesors ===
trueSuccessor: v1018 
falseSuccessor: v1020 
=== Usages ===
=== Predecessor ===
v1353 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1294 #trueSuccessor: v1018 #falseSuccessor: v1020  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v61|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v58|QWORD[.] + v61|QWORD * 2], input: v13|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = LEA [v61|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v62|QWORD, y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4570674795694323414
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1018 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1015 
=== Succesors ===
next: v1024 
=== Usages ===
=== Predecessor ===
v1021 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1015 #next: v1024  <|@  <|@
f <@*|@fixed>@ <|@
tid v1024 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1023 
=== Predecessor ===
v1018 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|QWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4579681994949064406
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1279 <|@
result v63|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1023 
values: j699 j1290 
=== Succesors ===
=== Usages ===
v1450 j1284 j1273 v1297 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1023 values: j699 j1290  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1023 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1022 v1024 
=== Succesors ===
next: v1045 
=== Usages ===
j1279 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1022 v1024 #next: v1045  <|@  <|@
f <@~|@floating>@ <|@
tid j1296 <|@
result v64|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j811 
y: j1128 
=== Succesors ===
=== Usages ===
v1297 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j811 y: j1128  <|@  <|@
f <@~|@floating>@ <|@
tid v1297 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1296 
y: j1279 
=== Succesors ===
=== Usages ===
v1045 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1296 y: j1279  <|@  <|@
f <@*|@fixed>@ <|@
tid v1045 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1297 
=== Succesors ===
trueSuccessor: v1044 
falseSuccessor: v1043 
=== Usages ===
=== Predecessor ===
v1023 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1297 #trueSuccessor: v1044 #falseSuccessor: v1043  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v63|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = LEA [v59|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v63|QWORD, y: v64|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4570674795694323414
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1044 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1048 
=== Usages ===
=== Predecessor ===
v1045 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1048  <|@  <|@
f <@*|@fixed>@ <|@
tid v1048 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1034 
=== Predecessor ===
v1044 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v63|QWORD] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4577549901657061664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1043 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1352 
=== Usages ===
=== Predecessor ===
v1045 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1352  <|@  <|@
f <@~|@floating>@ <|@
tid v1450 <|@
result [v58|QWORD[.] + v63|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1260 
index: j1279 
=== Succesors ===
=== Usages ===
v1352 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1260 index: j1279  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1352 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1450 
value: v1358 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1033 
=== Usages ===
=== Predecessor ===
v1043 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1450 value: v1358 stateAfter: - lastLocationAccess: - #next: v1033  <|@  <|@
f <@~|@floating>@ <|@
tid j1284 <|@
result v65|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1279 
y: j718 
=== Succesors ===
=== Usages ===
j1273 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1279 y: j718  <|@  <|@
f <@*|@fixed>@ <|@
tid v1033 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1034 
=== Predecessor ===
v1352 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v58|QWORD[.] + v63|QWORD * 2], input: v12|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = LEA [v63|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v65|QWORD] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4579681994949064406
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1273 <|@
result v66|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1034 
values: j1284 j1279 
=== Succesors ===
=== Usages ===
v1449 j1278 j1267 v1300 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1034 values: j1284 j1279  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1034 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1033 v1048 
=== Succesors ===
next: v1051 
=== Usages ===
j1273 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1033 v1048 #next: v1051  <|@  <|@
f <@~|@floating>@ <|@
tid j1299 <|@
result v67|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j811 
y: j1132 
=== Succesors ===
=== Usages ===
v1300 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j811 y: j1132  <|@  <|@
f <@~|@floating>@ <|@
tid v1300 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1299 
y: j1273 
=== Succesors ===
=== Usages ===
v1051 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1299 y: j1273  <|@  <|@
f <@*|@fixed>@ <|@
tid v1051 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1300 
=== Succesors ===
trueSuccessor: v1050 
falseSuccessor: v1049 
=== Usages ===
=== Predecessor ===
v1034 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1300 #trueSuccessor: v1050 #falseSuccessor: v1049  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v66|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = LEA [v59|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v66|QWORD, y: v67|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4570674795694323414
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1050 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1054 
=== Usages ===
=== Predecessor ===
v1051 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1054  <|@  <|@
f <@*|@fixed>@ <|@
tid v1054 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1037 
=== Predecessor ===
v1050 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|QWORD] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4577549901657061664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1049 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1351 
=== Usages ===
=== Predecessor ===
v1051 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1351  <|@  <|@
f <@~|@floating>@ <|@
tid v1449 <|@
result [v58|QWORD[.] + v66|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1260 
index: j1273 
=== Succesors ===
=== Usages ===
v1351 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1260 index: j1273  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1351 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1449 
value: v1357 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1036 
=== Usages ===
=== Predecessor ===
v1049 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1449 value: v1357 stateAfter: - lastLocationAccess: - #next: v1036  <|@  <|@
f <@~|@floating>@ <|@
tid j1278 <|@
result v68|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1273 
y: j1104 
=== Succesors ===
=== Usages ===
j1267 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1273 y: j1104  <|@  <|@
f <@*|@fixed>@ <|@
tid v1036 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1037 
=== Predecessor ===
v1351 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v58|QWORD[.] + v66|QWORD * 2], input: v11|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = LEA [v66|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v68|QWORD] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4579681994949064406
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1267 <|@
result v69|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1037 
values: j1278 j1273 
=== Succesors ===
=== Usages ===
v1448 j1272 j1261 v1303 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1037 values: j1278 j1273  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1037 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1036 v1054 
=== Succesors ===
next: v1057 
=== Usages ===
j1267 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1036 v1054 #next: v1057  <|@  <|@
f <@~|@floating>@ <|@
tid j1302 <|@
result v70|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j811 
y: j1136 
=== Succesors ===
=== Usages ===
v1303 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j811 y: j1136  <|@  <|@
f <@~|@floating>@ <|@
tid v1303 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1302 
y: j1267 
=== Succesors ===
=== Usages ===
v1057 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1302 y: j1267  <|@  <|@
f <@*|@fixed>@ <|@
tid v1057 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1303 
=== Succesors ===
trueSuccessor: v1056 
falseSuccessor: v1055 
=== Usages ===
=== Predecessor ===
v1037 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1303 #trueSuccessor: v1056 #falseSuccessor: v1055  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v69|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = LEA [v59|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v69|QWORD, y: v70|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4570674795694323414
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1056 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1060 
=== Usages ===
=== Predecessor ===
v1057 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1060  <|@  <|@
f <@*|@fixed>@ <|@
tid v1060 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1040 
=== Predecessor ===
v1056 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v69|QWORD] destination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4577549901657061664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1055 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1350 
=== Usages ===
=== Predecessor ===
v1057 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1350  <|@  <|@
f <@~|@floating>@ <|@
tid v1448 <|@
result [v58|QWORD[.] + v69|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1260 
index: j1267 
=== Succesors ===
=== Usages ===
v1350 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1260 index: j1267  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1350 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1448 
value: v1356 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1039 
=== Usages ===
=== Predecessor ===
v1055 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1448 value: v1356 stateAfter: - lastLocationAccess: - #next: v1039  <|@  <|@
f <@~|@floating>@ <|@
tid j1272 <|@
result v71|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1267 
y: j1082 
=== Succesors ===
=== Usages ===
j1261 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1267 y: j1082  <|@  <|@
f <@*|@fixed>@ <|@
tid v1039 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1040 
=== Predecessor ===
v1350 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v58|QWORD[.] + v69|QWORD * 2], input: v10|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = LEA [v69|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v71|QWORD] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4579681994949064406
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1261 <|@
result v72|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1040 
values: j1272 j1267 
=== Succesors ===
=== Usages ===
v1447 v1306 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1040 values: j1272 j1267  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1040 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1039 v1060 
=== Succesors ===
next: v1063 
=== Usages ===
j1261 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1039 v1060 #next: v1063  <|@  <|@
f <@~|@floating>@ <|@
tid j1305 <|@
result v73|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j811 
y: j1140 
=== Succesors ===
=== Usages ===
v1306 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j811 y: j1140  <|@  <|@
f <@~|@floating>@ <|@
tid v1306 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1305 
y: j1261 
=== Succesors ===
=== Usages ===
v1063 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1305 y: j1261  <|@  <|@
f <@*|@fixed>@ <|@
tid v1063 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1306 
=== Succesors ===
trueSuccessor: v1062 
falseSuccessor: v1061 
=== Usages ===
=== Predecessor ===
v1040 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1306 #trueSuccessor: v1062 #falseSuccessor: v1061  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v72|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = DEC v59|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v72|QWORD, y: v73|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4570674795694323414
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1062 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1066 
=== Usages ===
=== Predecessor ===
v1063 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1066  <|@  <|@
f <@*|@fixed>@ <|@
tid v1066 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1027 
=== Predecessor ===
v1062 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4577549901657061664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1061 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1349 
=== Usages ===
=== Predecessor ===
v1063 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1349  <|@  <|@
f <@~|@floating>@ <|@
tid v1447 <|@
result [v58|QWORD[.] + v72|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1260 
index: j1261 
=== Succesors ===
=== Usages ===
v1349 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1260 index: j1261  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1349 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1447 
value: i1355 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1042 
=== Usages ===
=== Predecessor ===
v1061 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1447 value: i1355 stateAfter: - lastLocationAccess: - #next: v1042  <|@  <|@
f <@*|@fixed>@ <|@
tid v1042 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1027 
=== Predecessor ===
v1349 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v58|QWORD[.] + v72|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B55 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4577549901657061664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1020 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1019 
=== Usages ===
=== Predecessor ===
v1021 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1019  <|@  <|@
f <@*|@fixed>@ <|@
tid v1019 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v1015 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1020 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1015  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|QWORD] destination: B56 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B58" 
    xhandlers
    flags 
    probability 4579681994949064406
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1008 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1026 
=== Usages ===
=== Predecessor ===
v1010 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1026  <|@  <|@
f <@*|@fixed>@ <|@
tid v1026 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1027 
=== Predecessor ===
v1008 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B55" "B54" 
    successors 
    xhandlers
    flags 
    probability 4584185594576434902
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1027 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1026 v1042 v1066 
=== Succesors ===
next: a602 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1026 v1042 v1066 #next: a602  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a602 <|@
result v33|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a692 
=== Succesors ===
next: v295 
=== Usages ===
v1386 a294 v1385 v1388 v1387 v1384 
=== Predecessor ===
v1027 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a692 #next: v295  <|@  <|@
f <@~|@floating>@ <|@
tid a294 <|@
result v74|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
op: Compress
stamp: n! -
=== Inputs ===
value: a602 
=== Succesors ===
=== Usages ===
v295 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a602  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: AbstractStringBuilder.value
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1377 
value: a294 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j728 
=== Usages ===
=== Predecessor ===
a602 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1377 value: a294 stateAfter: - lastLocationAccess: - #next: j728  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j728 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v734 
=== Usages ===
j730 
=== Predecessor ===
v295 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v734  <|@  <|@
f <@~|@floating>@ <|@
tid j730 <|@
result v75|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j728 
y: i729 
=== Succesors ===
=== Usages ===
v1409 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j728 y: i729  <|@  <|@
f <@~|@floating>@ <|@
tid v1409 <|@
result [v75|QWORD[*] + v9|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j730 
index: j733 
=== Succesors ===
=== Usages ===
v734 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j730 index: j733  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v734 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1409 
value: i735 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v296 
=== Usages ===
=== Predecessor ===
j728 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1409 value: i735 stateAfter: - lastLocationAccess: - #next: v296  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:623) [bci: 111]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1376 
value: i18 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v304 
=== Usages ===
=== Predecessor ===
v734 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1376 value: i18 stateAfter: - lastLocationAccess: - #next: v304  <|@  <|@
f <@~|@floating>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v483 v479 
=== Succesors ===
=== Usages ===
v313 v340 v331 v304 v322 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v483 v479  <|@  <|@
f <@~|@floating>@ <|@
tid v1384 <|@
result [v33|QWORD[.] + v4|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a602 
index: i1365 
=== Succesors ===
=== Usages ===
v304 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a602 index: i1365  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:623) [bci: 116]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v458 
address: v1384 
value: i425 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v305 
=== Usages ===
=== Predecessor ===
v296 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v458 address: v1384 value: i425 stateAfter: - lastLocationAccess: - #next: v305  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:624) [bci: 129]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1376 
value: i191 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v313 
=== Usages ===
=== Predecessor ===
v304 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1376 value: i191 stateAfter: - lastLocationAccess: - #next: v313  <|@  <|@
f <@~|@floating>@ <|@
tid v1385 <|@
result [v33|QWORD[.] + v7|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a602 
index: i18 
=== Succesors ===
=== Usages ===
v313 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a602 index: i18  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:624) [bci: 134]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v458 
address: v1385 
value: i427 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v314 
=== Usages ===
=== Predecessor ===
v305 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v458 address: v1385 value: i427 stateAfter: - lastLocationAccess: - #next: v314  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:625) [bci: 147]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1376 
value: i193 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v322 
=== Usages ===
=== Predecessor ===
v313 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1376 value: i193 stateAfter: - lastLocationAccess: - #next: v322  <|@  <|@
f <@~|@floating>@ <|@
tid v1386 <|@
result [v33|QWORD[.] + v6|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a602 
index: i191 
=== Succesors ===
=== Usages ===
v322 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a602 index: i191  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:625) [bci: 152]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v458 
address: v1386 
value: i429 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v323 
=== Usages ===
=== Predecessor ===
v314 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v458 address: v1386 value: i429 stateAfter: - lastLocationAccess: - #next: v323  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 165]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1376 
value: i11 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v331 
=== Usages ===
=== Predecessor ===
v322 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1376 value: i11 stateAfter: - lastLocationAccess: - #next: v331  <|@  <|@
f <@~|@floating>@ <|@
tid v1387 <|@
result [v33|QWORD[.] + v5|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a602 
index: i193 
=== Succesors ===
=== Usages ===
v331 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a602 index: i193  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 170]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v458 
address: v1387 
value: i431 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v332 
=== Usages ===
=== Predecessor ===
v323 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v458 address: v1387 value: i431 stateAfter: - lastLocationAccess: - #next: v332  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:627) [bci: 183]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1376 
value: i51 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v340 
=== Usages ===
=== Predecessor ===
v331 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1376 value: i51 stateAfter: - lastLocationAccess: - #next: v340  <|@  <|@
f <@~|@floating>@ <|@
tid v1388 <|@
result [v33|QWORD[.] + v8|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a602 
index: i11 
=== Succesors ===
=== Usages ===
v340 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a602 index: i11  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:627) [bci: 188]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v458 
address: v1388 
value: i433 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v100 
=== Usages ===
=== Predecessor ===
v332 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v458 address: v1388 value: i433 stateAfter: - lastLocationAccess: - #next: v100  <|@  <|@
f <@*|@fixed>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 189]
stamp: void
=== Inputs ===
result: a1 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v340 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v74|DWORD[.] = COMPRESSPOINTER (input: v33|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@3f307c23 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v74|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v75|QWORD[*] + v9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD[.] + v4|DWORD * 2 + 16] y: 102 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD[.] + v7|DWORD * 2 + 16] y: 97 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD[.] + v6|DWORD * 2 + 16] y: 108 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD[.] + v5|DWORD * 2 + 16] y: 115 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD[.] + v8|DWORD * 2 + 16] y: 101 size: WORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4577549901657061664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v957 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v956 
=== Usages ===
=== Predecessor ===
v958 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v956  <|@  <|@
f <@*|@fixed>@ <|@
tid v956 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v952 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v957 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v952  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v41|QWORD] destination: B59 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:627) [bci: 188]
stamp: void
=== Inputs ===
=== Succesors ===
next: v650 
=== Usages ===
=== Predecessor ===
v486 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v650  <|@  <|@
f <@~|@floating>@ <|@
tid i651 <|@
result int[-85531|0xfffffffffffeb1e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -85531
stableDimension: 0
stamp: i32 [-85531] ⇊00000000fffeb1e5 ⇈00000000fffeb1e5
stampKind: i32
value: int[-85531|0xfffffffffffeb1e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i629 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v650 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v625 
=== Predecessor ===
v485 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-85531|0xfffffffffffeb1e5]] destination: B60 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:623) [bci: 116]
stamp: void
=== Inputs ===
=== Succesors ===
next: v648 
=== Usages ===
=== Predecessor ===
v482 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v648  <|@  <|@
f <@~|@floating>@ <|@
tid i649 <|@
result int[-76315|0xfffffffffffed5e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -76315
stableDimension: 0
stamp: i32 [-76315] ⇊00000000fffed5e5 ⇈00000000fffed5e5
stampKind: i32
value: int[-76315|0xfffffffffffed5e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i629 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v648 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v625 
=== Predecessor ===
v481 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-76315|0xfffffffffffed5e5]] destination: B61 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B63" "B68" 
    xhandlers
    flags 
    probability 4600344360905117332
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v107 
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v107  <|@  <|@
f <@~|@floating>@ <|@
tid i103 <|@
result v76|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: i32
=== Inputs ===
x: i11 
y: i1364 
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i11 y: i1364  <|@  <|@
f <@~|@floating>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i103 
y: i17 
=== Succesors ===
=== Usages ===
v107 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i103 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid i444 <|@
result short[117|0x75] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:619) [bci: 67]
rawvalue: 117
stableDimension: 0
stamp: i16 [117] ⇊0000000000000075 ⇈0000000000000075
stampKind: i16
value: short[117|0x75]
=== Inputs ===
=== Succesors ===
=== Usages ===
v373 v414 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i442 <|@
result short[114|0x72] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:618) [bci: 49]
rawvalue: 114
stableDimension: 0
stamp: i16 [114] ⇊0000000000000072 ⇈0000000000000072
stampKind: i16
value: short[114|0x72]
=== Inputs ===
=== Succesors ===
=== Usages ===
v362 v405 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i440 <|@
result short[116|0x74] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:617) [bci: 31]
rawvalue: 116
stableDimension: 0
stamp: i16 [116] ⇊0000000000000074 ⇈0000000000000074
stampKind: i16
value: short[116|0x74]
=== Inputs ===
=== Succesors ===
=== Usages ===
v351 v396 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: void
trueSuccessorProbability: 0.953003048985209
=== Inputs ===
condition: v104 
=== Succesors ===
trueSuccessor: v105 
falseSuccessor: v106 
=== Usages ===
=== Predecessor ===
v7 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v104 #trueSuccessor: v105 #falseSuccessor: v106  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = SUB (x: v8|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v76|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.953003048985209 condition: < trueDestination: B62 -> B63 falseDestination: B62 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B67" 
    xhandlers
    flags 
    probability 4600030762423806969
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v490 
=== Usages ===
=== Predecessor ===
v107 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v490  <|@  <|@
f <@~|@floating>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:617) [bci: 31]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1365 
y: i1364 
=== Succesors ===
=== Usages ===
v490 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1365 y: i1364  <|@  <|@
f <@*|@fixed>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:617) [bci: 31]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v343 
=== Succesors ===
trueSuccessor: v487 
falseSuccessor: v489 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v343 #trueSuccessor: v487 #falseSuccessor: v489  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B63 -> B64 falseDestination: B63 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4600030762423806969
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:617) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v494 
=== Usages ===
v455 
=== Predecessor ===
v490 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v494  <|@  <|@
f <@~|@floating>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:620) [bci: 85]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i193 
y: i1364 
=== Succesors ===
=== Usages ===
v494 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i193 y: i1364  <|@  <|@
f <@*|@fixed>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:620) [bci: 85]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v376 
=== Succesors ===
trueSuccessor: v491 
falseSuccessor: v493 
=== Usages ===
=== Predecessor ===
v487 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v376 #trueSuccessor: v491 #falseSuccessor: v493  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors 
    xhandlers
    flags 
    probability 4600030762423806969
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v491 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:620) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v341 
=== Usages ===
v455 
=== Predecessor ===
v494 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v341  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:617) [bci: 26]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1376 
value: i18 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v351 
=== Usages ===
=== Predecessor ===
v491 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1376 value: i18 stateAfter: - lastLocationAccess: - #next: v351  <|@  <|@
f <@~|@floating>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v491 v487 
=== Succesors ===
=== Usages ===
v362 v383 v373 v351 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v491 v487  <|@  <|@
f <@~|@floating>@ <|@
tid a231 <|@
result v77|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 96]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1363 
=== Succesors ===
=== Usages ===
v1392 v1390 v1389 v1391 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1363  <|@  <|@
f <@~|@floating>@ <|@
tid v1389 <|@
result [v77|QWORD[.] + v4|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a231 
index: i1365 
=== Succesors ===
=== Usages ===
v351 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a231 index: i1365  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:617) [bci: 31]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v455 
address: v1389 
value: i440 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v352 
=== Usages ===
=== Predecessor ===
v341 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v455 address: v1389 value: i440 stateAfter: - lastLocationAccess: - #next: v352  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:618) [bci: 44]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1376 
value: i191 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v362 
=== Usages ===
=== Predecessor ===
v351 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1376 value: i191 stateAfter: - lastLocationAccess: - #next: v362  <|@  <|@
f <@~|@floating>@ <|@
tid v1390 <|@
result [v77|QWORD[.] + v7|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a231 
index: i18 
=== Succesors ===
=== Usages ===
v362 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a231 index: i18  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:618) [bci: 49]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v455 
address: v1390 
value: i442 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v363 
=== Usages ===
=== Predecessor ===
v352 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v455 address: v1390 value: i442 stateAfter: - lastLocationAccess: - #next: v363  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:619) [bci: 62]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1376 
value: i193 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v373 
=== Usages ===
=== Predecessor ===
v362 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1376 value: i193 stateAfter: - lastLocationAccess: - #next: v373  <|@  <|@
f <@~|@floating>@ <|@
tid v1391 <|@
result [v77|QWORD[.] + v6|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a231 
index: i191 
=== Succesors ===
=== Usages ===
v373 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a231 index: i191  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:619) [bci: 67]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v455 
address: v1391 
value: i444 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v374 
=== Usages ===
=== Predecessor ===
v363 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v455 address: v1391 value: i444 stateAfter: - lastLocationAccess: - #next: v374  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:620) [bci: 80]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1376 
value: i11 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v383 
=== Usages ===
=== Predecessor ===
v373 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1376 value: i11 stateAfter: - lastLocationAccess: - #next: v383  <|@  <|@
f <@~|@floating>@ <|@
tid v1392 <|@
result [v77|QWORD[.] + v5|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a231 
index: i193 
=== Succesors ===
=== Usages ===
v383 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a231 index: i193  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:620) [bci: 85]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v455 
address: v1392 
value: i433 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v224 
=== Usages ===
=== Predecessor ===
v374 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v455 address: v1392 value: i433 stateAfter: - lastLocationAccess: - #next: v224  <|@  <|@
f <@*|@fixed>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 189]
stamp: void
=== Inputs ===
result: a1 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v383 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3f307c23 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV [v77|QWORD[.] + v4|DWORD * 2 + 16] y: 116 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v77|QWORD[.] + v7|DWORD * 2 + 16] y: 114 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v77|QWORD[.] + v6|DWORD * 2 + 16] y: 117 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v77|QWORD[.] + v5|DWORD * 2 + 16] y: 101 size: WORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v493 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:620) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v642 
=== Usages ===
=== Predecessor ===
v494 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v642  <|@  <|@
f <@~|@floating>@ <|@
tid i643 <|@
result int[-96539|0xfffffffffffe86e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -96539
stableDimension: 0
stamp: i32 [-96539] ⇊00000000fffe86e5 ⇈00000000fffe86e5
stampKind: i32
value: int[-96539|0xfffffffffffe86e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i629 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v642 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v625 
=== Predecessor ===
v493 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-96539|0xfffffffffffe86e5]] destination: B66 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:617) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v640 
=== Usages ===
=== Predecessor ===
v490 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v640  <|@  <|@
f <@~|@floating>@ <|@
tid i641 <|@
result int[-88091|0xfffffffffffea7e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -88091
stableDimension: 0
stamp: i32 [-88091] ⇊00000000fffea7e5 ⇈00000000fffea7e5
stampKind: i32
value: int[-88091|0xfffffffffffea7e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i629 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v625 
=== Predecessor ===
v489 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-88091|0xfffffffffffea7e5]] destination: B67 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" "B70" 
    xhandlers
    flags 
    probability 4580674797109389737
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v498 
=== Usages ===
=== Predecessor ===
v107 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v498  <|@  <|@
f <@~|@floating>@ <|@
tid i145 <|@
result v78|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:150) [bci: 6]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i1364 
y: i17 
=== Succesors ===
=== Usages ===
i147 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1364 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid i147 <|@
result v79|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:150) [bci: 8]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i145 
y: i146 
=== Succesors ===
=== Usages ===
i148 i450 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i145 y: i146  <|@  <|@
f <@~|@floating>@ <|@
tid i148 <|@
result v80|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:151) [bci: 12]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: i32
=== Inputs ===
x: i147 
y: i11 
=== Succesors ===
=== Usages ===
v149 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i147 y: i11  <|@  <|@
f <@~|@floating>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:151) [bci: 13]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i148 
y: i4 
=== Succesors ===
=== Usages ===
i450 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i148 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i450 <|@
result v81|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v149 
trueValue: i11 
falseValue: i147 
=== Succesors ===
=== Usages ===
v416 v389 v158 i161 j799 v745 v529 i590 a760 v779 i738 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v149 trueValue: i11 falseValue: i147  <|@  <|@
f <@~|@floating>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i450 
y: i17 
=== Succesors ===
=== Usages ===
v498 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i450 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v498 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v158 
=== Succesors ===
trueSuccessor: v497 
falseSuccessor: v495 
=== Usages ===
=== Predecessor ===
v106 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v158 #trueSuccessor: v497 #falseSuccessor: v495  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = SHL v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = LEA [v78|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = SUB (x: v79|DWORD, ~y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v80|DWORD, y: v80|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = CMOVE (falseValue: v79|DWORD, ~trueValue: v8|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction CMP v81|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B68 -> B69 falseDestination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v638 
=== Usages ===
=== Predecessor ===
v498 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v638  <|@  <|@
f <@~|@floating>@ <|@
tid i639 <|@
result int[-98323|0xfffffffffffe7fed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -98323
stableDimension: 0
stamp: i32 [-98323] ⇊00000000fffe7fed ⇈00000000fffe7fed
stampKind: i32
value: int[-98323|0xfffffffffffe7fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i629 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v625 
=== Predecessor ===
v497 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-98323|0xfffffffffffe7fed]] destination: B69 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4580674797109389737
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v502 
=== Usages ===
=== Predecessor ===
v498 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v502  <|@  <|@
f <@~|@floating>@ <|@
tid i161 <|@
result v83|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 25]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: i32
=== Inputs ===
x: i160 
y: i450 
=== Succesors ===
=== Usages ===
v162 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i160 y: i450  <|@  <|@
f <@~|@floating>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i161 
y: i4 
=== Succesors ===
=== Usages ===
v502 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i161 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v162 
=== Succesors ===
trueSuccessor: v501 
falseSuccessor: v499 
=== Usages ===
=== Predecessor ===
v495 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v162 #trueSuccessor: v501 #falseSuccessor: v499  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = MOVE input: int[2147483639|0x7ffffff7] <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = SUB (x: v82|DWORD, ~y: v81|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v83|DWORD, y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v646 
=== Usages ===
=== Predecessor ===
v502 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v646  <|@  <|@
f <@~|@floating>@ <|@
tid i647 <|@
result int[-98579|0xfffffffffffe7eed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -98579
stableDimension: 0
stamp: i32 [-98579] ⇊00000000fffe7eed ⇈00000000fffe7eed
stampKind: i32
value: int[-98579|0xfffffffffffe7eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i629 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v646 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v625 
=== Predecessor ===
v501 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-98579|0xfffffffffffe7eed]] destination: B71 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B122" 
    xhandlers
    flags 
    probability 4580674797109389737
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v506 
=== Usages ===
=== Predecessor ===
v502 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v506  <|@  <|@
f <@~|@floating>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:617) [bci: 31]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1365 
y: i450 
=== Succesors ===
=== Usages ===
v506 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1365 y: i450  <|@  <|@
f <@*|@fixed>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:617) [bci: 31]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v389 
=== Succesors ===
trueSuccessor: v503 
falseSuccessor: v505 
=== Usages ===
=== Predecessor ===
v499 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v389 #trueSuccessor: v503 #falseSuccessor: v505  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v81|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B72 -> B73 falseDestination: B72 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B121" 
    xhandlers
    flags 
    probability 4580674797109389737
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v503 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:617) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v510 
=== Usages ===
v456 
=== Predecessor ===
v506 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v510  <|@  <|@
f <@~|@floating>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:620) [bci: 85]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i193 
y: i450 
=== Succesors ===
=== Usages ===
v510 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i193 y: i450  <|@  <|@
f <@*|@fixed>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:620) [bci: 85]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v416 
=== Succesors ===
trueSuccessor: v507 
falseSuccessor: v509 
=== Usages ===
=== Predecessor ===
v503 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v416 #trueSuccessor: v507 #falseSuccessor: v509  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v81|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B78" 
    xhandlers
    flags 
    probability 4580674797109389737
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:620) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: j740 
=== Usages ===
v456 
=== Predecessor ===
v510 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j740  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j740 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j776 
=== Usages ===
v1410 v1411 
=== Predecessor ===
v507 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j776  <|@  <|@
f <@~|@floating>@ <|@
tid v1410 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j740 
index: - 
=== Succesors ===
=== Usages ===
j776 v778 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j740 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j776 <|@
result v84|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1410 
=== Succesors ===
next: j777 
=== Usages ===
j744 v1412 v1413 a759 v1418 v1414 v1415 v1416 v1417 
=== Predecessor ===
j740 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1410 #next: j777  <|@  <|@
f <@~|@floating>@ <|@
tid v1411 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j740 
index: - 
=== Succesors ===
=== Usages ===
j777 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j740 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j777 <|@
result v85|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1411 
=== Succesors ===
next: v748 
=== Usages ===
v749 
=== Predecessor ===
j776 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1411 #next: v748  <|@  <|@
f <@~|@floating>@ <|@
tid v745 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i450 
y: i672 
=== Succesors ===
=== Usages ===
v748 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i450 y: i672  <|@  <|@
f <@*|@fixed>@ <|@
tid v748 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v745 
=== Succesors ===
trueSuccessor: v747 
falseSuccessor: v746 
=== Usages ===
=== Predecessor ===
j777 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v745 #trueSuccessor: v747 #falseSuccessor: v746  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v85|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v81|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B74 -> B75 falseDestination: B74 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4580173039539293157
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v747 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v755 
=== Usages ===
=== Predecessor ===
v748 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v755  <|@  <|@
f <@~|@floating>@ <|@
tid i738 <|@
result v86|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i450 
y: i17 
=== Succesors ===
=== Usages ===
i767 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i450 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid i767 <|@
result v87|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i738 
y: i695 
=== Succesors ===
=== Usages ===
i739 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i738 y: i695  <|@  <|@
f <@~|@floating>@ <|@
tid i739 <|@
result v88|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i767 
y: i665 
=== Succesors ===
=== Usages ===
j743 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i767 y: i665  <|@  <|@
f <@~|@floating>@ <|@
tid j743 <|@
result v89|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i739 
=== Succesors ===
=== Usages ===
j744 v1414 v1415 v1416 v1417 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i739  <|@  <|@
f <@~|@floating>@ <|@
tid j744 <|@
result v90|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: i64
=== Inputs ===
x: j743 
y: j776 
=== Succesors ===
=== Usages ===
v749 v778 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j743 y: j776  <|@  <|@
f <@~|@floating>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j777 
y: j744 
=== Succesors ===
=== Usages ===
v755 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j777 y: j744  <|@  <|@
f <@*|@fixed>@ <|@
tid v755 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v749 
=== Succesors ===
trueSuccessor: v754 
falseSuccessor: v753 
=== Usages ===
=== Predecessor ===
v747 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v749 #trueSuccessor: v754 #falseSuccessor: v753  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = SHL v81|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = LEA [v86|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = AND v87|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = MOVSXD v88|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = ADD (x: v89|QWORD, y: v84|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v90|QWORD, y: v85|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B75 -> B76 falseDestination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B79" 
    xhandlers
    flags 
    probability 4549912271224343072
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v754 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v752 
=== Usages ===
=== Predecessor ===
v755 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v752  <|@  <|@
f <@*|@fixed>@ <|@
tid v752 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v751 
=== Predecessor ===
v754 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B80" 
    xhandlers
    flags 
    probability 4580094941680174497
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v753 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v778 
=== Usages ===
=== Predecessor ===
v755 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v778  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v778 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1410 
value: j744 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v769 
=== Usages ===
=== Predecessor ===
v753 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1410 value: j744 stateAfter: - lastLocationAccess: - #next: v769  <|@  <|@
f <@~|@floating>@ <|@
tid v1414 <|@
result [v89|QWORD + v84|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j743 
index: j776 
=== Succesors ===
=== Usages ===
v769 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j743 index: j776  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v769 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: void
=== Inputs ===
address: v1414 
=== Succesors ===
next: v771 
=== Usages ===
=== Predecessor ===
v778 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1414 #next: v771  <|@  <|@
f <@~|@floating>@ <|@
tid v1415 <|@
result [v89|QWORD + v84|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j743 
index: j776 
=== Succesors ===
=== Usages ===
v771 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j743 index: j776  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v771 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: void
=== Inputs ===
address: v1415 
=== Succesors ===
next: v773 
=== Usages ===
=== Predecessor ===
v769 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1415 #next: v773  <|@  <|@
f <@~|@floating>@ <|@
tid v1416 <|@
result [v89|QWORD + v84|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j743 
index: j776 
=== Succesors ===
=== Usages ===
v773 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j743 index: j776  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v773 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: void
=== Inputs ===
address: v1416 
=== Succesors ===
next: v775 
=== Usages ===
=== Predecessor ===
v771 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1416 #next: v775  <|@  <|@
f <@~|@floating>@ <|@
tid v1417 <|@
result [v89|QWORD + v84|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j743 
index: j776 
=== Succesors ===
=== Usages ===
v775 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j743 index: j776  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v775 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: void
=== Inputs ===
address: v1417 
=== Succesors ===
next: v779 
=== Usages ===
=== Predecessor ===
v773 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1417 #next: v779  <|@  <|@
f <@~|@floating>@ <|@
tid v1412 <|@
result [v84|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j776 
index: - 
=== Succesors ===
=== Usages ===
v779 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j776 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1412 
value: i450 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v780 
=== Usages ===
=== Predecessor ===
v775 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1412 value: i450 stateAfter: - lastLocationAccess: - #next: v780  <|@  <|@
f <@~|@floating>@ <|@
tid v1413 <|@
result [v84|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j776 
index: - 
=== Succesors ===
=== Usages ===
v780 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j776 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v780 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1413 
value: j663 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v783 
=== Usages ===
=== Predecessor ===
v779 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1413 value: j663 stateAfter: - lastLocationAccess: - #next: v783  <|@  <|@
f <@~|@floating>@ <|@
tid v1418 <|@
result [v84|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j776 
index: - 
=== Succesors ===
=== Usages ===
v783 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j776 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v783 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1418 
value: v798 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v758 
=== Usages ===
=== Predecessor ===
v780 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1418 value: v798 stateAfter: - lastLocationAccess: - #next: v758  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v758 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: a759 
=== Usages ===
=== Predecessor ===
v783 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a759  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a759 <|@
result v91|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j776 
=== Succesors ===
next: v761 
=== Usages ===
a764 
=== Predecessor ===
v758 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j776 #next: v761  <|@  <|@
f <@*|@fixed>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v762 
=== Predecessor ===
a759 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v90|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v89|QWORD + v84|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v89|QWORD + v84|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v89|QWORD + v84|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v89|QWORD + v84|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v84|QWORD + 12], y: v81|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v84|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v84|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = MOVE v84|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v91|QWORD[.]] destination: B77 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    probability 4565670944020487232
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v746 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v750 
=== Usages ===
=== Predecessor ===
v748 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v750  <|@  <|@
f <@*|@fixed>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v751 
=== Predecessor ===
v746 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B76" 
    successors "B80" 
    xhandlers
    flags 
    probability 4566393474921426308
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v751 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v750 v752 
=== Succesors ===
next: a760 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v750 v752 #next: a760  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a760 <|@
result v92|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v662 i450 i4 
=== Succesors ===
next: v763 
=== Usages ===
a764 
=== Predecessor ===
v751 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v662 i450 i4 #next: v763  <|@  <|@
f <@*|@fixed>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v762 
=== Predecessor ===
a760 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v81|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v92|QWORD[.]] destination: B79 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4580674797109389737
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a764 <|@
result v93|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v762 
values: a759 a760 
=== Succesors ===
=== Usages ===
v1420 a598 v1398 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v762 values: a759 a760  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v761 v763 
=== Succesors ===
next: v1076 
=== Usages ===
a764 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v761 v763 #next: v1076  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1076 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v820 
=== Usages ===
j1077 j1079 
=== Predecessor ===
v762 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v820  <|@  <|@
f <@~|@floating>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1364 
y: i450 
=== Succesors ===
=== Usages ===
i590 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1364 y: i450  <|@  <|@
f <@~|@floating>@ <|@
tid i590 <|@
result v94|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v529 
trueValue: i1364 
falseValue: i450 
=== Succesors ===
=== Usages ===
j800 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v529 trueValue: i1364 falseValue: i450  <|@  <|@
f <@~|@floating>@ <|@
tid j800 <|@
result v95|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i590 
=== Succesors ===
=== Usages ===
j1141 v1420 j804 v817 v1071 j1123 j1129 j1133 j1137 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i590  <|@  <|@
f <@~|@floating>@ <|@
tid v817 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j800 
y: j663 
=== Succesors ===
=== Usages ===
v820 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j800 y: j663  <|@  <|@
f <@*|@fixed>@ <|@
tid v820 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v817 
=== Succesors ===
trueSuccessor: v818 
falseSuccessor: v819 
=== Usages ===
=== Predecessor ===
v1076 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v817 #trueSuccessor: v818 #falseSuccessor: v819  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v93|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v81|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = CMOVE (falseValue: v81|DWORD, ~trueValue: v3|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOVSXD v94|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v95|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B99" 
    xhandlers
    flags 
    probability 4576171197482019241
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v818 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v837 
=== Usages ===
=== Predecessor ===
v820 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v837  <|@  <|@
f <@*|@fixed>@ <|@
tid v837 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v838 
=== Predecessor ===
v818 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B81 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    probability 4576171197482019241
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v819 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v823 
=== Usages ===
=== Predecessor ===
v820 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v823  <|@  <|@
f <@~|@floating>@ <|@
tid v1398 <|@
result [v93|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a764 
index: - 
=== Succesors ===
=== Usages ===
j1079 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a764 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1079 <|@
result v96|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1076 
address: v1398 
=== Succesors ===
=== Usages ===
v1422 v1424 v1426 v1428 v1430 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1076 address: v1398  <|@  <|@
f <@~|@floating>@ <|@
tid v1452 <|@
result [v2|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1363 
=== Succesors ===
=== Usages ===
j1077 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1363  <|@  <|@
f <@~|@floating>@ <|@
tid j1077 <|@
result v97|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1076 
address: v1452 
=== Succesors ===
=== Usages ===
v1423 v1425 v1427 v1429 v1431 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1076 address: v1452  <|@  <|@
f <@~|@floating>@ <|@
tid j1123 <|@
result v98|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j800 
y: j1122 
=== Succesors ===
=== Usages ===
v1124 v1126 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j800 y: j1122  <|@  <|@
f <@~|@floating>@ <|@
tid v1124 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1123 
y: j699 
=== Succesors ===
=== Usages ===
v823 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1123 y: j699  <|@  <|@
f <@*|@fixed>@ <|@
tid v823 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1124 
=== Succesors ===
trueSuccessor: v821 
falseSuccessor: v822 
=== Usages ===
=== Predecessor ===
v819 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1124 #trueSuccessor: v821 #falseSuccessor: v822  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = LEA [v93|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v97|QWORD[*] = LEA [v2|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v98|QWORD = LEA [v95|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v98|QWORD, y: v98|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B82 -> B83 falseDestination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B87" 
    xhandlers
    flags 
    probability 4574176385705131646
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v821 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v833 
=== Usages ===
=== Predecessor ===
v823 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v833  <|@  <|@
f <@*|@fixed>@ <|@
tid v833 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v834 
=== Predecessor ===
v821 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B83 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    probability 4567163998227278249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v822 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v824 
=== Usages ===
=== Predecessor ===
v823 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v824  <|@  <|@
f <@*|@fixed>@ <|@
tid v824 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v825 
=== Predecessor ===
v822 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B120" 
    successors "B86" "B120" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4576171197482019241
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1114 <|@
result v99|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v825 
values: j699 j1121 
=== Succesors ===
=== Usages ===
v1431 j1121 v1430 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v825 values: j699 j1121  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v825 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v824 
=== Succesors ===
next: v1371 
=== Usages ===
v1371 v829 v830 j1114 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v824 #next: v1371  <|@  <|@
f <@~|@floating>@ <|@
tid v1431 <|@
result [v97|QWORD[*] + v99|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1077 
index: j1114 
=== Succesors ===
=== Usages ===
v1371 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1077 index: j1114  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1371 <|@
result v100|V256_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v825 
address: v1431 
=== Succesors ===
next: v1328 
=== Usages ===
v1328 
=== Predecessor ===
v825 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v825 address: v1431 #next: v1328  <|@  <|@
f <@~|@floating>@ <|@
tid v1430 <|@
result [v96|QWORD[.] + v99|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1079 
index: j1114 
=== Succesors ===
=== Usages ===
v1328 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1079 index: j1114  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1328 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1430 
value: v1371 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v832 
=== Usages ===
=== Predecessor ===
v1371 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1430 value: v1371 stateAfter: - lastLocationAccess: - #next: v832  <|@  <|@
f <@~|@floating>@ <|@
tid j1121 <|@
result v101|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1114 
y: j228 
=== Succesors ===
=== Usages ===
j1106 j1114 v1126 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1114 y: j228  <|@  <|@
f <@~|@floating>@ <|@
tid v1126 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1123 
y: j1121 
=== Succesors ===
=== Usages ===
v832 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1123 y: j1121  <|@  <|@
f <@*|@fixed>@ <|@
tid v832 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1126 
=== Succesors ===
trueSuccessor: v829 
falseSuccessor: v831 
=== Usages ===
=== Predecessor ===
v1328 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1126 #trueSuccessor: v829 #falseSuccessor: v831  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v99|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v100|V256_WORD = H [v97|QWORD[*] + v99|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v96|QWORD[.] + v99|QWORD * 2], input: v100|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v101|QWORD = LEA [v99|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v101|QWORD, y: v98|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B87" 
    xhandlers
    flags 
    probability 4567163998227278249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v829 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v825 
=== Succesors ===
next: v835 
=== Usages ===
=== Predecessor ===
v832 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v825 #next: v835  <|@  <|@
f <@*|@fixed>@ <|@
tid v835 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v834 
=== Predecessor ===
v829 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v101|QWORD] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B83" "B86" 
    successors "B88" "B89" 
    xhandlers
    flags 
    probability 4576171197482019241
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1106 <|@
result v102|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v834 
values: j699 j1121 
=== Succesors ===
=== Usages ===
v1429 j1113 j1097 v1130 v1428 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v834 values: j699 j1121  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v834 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v833 v835 
=== Succesors ===
next: v856 
=== Usages ===
j1106 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v833 v835 #next: v856  <|@  <|@
f <@~|@floating>@ <|@
tid j1129 <|@
result v103|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j800 
y: j1128 
=== Succesors ===
=== Usages ===
v1130 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j800 y: j1128  <|@  <|@
f <@~|@floating>@ <|@
tid v1130 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1129 
y: j1106 
=== Succesors ===
=== Usages ===
v856 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1129 y: j1106  <|@  <|@
f <@*|@fixed>@ <|@
tid v856 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1130 
=== Succesors ===
trueSuccessor: v855 
falseSuccessor: v854 
=== Usages ===
=== Predecessor ===
v834 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1130 #trueSuccessor: v855 #falseSuccessor: v854  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v102|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v103|QWORD = LEA [v95|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v102|QWORD, y: v103|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B87 -> B88 falseDestination: B87 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4567163998227278249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v855 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v859 
=== Usages ===
=== Predecessor ===
v856 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v859  <|@  <|@
f <@*|@fixed>@ <|@
tid v859 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v845 
=== Predecessor ===
v855 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v102|QWORD] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4574176385705131646
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v854 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1372 
=== Usages ===
v1372 
=== Predecessor ===
v856 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1372  <|@  <|@
f <@~|@floating>@ <|@
tid v1429 <|@
result [v97|QWORD[*] + v102|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1077 
index: j1106 
=== Succesors ===
=== Usages ===
v1372 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1077 index: j1106  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1372 <|@
result v104|V128_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v854 
address: v1429 
=== Succesors ===
next: v1326 
=== Usages ===
v1326 
=== Predecessor ===
v854 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v854 address: v1429 #next: v1326  <|@  <|@
f <@~|@floating>@ <|@
tid v1428 <|@
result [v96|QWORD[.] + v102|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1079 
index: j1106 
=== Succesors ===
=== Usages ===
v1326 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1079 index: j1106  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1326 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1428 
value: v1372 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v844 
=== Usages ===
=== Predecessor ===
v1372 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1428 value: v1372 stateAfter: - lastLocationAccess: - #next: v844  <|@  <|@
f <@~|@floating>@ <|@
tid j1113 <|@
result v105|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1106 
y: j718 
=== Succesors ===
=== Usages ===
j1097 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1106 y: j718  <|@  <|@
f <@*|@fixed>@ <|@
tid v844 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v845 
=== Predecessor ===
v1326 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v104|V128_WORD = H [v97|QWORD[*] + v102|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v96|QWORD[.] + v102|QWORD * 2], input: v104|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v105|QWORD = LEA [v102|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v105|QWORD] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B88" 
    successors "B91" "B92" 
    xhandlers
    flags 
    probability 4576171197482019241
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1097 <|@
result v106|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v845 
values: j1113 j1106 
=== Succesors ===
=== Usages ===
v1427 j1105 j1089 v1134 v1426 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v845 values: j1113 j1106  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v845 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v844 v859 
=== Succesors ===
next: v862 
=== Usages ===
j1097 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v844 v859 #next: v862  <|@  <|@
f <@~|@floating>@ <|@
tid j1133 <|@
result v107|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j800 
y: j1132 
=== Succesors ===
=== Usages ===
v1134 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j800 y: j1132  <|@  <|@
f <@~|@floating>@ <|@
tid v1134 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1133 
y: j1097 
=== Succesors ===
=== Usages ===
v862 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1133 y: j1097  <|@  <|@
f <@*|@fixed>@ <|@
tid v862 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1134 
=== Succesors ===
trueSuccessor: v861 
falseSuccessor: v860 
=== Usages ===
=== Predecessor ===
v845 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1134 #trueSuccessor: v861 #falseSuccessor: v860  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v106|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = LEA [v95|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v106|QWORD, y: v107|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B90 -> B91 falseDestination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" 
    xhandlers
    flags 
    probability 4567163998227278249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v861 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v865 
=== Usages ===
=== Predecessor ===
v862 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v865  <|@  <|@
f <@*|@fixed>@ <|@
tid v865 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v848 
=== Predecessor ===
v861 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v106|QWORD] destination: B91 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" 
    xhandlers
    flags 
    probability 4574176385705131646
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v860 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1373 
=== Usages ===
v1373 
=== Predecessor ===
v862 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1373  <|@  <|@
f <@~|@floating>@ <|@
tid v1427 <|@
result [v97|QWORD[*] + v106|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1077 
index: j1097 
=== Succesors ===
=== Usages ===
v1373 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1077 index: j1097  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1373 <|@
result v108|V64_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v860 
address: v1427 
=== Succesors ===
next: v1324 
=== Usages ===
v1324 
=== Predecessor ===
v860 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v860 address: v1427 #next: v1324  <|@  <|@
f <@~|@floating>@ <|@
tid v1426 <|@
result [v96|QWORD[.] + v106|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1079 
index: j1097 
=== Succesors ===
=== Usages ===
v1324 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1079 index: j1097  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1324 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1426 
value: v1373 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v847 
=== Usages ===
=== Predecessor ===
v1373 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1426 value: v1373 stateAfter: - lastLocationAccess: - #next: v847  <|@  <|@
f <@~|@floating>@ <|@
tid j1105 <|@
result v109|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1097 
y: j1104 
=== Succesors ===
=== Usages ===
j1089 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1097 y: j1104  <|@  <|@
f <@*|@fixed>@ <|@
tid v847 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v848 
=== Predecessor ===
v1324 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v108|V64_WORD = H [v97|QWORD[*] + v106|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v96|QWORD[.] + v106|QWORD * 2], input: v108|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v109|QWORD = LEA [v106|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v109|QWORD] destination: B92 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" "B91" 
    successors "B94" "B95" 
    xhandlers
    flags 
    probability 4576171197482019241
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1089 <|@
result v110|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v848 
values: j1105 j1097 
=== Succesors ===
=== Usages ===
v1425 j1096 j1080 v1138 v1424 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v848 values: j1105 j1097  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v848 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v847 v865 
=== Succesors ===
next: v868 
=== Usages ===
j1089 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v847 v865 #next: v868  <|@  <|@
f <@~|@floating>@ <|@
tid j1137 <|@
result v111|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j800 
y: j1136 
=== Succesors ===
=== Usages ===
v1138 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j800 y: j1136  <|@  <|@
f <@~|@floating>@ <|@
tid v1138 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1137 
y: j1089 
=== Succesors ===
=== Usages ===
v868 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1137 y: j1089  <|@  <|@
f <@*|@fixed>@ <|@
tid v868 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1138 
=== Succesors ===
trueSuccessor: v867 
falseSuccessor: v866 
=== Usages ===
=== Predecessor ===
v848 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1138 #trueSuccessor: v867 #falseSuccessor: v866  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v110|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v111|QWORD = LEA [v95|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v110|QWORD, y: v111|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B93 -> B94 falseDestination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" 
    xhandlers
    flags 
    probability 4567163998227278249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v867 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v871 
=== Usages ===
=== Predecessor ===
v868 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v871  <|@  <|@
f <@*|@fixed>@ <|@
tid v871 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v851 
=== Predecessor ===
v867 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v110|QWORD] destination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" 
    xhandlers
    flags 
    probability 4574176385705131646
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v866 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1374 
=== Usages ===
v1374 
=== Predecessor ===
v868 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1374  <|@  <|@
f <@~|@floating>@ <|@
tid v1425 <|@
result [v97|QWORD[*] + v110|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1077 
index: j1089 
=== Succesors ===
=== Usages ===
v1374 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1077 index: j1089  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1374 <|@
result v112|V32_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v866 
address: v1425 
=== Succesors ===
next: v1322 
=== Usages ===
v1322 
=== Predecessor ===
v866 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v866 address: v1425 #next: v1322  <|@  <|@
f <@~|@floating>@ <|@
tid v1424 <|@
result [v96|QWORD[.] + v110|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1079 
index: j1089 
=== Succesors ===
=== Usages ===
v1322 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1079 index: j1089  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1322 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1424 
value: v1374 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v850 
=== Usages ===
=== Predecessor ===
v1374 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1424 value: v1374 stateAfter: - lastLocationAccess: - #next: v850  <|@  <|@
f <@~|@floating>@ <|@
tid j1096 <|@
result v113|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1089 
y: j1082 
=== Succesors ===
=== Usages ===
j1080 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1089 y: j1082  <|@  <|@
f <@*|@fixed>@ <|@
tid v850 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v851 
=== Predecessor ===
v1322 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v112|V32_WORD = H [v97|QWORD[*] + v110|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v96|QWORD[.] + v110|QWORD * 2], input: v112|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v113|QWORD = LEA [v110|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v113|QWORD] destination: B95 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" "B94" 
    successors "B97" "B98" 
    xhandlers
    flags 
    probability 4576171197482019241
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1080 <|@
result v114|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v851 
values: j1096 j1089 
=== Succesors ===
=== Usages ===
v1423 v1142 v1422 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v851 values: j1096 j1089  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v851 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v850 v871 
=== Succesors ===
next: v874 
=== Usages ===
j1080 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v850 v871 #next: v874  <|@  <|@
f <@~|@floating>@ <|@
tid j1141 <|@
result v115|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j800 
y: j1140 
=== Succesors ===
=== Usages ===
v1142 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j800 y: j1140  <|@  <|@
f <@~|@floating>@ <|@
tid v1142 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1141 
y: j1080 
=== Succesors ===
=== Usages ===
v874 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1141 y: j1080  <|@  <|@
f <@*|@fixed>@ <|@
tid v874 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1142 
=== Succesors ===
trueSuccessor: v873 
falseSuccessor: v872 
=== Usages ===
=== Predecessor ===
v851 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1142 #trueSuccessor: v873 #falseSuccessor: v872  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v114|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v115|QWORD = DEC v95|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v114|QWORD, y: v115|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B96 -> B97 falseDestination: B96 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B99" 
    xhandlers
    flags 
    probability 4567163998227278249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v873 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v877 
=== Usages ===
=== Predecessor ===
v874 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v877  <|@  <|@
f <@*|@fixed>@ <|@
tid v877 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v838 
=== Predecessor ===
v873 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B97 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B99" 
    xhandlers
    flags 
    probability 4574176385705131646
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v872 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i1375 
=== Usages ===
i1375 
=== Predecessor ===
v874 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1375  <|@  <|@
f <@~|@floating>@ <|@
tid v1423 <|@
result [v97|QWORD[*] + v114|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1077 
index: j1080 
=== Succesors ===
=== Usages ===
i1375 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1077 index: j1080  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1375 <|@
result v116|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v872 
address: v1423 
=== Succesors ===
next: v1320 
=== Usages ===
v1320 
=== Predecessor ===
v872 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v872 address: v1423 #next: v1320  <|@  <|@
f <@~|@floating>@ <|@
tid v1422 <|@
result [v96|QWORD[.] + v114|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1079 
index: j1080 
=== Succesors ===
=== Usages ===
v1320 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1079 index: j1080  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1320 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1422 
value: i1375 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v853 
=== Usages ===
=== Predecessor ===
i1375 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1422 value: i1375 stateAfter: - lastLocationAccess: - #next: v853  <|@  <|@
f <@*|@fixed>@ <|@
tid v853 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v838 
=== Predecessor ===
v1320 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = MOVSX [v97|QWORD[*] + v114|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v96|QWORD[.] + v114|QWORD * 2], y: v116|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B98 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B81" "B98" "B97" 
    successors "B100" "B118" 
    xhandlers
    flags 
    probability 4580674797109389737
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v838 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v837 v853 v877 
=== Succesors ===
next: v1145 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v837 v853 v877 #next: v1145  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1145 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v884 
=== Usages ===
j1147 
=== Predecessor ===
v838 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v884  <|@  <|@
f <@~|@floating>@ <|@
tid j799 <|@
result v117|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i450 
=== Succesors ===
=== Usages ===
j804 v1071 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i450  <|@  <|@
f <@~|@floating>@ <|@
tid v1071 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j800 
y: j799 
=== Succesors ===
=== Usages ===
v884 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j800 y: j799  <|@  <|@
f <@*|@fixed>@ <|@
tid v884 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1071 
=== Succesors ===
trueSuccessor: v883 
falseSuccessor: v882 
=== Usages ===
=== Predecessor ===
v1145 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1071 #trueSuccessor: v883 #falseSuccessor: v882  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v117|QWORD = MOVSXD v81|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v117|QWORD, y: v95|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B99 -> B100 falseDestination: B99 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B101" "B102" 
    xhandlers
    flags 
    probability 4576171197482019241
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v883 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v887 
=== Usages ===
=== Predecessor ===
v884 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v887  <|@  <|@
f <@~|@floating>@ <|@
tid v1420 <|@
result [v93|QWORD[.] + v95|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a764 
index: j800 
=== Succesors ===
=== Usages ===
j1147 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a764 index: j800  <|@  <|@
f <@~|@floating>@ <|@
tid j1147 <|@
result v118|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1145 
address: v1420 
=== Succesors ===
=== Usages ===
v1432 v1433 v1434 v1435 v1436 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1145 address: v1420  <|@  <|@
f <@~|@floating>@ <|@
tid j804 <|@
result v119|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j799 
y: j800 
=== Succesors ===
=== Usages ===
j1192 j1178 j1183 j1186 j1189 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j799 y: j800  <|@  <|@
f <@~|@floating>@ <|@
tid j1178 <|@
result v120|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j804 
y: j1122 
=== Succesors ===
=== Usages ===
v1179 v1181 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j804 y: j1122  <|@  <|@
f <@~|@floating>@ <|@
tid v1179 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1178 
y: j699 
=== Succesors ===
=== Usages ===
v887 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1178 y: j699  <|@  <|@
f <@*|@fixed>@ <|@
tid v887 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1179 
=== Succesors ===
trueSuccessor: v885 
falseSuccessor: v886 
=== Usages ===
=== Predecessor ===
v883 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1179 #trueSuccessor: v885 #falseSuccessor: v886  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = LEA [v93|QWORD[.] + v95|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v119|QWORD = SUB (x: v117|QWORD, ~y: v95|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v120|QWORD = LEA [v119|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v120|QWORD, y: v120|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B100 -> B101 falseDestination: B100 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B105" 
    xhandlers
    flags 
    probability 4574176385705131646
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v885 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v896 
=== Usages ===
=== Predecessor ===
v887 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v896  <|@  <|@
f <@*|@fixed>@ <|@
tid v896 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v897 
=== Predecessor ===
v885 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B101 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B103" 
    xhandlers
    flags 
    probability 4567163998227278249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v886 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v888 
=== Usages ===
=== Predecessor ===
v887 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v888  <|@  <|@
f <@*|@fixed>@ <|@
tid v888 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v889 
=== Predecessor ===
v886 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B102 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" "B117" 
    successors "B104" "B117" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4576171197482019241
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1172 <|@
result v121|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v889 
values: j699 j1177 
=== Succesors ===
=== Usages ===
v1436 j1177 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v889 values: j699 j1177  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v889 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v888 
=== Succesors ===
next: v1338 
=== Usages ===
j1172 v892 v893 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v888 #next: v1338  <|@  <|@
f <@~|@floating>@ <|@
tid v1436 <|@
result [v118|QWORD[.] + v121|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1147 
index: j1172 
=== Succesors ===
=== Usages ===
v1338 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1147 index: j1172  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1338 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1436 
value: v1354 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v895 
=== Usages ===
=== Predecessor ===
v889 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1436 value: v1354 stateAfter: - lastLocationAccess: - #next: v895  <|@  <|@
f <@~|@floating>@ <|@
tid j1177 <|@
result v122|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1172 
y: j228 
=== Succesors ===
=== Usages ===
j1166 j1172 v1181 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1172 y: j228  <|@  <|@
f <@~|@floating>@ <|@
tid v1181 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1178 
y: j1177 
=== Succesors ===
=== Usages ===
v895 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1178 y: j1177  <|@  <|@
f <@*|@fixed>@ <|@
tid v895 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1181 
=== Succesors ===
trueSuccessor: v892 
falseSuccessor: v894 
=== Usages ===
=== Predecessor ===
v1338 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1181 #trueSuccessor: v892 #falseSuccessor: v894  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v121|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v118|QWORD[.] + v121|QWORD * 2], input: v13|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v122|QWORD = LEA [v121|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v122|QWORD, y: v120|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B103 -> B104 falseDestination: B103 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B105" 
    xhandlers
    flags 
    probability 4567163998227278249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v892 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v889 
=== Succesors ===
next: v898 
=== Usages ===
=== Predecessor ===
v895 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v889 #next: v898  <|@  <|@
f <@*|@fixed>@ <|@
tid v898 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v897 
=== Predecessor ===
v892 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v122|QWORD] destination: B104 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B101" "B104" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4576171197482019241
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1166 <|@
result v123|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v897 
values: j699 j1177 
=== Succesors ===
=== Usages ===
v1435 j1171 j1160 v1184 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v897 values: j699 j1177  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v897 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v896 v898 
=== Succesors ===
next: v919 
=== Usages ===
j1166 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v896 v898 #next: v919  <|@  <|@
f <@~|@floating>@ <|@
tid j1183 <|@
result v124|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j804 
y: j1128 
=== Succesors ===
=== Usages ===
v1184 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j804 y: j1128  <|@  <|@
f <@~|@floating>@ <|@
tid v1184 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1183 
y: j1166 
=== Succesors ===
=== Usages ===
v919 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1183 y: j1166  <|@  <|@
f <@*|@fixed>@ <|@
tid v919 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1184 
=== Succesors ===
trueSuccessor: v918 
falseSuccessor: v917 
=== Usages ===
=== Predecessor ===
v897 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1184 #trueSuccessor: v918 #falseSuccessor: v917  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v123|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v124|QWORD = LEA [v119|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v123|QWORD, y: v124|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B105 -> B106 falseDestination: B105 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4567163998227278249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v918 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v922 
=== Usages ===
=== Predecessor ===
v919 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v922  <|@  <|@
f <@*|@fixed>@ <|@
tid v922 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v908 
=== Predecessor ===
v918 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v123|QWORD] destination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4574176385705131646
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v917 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1337 
=== Usages ===
=== Predecessor ===
v919 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1337  <|@  <|@
f <@~|@floating>@ <|@
tid v1435 <|@
result [v118|QWORD[.] + v123|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1147 
index: j1166 
=== Succesors ===
=== Usages ===
v1337 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1147 index: j1166  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1337 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1435 
value: v1358 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v907 
=== Usages ===
=== Predecessor ===
v917 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1435 value: v1358 stateAfter: - lastLocationAccess: - #next: v907  <|@  <|@
f <@~|@floating>@ <|@
tid j1171 <|@
result v125|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1166 
y: j718 
=== Succesors ===
=== Usages ===
j1160 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1166 y: j718  <|@  <|@
f <@*|@fixed>@ <|@
tid v907 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v908 
=== Predecessor ===
v1337 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v118|QWORD[.] + v123|QWORD * 2], input: v12|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v125|QWORD = LEA [v123|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v125|QWORD] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    probability 4576171197482019241
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1160 <|@
result v126|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v908 
values: j1171 j1166 
=== Succesors ===
=== Usages ===
v1434 j1165 j1154 v1187 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v908 values: j1171 j1166  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v908 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v907 v922 
=== Succesors ===
next: v925 
=== Usages ===
j1160 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v907 v922 #next: v925  <|@  <|@
f <@~|@floating>@ <|@
tid j1186 <|@
result v127|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j804 
y: j1132 
=== Succesors ===
=== Usages ===
v1187 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j804 y: j1132  <|@  <|@
f <@~|@floating>@ <|@
tid v1187 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1186 
y: j1160 
=== Succesors ===
=== Usages ===
v925 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1186 y: j1160  <|@  <|@
f <@*|@fixed>@ <|@
tid v925 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1187 
=== Succesors ===
trueSuccessor: v924 
falseSuccessor: v923 
=== Usages ===
=== Predecessor ===
v908 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1187 #trueSuccessor: v924 #falseSuccessor: v923  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v126|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v127|QWORD = LEA [v119|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v126|QWORD, y: v127|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B108 -> B109 falseDestination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    probability 4567163998227278249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v924 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v928 
=== Usages ===
=== Predecessor ===
v925 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v928  <|@  <|@
f <@*|@fixed>@ <|@
tid v928 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v911 
=== Predecessor ===
v924 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v126|QWORD] destination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    probability 4574176385705131646
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v923 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1335 
=== Usages ===
=== Predecessor ===
v925 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1335  <|@  <|@
f <@~|@floating>@ <|@
tid v1434 <|@
result [v118|QWORD[.] + v126|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1147 
index: j1160 
=== Succesors ===
=== Usages ===
v1335 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1147 index: j1160  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1335 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1434 
value: v1357 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v910 
=== Usages ===
=== Predecessor ===
v923 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1434 value: v1357 stateAfter: - lastLocationAccess: - #next: v910  <|@  <|@
f <@~|@floating>@ <|@
tid j1165 <|@
result v128|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1160 
y: j1104 
=== Succesors ===
=== Usages ===
j1154 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1160 y: j1104  <|@  <|@
f <@*|@fixed>@ <|@
tid v910 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v911 
=== Predecessor ===
v1335 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v118|QWORD[.] + v126|QWORD * 2], input: v11|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v128|QWORD = LEA [v126|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v128|QWORD] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" "B109" 
    successors "B112" "B113" 
    xhandlers
    flags 
    probability 4576171197482019241
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1154 <|@
result v129|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v911 
values: j1165 j1160 
=== Succesors ===
=== Usages ===
v1433 j1159 j1148 v1190 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v911 values: j1165 j1160  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v911 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v910 v928 
=== Succesors ===
next: v931 
=== Usages ===
j1154 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v910 v928 #next: v931  <|@  <|@
f <@~|@floating>@ <|@
tid j1189 <|@
result v130|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j804 
y: j1136 
=== Succesors ===
=== Usages ===
v1190 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j804 y: j1136  <|@  <|@
f <@~|@floating>@ <|@
tid v1190 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1189 
y: j1154 
=== Succesors ===
=== Usages ===
v931 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1189 y: j1154  <|@  <|@
f <@*|@fixed>@ <|@
tid v931 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1190 
=== Succesors ===
trueSuccessor: v930 
falseSuccessor: v929 
=== Usages ===
=== Predecessor ===
v911 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1190 #trueSuccessor: v930 #falseSuccessor: v929  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v129|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v130|QWORD = LEA [v119|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v129|QWORD, y: v130|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B111 -> B112 falseDestination: B111 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    probability 4567163998227278249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v930 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v934 
=== Usages ===
=== Predecessor ===
v931 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v934  <|@  <|@
f <@*|@fixed>@ <|@
tid v934 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v914 
=== Predecessor ===
v930 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v129|QWORD] destination: B112 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    probability 4574176385705131646
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v929 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1333 
=== Usages ===
=== Predecessor ===
v931 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1333  <|@  <|@
f <@~|@floating>@ <|@
tid v1433 <|@
result [v118|QWORD[.] + v129|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1147 
index: j1154 
=== Succesors ===
=== Usages ===
v1333 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1147 index: j1154  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1333 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1433 
value: v1356 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v913 
=== Usages ===
=== Predecessor ===
v929 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1433 value: v1356 stateAfter: - lastLocationAccess: - #next: v913  <|@  <|@
f <@~|@floating>@ <|@
tid j1159 <|@
result v131|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1154 
y: j1082 
=== Succesors ===
=== Usages ===
j1148 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1154 y: j1082  <|@  <|@
f <@*|@fixed>@ <|@
tid v913 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v914 
=== Predecessor ===
v1333 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v118|QWORD[.] + v129|QWORD * 2], input: v10|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v131|QWORD = LEA [v129|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v131|QWORD] destination: B113 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" "B112" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4576171197482019241
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1148 <|@
result v132|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v914 
values: j1159 j1154 
=== Succesors ===
=== Usages ===
v1432 v1193 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v914 values: j1159 j1154  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v914 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v913 v934 
=== Succesors ===
next: v937 
=== Usages ===
j1148 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v913 v934 #next: v937  <|@  <|@
f <@~|@floating>@ <|@
tid j1192 <|@
result v133|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j804 
y: j1140 
=== Succesors ===
=== Usages ===
v1193 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j804 y: j1140  <|@  <|@
f <@~|@floating>@ <|@
tid v1193 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1192 
y: j1148 
=== Succesors ===
=== Usages ===
v937 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1192 y: j1148  <|@  <|@
f <@*|@fixed>@ <|@
tid v937 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1193 
=== Succesors ===
trueSuccessor: v936 
falseSuccessor: v935 
=== Usages ===
=== Predecessor ===
v914 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1193 #trueSuccessor: v936 #falseSuccessor: v935  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v132|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v133|QWORD = DEC v119|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v132|QWORD, y: v133|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B114 -> B115 falseDestination: B114 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B119" 
    xhandlers
    flags 
    probability 4567163998227278249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v936 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v940 
=== Usages ===
=== Predecessor ===
v937 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v940  <|@  <|@
f <@*|@fixed>@ <|@
tid v940 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v901 
=== Predecessor ===
v936 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B115 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B119" 
    xhandlers
    flags 
    probability 4574176385705131646
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v935 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1331 
=== Usages ===
=== Predecessor ===
v937 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1331  <|@  <|@
f <@~|@floating>@ <|@
tid v1432 <|@
result [v118|QWORD[.] + v132|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1147 
index: j1148 
=== Succesors ===
=== Usages ===
v1331 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1147 index: j1148  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1331 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1432 
value: i1355 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v916 
=== Usages ===
=== Predecessor ===
v935 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1432 value: i1355 stateAfter: - lastLocationAccess: - #next: v916  <|@  <|@
f <@*|@fixed>@ <|@
tid v916 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v901 
=== Predecessor ===
v1331 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v118|QWORD[.] + v132|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B116 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B103" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4574176385705131646
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v894 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v893 
=== Usages ===
=== Predecessor ===
v895 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v893  <|@  <|@
f <@*|@fixed>@ <|@
tid v893 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v889 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v894 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v889  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v122|QWORD] destination: B117 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B119" 
    xhandlers
    flags 
    probability 4576171197482019241
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v882 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v900 
=== Usages ===
=== Predecessor ===
v884 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v900  <|@  <|@
f <@*|@fixed>@ <|@
tid v900 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v901 
=== Predecessor ===
v882 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B118 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" "B116" "B115" 
    successors 
    xhandlers
    flags 
    probability 4580674797109389737
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v901 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v900 v916 v940 
=== Succesors ===
next: a598 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v900 v916 v940 #next: a598  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a598 <|@
result v93|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a764 
=== Succesors ===
next: v387 
=== Usages ===
v1393 a386 v1394 v1396 v1395 
=== Predecessor ===
v901 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a764 #next: v387  <|@  <|@
f <@~|@floating>@ <|@
tid a386 <|@
result v134|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
op: Compress
stamp: n! -
=== Inputs ===
value: a598 
=== Succesors ===
=== Usages ===
v387 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a598  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: AbstractStringBuilder.value
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1377 
value: a386 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j791 
=== Usages ===
=== Predecessor ===
a598 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1377 value: a386 stateAfter: - lastLocationAccess: - #next: j791  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j791 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v795 
=== Usages ===
j792 
=== Predecessor ===
v387 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v795  <|@  <|@
f <@~|@floating>@ <|@
tid j792 <|@
result v135|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j791 
y: i729 
=== Succesors ===
=== Usages ===
v1419 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j791 y: i729  <|@  <|@
f <@~|@floating>@ <|@
tid v1419 <|@
result [v135|QWORD[*] + v9|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j792 
index: j733 
=== Succesors ===
=== Usages ===
v795 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j792 index: j733  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v795 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:616) [bci: 11]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1419 
value: i735 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v388 
=== Usages ===
=== Predecessor ===
j791 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1419 value: i735 stateAfter: - lastLocationAccess: - #next: v388  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:617) [bci: 26]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1376 
value: i18 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v396 
=== Usages ===
=== Predecessor ===
v795 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1376 value: i18 stateAfter: - lastLocationAccess: - #next: v396  <|@  <|@
f <@~|@floating>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v507 v503 
=== Succesors ===
=== Usages ===
v405 v423 v414 v396 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v507 v503  <|@  <|@
f <@~|@floating>@ <|@
tid v1393 <|@
result [v93|QWORD[.] + v4|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a598 
index: i1365 
=== Succesors ===
=== Usages ===
v396 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a598 index: i1365  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:617) [bci: 31]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v456 
address: v1393 
value: i440 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v397 
=== Usages ===
=== Predecessor ===
v388 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v456 address: v1393 value: i440 stateAfter: - lastLocationAccess: - #next: v397  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:618) [bci: 44]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1376 
value: i191 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v405 
=== Usages ===
=== Predecessor ===
v396 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1376 value: i191 stateAfter: - lastLocationAccess: - #next: v405  <|@  <|@
f <@~|@floating>@ <|@
tid v1394 <|@
result [v93|QWORD[.] + v7|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a598 
index: i18 
=== Succesors ===
=== Usages ===
v405 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a598 index: i18  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:618) [bci: 49]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v456 
address: v1394 
value: i442 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v406 
=== Usages ===
=== Predecessor ===
v397 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v456 address: v1394 value: i442 stateAfter: - lastLocationAccess: - #next: v406  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:619) [bci: 62]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1376 
value: i193 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v414 
=== Usages ===
=== Predecessor ===
v405 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1376 value: i193 stateAfter: - lastLocationAccess: - #next: v414  <|@  <|@
f <@~|@floating>@ <|@
tid v1395 <|@
result [v93|QWORD[.] + v6|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a598 
index: i191 
=== Succesors ===
=== Usages ===
v414 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a598 index: i191  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:619) [bci: 67]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v456 
address: v1395 
value: i444 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v415 
=== Usages ===
=== Predecessor ===
v406 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v456 address: v1395 value: i444 stateAfter: - lastLocationAccess: - #next: v415  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:620) [bci: 80]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1376 
value: i11 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v423 
=== Usages ===
=== Predecessor ===
v414 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1376 value: i11 stateAfter: - lastLocationAccess: - #next: v423  <|@  <|@
f <@~|@floating>@ <|@
tid v1396 <|@
result [v93|QWORD[.] + v5|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a598 
index: i193 
=== Succesors ===
=== Usages ===
v423 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a598 index: i193  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:620) [bci: 85]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v456 
address: v1396 
value: i433 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v99 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v456 address: v1396 value: i433 stateAfter: - lastLocationAccess: - #next: v99  <|@  <|@
f <@*|@fixed>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 189]
stamp: void
=== Inputs ===
result: a1 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v423 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v134|DWORD[.] = COMPRESSPOINTER (input: v93|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@3f307c23 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v134|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v135|QWORD[*] + v9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v93|QWORD[.] + v4|DWORD * 2 + 16] y: 116 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v93|QWORD[.] + v7|DWORD * 2 + 16] y: 114 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v93|QWORD[.] + v6|DWORD * 2 + 16] y: 117 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v93|QWORD[.] + v5|DWORD * 2 + 16] y: 101 size: WORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B85" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4574176385705131646
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v831 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v830 
=== Usages ===
=== Predecessor ===
v832 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v830  <|@  <|@
f <@*|@fixed>@ <|@
tid v830 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v825 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v831 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v825  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v101|QWORD] destination: B120 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v509 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:620) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v654 
=== Usages ===
=== Predecessor ===
v510 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v654  <|@  <|@
f <@~|@floating>@ <|@
tid i655 <|@
result int[-106779|0xfffffffffffe5ee5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -106779
stableDimension: 0
stamp: i32 [-106779] ⇊00000000fffe5ee5 ⇈00000000fffe5ee5
stampKind: i32
value: int[-106779|0xfffffffffffe5ee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i629 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v654 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v625 
=== Predecessor ===
v509 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-106779|0xfffffffffffe5ee5]] destination: B121 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:617) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v652 
=== Usages ===
=== Predecessor ===
v506 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v652  <|@  <|@
f <@~|@floating>@ <|@
tid i653 <|@
result int[-99867|0xfffffffffffe79e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -99867
stableDimension: 0
stamp: i32 [-99867] ⇊00000000fffe79e5 ⇈00000000fffe79e5
stampKind: i32
value: int[-99867|0xfffffffffffe79e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i629 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v652 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v625 
=== Predecessor ===
v505 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-99867|0xfffffffffffe79e5]] destination: B122 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B8" "B6" "B5" "B69" "B67" "B66" "B10" "B71" "B61" "B60" "B122" "B121" 
    successors 
    xhandlers
    flags 
    probability 2371145203810566144
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i629 <|@
result v136|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-106779 - -59659] ⇊00000000fffe00e5 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v625 
values: i633 i635 i637 i639 i641 i643 i645 i647 i649 i651 i653 i655 
=== Succesors ===
=== Usages ===
v631 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v625 values: i633 i635 i637 i639 i641 i643 i645 i647 i649 i651 i653 i655  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v625 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v632 v634 v636 v638 v640 v642 v644 v646 v648 v650 v652 v654 
=== Succesors ===
next: v631 
=== Usages ===
i629 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v632 v634 v636 v638 v640 v642 v644 v646 v648 v650 v652 v654 #next: v631  <|@  <|@
f <@~|@floating>@ <|@
tid a628 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v631 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v631 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i629 
speculation: a628 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v625 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i629 speculation: a628  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v136|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v136|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B62" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1f760f52 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v3|DWORD = MOV [v2|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = LEA [v4|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = LEA [v4|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = INC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = LEA [v4|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6295884659318947 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B7" 
    xhandlers
    flags 
    probability 4603846048306411702
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = LEA [v4|DWORD + 5] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = SUB (x: v15|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v16|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.953003048985209 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4603579536644911359
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4603579536644911359
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4603579536644911359
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3f307c23 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV [v17|QWORD[.] + v4|DWORD * 2 + 16] y: 102 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v17|QWORD[.] + v7|DWORD * 2 + 16] y: 97 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v17|QWORD[.] + v6|DWORD * 2 + 16] y: 108 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v17|QWORD[.] + v5|DWORD * 2 + 16] y: 115 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v17|QWORD[.] + v8|DWORD * 2 + 16] y: 101 size: WORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B63" "B68" 
    xhandlers
    flags 
    probability 4600344360905117332
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = SUB (x: v8|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v76|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.953003048985209 condition: < trueDestination: B62 -> B63 falseDestination: B62 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B67" 
    xhandlers
    flags 
    probability 4600030762423806969
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B63 -> B64 falseDestination: B63 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4600030762423806969
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors 
    xhandlers
    flags 
    probability 4600030762423806969
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3f307c23 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV [v77|QWORD[.] + v4|DWORD * 2 + 16] y: 116 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v77|QWORD[.] + v7|DWORD * 2 + 16] y: 114 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v77|QWORD[.] + v6|DWORD * 2 + 16] y: 117 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v77|QWORD[.] + v5|DWORD * 2 + 16] y: 101 size: WORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4584185594576434903
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SHL v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = LEA [v18|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = SUB (x: v19|DWORD, ~y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v20|DWORD, y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = CMOVE (falseValue: v19|DWORD, ~trueValue: v15|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction CMP v21|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4584185594576434903
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVE input: int[2147483639|0x7ffffff7] <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = SUB (x: v22|DWORD, ~y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v23|DWORD, y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B61" 
    xhandlers
    flags 
    probability 4584185594576434903
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B60" 
    xhandlers
    flags 
    probability 4584185594576434903
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B17" 
    xhandlers
    flags 
    probability 4584185594576434903
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v21|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4583332757259633806
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = SHL v21|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = LEA [v26|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = AND v27|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOVSXD v28|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = ADD (x: v29|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v30|QWORD, y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4583256001901121707
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v29|QWORD + v24|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v29|QWORD + v24|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v29|QWORD + v24|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v29|QWORD + v24|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD + 12], y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v24|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v24|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = MOVE v24|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v31|QWORD[.]] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4584185594576434902
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = CMOVE (falseValue: v21|DWORD, ~trueValue: v3|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = MOVSXD v34|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v35|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4579681994949064406
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = LEA [v33|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[*] = LEA [v2|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = LEA [v35|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v38|QWORD, y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4577549901657061664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4579681994949064406
    begin_IR
      LIR
      nr   -1  <|@ instruction [v42|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = LEA [v35|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v42|QWORD, y: v43|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4577549901657061664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v44|V128_WORD = H [v37|QWORD[*] + v42|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v36|QWORD[.] + v42|QWORD * 2], input: v44|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = LEA [v42|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v45|QWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4579681994949064406
    begin_IR
      LIR
      nr   -1  <|@ instruction [v46|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = LEA [v35|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v46|QWORD, y: v47|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4577549901657061664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|V64_WORD = H [v37|QWORD[*] + v46|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v36|QWORD[.] + v46|QWORD * 2], input: v48|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = LEA [v46|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|QWORD] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4579681994949064406
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = LEA [v35|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v50|QWORD, y: v51|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4577549901657061664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|V32_WORD = H [v37|QWORD[*] + v50|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v36|QWORD[.] + v50|QWORD * 2], input: v52|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = LEA [v50|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v53|QWORD] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4579681994949064406
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = DEC v35|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v54|QWORD, y: v55|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4577549901657061664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOVSX [v37|QWORD[*] + v54|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v36|QWORD[.] + v54|QWORD * 2], y: v56|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" "B37" "B36" 
    successors "B39" "B57" 
    xhandlers
    flags 
    probability 4584185594576434902
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOVSXD v21|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v57|QWORD, y: v35|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B58" 
    xhandlers
    flags 
    probability 4579681994949064406
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B55" "B54" 
    successors 
    xhandlers
    flags 
    probability 4584185594576434902
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v138|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction v74|DWORD[.] = COMPRESSPOINTER (input: v33|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@3f307c23 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v74|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v75|QWORD[*] + v138|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD[.] + v4|DWORD * 2 + 16] y: 102 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD[.] + v7|DWORD * 2 + 16] y: 97 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD[.] + v6|DWORD * 2 + 16] y: 108 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD[.] + v5|DWORD * 2 + 16] y: 115 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD[.] + v8|DWORD * 2 + 16] y: 101 size: WORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" "B70" 
    xhandlers
    flags 
    probability 4580674797109389737
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = SHL v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = LEA [v78|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = SUB (x: v79|DWORD, ~y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v80|DWORD, y: v80|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = CMOVE (falseValue: v79|DWORD, ~trueValue: v8|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction CMP v81|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B68 -> B69 falseDestination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4580674797109389737
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = MOVE input: int[2147483639|0x7ffffff7] <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = SUB (x: v82|DWORD, ~y: v81|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v83|DWORD, y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B122" 
    xhandlers
    flags 
    probability 4580674797109389737
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v81|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B72 -> B73 falseDestination: B72 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B121" 
    xhandlers
    flags 
    probability 4580674797109389737
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v81|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B78" 
    xhandlers
    flags 
    probability 4580674797109389737
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v85|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v81|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B74 -> B75 falseDestination: B74 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4580173039539293157
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = SHL v81|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = LEA [v86|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = AND v87|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = MOVSXD v88|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = ADD (x: v89|QWORD, y: v84|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v90|QWORD, y: v85|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B75 -> B76 falseDestination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B80" 
    xhandlers
    flags 
    probability 4580094941680174497
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v90|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v89|QWORD + v84|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v89|QWORD + v84|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v89|QWORD + v84|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v89|QWORD + v84|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v84|QWORD + 12], y: v81|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v84|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v84|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = MOVE v84|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v91|QWORD[.]] destination: B77 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4580674797109389737
    begin_IR
      LIR
      nr   -1  <|@ instruction [v93|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v81|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = CMOVE (falseValue: v81|DWORD, ~trueValue: v3|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOVSXD v94|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v95|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    probability 4576171197482019241
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = LEA [v93|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v97|QWORD[*] = LEA [v2|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v98|QWORD = LEA [v95|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v98|QWORD, y: v98|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B82 -> B83 falseDestination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B87" 
    xhandlers
    flags 
    probability 4574176385705131646
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B83 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B83" "B86" 
    successors "B88" "B89" 
    xhandlers
    flags 
    probability 4576171197482019241
    begin_IR
      LIR
      nr   -1  <|@ instruction [v102|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v103|QWORD = LEA [v95|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v102|QWORD, y: v103|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B87 -> B88 falseDestination: B87 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4574176385705131646
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v104|V128_WORD = H [v97|QWORD[*] + v102|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v96|QWORD[.] + v102|QWORD * 2], input: v104|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v105|QWORD = LEA [v102|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v105|QWORD] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B88" 
    successors "B91" "B92" 
    xhandlers
    flags 
    probability 4576171197482019241
    begin_IR
      LIR
      nr   -1  <|@ instruction [v106|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = LEA [v95|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v106|QWORD, y: v107|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B90 -> B91 falseDestination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" 
    xhandlers
    flags 
    probability 4574176385705131646
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v108|V64_WORD = H [v97|QWORD[*] + v106|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v96|QWORD[.] + v106|QWORD * 2], input: v108|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v109|QWORD = LEA [v106|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v109|QWORD] destination: B92 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" "B91" 
    successors "B94" "B95" 
    xhandlers
    flags 
    probability 4576171197482019241
    begin_IR
      LIR
      nr   -1  <|@ instruction [v110|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v111|QWORD = LEA [v95|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v110|QWORD, y: v111|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B93 -> B94 falseDestination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" 
    xhandlers
    flags 
    probability 4574176385705131646
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v112|V32_WORD = H [v97|QWORD[*] + v110|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v96|QWORD[.] + v110|QWORD * 2], input: v112|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v113|QWORD = LEA [v110|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v113|QWORD] destination: B95 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" "B94" 
    successors "B97" "B98" 
    xhandlers
    flags 
    probability 4576171197482019241
    begin_IR
      LIR
      nr   -1  <|@ instruction [v114|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v115|QWORD = DEC v95|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v114|QWORD, y: v115|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B96 -> B97 falseDestination: B96 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B99" 
    xhandlers
    flags 
    probability 4574176385705131646
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = MOVSX [v97|QWORD[*] + v114|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v96|QWORD[.] + v114|QWORD * 2], y: v116|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B98 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B81" "B98" "B97" 
    successors "B100" "B118" 
    xhandlers
    flags 
    probability 4580674797109389737
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v117|QWORD = MOVSXD v81|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v117|QWORD, y: v95|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B99 -> B100 falseDestination: B99 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B119" 
    xhandlers
    flags 
    probability 4576171197482019241
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B118 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" "B116" "B115" 
    successors 
    xhandlers
    flags 
    probability 4580674797109389737
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v137|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction v134|DWORD[.] = COMPRESSPOINTER (input: v93|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@3f307c23 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v134|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v135|QWORD[*] + v137|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v93|QWORD[.] + v4|DWORD * 2 + 16] y: 116 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v93|QWORD[.] + v7|DWORD * 2 + 16] y: 114 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v93|QWORD[.] + v6|DWORD * 2 + 16] y: 117 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v93|QWORD[.] + v5|DWORD * 2 + 16] y: 101 size: WORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B38" 
    xhandlers
    flags 
    probability 4579681994949064406
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4579681994949064406
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = LEA [v33|QWORD[.] + v35|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = SUB (x: v57|QWORD, ~y: v35|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = LEA [v59|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v60|QWORD, y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    probability 4577549901657061664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4579681994949064406
    begin_IR
      LIR
      nr   -1  <|@ instruction [v63|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = LEA [v59|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v63|QWORD, y: v64|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4577549901657061664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v144|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v58|QWORD[.] + v63|QWORD * 2], input: v144|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = LEA [v63|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v65|QWORD] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4579681994949064406
    begin_IR
      LIR
      nr   -1  <|@ instruction [v66|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = LEA [v59|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v66|QWORD, y: v67|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4577549901657061664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v142|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v58|QWORD[.] + v66|QWORD * 2], input: v142|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = LEA [v66|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v68|QWORD] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4579681994949064406
    begin_IR
      LIR
      nr   -1  <|@ instruction [v69|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = LEA [v59|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v69|QWORD, y: v70|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4577549901657061664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v140|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v58|QWORD[.] + v69|QWORD * 2], input: v140|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = LEA [v69|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v71|QWORD] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4579681994949064406
    begin_IR
      LIR
      nr   -1  <|@ instruction [v72|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = DEC v59|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v72|QWORD, y: v73|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4577549901657061664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v58|QWORD[.] + v72|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B55 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B99" 
    xhandlers
    flags 
    probability 4576171197482019241
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B81 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B101" "B102" 
    xhandlers
    flags 
    probability 4576171197482019241
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = LEA [v93|QWORD[.] + v95|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v119|QWORD = SUB (x: v117|QWORD, ~y: v95|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v120|QWORD = LEA [v119|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v120|QWORD, y: v120|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B100 -> B101 falseDestination: B100 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B105" 
    xhandlers
    flags 
    probability 4574176385705131646
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B101 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B101" "B104" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4576171197482019241
    begin_IR
      LIR
      nr   -1  <|@ instruction [v123|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v124|QWORD = LEA [v119|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v123|QWORD, y: v124|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B105 -> B106 falseDestination: B105 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4574176385705131646
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v143|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v118|QWORD[.] + v123|QWORD * 2], input: v143|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v125|QWORD = LEA [v123|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v125|QWORD] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    probability 4576171197482019241
    begin_IR
      LIR
      nr   -1  <|@ instruction [v126|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v127|QWORD = LEA [v119|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v126|QWORD, y: v127|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B108 -> B109 falseDestination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    probability 4574176385705131646
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v141|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v118|QWORD[.] + v126|QWORD * 2], input: v141|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v128|QWORD = LEA [v126|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v128|QWORD] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" "B109" 
    successors "B112" "B113" 
    xhandlers
    flags 
    probability 4576171197482019241
    begin_IR
      LIR
      nr   -1  <|@ instruction [v129|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v130|QWORD = LEA [v119|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v129|QWORD, y: v130|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B111 -> B112 falseDestination: B111 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    probability 4574176385705131646
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v139|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v118|QWORD[.] + v129|QWORD * 2], input: v139|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v131|QWORD = LEA [v129|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v131|QWORD] destination: B113 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" "B112" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4576171197482019241
    begin_IR
      LIR
      nr   -1  <|@ instruction [v132|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v133|QWORD = DEC v119|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v132|QWORD, y: v133|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B114 -> B115 falseDestination: B114 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B119" 
    xhandlers
    flags 
    probability 4574176385705131646
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v118|QWORD[.] + v132|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B116 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4570674795694323414
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v46|QWORD] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4570674795694323414
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v63|QWORD] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4570674795694323414
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|QWORD] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4570674795694323414
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v146|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4577549901657061664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|QWORD] destination: B56 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B56" 
    successors "B43" "B56" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4579681994949064406
    begin_IR
      LIR
      nr   -1  <|@ instruction [v61|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v58|QWORD[.] + v61|QWORD * 2], input: v146|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = LEA [v61|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v62|QWORD, y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4570674795694323414
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v42|QWORD] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4570674795694323414
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4577549901657061664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v41|QWORD] destination: B59 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B59" 
    successors "B25" "B59" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4579681994949064406
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|V256_WORD = H [v37|QWORD[*] + v39|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v36|QWORD[.] + v39|QWORD * 2], input: v40|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = LEA [v39|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v41|QWORD, y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4570674795694323414
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|QWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4570674795694323414
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v50|QWORD] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4570674795694323414
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4570674795694323414
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v69|QWORD] destination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4570674795694323414
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4570674795694323414
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v41|QWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4568969121060721220
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4569583163928818010
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v148|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v148|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v21|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|QWORD[.]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B99" 
    xhandlers
    flags 
    probability 4567163998227278249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B97 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    probability 4567163998227278249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v129|QWORD] destination: B112 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4567163998227278249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v123|QWORD] destination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" 
    xhandlers
    flags 
    probability 4567163998227278249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v110|QWORD] destination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4567163998227278249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v102|QWORD] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" 
    xhandlers
    flags 
    probability 4567163998227278249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v106|QWORD] destination: B91 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    probability 4567163998227278249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B85" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4574176385705131646
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v101|QWORD] destination: B120 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B120" 
    successors "B86" "B120" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4576171197482019241
    begin_IR
      LIR
      nr   -1  <|@ instruction [v99|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v100|V256_WORD = H [v97|QWORD[*] + v99|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v96|QWORD[.] + v99|QWORD * 2], input: v100|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v101|QWORD = LEA [v99|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v101|QWORD, y: v98|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B119" 
    xhandlers
    flags 
    probability 4567163998227278249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B115 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    probability 4567163998227278249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v126|QWORD] destination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B103" 
    xhandlers
    flags 
    probability 4567163998227278249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v145|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B102 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B103" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4574176385705131646
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v122|QWORD] destination: B117 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" "B117" 
    successors "B104" "B117" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4576171197482019241
    begin_IR
      LIR
      nr   -1  <|@ instruction [v121|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v118|QWORD[.] + v121|QWORD * 2], input: v145|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v122|QWORD = LEA [v121|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v122|QWORD, y: v120|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B103 -> B104 falseDestination: B103 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B87" 
    xhandlers
    flags 
    probability 4567163998227278249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v101|QWORD] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B105" 
    xhandlers
    flags 
    probability 4567163998227278249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v122|QWORD] destination: B104 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    probability 4565670944020487232
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B76" 
    successors "B80" 
    xhandlers
    flags 
    probability 4566393474921426308
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v147|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v147|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v81|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v92|QWORD[.]] destination: B79 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B18" 
    xhandlers
    flags 
    probability 4553547966588975281
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B79" 
    xhandlers
    flags 
    probability 4549912271224343072
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-61467|0xffffffffffff0fe5]] destination: B6 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B8" "B6" "B5" "B69" "B67" "B66" "B10" "B71" "B61" "B60" "B122" "B121" 
    successors 
    xhandlers
    flags 
    probability 2371145203810566144
    begin_IR
      LIR
      nr   -1  <|@ instruction [v136|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v136|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-72731|0xfffffffffffee3e5]] destination: B5 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-99867|0xfffffffffffe79e5]] destination: B122 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-88091|0xfffffffffffea7e5]] destination: B67 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-74771|0xfffffffffffedbed]] destination: B8 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-96539|0xfffffffffffe86e5]] destination: B66 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-75027|0xfffffffffffedaed]] destination: B10 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-106779|0xfffffffffffe5ee5]] destination: B121 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-98579|0xfffffffffffe7eed]] destination: B71 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-76315|0xfffffffffffed5e5]] destination: B61 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-98323|0xfffffffffffe7fed]] destination: B69 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-85531|0xfffffffffffeb1e5]] destination: B60 -> B123 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: ifeq          89
     4: aload_0       
     5: aload_0       
     6: getfield      #2          // count:int
     9: iconst_4      
    10: iadd          
    11: invokespecial #3          // ensureCapacityInternal:(int)void
    14: aload_0       
    15: getfield      #1          // value:char[]
    18: aload_0       
    19: dup           
    20: getfield      #2          // count:int
    23: dup_x1        
    24: iconst_1      
    25: iadd          
    26: putfield      #2          // count:int
    29: bipush        116
    31: castore       
    32: aload_0       
    33: getfield      #1          // value:char[]
    36: aload_0       
    37: dup           
    38: getfield      #2          // count:int
    41: dup_x1        
    42: iconst_1      
    43: iadd          
    44: putfield      #2          // count:int
    47: bipush        114
    49: castore       
    50: aload_0       
    51: getfield      #1          // value:char[]
    54: aload_0       
    55: dup           
    56: getfield      #2          // count:int
    59: dup_x1        
    60: iconst_1      
    61: iadd          
    62: putfield      #2          // count:int
    65: bipush        117
    67: castore       
    68: aload_0       
    69: getfield      #1          // value:char[]
    72: aload_0       
    73: dup           
    74: getfield      #2          // count:int
    77: dup_x1        
    78: iconst_1      
    79: iadd          
    80: putfield      #2          // count:int
    83: bipush        101
    85: castore       
    86: goto          189
    89: aload_0       
    90: aload_0       
    91: getfield      #2          // count:int
    94: iconst_5      
    95: iadd          
    96: invokespecial #3          // ensureCapacityInternal:(int)void
    99: aload_0       
   100: getfield      #1          // value:char[]
   103: aload_0       
   104: dup           
   105: getfield      #2          // count:int
   108: dup_x1        
   109: iconst_1      
   110: iadd          
   111: putfield      #2          // count:int
   114: bipush        102
   116: castore       
   117: aload_0       
   118: getfield      #1          // value:char[]
   121: aload_0       
   122: dup           
   123: getfield      #2          // count:int
   126: dup_x1        
   127: iconst_1      
   128: iadd          
   129: putfield      #2          // count:int
   132: bipush        97
   134: castore       
   135: aload_0       
   136: getfield      #1          // value:char[]
   139: aload_0       
   140: dup           
   141: getfield      #2          // count:int
   144: dup_x1        
   145: iconst_1      
   146: iadd          
   147: putfield      #2          // count:int
   150: bipush        108
   152: castore       
   153: aload_0       
   154: getfield      #1          // value:char[]
   157: aload_0       
   158: dup           
   159: getfield      #2          // count:int
   162: dup_x1        
   163: iconst_1      
   164: iadd          
   165: putfield      #2          // count:int
   168: bipush        115
   170: castore       
   171: aload_0       
   172: getfield      #1          // value:char[]
   175: aload_0       
   176: dup           
   177: getfield      #2          // count:int
   180: dup_x1        
   181: iconst_1      
   182: iadd          
   183: putfield      #2          // count:int
   186: bipush        101
   188: castore       
   189: aload_0       
   190: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B62" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1f760f52 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction r14|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction r10|DWORD[.] = MOV [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   14  <|@ instruction stack:36|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr   16  <|@ st <@st|@reference-map: [r10:0, r13:0, stack:28, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 0]
locals: r13|QWORD[.] r14|DWORD 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   18  <|@ instruction r8|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   20  <|@ instruction stack:40|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ instruction r9|DWORD = LEA [r8|DWORD + 3] size: DWORD <|@ <|@
      nr   24  <|@ instruction stack:44|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   26  <|@ instruction rbx|DWORD = LEA [r8|DWORD + 2] size: DWORD <|@ <|@
      nr   28  <|@ instruction stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction rdi|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr   32  <|@ instruction stack:52|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction rax|DWORD = LEA [r8|DWORD + 4] size: DWORD <|@ <|@
      nr   36  <|@ instruction stack:56|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 0.6295884659318947 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B7" 
    xhandlers
    flags 
    probability 4603846048306411702
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction rbp|DWORD = LEA [r8|DWORD + 5] size: DWORD <|@ <|@
      nr   46  <|@ instruction rsi|DWORD = SUB (x: rbp|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction CMP rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr   50  <|@ instruction BRANCH trueDestinationProbability: 0.953003048985209 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4603579536644911359
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   56  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4603579536644911359
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction CMP (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4603579536644911359
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction MOV (x: [r13|QWORD[.] + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3f307c23 encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction MOV [r10|QWORD[.] + r8|DWORD * 2 + 16] y: 102 size: WORD <|@ <|@
      nr   72  <|@ instruction MOV (x: [r13|QWORD[.] + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction MOV [r10|QWORD[.] + rdi|DWORD * 2 + 16] y: 97 size: WORD <|@ <|@
      nr   76  <|@ instruction MOV (x: [r13|QWORD[.] + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr   78  <|@ instruction MOV [r10|QWORD[.] + rbx|DWORD * 2 + 16] y: 108 size: WORD <|@ <|@
      nr   80  <|@ instruction MOV (x: [r13|QWORD[.] + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction MOV [r10|QWORD[.] + r9|DWORD * 2 + 16] y: 115 size: WORD <|@ <|@
      nr   84  <|@ instruction MOV (x: [r13|QWORD[.] + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction MOV [r10|QWORD[.] + rax|DWORD * 2 + 16] y: 101 size: WORD <|@ <|@
      nr   88  <|@ instruction rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B63" "B68" 
    xhandlers
    flags 
    probability 4600344360905117332
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  650  <|@ instruction rsi|DWORD = SUB (x: rax|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  652  <|@ instruction CMP rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr  654  <|@ instruction BRANCH trueDestinationProbability: 0.953003048985209 condition: < trueDestination: B62 -> B63 falseDestination: B62 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B67" 
    xhandlers
    flags 
    probability 4600030762423806969
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  658  <|@ instruction CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  660  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B63 -> B64 falseDestination: B63 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4600030762423806969
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  664  <|@ instruction CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  666  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors 
    xhandlers
    flags 
    probability 4600030762423806969
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  670  <|@ instruction MOV (x: [r13|QWORD[.] + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  672  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3f307c23 encoding: base: 0 shift: 3 <|@ <|@
      nr  674  <|@ instruction MOV [r10|QWORD[.] + r8|DWORD * 2 + 16] y: 116 size: WORD <|@ <|@
      nr  676  <|@ instruction MOV (x: [r13|QWORD[.] + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  678  <|@ instruction MOV [r10|QWORD[.] + rdi|DWORD * 2 + 16] y: 114 size: WORD <|@ <|@
      nr  680  <|@ instruction MOV (x: [r13|QWORD[.] + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  682  <|@ instruction MOV [r10|QWORD[.] + rbx|DWORD * 2 + 16] y: 117 size: WORD <|@ <|@
      nr  684  <|@ instruction MOV (x: [r13|QWORD[.] + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  686  <|@ instruction MOV [r10|QWORD[.] + r9|DWORD * 2 + 16] y: 101 size: WORD <|@ <|@
      nr  688  <|@ instruction rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4584185594576434903
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  110  <|@ instruction rsi|DWORD = SHL r11|DWORD size: DWORD <|@ <|@
      nr  112  <|@ instruction rsi|DWORD = LEA [rsi|DWORD + 2] size: DWORD <|@ <|@
      nr  114  <|@ instruction rdx|DWORD = SUB (x: rsi|DWORD, ~y: rbp|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  118  <|@ instruction rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: rbp|DWORD) condition: < <|@ <|@
      nr  120  <|@ instruction CMP rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr  122  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4584185594576434903
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  134  <|@ instruction rdx|DWORD = MOVE input: int[2147483639|0x7ffffff7] <|@ <|@
      nr  136  <|@ instruction rdx|DWORD = SUB (x: rdx|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B61" 
    xhandlers
    flags 
    probability 4584185594576434903
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  152  <|@ instruction CMP (x: rsi|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  154  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B60" 
    xhandlers
    flags 
    probability 4584185594576434903
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  158  <|@ instruction CMP (x: rsi|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B17" 
    xhandlers
    flags 
    probability 4584185594576434903
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  164  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  166  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  168  <|@ instruction CMP rsi|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  170  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4583332757259633806
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  174  <|@ instruction stack:60|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  176  <|@ instruction r14|DWORD = SHL rsi|DWORD size: DWORD <|@ <|@
      nr  178  <|@ instruction r14|DWORD = LEA [r14|DWORD + 23] size: DWORD <|@ <|@
      nr  180  <|@ instruction r14|DWORD = AND r14|DWORD y: -8 size: DWORD <|@ <|@
      nr  182  <|@ instruction r14|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  184  <|@ instruction r13|QWORD = ADD (x: r14|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  186  <|@ instruction CMP (x: r13|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  188  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4583256001901121707
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  202  <|@ instruction MOV (x: [r15|QWORD + 96], y: r13|QWORD) size: QWORD <|@ <|@
      nr  204  <|@ instruction AMD64PREFETCH ~[r14|QWORD + rdx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  206  <|@ instruction AMD64PREFETCH ~[r14|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  208  <|@ instruction AMD64PREFETCH ~[r14|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  210  <|@ instruction AMD64PREFETCH ~[r14|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  212  <|@ instruction MOV (x: [rdx|QWORD + 12], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  214  <|@ instruction MOV [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  216  <|@ instruction MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  218  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction r13|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ instruction stack:64|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  226  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4584185594576434902
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  256  <|@ instruction CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  258  <|@ instruction rsi|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr  260  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  262  <|@ instruction CMP rsi|QWORD y: 1 size: QWORD <|@ <|@
      nr  264  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4579681994949064406
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  272  <|@ instruction r10|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  276  <|@ instruction rcx|QWORD[*] = LEA [r10|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  278  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 16] size: QWORD <|@ <|@
      nr  280  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  282  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4577549901657061664
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  286  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  288  <|@ instruction JUMP ~[] destination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4579681994949064406
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  314  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  316  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  318  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4577549901657061664
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  326  <|@ instruction xmm0|V128_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  328  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  330  <|@ instruction r10|QWORD = LEA [r11|QWORD + 8] size: QWORD <|@ <|@
      nr  332  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4579681994949064406
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  338  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr  340  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  342  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4577549901657061664
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  350  <|@ instruction xmm0|V64_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr  352  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  354  <|@ instruction r10|QWORD = LEA [r11|QWORD + 4] size: QWORD <|@ <|@
      nr  356  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4579681994949064406
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  362  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr  364  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  366  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4577549901657061664
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  374  <|@ instruction xmm0|V32_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr  376  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  378  <|@ instruction r10|QWORD = LEA [r11|QWORD + 2] size: QWORD <|@ <|@
      nr  380  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4579681994949064406
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  386  <|@ instruction r10|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  388  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  390  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4577549901657061664
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  398  <|@ instruction rcx|DWORD = MOVSX [rcx|QWORD[*] + r11|QWORD * 2] size: DWORD <|@ <|@
      nr  400  <|@ instruction MOV (x: [rdx|QWORD[.] + r11|QWORD * 2], y: rcx|DWORD) size: WORD <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" "B37" "B36" 
    successors "B39" "B57" 
    xhandlers
    flags 
    probability 4584185594576434902
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  406  <|@ instruction rdx|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr  408  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  410  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B58" 
    xhandlers
    flags 
    probability 4579681994949064406
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  576  <|@ instruction rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  578  <|@ instruction r11|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  580  <|@ instruction rdi|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  582  <|@ instruction rbx|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  584  <|@ instruction r9|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  586  <|@ instruction r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  588  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B55" "B54" 
    successors 
    xhandlers
    flags 
    probability 4584185594576434902
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  594  <|@ instruction rsi|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  596  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@3f307c23 encoding: base: 0 shift: 3 <|@ <|@
      nr  598  <|@ instruction MOV (x: [r13|QWORD[.] + 16], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  600  <|@ instruction rdx|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  602  <|@ instruction MOVB (x: [rdx|QWORD[*] + rsi|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  604  <|@ instruction MOV (x: [r13|QWORD[.] + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  606  <|@ instruction MOV [rax|QWORD[.] + r8|DWORD * 2 + 16] y: 102 size: WORD <|@ <|@
      nr  608  <|@ instruction MOV (x: [r13|QWORD[.] + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  610  <|@ instruction MOV [rax|QWORD[.] + rdi|DWORD * 2 + 16] y: 97 size: WORD <|@ <|@
      nr  612  <|@ instruction MOV (x: [r13|QWORD[.] + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  614  <|@ instruction MOV [rax|QWORD[.] + rbx|DWORD * 2 + 16] y: 108 size: WORD <|@ <|@
      nr  616  <|@ instruction MOV (x: [r13|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  618  <|@ instruction MOV [rax|QWORD[.] + r9|DWORD * 2 + 16] y: 115 size: WORD <|@ <|@
      nr  620  <|@ instruction MOV (x: [r13|QWORD[.] + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  622  <|@ instruction MOV [rax|QWORD[.] + r11|DWORD * 2 + 16] y: 101 size: WORD <|@ <|@
      nr  624  <|@ instruction rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" "B70" 
    xhandlers
    flags 
    probability 4580674797109389737
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  710  <|@ instruction stack:60|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  712  <|@ instruction rsi|DWORD = SHL r11|DWORD size: DWORD <|@ <|@
      nr  714  <|@ instruction rsi|DWORD = LEA [rsi|DWORD + 2] size: DWORD <|@ <|@
      nr  716  <|@ instruction rdx|DWORD = SUB (x: rsi|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  718  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  720  <|@ instruction r13|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: rax|DWORD) condition: < <|@ <|@
      nr  722  <|@ instruction CMP r13|DWORD y: 1 size: DWORD <|@ <|@
      nr  724  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B68 -> B69 falseDestination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4580674797109389737
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  738  <|@ instruction rsi|DWORD = MOVE input: int[2147483639|0x7ffffff7] <|@ <|@
      nr  740  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  742  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  744  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B122" 
    xhandlers
    flags 
    probability 4580674797109389737
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  758  <|@ instruction CMP (x: r13|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  760  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B72 -> B73 falseDestination: B72 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B121" 
    xhandlers
    flags 
    probability 4580674797109389737
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  764  <|@ instruction CMP (x: r13|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  766  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B78" 
    xhandlers
    flags 
    probability 4580674797109389737
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  770  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  772  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  774  <|@ instruction CMP r13|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  776  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B74 -> B75 falseDestination: B74 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4580173039539293157
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  780  <|@ instruction rcx|DWORD = SHL r13|DWORD size: DWORD <|@ <|@
      nr  782  <|@ instruction rcx|DWORD = LEA [rcx|DWORD + 23] size: DWORD <|@ <|@
      nr  784  <|@ instruction rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD <|@ <|@
      nr  786  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  788  <|@ instruction rbp|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  790  <|@ instruction CMP (x: rbp|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  792  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B75 -> B76 falseDestination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B80" 
    xhandlers
    flags 
    probability 4580094941680174497
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  802  <|@ instruction MOV (x: [r15|QWORD + 96], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  804  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  806  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  808  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  810  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  812  <|@ instruction MOV (x: [rsi|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  814  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  816  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  818  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  820  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  822  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  824  <|@ instruction JUMP ~[] destination: B77 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4580674797109389737
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  846  <|@ instruction CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  848  <|@ instruction r10|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr  850  <|@ instruction r10|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  852  <|@ instruction CMP r10|QWORD y: 1 size: QWORD <|@ <|@
      nr  854  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    probability 4576171197482019241
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  862  <|@ instruction r11|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD <|@ <|@
      nr  864  <|@ instruction r8|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  866  <|@ instruction r11|QWORD[*] = LEA [r11|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  868  <|@ instruction r9|QWORD = LEA [r10|QWORD - 16] size: QWORD <|@ <|@
      nr  870  <|@ instruction TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  872  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B82 -> B83 falseDestination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B87" 
    xhandlers
    flags 
    probability 4574176385705131646
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  876  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  878  <|@ instruction JUMP ~[] destination: B83 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B83" "B86" 
    successors "B88" "B89" 
    xhandlers
    flags 
    probability 4576171197482019241
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  904  <|@ instruction r9|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  906  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  908  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B87 -> B88 falseDestination: B87 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4574176385705131646
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  916  <|@ instruction xmm0|V128_WORD = H [r11|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  918  <|@ instruction J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  920  <|@ instruction r9|QWORD = LEA [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  922  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  924  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B88" 
    successors "B91" "B92" 
    xhandlers
    flags 
    probability 4576171197482019241
    begin_IR
      LIR
      nr  926  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  928  <|@ instruction r9|QWORD = LEA [r10|QWORD - 4] size: QWORD <|@ <|@
      nr  930  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  932  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B90 -> B91 falseDestination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" 
    xhandlers
    flags 
    probability 4574176385705131646
    begin_IR
      LIR
      nr  938  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  940  <|@ instruction xmm0|V64_WORD = H [r11|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr  942  <|@ instruction J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  944  <|@ instruction r9|QWORD = LEA [rcx|QWORD + 4] size: QWORD <|@ <|@
      nr  946  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  948  <|@ instruction JUMP ~[] destination: B92 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" "B91" 
    successors "B94" "B95" 
    xhandlers
    flags 
    probability 4576171197482019241
    begin_IR
      LIR
      nr  950  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  952  <|@ instruction r9|QWORD = LEA [r10|QWORD - 2] size: QWORD <|@ <|@
      nr  954  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  956  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B93 -> B94 falseDestination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" 
    xhandlers
    flags 
    probability 4574176385705131646
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  964  <|@ instruction xmm0|V32_WORD = H [r11|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr  966  <|@ instruction J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  968  <|@ instruction r9|QWORD = LEA [rcx|QWORD + 2] size: QWORD <|@ <|@
      nr  970  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  972  <|@ instruction JUMP ~[] destination: B95 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" "B94" 
    successors "B97" "B98" 
    xhandlers
    flags 
    probability 4576171197482019241
    begin_IR
      LIR
      nr  974  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  976  <|@ instruction r9|QWORD = DEC r10|QWORD size: QWORD <|@ <|@
      nr  978  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  980  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B96 -> B97 falseDestination: B96 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B99" 
    xhandlers
    flags 
    probability 4574176385705131646
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  988  <|@ instruction r11|DWORD = MOVSX [r11|QWORD[*] + rcx|QWORD * 2] size: DWORD <|@ <|@
      nr  990  <|@ instruction MOV (x: [r8|QWORD[.] + rcx|QWORD * 2], y: r11|DWORD) size: WORD <|@ <|@
      nr  992  <|@ instruction JUMP ~[] destination: B98 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B81" "B98" "B97" 
    successors "B100" "B118" 
    xhandlers
    flags 
    probability 4580674797109389737
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  996  <|@ instruction r11|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr  998  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1000  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B99 -> B100 falseDestination: B99 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B119" 
    xhandlers
    flags 
    probability 4576171197482019241
    begin_IR
      LIR
      nr 1160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1162  <|@ instruction rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1164  <|@ instruction rdi|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1166  <|@ instruction rbx|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1168  <|@ instruction r9|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1170  <|@ instruction r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1172  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1174  <|@ instruction JUMP ~[] destination: B118 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" "B116" "B115" 
    successors 
    xhandlers
    flags 
    probability 4580674797109389737
    begin_IR
      LIR
      nr 1176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1178  <|@ instruction r11|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr 1180  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@3f307c23 encoding: base: 0 shift: 3 <|@ <|@
      nr 1182  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr 1184  <|@ instruction r13|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1186  <|@ instruction MOVB (x: [r13|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1188  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1190  <|@ instruction MOV [rax|QWORD[.] + r8|DWORD * 2 + 16] y: 116 size: WORD <|@ <|@
      nr 1192  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1194  <|@ instruction MOV [rax|QWORD[.] + rdi|DWORD * 2 + 16] y: 114 size: WORD <|@ <|@
      nr 1196  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1198  <|@ instruction MOV [rax|QWORD[.] + rbx|DWORD * 2 + 16] y: 117 size: WORD <|@ <|@
      nr 1200  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1202  <|@ instruction MOV [rax|QWORD[.] + r9|DWORD * 2 + 16] y: 101 size: WORD <|@ <|@
      nr 1204  <|@ instruction rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1206  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B38" 
    xhandlers
    flags 
    probability 4579681994949064406
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  268  <|@ instruction JUMP ~[] destination: B20 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4579681994949064406
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  414  <|@ instruction rcx|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr  418  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD <|@ <|@
      nr  420  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  422  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    probability 4577549901657061664
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  428  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4579681994949064406
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  454  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  456  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  458  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4577549901657061664
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  466  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  468  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  470  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 8] size: QWORD <|@ <|@
      nr  472  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4579681994949064406
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  478  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD <|@ <|@
      nr  480  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  482  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4577549901657061664
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  490  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  492  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  494  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 4] size: QWORD <|@ <|@
      nr  496  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  498  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4579681994949064406
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  502  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD <|@ <|@
      nr  504  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  506  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4577549901657061664
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  514  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  516  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  518  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 2] size: QWORD <|@ <|@
      nr  520  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  522  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4579681994949064406
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  526  <|@ instruction rdx|QWORD = DEC rdx|QWORD size: QWORD <|@ <|@
      nr  528  <|@ instruction CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  530  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4577549901657061664
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  552  <|@ instruction MOV (x: [rcx|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr  554  <|@ instruction rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  556  <|@ instruction r11|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  558  <|@ instruction rdi|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  560  <|@ instruction rbx|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  562  <|@ instruction r9|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  564  <|@ instruction r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  566  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  568  <|@ instruction JUMP ~[] destination: B55 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B99" 
    xhandlers
    flags 
    probability 4576171197482019241
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  858  <|@ instruction JUMP ~[] destination: B81 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B101" "B102" 
    xhandlers
    flags 
    probability 4576171197482019241
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1004  <|@ instruction r8|QWORD[.] = LEA [rax|QWORD[.] + r10|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr 1006  <|@ instruction r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD <|@ <|@
      nr 1008  <|@ instruction r10|QWORD = LEA [r11|QWORD - 16] size: QWORD <|@ <|@
      nr 1010  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1012  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B100 -> B101 falseDestination: B100 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B105" 
    xhandlers
    flags 
    probability 4574176385705131646
    begin_IR
      LIR
      nr 1014  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1016  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1018  <|@ instruction JUMP ~[] destination: B101 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B101" "B104" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4576171197482019241
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1044  <|@ instruction r10|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr 1046  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1048  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B105 -> B106 falseDestination: B105 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4574176385705131646
    begin_IR
      LIR
      nr 1054  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1056  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr 1058  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1060  <|@ instruction r10|QWORD = LEA [r9|QWORD + 8] size: QWORD <|@ <|@
      nr 1062  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1064  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    probability 4576171197482019241
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1068  <|@ instruction r10|QWORD = LEA [r11|QWORD - 4] size: QWORD <|@ <|@
      nr 1070  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1072  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B108 -> B109 falseDestination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    probability 4574176385705131646
    begin_IR
      LIR
      nr 1078  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1080  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr 1082  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr 1084  <|@ instruction r10|QWORD = LEA [r9|QWORD + 4] size: QWORD <|@ <|@
      nr 1086  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1088  <|@ instruction JUMP ~[] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" "B109" 
    successors "B112" "B113" 
    xhandlers
    flags 
    probability 4576171197482019241
    begin_IR
      LIR
      nr 1090  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1092  <|@ instruction r10|QWORD = LEA [r11|QWORD - 2] size: QWORD <|@ <|@
      nr 1094  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1096  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B111 -> B112 falseDestination: B111 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    probability 4574176385705131646
    begin_IR
      LIR
      nr 1102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1104  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr 1106  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr 1108  <|@ instruction r10|QWORD = LEA [r9|QWORD + 2] size: QWORD <|@ <|@
      nr 1110  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1112  <|@ instruction JUMP ~[] destination: B113 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" "B112" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4576171197482019241
    begin_IR
      LIR
      nr 1114  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1116  <|@ instruction r11|QWORD = DEC r11|QWORD size: QWORD <|@ <|@
      nr 1118  <|@ instruction CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1120  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B114 -> B115 falseDestination: B114 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B119" 
    xhandlers
    flags 
    probability 4574176385705131646
    begin_IR
      LIR
      nr 1138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1140  <|@ instruction MOV (x: [r8|QWORD[.] + r9|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr 1142  <|@ instruction rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1144  <|@ instruction rdi|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1146  <|@ instruction rbx|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1148  <|@ instruction r9|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1150  <|@ instruction r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1152  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1154  <|@ instruction JUMP ~[] destination: B116 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4570674795694323414
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  346  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4570674795694323414
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  462  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4570674795694323414
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  486  <|@ instruction JUMP ~[] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4570674795694323414
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  432  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  434  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4577549901657061664
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  572  <|@ instruction JUMP ~[] destination: B56 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B56" 
    successors "B43" "B56" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4579681994949064406
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  440  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  442  <|@ instruction r10|QWORD = LEA [r10|QWORD + 16] size: QWORD <|@ <|@
      nr  444  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  446  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4570674795694323414
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  322  <|@ instruction JUMP ~[] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4570674795694323414
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  292  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  294  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4577549901657061664
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  630  <|@ instruction JUMP ~[] destination: B59 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B59" 
    successors "B25" "B59" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4579681994949064406
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  298  <|@ instruction xmm0|V256_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  300  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  302  <|@ instruction r11|QWORD = LEA [r11|QWORD + 16] size: QWORD <|@ <|@
      nr  304  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  306  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4570674795694323414
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  450  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4570674795694323414
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4570674795694323414
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  394  <|@ instruction JUMP ~[] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4570674795694323414
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  510  <|@ instruction JUMP ~[] destination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4570674795694323414
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  534  <|@ instruction rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  536  <|@ instruction r11|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  538  <|@ instruction rdi|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  540  <|@ instruction rbx|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  542  <|@ instruction r9|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  544  <|@ instruction r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  546  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  548  <|@ instruction JUMP ~[] destination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4570674795694323414
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  310  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4568969121060721220
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction stack:64|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction stack:60|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction r13|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4569583163928818010
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  244  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  246  <|@ instruction rdx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  250  <|@ st <@st|@reference-map: [stack:28, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 0]
locals: stack:32|QWORD[.] stack:60|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B99" 
    xhandlers
    flags 
    probability 4567163998227278249
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  984  <|@ instruction JUMP ~[] destination: B97 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    probability 4567163998227278249
    begin_IR
      LIR
      nr 1098  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1100  <|@ instruction JUMP ~[] destination: B112 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4567163998227278249
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1052  <|@ instruction JUMP ~[] destination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" 
    xhandlers
    flags 
    probability 4567163998227278249
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  960  <|@ instruction JUMP ~[] destination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4567163998227278249
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  912  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" 
    xhandlers
    flags 
    probability 4567163998227278249
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  936  <|@ instruction JUMP ~[] destination: B91 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    probability 4567163998227278249
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  882  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  884  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B85" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4574176385705131646
    begin_IR
      LIR
      nr 1208  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1210  <|@ instruction JUMP ~[] destination: B120 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B120" 
    successors "B86" "B120" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4576171197482019241
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  888  <|@ instruction xmm0|V256_WORD = H [r11|QWORD[*] + rcx|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  890  <|@ instruction J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  892  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  894  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  896  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B119" 
    xhandlers
    flags 
    probability 4567163998227278249
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1124  <|@ instruction rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1126  <|@ instruction rdi|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1128  <|@ instruction rbx|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1130  <|@ instruction r9|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1132  <|@ instruction r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1134  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1136  <|@ instruction JUMP ~[] destination: B115 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    probability 4567163998227278249
    begin_IR
      LIR
      nr 1074  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1076  <|@ instruction JUMP ~[] destination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B103" 
    xhandlers
    flags 
    probability 4567163998227278249
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1022  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr 1024  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr 1026  <|@ instruction JUMP ~[] destination: B102 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B103" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4574176385705131646
    begin_IR
      LIR
      nr 1156  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1158  <|@ instruction JUMP ~[] destination: B117 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" "B117" 
    successors "B104" "B117" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4576171197482019241
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1030  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1032  <|@ instruction r9|QWORD = LEA [r9|QWORD + 16] size: QWORD <|@ <|@
      nr 1034  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1036  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B103 -> B104 falseDestination: B103 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B87" 
    xhandlers
    flags 
    probability 4567163998227278249
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  900  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B105" 
    xhandlers
    flags 
    probability 4567163998227278249
    begin_IR
      LIR
      nr 1038  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1040  <|@ instruction JUMP ~[] destination: B104 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    probability 4565670944020487232
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  828  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  830  <|@ instruction JUMP ~[] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B76" 
    successors "B80" 
    xhandlers
    flags 
    probability 4566393474921426308
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  834  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  836  <|@ instruction rdx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  838  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  840  <|@ st <@st|@reference-map: [stack:28, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 0]
locals: stack:32|QWORD[.] stack:60|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  842  <|@ instruction JUMP ~[] destination: B79 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B18" 
    xhandlers
    flags 
    probability 4553547966588975281
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction r13|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction stack:64|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B15 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B79" 
    xhandlers
    flags 
    probability 4549912271224343072
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  796  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  798  <|@ instruction JUMP ~[] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  102  <|@ instruction r11|DWORD = MOVE input: int[-61467|0xffffffffffff0fe5] <|@ <|@
      nr  104  <|@ instruction r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B6 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B8" "B6" "B5" "B69" "B67" "B66" "B10" "B71" "B61" "B60" "B122" "B121" 
    successors 
    xhandlers
    flags 
    probability 2371145203810566144
    begin_IR
      LIR
      nr 1232  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1234  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1236  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1238  <|@ st <@st|@reference-map: [r10:0]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 0]
locals: r10|QWORD[.] r14|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   94  <|@ instruction r11|DWORD = MOVE input: int[-72731|0xfffffffffffee3e5] <|@ <|@
      nr   96  <|@ instruction r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction JUMP ~[] destination: B5 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1222  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1224  <|@ instruction r11|DWORD = MOVE input: int[-99867|0xfffffffffffe79e5] <|@ <|@
      nr 1226  <|@ instruction r14|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr 1228  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1230  <|@ instruction JUMP ~[] destination: B122 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  702  <|@ instruction r11|DWORD = MOVE input: int[-88091|0xfffffffffffea7e5] <|@ <|@
      nr  704  <|@ instruction r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  706  <|@ instruction JUMP ~[] destination: B67 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  126  <|@ instruction r11|DWORD = MOVE input: int[-74771|0xfffffffffffedbed] <|@ <|@
      nr  128  <|@ instruction r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B8 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  694  <|@ instruction r11|DWORD = MOVE input: int[-96539|0xfffffffffffe86e5] <|@ <|@
      nr  696  <|@ instruction r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction JUMP ~[] destination: B66 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  144  <|@ instruction r11|DWORD = MOVE input: int[-75027|0xfffffffffffedaed] <|@ <|@
      nr  146  <|@ instruction r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B10 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1212  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1214  <|@ instruction r11|DWORD = MOVE input: int[-106779|0xfffffffffffe5ee5] <|@ <|@
      nr 1216  <|@ instruction r14|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr 1218  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1220  <|@ instruction JUMP ~[] destination: B121 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  748  <|@ instruction r11|DWORD = MOVE input: int[-98579|0xfffffffffffe7eed] <|@ <|@
      nr  750  <|@ instruction r14|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  752  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  754  <|@ instruction JUMP ~[] destination: B71 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  642  <|@ instruction r11|DWORD = MOVE input: int[-76315|0xfffffffffffed5e5] <|@ <|@
      nr  644  <|@ instruction r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  646  <|@ instruction JUMP ~[] destination: B61 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  728  <|@ instruction r11|DWORD = MOVE input: int[-98323|0xfffffffffffe7fed] <|@ <|@
      nr  730  <|@ instruction r14|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  732  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  734  <|@ instruction JUMP ~[] destination: B69 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  634  <|@ instruction r11|DWORD = MOVE input: int[-85531|0xfffffffffffeb1e5] <|@ <|@
      nr  636  <|@ instruction r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction JUMP ~[] destination: B60 -> B123 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: ifeq          89
     4: aload_0       
     5: aload_0       
     6: getfield      #2          // count:int
     9: iconst_4      
    10: iadd          
    11: invokespecial #3          // ensureCapacityInternal:(int)void
    14: aload_0       
    15: getfield      #1          // value:char[]
    18: aload_0       
    19: dup           
    20: getfield      #2          // count:int
    23: dup_x1        
    24: iconst_1      
    25: iadd          
    26: putfield      #2          // count:int
    29: bipush        116
    31: castore       
    32: aload_0       
    33: getfield      #1          // value:char[]
    36: aload_0       
    37: dup           
    38: getfield      #2          // count:int
    41: dup_x1        
    42: iconst_1      
    43: iadd          
    44: putfield      #2          // count:int
    47: bipush        114
    49: castore       
    50: aload_0       
    51: getfield      #1          // value:char[]
    54: aload_0       
    55: dup           
    56: getfield      #2          // count:int
    59: dup_x1        
    60: iconst_1      
    61: iadd          
    62: putfield      #2          // count:int
    65: bipush        117
    67: castore       
    68: aload_0       
    69: getfield      #1          // value:char[]
    72: aload_0       
    73: dup           
    74: getfield      #2          // count:int
    77: dup_x1        
    78: iconst_1      
    79: iadd          
    80: putfield      #2          // count:int
    83: bipush        101
    85: castore       
    86: goto          189
    89: aload_0       
    90: aload_0       
    91: getfield      #2          // count:int
    94: iconst_5      
    95: iadd          
    96: invokespecial #3          // ensureCapacityInternal:(int)void
    99: aload_0       
   100: getfield      #1          // value:char[]
   103: aload_0       
   104: dup           
   105: getfield      #2          // count:int
   108: dup_x1        
   109: iconst_1      
   110: iadd          
   111: putfield      #2          // count:int
   114: bipush        102
   116: castore       
   117: aload_0       
   118: getfield      #1          // value:char[]
   121: aload_0       
   122: dup           
   123: getfield      #2          // count:int
   126: dup_x1        
   127: iconst_1      
   128: iadd          
   129: putfield      #2          // count:int
   132: bipush        97
   134: castore       
   135: aload_0       
   136: getfield      #1          // value:char[]
   139: aload_0       
   140: dup           
   141: getfield      #2          // count:int
   144: dup_x1        
   145: iconst_1      
   146: iadd          
   147: putfield      #2          // count:int
   150: bipush        108
   152: castore       
   153: aload_0       
   154: getfield      #1          // value:char[]
   157: aload_0       
   158: dup           
   159: getfield      #2          // count:int
   162: dup_x1        
   163: iconst_1      
   164: iadd          
   165: putfield      #2          // count:int
   168: bipush        115
   170: castore       
   171: aload_0       
   172: getfield      #1          // value:char[]
   175: aload_0       
   176: dup           
   177: getfield      #2          // count:int
   180: dup_x1        
   181: iconst_1      
   182: iadd          
   183: putfield      #2          // count:int
   186: bipush        101
   188: castore       
   189: aload_0       
   190: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B62" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1f760f52 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction r14|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction r10|DWORD[.] = MOV [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   14  <|@ instruction stack:36|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr   16  <|@ st <@st|@reference-map: [r10:0, r13:0, stack:28, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 0]
locals: r13|QWORD[.] r14|DWORD 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   18  <|@ instruction r8|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   20  <|@ instruction stack:40|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ instruction r9|DWORD = LEA [r8|DWORD + 3] size: DWORD <|@ <|@
      nr   24  <|@ instruction stack:44|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   26  <|@ instruction rbx|DWORD = LEA [r8|DWORD + 2] size: DWORD <|@ <|@
      nr   28  <|@ instruction stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction rdi|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr   32  <|@ instruction stack:52|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction rax|DWORD = LEA [r8|DWORD + 4] size: DWORD <|@ <|@
      nr   36  <|@ instruction stack:56|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 0.6295884659318947 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B7" 
    xhandlers
    flags 
    probability 4603846048306411702
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction rbp|DWORD = LEA [r8|DWORD + 5] size: DWORD <|@ <|@
      nr   46  <|@ instruction rsi|DWORD = SUB (x: rbp|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction CMP rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr   50  <|@ instruction BRANCH trueDestinationProbability: 0.953003048985209 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4603579536644911359
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   56  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4603579536644911359
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction CMP (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4603579536644911359
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction MOV (x: [r13|QWORD[.] + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3f307c23 encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction MOV [r10|QWORD[.] + r8|DWORD * 2 + 16] y: 102 size: WORD <|@ <|@
      nr   72  <|@ instruction MOV (x: [r13|QWORD[.] + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction MOV [r10|QWORD[.] + rdi|DWORD * 2 + 16] y: 97 size: WORD <|@ <|@
      nr   76  <|@ instruction MOV (x: [r13|QWORD[.] + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr   78  <|@ instruction MOV [r10|QWORD[.] + rbx|DWORD * 2 + 16] y: 108 size: WORD <|@ <|@
      nr   80  <|@ instruction MOV (x: [r13|QWORD[.] + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction MOV [r10|QWORD[.] + r9|DWORD * 2 + 16] y: 115 size: WORD <|@ <|@
      nr   84  <|@ instruction MOV (x: [r13|QWORD[.] + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction MOV [r10|QWORD[.] + rax|DWORD * 2 + 16] y: 101 size: WORD <|@ <|@
      nr   88  <|@ instruction rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B63" "B68" 
    xhandlers
    flags 
    probability 4600344360905117332
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  650  <|@ instruction rsi|DWORD = SUB (x: rax|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  652  <|@ instruction CMP rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr  654  <|@ instruction BRANCH trueDestinationProbability: 0.953003048985209 condition: < trueDestination: B62 -> B63 falseDestination: B62 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B67" 
    xhandlers
    flags 
    probability 4600030762423806969
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  658  <|@ instruction CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  660  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B63 -> B64 falseDestination: B63 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4600030762423806969
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  664  <|@ instruction CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  666  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors 
    xhandlers
    flags 
    probability 4600030762423806969
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  670  <|@ instruction MOV (x: [r13|QWORD[.] + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  672  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3f307c23 encoding: base: 0 shift: 3 <|@ <|@
      nr  674  <|@ instruction MOV [r10|QWORD[.] + r8|DWORD * 2 + 16] y: 116 size: WORD <|@ <|@
      nr  676  <|@ instruction MOV (x: [r13|QWORD[.] + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  678  <|@ instruction MOV [r10|QWORD[.] + rdi|DWORD * 2 + 16] y: 114 size: WORD <|@ <|@
      nr  680  <|@ instruction MOV (x: [r13|QWORD[.] + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  682  <|@ instruction MOV [r10|QWORD[.] + rbx|DWORD * 2 + 16] y: 117 size: WORD <|@ <|@
      nr  684  <|@ instruction MOV (x: [r13|QWORD[.] + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  686  <|@ instruction MOV [r10|QWORD[.] + r9|DWORD * 2 + 16] y: 101 size: WORD <|@ <|@
      nr  688  <|@ instruction rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4584185594576434903
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  110  <|@ instruction rsi|DWORD = SHL r11|DWORD size: DWORD <|@ <|@
      nr  112  <|@ instruction rsi|DWORD = LEA [rsi|DWORD + 2] size: DWORD <|@ <|@
      nr  114  <|@ instruction rdx|DWORD = SUB (x: rsi|DWORD, ~y: rbp|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  118  <|@ instruction rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: rbp|DWORD) condition: < <|@ <|@
      nr  120  <|@ instruction CMP rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr  122  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4584185594576434903
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  134  <|@ instruction rdx|DWORD = MOVE input: int[2147483639|0x7ffffff7] <|@ <|@
      nr  136  <|@ instruction rdx|DWORD = SUB (x: rdx|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B61" 
    xhandlers
    flags 
    probability 4584185594576434903
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  152  <|@ instruction CMP (x: rsi|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  154  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B60" 
    xhandlers
    flags 
    probability 4584185594576434903
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  158  <|@ instruction CMP (x: rsi|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B17" 
    xhandlers
    flags 
    probability 4584185594576434903
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  164  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  166  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  168  <|@ instruction CMP rsi|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  170  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4583332757259633806
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  174  <|@ instruction stack:60|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  176  <|@ instruction r14|DWORD = SHL rsi|DWORD size: DWORD <|@ <|@
      nr  178  <|@ instruction r14|DWORD = LEA [r14|DWORD + 23] size: DWORD <|@ <|@
      nr  180  <|@ instruction r14|DWORD = AND r14|DWORD y: -8 size: DWORD <|@ <|@
      nr  182  <|@ instruction r14|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  184  <|@ instruction r13|QWORD = ADD (x: r14|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  186  <|@ instruction CMP (x: r13|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  188  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4583256001901121707
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  202  <|@ instruction MOV (x: [r15|QWORD + 96], y: r13|QWORD) size: QWORD <|@ <|@
      nr  204  <|@ instruction AMD64PREFETCH ~[r14|QWORD + rdx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  206  <|@ instruction AMD64PREFETCH ~[r14|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  208  <|@ instruction AMD64PREFETCH ~[r14|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  210  <|@ instruction AMD64PREFETCH ~[r14|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  212  <|@ instruction MOV (x: [rdx|QWORD + 12], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  214  <|@ instruction MOV [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  216  <|@ instruction MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  218  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction r13|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ instruction stack:64|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  226  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors "B38" "B21" 
    xhandlers
    flags 
    probability 4584185594576434902
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  256  <|@ instruction CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  258  <|@ instruction rsi|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr  260  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  262  <|@ instruction CMP rsi|QWORD y: 1 size: QWORD <|@ <|@
      nr  264  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B19 -> B38 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" "B24" 
    xhandlers
    flags 
    probability 4579681994949064406
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  272  <|@ instruction r10|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  276  <|@ instruction rcx|QWORD[*] = LEA [r10|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  278  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 16] size: QWORD <|@ <|@
      nr  280  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  286  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  282  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B21 -> B26 falseDestination: B21 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B29" "B28" 
    xhandlers
    flags 
    probability 4579681994949064406
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  314  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  316  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  318  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B29 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4577549901657061664
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  326  <|@ instruction xmm0|V128_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  328  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  330  <|@ instruction r10|QWORD = LEA [r11|QWORD + 8] size: QWORD <|@ <|@
      nr  332  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B26" 
    successors "B32" "B31" 
    xhandlers
    flags 
    probability 4579681994949064406
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  338  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr  340  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  342  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B29 -> B32 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4577549901657061664
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  350  <|@ instruction xmm0|V64_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr  352  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  354  <|@ instruction r10|QWORD = LEA [r11|QWORD + 4] size: QWORD <|@ <|@
      nr  356  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B29" 
    successors "B35" "B34" 
    xhandlers
    flags 
    probability 4579681994949064406
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  362  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr  364  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  366  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B32 -> B35 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4577549901657061664
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  374  <|@ instruction xmm0|V32_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr  376  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  378  <|@ instruction r10|QWORD = LEA [r11|QWORD + 2] size: QWORD <|@ <|@
      nr  380  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B32" 
    successors "B38" "B37" 
    xhandlers
    flags 
    probability 4579681994949064406
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  386  <|@ instruction r10|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  388  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  390  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B35 -> B38 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4577549901657061664
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  398  <|@ instruction rcx|DWORD = MOVSX [rcx|QWORD[*] + r11|QWORD * 2] size: DWORD <|@ <|@
      nr  400  <|@ instruction MOV (x: [rdx|QWORD[.] + r11|QWORD * 2], y: rcx|DWORD) size: WORD <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B19" "B37" "B35" 
    successors "B39" "B58" 
    xhandlers
    flags 
    probability 4584185594576434902
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  406  <|@ instruction rdx|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr  408  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  410  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B38" "B55" "B53" 
    successors 
    xhandlers
    flags 
    probability 4584185594576434902
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  576  <|@ instruction rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  578  <|@ instruction r11|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  580  <|@ instruction rdi|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  582  <|@ instruction rbx|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  584  <|@ instruction r9|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  586  <|@ instruction r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  588  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  594  <|@ instruction rsi|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  596  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@3f307c23 encoding: base: 0 shift: 3 <|@ <|@
      nr  598  <|@ instruction MOV (x: [r13|QWORD[.] + 16], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  600  <|@ instruction rdx|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  602  <|@ instruction MOVB (x: [rdx|QWORD[*] + rsi|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  604  <|@ instruction MOV (x: [r13|QWORD[.] + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  606  <|@ instruction MOV [rax|QWORD[.] + r8|DWORD * 2 + 16] y: 102 size: WORD <|@ <|@
      nr  608  <|@ instruction MOV (x: [r13|QWORD[.] + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  610  <|@ instruction MOV [rax|QWORD[.] + rdi|DWORD * 2 + 16] y: 97 size: WORD <|@ <|@
      nr  612  <|@ instruction MOV (x: [r13|QWORD[.] + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  614  <|@ instruction MOV [rax|QWORD[.] + rbx|DWORD * 2 + 16] y: 108 size: WORD <|@ <|@
      nr  616  <|@ instruction MOV (x: [r13|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  618  <|@ instruction MOV [rax|QWORD[.] + r9|DWORD * 2 + 16] y: 115 size: WORD <|@ <|@
      nr  620  <|@ instruction MOV (x: [r13|QWORD[.] + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  622  <|@ instruction MOV [rax|QWORD[.] + r11|DWORD * 2 + 16] y: 101 size: WORD <|@ <|@
      nr  624  <|@ instruction rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" "B70" 
    xhandlers
    flags 
    probability 4580674797109389737
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  710  <|@ instruction stack:60|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  712  <|@ instruction rsi|DWORD = SHL r11|DWORD size: DWORD <|@ <|@
      nr  714  <|@ instruction rsi|DWORD = LEA [rsi|DWORD + 2] size: DWORD <|@ <|@
      nr  716  <|@ instruction rdx|DWORD = SUB (x: rsi|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  718  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  720  <|@ instruction r13|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: rax|DWORD) condition: < <|@ <|@
      nr  722  <|@ instruction CMP r13|DWORD y: 1 size: DWORD <|@ <|@
      nr  724  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B68 -> B69 falseDestination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4580674797109389737
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  738  <|@ instruction rsi|DWORD = MOVE input: int[2147483639|0x7ffffff7] <|@ <|@
      nr  740  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  742  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  744  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B122" 
    xhandlers
    flags 
    probability 4580674797109389737
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  758  <|@ instruction CMP (x: r13|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  760  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B72 -> B73 falseDestination: B72 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B121" 
    xhandlers
    flags 
    probability 4580674797109389737
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  764  <|@ instruction CMP (x: r13|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  766  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B79" 
    xhandlers
    flags 
    probability 4580674797109389737
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  770  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  772  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  774  <|@ instruction CMP r13|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  776  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B74 -> B75 falseDestination: B74 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" "B77" 
    xhandlers
    flags 
    probability 4580173039539293157
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  780  <|@ instruction rcx|DWORD = SHL r13|DWORD size: DWORD <|@ <|@
      nr  782  <|@ instruction rcx|DWORD = LEA [rcx|DWORD + 23] size: DWORD <|@ <|@
      nr  784  <|@ instruction rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD <|@ <|@
      nr  786  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  788  <|@ instruction rbp|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  790  <|@ instruction CMP (x: rbp|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  792  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B75 -> B79 falseDestination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B80" 
    xhandlers
    flags 
    probability 4580094941680174497
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  802  <|@ instruction MOV (x: [r15|QWORD + 96], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  804  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  806  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  808  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  810  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  812  <|@ instruction MOV (x: [rsi|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  814  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  816  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  818  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  820  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  822  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  824  <|@ instruction JUMP ~[] destination: B77 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" 
    successors "B99" "B82" 
    xhandlers
    flags 
    probability 4580674797109389737
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  846  <|@ instruction CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  848  <|@ instruction r10|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr  850  <|@ instruction r10|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  852  <|@ instruction CMP r10|QWORD y: 1 size: QWORD <|@ <|@
      nr  854  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B80 -> B99 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B87" "B85" 
    xhandlers
    flags 
    probability 4576171197482019241
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  862  <|@ instruction r11|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD <|@ <|@
      nr  864  <|@ instruction r8|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  866  <|@ instruction r11|QWORD[*] = LEA [r11|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  868  <|@ instruction r9|QWORD = LEA [r10|QWORD - 16] size: QWORD <|@ <|@
      nr  870  <|@ instruction TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  876  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  872  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B82 -> B87 falseDestination: B82 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B82" "B85" 
    successors "B90" "B89" 
    xhandlers
    flags 
    probability 4576171197482019241
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  904  <|@ instruction r9|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  906  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  908  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B87 -> B90 falseDestination: B87 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4574176385705131646
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  916  <|@ instruction xmm0|V128_WORD = H [r11|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  918  <|@ instruction J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  920  <|@ instruction r9|QWORD = LEA [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  922  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  924  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B87" 
    successors "B93" "B92" 
    xhandlers
    flags 
    probability 4576171197482019241
    begin_IR
      LIR
      nr  926  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  928  <|@ instruction r9|QWORD = LEA [r10|QWORD - 4] size: QWORD <|@ <|@
      nr  930  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  932  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B90 -> B93 falseDestination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" 
    xhandlers
    flags 
    probability 4574176385705131646
    begin_IR
      LIR
      nr  938  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  940  <|@ instruction xmm0|V64_WORD = H [r11|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr  942  <|@ instruction J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  944  <|@ instruction r9|QWORD = LEA [rcx|QWORD + 4] size: QWORD <|@ <|@
      nr  946  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  948  <|@ instruction JUMP ~[] destination: B92 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" "B90" 
    successors "B96" "B95" 
    xhandlers
    flags 
    probability 4576171197482019241
    begin_IR
      LIR
      nr  950  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  952  <|@ instruction r9|QWORD = LEA [r10|QWORD - 2] size: QWORD <|@ <|@
      nr  954  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  956  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B93 -> B96 falseDestination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" 
    xhandlers
    flags 
    probability 4574176385705131646
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  964  <|@ instruction xmm0|V32_WORD = H [r11|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr  966  <|@ instruction J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  968  <|@ instruction r9|QWORD = LEA [rcx|QWORD + 2] size: QWORD <|@ <|@
      nr  970  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  972  <|@ instruction JUMP ~[] destination: B95 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" "B93" 
    successors "B99" "B98" 
    xhandlers
    flags 
    probability 4576171197482019241
    begin_IR
      LIR
      nr  974  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  976  <|@ instruction r9|QWORD = DEC r10|QWORD size: QWORD <|@ <|@
      nr  978  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  980  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B96 -> B99 falseDestination: B96 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B99" 
    xhandlers
    flags 
    probability 4574176385705131646
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  988  <|@ instruction r11|DWORD = MOVSX [r11|QWORD[*] + rcx|QWORD * 2] size: DWORD <|@ <|@
      nr  990  <|@ instruction MOV (x: [r8|QWORD[.] + rcx|QWORD * 2], y: r11|DWORD) size: WORD <|@ <|@
      nr  992  <|@ instruction JUMP ~[] destination: B98 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B80" "B98" "B96" 
    successors "B100" "B119" 
    xhandlers
    flags 
    probability 4580674797109389737
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  996  <|@ instruction r11|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr  998  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1000  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B99 -> B100 falseDestination: B99 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B99" "B116" "B114" 
    successors 
    xhandlers
    flags 
    probability 4580674797109389737
    begin_IR
      LIR
      nr 1176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1162  <|@ instruction rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1164  <|@ instruction rdi|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1166  <|@ instruction rbx|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1168  <|@ instruction r9|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1170  <|@ instruction r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1172  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1178  <|@ instruction r11|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr 1180  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@3f307c23 encoding: base: 0 shift: 3 <|@ <|@
      nr 1182  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr 1184  <|@ instruction r13|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1186  <|@ instruction MOVB (x: [r13|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1188  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1190  <|@ instruction MOV [rax|QWORD[.] + r8|DWORD * 2 + 16] y: 116 size: WORD <|@ <|@
      nr 1192  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1194  <|@ instruction MOV [rax|QWORD[.] + rdi|DWORD * 2 + 16] y: 114 size: WORD <|@ <|@
      nr 1196  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1198  <|@ instruction MOV [rax|QWORD[.] + rbx|DWORD * 2 + 16] y: 117 size: WORD <|@ <|@
      nr 1200  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1202  <|@ instruction MOV [rax|QWORD[.] + r9|DWORD * 2 + 16] y: 101 size: WORD <|@ <|@
      nr 1204  <|@ instruction rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1206  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4579681994949064406
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  414  <|@ instruction rcx|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr  418  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD <|@ <|@
      nr  420  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  422  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    probability 4577549901657061664
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  428  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" 
    successors "B47" "B46" 
    xhandlers
    flags 
    probability 4579681994949064406
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  454  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  456  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  458  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B47 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4577549901657061664
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  466  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  468  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  470  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 8] size: QWORD <|@ <|@
      nr  472  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B44" 
    successors "B50" "B49" 
    xhandlers
    flags 
    probability 4579681994949064406
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  478  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD <|@ <|@
      nr  480  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  482  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B50 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4577549901657061664
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  490  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  492  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  494  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 4] size: QWORD <|@ <|@
      nr  496  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  498  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B47" 
    successors "B53" "B52" 
    xhandlers
    flags 
    probability 4579681994949064406
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  502  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD <|@ <|@
      nr  504  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  506  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B50 -> B53 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4577549901657061664
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  514  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  516  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  518  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 2] size: QWORD <|@ <|@
      nr  520  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  522  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B50" 
    successors "B58" "B55" 
    xhandlers
    flags 
    probability 4579681994949064406
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  526  <|@ instruction rdx|QWORD = DEC rdx|QWORD size: QWORD <|@ <|@
      nr  528  <|@ instruction CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  530  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B53 -> B58 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4577549901657061664
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  552  <|@ instruction MOV (x: [rcx|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr  568  <|@ instruction JUMP ~[] destination: B55 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B101" "B102" 
    xhandlers
    flags 
    probability 4576171197482019241
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1004  <|@ instruction r8|QWORD[.] = LEA [rax|QWORD[.] + r10|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr 1006  <|@ instruction r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD <|@ <|@
      nr 1008  <|@ instruction r10|QWORD = LEA [r11|QWORD - 16] size: QWORD <|@ <|@
      nr 1010  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1012  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B100 -> B101 falseDestination: B100 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B105" 
    xhandlers
    flags 
    probability 4574176385705131646
    begin_IR
      LIR
      nr 1014  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1016  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1018  <|@ instruction JUMP ~[] destination: B101 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B101" "B103" 
    successors "B108" "B107" 
    xhandlers
    flags 
    probability 4576171197482019241
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1044  <|@ instruction r10|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr 1046  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1048  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B105 -> B108 falseDestination: B105 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4574176385705131646
    begin_IR
      LIR
      nr 1054  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1056  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr 1058  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1060  <|@ instruction r10|QWORD = LEA [r9|QWORD + 8] size: QWORD <|@ <|@
      nr 1062  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1064  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" "B105" 
    successors "B111" "B110" 
    xhandlers
    flags 
    probability 4576171197482019241
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1068  <|@ instruction r10|QWORD = LEA [r11|QWORD - 4] size: QWORD <|@ <|@
      nr 1070  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1072  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B108 -> B111 falseDestination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    probability 4574176385705131646
    begin_IR
      LIR
      nr 1078  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1080  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr 1082  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr 1084  <|@ instruction r10|QWORD = LEA [r9|QWORD + 4] size: QWORD <|@ <|@
      nr 1086  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1088  <|@ instruction JUMP ~[] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" "B108" 
    successors "B114" "B113" 
    xhandlers
    flags 
    probability 4576171197482019241
    begin_IR
      LIR
      nr 1090  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1092  <|@ instruction r10|QWORD = LEA [r11|QWORD - 2] size: QWORD <|@ <|@
      nr 1094  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1096  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B111 -> B114 falseDestination: B111 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    probability 4574176385705131646
    begin_IR
      LIR
      nr 1102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1104  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr 1106  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr 1108  <|@ instruction r10|QWORD = LEA [r9|QWORD + 2] size: QWORD <|@ <|@
      nr 1110  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1112  <|@ instruction JUMP ~[] destination: B113 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" "B111" 
    successors "B119" "B116" 
    xhandlers
    flags 
    probability 4576171197482019241
    begin_IR
      LIR
      nr 1114  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1116  <|@ instruction r11|QWORD = DEC r11|QWORD size: QWORD <|@ <|@
      nr 1118  <|@ instruction CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1120  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B114 -> B119 falseDestination: B114 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B119" 
    xhandlers
    flags 
    probability 4574176385705131646
    begin_IR
      LIR
      nr 1138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1140  <|@ instruction MOV (x: [r8|QWORD[.] + r9|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr 1154  <|@ instruction JUMP ~[] destination: B116 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4570674795694323414
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  432  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  434  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B42" 
    successors "B44" "B42" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4579681994949064406
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  440  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  442  <|@ instruction r10|QWORD = LEA [r10|QWORD + 16] size: QWORD <|@ <|@
      nr  444  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  446  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B42 -> B44 falseDestination: B42 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B26" "B24" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4579681994949064406
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  298  <|@ instruction xmm0|V256_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  300  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  302  <|@ instruction r11|QWORD = LEA [r11|QWORD + 16] size: QWORD <|@ <|@
      nr  304  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  306  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B24 -> B26 falseDestination: B24 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4568969121060721220
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction stack:64|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction stack:60|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction r13|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4569583163928818010
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  238  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  244  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  246  <|@ instruction rdx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  250  <|@ st <@st|@reference-map: [stack:28, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 0]
locals: stack:32|QWORD[.] stack:60|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B82" "B85" 
    successors "B87" "B85" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4576171197482019241
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  888  <|@ instruction xmm0|V256_WORD = H [r11|QWORD[*] + rcx|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  890  <|@ instruction J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  892  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  894  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  896  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B85 -> B87 falseDestination: B85 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B103" 
    xhandlers
    flags 
    probability 4567163998227278249
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1022  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr 1024  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr 1026  <|@ instruction JUMP ~[] destination: B102 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" "B103" 
    successors "B105" "B103" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4576171197482019241
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1030  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1032  <|@ instruction r9|QWORD = LEA [r9|QWORD + 16] size: QWORD <|@ <|@
      nr 1034  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1036  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B103 -> B105 falseDestination: B103 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B74" "B75" 
    successors "B80" 
    xhandlers
    flags 
    probability 4566393474921426308
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  828  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  834  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  836  <|@ instruction rdx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  838  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  840  <|@ st <@st|@reference-map: [stack:28, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 0]
locals: stack:32|QWORD[.] stack:60|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  842  <|@ instruction JUMP ~[] destination: B79 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B18" 
    xhandlers
    flags 
    probability 4553547966588975281
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction r13|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction stack:64|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B15 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  102  <|@ instruction r11|DWORD = MOVE input: int[-61467|0xffffffffffff0fe5] <|@ <|@
      nr  104  <|@ instruction r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B6 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B8" "B6" "B5" "B69" "B67" "B66" "B10" "B71" "B61" "B60" "B122" "B121" 
    successors 
    xhandlers
    flags 
    probability 2371145203810566144
    begin_IR
      LIR
      nr 1232  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1234  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1236  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1238  <|@ st <@st|@reference-map: [r10:0]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 0]
locals: r10|QWORD[.] r14|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   94  <|@ instruction r11|DWORD = MOVE input: int[-72731|0xfffffffffffee3e5] <|@ <|@
      nr   96  <|@ instruction r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction JUMP ~[] destination: B5 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1222  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1224  <|@ instruction r11|DWORD = MOVE input: int[-99867|0xfffffffffffe79e5] <|@ <|@
      nr 1228  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1230  <|@ instruction JUMP ~[] destination: B122 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  702  <|@ instruction r11|DWORD = MOVE input: int[-88091|0xfffffffffffea7e5] <|@ <|@
      nr  704  <|@ instruction r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  706  <|@ instruction JUMP ~[] destination: B67 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  126  <|@ instruction r11|DWORD = MOVE input: int[-74771|0xfffffffffffedbed] <|@ <|@
      nr  128  <|@ instruction r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B8 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  694  <|@ instruction r11|DWORD = MOVE input: int[-96539|0xfffffffffffe86e5] <|@ <|@
      nr  696  <|@ instruction r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction JUMP ~[] destination: B66 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  144  <|@ instruction r11|DWORD = MOVE input: int[-75027|0xfffffffffffedaed] <|@ <|@
      nr  146  <|@ instruction r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B10 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1212  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1214  <|@ instruction r11|DWORD = MOVE input: int[-106779|0xfffffffffffe5ee5] <|@ <|@
      nr 1218  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1220  <|@ instruction JUMP ~[] destination: B121 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  748  <|@ instruction r11|DWORD = MOVE input: int[-98579|0xfffffffffffe7eed] <|@ <|@
      nr  752  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  754  <|@ instruction JUMP ~[] destination: B71 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  642  <|@ instruction r11|DWORD = MOVE input: int[-76315|0xfffffffffffed5e5] <|@ <|@
      nr  644  <|@ instruction r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  646  <|@ instruction JUMP ~[] destination: B61 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  728  <|@ instruction r11|DWORD = MOVE input: int[-98323|0xfffffffffffe7fed] <|@ <|@
      nr  732  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  734  <|@ instruction JUMP ~[] destination: B69 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  634  <|@ instruction r11|DWORD = MOVE input: int[-85531|0xfffffffffffeb1e5] <|@ <|@
      nr  636  <|@ instruction r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction JUMP ~[] destination: B60 -> B123 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: ifeq          89
     4: aload_0       
     5: aload_0       
     6: getfield      #2          // count:int
     9: iconst_4      
    10: iadd          
    11: invokespecial #3          // ensureCapacityInternal:(int)void
    14: aload_0       
    15: getfield      #1          // value:char[]
    18: aload_0       
    19: dup           
    20: getfield      #2          // count:int
    23: dup_x1        
    24: iconst_1      
    25: iadd          
    26: putfield      #2          // count:int
    29: bipush        116
    31: castore       
    32: aload_0       
    33: getfield      #1          // value:char[]
    36: aload_0       
    37: dup           
    38: getfield      #2          // count:int
    41: dup_x1        
    42: iconst_1      
    43: iadd          
    44: putfield      #2          // count:int
    47: bipush        114
    49: castore       
    50: aload_0       
    51: getfield      #1          // value:char[]
    54: aload_0       
    55: dup           
    56: getfield      #2          // count:int
    59: dup_x1        
    60: iconst_1      
    61: iadd          
    62: putfield      #2          // count:int
    65: bipush        117
    67: castore       
    68: aload_0       
    69: getfield      #1          // value:char[]
    72: aload_0       
    73: dup           
    74: getfield      #2          // count:int
    77: dup_x1        
    78: iconst_1      
    79: iadd          
    80: putfield      #2          // count:int
    83: bipush        101
    85: castore       
    86: goto          189
    89: aload_0       
    90: aload_0       
    91: getfield      #2          // count:int
    94: iconst_5      
    95: iadd          
    96: invokespecial #3          // ensureCapacityInternal:(int)void
    99: aload_0       
   100: getfield      #1          // value:char[]
   103: aload_0       
   104: dup           
   105: getfield      #2          // count:int
   108: dup_x1        
   109: iconst_1      
   110: iadd          
   111: putfield      #2          // count:int
   114: bipush        102
   116: castore       
   117: aload_0       
   118: getfield      #1          // value:char[]
   121: aload_0       
   122: dup           
   123: getfield      #2          // count:int
   126: dup_x1        
   127: iconst_1      
   128: iadd          
   129: putfield      #2          // count:int
   132: bipush        97
   134: castore       
   135: aload_0       
   136: getfield      #1          // value:char[]
   139: aload_0       
   140: dup           
   141: getfield      #2          // count:int
   144: dup_x1        
   145: iconst_1      
   146: iadd          
   147: putfield      #2          // count:int
   150: bipush        108
   152: castore       
   153: aload_0       
   154: getfield      #1          // value:char[]
   157: aload_0       
   158: dup           
   159: getfield      #2          // count:int
   162: dup_x1        
   163: iconst_1      
   164: iadd          
   165: putfield      #2          // count:int
   168: bipush        115
   170: castore       
   171: aload_0       
   172: getfield      #1          // value:char[]
   175: aload_0       
   176: dup           
   177: getfield      #2          // count:int
   180: dup_x1        
   181: iconst_1      
   182: iadd          
   183: putfield      #2          // count:int
   186: bipush        101
   188: castore       
   189: aload_0       
   190: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec3848896c24304c8bee4c896c2420448bf2458b5510448954241c468b1cd50c000000458b450c4489442418458d480344894c2414418d5802895c2410418bf8ffc7897c240c418d4004894424084585f60f857a000000418d68058bf5412bf383fe010f8dd2000000453bd80f86d4060000443bd80f86e806000041897d0c49c1e2036643c7444210660041895d0c6641c7447a10610045894d0c6641c7445a106c004189450c6643c7444a10730041896d0c6641c74442106500498bc5488b6c24304883c438850500000000c5f877c38bf0412bf383fe010f8d64020000453bd80f8693060000453bd90f86a006000041897d0c49c1e2036643c7444210740041895d0c6641c7447a10720045894d0c6641c7445a1075004189450c6643c7444a106500498bc5488b6c24304883c438850500000000c5f877c3418bf3d1e68d76028bd62bd585d20f4cf583fe010f8c31060000baf7ffff7f2bd685d20f8c38060000413bf00f86540600003bf00f8667060000498b5760498b4f7081feffffff000f83180500004489742404448bf641d1e6458d76174183e6f84d63f64d8bee4c03ea4c3be90f878d0500004d896f60410f188416c0000000410f18841600010000410f18841640010000410f1884168001000089720c48c70201000000c74208addeadde448bee892c24458bf3488bc2453bee418bf5410f4ff64863f64883fe010f8c9e000000448b54241c488d50104a8d0cd5100000004c8d56f04d85d249c7c3000000000f8d580400004c8d56f84d3bda0f8f13000000c4a17a6f0459c4a17a7f045a4d8d53084d8bda4c8d56fc4d3bda0f8f13000000c4a1f96e0459c4a1f97e045a4d8d53044d8bda4c8d56fe4d3bda0f8f13000000c4a1796e0459c4a1797e045a4d8d53024d8bda4c8bd649ffca4d3bda0f8f0a000000420fbf0c596642890c5a4963d5483bd60f8f840200008b2c24448b5c24088b7c240c8b5c2410448b4c2414448b4424184c8b6c242048be00e01b1701000000488bd048c1ea0341895510498bd548c1ea094488243241897d0c6642c7444010660041895d0c66c7447810610045894d0c66c74458106c0045895d0c6642c7444810730041896d0c6642c74458106500498bc5488b6c24304883c438850500000000c5f877c34489742404418bf3d1e68d76028bd62bd085d2448bee440f4ce84183fd010f8c65040000bef7ffff7f412bf585f60f8c3d040000453be80f86ee030000453be90f861e040000498b7760498b57704181fdffffff000f837d030000418bcdd1e18d491783e1f84863c9488be94803ee483bea0f876003000049896f600f188431c00000000f188431000100000f188431400100000f1884318001000044896e0c48c70601000000c74608addeadde458bf3488bc6453bee458bd5450f4fd64d63d24983fa010f8c9e000000448b5c241c4c8d40104e8d1cdd100000004d8d4af04d85c948c7c1000000000f8da40200004d8d4af8493bc90f8f13000000c4c17a6f044bc4c17a7f04484c8d4908498bc94d8d4afc493bc90f8f13000000c4c1f96e044bc4c1f97e04484c8d4904498bc94d8d4afe493bc90f8f13000000c4c1796e044bc4c1797e04484c8d4902498bc94d8bca49ffc9493bc90f8f0a000000450fbf1c4b6645891c484d63dd4d3bda0f8f0c0100008b4c24088b7c240c8b5c2410448b4c2414448b4424184c8b54242049bb00e01b1701000000488bd048c1ea03418952104d8bea49c1ed094788641d0041897a0c6642c7444010740041895a0c66c7447810720045894a0c66c7445810750041894a0c6642c74448106500498bc2488b6c24304883c438850500000000c5f877c3488d4c7010482bd6488d72f04885f60f8d0301000049c7c200000000488d72f84c3bd60f8f11000000c5f9efc0c4a17a7f0451498d72084c8bd6488d72fc4c3bd60f8f11000000c5f9efc0c4a1f97e0451498d72044c8bd6488d72fe4c3bd60f8f11000000c5f9efc0c4a1797e0451498d72024c8bd648ffca4c3bd20f8ffafcffff6646892451e9f0fcffff4e8d4450104d2bda4d8d53f04d85d20f8d1801000049c7c1000000004d8d53f84d3bca0f8f11000000c5f9efc0c4817a7f04484d8d51084d8bca4d8d53fc4d3bca0f8f11000000c5f9efc0c481f97e04484d8d51044d8bca4d8d53fe4d3bca0f8f11000000c5f9efc0c481797e04484d8d51024d8bca49ffcb4d3bcb0f8f72feffff6647892448e968feffffc5f9efc049c7c200000000660f1f440000660f1f440000c4a17e7f04514d8d52104c3bd67ef1e9d9feffff660f1f440000660f1f440000c4a17e6f0459c4a17e7f045a4d8d5b104d3bda7eebe98efbffff892c244489742404448bee458bf348beaddeaddeaddeadde418bd5b900000000e80000000090e927fbffff6666660f1f840000000000c4c17e6f044bc4c17e7f0448488d4910493bc97eebe942fdffffc5f9efc049c7c1000000006666660f1f840000000000c4817e7f04484d8d49104d3bca7ef1e9c5feffff458bf348beaddeaddeaddeadde418bd5b900000000e80000000090e9bcfcffff448bee892c24e966ffffff41bbe50fffff4d8bd545899f9c0200004d89a7a8020000e8000000009041bbe5e3feff4d8bd5ebe141bbe579feff4c8b542420ebd441bbe5a7feff4d8bd5ebc941bbeddbfeff4d8bd5ebbe41bbe586feff4d8bd5ebb341bbeddafeff4d8bd5eba841bbe55efeff4c8b542420eb9b41bbed7efeff4c8b542420eb8e41bbe5d5feff4d8bd5eb8341bbed7ffeff4c8b542420e973ffffff41bbe5b1feff4d8bd5e965ffffffe80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1f760f52 slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 56 10 r14|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 59 12 r10|DWORD[.] = MOV [r13|QWORD[.] + 16] size: DWORD  <||@
  Comment 63 14 stack:36|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 68 16 r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 68 [r10:0, r13:0, stack:28, stack:32]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |r13|QWORD[.]  |r14|DWORD   <||@
  Comment 68 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 76 18 r8|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 80 20 stack:40|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 85 22 r9|DWORD = LEA [r8|DWORD + 3] size: DWORD  <||@
  Comment 89 24 stack:44|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 94 26 rbx|DWORD = LEA [r8|DWORD + 2] size: DWORD  <||@
  Comment 98 28 stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 102 30 rdi|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 107 32 stack:52|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 111 34 rax|DWORD = LEA [r8|DWORD + 4] size: DWORD  <||@
  Comment 115 36 stack:56|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 119 38 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 122 40 BRANCH trueDestinationProbability: 0.6295884659318947 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B62  <||@
  Comment 128 block B1 null  <||@
  Comment 128 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 128 44 rbp|DWORD = LEA [r8|DWORD + 5] size: DWORD  <||@
  Comment 132 46 rsi|DWORD = SUB (x: rbp|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 137 48 CMP rsi|DWORD y: 1 size: DWORD  <||@
  Comment 140 50 BRANCH trueDestinationProbability: 0.953003048985209 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B7  <||@
  Comment 146 block B2 null  <||@
  Comment 146 52 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 146 54 CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 149 56 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6  <||@
  Comment 155 block B3 null  <||@
  Comment 155 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 155 60 CMP (x: r11|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 158 62 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 164 block B4 null  <||@
  Comment 164 64 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 164 66 MOV (x: [r13|QWORD[.] + 12], y: rdi|DWORD) size: DWORD  <||@
  Comment 168 68 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3f307c23 encoding: base: 0 shift: 3  <||@
  Comment 172 70 MOV [r10|QWORD[.] + r8|DWORD * 2 + 16] y: 102 size: WORD  <||@
  Comment 180 72 MOV (x: [r13|QWORD[.] + 12], y: rbx|DWORD) size: DWORD  <||@
  Comment 184 74 MOV [r10|QWORD[.] + rdi|DWORD * 2 + 16] y: 97 size: WORD  <||@
  Comment 192 76 MOV (x: [r13|QWORD[.] + 12], y: r9|DWORD) size: DWORD  <||@
  Comment 196 78 MOV [r10|QWORD[.] + rbx|DWORD * 2 + 16] y: 108 size: WORD  <||@
  Comment 204 80 MOV (x: [r13|QWORD[.] + 12], y: rax|DWORD) size: DWORD  <||@
  Comment 208 82 MOV [r10|QWORD[.] + r9|DWORD * 2 + 16] y: 115 size: WORD  <||@
  Comment 216 84 MOV (x: [r13|QWORD[.] + 12], y: rbp|DWORD) size: DWORD  <||@
  Comment 220 86 MOV [r10|QWORD[.] + rax|DWORD * 2 + 16] y: 101 size: WORD  <||@
  Comment 228 88 rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 231 90 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 240 12  <||@
  Comment 250 block B62 null  <||@
  Comment 250 648 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 250 650 rsi|DWORD = SUB (x: rax|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 255 652 CMP rsi|DWORD y: 1 size: DWORD  <||@
  Comment 258 654 BRANCH trueDestinationProbability: 0.953003048985209 condition: < trueDestination: B62 -> B63 falseDestination: B62 -> B68  <||@
  Comment 264 block B63 null  <||@
  Comment 264 656 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 264 658 CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 267 660 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B63 -> B64 falseDestination: B63 -> B67  <||@
  Comment 273 block B64 null  <||@
  Comment 273 662 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 273 664 CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 276 666 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B64 -> B65 falseDestination: B64 -> B66  <||@
  Comment 282 block B65 null  <||@
  Comment 282 668 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 282 670 MOV (x: [r13|QWORD[.] + 12], y: rdi|DWORD) size: DWORD  <||@
  Comment 286 672 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3f307c23 encoding: base: 0 shift: 3  <||@
  Comment 290 674 MOV [r10|QWORD[.] + r8|DWORD * 2 + 16] y: 116 size: WORD  <||@
  Comment 298 676 MOV (x: [r13|QWORD[.] + 12], y: rbx|DWORD) size: DWORD  <||@
  Comment 302 678 MOV [r10|QWORD[.] + rdi|DWORD * 2 + 16] y: 114 size: WORD  <||@
  Comment 310 680 MOV (x: [r13|QWORD[.] + 12], y: r9|DWORD) size: DWORD  <||@
  Comment 314 682 MOV [r10|QWORD[.] + rbx|DWORD * 2 + 16] y: 117 size: WORD  <||@
  Comment 322 684 MOV (x: [r13|QWORD[.] + 12], y: rax|DWORD) size: DWORD  <||@
  Comment 326 686 MOV [r10|QWORD[.] + r9|DWORD * 2 + 16] y: 101 size: WORD  <||@
  Comment 334 688 rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 337 690 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 346 12  <||@
  Comment 356 block B7 null  <||@
  Comment 356 108 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 356 110 rsi|DWORD = SHL r11|DWORD size: DWORD  <||@
  Comment 361 112 rsi|DWORD = LEA [rsi|DWORD + 2] size: DWORD  <||@
  Comment 364 114 rdx|DWORD = SUB (x: rsi|DWORD, ~y: rbp|DWORD) size: DWORD  <||@
  Comment 368 116 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 370 118 rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: rbp|DWORD) condition: <  <||@
  Comment 373 120 CMP rsi|DWORD y: 1 size: DWORD  <||@
  Comment 376 122 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9  <||@
  Comment 382 block B9 null  <||@
  Comment 382 132 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 382 134 rdx|DWORD = MOVE input: int[2147483639|0x7ffffff7]  <||@
  Comment 387 136 rdx|DWORD = SUB (x: rdx|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 389 138 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 391 140 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11  <||@
  Comment 397 block B11 null  <||@
  Comment 397 150 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 397 152 CMP (x: rsi|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 400 154 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B61  <||@
  Comment 406 block B12 null  <||@
  Comment 406 156 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 406 158 CMP (x: rsi|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 408 160 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B60  <||@
  Comment 414 block B13 null  <||@
  Comment 414 162 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 414 164 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 418 166 rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 422 168 CMP rsi|DWORD y: 16777215 size: DWORD  <||@
  Comment 428 170 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B17  <||@
  Comment 434 block B14 null  <||@
  Comment 434 172 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 434 174 stack:60|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 439 176 r14|DWORD = SHL rsi|DWORD size: DWORD  <||@
  Comment 445 178 r14|DWORD = LEA [r14|DWORD + 23] size: DWORD  <||@
  Comment 449 180 r14|DWORD = AND r14|DWORD y: -8 size: DWORD  <||@
  Comment 453 182 r14|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 456 184 r13|QWORD = ADD (x: r14|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 462 186 CMP (x: r13|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 465 188 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16  <||@
  Comment 471 block B16 null  <||@
  Comment 471 200 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 471 202 MOV (x: [r15|QWORD + 96], y: r13|QWORD) size: QWORD  <||@
  Comment 475 204 AMD64PREFETCH ~[r14|QWORD + rdx|QWORD * 1 + 192] instr: 0  <||@
  Comment 484 206 AMD64PREFETCH ~[r14|QWORD + rdx|QWORD * 1 + 256] instr: 0  <||@
  Comment 493 208 AMD64PREFETCH ~[r14|QWORD + rdx|QWORD * 1 + 320] instr: 0  <||@
  Comment 502 210 AMD64PREFETCH ~[r14|QWORD + rdx|QWORD * 1 + 384] instr: 0  <||@
  Comment 511 212 MOV (x: [rdx|QWORD + 12], y: rsi|DWORD) size: DWORD  <||@
  Comment 514 214 MOV [rdx|QWORD] y: 1 size: QWORD  <||@
  Comment 521 216 MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 521 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 528 218 rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 528 220 r13|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 531 222 stack:64|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 534 224 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 537 226 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 540 228 JUMP ~[] destination: B16 -> B19  <||@
  Comment 540 block B19 null  <||@
  Comment 540 254 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 540 256 CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 543 258 rsi|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r14|DWORD) condition: >  <||@
  Comment 550 260 rsi|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 553 262 CMP rsi|QWORD y: 1 size: QWORD  <||@
  Comment 557 264 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B19 -> B38 falseDestination: B19 -> B21  <||@
  Comment 563 block B21 null  <||@
  Comment 563 270 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 563 272 r10|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD  <||@
  Comment 568 274 rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 572 276 rcx|QWORD[*] = LEA [r10|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 580 278 r10|QWORD = LEA [rsi|QWORD - 16] size: QWORD  <||@
  Comment 584 280 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 587 286 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 594 282 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B21 -> B26 falseDestination: B21 -> B24  <||@
  Comment 600 block B26 null  <||@
  Comment 600 312 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 600 314 r10|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 604 316 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 607 318 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B29 falseDestination: B26 -> B28  <||@
  Comment 613 block B28 null  <||@
  Comment 613 324 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 613 326 xmm0|V128_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 619 328 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 625 330 r10|QWORD = LEA [r11|QWORD + 8] size: QWORD  <||@
  Comment 629 332 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 632 334 JUMP ~[] destination: B28 -> B29  <||@
  Comment 632 block B29 null  <||@
  Comment 632 336 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 632 338 r10|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 636 340 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 639 342 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B29 -> B32 falseDestination: B29 -> B31  <||@
  Comment 645 block B31 null  <||@
  Comment 645 348 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 645 350 xmm0|V64_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 651 352 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 657 354 r10|QWORD = LEA [r11|QWORD + 4] size: QWORD  <||@
  Comment 661 356 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 664 358 JUMP ~[] destination: B31 -> B32  <||@
  Comment 664 block B32 null  <||@
  Comment 664 360 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 664 362 r10|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 668 364 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 671 366 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B32 -> B35 falseDestination: B32 -> B34  <||@
  Comment 677 block B34 null  <||@
  Comment 677 372 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 677 374 xmm0|V32_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 683 376 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 689 378 r10|QWORD = LEA [r11|QWORD + 2] size: QWORD  <||@
  Comment 693 380 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 696 382 JUMP ~[] destination: B34 -> B35  <||@
  Comment 696 block B35 null  <||@
  Comment 696 384 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 696 386 r10|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 702 388 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 705 390 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B35 -> B38 falseDestination: B35 -> B37  <||@
  Comment 711 block B37 null  <||@
  Comment 711 396 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 711 398 rcx|DWORD = MOVSX [rcx|QWORD[*] + r11|QWORD * 2] size: DWORD  <||@
  Comment 716 400 MOV (x: [rdx|QWORD[.] + r11|QWORD * 2], y: rcx|DWORD) size: WORD  <||@
  Comment 721 402 JUMP ~[] destination: B37 -> B38  <||@
  Comment 721 block B38 null  <||@
  Comment 721 404 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 721 406 rdx|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 724 408 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 727 410 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B58  <||@
  Comment 733 block B58 null  <||@
  Comment 733 592 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 733 576 rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 736 578 r11|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 741 580 rdi|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 745 582 rbx|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 749 584 r9|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 754 586 r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 759 588 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 764 594 rsi|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 774 596 rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@3f307c23 encoding: base: 0 shift: 3  <||@
  Comment 781 598 MOV (x: [r13|QWORD[.] + 16], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 785 600 rdx|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD  <||@
  Comment 792 602 MOVB (x: [rdx|QWORD[*] + rsi|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 796 604 MOV (x: [r13|QWORD[.] + 12], y: rdi|DWORD) size: DWORD  <||@
  Comment 800 606 MOV [rax|QWORD[.] + r8|DWORD * 2 + 16] y: 102 size: WORD  <||@
  Comment 808 608 MOV (x: [r13|QWORD[.] + 12], y: rbx|DWORD) size: DWORD  <||@
  Comment 812 610 MOV [rax|QWORD[.] + rdi|DWORD * 2 + 16] y: 97 size: WORD  <||@
  Comment 819 612 MOV (x: [r13|QWORD[.] + 12], y: r9|DWORD) size: DWORD  <||@
  Comment 823 614 MOV [rax|QWORD[.] + rbx|DWORD * 2 + 16] y: 108 size: WORD  <||@
  Comment 830 616 MOV (x: [r13|QWORD[.] + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 834 618 MOV [rax|QWORD[.] + r9|DWORD * 2 + 16] y: 115 size: WORD  <||@
  Comment 842 620 MOV (x: [r13|QWORD[.] + 12], y: rbp|DWORD) size: DWORD  <||@
  Comment 846 622 MOV [rax|QWORD[.] + r11|DWORD * 2 + 16] y: 101 size: WORD  <||@
  Comment 854 624 rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 857 626 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 866 12  <||@
  Comment 876 block B68 null  <||@
  Comment 876 708 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 876 710 stack:60|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 881 712 rsi|DWORD = SHL r11|DWORD size: DWORD  <||@
  Comment 886 714 rsi|DWORD = LEA [rsi|DWORD + 2] size: DWORD  <||@
  Comment 889 716 rdx|DWORD = SUB (x: rsi|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 893 718 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 895 720 r13|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: rax|DWORD) condition: <  <||@
  Comment 902 722 CMP r13|DWORD y: 1 size: DWORD  <||@
  Comment 906 724 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B68 -> B69 falseDestination: B68 -> B70  <||@
  Comment 912 block B70 null  <||@
  Comment 912 736 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 912 738 rsi|DWORD = MOVE input: int[2147483639|0x7ffffff7]  <||@
  Comment 917 740 rsi|DWORD = SUB (x: rsi|DWORD, ~y: r13|DWORD) size: DWORD  <||@
  Comment 920 742 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 922 744 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B70 -> B71 falseDestination: B70 -> B72  <||@
  Comment 928 block B72 null  <||@
  Comment 928 756 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 928 758 CMP (x: r13|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 931 760 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B72 -> B73 falseDestination: B72 -> B122  <||@
  Comment 937 block B73 null  <||@
  Comment 937 762 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 937 764 CMP (x: r13|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 940 766 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B121  <||@
  Comment 946 block B74 null  <||@
  Comment 946 768 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 946 770 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 950 772 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 954 774 CMP r13|DWORD y: 16777215 size: DWORD  <||@
  Comment 961 776 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B74 -> B75 falseDestination: B74 -> B79  <||@
  Comment 967 block B75 null  <||@
  Comment 967 778 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 967 780 rcx|DWORD = SHL r13|DWORD size: DWORD  <||@
  Comment 972 782 rcx|DWORD = LEA [rcx|DWORD + 23] size: DWORD  <||@
  Comment 975 784 rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD  <||@
  Comment 978 786 rcx|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 981 788 rbp|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 987 790 CMP (x: rbp|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 990 792 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B75 -> B79 falseDestination: B75 -> B77  <||@
  Comment 996 block B77 null  <||@
  Comment 996 800 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 996 802 MOV (x: [r15|QWORD + 96], y: rbp|QWORD) size: QWORD  <||@
  Comment 1000 804 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 192] instr: 0  <||@
  Comment 1008 806 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 1016 808 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 1024 810 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 1032 812 MOV (x: [rsi|QWORD + 12], y: r13|DWORD) size: DWORD  <||@
  Comment 1036 814 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 1043 816 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 1043 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 1050 818 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1050 820 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1053 822 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1056 824 JUMP ~[] destination: B77 -> B80  <||@
  Comment 1056 block B80 null  <||@
  Comment 1056 844 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1056 846 CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 1059 848 r10|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r14|DWORD) condition: >  <||@
  Comment 1066 850 r10|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 1069 852 CMP r10|QWORD y: 1 size: QWORD  <||@
  Comment 1073 854 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B80 -> B99 falseDestination: B80 -> B82  <||@
  Comment 1079 block B82 null  <||@
  Comment 1079 860 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1079 862 r11|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD  <||@
  Comment 1084 864 r8|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 1088 866 r11|QWORD[*] = LEA [r11|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 1096 868 r9|QWORD = LEA [r10|QWORD - 16] size: QWORD  <||@
  Comment 1100 870 TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 1103 876 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1110 872 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B82 -> B87 falseDestination: B82 -> B85  <||@
  Comment 1116 block B87 null  <||@
  Comment 1116 902 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1116 904 r9|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 1120 906 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 1123 908 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B87 -> B90 falseDestination: B87 -> B89  <||@
  Comment 1129 block B89 null  <||@
  Comment 1129 914 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1129 916 xmm0|V128_WORD = H [r11|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 1135 918 J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 1141 920 r9|QWORD = LEA [rcx|QWORD + 8] size: QWORD  <||@
  Comment 1145 922 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 1148 924 JUMP ~[] destination: B89 -> B90  <||@
  Comment 1148 block B90 null  <||@
  Comment 1148 926 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1148 928 r9|QWORD = LEA [r10|QWORD - 4] size: QWORD  <||@
  Comment 1152 930 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 1155 932 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B90 -> B93 falseDestination: B90 -> B92  <||@
  Comment 1161 block B92 null  <||@
  Comment 1161 938 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1161 940 xmm0|V64_WORD = H [r11|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 1167 942 J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 1173 944 r9|QWORD = LEA [rcx|QWORD + 4] size: QWORD  <||@
  Comment 1177 946 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 1180 948 JUMP ~[] destination: B92 -> B93  <||@
  Comment 1180 block B93 null  <||@
  Comment 1180 950 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1180 952 r9|QWORD = LEA [r10|QWORD - 2] size: QWORD  <||@
  Comment 1184 954 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 1187 956 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B93 -> B96 falseDestination: B93 -> B95  <||@
  Comment 1193 block B95 null  <||@
  Comment 1193 962 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1193 964 xmm0|V32_WORD = H [r11|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 1199 966 J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 1205 968 r9|QWORD = LEA [rcx|QWORD + 2] size: QWORD  <||@
  Comment 1209 970 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 1212 972 JUMP ~[] destination: B95 -> B96  <||@
  Comment 1212 block B96 null  <||@
  Comment 1212 974 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1212 976 r9|QWORD = DEC r10|QWORD size: QWORD  <||@
  Comment 1218 978 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 1221 980 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B96 -> B99 falseDestination: B96 -> B98  <||@
  Comment 1227 block B98 null  <||@
  Comment 1227 986 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1227 988 r11|DWORD = MOVSX [r11|QWORD[*] + rcx|QWORD * 2] size: DWORD  <||@
  Comment 1232 990 MOV (x: [r8|QWORD[.] + rcx|QWORD * 2], y: r11|DWORD) size: WORD  <||@
  Comment 1237 992 JUMP ~[] destination: B98 -> B99  <||@
  Comment 1237 block B99 null  <||@
  Comment 1237 994 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1237 996 r11|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 1240 998 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1243 1000 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B99 -> B100 falseDestination: B99 -> B119  <||@
  Comment 1249 block B119 null  <||@
  Comment 1249 1176 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1249 1162 rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 1253 1164 rdi|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1257 1166 rbx|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1261 1168 r9|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1266 1170 r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1271 1172 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1276 1178 r11|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1286 1180 rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@3f307c23 encoding: base: 0 shift: 3  <||@
  Comment 1293 1182 MOV (x: [r10|QWORD[.] + 16], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 1297 1184 r13|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1304 1186 MOVB (x: [r13|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1309 1188 MOV (x: [r10|QWORD[.] + 12], y: rdi|DWORD) size: DWORD  <||@
  Comment 1313 1190 MOV [rax|QWORD[.] + r8|DWORD * 2 + 16] y: 116 size: WORD  <||@
  Comment 1321 1192 MOV (x: [r10|QWORD[.] + 12], y: rbx|DWORD) size: DWORD  <||@
  Comment 1325 1194 MOV [rax|QWORD[.] + rdi|DWORD * 2 + 16] y: 114 size: WORD  <||@
  Comment 1332 1196 MOV (x: [r10|QWORD[.] + 12], y: r9|DWORD) size: DWORD  <||@
  Comment 1336 1198 MOV [rax|QWORD[.] + rbx|DWORD * 2 + 16] y: 117 size: WORD  <||@
  Comment 1343 1200 MOV (x: [r10|QWORD[.] + 12], y: rcx|DWORD) size: DWORD  <||@
  Comment 1347 1202 MOV [rax|QWORD[.] + r9|DWORD * 2 + 16] y: 101 size: WORD  <||@
  Comment 1355 1204 rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1358 1206 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1367 12  <||@
  Comment 1377 block B39 null  <||@
  Comment 1377 412 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1377 414 rcx|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 1382 416 rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD  <||@
  Comment 1385 418 rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD  <||@
  Comment 1389 420 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1392 422 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41  <||@
  Comment 1398 block B40 null  <||@
  Comment 1398 424 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1398 426 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1405 428 JUMP ~[] destination: B40 -> B44  <||@
  Comment 1405 block B44 null  <||@
  Comment 1405 452 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1405 454 rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 1409 456 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1412 458 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B47 falseDestination: B44 -> B46  <||@
  Comment 1418 block B46 null  <||@
  Comment 1418 464 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1418 466 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 1422 468 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 1428 470 rsi|QWORD = LEA [r10|QWORD + 8] size: QWORD  <||@
  Comment 1432 472 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1435 474 JUMP ~[] destination: B46 -> B47  <||@
  Comment 1435 block B47 null  <||@
  Comment 1435 476 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1435 478 rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD  <||@
  Comment 1439 480 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1442 482 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B50 falseDestination: B47 -> B49  <||@
  Comment 1448 block B49 null  <||@
  Comment 1448 488 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1448 490 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 1452 492 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 1458 494 rsi|QWORD = LEA [r10|QWORD + 4] size: QWORD  <||@
  Comment 1462 496 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1465 498 JUMP ~[] destination: B49 -> B50  <||@
  Comment 1465 block B50 null  <||@
  Comment 1465 500 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1465 502 rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD  <||@
  Comment 1469 504 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1472 506 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B50 -> B53 falseDestination: B50 -> B52  <||@
  Comment 1478 block B52 null  <||@
  Comment 1478 512 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1478 514 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 1482 516 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 1488 518 rsi|QWORD = LEA [r10|QWORD + 2] size: QWORD  <||@
  Comment 1492 520 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1495 522 JUMP ~[] destination: B52 -> B53  <||@
  Comment 1495 block B53 null  <||@
  Comment 1495 524 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1495 526 rdx|QWORD = DEC rdx|QWORD size: QWORD  <||@
  Comment 1498 528 CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1501 530 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B53 -> B58 falseDestination: B53 -> B55  <||@
  Comment 1507 block B55 null  <||@
  Comment 1507 550 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1507 552 MOV (x: [rcx|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 1512 568 JUMP ~[] destination: B55 -> B58  <||@
  Comment 1517 block B100 null  <||@
  Comment 1517 1002 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1517 1004 r8|QWORD[.] = LEA [rax|QWORD[.] + r10|QWORD * 2 + 16] size: QWORD  <||@
  Comment 1522 1006 r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD  <||@
  Comment 1525 1008 r10|QWORD = LEA [r11|QWORD - 16] size: QWORD  <||@
  Comment 1529 1010 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1532 1012 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B100 -> B101 falseDestination: B100 -> B102  <||@
  Comment 1538 block B101 null  <||@
  Comment 1538 1014 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1538 1016 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1545 1018 JUMP ~[] destination: B101 -> B105  <||@
  Comment 1545 block B105 null  <||@
  Comment 1545 1042 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1545 1044 r10|QWORD = LEA [r11|QWORD - 8] size: QWORD  <||@
  Comment 1549 1046 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1552 1048 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B105 -> B108 falseDestination: B105 -> B107  <||@
  Comment 1558 block B107 null  <||@
  Comment 1558 1054 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1558 1056 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 1562 1058 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 1568 1060 r10|QWORD = LEA [r9|QWORD + 8] size: QWORD  <||@
  Comment 1572 1062 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1575 1064 JUMP ~[] destination: B107 -> B108  <||@
  Comment 1575 block B108 null  <||@
  Comment 1575 1066 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1575 1068 r10|QWORD = LEA [r11|QWORD - 4] size: QWORD  <||@
  Comment 1579 1070 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1582 1072 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B108 -> B111 falseDestination: B108 -> B110  <||@
  Comment 1588 block B110 null  <||@
  Comment 1588 1078 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1588 1080 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 1592 1082 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 1598 1084 r10|QWORD = LEA [r9|QWORD + 4] size: QWORD  <||@
  Comment 1602 1086 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1605 1088 JUMP ~[] destination: B110 -> B111  <||@
  Comment 1605 block B111 null  <||@
  Comment 1605 1090 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1605 1092 r10|QWORD = LEA [r11|QWORD - 2] size: QWORD  <||@
  Comment 1609 1094 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1612 1096 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B111 -> B114 falseDestination: B111 -> B113  <||@
  Comment 1618 block B113 null  <||@
  Comment 1618 1102 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1618 1104 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 1622 1106 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 1628 1108 r10|QWORD = LEA [r9|QWORD + 2] size: QWORD  <||@
  Comment 1632 1110 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1635 1112 JUMP ~[] destination: B113 -> B114  <||@
  Comment 1635 block B114 null  <||@
  Comment 1635 1114 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1635 1116 r11|QWORD = DEC r11|QWORD size: QWORD  <||@
  Comment 1638 1118 CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1641 1120 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B114 -> B119 falseDestination: B114 -> B116  <||@
  Comment 1647 block B116 null  <||@
  Comment 1647 1138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1647 1140 MOV (x: [r8|QWORD[.] + r9|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 1652 1154 JUMP ~[] destination: B116 -> B119  <||@
  Comment 1657 block B41 null  <||@
  Comment 1657 430 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1657 432 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 1661 434 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1668 436 JUMP ~[] destination: B41 -> B42  <||@
  Comment 1668 block B42 loop 1 depth 1 header:1015|LoopBegin  <||@
  Comment 1668 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1680 440 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1686 442 r10|QWORD = LEA [r10|QWORD + 16] size: QWORD  <||@
  Comment 1690 444 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1693 446 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B42 -> B44 falseDestination: B42 -> B42  <||@
  Comment 1700 block B24 loop 0 depth 1 header:952|LoopBegin  <||@
  Comment 1700 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1712 298 xmm0|V256_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 1718 300 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1724 302 r11|QWORD = LEA [r11|QWORD + 16] size: QWORD  <||@
  Comment 1728 304 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1731 306 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B24 -> B26 falseDestination: B24 -> B24  <||@
  Comment 1738 block B17 null  <||@
  Comment 1738 230 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1738 232 stack:64|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 1741 234 stack:60|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1746 236 r13|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1749 240 JUMP ~[] destination: B17 -> B18  <||@
  Comment 1749 block B18 null  <||@
  Comment 1749 242 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1749 238 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1752 244 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 1752 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 1762 246 rdx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1765 248 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1770 250 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 1770 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1775 [stack:28, stack:32]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:32|QWORD[.]  |stack:60|DWORD   <||@
  Comment 1776 252 JUMP ~[] destination: B18 -> B19  <||@
  Comment 1781 block B85 loop 2 depth 1 header:825|LoopBegin  <||@
  Comment 1781 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1792 888 xmm0|V256_WORD = H [r11|QWORD[*] + rcx|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 1798 890 J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1804 892 rcx|QWORD = LEA [rcx|QWORD + 16] size: QWORD  <||@
  Comment 1808 894 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 1811 896 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B85 -> B87 falseDestination: B85 -> B85  <||@
  Comment 1818 block B102 null  <||@
  Comment 1818 1020 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1818 1022 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 1822 1024 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1829 1026 JUMP ~[] destination: B102 -> B103  <||@
  Comment 1829 block B103 loop 3 depth 1 header:889|LoopBegin  <||@
  Comment 1829 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1840 1030 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1846 1032 r9|QWORD = LEA [r9|QWORD + 16] size: QWORD  <||@
  Comment 1850 1034 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1853 1036 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B103 -> B105 falseDestination: B103 -> B103  <||@
  Comment 1860 block B79 null  <||@
  Comment 1860 832 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1860 828 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1863 834 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 1863 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 1873 836 rdx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1876 838 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1881 840 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 1881 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1886 [stack:28, stack:32]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:32|QWORD[.]  |stack:60|DWORD   <||@
  Comment 1887 842 JUMP ~[] destination: B79 -> B80  <||@
  Comment 1892 block B15 null  <||@
  Comment 1892 190 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1892 192 r13|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1895 194 stack:64|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 1898 198 JUMP ~[] destination: B15 -> B18  <||@
  Comment 1903 block B6 null  <||@
  Comment 1903 100 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1903 102 r11|DWORD = MOVE input: int[-61467|0xffffffffffff0fe5]  <||@
  Comment 1909 104 r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1912 106 JUMP ~[] destination: B6 -> B123  <||@
  Comment 1912 block B123 null  <||@
  Comment 1912 1232 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1912 1234 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 1919 1236 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1926 1238 DEOPT info [bci:0]  <||@
  Comment 1926 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1931 [r10:0]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |r10|QWORD[.]  |r14|DWORD   <||@
  Comment 1932 block B5 null  <||@
  Comment 1932 92 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1932 94 r11|DWORD = MOVE input: int[-72731|0xfffffffffffee3e5]  <||@
  Comment 1938 96 r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1941 98 JUMP ~[] destination: B5 -> B123  <||@
  Comment 1943 block B122 null  <||@
  Comment 1943 1222 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1943 1224 r11|DWORD = MOVE input: int[-99867|0xfffffffffffe79e5]  <||@
  Comment 1949 1228 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1954 1230 JUMP ~[] destination: B122 -> B123  <||@
  Comment 1956 block B67 null  <||@
  Comment 1956 700 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1956 702 r11|DWORD = MOVE input: int[-88091|0xfffffffffffea7e5]  <||@
  Comment 1962 704 r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1965 706 JUMP ~[] destination: B67 -> B123  <||@
  Comment 1967 block B8 null  <||@
  Comment 1967 124 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1967 126 r11|DWORD = MOVE input: int[-74771|0xfffffffffffedbed]  <||@
  Comment 1973 128 r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1976 130 JUMP ~[] destination: B8 -> B123  <||@
  Comment 1978 block B66 null  <||@
  Comment 1978 692 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1978 694 r11|DWORD = MOVE input: int[-96539|0xfffffffffffe86e5]  <||@
  Comment 1984 696 r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1987 698 JUMP ~[] destination: B66 -> B123  <||@
  Comment 1989 block B10 null  <||@
  Comment 1989 142 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1989 144 r11|DWORD = MOVE input: int[-75027|0xfffffffffffedaed]  <||@
  Comment 1995 146 r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1998 148 JUMP ~[] destination: B10 -> B123  <||@
  Comment 2000 block B121 null  <||@
  Comment 2000 1212 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2000 1214 r11|DWORD = MOVE input: int[-106779|0xfffffffffffe5ee5]  <||@
  Comment 2006 1218 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2011 1220 JUMP ~[] destination: B121 -> B123  <||@
  Comment 2013 block B71 null  <||@
  Comment 2013 746 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2013 748 r11|DWORD = MOVE input: int[-98579|0xfffffffffffe7eed]  <||@
  Comment 2019 752 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2024 754 JUMP ~[] destination: B71 -> B123  <||@
  Comment 2026 block B61 null  <||@
  Comment 2026 640 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2026 642 r11|DWORD = MOVE input: int[-76315|0xfffffffffffed5e5]  <||@
  Comment 2032 644 r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2035 646 JUMP ~[] destination: B61 -> B123  <||@
  Comment 2037 block B69 null  <||@
  Comment 2037 726 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2037 728 r11|DWORD = MOVE input: int[-98323|0xfffffffffffe7fed]  <||@
  Comment 2043 732 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2048 734 JUMP ~[] destination: B69 -> B123  <||@
  Comment 2053 block B60 null  <||@
  Comment 2053 632 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2053 634 r11|DWORD = MOVE input: int[-85531|0xfffffffffffeb1e5]  <||@
  Comment 2059 636 r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2062 638 JUMP ~[] destination: B60 -> B123  <||@
  Comment 2067 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2067 4  <||@
  Comment 2073 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 2073 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9381[java.lang.AbstractStringBuilder.append(boolean)]"
  method "HotSpotCompilation-9381[java.lang.AbstractStringBuilder.append(boolean)]"
  date 1527005209117
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107bca600 448b560849c1e203493bc20f854fb8c3fe900f1f80000000000f1f800000000089842400c0feff4883ec3848896c24304c8bee4c896c2420448bf2458b5510448954241c468b1cd50c000000458b450c4489442418458d480344894c2414418d5802895c2410418bf8ffc7897c240c418d4004894424084585f60f857a000000418d68058bf5412bf383fe010f8dd2000000453bd80f86d4060000443bd80f86e806000041897d0c49c1e2036643c7444210660041895d0c6641c7447a10610045894d0c6641c7445a106c004189450c6643c7444a10730041896d0c6641c74442106500498bc5488b6c24304883c43885051049ccfcc5f877c38bf0412bf383fe010f8d64020000453bd80f8693060000453bd90f86a006000041897d0c49c1e2036643c7444210740041895d0c6641c7447a10720045894d0c6641c7445a1075004189450c6643c7444a106500498bc5488b6c24304883c4388505a648ccfcc5f877c3418bf3d1e68d76028bd62bd585d20f4cf583fe010f8c31060000baf7ffff7f2bd685d20f8c38060000413bf00f86540600003bf00f8667060000498b5760498b4f7081feffffff000f83180500004489742404448bf641d1e6458d76174183e6f84d63f64d8bee4c03ea4c3be90f878d0500004d896f60410f188416c0000000410f18841600010000410f18841640010000410f1884168001000089720c48c70201000000c74208410000f8448bee892c24458bf3488bc2453bee418bf5410f4ff64863f64883fe010f8c9e000000448b54241c488d50104a8d0cd5100000004c8d56f04d85d249c7c3000000000f8d580400004c8d56f84d3bda0f8f13000000c4a17a6f0459c4a17a7f045a4d8d53084d8bda4c8d56fc4d3bda0f8f13000000c4a1f96e0459c4a1f97e045a4d8d53044d8bda4c8d56fe4d3bda0f8f13000000c4a1796e0459c4a1797e045a4d8d53024d8bda4c8bd649ffca4d3bda0f8f0a000000420fbf0c596642890c5a4963d5483bd60f8f840200008b2c24448b5c24088b7c240c8b5c2410448b4c2414448b4424184c8b6c242048be00e01b1701000000488bd048c1ea0341895510498bd548c1ea094488243241897d0c6642c7444010660041895d0c66c7447810610045894d0c66c74458106c0045895d0c6642c7444810730041896d0c6642c74458106500498bc5488b6c24304883c43885059e46ccfcc5f877c34489742404418bf3d1e68d76028bd62bd085d2448bee440f4ce84183fd010f8c65040000bef7ffff7f412bf585f60f8c3d040000453be80f86ee030000453be90f861e040000498b7760498b57704181fdffffff000f837d030000418bcdd1e18d491783e1f84863c9488be94803ee483bea0f876003000049896f600f188431c00000000f188431000100000f188431400100000f1884318001000044896e0c48c70601000000c74608410000f8458bf3488bc6453bee458bd5450f4fd64d63d24983fa010f8c9e000000448b5c241c4c8d40104e8d1cdd100000004d8d4af04d85c948c7c1000000000f8da40200004d8d4af8493bc90f8f13000000c4c17a6f044bc4c17a7f04484c8d4908498bc94d8d4afc493bc90f8f13000000c4c1f96e044bc4c1f97e04484c8d4904498bc94d8d4afe493bc90f8f13000000c4c1796e044bc4c1797e04484c8d4902498bc94d8bca49ffc9493bc90f8f0a000000450fbf1c4b6645891c484d63dd4d3bda0f8f0c0100008b4c24088b7c240c8b5c2410448b4c2414448b4424184c8b54242049bb00e01b1701000000488bd048c1ea03418952104d8bea49c1ed094788641d0041897a0c6642c7444010740041895a0c66c7447810720045894a0c66c7445810750041894a0c6642c74448106500498bc2488b6c24304883c4388505a944ccfcc5f877c3488d4c7010482bd6488d72f04885f60f8d0301000049c7c200000000488d72f84c3bd60f8f11000000c5f9efc0c4a17a7f0451498d72084c8bd6488d72fc4c3bd60f8f11000000c5f9efc0c4a1f97e0451498d72044c8bd6488d72fe4c3bd60f8f11000000c5f9efc0c4a1797e0451498d72024c8bd648ffca4c3bd20f8ffafcffff6646892451e9f0fcffff4e8d4450104d2bda4d8d53f04d85d20f8d1801000049c7c1000000004d8d53f84d3bca0f8f11000000c5f9efc0c4817a7f04484d8d51084d8bca4d8d53fc4d3bca0f8f11000000c5f9efc0c481f97e04484d8d51044d8bca4d8d53fe4d3bca0f8f11000000c5f9efc0c481797e04484d8d51024d8bca49ffcb4d3bcb0f8f72feffff6647892448e968feffffc5f9efc049c7c200000000660f1f440000660f1f440000c4a17e7f04514d8d52104c3bd67ef1e9d9feffff660f1f440000660f1f440000c4a17e6f0459c4a17e7f045a4d8d5b104d3bda7eebe98efbffff892c244489742404448bee458bf348be080200c007000000418bd5b900000000e8f1c03cff90e927fbffff6666660f1f840000000000c4c17e6f044bc4c17e7f0448488d4910493bc97eebe942fdffffc5f9efc049c7c1000000006666660f1f840000000000c4817e7f04484d8d49104d3bca7ef1e9c5feffff458bf348be080200c007000000418bd5b900000000e882c03cff90e9bcfcffff448bee892c24e966ffffff41bbe50fffff4d8bd545899f9c0200004d89a7a8020000e873c8c3fe9041bbe5e3feff4d8bd5ebe141bbe579feff4c8b542420ebd441bbe5a7feff4d8bd5ebc941bbeddbfeff4d8bd5ebbe41bbe586feff4d8bd5ebb341bbeddafeff4d8bd5eba841bbe55efeff4c8b542420eb9b41bbed7efeff4c8b542420eb8e41bbe5d5feff4d8bd5eb8341bbed7ffeff4c8b542420e973ffffff41bbe5b1feff4d8bd5e965ffffffe808f807ff90e8e2c6c3fe90f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1f760f52 slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 56 10 r14|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 59 12 r10|DWORD[.] = MOV [r13|QWORD[.] + 16] size: DWORD  <||@
  Comment 63 14 stack:36|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 68 16 r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 68 [r10:0, r13:0, stack:28, stack:32]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |r13|QWORD[.]  |r14|DWORD   <||@
  Comment 68 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 76 18 r8|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 80 20 stack:40|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 85 22 r9|DWORD = LEA [r8|DWORD + 3] size: DWORD  <||@
  Comment 89 24 stack:44|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 94 26 rbx|DWORD = LEA [r8|DWORD + 2] size: DWORD  <||@
  Comment 98 28 stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 102 30 rdi|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 107 32 stack:52|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 111 34 rax|DWORD = LEA [r8|DWORD + 4] size: DWORD  <||@
  Comment 115 36 stack:56|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 119 38 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 122 40 BRANCH trueDestinationProbability: 0.6295884659318947 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B62  <||@
  Comment 128 block B1 null  <||@
  Comment 128 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 128 44 rbp|DWORD = LEA [r8|DWORD + 5] size: DWORD  <||@
  Comment 132 46 rsi|DWORD = SUB (x: rbp|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 137 48 CMP rsi|DWORD y: 1 size: DWORD  <||@
  Comment 140 50 BRANCH trueDestinationProbability: 0.953003048985209 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B7  <||@
  Comment 146 block B2 null  <||@
  Comment 146 52 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 146 54 CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 149 56 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6  <||@
  Comment 155 block B3 null  <||@
  Comment 155 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 155 60 CMP (x: r11|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 158 62 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 164 block B4 null  <||@
  Comment 164 64 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 164 66 MOV (x: [r13|QWORD[.] + 12], y: rdi|DWORD) size: DWORD  <||@
  Comment 168 68 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3f307c23 encoding: base: 0 shift: 3  <||@
  Comment 172 70 MOV [r10|QWORD[.] + r8|DWORD * 2 + 16] y: 102 size: WORD  <||@
  Comment 180 72 MOV (x: [r13|QWORD[.] + 12], y: rbx|DWORD) size: DWORD  <||@
  Comment 184 74 MOV [r10|QWORD[.] + rdi|DWORD * 2 + 16] y: 97 size: WORD  <||@
  Comment 192 76 MOV (x: [r13|QWORD[.] + 12], y: r9|DWORD) size: DWORD  <||@
  Comment 196 78 MOV [r10|QWORD[.] + rbx|DWORD * 2 + 16] y: 108 size: WORD  <||@
  Comment 204 80 MOV (x: [r13|QWORD[.] + 12], y: rax|DWORD) size: DWORD  <||@
  Comment 208 82 MOV [r10|QWORD[.] + r9|DWORD * 2 + 16] y: 115 size: WORD  <||@
  Comment 216 84 MOV (x: [r13|QWORD[.] + 12], y: rbp|DWORD) size: DWORD  <||@
  Comment 220 86 MOV [r10|QWORD[.] + rax|DWORD * 2 + 16] y: 101 size: WORD  <||@
  Comment 228 88 rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 231 90 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 240 12  <||@
  Comment 250 block B62 null  <||@
  Comment 250 648 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 250 650 rsi|DWORD = SUB (x: rax|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 255 652 CMP rsi|DWORD y: 1 size: DWORD  <||@
  Comment 258 654 BRANCH trueDestinationProbability: 0.953003048985209 condition: < trueDestination: B62 -> B63 falseDestination: B62 -> B68  <||@
  Comment 264 block B63 null  <||@
  Comment 264 656 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 264 658 CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 267 660 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B63 -> B64 falseDestination: B63 -> B67  <||@
  Comment 273 block B64 null  <||@
  Comment 273 662 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 273 664 CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 276 666 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B64 -> B65 falseDestination: B64 -> B66  <||@
  Comment 282 block B65 null  <||@
  Comment 282 668 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 282 670 MOV (x: [r13|QWORD[.] + 12], y: rdi|DWORD) size: DWORD  <||@
  Comment 286 672 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3f307c23 encoding: base: 0 shift: 3  <||@
  Comment 290 674 MOV [r10|QWORD[.] + r8|DWORD * 2 + 16] y: 116 size: WORD  <||@
  Comment 298 676 MOV (x: [r13|QWORD[.] + 12], y: rbx|DWORD) size: DWORD  <||@
  Comment 302 678 MOV [r10|QWORD[.] + rdi|DWORD * 2 + 16] y: 114 size: WORD  <||@
  Comment 310 680 MOV (x: [r13|QWORD[.] + 12], y: r9|DWORD) size: DWORD  <||@
  Comment 314 682 MOV [r10|QWORD[.] + rbx|DWORD * 2 + 16] y: 117 size: WORD  <||@
  Comment 322 684 MOV (x: [r13|QWORD[.] + 12], y: rax|DWORD) size: DWORD  <||@
  Comment 326 686 MOV [r10|QWORD[.] + r9|DWORD * 2 + 16] y: 101 size: WORD  <||@
  Comment 334 688 rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 337 690 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 346 12  <||@
  Comment 356 block B7 null  <||@
  Comment 356 108 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 356 110 rsi|DWORD = SHL r11|DWORD size: DWORD  <||@
  Comment 361 112 rsi|DWORD = LEA [rsi|DWORD + 2] size: DWORD  <||@
  Comment 364 114 rdx|DWORD = SUB (x: rsi|DWORD, ~y: rbp|DWORD) size: DWORD  <||@
  Comment 368 116 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 370 118 rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: rbp|DWORD) condition: <  <||@
  Comment 373 120 CMP rsi|DWORD y: 1 size: DWORD  <||@
  Comment 376 122 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9  <||@
  Comment 382 block B9 null  <||@
  Comment 382 132 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 382 134 rdx|DWORD = MOVE input: int[2147483639|0x7ffffff7]  <||@
  Comment 387 136 rdx|DWORD = SUB (x: rdx|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 389 138 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 391 140 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11  <||@
  Comment 397 block B11 null  <||@
  Comment 397 150 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 397 152 CMP (x: rsi|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 400 154 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B61  <||@
  Comment 406 block B12 null  <||@
  Comment 406 156 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 406 158 CMP (x: rsi|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 408 160 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B60  <||@
  Comment 414 block B13 null  <||@
  Comment 414 162 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 414 164 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 418 166 rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 422 168 CMP rsi|DWORD y: 16777215 size: DWORD  <||@
  Comment 428 170 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B17  <||@
  Comment 434 block B14 null  <||@
  Comment 434 172 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 434 174 stack:60|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 439 176 r14|DWORD = SHL rsi|DWORD size: DWORD  <||@
  Comment 445 178 r14|DWORD = LEA [r14|DWORD + 23] size: DWORD  <||@
  Comment 449 180 r14|DWORD = AND r14|DWORD y: -8 size: DWORD  <||@
  Comment 453 182 r14|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 456 184 r13|QWORD = ADD (x: r14|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 462 186 CMP (x: r13|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 465 188 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16  <||@
  Comment 471 block B16 null  <||@
  Comment 471 200 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 471 202 MOV (x: [r15|QWORD + 96], y: r13|QWORD) size: QWORD  <||@
  Comment 475 204 AMD64PREFETCH ~[r14|QWORD + rdx|QWORD * 1 + 192] instr: 0  <||@
  Comment 484 206 AMD64PREFETCH ~[r14|QWORD + rdx|QWORD * 1 + 256] instr: 0  <||@
  Comment 493 208 AMD64PREFETCH ~[r14|QWORD + rdx|QWORD * 1 + 320] instr: 0  <||@
  Comment 502 210 AMD64PREFETCH ~[r14|QWORD + rdx|QWORD * 1 + 384] instr: 0  <||@
  Comment 511 212 MOV (x: [rdx|QWORD + 12], y: rsi|DWORD) size: DWORD  <||@
  Comment 514 214 MOV [rdx|QWORD] y: 1 size: QWORD  <||@
  Comment 521 216 MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 521 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 528 218 rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 528 220 r13|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 531 222 stack:64|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 534 224 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 537 226 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 540 228 JUMP ~[] destination: B16 -> B19  <||@
  Comment 540 block B19 null  <||@
  Comment 540 254 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 540 256 CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 543 258 rsi|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r14|DWORD) condition: >  <||@
  Comment 550 260 rsi|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 553 262 CMP rsi|QWORD y: 1 size: QWORD  <||@
  Comment 557 264 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B19 -> B38 falseDestination: B19 -> B21  <||@
  Comment 563 block B21 null  <||@
  Comment 563 270 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 563 272 r10|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD  <||@
  Comment 568 274 rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 572 276 rcx|QWORD[*] = LEA [r10|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 580 278 r10|QWORD = LEA [rsi|QWORD - 16] size: QWORD  <||@
  Comment 584 280 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 587 286 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 594 282 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B21 -> B26 falseDestination: B21 -> B24  <||@
  Comment 600 block B26 null  <||@
  Comment 600 312 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 600 314 r10|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 604 316 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 607 318 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B29 falseDestination: B26 -> B28  <||@
  Comment 613 block B28 null  <||@
  Comment 613 324 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 613 326 xmm0|V128_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 619 328 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 625 330 r10|QWORD = LEA [r11|QWORD + 8] size: QWORD  <||@
  Comment 629 332 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 632 334 JUMP ~[] destination: B28 -> B29  <||@
  Comment 632 block B29 null  <||@
  Comment 632 336 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 632 338 r10|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 636 340 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 639 342 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B29 -> B32 falseDestination: B29 -> B31  <||@
  Comment 645 block B31 null  <||@
  Comment 645 348 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 645 350 xmm0|V64_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 651 352 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 657 354 r10|QWORD = LEA [r11|QWORD + 4] size: QWORD  <||@
  Comment 661 356 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 664 358 JUMP ~[] destination: B31 -> B32  <||@
  Comment 664 block B32 null  <||@
  Comment 664 360 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 664 362 r10|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 668 364 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 671 366 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B32 -> B35 falseDestination: B32 -> B34  <||@
  Comment 677 block B34 null  <||@
  Comment 677 372 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 677 374 xmm0|V32_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 683 376 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 689 378 r10|QWORD = LEA [r11|QWORD + 2] size: QWORD  <||@
  Comment 693 380 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 696 382 JUMP ~[] destination: B34 -> B35  <||@
  Comment 696 block B35 null  <||@
  Comment 696 384 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 696 386 r10|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 702 388 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 705 390 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B35 -> B38 falseDestination: B35 -> B37  <||@
  Comment 711 block B37 null  <||@
  Comment 711 396 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 711 398 rcx|DWORD = MOVSX [rcx|QWORD[*] + r11|QWORD * 2] size: DWORD  <||@
  Comment 716 400 MOV (x: [rdx|QWORD[.] + r11|QWORD * 2], y: rcx|DWORD) size: WORD  <||@
  Comment 721 402 JUMP ~[] destination: B37 -> B38  <||@
  Comment 721 block B38 null  <||@
  Comment 721 404 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 721 406 rdx|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 724 408 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 727 410 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B58  <||@
  Comment 733 block B58 null  <||@
  Comment 733 592 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 733 576 rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 736 578 r11|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 741 580 rdi|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 745 582 rbx|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 749 584 r9|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 754 586 r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 759 588 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 764 594 rsi|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 774 596 rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@3f307c23 encoding: base: 0 shift: 3  <||@
  Comment 781 598 MOV (x: [r13|QWORD[.] + 16], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 785 600 rdx|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD  <||@
  Comment 792 602 MOVB (x: [rdx|QWORD[*] + rsi|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 796 604 MOV (x: [r13|QWORD[.] + 12], y: rdi|DWORD) size: DWORD  <||@
  Comment 800 606 MOV [rax|QWORD[.] + r8|DWORD * 2 + 16] y: 102 size: WORD  <||@
  Comment 808 608 MOV (x: [r13|QWORD[.] + 12], y: rbx|DWORD) size: DWORD  <||@
  Comment 812 610 MOV [rax|QWORD[.] + rdi|DWORD * 2 + 16] y: 97 size: WORD  <||@
  Comment 819 612 MOV (x: [r13|QWORD[.] + 12], y: r9|DWORD) size: DWORD  <||@
  Comment 823 614 MOV [rax|QWORD[.] + rbx|DWORD * 2 + 16] y: 108 size: WORD  <||@
  Comment 830 616 MOV (x: [r13|QWORD[.] + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 834 618 MOV [rax|QWORD[.] + r9|DWORD * 2 + 16] y: 115 size: WORD  <||@
  Comment 842 620 MOV (x: [r13|QWORD[.] + 12], y: rbp|DWORD) size: DWORD  <||@
  Comment 846 622 MOV [rax|QWORD[.] + r11|DWORD * 2 + 16] y: 101 size: WORD  <||@
  Comment 854 624 rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 857 626 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 866 12  <||@
  Comment 876 block B68 null  <||@
  Comment 876 708 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 876 710 stack:60|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 881 712 rsi|DWORD = SHL r11|DWORD size: DWORD  <||@
  Comment 886 714 rsi|DWORD = LEA [rsi|DWORD + 2] size: DWORD  <||@
  Comment 889 716 rdx|DWORD = SUB (x: rsi|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 893 718 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 895 720 r13|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: rax|DWORD) condition: <  <||@
  Comment 902 722 CMP r13|DWORD y: 1 size: DWORD  <||@
  Comment 906 724 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B68 -> B69 falseDestination: B68 -> B70  <||@
  Comment 912 block B70 null  <||@
  Comment 912 736 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 912 738 rsi|DWORD = MOVE input: int[2147483639|0x7ffffff7]  <||@
  Comment 917 740 rsi|DWORD = SUB (x: rsi|DWORD, ~y: r13|DWORD) size: DWORD  <||@
  Comment 920 742 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 922 744 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B70 -> B71 falseDestination: B70 -> B72  <||@
  Comment 928 block B72 null  <||@
  Comment 928 756 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 928 758 CMP (x: r13|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 931 760 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B72 -> B73 falseDestination: B72 -> B122  <||@
  Comment 937 block B73 null  <||@
  Comment 937 762 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 937 764 CMP (x: r13|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 940 766 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B121  <||@
  Comment 946 block B74 null  <||@
  Comment 946 768 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 946 770 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 950 772 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 954 774 CMP r13|DWORD y: 16777215 size: DWORD  <||@
  Comment 961 776 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B74 -> B75 falseDestination: B74 -> B79  <||@
  Comment 967 block B75 null  <||@
  Comment 967 778 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 967 780 rcx|DWORD = SHL r13|DWORD size: DWORD  <||@
  Comment 972 782 rcx|DWORD = LEA [rcx|DWORD + 23] size: DWORD  <||@
  Comment 975 784 rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD  <||@
  Comment 978 786 rcx|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 981 788 rbp|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 987 790 CMP (x: rbp|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 990 792 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B75 -> B79 falseDestination: B75 -> B77  <||@
  Comment 996 block B77 null  <||@
  Comment 996 800 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 996 802 MOV (x: [r15|QWORD + 96], y: rbp|QWORD) size: QWORD  <||@
  Comment 1000 804 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 192] instr: 0  <||@
  Comment 1008 806 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 1016 808 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 1024 810 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 1032 812 MOV (x: [rsi|QWORD + 12], y: r13|DWORD) size: DWORD  <||@
  Comment 1036 814 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 1043 816 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 1043 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 1050 818 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1050 820 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1053 822 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1056 824 JUMP ~[] destination: B77 -> B80  <||@
  Comment 1056 block B80 null  <||@
  Comment 1056 844 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1056 846 CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 1059 848 r10|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r14|DWORD) condition: >  <||@
  Comment 1066 850 r10|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 1069 852 CMP r10|QWORD y: 1 size: QWORD  <||@
  Comment 1073 854 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B80 -> B99 falseDestination: B80 -> B82  <||@
  Comment 1079 block B82 null  <||@
  Comment 1079 860 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1079 862 r11|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD  <||@
  Comment 1084 864 r8|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 1088 866 r11|QWORD[*] = LEA [r11|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 1096 868 r9|QWORD = LEA [r10|QWORD - 16] size: QWORD  <||@
  Comment 1100 870 TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 1103 876 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1110 872 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B82 -> B87 falseDestination: B82 -> B85  <||@
  Comment 1116 block B87 null  <||@
  Comment 1116 902 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1116 904 r9|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 1120 906 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 1123 908 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B87 -> B90 falseDestination: B87 -> B89  <||@
  Comment 1129 block B89 null  <||@
  Comment 1129 914 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1129 916 xmm0|V128_WORD = H [r11|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 1135 918 J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 1141 920 r9|QWORD = LEA [rcx|QWORD + 8] size: QWORD  <||@
  Comment 1145 922 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 1148 924 JUMP ~[] destination: B89 -> B90  <||@
  Comment 1148 block B90 null  <||@
  Comment 1148 926 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1148 928 r9|QWORD = LEA [r10|QWORD - 4] size: QWORD  <||@
  Comment 1152 930 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 1155 932 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B90 -> B93 falseDestination: B90 -> B92  <||@
  Comment 1161 block B92 null  <||@
  Comment 1161 938 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1161 940 xmm0|V64_WORD = H [r11|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 1167 942 J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 1173 944 r9|QWORD = LEA [rcx|QWORD + 4] size: QWORD  <||@
  Comment 1177 946 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 1180 948 JUMP ~[] destination: B92 -> B93  <||@
  Comment 1180 block B93 null  <||@
  Comment 1180 950 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1180 952 r9|QWORD = LEA [r10|QWORD - 2] size: QWORD  <||@
  Comment 1184 954 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 1187 956 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B93 -> B96 falseDestination: B93 -> B95  <||@
  Comment 1193 block B95 null  <||@
  Comment 1193 962 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1193 964 xmm0|V32_WORD = H [r11|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 1199 966 J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 1205 968 r9|QWORD = LEA [rcx|QWORD + 2] size: QWORD  <||@
  Comment 1209 970 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 1212 972 JUMP ~[] destination: B95 -> B96  <||@
  Comment 1212 block B96 null  <||@
  Comment 1212 974 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1212 976 r9|QWORD = DEC r10|QWORD size: QWORD  <||@
  Comment 1218 978 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 1221 980 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B96 -> B99 falseDestination: B96 -> B98  <||@
  Comment 1227 block B98 null  <||@
  Comment 1227 986 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1227 988 r11|DWORD = MOVSX [r11|QWORD[*] + rcx|QWORD * 2] size: DWORD  <||@
  Comment 1232 990 MOV (x: [r8|QWORD[.] + rcx|QWORD * 2], y: r11|DWORD) size: WORD  <||@
  Comment 1237 992 JUMP ~[] destination: B98 -> B99  <||@
  Comment 1237 block B99 null  <||@
  Comment 1237 994 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1237 996 r11|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 1240 998 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1243 1000 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B99 -> B100 falseDestination: B99 -> B119  <||@
  Comment 1249 block B119 null  <||@
  Comment 1249 1176 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1249 1162 rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 1253 1164 rdi|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1257 1166 rbx|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1261 1168 r9|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1266 1170 r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1271 1172 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1276 1178 r11|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1286 1180 rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@3f307c23 encoding: base: 0 shift: 3  <||@
  Comment 1293 1182 MOV (x: [r10|QWORD[.] + 16], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 1297 1184 r13|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1304 1186 MOVB (x: [r13|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1309 1188 MOV (x: [r10|QWORD[.] + 12], y: rdi|DWORD) size: DWORD  <||@
  Comment 1313 1190 MOV [rax|QWORD[.] + r8|DWORD * 2 + 16] y: 116 size: WORD  <||@
  Comment 1321 1192 MOV (x: [r10|QWORD[.] + 12], y: rbx|DWORD) size: DWORD  <||@
  Comment 1325 1194 MOV [rax|QWORD[.] + rdi|DWORD * 2 + 16] y: 114 size: WORD  <||@
  Comment 1332 1196 MOV (x: [r10|QWORD[.] + 12], y: r9|DWORD) size: DWORD  <||@
  Comment 1336 1198 MOV [rax|QWORD[.] + rbx|DWORD * 2 + 16] y: 117 size: WORD  <||@
  Comment 1343 1200 MOV (x: [r10|QWORD[.] + 12], y: rcx|DWORD) size: DWORD  <||@
  Comment 1347 1202 MOV [rax|QWORD[.] + r9|DWORD * 2 + 16] y: 101 size: WORD  <||@
  Comment 1355 1204 rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1358 1206 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1367 12  <||@
  Comment 1377 block B39 null  <||@
  Comment 1377 412 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1377 414 rcx|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 1382 416 rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD  <||@
  Comment 1385 418 rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD  <||@
  Comment 1389 420 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1392 422 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41  <||@
  Comment 1398 block B40 null  <||@
  Comment 1398 424 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1398 426 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1405 428 JUMP ~[] destination: B40 -> B44  <||@
  Comment 1405 block B44 null  <||@
  Comment 1405 452 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1405 454 rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 1409 456 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1412 458 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B47 falseDestination: B44 -> B46  <||@
  Comment 1418 block B46 null  <||@
  Comment 1418 464 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1418 466 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 1422 468 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 1428 470 rsi|QWORD = LEA [r10|QWORD + 8] size: QWORD  <||@
  Comment 1432 472 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1435 474 JUMP ~[] destination: B46 -> B47  <||@
  Comment 1435 block B47 null  <||@
  Comment 1435 476 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1435 478 rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD  <||@
  Comment 1439 480 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1442 482 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B50 falseDestination: B47 -> B49  <||@
  Comment 1448 block B49 null  <||@
  Comment 1448 488 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1448 490 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 1452 492 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 1458 494 rsi|QWORD = LEA [r10|QWORD + 4] size: QWORD  <||@
  Comment 1462 496 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1465 498 JUMP ~[] destination: B49 -> B50  <||@
  Comment 1465 block B50 null  <||@
  Comment 1465 500 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1465 502 rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD  <||@
  Comment 1469 504 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1472 506 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B50 -> B53 falseDestination: B50 -> B52  <||@
  Comment 1478 block B52 null  <||@
  Comment 1478 512 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1478 514 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 1482 516 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 1488 518 rsi|QWORD = LEA [r10|QWORD + 2] size: QWORD  <||@
  Comment 1492 520 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1495 522 JUMP ~[] destination: B52 -> B53  <||@
  Comment 1495 block B53 null  <||@
  Comment 1495 524 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1495 526 rdx|QWORD = DEC rdx|QWORD size: QWORD  <||@
  Comment 1498 528 CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1501 530 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B53 -> B58 falseDestination: B53 -> B55  <||@
  Comment 1507 block B55 null  <||@
  Comment 1507 550 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1507 552 MOV (x: [rcx|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 1512 568 JUMP ~[] destination: B55 -> B58  <||@
  Comment 1517 block B100 null  <||@
  Comment 1517 1002 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1517 1004 r8|QWORD[.] = LEA [rax|QWORD[.] + r10|QWORD * 2 + 16] size: QWORD  <||@
  Comment 1522 1006 r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD  <||@
  Comment 1525 1008 r10|QWORD = LEA [r11|QWORD - 16] size: QWORD  <||@
  Comment 1529 1010 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1532 1012 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B100 -> B101 falseDestination: B100 -> B102  <||@
  Comment 1538 block B101 null  <||@
  Comment 1538 1014 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1538 1016 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1545 1018 JUMP ~[] destination: B101 -> B105  <||@
  Comment 1545 block B105 null  <||@
  Comment 1545 1042 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1545 1044 r10|QWORD = LEA [r11|QWORD - 8] size: QWORD  <||@
  Comment 1549 1046 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1552 1048 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B105 -> B108 falseDestination: B105 -> B107  <||@
  Comment 1558 block B107 null  <||@
  Comment 1558 1054 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1558 1056 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 1562 1058 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 1568 1060 r10|QWORD = LEA [r9|QWORD + 8] size: QWORD  <||@
  Comment 1572 1062 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1575 1064 JUMP ~[] destination: B107 -> B108  <||@
  Comment 1575 block B108 null  <||@
  Comment 1575 1066 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1575 1068 r10|QWORD = LEA [r11|QWORD - 4] size: QWORD  <||@
  Comment 1579 1070 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1582 1072 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B108 -> B111 falseDestination: B108 -> B110  <||@
  Comment 1588 block B110 null  <||@
  Comment 1588 1078 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1588 1080 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 1592 1082 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 1598 1084 r10|QWORD = LEA [r9|QWORD + 4] size: QWORD  <||@
  Comment 1602 1086 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1605 1088 JUMP ~[] destination: B110 -> B111  <||@
  Comment 1605 block B111 null  <||@
  Comment 1605 1090 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1605 1092 r10|QWORD = LEA [r11|QWORD - 2] size: QWORD  <||@
  Comment 1609 1094 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1612 1096 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B111 -> B114 falseDestination: B111 -> B113  <||@
  Comment 1618 block B113 null  <||@
  Comment 1618 1102 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1618 1104 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 1622 1106 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 1628 1108 r10|QWORD = LEA [r9|QWORD + 2] size: QWORD  <||@
  Comment 1632 1110 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1635 1112 JUMP ~[] destination: B113 -> B114  <||@
  Comment 1635 block B114 null  <||@
  Comment 1635 1114 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1635 1116 r11|QWORD = DEC r11|QWORD size: QWORD  <||@
  Comment 1638 1118 CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1641 1120 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B114 -> B119 falseDestination: B114 -> B116  <||@
  Comment 1647 block B116 null  <||@
  Comment 1647 1138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1647 1140 MOV (x: [r8|QWORD[.] + r9|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 1652 1154 JUMP ~[] destination: B116 -> B119  <||@
  Comment 1657 block B41 null  <||@
  Comment 1657 430 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1657 432 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 1661 434 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1668 436 JUMP ~[] destination: B41 -> B42  <||@
  Comment 1668 block B42 loop 1 depth 1 header:1015|LoopBegin  <||@
  Comment 1668 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1680 440 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1686 442 r10|QWORD = LEA [r10|QWORD + 16] size: QWORD  <||@
  Comment 1690 444 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1693 446 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B42 -> B44 falseDestination: B42 -> B42  <||@
  Comment 1700 block B24 loop 0 depth 1 header:952|LoopBegin  <||@
  Comment 1700 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1712 298 xmm0|V256_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 1718 300 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1724 302 r11|QWORD = LEA [r11|QWORD + 16] size: QWORD  <||@
  Comment 1728 304 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1731 306 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B24 -> B26 falseDestination: B24 -> B24  <||@
  Comment 1738 block B17 null  <||@
  Comment 1738 230 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1738 232 stack:64|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 1741 234 stack:60|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1746 236 r13|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1749 240 JUMP ~[] destination: B17 -> B18  <||@
  Comment 1749 block B18 null  <||@
  Comment 1749 242 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1749 238 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1752 244 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 1752 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 1762 246 rdx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1765 248 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1770 250 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 1770 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1775 [stack:28, stack:32]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:32|QWORD[.]  |stack:60|DWORD   <||@
  Comment 1776 252 JUMP ~[] destination: B18 -> B19  <||@
  Comment 1781 block B85 loop 2 depth 1 header:825|LoopBegin  <||@
  Comment 1781 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1792 888 xmm0|V256_WORD = H [r11|QWORD[*] + rcx|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 1798 890 J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1804 892 rcx|QWORD = LEA [rcx|QWORD + 16] size: QWORD  <||@
  Comment 1808 894 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 1811 896 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B85 -> B87 falseDestination: B85 -> B85  <||@
  Comment 1818 block B102 null  <||@
  Comment 1818 1020 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1818 1022 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 1822 1024 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1829 1026 JUMP ~[] destination: B102 -> B103  <||@
  Comment 1829 block B103 loop 3 depth 1 header:889|LoopBegin  <||@
  Comment 1829 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1840 1030 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1846 1032 r9|QWORD = LEA [r9|QWORD + 16] size: QWORD  <||@
  Comment 1850 1034 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1853 1036 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B103 -> B105 falseDestination: B103 -> B103  <||@
  Comment 1860 block B79 null  <||@
  Comment 1860 832 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1860 828 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1863 834 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 1863 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 1873 836 rdx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1876 838 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1881 840 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 1881 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1886 [stack:28, stack:32]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:32|QWORD[.]  |stack:60|DWORD   <||@
  Comment 1887 842 JUMP ~[] destination: B79 -> B80  <||@
  Comment 1892 block B15 null  <||@
  Comment 1892 190 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1892 192 r13|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1895 194 stack:64|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 1898 198 JUMP ~[] destination: B15 -> B18  <||@
  Comment 1903 block B6 null  <||@
  Comment 1903 100 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1903 102 r11|DWORD = MOVE input: int[-61467|0xffffffffffff0fe5]  <||@
  Comment 1909 104 r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1912 106 JUMP ~[] destination: B6 -> B123  <||@
  Comment 1912 block B123 null  <||@
  Comment 1912 1232 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1912 1234 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 1919 1236 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1926 1238 DEOPT info [bci:0]  <||@
  Comment 1926 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1931 [r10:0]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |r10|QWORD[.]  |r14|DWORD   <||@
  Comment 1932 block B5 null  <||@
  Comment 1932 92 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1932 94 r11|DWORD = MOVE input: int[-72731|0xfffffffffffee3e5]  <||@
  Comment 1938 96 r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1941 98 JUMP ~[] destination: B5 -> B123  <||@
  Comment 1943 block B122 null  <||@
  Comment 1943 1222 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1943 1224 r11|DWORD = MOVE input: int[-99867|0xfffffffffffe79e5]  <||@
  Comment 1949 1228 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1954 1230 JUMP ~[] destination: B122 -> B123  <||@
  Comment 1956 block B67 null  <||@
  Comment 1956 700 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1956 702 r11|DWORD = MOVE input: int[-88091|0xfffffffffffea7e5]  <||@
  Comment 1962 704 r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1965 706 JUMP ~[] destination: B67 -> B123  <||@
  Comment 1967 block B8 null  <||@
  Comment 1967 124 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1967 126 r11|DWORD = MOVE input: int[-74771|0xfffffffffffedbed]  <||@
  Comment 1973 128 r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1976 130 JUMP ~[] destination: B8 -> B123  <||@
  Comment 1978 block B66 null  <||@
  Comment 1978 692 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1978 694 r11|DWORD = MOVE input: int[-96539|0xfffffffffffe86e5]  <||@
  Comment 1984 696 r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1987 698 JUMP ~[] destination: B66 -> B123  <||@
  Comment 1989 block B10 null  <||@
  Comment 1989 142 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1989 144 r11|DWORD = MOVE input: int[-75027|0xfffffffffffedaed]  <||@
  Comment 1995 146 r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1998 148 JUMP ~[] destination: B10 -> B123  <||@
  Comment 2000 block B121 null  <||@
  Comment 2000 1212 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2000 1214 r11|DWORD = MOVE input: int[-106779|0xfffffffffffe5ee5]  <||@
  Comment 2006 1218 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2011 1220 JUMP ~[] destination: B121 -> B123  <||@
  Comment 2013 block B71 null  <||@
  Comment 2013 746 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2013 748 r11|DWORD = MOVE input: int[-98579|0xfffffffffffe7eed]  <||@
  Comment 2019 752 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2024 754 JUMP ~[] destination: B71 -> B123  <||@
  Comment 2026 block B61 null  <||@
  Comment 2026 640 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2026 642 r11|DWORD = MOVE input: int[-76315|0xfffffffffffed5e5]  <||@
  Comment 2032 644 r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2035 646 JUMP ~[] destination: B61 -> B123  <||@
  Comment 2037 block B69 null  <||@
  Comment 2037 726 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2037 728 r11|DWORD = MOVE input: int[-98323|0xfffffffffffe7fed]  <||@
  Comment 2043 732 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2048 734 JUMP ~[] destination: B69 -> B123  <||@
  Comment 2053 block B60 null  <||@
  Comment 2053 632 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2053 634 r11|DWORD = MOVE input: int[-85531|0xfffffffffffeb1e5]  <||@
  Comment 2059 636 r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2062 638 JUMP ~[] destination: B60 -> B123  <||@
  Comment 2067 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2067 4  <||@
  Comment 2073 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 2073 5  <||@
  HexCodeFile>>> <|@
end_nmethod
