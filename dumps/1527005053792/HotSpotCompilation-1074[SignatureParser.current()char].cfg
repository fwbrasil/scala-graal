begin_compilation
  name " HotSpotCompilation-1074[sun.reflect.generics.parser.SignatureParser.current()]"
  method "HotSpotCompilation-1074[sun.reflect.generics.parser.SignatureParser.current()]"
  date 1527005186413
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a53 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a53  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lsun/reflect/generics/parser/SignatureParser;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v57 v58 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a53 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a53 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SignatureParser.input
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.current(SignatureParser.java:95) [bci: 27]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v57 
=== Succesors ===
next: i54 
=== Usages ===
a12 v59 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v57 #next: i54  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<SignatureParser.current()>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: SignatureParser.java
sourceLine: 93
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - 
=== Succesors ===
=== Usages ===
v50 i54 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 -  <|@  <|@
f <@~|@floating>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a53 
=== Succesors ===
=== Usages ===
i54 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a53  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i54 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.current(SignatureParser.java:95) [bci: 34]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v59 
=== Succesors ===
next: i55 
=== Usages ===
v21 
=== Predecessor ===
a53 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v59 #next: i55  <|@  <|@
f <@~|@floating>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i55 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i55 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SignatureParser.index
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.current(SignatureParser.java:95) [bci: 31]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v58 
=== Succesors ===
next: v43 
=== Usages ===
v60 v21 
=== Predecessor ===
i54 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v58 #next: v43  <|@  <|@
f <@~|@floating>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.current(SignatureParser.java:95) [bci: 34]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i55 
y: i54 
=== Succesors ===
=== Usages ===
v43 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i55 y: i54  <|@  <|@
f <@*|@fixed>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.current(SignatureParser.java:95) [bci: 34]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v21 
=== Succesors ===
trueSuccessor: v40 
falseSuccessor: v42 
=== Usages ===
=== Predecessor ===
i55 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v21 #trueSuccessor: v40 #falseSuccessor: v42  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.current(SignatureParser.java:95) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: i56 
=== Usages ===
i56 
=== Predecessor ===
v43 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i56  <|@  <|@
f <@~|@floating>@ <|@
tid a12 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.current(SignatureParser.java:95) [bci: 27]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a53 
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a53  <|@  <|@
f <@~|@floating>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a12 
index: i55 
=== Succesors ===
=== Usages ===
i56 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a12 index: i55  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i56 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.current(SignatureParser.java:95) [bci: 34]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v40 
address: v60 
=== Succesors ===
next: v8 
=== Usages ===
i30 
=== Predecessor ===
v40 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v40 address: v60 #next: v8  <|@  <|@
f <@~|@floating>@ <|@
tid i30 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.current(SignatureParser.java:95) [bci: 34]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i56 
=== Succesors ===
=== Usages ===
v8 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i56  <|@  <|@
f <@*|@fixed>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.current(SignatureParser.java:95) [bci: 35]
stamp: void
=== Inputs ===
result: i30 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i56 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i30 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.current(SignatureParser.java:95) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v50 
=== Usages ===
=== Predecessor ===
v43 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v50  <|@  <|@
f <@~|@floating>@ <|@
tid a47 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v50 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i52 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -5659
stableDimension: 0
stamp: i32 [-5659] ⇊00000000ffffe9e5 ⇈00000000ffffe9e5
stampKind: i32
value: int[-5659|0xffffffffffffe9e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v50 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i52 
speculation: a47 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v42 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i52 speculation: a47  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a53 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a53  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lsun/reflect/generics/parser/SignatureParser;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v57 v58 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v57 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a53 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a53 <|@
result v1|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SignatureParser.input
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.current(SignatureParser.java:95) [bci: 27]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v57 
=== Succesors ===
next: i54 
=== Usages ===
a12 v59 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v57 #next: i54  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<SignatureParser.current()>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: SignatureParser.java
sourceLine: 93
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - 
=== Succesors ===
=== Usages ===
v50 i54 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 -  <|@  <|@
f <@~|@floating>@ <|@
tid v59 <|@
result [v1|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a53 
=== Succesors ===
=== Usages ===
i54 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a53  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i54 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.current(SignatureParser.java:95) [bci: 34]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v59 
=== Succesors ===
next: i55 
=== Usages ===
v21 
=== Predecessor ===
a53 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v59 #next: i55  <|@  <|@
f <@~|@floating>@ <|@
tid v58 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i55 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i55 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SignatureParser.index
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.current(SignatureParser.java:95) [bci: 31]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v58 
=== Succesors ===
next: v43 
=== Usages ===
v60 v21 
=== Predecessor ===
i54 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v58 #next: v43  <|@  <|@
f <@~|@floating>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.current(SignatureParser.java:95) [bci: 34]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i55 
y: i54 
=== Succesors ===
=== Usages ===
v43 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i55 y: i54  <|@  <|@
f <@*|@fixed>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.current(SignatureParser.java:95) [bci: 34]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v21 
=== Succesors ===
trueSuccessor: v40 
falseSuccessor: v42 
=== Usages ===
=== Predecessor ===
i55 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v21 #trueSuccessor: v40 #falseSuccessor: v42  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4039fc87 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.reflect.generics.parser.SignatureParser.current(SignatureParser.java:93) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.current(SignatureParser.java:95) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: i56 
=== Usages ===
i56 
=== Predecessor ===
v43 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i56  <|@  <|@
f <@~|@floating>@ <|@
tid a12 <|@
result v4|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.current(SignatureParser.java:95) [bci: 27]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a53 
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a53  <|@  <|@
f <@~|@floating>@ <|@
tid v60 <|@
result [v4|QWORD[.] + v3|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a12 
index: i55 
=== Succesors ===
=== Usages ===
i56 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a12 index: i55  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i56 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.current(SignatureParser.java:95) [bci: 34]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v40 
address: v60 
=== Succesors ===
next: v8 
=== Usages ===
i30 
=== Predecessor ===
v40 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v40 address: v60 #next: v8  <|@  <|@
f <@~|@floating>@ <|@
tid i30 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.current(SignatureParser.java:95) [bci: 34]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i56 
=== Succesors ===
=== Usages ===
v8 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i56  <|@  <|@
f <@*|@fixed>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.current(SignatureParser.java:95) [bci: 35]
stamp: void
=== Inputs ===
result: i30 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i56 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i30 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1c8498d3 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVZX [v4|QWORD[.] + v3|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.current(SignatureParser.java:95) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v50 
=== Usages ===
=== Predecessor ===
v43 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v50  <|@  <|@
f <@~|@floating>@ <|@
tid a47 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v50 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i52 <|@
result int[-5659|0xffffffffffffe9e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -5659
stableDimension: 0
stamp: i32 [-5659] ⇊00000000ffffe9e5 ⇈00000000ffffe9e5
stampKind: i32
value: int[-5659|0xffffffffffffe9e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v50 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i52 
speculation: a47 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v42 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i52 speculation: a47  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -5659 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.reflect.generics.parser.SignatureParser.current(SignatureParser.java:93) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4039fc87 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.reflect.generics.parser.SignatureParser.current(SignatureParser.java:93) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1c8498d3 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVZX [v4|QWORD[.] + v3|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -5659 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.reflect.generics.parser.SignatureParser.current(SignatureParser.java:93) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #2          // $assertionsDisabled:boolean
     3: ifne          26
     6: aload_0       
     7: getfield      #1          // index:int
    10: aload_0       
    11: getfield      #3          // input:char[]
    14: arraylength   
    15: if_icmple     26
    18: new           #6          // java.lang.AssertionError
    21: dup           
    22: invokespecial #4          // java.lang.AssertionError.<init>:()void
    25: athrow        
    26: aload_0       
    27: getfield      #3          // input:char[]
    30: aload_0       
    31: getfield      #1          // index:int
    34: caload        
    35: ireturn       
    36: astore_1      
    37: bipush        58
    39: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4039fc87 slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
sun.reflect.generics.parser.SignatureParser.current(SignatureParser.java:93) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   14  <|@ instruction CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1c8498d3 encoding: base: 0 shift: 3 <|@ <|@
      nr   22  <|@ instruction rax|DWORD = MOVZX [rax|QWORD[.] + r11|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction MOV [r15|QWORD + 668] y: -5659 size: DWORD <|@ <|@
      nr   32  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   34  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
sun.reflect.generics.parser.SignatureParser.current(SignatureParser.java:93) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #2          // $assertionsDisabled:boolean
     3: ifne          26
     6: aload_0       
     7: getfield      #1          // index:int
    10: aload_0       
    11: getfield      #3          // input:char[]
    14: arraylength   
    15: if_icmple     26
    18: new           #6          // java.lang.AssertionError
    21: dup           
    22: invokespecial #4          // java.lang.AssertionError.<init>:()void
    25: athrow        
    26: aload_0       
    27: getfield      #3          // input:char[]
    30: aload_0       
    31: getfield      #1          // index:int
    34: caload        
    35: ireturn       
    36: astore_1      
    37: bipush        58
    39: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4039fc87 slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
sun.reflect.generics.parser.SignatureParser.current(SignatureParser.java:93) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   14  <|@ instruction CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1c8498d3 encoding: base: 0 shift: 3 <|@ <|@
      nr   22  <|@ instruction rax|DWORD = MOVZX [rax|QWORD[.] + r11|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction MOV [r15|QWORD + 668] y: -5659 size: DWORD <|@ <|@
      nr   32  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   34  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
sun.reflect.generics.parser.SignatureParser.current(SignatureParser.java:93) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #2          // $assertionsDisabled:boolean
     3: ifne          26
     6: aload_0       
     7: getfield      #1          // index:int
    10: aload_0       
    11: getfield      #3          // input:char[]
    14: arraylength   
    15: if_icmple     26
    18: new           #6          // java.lang.AssertionError
    21: dup           
    22: invokespecial #4          // java.lang.AssertionError.<init>:()void
    25: athrow        
    26: aload_0       
    27: getfield      #3          // input:char[]
    30: aload_0       
    31: getfield      #1          // index:int
    34: caload        
    35: ireturn       
    36: astore_1      
    37: bipush        58
    39: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24108b4610448b14c50c000000448b5e0c453bd30f861d00000048c1e003420fb7445810488b6c24104883c418850500000000c5f877c341c7879c020000e5e9ffff4d89a7a8020000e80000000090e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4039fc87 slotKind: QWORD  <||@
  Comment 48 8 rax|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 51 10 r10|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 51 [rax:0, rsi:0]at sun.reflect.generics.parser.SignatureParser.current(SignatureParser.java:93) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 51 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 59 12 r11|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 63 14 CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 66 16 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 72 block B1 null  <||@
  Comment 72 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 72 20 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1c8498d3 encoding: base: 0 shift: 3  <||@
  Comment 76 22 rax|DWORD = MOVZX [rax|QWORD[.] + r11|DWORD * 2 + 16] size: DWORD  <||@
  Comment 82 26 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 91 12  <||@
  Comment 101 block B2 null  <||@
  Comment 101 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 101 30 MOV [r15|QWORD + 668] y: -5659 size: DWORD  <||@
  Comment 112 32 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 119 34 DEOPT info [bci:0]  <||@
  Comment 119 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 124 [rsi:0]at sun.reflect.generics.parser.SignatureParser.current(SignatureParser.java:93) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 125 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 125 4  <||@
  Comment 131 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 131 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-1074[sun.reflect.generics.parser.SignatureParser.current()]"
  method "HotSpotCompilation-1074[sun.reflect.generics.parser.SignatureParser.current()]"
  date 1527005186441
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107aff660 448b560849c1e203493bc20f85ef67d0fe900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24108b4610448b14c50c000000448b5e0c453bd30f861d00000048c1e003420fb7445810488b6c24104883c418850545f9d8fcc5f877c341c7879c020000e5e9ffff4d89a7a8020000e8227fd0fe90e83eaf14ff90e8187ed0fe90f4f4f4f4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4039fc87 slotKind: QWORD  <||@
  Comment 48 8 rax|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 51 10 r10|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 51 [rax:0, rsi:0]at sun.reflect.generics.parser.SignatureParser.current(SignatureParser.java:93) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 51 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 59 12 r11|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 63 14 CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 66 16 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 72 block B1 null  <||@
  Comment 72 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 72 20 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1c8498d3 encoding: base: 0 shift: 3  <||@
  Comment 76 22 rax|DWORD = MOVZX [rax|QWORD[.] + r11|DWORD * 2 + 16] size: DWORD  <||@
  Comment 82 26 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 91 12  <||@
  Comment 101 block B2 null  <||@
  Comment 101 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 101 30 MOV [r15|QWORD + 668] y: -5659 size: DWORD  <||@
  Comment 112 32 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 119 34 DEOPT info [bci:0]  <||@
  Comment 119 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 124 [rsi:0]at sun.reflect.generics.parser.SignatureParser.current(SignatureParser.java:93) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 125 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 125 4  <||@
  Comment 131 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 131 5  <||@
  HexCodeFile>>> <|@
end_nmethod
