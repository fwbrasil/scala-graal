begin_compilation
  name " HotSpotCompilation-9860[java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue$Entry[], ClassValue)]"
  method "HotSpotCompilation-9860[java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue$Entry[], ClassValue)]"
  date 1527005226374
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v365 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v365  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a# [Ljava/lang/ClassValue$Entry;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v358 v365 ?23 ?72 ?101 v355 v357 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a Ljava/lang/ClassValue;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v360 ?23 ?67 ?101 ?72 v356 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<ClassValue$ClassValueMap.probeBackupLocations(ClassValue$Entry[], ClassValue)>
duringCall: false
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: ClassValue.java
sourceLine: 551
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - - - - - 
=== Succesors ===
=== Usages ===
v288 v365 i345 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a1 
=== Succesors ===
next: i345 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a1 #next: i345  <|@  <|@
f <@~|@floating>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i345 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i345 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ClassValue.hashCodeForCache
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:552) [bci: 6]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v356 
=== Succesors ===
next: i346 
=== Usages ===
i9 
=== Predecessor ===
v365 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v356 #next: i346  <|@  <|@
f <@~|@floating>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i346 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i346 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:551) [bci: 1]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v355 
=== Succesors ===
next: v225 
=== Usages ===
i7 v142 v155 
=== Predecessor ===
i345 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v355 #next: v225  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:551) [bci: 3]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i7 i21 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:551) [bci: 3]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i346 
y: i6 
=== Succesors ===
=== Usages ===
i9 ?23 i28 ?101 ?72 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i346 y: i6  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:552) [bci: 10]
stamp: i32
=== Inputs ===
x: i7 
y: i345 
=== Succesors ===
=== Usages ===
v357 i17 ?23 i25 ?101 ?72 v142 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i7 y: i345  <|@  <|@
f <@~|@floating>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:553) [bci: 14]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i9 
y: i346 
=== Succesors ===
=== Usages ===
v225 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i9 y: i346  <|@  <|@
f <@~|@floating>@ <|@
tid a11 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:554) [bci: 19]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v16 v53 v298 v310 v288 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:553) [bci: 14]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v142 
=== Succesors ===
trueSuccessor: v222 
falseSuccessor: v224 
=== Usages ===
=== Predecessor ===
i346 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v142 #trueSuccessor: v222 #falseSuccessor: v224  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:553) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: a347 
=== Usages ===
a347 
=== Predecessor ===
v225 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a347  <|@  <|@
f <@~|@floating>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1 
index: i9 
=== Succesors ===
=== Usages ===
a347 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: i9  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a347 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:553) [bci: 14]
nullCheck: false
stamp: n# Ljava/lang/ClassValue$Entry;
=== Inputs ===
stateBefore: - 
guard: v222 
address: v357 
=== Succesors ===
next: v15 
=== Usages ===
?101 v195 ?72 ?23 
=== Predecessor ===
v222 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v222 address: v357 #next: v15  <|@  <|@
f <@~|@floating>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:554) [bci: 19]
stamp: void
=== Inputs ===
value: a347 
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a347  <|@  <|@
f <@*|@fixed>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:554) [bci: 19]
stamp: void
trueSuccessorProbability: 0.13872865060513517
=== Inputs ===
condition: v195 
=== Succesors ===
trueSuccessor: v13 
falseSuccessor: v14 
=== Usages ===
=== Predecessor ===
a347 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v195 #trueSuccessor: v13 #falseSuccessor: v14  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4594166246683902612
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:555) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v16 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v16  <|@  <|@
f <@*|@fixed>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:555) [bci: 23]
stamp: void
=== Inputs ===
result: a11 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a11 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4605932862201675611
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:558) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v19 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v19  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:551) [bci: 2]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i17 i50 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i17 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:559) [bci: 29]
stamp: i32
=== Inputs ===
x: i9 
y: i5 
=== Succesors ===
=== Usages ===
i22 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i9 y: i5  <|@  <|@
f <@~|@floating>@ <|@
tid i24 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:559) [bci: 35]
rawvalue: 6
stableDimension: 0
stamp: i32 [6] ⇊0000000000000006 ⇈0000000000000006
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
i25 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i25 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:559) [bci: 37]
stamp: i32
=== Inputs ===
x: i9 
y: i24 
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i9 y: i24  <|@  <|@
f <@*|@fixed>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:559) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
v14 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B19" "B16" 
    successors "B5" "B23" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606570078942526261
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i21 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v20 
values: i6 i22 i22 
=== Succesors ===
=== Usages ===
?23 ?101 ?72 v47 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v20 values: i6 i22 i22  <|@  <|@
f <@~|@floating>@ <|@
tid i22 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v20 
values: i17 i50 i50 
=== Succesors ===
=== Usages ===
?23 v26 i28 ?101 i21 i50 i21 ?72 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v20 values: i17 i50 i50  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.0821405121470782
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:559) [bci: 32]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v19 
=== Succesors ===
next: v230 
=== Usages ===
i21 i22 v32 v51 v124 v259 v249 v229 v234 v239 v244 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v19 #next: v230  <|@  <|@
f <@~|@floating>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:559) [bci: 38]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i22 
y: i25 
=== Succesors ===
=== Usages ===
v230 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i22 y: i25  <|@  <|@
f <@*|@fixed>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:559) [bci: 38]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v26 
=== Succesors ===
trueSuccessor: v226 
falseSuccessor: v229 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v26 #trueSuccessor: v226 #falseSuccessor: v229  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B22" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4606570078942526261
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:559) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v235 
=== Usages ===
=== Predecessor ===
v230 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v235  <|@  <|@
f <@~|@floating>@ <|@
tid i28 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:560) [bci: 45]
stamp: i32
=== Inputs ===
x: i7 
y: i22 
=== Succesors ===
=== Usages ===
v358 v155 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i7 y: i22  <|@  <|@
f <@~|@floating>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:560) [bci: 46]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i28 
y: i346 
=== Succesors ===
=== Usages ===
v235 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i28 y: i346  <|@  <|@
f <@*|@fixed>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:560) [bci: 46]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v155 
=== Succesors ===
trueSuccessor: v231 
falseSuccessor: v234 
=== Usages ===
=== Predecessor ===
v226 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v155 #trueSuccessor: v231 #falseSuccessor: v234  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4606570078942526261
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:560) [bci: 46]
stamp: void
=== Inputs ===
=== Succesors ===
next: a348 
=== Usages ===
a348 
=== Predecessor ===
v235 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a348  <|@  <|@
f <@~|@floating>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1 
index: i28 
=== Succesors ===
=== Usages ===
a348 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: i28  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a348 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:560) [bci: 46]
nullCheck: false
stamp: n# Ljava/lang/ClassValue$Entry;
=== Inputs ===
stateBefore: - 
guard: v231 
address: v358 
=== Succesors ===
next: v35 
=== Usages ===
?99 v197 v359 ?119 ?72 ?98 
=== Predecessor ===
v231 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v231 address: v358 #next: v35  <|@  <|@
f <@~|@floating>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:561) [bci: 51]
stamp: void
=== Inputs ===
value: a348 
=== Succesors ===
=== Usages ===
v35 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a348  <|@  <|@
f <@*|@fixed>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:561) [bci: 51]
stamp: void
trueSuccessorProbability: 0.92409441174686
=== Inputs ===
condition: v197 
=== Succesors ===
trueSuccessor: v32 
falseSuccessor: v34 
=== Usages ===
=== Predecessor ===
a348 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v197 #trueSuccessor: v32 #falseSuccessor: v34  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4605932862201675611
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:562) [bci: 54]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v20 
=== Succesors ===
next: v53 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v20 #next: v53  <|@  <|@
f <@*|@fixed>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:580) [bci: 150]
stamp: void
=== Inputs ===
result: a11 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a11 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589762154589970125
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:564) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v240 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v240  <|@  <|@
f <@~|@floating>@ <|@
tid i39 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:564) [bci: 63]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v47 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 136]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i21 
y: i39 
=== Succesors ===
=== Usages ===
v240 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i21 y: i39  <|@  <|@
f <@*|@fixed>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 136]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v47 
=== Succesors ===
trueSuccessor: v236 
falseSuccessor: v239 
=== Usages ===
=== Predecessor ===
v34 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v47 #trueSuccessor: v236 #falseSuccessor: v239  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589762154589970125
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 136]
stamp: void
=== Inputs ===
=== Succesors ===
next: a349 
=== Usages ===
=== Predecessor ===
v240 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a349  <|@  <|@
f <@~|@floating>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a348 
=== Succesors ===
=== Usages ===
a349 a351 v192 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a348  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a349 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Reference.referent
nodeSourcePosition: at java.lang.ref.Reference.get(Reference.java:254) [bci: 1]
at java.lang.ClassValue.match(ClassValue.java:243) [bci: 5]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:564) [bci: 60]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v359 
=== Succesors ===
next: v64 
=== Usages ===
?67 v313 
=== Predecessor ===
v236 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v359 #next: v64  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: Reference.referent
nodeSourcePosition: at java.lang.ref.Reference.get(Reference.java:254) [bci: 1]
at java.lang.ClassValue.match(ClassValue.java:243) [bci: 5]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:564) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v171 
=== Usages ===
=== Predecessor ===
a349 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v171  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: ANY_LOCATION
nodeSourcePosition: at java.lang.ClassValue.match(ClassValue.java:243) [bci: 9]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:564) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: a350 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a350  <|@  <|@
f <@~|@floating>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a350 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a350 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ClassValue.version
nodeSourcePosition: at java.lang.ClassValue.match(ClassValue.java:243) [bci: 9]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:564) [bci: 60]
nullCheck: false
stamp: n# Ljava/lang/ClassValue$Version;
=== Inputs ===
stateBefore: - 
guard: - 
address: v360 
=== Succesors ===
next: v172 
=== Usages ===
?67 v313 
=== Predecessor ===
v171 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v360 #next: v172  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
barriers: 3
location: ANY_LOCATION
nodeSourcePosition: at java.lang.ClassValue.match(ClassValue.java:243) [bci: 9]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:564) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: a351 
=== Usages ===
=== Predecessor ===
a350 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a351  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a351 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Reference.referent
nodeSourcePosition: at java.lang.ref.Reference.get(Reference.java:254) [bci: 1]
at java.lang.ClassValue$Entry.version(ClassValue.java:339) [bci: 1]
at java.lang.ClassValue$Entry.isLive(ClassValue.java:345) [bci: 1]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v359 
=== Succesors ===
next: v265 
=== Usages ===
v363 v177 ?115 v361 v364 
=== Predecessor ===
v172 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v359 #next: v265  <|@  <|@
f <@~|@floating>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$Entry.version(ClassValue.java:339) [bci: 4]
at java.lang.ClassValue$Entry.isLive(ClassValue.java:345) [bci: 1]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
stamp: void
=== Inputs ===
value: a351 
=== Succesors ===
=== Usages ===
v265 v87 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a351  <|@  <|@
f <@*|@fixed>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at java.lang.ClassValue$Entry.version(ClassValue.java:339) [bci: 4]
at java.lang.ClassValue$Entry.isLive(ClassValue.java:345) [bci: 1]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v177 
=== Succesors ===
trueSuccessor: v264 
falseSuccessor: v263 
=== Usages ===
=== Predecessor ===
a351 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v177 #trueSuccessor: v264 #falseSuccessor: v263  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4574806396436571257
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at java.lang.ClassValue$Entry.version(ClassValue.java:339) [bci: 4]
at java.lang.ClassValue$Entry.isLive(ClassValue.java:345) [bci: 1]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: v319 
=== Usages ===
=== Predecessor ===
v265 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v319  <|@  <|@
f <@*|@fixed>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$Entry.version(ClassValue.java:339) [bci: 4]
at java.lang.ClassValue$Entry.isLive(ClassValue.java:345) [bci: 1]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v317 
=== Predecessor ===
v264 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589252381197289605
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at java.lang.ClassValue$Entry.version(ClassValue.java:339) [bci: 4]
at java.lang.ClassValue$Entry.isLive(ClassValue.java:345) [bci: 1]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: v352 
=== Usages ===
=== Predecessor ===
v265 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v352  <|@  <|@
f <@~|@floating>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a351 
=== Succesors ===
=== Usages ===
v352 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a351  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.lang.ClassValue$Entry.version(ClassValue.java:339) [bci: 4]
at java.lang.ClassValue$Entry.isLive(ClassValue.java:345) [bci: 1]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v363 
=== Succesors ===
next: v341 
=== Usages ===
v335 
=== Predecessor ===
v263 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v363 #next: v341  <|@  <|@
f <@~|@floating>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.lang.ClassValue$Entry.version(ClassValue.java:339) [bci: 4]
at java.lang.ClassValue$Entry.isLive(ClassValue.java:345) [bci: 1]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
rawvalue: meta{HotSpotType<Ljava/lang/ClassValue$Version;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/ClassValue$Version;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v335 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.lang.ClassValue$Entry.version(ClassValue.java:339) [bci: 4]
at java.lang.ClassValue$Entry.isLive(ClassValue.java:345) [bci: 1]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v352 
y: v334 
=== Succesors ===
=== Usages ===
v341 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v352 y: v334  <|@  <|@
f <@*|@fixed>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$Entry.version(ClassValue.java:339) [bci: 4]
at java.lang.ClassValue$Entry.isLive(ClassValue.java:345) [bci: 1]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v335 
=== Succesors ===
trueSuccessor: v340 
falseSuccessor: v244 
=== Usages ===
=== Predecessor ===
v352 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v335 #trueSuccessor: v340 #falseSuccessor: v244  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589252381197289605
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$Entry.version(ClassValue.java:339) [bci: 4]
at java.lang.ClassValue$Entry.isLive(ClassValue.java:345) [bci: 1]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: v328 
=== Usages ===
=== Predecessor ===
v341 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v328  <|@  <|@
f <@*|@fixed>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$Entry.version(ClassValue.java:339) [bci: 4]
at java.lang.ClassValue$Entry.isLive(ClassValue.java:345) [bci: 1]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v317 
=== Predecessor ===
v340 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589762154589970125
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$Entry.version(ClassValue.java:339) [bci: 4]
at java.lang.ClassValue$Entry.isLive(ClassValue.java:345) [bci: 1]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v319 v328 
=== Succesors ===
next: v250 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v319 v328 #next: v250  <|@  <|@
tid ?72 <|@
d <@d|@=== Debug Properties ===
bci: 60
code: ResolvedJavaMethodBytecode<ClassValue$ClassValueMap.probeBackupLocations(ClassValue$Entry[], ClassValue)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: ClassValue.java
sourceLine: 564
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i7 i9 a347 i21 i22 a348 
=== Succesors ===
=== Usages ===
?67 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i7 i9 a347 i21 i22 a348  <|@  <|@
tid ?67 <|@
d <@d|@=== Debug Properties ===
bci: 12
code: ResolvedJavaMethodBytecode<ClassValue.match(ClassValue$Entry)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.ClassValue.match(ClassValue.java:243) [bci: 9]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:564) [bci: 60]
rethrowException: false
sourceFile: ClassValue.java
sourceLine: 243
stackSize: 2
=== Inputs ===
outerFrameState: ?72 
values: a2 - a349 a350 
=== Succesors ===
=== Usages ===
v213 v310 v366 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?72 values: a2 - a349 a350  <|@  <|@
f <@~|@floating>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.ClassValue.match(ClassValue.java:243) [bci: 12]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:564) [bci: 60]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a349 
y: a350 
=== Succesors ===
=== Usages ===
v250 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a349 y: a350  <|@  <|@
f <@*|@fixed>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:564) [bci: 63]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v313 
=== Succesors ===
trueSuccessor: v249 
falseSuccessor: v246 
=== Usages ===
=== Predecessor ===
v317 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v313 #trueSuccessor: v249 #falseSuccessor: v246  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:564) [bci: 63]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v20 
=== Succesors ===
next: v310 
=== Usages ===
=== Predecessor ===
v250 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v20 #next: v310  <|@  <|@
f <@~|@floating>@ <|@
tid i307 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -44307
stableDimension: 0
stamp: i32 [-44307] ⇊00000000ffff52ed ⇈00000000ffff52ed
stampKind: i32
value: int[-44307|0xffffffffffff52ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
v310 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v310 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?67 
actionAndReason: i307 
speculation: a11 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v249 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?67 actionAndReason: i307 speculation: a11  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589762154589970125
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:564) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
next: v80 
=== Usages ===
=== Predecessor ===
v250 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v80  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: Reference.referent
nodeSourcePosition: at java.lang.ref.Reference.get(Reference.java:254) [bci: 1]
at java.lang.ClassValue$Entry.version(ClassValue.java:339) [bci: 1]
at java.lang.ClassValue$Entry.isLive(ClassValue.java:345) [bci: 1]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: v87 
=== Usages ===
=== Predecessor ===
v246 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v87  <|@  <|@
f <@~|@floating>@ <|@
tid i50 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:559) [bci: 143]
stamp: i32
=== Inputs ===
x: i22 
y: i5 
=== Succesors ===
=== Usages ===
i22 i22 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i22 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$Entry.isLive(ClassValue.java:346) [bci: 6]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
stamp: void
trueSuccessorProbability: 0.9201051101420105
=== Inputs ===
condition: v177 
=== Succesors ===
trueSuccessor: v85 
falseSuccessor: v86 
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v177 #trueSuccessor: v85 #falseSuccessor: v86  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4589354871699362687
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$Entry.isLive(ClassValue.java:346) [bci: 9]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: v213 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v213  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?67 
=== Succesors ===
next: v124 
=== Usages ===
=== Predecessor ===
v85 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?67 #next: v124  <|@  <|@
f <@*|@fixed>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 1
stamp: void
=== Inputs ===
loopBegin: v20 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v213 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v20  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573166548403401947
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$Entry.isLive(ClassValue.java:347) [bci: 11]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: a353 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a353  <|@  <|@
f <@~|@floating>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a351 
=== Succesors ===
=== Usages ===
a353 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a351  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a353 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ClassValue$Version.classValue
nodeSourcePosition: at java.lang.ClassValue$Version.isLive(ClassValue.java:309) [bci: 1]
at java.lang.ClassValue$Entry.isLive(ClassValue.java:347) [bci: 12]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
nullCheck: false
stamp: n Ljava/lang/ClassValue;
=== Inputs ===
stateBefore: - 
guard: - 
address: v361 
=== Succesors ===
next: v366 
=== Usages ===
v362 v366 
=== Predecessor ===
v86 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v361 #next: v366  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?67 
object: a353 
=== Succesors ===
next: v188 
=== Usages ===
=== Predecessor ===
a353 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?67 object: a353 #next: v188  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: ANY_LOCATION
nodeSourcePosition: at java.lang.ClassValue.version(ClassValue.java:301) [bci: 1]
at java.lang.ClassValue$Version.isLive(ClassValue.java:309) [bci: 4]
at java.lang.ClassValue$Entry.isLive(ClassValue.java:347) [bci: 12]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: a354 
=== Usages ===
=== Predecessor ===
v366 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a354  <|@  <|@
f <@~|@floating>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a353 
=== Succesors ===
=== Usages ===
a354 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a353  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a354 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ClassValue.version
nodeSourcePosition: at java.lang.ClassValue.version(ClassValue.java:301) [bci: 1]
at java.lang.ClassValue$Version.isLive(ClassValue.java:309) [bci: 4]
at java.lang.ClassValue$Entry.isLive(ClassValue.java:347) [bci: 12]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
nullCheck: false
stamp: n# Ljava/lang/ClassValue$Version;
=== Inputs ===
stateBefore: - 
guard: - 
address: v362 
=== Succesors ===
next: v189 
=== Usages ===
?115 v364 
=== Predecessor ===
v188 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v362 #next: v189  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
barriers: 3
location: ANY_LOCATION
nodeSourcePosition: at java.lang.ClassValue.version(ClassValue.java:301) [bci: 1]
at java.lang.ClassValue$Version.isLive(ClassValue.java:309) [bci: 4]
at java.lang.ClassValue$Entry.isLive(ClassValue.java:347) [bci: 12]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: v260 
=== Usages ===
=== Predecessor ===
a354 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v260  <|@  <|@
f <@~|@floating>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.ClassValue$Version.isLive(ClassValue.java:309) [bci: 8]
at java.lang.ClassValue$Entry.isLive(ClassValue.java:347) [bci: 12]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a351 
y: a354 
=== Succesors ===
=== Usages ===
v260 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a351 y: a354  <|@  <|@
tid ?101 <|@
d <@d|@=== Debug Properties ===
bci: 128
code: ResolvedJavaMethodBytecode<ClassValue$ClassValueMap.probeBackupLocations(ClassValue$Entry[], ClassValue)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: ClassValue.java
sourceLine: 578
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i7 i9 a347 i21 i22 - 
=== Succesors ===
=== Usages ===
?119 ?98 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i7 i9 a347 i21 i22 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$Entry.isLive(ClassValue.java:347) [bci: 15]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v364 
=== Succesors ===
trueSuccessor: v259 
falseSuccessor: v256 
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v364 #trueSuccessor: v259 #falseSuccessor: v256  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$Entry.isLive(ClassValue.java:347) [bci: 15]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v20 
=== Succesors ===
next: v257 
=== Usages ===
=== Predecessor ===
v260 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v20 #next: v257  <|@  <|@
tid ?119 <|@
d <@d|@=== Debug Properties ===
bci: 12
code: ResolvedJavaMethodBytecode<ClassValue$Entry.isLive()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ClassValue.java
sourceLine: 347
stackSize: 0
=== Inputs ===
outerFrameState: ?101 
values: a348 - 
=== Succesors ===
=== Usages ===
?115 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?101 values: a348 -  <|@  <|@
tid ?115 <|@
d <@d|@=== Debug Properties ===
bci: 7
code: ResolvedJavaMethodBytecode<ClassValue$Version.isLive()>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.lang.ClassValue.version(ClassValue.java:301) [bci: 1]
at java.lang.ClassValue$Version.isLive(ClassValue.java:309) [bci: 4]
at java.lang.ClassValue$Entry.isLive(ClassValue.java:347) [bci: 12]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
rethrowException: false
sourceFile: ClassValue.java
sourceLine: 309
stackSize: 1
=== Inputs ===
outerFrameState: ?119 
values: a351 a354 
=== Succesors ===
=== Usages ===
v257 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?119 values: a351 a354  <|@  <|@
f <@*|@fixed>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 190
nodeSourcePosition: at java.lang.ClassValue$Entry.isLive(ClassValue.java:347) [bci: 15]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?115 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v259 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?115  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4573166548403401947
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v256 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$Entry.isLive(ClassValue.java:347) [bci: 15]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: v192 
=== Usages ===
=== Predecessor ===
v260 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v192  <|@  <|@
f <@~|@floating>@ <|@
tid a199 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ref.Reference.clear(Reference.java:265) [bci: 2]
at java.lang.ClassValue$Entry.isLive(ClassValue.java:348) [bci: 21]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: Reference.referent
nodeSourcePosition: at java.lang.ref.Reference.clear(Reference.java:265) [bci: 2]
at java.lang.ClassValue$Entry.isLive(ClassValue.java:348) [bci: 21]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v359 
value: a199 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v212 
=== Usages ===
=== Predecessor ===
v256 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v359 value: a199 stateAfter: - lastLocationAccess: - #next: v212  <|@  <|@
tid ?98 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<ClassValue$Entry.isLive()>
duringCall: true
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.ref.Reference.clear(Reference.java:265) [bci: 2]
at java.lang.ClassValue$Entry.isLive(ClassValue.java:348) [bci: 21]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
rethrowException: false
sourceFile: ClassValue.java
sourceLine: 348
stackSize: 0
=== Inputs ===
outerFrameState: ?101 
values: a348 - 
=== Succesors ===
=== Usages ===
?99 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?101 values: a348 -  <|@  <|@
tid ?99 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Reference.clear()>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.lang.ref.Reference.clear(Reference.java:265) [bci: 2]
at java.lang.ClassValue$Entry.isLive(ClassValue.java:348) [bci: 21]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
rethrowException: false
sourceFile: Reference.java
sourceLine: 266
stackSize: 0
=== Inputs ===
outerFrameState: ?98 
values: a348 
=== Succesors ===
=== Usages ===
v212 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?98 values: a348  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?99 
=== Succesors ===
next: v51 
=== Usages ===
=== Predecessor ===
v192 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?99 #next: v51  <|@  <|@
f <@*|@fixed>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:559) [bci: 32]
stamp: void
=== Inputs ===
loopBegin: v20 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v212 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v20  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$Entry.version(ClassValue.java:339) [bci: 4]
at java.lang.ClassValue$Entry.isLive(ClassValue.java:345) [bci: 1]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v20 
=== Succesors ===
next: v303 
=== Usages ===
=== Predecessor ===
v341 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v20 #next: v303  <|@  <|@
f <@~|@floating>@ <|@
tid i304 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -45859
stableDimension: 0
stamp: i32 [-45859] ⇊00000000ffff4cdd ⇈00000000ffff4cdd
stampKind: i32
value: int[-45859|0xffffffffffff4cdd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i296 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v293 
=== Predecessor ===
v244 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 136]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v20 
=== Succesors ===
next: v301 
=== Usages ===
=== Predecessor ===
v240 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v20 #next: v301  <|@  <|@
f <@~|@floating>@ <|@
tid i302 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -54035
stableDimension: 0
stamp: i32 [-54035] ⇊00000000ffff2ced ⇈00000000ffff2ced
stampKind: i32
value: int[-54035|0xffffffffffff2ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i296 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v293 
=== Predecessor ===
v239 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:560) [bci: 46]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v20 
=== Succesors ===
next: v299 
=== Usages ===
=== Predecessor ===
v235 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v20 #next: v299  <|@  <|@
f <@~|@floating>@ <|@
tid i300 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -39963
stableDimension: 0
stamp: i32 [-39963] ⇊00000000ffff63e5 ⇈00000000ffff63e5
stampKind: i32
value: int[-39963|0xffffffffffff63e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i296 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v293 
=== Predecessor ===
v234 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:559) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v20 
=== Succesors ===
next: v294 
=== Usages ===
=== Predecessor ===
v230 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v20 #next: v294  <|@  <|@
f <@~|@floating>@ <|@
tid i295 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -39187
stableDimension: 0
stamp: i32 [-39187] ⇊00000000ffff66ed ⇈00000000ffff66ed
stampKind: i32
value: int[-39187|0xffffffffffff66ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i296 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v293 
=== Predecessor ===
v229 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" "B21" "B20" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i296 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-54035 - -39187] ⇊00000000ffff00c5 ⇈00000000ffff6ffd
valueDescription: i32
=== Inputs ===
merge: v293 
values: i295 i300 i302 i304 
=== Succesors ===
=== Usages ===
v298 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v293 values: i295 i300 i302 i304  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v293 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v294 v299 v301 v303 
=== Succesors ===
next: v298 
=== Usages ===
i296 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v294 v299 v301 v303 #next: v298  <|@  <|@
tid ?23 <|@
d <@d|@=== Debug Properties ===
bci: 32
code: ResolvedJavaMethodBytecode<ClassValue$ClassValueMap.probeBackupLocations(ClassValue$Entry[], ClassValue)>
duringCall: false
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: ClassValue.java
sourceLine: 559
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i7 i9 a347 i21 i22 - 
=== Succesors ===
=== Usages ===
v298 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i7 i9 a347 i21 i22 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?23 
actionAndReason: i296 
speculation: a11 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v293 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?23 actionAndReason: i296 speculation: a11  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:553) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v288 
=== Usages ===
=== Predecessor ===
v225 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v288  <|@  <|@
f <@~|@floating>@ <|@
tid i292 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -36635
stableDimension: 0
stamp: i32 [-36635] ⇊00000000ffff70e5 ⇈00000000ffff70e5
stampKind: i32
value: int[-36635|0xffffffffffff70e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v288 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i292 
speculation: a11 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v224 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i292 speculation: a11  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v365 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v365  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a# [Ljava/lang/ClassValue$Entry;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v358 v365 ?23 ?72 ?101 v355 v357 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a Ljava/lang/ClassValue;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v360 ?23 ?67 ?101 ?72 v356 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<ClassValue$ClassValueMap.probeBackupLocations(ClassValue$Entry[], ClassValue)>
duringCall: false
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: ClassValue.java
sourceLine: 551
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - - - - - 
=== Succesors ===
=== Usages ===
v288 v365 i345 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a1 
=== Succesors ===
next: i345 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a1 #next: i345  <|@  <|@
f <@~|@floating>@ <|@
tid v356 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i345 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i345 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ClassValue.hashCodeForCache
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:552) [bci: 6]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v356 
=== Succesors ===
next: i346 
=== Usages ===
i9 
=== Predecessor ===
v365 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v356 #next: i346  <|@  <|@
f <@~|@floating>@ <|@
tid v355 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i346 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i346 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:551) [bci: 1]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v355 
=== Succesors ===
next: v225 
=== Usages ===
i7 v142 v155 
=== Predecessor ===
i345 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v355 #next: v225  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:551) [bci: 3]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i7 i21 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:551) [bci: 3]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i346 
y: i6 
=== Succesors ===
=== Usages ===
i9 ?23 i28 ?101 ?72 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i346 y: i6  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:552) [bci: 10]
stamp: i32
=== Inputs ===
x: i7 
y: i345 
=== Succesors ===
=== Usages ===
v357 i17 ?23 i25 ?101 ?72 v142 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i7 y: i345  <|@  <|@
f <@~|@floating>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:553) [bci: 14]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i9 
y: i346 
=== Succesors ===
=== Usages ===
v225 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i9 y: i346  <|@  <|@
f <@~|@floating>@ <|@
tid a11 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:554) [bci: 19]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v16 v53 v298 v310 v288 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:553) [bci: 14]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v142 
=== Succesors ===
trueSuccessor: v222 
falseSuccessor: v224 
=== Usages ===
=== Predecessor ===
i346 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v142 #trueSuccessor: v222 #falseSuccessor: v224  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7410c6f6 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:551) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - 
>@ <|@ instruction NULLCHECK [v0|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:551) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - 
>@ <|@ instruction v2|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = DEC v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = AND (x: v4|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:553) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: a347 
=== Usages ===
a347 
=== Predecessor ===
v225 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a347  <|@  <|@
f <@~|@floating>@ <|@
tid v357 <|@
result [v0|QWORD[.] + v5|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1 
index: i9 
=== Succesors ===
=== Usages ===
a347 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: i9  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a347 <|@
result v6|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:553) [bci: 14]
nullCheck: false
stamp: n# Ljava/lang/ClassValue$Entry;
=== Inputs ===
stateBefore: - 
guard: v222 
address: v357 
=== Succesors ===
next: v15 
=== Usages ===
?101 v195 ?72 ?23 
=== Predecessor ===
v222 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v222 address: v357 #next: v15  <|@  <|@
f <@~|@floating>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:554) [bci: 19]
stamp: void
=== Inputs ===
value: a347 
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a347  <|@  <|@
f <@*|@fixed>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:554) [bci: 19]
stamp: void
trueSuccessorProbability: 0.13872865060513517
=== Inputs ===
condition: v195 
=== Succesors ===
trueSuccessor: v13 
falseSuccessor: v14 
=== Usages ===
=== Predecessor ===
a347 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v195 #trueSuccessor: v13 #falseSuccessor: v14  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[.] = MOV [v0|QWORD[.] + v5|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v6|DWORD[.], y: v6|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13872865060513517 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4594166246683902612
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:555) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v16 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v16  <|@  <|@
f <@*|@fixed>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:555) [bci: 23]
stamp: void
=== Inputs ===
result: a11 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a11 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4605932862201675611
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:558) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v19 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v19  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:551) [bci: 2]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i17 i50 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i17 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:559) [bci: 29]
stamp: i32
=== Inputs ===
x: i9 
y: i5 
=== Succesors ===
=== Usages ===
i22 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i9 y: i5  <|@  <|@
f <@~|@floating>@ <|@
tid i24 <|@
result int[6|0x6] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:559) [bci: 35]
rawvalue: 6
stableDimension: 0
stamp: i32 [6] ⇊0000000000000006 ⇈0000000000000006
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
i25 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i25 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:559) [bci: 37]
stamp: i32
=== Inputs ===
x: i9 
y: i24 
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i9 y: i24  <|@  <|@
f <@*|@fixed>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:559) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
v14 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = INC v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = LEA [v5|DWORD + 6] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-1|0xffffffffffffffff], v7|DWORD] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B19" "B16" 
    successors "B5" "B23" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606570078942526261
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i21 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v20 
values: i6 i22 i22 
=== Succesors ===
=== Usages ===
?23 ?101 ?72 v47 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v20 values: i6 i22 i22  <|@  <|@
f <@~|@floating>@ <|@
tid i22 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v20 
values: i17 i50 i50 
=== Succesors ===
=== Usages ===
?23 v26 i28 ?101 i21 i50 i21 ?72 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v20 values: i17 i50 i50  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.0821405121470782
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:559) [bci: 32]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v19 
=== Succesors ===
next: v230 
=== Usages ===
i21 i22 v32 v51 v124 v259 v249 v229 v234 v239 v244 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v19 #next: v230  <|@  <|@
f <@~|@floating>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:559) [bci: 38]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i22 
y: i25 
=== Succesors ===
=== Usages ===
v230 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i22 y: i25  <|@  <|@
f <@*|@fixed>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:559) [bci: 38]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v26 
=== Succesors ===
trueSuccessor: v226 
falseSuccessor: v229 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v26 #trueSuccessor: v226 #falseSuccessor: v229  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v9|DWORD, v10|DWORD] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v8|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B22" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4606570078942526261
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:559) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v235 
=== Usages ===
=== Predecessor ===
v230 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v235  <|@  <|@
f <@~|@floating>@ <|@
tid i28 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:560) [bci: 45]
stamp: i32
=== Inputs ===
x: i7 
y: i22 
=== Succesors ===
=== Usages ===
v358 v155 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i7 y: i22  <|@  <|@
f <@~|@floating>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:560) [bci: 46]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i28 
y: i346 
=== Succesors ===
=== Usages ===
v235 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i28 y: i346  <|@  <|@
f <@*|@fixed>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:560) [bci: 46]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v155 
=== Succesors ===
trueSuccessor: v231 
falseSuccessor: v234 
=== Usages ===
=== Predecessor ===
v226 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v155 #trueSuccessor: v231 #falseSuccessor: v234  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = AND (x: v4|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4606570078942526261
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:560) [bci: 46]
stamp: void
=== Inputs ===
=== Succesors ===
next: a348 
=== Usages ===
a348 
=== Predecessor ===
v235 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a348  <|@  <|@
f <@~|@floating>@ <|@
tid v358 <|@
result [v0|QWORD[.] + v11|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1 
index: i28 
=== Succesors ===
=== Usages ===
a348 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: i28  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a348 <|@
result v12|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:560) [bci: 46]
nullCheck: false
stamp: n# Ljava/lang/ClassValue$Entry;
=== Inputs ===
stateBefore: - 
guard: v231 
address: v358 
=== Succesors ===
next: v35 
=== Usages ===
?99 v197 v359 ?119 ?72 ?98 
=== Predecessor ===
v231 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v231 address: v358 #next: v35  <|@  <|@
f <@~|@floating>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:561) [bci: 51]
stamp: void
=== Inputs ===
value: a348 
=== Succesors ===
=== Usages ===
v35 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a348  <|@  <|@
f <@*|@fixed>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:561) [bci: 51]
stamp: void
trueSuccessorProbability: 0.92409441174686
=== Inputs ===
condition: v197 
=== Succesors ===
trueSuccessor: v32 
falseSuccessor: v34 
=== Usages ===
=== Predecessor ===
a348 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v197 #trueSuccessor: v32 #falseSuccessor: v34  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[.] = MOV [v0|QWORD[.] + v11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v12|DWORD[.], y: v12|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.92409441174686 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4605932862201675611
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:562) [bci: 54]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v20 
=== Succesors ===
next: v53 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v20 #next: v53  <|@  <|@
f <@*|@fixed>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:580) [bci: 150]
stamp: void
=== Inputs ===
result: a11 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a11 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589762154589970125
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:564) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v240 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v240  <|@  <|@
f <@~|@floating>@ <|@
tid i39 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:564) [bci: 63]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v47 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 136]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i21 
y: i39 
=== Succesors ===
=== Usages ===
v240 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i21 y: i39  <|@  <|@
f <@*|@fixed>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 136]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v47 
=== Succesors ===
trueSuccessor: v236 
falseSuccessor: v239 
=== Usages ===
=== Predecessor ===
v34 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v47 #trueSuccessor: v236 #falseSuccessor: v239  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v9|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589762154589970125
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 136]
stamp: void
=== Inputs ===
=== Succesors ===
next: a349 
=== Usages ===
=== Predecessor ===
v240 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a349  <|@  <|@
f <@~|@floating>@ <|@
tid v359 <|@
result [v12|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a348 
=== Succesors ===
=== Usages ===
a349 a351 v192 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a348  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a349 <|@
result v13|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Reference.referent
nodeSourcePosition: at java.lang.ref.Reference.get(Reference.java:254) [bci: 1]
at java.lang.ClassValue.match(ClassValue.java:243) [bci: 5]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:564) [bci: 60]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v359 
=== Succesors ===
next: v64 
=== Usages ===
?67 v313 
=== Predecessor ===
v236 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v359 #next: v64  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: Reference.referent
nodeSourcePosition: at java.lang.ref.Reference.get(Reference.java:254) [bci: 1]
at java.lang.ClassValue.match(ClassValue.java:243) [bci: 5]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:564) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v171 
=== Usages ===
=== Predecessor ===
a349 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v171  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: ANY_LOCATION
nodeSourcePosition: at java.lang.ClassValue.match(ClassValue.java:243) [bci: 9]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:564) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: a350 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a350  <|@  <|@
f <@~|@floating>@ <|@
tid v360 <|@
result [v1|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a350 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a350 <|@
result v14|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ClassValue.version
nodeSourcePosition: at java.lang.ClassValue.match(ClassValue.java:243) [bci: 9]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:564) [bci: 60]
nullCheck: false
stamp: n# Ljava/lang/ClassValue$Version;
=== Inputs ===
stateBefore: - 
guard: - 
address: v360 
=== Succesors ===
next: v172 
=== Usages ===
?67 v313 
=== Predecessor ===
v171 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v360 #next: v172  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
barriers: 3
location: ANY_LOCATION
nodeSourcePosition: at java.lang.ClassValue.match(ClassValue.java:243) [bci: 9]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:564) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: a351 
=== Usages ===
=== Predecessor ===
a350 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a351  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a351 <|@
result v15|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Reference.referent
nodeSourcePosition: at java.lang.ref.Reference.get(Reference.java:254) [bci: 1]
at java.lang.ClassValue$Entry.version(ClassValue.java:339) [bci: 1]
at java.lang.ClassValue$Entry.isLive(ClassValue.java:345) [bci: 1]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v359 
=== Succesors ===
next: v265 
=== Usages ===
v363 v177 ?115 v361 v364 
=== Predecessor ===
v172 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v359 #next: v265  <|@  <|@
f <@~|@floating>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$Entry.version(ClassValue.java:339) [bci: 4]
at java.lang.ClassValue$Entry.isLive(ClassValue.java:345) [bci: 1]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
stamp: void
=== Inputs ===
value: a351 
=== Succesors ===
=== Usages ===
v265 v87 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a351  <|@  <|@
f <@*|@fixed>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at java.lang.ClassValue$Entry.version(ClassValue.java:339) [bci: 4]
at java.lang.ClassValue$Entry.isLive(ClassValue.java:345) [bci: 1]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v177 
=== Succesors ===
trueSuccessor: v264 
falseSuccessor: v263 
=== Usages ===
=== Predecessor ===
a351 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v177 #trueSuccessor: v264 #falseSuccessor: v263  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[.] = MOV [v12|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[.] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[.] = MOV [v12|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v15|DWORD[.], y: v15|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4574806396436571257
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at java.lang.ClassValue$Entry.version(ClassValue.java:339) [bci: 4]
at java.lang.ClassValue$Entry.isLive(ClassValue.java:345) [bci: 1]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: v319 
=== Usages ===
=== Predecessor ===
v265 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v319  <|@  <|@
f <@*|@fixed>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$Entry.version(ClassValue.java:339) [bci: 4]
at java.lang.ClassValue$Entry.isLive(ClassValue.java:345) [bci: 1]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v317 
=== Predecessor ===
v264 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589252381197289605
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at java.lang.ClassValue$Entry.version(ClassValue.java:339) [bci: 4]
at java.lang.ClassValue$Entry.isLive(ClassValue.java:345) [bci: 1]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: v352 
=== Usages ===
=== Predecessor ===
v265 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v352  <|@  <|@
f <@~|@floating>@ <|@
tid v363 <|@
result [v15|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a351 
=== Succesors ===
=== Usages ===
v352 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a351  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v352 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.lang.ClassValue$Entry.version(ClassValue.java:339) [bci: 4]
at java.lang.ClassValue$Entry.isLive(ClassValue.java:345) [bci: 1]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v363 
=== Succesors ===
next: v341 
=== Usages ===
v335 
=== Predecessor ===
v263 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v363 #next: v341  <|@  <|@
f <@~|@floating>@ <|@
tid v334 <|@
result meta{HotSpotType<Ljava/lang/ClassValue$Version;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.lang.ClassValue$Entry.version(ClassValue.java:339) [bci: 4]
at java.lang.ClassValue$Entry.isLive(ClassValue.java:345) [bci: 1]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
rawvalue: meta{HotSpotType<Ljava/lang/ClassValue$Version;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/ClassValue$Version;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v335 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v335 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.lang.ClassValue$Entry.version(ClassValue.java:339) [bci: 4]
at java.lang.ClassValue$Entry.isLive(ClassValue.java:345) [bci: 1]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v352 
y: v334 
=== Succesors ===
=== Usages ===
v341 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v352 y: v334  <|@  <|@
f <@*|@fixed>@ <|@
tid v341 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$Entry.version(ClassValue.java:339) [bci: 4]
at java.lang.ClassValue$Entry.isLive(ClassValue.java:345) [bci: 1]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v335 
=== Succesors ===
trueSuccessor: v340 
falseSuccessor: v244 
=== Usages ===
=== Predecessor ===
v352 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v335 #trueSuccessor: v340 #falseSuccessor: v244  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v15|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/ClassValue$Version;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589252381197289605
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$Entry.version(ClassValue.java:339) [bci: 4]
at java.lang.ClassValue$Entry.isLive(ClassValue.java:345) [bci: 1]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: v328 
=== Usages ===
=== Predecessor ===
v341 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v328  <|@  <|@
f <@*|@fixed>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$Entry.version(ClassValue.java:339) [bci: 4]
at java.lang.ClassValue$Entry.isLive(ClassValue.java:345) [bci: 1]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v317 
=== Predecessor ===
v340 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589762154589970125
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$Entry.version(ClassValue.java:339) [bci: 4]
at java.lang.ClassValue$Entry.isLive(ClassValue.java:345) [bci: 1]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v319 v328 
=== Succesors ===
next: v250 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v319 v328 #next: v250  <|@  <|@
tid ?72 <|@
d <@d|@=== Debug Properties ===
bci: 60
code: ResolvedJavaMethodBytecode<ClassValue$ClassValueMap.probeBackupLocations(ClassValue$Entry[], ClassValue)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: ClassValue.java
sourceLine: 564
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i7 i9 a347 i21 i22 a348 
=== Succesors ===
=== Usages ===
?67 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i7 i9 a347 i21 i22 a348  <|@  <|@
tid ?67 <|@
d <@d|@=== Debug Properties ===
bci: 12
code: ResolvedJavaMethodBytecode<ClassValue.match(ClassValue$Entry)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.ClassValue.match(ClassValue.java:243) [bci: 9]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:564) [bci: 60]
rethrowException: false
sourceFile: ClassValue.java
sourceLine: 243
stackSize: 2
=== Inputs ===
outerFrameState: ?72 
values: a2 - a349 a350 
=== Succesors ===
=== Usages ===
v213 v310 v366 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?72 values: a2 - a349 a350  <|@  <|@
f <@~|@floating>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.ClassValue.match(ClassValue.java:243) [bci: 12]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:564) [bci: 60]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a349 
y: a350 
=== Succesors ===
=== Usages ===
v250 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a349 y: a350  <|@  <|@
f <@*|@fixed>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:564) [bci: 63]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v313 
=== Succesors ===
trueSuccessor: v249 
falseSuccessor: v246 
=== Usages ===
=== Predecessor ===
v317 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v313 #trueSuccessor: v249 #falseSuccessor: v246  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|DWORD[.], y: v13|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:564) [bci: 63]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v20 
=== Succesors ===
next: v310 
=== Usages ===
=== Predecessor ===
v250 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v20 #next: v310  <|@  <|@
f <@~|@floating>@ <|@
tid i307 <|@
result int[-44307|0xffffffffffff52ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -44307
stableDimension: 0
stamp: i32 [-44307] ⇊00000000ffff52ed ⇈00000000ffff52ed
stampKind: i32
value: int[-44307|0xffffffffffff52ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
v310 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v310 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?67 
actionAndReason: i307 
speculation: a11 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v249 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?67 actionAndReason: i307 speculation: a11  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -44307 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ClassValue.match(ClassValue.java:243) [bci: 12]
stack: v13|DWORD[.] v14|DWORD[.] 
locals: v1|QWORD[.] - 
java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:564) [bci: 60]
locals: v0|QWORD[.] v1|QWORD[.] v4|DWORD v5|DWORD v6|DWORD[.] v9|DWORD v10|DWORD v12|DWORD[.] 
>@ <|@ instruction DEOPT info [bci:12, 60] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589762154589970125
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:564) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
next: v80 
=== Usages ===
=== Predecessor ===
v250 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v80  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: Reference.referent
nodeSourcePosition: at java.lang.ref.Reference.get(Reference.java:254) [bci: 1]
at java.lang.ClassValue$Entry.version(ClassValue.java:339) [bci: 1]
at java.lang.ClassValue$Entry.isLive(ClassValue.java:345) [bci: 1]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: v87 
=== Usages ===
=== Predecessor ===
v246 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v87  <|@  <|@
f <@~|@floating>@ <|@
tid i50 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:559) [bci: 143]
stamp: i32
=== Inputs ===
x: i22 
y: i5 
=== Succesors ===
=== Usages ===
i22 i22 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i22 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$Entry.isLive(ClassValue.java:346) [bci: 6]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
stamp: void
trueSuccessorProbability: 0.9201051101420105
=== Inputs ===
condition: v177 
=== Succesors ===
trueSuccessor: v85 
falseSuccessor: v86 
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v177 #trueSuccessor: v85 #falseSuccessor: v86  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = INC v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v15|DWORD[.], y: v15|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9201051101420105 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4589354871699362687
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$Entry.isLive(ClassValue.java:346) [bci: 9]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: v213 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v213  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?67 
=== Succesors ===
next: v124 
=== Usages ===
=== Predecessor ===
v85 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?67 #next: v124  <|@  <|@
f <@*|@fixed>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 1
stamp: void
=== Inputs ===
loopBegin: v20 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v213 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v20  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ClassValue.match(ClassValue.java:243) [bci: 12]
stack: v13|DWORD[.] v14|DWORD[.] 
locals: v1|QWORD[.] - 
java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:564) [bci: 60]
locals: v0|QWORD[.] v1|QWORD[.] v4|DWORD v5|DWORD v6|DWORD[.] v9|DWORD v10|DWORD v12|DWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:12, 60] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|DWORD, v16|DWORD] destination: B16 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573166548403401947
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$Entry.isLive(ClassValue.java:347) [bci: 11]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: a353 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a353  <|@  <|@
f <@~|@floating>@ <|@
tid v361 <|@
result [v15|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a351 
=== Succesors ===
=== Usages ===
a353 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a351  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a353 <|@
result v17|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ClassValue$Version.classValue
nodeSourcePosition: at java.lang.ClassValue$Version.isLive(ClassValue.java:309) [bci: 1]
at java.lang.ClassValue$Entry.isLive(ClassValue.java:347) [bci: 12]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
nullCheck: false
stamp: n Ljava/lang/ClassValue;
=== Inputs ===
stateBefore: - 
guard: - 
address: v361 
=== Succesors ===
next: v366 
=== Usages ===
v362 v366 
=== Predecessor ===
v86 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v361 #next: v366  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?67 
object: a353 
=== Succesors ===
next: v188 
=== Usages ===
=== Predecessor ===
a353 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?67 object: a353 #next: v188  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: ANY_LOCATION
nodeSourcePosition: at java.lang.ClassValue.version(ClassValue.java:301) [bci: 1]
at java.lang.ClassValue$Version.isLive(ClassValue.java:309) [bci: 4]
at java.lang.ClassValue$Entry.isLive(ClassValue.java:347) [bci: 12]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: a354 
=== Usages ===
=== Predecessor ===
v366 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a354  <|@  <|@
f <@~|@floating>@ <|@
tid v362 <|@
result [v17|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a353 
=== Succesors ===
=== Usages ===
a354 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a353  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a354 <|@
result v18|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ClassValue.version
nodeSourcePosition: at java.lang.ClassValue.version(ClassValue.java:301) [bci: 1]
at java.lang.ClassValue$Version.isLive(ClassValue.java:309) [bci: 4]
at java.lang.ClassValue$Entry.isLive(ClassValue.java:347) [bci: 12]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
nullCheck: false
stamp: n# Ljava/lang/ClassValue$Version;
=== Inputs ===
stateBefore: - 
guard: - 
address: v362 
=== Succesors ===
next: v189 
=== Usages ===
?115 v364 
=== Predecessor ===
v188 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v362 #next: v189  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
barriers: 3
location: ANY_LOCATION
nodeSourcePosition: at java.lang.ClassValue.version(ClassValue.java:301) [bci: 1]
at java.lang.ClassValue$Version.isLive(ClassValue.java:309) [bci: 4]
at java.lang.ClassValue$Entry.isLive(ClassValue.java:347) [bci: 12]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: v260 
=== Usages ===
=== Predecessor ===
a354 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v260  <|@  <|@
f <@~|@floating>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.ClassValue$Version.isLive(ClassValue.java:309) [bci: 8]
at java.lang.ClassValue$Entry.isLive(ClassValue.java:347) [bci: 12]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a351 
y: a354 
=== Succesors ===
=== Usages ===
v260 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a351 y: a354  <|@  <|@
tid ?101 <|@
d <@d|@=== Debug Properties ===
bci: 128
code: ResolvedJavaMethodBytecode<ClassValue$ClassValueMap.probeBackupLocations(ClassValue$Entry[], ClassValue)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: ClassValue.java
sourceLine: 578
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i7 i9 a347 i21 i22 - 
=== Succesors ===
=== Usages ===
?119 ?98 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i7 i9 a347 i21 i22 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$Entry.isLive(ClassValue.java:347) [bci: 15]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v364 
=== Succesors ===
trueSuccessor: v259 
falseSuccessor: v256 
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v364 #trueSuccessor: v259 #falseSuccessor: v256  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD[.] = MOV [v15|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ClassValue.match(ClassValue.java:243) [bci: 12]
stack: v13|DWORD[.] v14|DWORD[.] 
locals: v1|QWORD[.] - 
java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:564) [bci: 60]
locals: v0|QWORD[.] v1|QWORD[.] v4|DWORD v5|DWORD v6|DWORD[.] v9|DWORD v10|DWORD v12|DWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v17|DWORD[.] * 8] state [bci:12, 60] <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[.] = MOV [v17|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v18|DWORD[.], y: v15|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$Entry.isLive(ClassValue.java:347) [bci: 15]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v20 
=== Succesors ===
next: v257 
=== Usages ===
=== Predecessor ===
v260 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v20 #next: v257  <|@  <|@
tid ?119 <|@
d <@d|@=== Debug Properties ===
bci: 12
code: ResolvedJavaMethodBytecode<ClassValue$Entry.isLive()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ClassValue.java
sourceLine: 347
stackSize: 0
=== Inputs ===
outerFrameState: ?101 
values: a348 - 
=== Succesors ===
=== Usages ===
?115 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?101 values: a348 -  <|@  <|@
tid ?115 <|@
d <@d|@=== Debug Properties ===
bci: 7
code: ResolvedJavaMethodBytecode<ClassValue$Version.isLive()>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.lang.ClassValue.version(ClassValue.java:301) [bci: 1]
at java.lang.ClassValue$Version.isLive(ClassValue.java:309) [bci: 4]
at java.lang.ClassValue$Entry.isLive(ClassValue.java:347) [bci: 12]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
rethrowException: false
sourceFile: ClassValue.java
sourceLine: 309
stackSize: 1
=== Inputs ===
outerFrameState: ?119 
values: a351 a354 
=== Succesors ===
=== Usages ===
v257 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?119 values: a351 a354  <|@  <|@
f <@*|@fixed>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 190
nodeSourcePosition: at java.lang.ClassValue$Entry.isLive(ClassValue.java:347) [bci: 15]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?115 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v259 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?115  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -48659 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ClassValue$Version.isLive(ClassValue.java:309) [bci: 7]
stack: v18|DWORD[.] 
locals: v15|DWORD[.] 
java.lang.ClassValue$Entry.isLive(ClassValue.java:347) [bci: 12]
locals: v12|DWORD[.] - 
java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
locals: v0|QWORD[.] v1|QWORD[.] v4|DWORD v5|DWORD v6|DWORD[.] v9|DWORD v10|DWORD - 
>@ <|@ instruction DEOPT info [bci:7, 12, 128] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4573166548403401947
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v256 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$Entry.isLive(ClassValue.java:347) [bci: 15]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: v192 
=== Usages ===
=== Predecessor ===
v260 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v192  <|@  <|@
f <@~|@floating>@ <|@
tid a199 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ref.Reference.clear(Reference.java:265) [bci: 2]
at java.lang.ClassValue$Entry.isLive(ClassValue.java:348) [bci: 21]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: Reference.referent
nodeSourcePosition: at java.lang.ref.Reference.clear(Reference.java:265) [bci: 2]
at java.lang.ClassValue$Entry.isLive(ClassValue.java:348) [bci: 21]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v359 
value: a199 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v212 
=== Usages ===
=== Predecessor ===
v256 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v359 value: a199 stateAfter: - lastLocationAccess: - #next: v212  <|@  <|@
tid ?98 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<ClassValue$Entry.isLive()>
duringCall: true
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.ref.Reference.clear(Reference.java:265) [bci: 2]
at java.lang.ClassValue$Entry.isLive(ClassValue.java:348) [bci: 21]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
rethrowException: false
sourceFile: ClassValue.java
sourceLine: 348
stackSize: 0
=== Inputs ===
outerFrameState: ?101 
values: a348 - 
=== Succesors ===
=== Usages ===
?99 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?101 values: a348 -  <|@  <|@
tid ?99 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Reference.clear()>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.lang.ref.Reference.clear(Reference.java:265) [bci: 2]
at java.lang.ClassValue$Entry.isLive(ClassValue.java:348) [bci: 21]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
rethrowException: false
sourceFile: Reference.java
sourceLine: 266
stackSize: 0
=== Inputs ===
outerFrameState: ?98 
values: a348 
=== Succesors ===
=== Usages ===
v212 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?98 values: a348  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?99 
=== Succesors ===
next: v51 
=== Usages ===
=== Predecessor ===
v192 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?99 #next: v51  <|@  <|@
f <@*|@fixed>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:559) [bci: 32]
stamp: void
=== Inputs ===
loopBegin: v20 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v212 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v20  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|DWORD[.] * 8 + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ref.Reference.clear(Reference.java:266) [bci: 5]
locals: v12|DWORD[.] 
java.lang.ClassValue$Entry.isLive(ClassValue.java:348) [bci: 21]
locals: v12|DWORD[.] - 
java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
locals: v0|QWORD[.] v1|QWORD[.] v4|DWORD v5|DWORD v6|DWORD[.] v9|DWORD v10|DWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:5, 21, 128] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|DWORD, v16|DWORD] destination: B19 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$Entry.version(ClassValue.java:339) [bci: 4]
at java.lang.ClassValue$Entry.isLive(ClassValue.java:345) [bci: 1]
at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v20 
=== Succesors ===
next: v303 
=== Usages ===
=== Predecessor ===
v341 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v20 #next: v303  <|@  <|@
f <@~|@floating>@ <|@
tid i304 <|@
result int[-45859|0xffffffffffff4cdd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -45859
stableDimension: 0
stamp: i32 [-45859] ⇊00000000ffff4cdd ⇈00000000ffff4cdd
stampKind: i32
value: int[-45859|0xffffffffffff4cdd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i296 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v293 
=== Predecessor ===
v244 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-45859|0xffffffffffff4cdd]] destination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 136]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v20 
=== Succesors ===
next: v301 
=== Usages ===
=== Predecessor ===
v240 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v20 #next: v301  <|@  <|@
f <@~|@floating>@ <|@
tid i302 <|@
result int[-54035|0xffffffffffff2ced] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -54035
stableDimension: 0
stamp: i32 [-54035] ⇊00000000ffff2ced ⇈00000000ffff2ced
stampKind: i32
value: int[-54035|0xffffffffffff2ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i296 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v293 
=== Predecessor ===
v239 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-54035|0xffffffffffff2ced]] destination: B21 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:560) [bci: 46]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v20 
=== Succesors ===
next: v299 
=== Usages ===
=== Predecessor ===
v235 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v20 #next: v299  <|@  <|@
f <@~|@floating>@ <|@
tid i300 <|@
result int[-39963|0xffffffffffff63e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -39963
stableDimension: 0
stamp: i32 [-39963] ⇊00000000ffff63e5 ⇈00000000ffff63e5
stampKind: i32
value: int[-39963|0xffffffffffff63e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i296 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v293 
=== Predecessor ===
v234 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-39963|0xffffffffffff63e5]] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:559) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v20 
=== Succesors ===
next: v294 
=== Usages ===
=== Predecessor ===
v230 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v20 #next: v294  <|@  <|@
f <@~|@floating>@ <|@
tid i295 <|@
result int[-39187|0xffffffffffff66ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -39187
stableDimension: 0
stamp: i32 [-39187] ⇊00000000ffff66ed ⇈00000000ffff66ed
stampKind: i32
value: int[-39187|0xffffffffffff66ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i296 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v293 
=== Predecessor ===
v229 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-39187|0xffffffffffff66ed]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" "B21" "B20" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i296 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-54035 - -39187] ⇊00000000ffff00c5 ⇈00000000ffff6ffd
valueDescription: i32
=== Inputs ===
merge: v293 
values: i295 i300 i302 i304 
=== Succesors ===
=== Usages ===
v298 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v293 values: i295 i300 i302 i304  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v293 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v294 v299 v301 v303 
=== Succesors ===
next: v298 
=== Usages ===
i296 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v294 v299 v301 v303 #next: v298  <|@  <|@
tid ?23 <|@
d <@d|@=== Debug Properties ===
bci: 32
code: ResolvedJavaMethodBytecode<ClassValue$ClassValueMap.probeBackupLocations(ClassValue$Entry[], ClassValue)>
duringCall: false
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: ClassValue.java
sourceLine: 559
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i7 i9 a347 i21 i22 - 
=== Succesors ===
=== Usages ===
v298 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i7 i9 a347 i21 i22 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?23 
actionAndReason: i296 
speculation: a11 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v293 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?23 actionAndReason: i296 speculation: a11  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:559) [bci: 32]
locals: v0|QWORD[.] v1|QWORD[.] v4|DWORD v5|DWORD v6|DWORD[.] v9|DWORD v10|DWORD - 
>@ <|@ instruction DEOPT info [bci:32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:553) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v288 
=== Usages ===
=== Predecessor ===
v225 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v288  <|@  <|@
f <@~|@floating>@ <|@
tid i292 <|@
result int[-36635|0xffffffffffff70e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -36635
stableDimension: 0
stamp: i32 [-36635] ⇊00000000ffff70e5 ⇈00000000ffff70e5
stampKind: i32
value: int[-36635|0xffffffffffff70e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v288 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i292 
speculation: a11 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v224 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i292 speculation: a11  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -36635 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:551) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7410c6f6 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:551) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - 
>@ <|@ instruction NULLCHECK [v0|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:551) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - 
>@ <|@ instruction v2|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = DEC v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = AND (x: v4|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[.] = MOV [v0|QWORD[.] + v5|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v6|DWORD[.], y: v6|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13872865060513517 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4605932862201675611
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = INC v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = LEA [v5|DWORD + 6] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-1|0xffffffffffffffff], v7|DWORD] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B19" "B16" 
    successors "B5" "B23" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606570078942526261
    begin_IR
      LIR
      nr   -1  <|@ instruction [v9|DWORD, v10|DWORD] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v8|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B22" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4606570078942526261
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = AND (x: v4|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4606570078942526261
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[.] = MOV [v0|QWORD[.] + v11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v12|DWORD[.], y: v12|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.92409441174686 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589762154589970125
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v9|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589762154589970125
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[.] = MOV [v12|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[.] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[.] = MOV [v12|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v15|DWORD[.], y: v15|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589252381197289605
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v15|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/ClassValue$Version;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589252381197289605
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589762154589970125
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|DWORD[.], y: v13|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589762154589970125
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = INC v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v15|DWORD[.], y: v15|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9201051101420105 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4589354871699362687
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ClassValue.match(ClassValue.java:243) [bci: 12]
stack: v13|DWORD[.] v14|DWORD[.] 
locals: v1|QWORD[.] - 
java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:564) [bci: 60]
locals: v0|QWORD[.] v1|QWORD[.] v4|DWORD v5|DWORD v6|DWORD[.] v9|DWORD v10|DWORD v12|DWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:12, 60] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|DWORD, v16|DWORD] destination: B16 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4574806396436571257
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573166548403401947
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD[.] = MOV [v15|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ClassValue.match(ClassValue.java:243) [bci: 12]
stack: v13|DWORD[.] v14|DWORD[.] 
locals: v1|QWORD[.] - 
java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:564) [bci: 60]
locals: v0|QWORD[.] v1|QWORD[.] v4|DWORD v5|DWORD v6|DWORD[.] v9|DWORD v10|DWORD v12|DWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v17|DWORD[.] * 8] state [bci:12, 60] <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[.] = MOV [v17|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v18|DWORD[.], y: v15|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4573166548403401947
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|DWORD[.] * 8 + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ref.Reference.clear(Reference.java:266) [bci: 5]
locals: v12|DWORD[.] 
java.lang.ClassValue$Entry.isLive(ClassValue.java:348) [bci: 21]
locals: v12|DWORD[.] - 
java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
locals: v0|QWORD[.] v1|QWORD[.] v4|DWORD v5|DWORD v6|DWORD[.] v9|DWORD v10|DWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:5, 21, 128] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|DWORD, v16|DWORD] destination: B19 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4605932862201675611
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4594166246683902612
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-39187|0xffffffffffff66ed]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" "B21" "B20" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:559) [bci: 32]
locals: v0|QWORD[.] v1|QWORD[.] v4|DWORD v5|DWORD v6|DWORD[.] v9|DWORD v10|DWORD - 
>@ <|@ instruction DEOPT info [bci:32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -44307 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ClassValue.match(ClassValue.java:243) [bci: 12]
stack: v13|DWORD[.] v14|DWORD[.] 
locals: v1|QWORD[.] - 
java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:564) [bci: 60]
locals: v0|QWORD[.] v1|QWORD[.] v4|DWORD v5|DWORD v6|DWORD[.] v9|DWORD v10|DWORD v12|DWORD[.] 
>@ <|@ instruction DEOPT info [bci:12, 60] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-54035|0xffffffffffff2ced]] destination: B21 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-45859|0xffffffffffff4cdd]] destination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -48659 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ClassValue$Version.isLive(ClassValue.java:309) [bci: 7]
stack: v18|DWORD[.] 
locals: v15|DWORD[.] 
java.lang.ClassValue$Entry.isLive(ClassValue.java:347) [bci: 12]
locals: v12|DWORD[.] - 
java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
locals: v0|QWORD[.] v1|QWORD[.] v4|DWORD v5|DWORD v6|DWORD[.] v9|DWORD v10|DWORD - 
>@ <|@ instruction DEOPT info [bci:7, 12, 128] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -36635 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:551) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-39963|0xffffffffffff63e5]] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: arraylength   
     2: iconst_1      
     3: isub          
     4: istore_2      
     5: aload_1       
     6: getfield      #21         // java.lang.ClassValue.hashCodeForCache:int
     9: iload_2       
    10: iand          
    11: istore_3      
    12: aload_0       
    13: iload_3       
    14: aaload        
    15: astore        4
    17: aload         4
    19: ifnonnull     24
    22: aconst_null   
    23: areturn       
    24: iconst_m1     
    25: istore        5
    27: iload_3       
    28: iconst_1      
    29: iadd          
    30: istore        6
    32: iload         6
    34: iload_3       
    35: bipush        6
    37: iadd          
    38: if_icmpge     149
    41: aload_0       
    42: iload         6
    44: iload_2       
    45: iand          
    46: aaload        
    47: astore        7
    49: aload         7
    51: ifnonnull     57
    54: goto          149
    57: aload_1       
    58: aload         7
    60: invokevirtual #24         // java.lang.ClassValue.match:(java.lang.ClassValue$Entry)boolean
    63: ifeq          126
    66: aload_0       
    67: iload_3       
    68: aload         7
    70: aastore       
    71: iload         5
    73: iflt          88
    76: aload_0       
    77: iload         6
    79: iload_2       
    80: iand          
    81: getstatic     #25         // java.lang.ClassValue$Entry.DEAD_ENTRY:java.lang.ClassValue$Entry
    84: aastore       
    85: goto          92
    88: iload         6
    90: istore        5
    92: aload_0       
    93: iload         5
    95: iload_2       
    96: iand          
    97: aload_0       
    98: iload         5
   100: aload         4
   102: invokestatic  #26         // entryDislocation:(java.lang.ClassValue$Entry[], int, java.lang.ClassValue$Entry)int
   105: bipush        6
   107: if_icmpge     115
   110: aload         4
   112: goto          118
   115: getstatic     #25         // java.lang.ClassValue$Entry.DEAD_ENTRY:java.lang.ClassValue$Entry
   118: aastore       
   119: aload_1       
   120: aload         7
   122: invokevirtual #23         // java.lang.ClassValue.castEntry:(java.lang.ClassValue$Entry)java.lang.ClassValue$Entry
   125: areturn       
   126: aload         7
   128: invokevirtual #27         // java.lang.ClassValue$Entry.isLive:()boolean
   131: ifne          143
   134: iload         5
   136: ifge          143
   139: iload         6
   141: istore        5
   143: iinc          
   146: goto          32
   149: aconst_null   
   150: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7410c6f6 slotKind: QWORD <|@ <|@
      nr    6  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:551) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - - 
>@ <|@ instruction NULLCHECK [rsi|QWORD[.]] state [bci:0] <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:551) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - - 
>@ <|@ instruction rax|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   12  <|@ instruction r11|DWORD = DEC r10|DWORD size: DWORD <|@ <|@
      nr   14  <|@ instruction r8|DWORD = AND (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   16  <|@ instruction CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction r9|DWORD[.] = MOV [rsi|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   24  <|@ instruction TEST (x: r9|DWORD[.], y: r9|DWORD[.]) size: DWORD <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 0.13872865060513517 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4605932862201675611
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction stack:32|DWORD[.] = MOVE r9|DWORD[.] moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction rax|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction rcx|DWORD = LEA [r8|DWORD + 6] size: DWORD <|@ <|@
      nr   44  <|@ instruction rdi|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   46  <|@ instruction rbx|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   48  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B19" "B16" 
    successors "B5" "B23" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606570078942526261
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr   52  <|@ instruction CMP (x: rcx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B22" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4606570078942526261
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction rax|DWORD = AND (x: r11|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr   60  <|@ instruction CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4606570078942526261
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   68  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr   70  <|@ instruction BRANCH trueDestinationProbability: 0.92409441174686 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589762154589970125
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589762154589970125
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction rbp|DWORD[.] = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   88  <|@ instruction r13|DWORD[.] = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   90  <|@ instruction r14|DWORD[.] = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   92  <|@ instruction TEST (x: r14|DWORD[.], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr   94  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589252381197289605
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  102  <|@ instruction CMP [r14|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/ClassValue$Version;, resolved>;compressed} <|@ <|@
      nr  104  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589252381197289605
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589762154589970125
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  112  <|@ instruction CMP (x: r13|DWORD[.], y: rbp|DWORD[.]) size: DWORD <|@ <|@
      nr  114  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589762154589970125
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  130  <|@ instruction r8|DWORD = INC rdi|DWORD size: DWORD <|@ <|@
      nr  132  <|@ instruction TEST (x: r14|DWORD[.], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr  134  <|@ instruction BRANCH trueDestinationProbability: 0.9201051101420105 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4589354871699362687
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  138  <|@ st <@st|@reference-map: [rax:0, rdx:0, rbp:0, rsi:0, r13:0, stack:0]
live-base-pointers: []
java.lang.ClassValue.match(ClassValue.java:243) [bci: 12]
stack: rbp|DWORD[.] r13|DWORD[.] 
locals: rdx|QWORD[.] - 
java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:564) [bci: 60]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD stack:28|DWORD stack:32|DWORD[.] rbx|DWORD rdi|DWORD rax|DWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:12, 60] <|@ <|@
      nr  140  <|@ instruction rbx|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  142  <|@ instruction rdi|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  144  <|@ instruction JUMP ~[] destination: B16 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4574806396436571257
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   98  <|@ instruction JUMP ~[] destination: B10 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573166548403401947
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  148  <|@ instruction r9|DWORD[.] = MOV [r14|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  150  <|@ st <@st|@reference-map: [rax:0, rdx:0, rbp:0, rsi:0, r9:0, r13:0, r14:0, stack:0]
live-base-pointers: []
java.lang.ClassValue.match(ClassValue.java:243) [bci: 12]
stack: rbp|DWORD[.] r13|DWORD[.] 
locals: rdx|QWORD[.] - 
java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:564) [bci: 60]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD stack:28|DWORD stack:32|DWORD[.] rbx|DWORD rdi|DWORD rax|DWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r9|DWORD[.] * 8] state [bci:12, 60] <|@ <|@
      nr  152  <|@ instruction r9|DWORD[.] = MOV [r9|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  154  <|@ instruction CMP (x: r9|DWORD[.], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr  156  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4573166548403401947
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  168  <|@ instruction MOV (x: [rax|DWORD[.] * 8 + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  170  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, stack:0]
live-base-pointers: []
java.lang.ref.Reference.clear(Reference.java:266) [bci: 5]
locals: rax|DWORD[.] 
java.lang.ClassValue$Entry.isLive(ClassValue.java:348) [bci: 21]
locals: rax|DWORD[.] - 
java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD stack:28|DWORD stack:32|DWORD[.] rbx|DWORD rdi|DWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:5, 21, 128] <|@ <|@
      nr  172  <|@ instruction rbx|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction rdi|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B19 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4605932862201675611
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4594166246683902612
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   32  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  198  <|@ instruction r10|DWORD = MOVE input: int[-39187|0xffffffffffff66ed] <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" "B21" "B20" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  204  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  206  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  208  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:0]
live-base-pointers: []
java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:559) [bci: 32]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD stack:28|DWORD stack:32|DWORD[.] rbx|DWORD rdi|DWORD - 
>@ <|@ instruction DEOPT info [bci:32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction r9|DWORD[.] = MOVE stack:32|DWORD[.] moveKind: DWORD <|@ <|@
      nr  120  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  122  <|@ instruction MOV [r15|QWORD + 668] y: -44307 size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  126  <|@ st <@st|@reference-map: [rax:0, rdx:0, rbp:0, rsi:0, r9:0, r13:0]
live-base-pointers: []
java.lang.ClassValue.match(ClassValue.java:243) [bci: 12]
stack: rbp|DWORD[.] r13|DWORD[.] 
locals: rdx|QWORD[.] - 
java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:564) [bci: 60]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|DWORD r9|DWORD[.] rbx|DWORD rdi|DWORD rax|DWORD[.] 
>@ <|@ instruction DEOPT info [bci:12, 60] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  186  <|@ instruction r10|DWORD = MOVE input: int[-54035|0xffffffffffff2ced] <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B21 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  180  <|@ instruction r10|DWORD = MOVE input: int[-45859|0xffffffffffff4cdd] <|@ <|@
      nr  182  <|@ instruction JUMP ~[] destination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  160  <|@ instruction MOV [r15|QWORD + 668] y: -48659 size: DWORD <|@ <|@
      nr  162  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  164  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, r9:0, r14:0, stack:0]
live-base-pointers: []
java.lang.ClassValue$Version.isLive(ClassValue.java:309) [bci: 7]
stack: r9|DWORD[.] 
locals: r14|DWORD[.] 
java.lang.ClassValue$Entry.isLive(ClassValue.java:347) [bci: 12]
locals: rax|DWORD[.] - 
java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD stack:28|DWORD stack:32|DWORD[.] rbx|DWORD rdi|DWORD - 
>@ <|@ instruction DEOPT info [bci:7, 12, 128] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  212  <|@ instruction MOV [r15|QWORD + 668] y: -36635 size: DWORD <|@ <|@
      nr  214  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  216  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:551) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction r10|DWORD = MOVE input: int[-39963|0xffffffffffff63e5] // MoveResolver resolve mapping <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: arraylength   
     2: iconst_1      
     3: isub          
     4: istore_2      
     5: aload_1       
     6: getfield      #21         // java.lang.ClassValue.hashCodeForCache:int
     9: iload_2       
    10: iand          
    11: istore_3      
    12: aload_0       
    13: iload_3       
    14: aaload        
    15: astore        4
    17: aload         4
    19: ifnonnull     24
    22: aconst_null   
    23: areturn       
    24: iconst_m1     
    25: istore        5
    27: iload_3       
    28: iconst_1      
    29: iadd          
    30: istore        6
    32: iload         6
    34: iload_3       
    35: bipush        6
    37: iadd          
    38: if_icmpge     149
    41: aload_0       
    42: iload         6
    44: iload_2       
    45: iand          
    46: aaload        
    47: astore        7
    49: aload         7
    51: ifnonnull     57
    54: goto          149
    57: aload_1       
    58: aload         7
    60: invokevirtual #24         // java.lang.ClassValue.match:(java.lang.ClassValue$Entry)boolean
    63: ifeq          126
    66: aload_0       
    67: iload_3       
    68: aload         7
    70: aastore       
    71: iload         5
    73: iflt          88
    76: aload_0       
    77: iload         6
    79: iload_2       
    80: iand          
    81: getstatic     #25         // java.lang.ClassValue$Entry.DEAD_ENTRY:java.lang.ClassValue$Entry
    84: aastore       
    85: goto          92
    88: iload         6
    90: istore        5
    92: aload_0       
    93: iload         5
    95: iload_2       
    96: iand          
    97: aload_0       
    98: iload         5
   100: aload         4
   102: invokestatic  #26         // entryDislocation:(java.lang.ClassValue$Entry[], int, java.lang.ClassValue$Entry)int
   105: bipush        6
   107: if_icmpge     115
   110: aload         4
   112: goto          118
   115: getstatic     #25         // java.lang.ClassValue$Entry.DEAD_ENTRY:java.lang.ClassValue$Entry
   118: aastore       
   119: aload_1       
   120: aload         7
   122: invokevirtual #23         // java.lang.ClassValue.castEntry:(java.lang.ClassValue$Entry)java.lang.ClassValue$Entry
   125: areturn       
   126: aload         7
   128: invokevirtual #27         // java.lang.ClassValue$Entry.isLive:()boolean
   131: ifne          143
   134: iload         5
   136: ifge          143
   139: iload         6
   141: istore        5
   143: iinc          
   146: goto          32
   149: aconst_null   
   150: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7410c6f6 slotKind: QWORD <|@ <|@
      nr    6  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:551) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - - 
>@ <|@ instruction NULLCHECK [rsi|QWORD[.]] state [bci:0] <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:551) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - - 
>@ <|@ instruction rax|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   12  <|@ instruction r11|DWORD = DEC r10|DWORD size: DWORD <|@ <|@
      nr   14  <|@ instruction r8|DWORD = AND (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   16  <|@ instruction CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction r9|DWORD[.] = MOV [rsi|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   24  <|@ instruction TEST (x: r9|DWORD[.], y: r9|DWORD[.]) size: DWORD <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 0.13872865060513517 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4605932862201675611
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction stack:32|DWORD[.] = MOVE r9|DWORD[.] moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction rax|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction rcx|DWORD = LEA [r8|DWORD + 6] size: DWORD <|@ <|@
      nr   44  <|@ instruction rdi|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   46  <|@ instruction rbx|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   48  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B19" "B16" 
    successors "B5" "B23" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606570078942526261
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr   52  <|@ instruction CMP (x: rcx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B22" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4606570078942526261
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction rax|DWORD = AND (x: r11|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr   60  <|@ instruction CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4606570078942526261
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   68  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr   70  <|@ instruction BRANCH trueDestinationProbability: 0.92409441174686 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589762154589970125
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589762154589970125
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction rbp|DWORD[.] = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   88  <|@ instruction r13|DWORD[.] = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   90  <|@ instruction r14|DWORD[.] = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   92  <|@ instruction TEST (x: r14|DWORD[.], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr   94  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B13 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B13" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589252381197289605
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  102  <|@ instruction CMP [r14|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/ClassValue$Version;, resolved>;compressed} <|@ <|@
      nr  104  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B13 falseDestination: B11 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589762154589970125
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  112  <|@ instruction CMP (x: r13|DWORD[.], y: rbp|DWORD[.]) size: DWORD <|@ <|@
      nr  114  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589762154589970125
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  130  <|@ instruction r8|DWORD = INC rdi|DWORD size: DWORD <|@ <|@
      nr  132  <|@ instruction TEST (x: r14|DWORD[.], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr  134  <|@ instruction BRANCH trueDestinationProbability: 0.9201051101420105 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4589354871699362687
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  138  <|@ st <@st|@reference-map: [rax:0, rdx:0, rbp:0, rsi:0, r13:0, stack:0]
live-base-pointers: []
java.lang.ClassValue.match(ClassValue.java:243) [bci: 12]
stack: rbp|DWORD[.] r13|DWORD[.] 
locals: rdx|QWORD[.] - 
java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:564) [bci: 60]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD stack:28|DWORD stack:32|DWORD[.] rbx|DWORD rdi|DWORD rax|DWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:12, 60] <|@ <|@
      nr  140  <|@ instruction rbx|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  142  <|@ instruction rdi|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  144  <|@ instruction JUMP ~[] destination: B16 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573166548403401947
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  148  <|@ instruction r9|DWORD[.] = MOV [r14|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  150  <|@ st <@st|@reference-map: [rax:0, rdx:0, rbp:0, rsi:0, r9:0, r13:0, r14:0, stack:0]
live-base-pointers: []
java.lang.ClassValue.match(ClassValue.java:243) [bci: 12]
stack: rbp|DWORD[.] r13|DWORD[.] 
locals: rdx|QWORD[.] - 
java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:564) [bci: 60]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD stack:28|DWORD stack:32|DWORD[.] rbx|DWORD rdi|DWORD rax|DWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r9|DWORD[.] * 8] state [bci:12, 60] <|@ <|@
      nr  152  <|@ instruction r9|DWORD[.] = MOV [r9|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  154  <|@ instruction CMP (x: r9|DWORD[.], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr  156  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4573166548403401947
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  168  <|@ instruction MOV (x: [rax|DWORD[.] * 8 + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  170  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, stack:0]
live-base-pointers: []
java.lang.ref.Reference.clear(Reference.java:266) [bci: 5]
locals: rax|DWORD[.] 
java.lang.ClassValue$Entry.isLive(ClassValue.java:348) [bci: 21]
locals: rax|DWORD[.] - 
java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD stack:28|DWORD stack:32|DWORD[.] rbx|DWORD rdi|DWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:5, 21, 128] <|@ <|@
      nr  172  <|@ instruction rbx|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction rdi|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B19 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4605932862201675611
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4594166246683902612
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   32  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  198  <|@ instruction r10|DWORD = MOVE input: int[-39187|0xffffffffffff66ed] <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" "B21" "B20" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  204  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  206  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  208  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:0]
live-base-pointers: []
java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:559) [bci: 32]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD stack:28|DWORD stack:32|DWORD[.] rbx|DWORD rdi|DWORD - 
>@ <|@ instruction DEOPT info [bci:32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction r9|DWORD[.] = MOVE stack:32|DWORD[.] moveKind: DWORD <|@ <|@
      nr  120  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  122  <|@ instruction MOV [r15|QWORD + 668] y: -44307 size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  126  <|@ st <@st|@reference-map: [rax:0, rdx:0, rbp:0, rsi:0, r9:0, r13:0]
live-base-pointers: []
java.lang.ClassValue.match(ClassValue.java:243) [bci: 12]
stack: rbp|DWORD[.] r13|DWORD[.] 
locals: rdx|QWORD[.] - 
java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:564) [bci: 60]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|DWORD r9|DWORD[.] rbx|DWORD rdi|DWORD rax|DWORD[.] 
>@ <|@ instruction DEOPT info [bci:12, 60] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  186  <|@ instruction r10|DWORD = MOVE input: int[-54035|0xffffffffffff2ced] <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B21 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  180  <|@ instruction r10|DWORD = MOVE input: int[-45859|0xffffffffffff4cdd] <|@ <|@
      nr  182  <|@ instruction JUMP ~[] destination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  160  <|@ instruction MOV [r15|QWORD + 668] y: -48659 size: DWORD <|@ <|@
      nr  162  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  164  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, r9:0, r14:0, stack:0]
live-base-pointers: []
java.lang.ClassValue$Version.isLive(ClassValue.java:309) [bci: 7]
stack: r9|DWORD[.] 
locals: r14|DWORD[.] 
java.lang.ClassValue$Entry.isLive(ClassValue.java:347) [bci: 12]
locals: rax|DWORD[.] - 
java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD stack:28|DWORD stack:32|DWORD[.] rbx|DWORD rdi|DWORD - 
>@ <|@ instruction DEOPT info [bci:7, 12, 128] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  212  <|@ instruction MOV [r15|QWORD + 668] y: -36635 size: DWORD <|@ <|@
      nr  214  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  216  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:551) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction r10|DWORD = MOVE input: int[-39963|0xffffffffffff63e5] // MoveResolver resolve mapping <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: arraylength   
     2: iconst_1      
     3: isub          
     4: istore_2      
     5: aload_1       
     6: getfield      #21         // java.lang.ClassValue.hashCodeForCache:int
     9: iload_2       
    10: iand          
    11: istore_3      
    12: aload_0       
    13: iload_3       
    14: aaload        
    15: astore        4
    17: aload         4
    19: ifnonnull     24
    22: aconst_null   
    23: areturn       
    24: iconst_m1     
    25: istore        5
    27: iload_3       
    28: iconst_1      
    29: iadd          
    30: istore        6
    32: iload         6
    34: iload_3       
    35: bipush        6
    37: iadd          
    38: if_icmpge     149
    41: aload_0       
    42: iload         6
    44: iload_2       
    45: iand          
    46: aaload        
    47: astore        7
    49: aload         7
    51: ifnonnull     57
    54: goto          149
    57: aload_1       
    58: aload         7
    60: invokevirtual #24         // java.lang.ClassValue.match:(java.lang.ClassValue$Entry)boolean
    63: ifeq          126
    66: aload_0       
    67: iload_3       
    68: aload         7
    70: aastore       
    71: iload         5
    73: iflt          88
    76: aload_0       
    77: iload         6
    79: iload_2       
    80: iand          
    81: getstatic     #25         // java.lang.ClassValue$Entry.DEAD_ENTRY:java.lang.ClassValue$Entry
    84: aastore       
    85: goto          92
    88: iload         6
    90: istore        5
    92: aload_0       
    93: iload         5
    95: iload_2       
    96: iand          
    97: aload_0       
    98: iload         5
   100: aload         4
   102: invokestatic  #26         // entryDislocation:(java.lang.ClassValue$Entry[], int, java.lang.ClassValue$Entry)int
   105: bipush        6
   107: if_icmpge     115
   110: aload         4
   112: goto          118
   115: getstatic     #25         // java.lang.ClassValue$Entry.DEAD_ENTRY:java.lang.ClassValue$Entry
   118: aastore       
   119: aload_1       
   120: aload         7
   122: invokevirtual #23         // java.lang.ClassValue.castEntry:(java.lang.ClassValue$Entry)java.lang.ClassValue$Entry
   125: areturn       
   126: aload         7
   128: invokevirtual #27         // java.lang.ClassValue$Entry.isLive:()boolean
   131: ifne          143
   134: iload         5
   136: ifge          143
   139: iload         6
   141: istore        5
   143: iinc          
   146: goto          32
   149: aconst_null   
   150: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 89842400c0feff4883ec1848896c241085068b420c448b560c458bda41ffcb458bc34423c0453bd00f8681010000468b4c86104585c90f84f3000000448944240444890c24418bc0ffc0418d48068bf8bbffffffff6666660f1f8400000000003bcf0f8ee4000000418bc323c7443bd00f86510100008b44861085c00f849000000085db0f8dfd0000008b2cc50c000000448b6a14448b34c50c0000004585f60f841200000042813cf508000000addeadde0f85d7000000443bed0f84a5000000448bc741ffc04585f60f850d0000008505000000008bdf418bf8eb83468b0cf50c000000438504cc468b0ccd14000000453bce0f849d000000448924c50c0000008505000000008bdf418bf8e94effffff48b80000000000000000488b6c24104883c418850500000000c5f877c348b80000000000000000488b6c24104883c418850500000000c5f877c341baed66ffff4589979c0200004d89a7a8020000e80000000090448b0c24448b44240441c7879c020000ed52ffff4d89a7a8020000e8000000009041baed2cffffebc341badd4cffffebbb41c7879c020000ed41ffff4d89a7a8020000e8000000009041c7879c020000e570ffff4d89a7a8020000e8000000009041bae563ffffeb83e80000000090e80000000090  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 3  <||@
  Comment 0 1  <||@
  Comment 11 block B0 null  <||@
  Comment 11 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 11 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 16 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7410c6f6 slotKind: QWORD  <||@
  Comment 16 6 NULLCHECK [rsi|QWORD[.]] state [bci:0]  <||@
  Comment 16 [rdx:0, rsi:0]at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:551) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 16 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 18 8 rax|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 18 [rdx:0, rsi:0]at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:551) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 18 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 21 10 r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 25 12 r11|DWORD = DEC r10|DWORD size: DWORD  <||@
  Comment 31 14 r8|DWORD = AND (x: r11|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 37 16 CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 40 18 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B25  <||@
  Comment 46 block B1 null  <||@
  Comment 46 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 46 22 r9|DWORD[.] = MOV [rsi|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD  <||@
  Comment 51 24 TEST (x: r9|DWORD[.], y: r9|DWORD[.]) size: DWORD  <||@
  Comment 54 26 BRANCH trueDestinationProbability: 0.13872865060513517 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 60 block B3 null  <||@
  Comment 60 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 60 36 stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 65 38 stack:32|DWORD[.] = MOVE r9|DWORD[.] moveKind: DWORD  <||@
  Comment 69 40 rax|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 74 42 rcx|DWORD = LEA [r8|DWORD + 6] size: DWORD  <||@
  Comment 78 44 rdi|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 80 46 rbx|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 85 48 JUMP ~[] destination: B3 -> B4  <||@
  Comment 85 block B4 loop 0 depth 1 header:20|LoopBegin  <||@
  Comment 85 50 [] = LABEL numbPhis: 2 align: true label: ?  <||@
  Comment 96 52 CMP (x: rcx|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 98 54 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B23  <||@
  Comment 104 block B5 loop 0 depth 1 header:20|LoopBegin  <||@
  Comment 104 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 104 58 rax|DWORD = AND (x: r11|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 109 60 CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 112 62 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B22  <||@
  Comment 118 block B6 loop 0 depth 1 header:20|LoopBegin  <||@
  Comment 118 64 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 118 66 rax|DWORD[.] = MOV [rsi|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD  <||@
  Comment 122 68 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 124 70 BRANCH trueDestinationProbability: 0.92409441174686 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 130 block B8 loop 0 depth 1 header:20|LoopBegin  <||@
  Comment 130 78 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 130 80 TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 132 82 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B21  <||@
  Comment 138 block B9 loop 0 depth 1 header:20|LoopBegin  <||@
  Comment 138 84 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 138 86 rbp|DWORD[.] = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 145 88 r13|DWORD[.] = MOV [rdx|QWORD[.] + 20] size: DWORD  <||@
  Comment 149 90 r14|DWORD[.] = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 157 92 TEST (x: r14|DWORD[.], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 160 94 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B13 falseDestination: B9 -> B11  <||@
  Comment 166 block B11 loop 0 depth 1 header:20|LoopBegin  <||@
  Comment 166 100 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 166 102 CMP [r14|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/ClassValue$Version;, resolved>;compressed}  <||@
  Comment 166 {meta{HotSpotType<Ljava/lang/ClassValue$Version;, resolved>;compressed}}  <||@
  Comment 178 104 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B13 falseDestination: B11 -> B20  <||@
  Comment 184 block B13 loop 0 depth 1 header:20|LoopBegin  <||@
  Comment 184 110 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 184 112 CMP (x: r13|DWORD[.], y: rbp|DWORD[.]) size: DWORD  <||@
  Comment 187 114 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15  <||@
  Comment 193 block B15 loop 0 depth 1 header:20|LoopBegin  <||@
  Comment 193 128 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 193 130 r8|DWORD = INC rdi|DWORD size: DWORD  <||@
  Comment 199 132 TEST (x: r14|DWORD[.], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 202 134 BRANCH trueDestinationProbability: 0.9201051101420105 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17  <||@
  Comment 208 block B16 loop 0 depth 1 header:20|LoopBegin  <||@
  Comment 208 136 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 208 138 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:12, 60]  <||@
  Comment 208 [rax:0, rdx:0, rbp:0, rsi:0, r13:0, stack:0]at java.lang.ClassValue.match(ClassValue.java:243) [bci: 12, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rdx|QWORD[.]  |-            
     stack:   |rbp|DWORD[.]  |r13|DWORD[.] 
  at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:564) [bci: 60, duringCall: true, rethrow: false]
              |0             |1             |2          |3               |4                  |5          |6          |7            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD  |stack:28|DWORD  |stack:32|DWORD[.]  |rbx|DWORD  |rdi|DWORD  |rax|DWORD[.]   <||@
  Comment 208 {infopoint: SAFEPOINT}  <||@
  Comment 208 11  <||@
  Comment 214 140 rbx|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 216 142 rdi|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 219 144 JUMP ~[] destination: B16 -> B4  <||@
  Comment 221 block B17 loop 0 depth 1 header:20|LoopBegin  <||@
  Comment 221 146 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 221 148 r9|DWORD[.] = MOV [r14|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 229 150 NULLCHECK [r12|QWORD[*] + r9|DWORD[.] * 8] state [bci:12, 60]  <||@
  Comment 229 [rax:0, rdx:0, rbp:0, rsi:0, r9:0, r13:0, r14:0, stack:0]at java.lang.ClassValue.match(ClassValue.java:243) [bci: 12, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rdx|QWORD[.]  |-            
     stack:   |rbp|DWORD[.]  |r13|DWORD[.] 
  at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:564) [bci: 60, duringCall: true, rethrow: false]
              |0             |1             |2          |3               |4                  |5          |6          |7            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD  |stack:28|DWORD  |stack:32|DWORD[.]  |rbx|DWORD  |rdi|DWORD  |rax|DWORD[.]   <||@
  Comment 229 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 233 152 r9|DWORD[.] = MOV [r9|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 241 154 CMP (x: r9|DWORD[.], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 244 156 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19  <||@
  Comment 250 block B19 loop 0 depth 1 header:20|LoopBegin  <||@
  Comment 250 166 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 250 168 MOV (x: [rax|DWORD[.] * 8 + 12], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 258 170 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:5, 21, 128]  <||@
  Comment 258 [rax:0, rdx:0, rsi:0, stack:0]at java.lang.ref.Reference.clear(Reference.java:266) [bci: 5, duringCall: false, rethrow: false]
              |0            
     locals:  |rax|DWORD[.] 
  at java.lang.ClassValue$Entry.isLive(ClassValue.java:348) [bci: 21, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rax|DWORD[.]  |- 
  at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128, duringCall: true, rethrow: false]
              |0             |1             |2          |3               |4                  |5          |6          |7 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD  |stack:28|DWORD  |stack:32|DWORD[.]  |rbx|DWORD  |rdi|DWORD  |-   <||@
  Comment 258 {infopoint: SAFEPOINT}  <||@
  Comment 258 11  <||@
  Comment 264 172 rbx|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 266 174 rdi|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 269 176 JUMP ~[] destination: B19 -> B4  <||@
  Comment 274 block B7 null  <||@
  Comment 274 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 274 74 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 284 76 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 293 12  <||@
  Comment 303 block B2 null  <||@
  Comment 303 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 303 30 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 313 32 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 322 12  <||@
  Comment 332 block B23 null  <||@
  Comment 332 196 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 332 198 r10|DWORD = MOVE input: int[-39187|0xffffffffffff66ed]  <||@
  Comment 338 200 JUMP ~[] destination: B23 -> B24  <||@
  Comment 338 block B24 null  <||@
  Comment 338 202 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 338 204 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 345 206 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 352 208 DEOPT info [bci:32]  <||@
  Comment 352 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 357 [rdx:0, rsi:0, stack:0]at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:559) [bci: 32, duringCall: false, rethrow: false]
              |0             |1             |2          |3               |4                  |5          |6          |7 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD  |stack:28|DWORD  |stack:32|DWORD[.]  |rbx|DWORD  |rdi|DWORD  |-   <||@
  Comment 358 block B14 null  <||@
  Comment 358 116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 358 118 r9|DWORD[.] = MOVE stack:32|DWORD[.] moveKind: DWORD  <||@
  Comment 362 120 r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 367 122 MOV [r15|QWORD + 668] y: -44307 size: DWORD  <||@
  Comment 378 124 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 385 126 DEOPT info [bci:12, 60]  <||@
  Comment 385 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 390 [rax:0, rdx:0, rbp:0, rsi:0, r9:0, r13:0]at java.lang.ClassValue.match(ClassValue.java:243) [bci: 12, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rdx|QWORD[.]  |-            
     stack:   |rbp|DWORD[.]  |r13|DWORD[.] 
  at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:564) [bci: 60, duringCall: true, rethrow: false]
              |0             |1             |2          |3         |4            |5          |6          |7            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD  |r8|DWORD  |r9|DWORD[.]  |rbx|DWORD  |rdi|DWORD  |rax|DWORD[.]   <||@
  Comment 391 block B21 null  <||@
  Comment 391 184 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 391 186 r10|DWORD = MOVE input: int[-54035|0xffffffffffff2ced]  <||@
  Comment 397 188 JUMP ~[] destination: B21 -> B24  <||@
  Comment 399 block B20 null  <||@
  Comment 399 178 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 399 180 r10|DWORD = MOVE input: int[-45859|0xffffffffffff4cdd]  <||@
  Comment 405 182 JUMP ~[] destination: B20 -> B24  <||@
  Comment 407 block B18 null  <||@
  Comment 407 158 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 407 160 MOV [r15|QWORD + 668] y: -48659 size: DWORD  <||@
  Comment 418 162 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 425 164 DEOPT info [bci:7, 12, 128]  <||@
  Comment 425 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 430 [rax:0, rdx:0, rsi:0, r9:0, r14:0, stack:0]at java.lang.ClassValue$Version.isLive(ClassValue.java:309) [bci: 7, duringCall: false, rethrow: false]
              |0            
     locals:  |r14|DWORD[.] 
     stack:   |r9|DWORD[.]  
  at java.lang.ClassValue$Entry.isLive(ClassValue.java:347) [bci: 12, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rax|DWORD[.]  |- 
  at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128, duringCall: true, rethrow: false]
              |0             |1             |2          |3               |4                  |5          |6          |7 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD  |stack:28|DWORD  |stack:32|DWORD[.]  |rbx|DWORD  |rdi|DWORD  |-   <||@
  Comment 431 block B25 null  <||@
  Comment 431 210 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 431 212 MOV [r15|QWORD + 668] y: -36635 size: DWORD  <||@
  Comment 442 214 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 449 216 DEOPT info [bci:0]  <||@
  Comment 449 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 454 [rdx:0, rsi:0]at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:551) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 455 block B22 null  <||@
  Comment 455 190 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 455 192 r10|DWORD = MOVE input: int[-39963|0xffffffffffff63e5]  <||@
  Comment 461 194 JUMP ~[] destination: B22 -> B24  <||@
  Comment 463 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 463 4  <||@
  Comment 469 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 469 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9860[java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue$Entry[], ClassValue)]"
  method "HotSpotCompilation-9860[java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue$Entry[], ClassValue)]"
  date 1527005226487
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107c3e860 89842400c0feff4883ec1848896c241085068b420c448b560c458bda41ffcb458bc34423c0453bd00f8681010000468b4c86104585c90f84f3000000448944240444890c24418bc0ffc0418d48068bf8bbffffffff6666660f1f8400000000003bcf0f8ee4000000418bc323c7443bd00f86510100008b44861085c00f849000000085db0f8dfd0000008b2cc50c000000448b6a14448b34c50c0000004585f60f841200000042813cf508000000827600f80f85d7000000443bed0f84a5000000448bc741ffc04585f60f850d0000008505d006c5fc8bdf418bf8eb83468b0cf50c000000438504cc468b0ccd14000000453bce0f849d000000448924c50c00000085059e06c5fc8bdf418bf8e94effffff48b80000000000000000488b6c24104883c41885057b06c5fcc5f877c348b80000000000000000488b6c24104883c41885055e06c5fcc5f877c341baed66ffff4589979c0200004d89a7a8020000e8398cbcfe90448b0c24448b44240441c7879c020000ed52ffff4d89a7a8020000e8188cbcfe9041baed2cffffebc341badd4cffffebbb41c7879c020000ed41ffff4d89a7a8020000e8f08bbcfe9041c7879c020000e570ffff4d89a7a8020000e8d88bbcfe9041bae563ffffeb83e8ecbb00ff90e8c68abcfe90f4f4f4f4f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 3  <||@
  Comment 0 1  <||@
  Comment 11 block B0 null  <||@
  Comment 11 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 11 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 16 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7410c6f6 slotKind: QWORD  <||@
  Comment 16 6 NULLCHECK [rsi|QWORD[.]] state [bci:0]  <||@
  Comment 16 [rdx:0, rsi:0]at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:551) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 16 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 18 8 rax|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 18 [rdx:0, rsi:0]at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:551) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 18 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 21 10 r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 25 12 r11|DWORD = DEC r10|DWORD size: DWORD  <||@
  Comment 31 14 r8|DWORD = AND (x: r11|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 37 16 CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 40 18 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B25  <||@
  Comment 46 block B1 null  <||@
  Comment 46 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 46 22 r9|DWORD[.] = MOV [rsi|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD  <||@
  Comment 51 24 TEST (x: r9|DWORD[.], y: r9|DWORD[.]) size: DWORD  <||@
  Comment 54 26 BRANCH trueDestinationProbability: 0.13872865060513517 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 60 block B3 null  <||@
  Comment 60 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 60 36 stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 65 38 stack:32|DWORD[.] = MOVE r9|DWORD[.] moveKind: DWORD  <||@
  Comment 69 40 rax|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 74 42 rcx|DWORD = LEA [r8|DWORD + 6] size: DWORD  <||@
  Comment 78 44 rdi|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 80 46 rbx|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 85 48 JUMP ~[] destination: B3 -> B4  <||@
  Comment 85 block B4 loop 0 depth 1 header:20|LoopBegin  <||@
  Comment 85 50 [] = LABEL numbPhis: 2 align: true label: ?  <||@
  Comment 96 52 CMP (x: rcx|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 98 54 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B23  <||@
  Comment 104 block B5 loop 0 depth 1 header:20|LoopBegin  <||@
  Comment 104 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 104 58 rax|DWORD = AND (x: r11|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 109 60 CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 112 62 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B22  <||@
  Comment 118 block B6 loop 0 depth 1 header:20|LoopBegin  <||@
  Comment 118 64 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 118 66 rax|DWORD[.] = MOV [rsi|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD  <||@
  Comment 122 68 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 124 70 BRANCH trueDestinationProbability: 0.92409441174686 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 130 block B8 loop 0 depth 1 header:20|LoopBegin  <||@
  Comment 130 78 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 130 80 TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 132 82 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B21  <||@
  Comment 138 block B9 loop 0 depth 1 header:20|LoopBegin  <||@
  Comment 138 84 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 138 86 rbp|DWORD[.] = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 145 88 r13|DWORD[.] = MOV [rdx|QWORD[.] + 20] size: DWORD  <||@
  Comment 149 90 r14|DWORD[.] = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 157 92 TEST (x: r14|DWORD[.], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 160 94 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B13 falseDestination: B9 -> B11  <||@
  Comment 166 block B11 loop 0 depth 1 header:20|LoopBegin  <||@
  Comment 166 100 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 166 102 CMP [r14|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/ClassValue$Version;, resolved>;compressed}  <||@
  Comment 166 {meta{HotSpotType<Ljava/lang/ClassValue$Version;, resolved>;compressed}}  <||@
  Comment 178 104 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B13 falseDestination: B11 -> B20  <||@
  Comment 184 block B13 loop 0 depth 1 header:20|LoopBegin  <||@
  Comment 184 110 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 184 112 CMP (x: r13|DWORD[.], y: rbp|DWORD[.]) size: DWORD  <||@
  Comment 187 114 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15  <||@
  Comment 193 block B15 loop 0 depth 1 header:20|LoopBegin  <||@
  Comment 193 128 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 193 130 r8|DWORD = INC rdi|DWORD size: DWORD  <||@
  Comment 199 132 TEST (x: r14|DWORD[.], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 202 134 BRANCH trueDestinationProbability: 0.9201051101420105 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17  <||@
  Comment 208 block B16 loop 0 depth 1 header:20|LoopBegin  <||@
  Comment 208 136 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 208 138 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:12, 60]  <||@
  Comment 208 [rax:0, rdx:0, rbp:0, rsi:0, r13:0, stack:0]at java.lang.ClassValue.match(ClassValue.java:243) [bci: 12, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rdx|QWORD[.]  |-            
     stack:   |rbp|DWORD[.]  |r13|DWORD[.] 
  at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:564) [bci: 60, duringCall: true, rethrow: false]
              |0             |1             |2          |3               |4                  |5          |6          |7            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD  |stack:28|DWORD  |stack:32|DWORD[.]  |rbx|DWORD  |rdi|DWORD  |rax|DWORD[.]   <||@
  Comment 208 {infopoint: SAFEPOINT}  <||@
  Comment 208 11  <||@
  Comment 214 140 rbx|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 216 142 rdi|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 219 144 JUMP ~[] destination: B16 -> B4  <||@
  Comment 221 block B17 loop 0 depth 1 header:20|LoopBegin  <||@
  Comment 221 146 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 221 148 r9|DWORD[.] = MOV [r14|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 229 150 NULLCHECK [r12|QWORD[*] + r9|DWORD[.] * 8] state [bci:12, 60]  <||@
  Comment 229 [rax:0, rdx:0, rbp:0, rsi:0, r9:0, r13:0, r14:0, stack:0]at java.lang.ClassValue.match(ClassValue.java:243) [bci: 12, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rdx|QWORD[.]  |-            
     stack:   |rbp|DWORD[.]  |r13|DWORD[.] 
  at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:564) [bci: 60, duringCall: true, rethrow: false]
              |0             |1             |2          |3               |4                  |5          |6          |7            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD  |stack:28|DWORD  |stack:32|DWORD[.]  |rbx|DWORD  |rdi|DWORD  |rax|DWORD[.]   <||@
  Comment 229 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 233 152 r9|DWORD[.] = MOV [r9|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 241 154 CMP (x: r9|DWORD[.], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 244 156 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19  <||@
  Comment 250 block B19 loop 0 depth 1 header:20|LoopBegin  <||@
  Comment 250 166 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 250 168 MOV (x: [rax|DWORD[.] * 8 + 12], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 258 170 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:5, 21, 128]  <||@
  Comment 258 [rax:0, rdx:0, rsi:0, stack:0]at java.lang.ref.Reference.clear(Reference.java:266) [bci: 5, duringCall: false, rethrow: false]
              |0            
     locals:  |rax|DWORD[.] 
  at java.lang.ClassValue$Entry.isLive(ClassValue.java:348) [bci: 21, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rax|DWORD[.]  |- 
  at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128, duringCall: true, rethrow: false]
              |0             |1             |2          |3               |4                  |5          |6          |7 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD  |stack:28|DWORD  |stack:32|DWORD[.]  |rbx|DWORD  |rdi|DWORD  |-   <||@
  Comment 258 {infopoint: SAFEPOINT}  <||@
  Comment 258 11  <||@
  Comment 264 172 rbx|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 266 174 rdi|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 269 176 JUMP ~[] destination: B19 -> B4  <||@
  Comment 274 block B7 null  <||@
  Comment 274 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 274 74 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 284 76 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 293 12  <||@
  Comment 303 block B2 null  <||@
  Comment 303 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 303 30 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 313 32 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 322 12  <||@
  Comment 332 block B23 null  <||@
  Comment 332 196 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 332 198 r10|DWORD = MOVE input: int[-39187|0xffffffffffff66ed]  <||@
  Comment 338 200 JUMP ~[] destination: B23 -> B24  <||@
  Comment 338 block B24 null  <||@
  Comment 338 202 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 338 204 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 345 206 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 352 208 DEOPT info [bci:32]  <||@
  Comment 352 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 357 [rdx:0, rsi:0, stack:0]at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:559) [bci: 32, duringCall: false, rethrow: false]
              |0             |1             |2          |3               |4                  |5          |6          |7 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD  |stack:28|DWORD  |stack:32|DWORD[.]  |rbx|DWORD  |rdi|DWORD  |-   <||@
  Comment 358 block B14 null  <||@
  Comment 358 116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 358 118 r9|DWORD[.] = MOVE stack:32|DWORD[.] moveKind: DWORD  <||@
  Comment 362 120 r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 367 122 MOV [r15|QWORD + 668] y: -44307 size: DWORD  <||@
  Comment 378 124 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 385 126 DEOPT info [bci:12, 60]  <||@
  Comment 385 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 390 [rax:0, rdx:0, rbp:0, rsi:0, r9:0, r13:0]at java.lang.ClassValue.match(ClassValue.java:243) [bci: 12, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rdx|QWORD[.]  |-            
     stack:   |rbp|DWORD[.]  |r13|DWORD[.] 
  at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:564) [bci: 60, duringCall: true, rethrow: false]
              |0             |1             |2          |3         |4            |5          |6          |7            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD  |r8|DWORD  |r9|DWORD[.]  |rbx|DWORD  |rdi|DWORD  |rax|DWORD[.]   <||@
  Comment 391 block B21 null  <||@
  Comment 391 184 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 391 186 r10|DWORD = MOVE input: int[-54035|0xffffffffffff2ced]  <||@
  Comment 397 188 JUMP ~[] destination: B21 -> B24  <||@
  Comment 399 block B20 null  <||@
  Comment 399 178 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 399 180 r10|DWORD = MOVE input: int[-45859|0xffffffffffff4cdd]  <||@
  Comment 405 182 JUMP ~[] destination: B20 -> B24  <||@
  Comment 407 block B18 null  <||@
  Comment 407 158 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 407 160 MOV [r15|QWORD + 668] y: -48659 size: DWORD  <||@
  Comment 418 162 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 425 164 DEOPT info [bci:7, 12, 128]  <||@
  Comment 425 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 430 [rax:0, rdx:0, rsi:0, r9:0, r14:0, stack:0]at java.lang.ClassValue$Version.isLive(ClassValue.java:309) [bci: 7, duringCall: false, rethrow: false]
              |0            
     locals:  |r14|DWORD[.] 
     stack:   |r9|DWORD[.]  
  at java.lang.ClassValue$Entry.isLive(ClassValue.java:347) [bci: 12, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rax|DWORD[.]  |- 
  at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:578) [bci: 128, duringCall: true, rethrow: false]
              |0             |1             |2          |3               |4                  |5          |6          |7 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD  |stack:28|DWORD  |stack:32|DWORD[.]  |rbx|DWORD  |rdi|DWORD  |-   <||@
  Comment 431 block B25 null  <||@
  Comment 431 210 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 431 212 MOV [r15|QWORD + 668] y: -36635 size: DWORD  <||@
  Comment 442 214 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 449 216 DEOPT info [bci:0]  <||@
  Comment 449 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 454 [rdx:0, rsi:0]at java.lang.ClassValue$ClassValueMap.probeBackupLocations(ClassValue.java:551) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 455 block B22 null  <||@
  Comment 455 190 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 455 192 r10|DWORD = MOVE input: int[-39963|0xffffffffffff63e5]  <||@
  Comment 461 194 JUMP ~[] destination: B22 -> B24  <||@
  Comment 463 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 463 4  <||@
  Comment 469 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 469 5  <||@
  HexCodeFile>>> <|@
end_nmethod
