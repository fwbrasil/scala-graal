begin_compilation
  name " HotSpotCompilation-9653[java.lang.ref.Reference.<init>(Object, ReferenceQueue)]"
  method "HotSpotCompilation-9653[java.lang.ref.Reference.<init>(Object, ReferenceQueue)]"
  date 1527005211843
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v25 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v25  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/lang/ref/Reference;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v54 v53 j42 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v25 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a22 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a22 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ref.Reference.<init>(Reference.java:307) [bci: 6]
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v25 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: Reference.referent
nodeSourcePosition: at java.lang.ref.Reference.<init>(Reference.java:307) [bci: 6]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v53 
value: a22 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j42 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v53 value: a22 stateAfter: - lastLocationAccess: - #next: j42  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.lang.ref.Reference.<init>(Reference.java:307) [bci: 6]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v48 
=== Usages ===
j44 
=== Predecessor ===
v25 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v48  <|@  <|@
f <@~|@floating>@ <|@
tid i43 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.ref.Reference.<init>(Reference.java:307) [bci: 6]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j44 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j44 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.ref.Reference.<init>(Reference.java:307) [bci: 6]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j42 
y: i43 
=== Succesors ===
=== Usages ===
v56 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j42 y: i43  <|@  <|@
f <@~|@floating>@ <|@
tid j47 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.ref.Reference.<init>(Reference.java:307) [bci: 6]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v56 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j44 
index: j47 
=== Succesors ===
=== Usages ===
v48 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j44 index: j47  <|@  <|@
f <@~|@floating>@ <|@
tid i49 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.ref.Reference.<init>(Reference.java:307) [bci: 6]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v48 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.ref.Reference.<init>(Reference.java:307) [bci: 6]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v56 
value: i49 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v11 
=== Usages ===
=== Predecessor ===
j42 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v56 value: i49 stateAfter: - lastLocationAccess: - #next: v11  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a Ljava/lang/ref/ReferenceQueue;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a38 v8 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ref.Reference.<init>(Reference.java:308) [bci: 11]
stamp: void
=== Inputs ===
value: a3 
=== Succesors ===
=== Usages ===
v11 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a3  <|@  <|@
f <@*|@fixed>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ref.Reference.<init>(Reference.java:308) [bci: 11]
stamp: void
trueSuccessorProbability: 0.6189433209218564
=== Inputs ===
condition: v8 
=== Succesors ===
trueSuccessor: v9 
falseSuccessor: v10 
=== Usages ===
=== Predecessor ===
v48 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v8 #trueSuccessor: v9 #falseSuccessor: v10  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4603750165364210676
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ref.Reference.<init>(Reference.java:308) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: a52 
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a52  <|@  <|@
f <@~|@floating>@ <|@
tid a32 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ref.Reference.<init>(Reference.java:308) [bci: 14]
rawvalue: Class:java.lang.ref.ReferenceQueue
stableDimension: 0
stamp: a!# Ljava/lang/Class;
stampKind: a -
value: Object[Class:java.lang.ref.ReferenceQueue]
=== Inputs ===
=== Succesors ===
=== Usages ===
v55 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
displacement: 104
scale: Times1
stamp: void*
=== Inputs ===
base: a32 
index: - 
=== Succesors ===
=== Usages ===
a52 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a32 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a52 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ReferenceQueue.NULL
nodeSourcePosition: at java.lang.ref.Reference.<init>(Reference.java:308) [bci: 14]
nullCheck: false
stamp: n Ljava/lang/ref/ReferenceQueue;
=== Inputs ===
stateBefore: - 
guard: - 
address: v55 
=== Succesors ===
next: v14 
=== Usages ===
a39 
=== Predecessor ===
v9 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v55 #next: v14  <|@  <|@
f <@*|@fixed>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ref.Reference.<init>(Reference.java:308) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
a52 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4600536126789519384
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ref.Reference.<init>(Reference.java:308) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v16 
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v16  <|@  <|@
f <@~|@floating>@ <|@
tid a38 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ref.Reference.<init>(Reference.java:308) [bci: 21]
op: Compress
stamp: n Ljava/lang/ref/ReferenceQueue;
=== Inputs ===
value: a3 
=== Succesors ===
=== Usages ===
a39 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3  <|@  <|@
f <@*|@fixed>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ref.Reference.<init>(Reference.java:308) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
v10 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a39 <|@
d <@d|@=== Debug Properties ===
stamp: n Ljava/lang/ref/ReferenceQueue;
valueDescription: n -
=== Inputs ===
merge: v15 
values: a52 a38 
=== Succesors ===
=== Usages ===
v29 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v15 values: a52 a38  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ref.Reference.<init>(Reference.java:308) [bci: 21]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v14 v16 
=== Succesors ===
next: v30 
=== Usages ===
a39 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v14 v16 #next: v30  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: ANY_LOCATION
nodeSourcePosition: at java.lang.ref.Reference.<init>(Reference.java:308) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v29 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v29  <|@  <|@
f <@~|@floating>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v29 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: Reference.queue
nodeSourcePosition: at java.lang.ref.Reference.<init>(Reference.java:308) [bci: 21]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v54 
value: a39 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v31 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v54 value: a39 stateAfter: - lastLocationAccess: - #next: v31  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
barriers: 12
location: ANY_LOCATION
nodeSourcePosition: at java.lang.ref.Reference.<init>(Reference.java:308) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v21 
=== Usages ===
=== Predecessor ===
v29 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v21  <|@  <|@
f <@*|@fixed>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ref.Reference.<init>(Reference.java:309) [bci: 24]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v25 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v25  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/lang/ref/Reference;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v54 v53 j42 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v53 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v25 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a22 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a22 <|@
result v3|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ref.Reference.<init>(Reference.java:307) [bci: 6]
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v25 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: Reference.referent
nodeSourcePosition: at java.lang.ref.Reference.<init>(Reference.java:307) [bci: 6]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v53 
value: a22 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j42 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v53 value: a22 stateAfter: - lastLocationAccess: - #next: j42  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j42 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.lang.ref.Reference.<init>(Reference.java:307) [bci: 6]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v48 
=== Usages ===
j44 
=== Predecessor ===
v25 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v48  <|@  <|@
f <@~|@floating>@ <|@
tid i43 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.ref.Reference.<init>(Reference.java:307) [bci: 6]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j44 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j44 <|@
result v4|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.ref.Reference.<init>(Reference.java:307) [bci: 6]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j42 
y: i43 
=== Succesors ===
=== Usages ===
v56 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j42 y: i43  <|@  <|@
f <@~|@floating>@ <|@
tid j47 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.ref.Reference.<init>(Reference.java:307) [bci: 6]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v56 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v56 <|@
result [v4|QWORD[*] + v5|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j44 
index: j47 
=== Succesors ===
=== Usages ===
v48 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j44 index: j47  <|@  <|@
f <@~|@floating>@ <|@
tid i49 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.ref.Reference.<init>(Reference.java:307) [bci: 6]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v48 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.ref.Reference.<init>(Reference.java:307) [bci: 6]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v56 
value: i49 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v11 
=== Usages ===
=== Predecessor ===
j42 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v56 value: i49 stateAfter: - lastLocationAccess: - #next: v11  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
result v2|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a Ljava/lang/ref/ReferenceQueue;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a38 v8 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ref.Reference.<init>(Reference.java:308) [bci: 11]
stamp: void
=== Inputs ===
value: a3 
=== Succesors ===
=== Usages ===
v11 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a3  <|@  <|@
f <@*|@fixed>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ref.Reference.<init>(Reference.java:308) [bci: 11]
stamp: void
trueSuccessorProbability: 0.6189433209218564
=== Inputs ===
condition: v8 
=== Succesors ===
trueSuccessor: v9 
falseSuccessor: v10 
=== Usages ===
=== Predecessor ===
v48 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v8 #trueSuccessor: v9 #falseSuccessor: v10  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@436ac3c5 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75970b66 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v3|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v4|QWORD[*] + v5|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|QWORD[.], y: v2|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6189433209218564 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4603750165364210676
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ref.Reference.<init>(Reference.java:308) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: a52 
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a52  <|@  <|@
f <@~|@floating>@ <|@
tid a32 <|@
result v6|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ref.Reference.<init>(Reference.java:308) [bci: 14]
rawvalue: Class:java.lang.ref.ReferenceQueue
stableDimension: 0
stamp: a!# Ljava/lang/Class;
stampKind: a -
value: Object[Class:java.lang.ref.ReferenceQueue]
=== Inputs ===
=== Succesors ===
=== Usages ===
v55 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v55 <|@
result [v6|QWORD[.] + 104] <|@
d <@d|@=== Debug Properties ===
displacement: 104
scale: Times1
stamp: void*
=== Inputs ===
base: a32 
index: - 
=== Succesors ===
=== Usages ===
a52 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a32 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a52 <|@
result v7|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ReferenceQueue.NULL
nodeSourcePosition: at java.lang.ref.Reference.<init>(Reference.java:308) [bci: 14]
nullCheck: false
stamp: n Ljava/lang/ref/ReferenceQueue;
=== Inputs ===
stateBefore: - 
guard: - 
address: v55 
=== Succesors ===
next: v14 
=== Usages ===
a39 
=== Predecessor ===
v9 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v55 #next: v14  <|@  <|@
f <@*|@fixed>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ref.Reference.<init>(Reference.java:308) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
a52 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.lang.ref.ReferenceQueue] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[.] = MOV [v6|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v7|DWORD[.]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4600536126789519384
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ref.Reference.<init>(Reference.java:308) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v16 
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v16  <|@  <|@
f <@~|@floating>@ <|@
tid a38 <|@
result v8|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ref.Reference.<init>(Reference.java:308) [bci: 21]
op: Compress
stamp: n Ljava/lang/ref/ReferenceQueue;
=== Inputs ===
value: a3 
=== Succesors ===
=== Usages ===
a39 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3  <|@  <|@
f <@*|@fixed>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ref.Reference.<init>(Reference.java:308) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
v10 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[.] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75970b66 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v8|DWORD[.]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a39 <|@
result v9|DWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: n Ljava/lang/ref/ReferenceQueue;
valueDescription: n -
=== Inputs ===
merge: v15 
values: a52 a38 
=== Succesors ===
=== Usages ===
v29 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v15 values: a52 a38  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ref.Reference.<init>(Reference.java:308) [bci: 21]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v14 v16 
=== Succesors ===
next: v30 
=== Usages ===
a39 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v14 v16 #next: v30  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: ANY_LOCATION
nodeSourcePosition: at java.lang.ref.Reference.<init>(Reference.java:308) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v29 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v29  <|@  <|@
f <@~|@floating>@ <|@
tid v54 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v29 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: Reference.queue
nodeSourcePosition: at java.lang.ref.Reference.<init>(Reference.java:308) [bci: 21]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v54 
value: a39 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v31 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v54 value: a39 stateAfter: - lastLocationAccess: - #next: v31  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
barriers: 12
location: ANY_LOCATION
nodeSourcePosition: at java.lang.ref.Reference.<init>(Reference.java:308) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v21 
=== Usages ===
=== Predecessor ===
v29 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v21  <|@  <|@
f <@*|@fixed>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ref.Reference.<init>(Reference.java:309) [bci: 24]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v9|DWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v9|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: v10|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@436ac3c5 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75970b66 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v3|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v4|QWORD[*] + v5|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|QWORD[.], y: v2|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6189433209218564 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4603750165364210676
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.lang.ref.ReferenceQueue] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[.] = MOV [v6|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v7|DWORD[.]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v9|DWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v9|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: v10|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4600536126789519384
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[.] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75970b66 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v8|DWORD[.]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #12         // java.lang.Object.<init>:()void
     4: aload_0       
     5: aload_1       
     6: putfield      #9          // referent:java.lang.Object
     9: aload_0       
    10: aload_2       
    11: ifnonnull     20
    14: getstatic     #7          // java.lang.ref.ReferenceQueue.NULL:java.lang.ref.ReferenceQueue
    17: goto          21
    20: aload_2       
    21: putfield      #6          // queue:java.lang.ref.ReferenceQueue
    24: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@436ac3c5 slotKind: QWORD <|@ <|@
      nr   12  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75970b66 encoding: base: 0 shift: 3 <|@ <|@
      nr   14  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   16  <|@ instruction r10|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   18  <|@ instruction r11|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   20  <|@ instruction MOVB (x: [r10|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   22  <|@ instruction TEST (x: rcx|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr   24  <|@ instruction BRANCH trueDestinationProbability: 0.6189433209218564 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4603750165364210676
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.lang.ref.ReferenceQueue] <|@ <|@
      nr   30  <|@ instruction r10|DWORD[.] = MOV [r10|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   32  <|@ instruction JUMP ~[] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   42  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr   44  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   46  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4600536126789519384
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction rcx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75970b66 encoding: base: 0 shift: 3 <|@ <|@
      nr   38  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #12         // java.lang.Object.<init>:()void
     4: aload_0       
     5: aload_1       
     6: putfield      #9          // referent:java.lang.Object
     9: aload_0       
    10: aload_2       
    11: ifnonnull     20
    14: getstatic     #7          // java.lang.ref.ReferenceQueue.NULL:java.lang.ref.ReferenceQueue
    17: goto          21
    20: aload_2       
    21: putfield      #6          // queue:java.lang.ref.ReferenceQueue
    24: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@436ac3c5 slotKind: QWORD <|@ <|@
      nr   12  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75970b66 encoding: base: 0 shift: 3 <|@ <|@
      nr   14  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   16  <|@ instruction r10|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   18  <|@ instruction r11|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   20  <|@ instruction MOVB (x: [r10|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   22  <|@ instruction TEST (x: rcx|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr   24  <|@ instruction BRANCH trueDestinationProbability: 0.6189433209218564 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4603750165364210676
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.lang.ref.ReferenceQueue] <|@ <|@
      nr   30  <|@ instruction r10|DWORD[.] = MOV [r10|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   32  <|@ instruction JUMP ~[] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   42  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr   44  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   46  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4600536126789519384
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction rcx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75970b66 encoding: base: 0 shift: 3 <|@ <|@
      nr   38  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #12         // java.lang.Object.<init>:()void
     4: aload_0       
     5: aload_1       
     6: putfield      #9          // referent:java.lang.Object
     9: aload_0       
    10: aload_2       
    11: ifnonnull     20
    14: getstatic     #7          // java.lang.ref.ReferenceQueue.NULL:java.lang.ref.ReferenceQueue
    17: goto          21
    20: aload_2       
    21: putfield      #6          // queue:java.lang.ref.ReferenceQueue
    24: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f80000000000f1f44000048c1ea0389560c4c8bd649c1ea0949bb00e01b17010000004788241a4885c90f852300000049baaddeaddeaddeadde458b5268418bca894e10f083042400850500000000c5f877c348c1e903ebe8e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 37 block B0 null  <||@
  Comment 37 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 37 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@436ac3c5 slotKind: QWORD  <||@
  Comment 37 12 rdx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75970b66 encoding: base: 0 shift: 3  <||@
  Comment 41 14 MOV (x: [rsi|QWORD[.] + 12], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 44 16 r10|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 51 18 r11|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 61 20 MOVB (x: [r10|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 65 22 TEST (x: rcx|QWORD[.], y: rcx|QWORD[.]) size: QWORD  <||@
  Comment 68 24 BRANCH trueDestinationProbability: 0.6189433209218564 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 74 block B1 null  <||@
  Comment 74 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 74 28 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.lang.ref.ReferenceQueue]  <||@
  Comment 74 {Object[Class:java.lang.ref.ReferenceQueue]}  <||@
  Comment 84 30 r10|DWORD[.] = MOV [r10|QWORD[.] + 104] size: DWORD  <||@
  Comment 88 -1 rcx|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 91 32 JUMP ~[] destination: B1 -> B3  <||@
  Comment 91 block B3 null  <||@
  Comment 91 40 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 91 42 MOV (x: [rsi|QWORD[.] + 16], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 94 44 MEMBAR barriers: 4  <||@
  Comment 99 46 RETURN (savedRbp: rbp|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 99 12  <||@
  Comment 109 block B2 null  <||@
  Comment 109 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 109 36 rcx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75970b66 encoding: base: 0 shift: 3  <||@
  Comment 113 38 JUMP ~[] destination: B2 -> B3  <||@
  Comment 115 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 115 4  <||@
  Comment 121 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 121 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9653[java.lang.ref.Reference.<init>(Object, ReferenceQueue)]"
  method "HotSpotCompilation-9653[java.lang.ref.Reference.<init>(Object, ReferenceQueue)]"
  date 1527005211882
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 106d95c20 448b560849c1e203493bc20f852f02a7ff900f1f80000000000f1f80000000000f1f44000048c1ea0389560c4c8bd649c1ea0949bb00e01b17010000004788241a4885c90f852300000049ba480000c006000000458b5268418bca894e10f08304240085057d93affdc5f877c348c1e903ebe8e88849ebff90e86218a7ff90f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 37 block B0 null  <||@
  Comment 37 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 37 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@436ac3c5 slotKind: QWORD  <||@
  Comment 37 12 rdx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75970b66 encoding: base: 0 shift: 3  <||@
  Comment 41 14 MOV (x: [rsi|QWORD[.] + 12], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 44 16 r10|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 51 18 r11|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 61 20 MOVB (x: [r10|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 65 22 TEST (x: rcx|QWORD[.], y: rcx|QWORD[.]) size: QWORD  <||@
  Comment 68 24 BRANCH trueDestinationProbability: 0.6189433209218564 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 74 block B1 null  <||@
  Comment 74 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 74 28 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.lang.ref.ReferenceQueue]  <||@
  Comment 74 {Object[Class:java.lang.ref.ReferenceQueue]}  <||@
  Comment 84 30 r10|DWORD[.] = MOV [r10|QWORD[.] + 104] size: DWORD  <||@
  Comment 88 -1 rcx|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 91 32 JUMP ~[] destination: B1 -> B3  <||@
  Comment 91 block B3 null  <||@
  Comment 91 40 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 91 42 MOV (x: [rsi|QWORD[.] + 16], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 94 44 MEMBAR barriers: 4  <||@
  Comment 99 46 RETURN (savedRbp: rbp|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 99 12  <||@
  Comment 109 block B2 null  <||@
  Comment 109 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 109 36 rcx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75970b66 encoding: base: 0 shift: 3  <||@
  Comment 113 38 JUMP ~[] destination: B2 -> B3  <||@
  Comment 115 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 115 4  <||@
  Comment 121 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 121 5  <||@
  HexCodeFile>>> <|@
end_nmethod
