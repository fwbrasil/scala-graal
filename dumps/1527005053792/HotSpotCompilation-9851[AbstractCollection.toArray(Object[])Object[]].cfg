begin_compilation
  name " HotSpotCompilation-9851[java.util.AbstractCollection.toArray(Object[])]"
  method "HotSpotCompilation-9851[java.util.AbstractCollection.toArray(Object[])]"
  date 1527005225207
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v2472 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v2472  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/util/AbstractCollection;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v2413 v2414 v1152 ?68 ?739 ?759 ?105 ?593 v2424 v2415 a1674 ?594 v2411 v2417 a1606 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a [Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?76 ?759 v2472 a1271 ?105 ?1825 ?268 ?604 ?369 ?68 ?1826 v2425 v2380 a1270 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray(Object[])>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 176
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - - - 
=== Succesors ===
=== Usages ===
v1839 v2472 i2312 i2316 i2320 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2472 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a2 
=== Succesors ===
next: v2310 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a2 #next: v2310  <|@  <|@
f <@~|@floating>@ <|@
tid v2424 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v2310 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2310 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2424 
=== Succesors ===
next: v115 
=== Usages ===
v2233 v2229 v2231 v2309 
=== Predecessor ===
v2472 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2424 #next: v115  <|@  <|@
f <@~|@floating>@ <|@
tid v2230 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
rawvalue: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2231 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2231 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2310 
y: v2230 
=== Succesors ===
=== Usages ===
v784 v115 v277 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2310 y: v2230  <|@  <|@
f <@~|@floating>@ <|@
tid a1836 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1839 v1939 a1866 a1866 a1866 a1866 a1866 a1866 a1866 v1857 a1866 a1866 a1866 a1866 a1866 a1866 a1866 a1866 a1866 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2415 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i2328 i2332 i2318 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2228 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
rawvalue: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2229 v2309 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2414 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i2327 a2329 i2314 a2315 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2413 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i2326 i2331 i2313 i2317 a2319 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2411 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a2324 a2311 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$SubList; target_method=size target_method_class=Ljava/util/ArrayList$SubList; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
trueSuccessorProbability: 0.9408274225153865
=== Inputs ===
condition: v2231 
=== Succesors ===
trueSuccessor: v111 
falseSuccessor: v114 
=== Usages ===
=== Predecessor ===
v2310 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2231 #trueSuccessor: v111 #falseSuccessor: v114  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606649439604196894
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$SubList; target_method=size target_method_class=Ljava/util/ArrayList$SubList; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2311 
=== Usages ===
=== Predecessor ===
v115 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2311  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2311 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList.this$0
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 1]
at java.util.ArrayList$SubList.size(ArrayList.java:1048) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
nullCheck: false
stamp: n# Ljava/util/ArrayList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2411 
=== Succesors ===
next: i2312 
=== Usages ===
v2421 
=== Predecessor ===
v111 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2411 #next: i2312  <|@  <|@
f <@~|@floating>@ <|@
tid v2421 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2311 
=== Succesors ===
=== Usages ===
i2312 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2311  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2312 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 4]
at java.util.ArrayList$SubList.size(ArrayList.java:1048) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v2421 
=== Succesors ===
next: i2313 
=== Usages ===
v264 
=== Predecessor ===
a2311 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v2421 #next: i2313  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2313 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 8]
at java.util.ArrayList$SubList.size(ArrayList.java:1048) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2413 
=== Succesors ===
next: v1310 
=== Usages ===
v264 
=== Predecessor ===
i2312 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2413 #next: v1310  <|@  <|@
f <@~|@floating>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 11]
at java.util.ArrayList$SubList.size(ArrayList.java:1048) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2312 
y: i2313 
=== Succesors ===
=== Usages ===
v1310 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2312 y: i2313  <|@  <|@
f <@*|@fixed>@ <|@
tid v1310 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 11]
at java.util.ArrayList$SubList.size(ArrayList.java:1048) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v264 
=== Succesors ===
trueSuccessor: v1307 
falseSuccessor: v1309 
=== Usages ===
=== Predecessor ===
i2313 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v264 #trueSuccessor: v1307 #falseSuccessor: v1309  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606649439604196894
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1307 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 11]
at java.util.ArrayList$SubList.size(ArrayList.java:1048) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2314 
=== Usages ===
=== Predecessor ===
v1310 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2314  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2314 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList.size
nodeSourcePosition: at java.util.ArrayList$SubList.size(ArrayList.java:1049) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2414 
=== Succesors ===
next: v112 
=== Usages ===
i107 
=== Predecessor ===
v1307 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2414 #next: v112  <|@  <|@
f <@*|@fixed>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
i2314 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1309 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 11]
at java.util.ArrayList$SubList.size(ArrayList.java:1048) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1846 
=== Usages ===
=== Predecessor ===
v1310 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1846  <|@  <|@
f <@~|@floating>@ <|@
tid i1847 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -297747
stableDimension: 0
stamp: i32 [-297747] ⇊00000000fffb74ed ⇈00000000fffb74ed
stampKind: i32
value: int[-297747|0xfffffffffffb74ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1837 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1846 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1833 
=== Predecessor ===
v1309 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B8" 
    xhandlers
    flags 
    probability 4588688488168922656
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v124 
=== Usages ===
=== Predecessor ===
v115 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v124  <|@  <|@
f <@~|@floating>@ <|@
tid v2309 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2310 
y: v2228 
=== Succesors ===
=== Usages ===
v124 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2310 y: v2228  <|@  <|@
f <@*|@fixed>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/RandomAccessSubList; target_method=size target_method_class=Ljava/util/SubList; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
trueSuccessorProbability: 0.8652052238805972
=== Inputs ===
condition: v2309 
=== Succesors ===
trueSuccessor: v120 
falseSuccessor: v123 
=== Usages ===
=== Predecessor ===
v114 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2309 #trueSuccessor: v120 #falseSuccessor: v123  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4587539003186891847
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/RandomAccessSubList; target_method=size target_method_class=Ljava/util/SubList; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2315 
=== Usages ===
=== Predecessor ===
v124 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2315  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2315 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.l
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 5]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
nullCheck: false
stamp: n Ljava/util/AbstractList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2414 
=== Succesors ===
next: i2316 
=== Usages ===
v2422 
=== Predecessor ===
v120 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2414 #next: i2316  <|@  <|@
f <@~|@floating>@ <|@
tid v2422 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2315 
=== Succesors ===
=== Usages ===
i2316 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2315  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2316 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 8]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v2422 
=== Succesors ===
next: i2317 
=== Usages ===
v306 
=== Predecessor ===
a2315 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v2422 #next: i2317  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2317 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 1]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2413 
=== Succesors ===
next: v1318 
=== Usages ===
v306 
=== Predecessor ===
i2316 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2413 #next: v1318  <|@  <|@
f <@~|@floating>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2316 
y: i2317 
=== Succesors ===
=== Usages ===
v1318 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2316 y: i2317  <|@  <|@
f <@*|@fixed>@ <|@
tid v1318 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v306 
=== Succesors ===
trueSuccessor: v1315 
falseSuccessor: v1317 
=== Usages ===
=== Predecessor ===
i2317 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v306 #trueSuccessor: v1315 #falseSuccessor: v1317  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4587539003186891847
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1315 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2318 
=== Usages ===
=== Predecessor ===
v1318 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2318  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2318 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.size
nodeSourcePosition: at java.util.SubList.size(AbstractList.java:646) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2415 
=== Succesors ===
next: v121 
=== Usages ===
i107 
=== Predecessor ===
v1315 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2415 #next: v121  <|@  <|@
f <@*|@fixed>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
i2318 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1317 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1850 
=== Usages ===
=== Predecessor ===
v1318 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1850  <|@  <|@
f <@~|@floating>@ <|@
tid i1851 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -301075
stableDimension: 0
stamp: i32 [-301075] ⇊00000000fffb67ed ⇈00000000fffb67ed
stampKind: i32
value: int[-301075|0xfffffffffffb67ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1837 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1850 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1833 
=== Predecessor ===
v1317 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" "B121" 
    xhandlers
    flags 
    probability 4575751561709176675
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1322 
=== Usages ===
=== Predecessor ===
v124 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1322  <|@  <|@
f <@~|@floating>@ <|@
tid v2232 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
rawvalue: meta{HotSpotType<Ljava/util/HashSet;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/HashSet;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2233 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2233 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2310 
y: v2232 
=== Succesors ===
=== Usages ===
v1322 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2310 y: v2232  <|@  <|@
f <@*|@fixed>@ <|@
tid v1322 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashSet; target_method=size target_method_class=Ljava/util/HashSet; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2233 
=== Succesors ===
trueSuccessor: v1319 
falseSuccessor: v1321 
=== Usages ===
=== Predecessor ===
v123 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2233 #trueSuccessor: v1319 #falseSuccessor: v1321  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 4575751561709176675
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1319 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashSet; target_method=size target_method_class=Ljava/util/HashSet; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2319 
=== Usages ===
=== Predecessor ===
v1322 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2319  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2319 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashSet.map
nodeSourcePosition: at java.util.HashSet.size(HashSet.java:182) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
nullCheck: false
stamp: n Ljava/util/HashMap;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2413 
=== Succesors ===
next: i2320 
=== Usages ===
v2423 
=== Predecessor ===
v1319 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2413 #next: i2320  <|@  <|@
f <@~|@floating>@ <|@
tid v2423 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2319 
=== Succesors ===
=== Usages ===
i2320 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2319  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2320 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.size
nodeSourcePosition: at java.util.HashMap.size(HashMap.java:526) [bci: 1]
at java.util.HashSet.size(HashSet.java:182) [bci: 4]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v2423 
=== Succesors ===
next: v130 
=== Usages ===
i107 
=== Predecessor ===
a2319 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v2423 #next: v130  <|@  <|@
f <@*|@fixed>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
i2320 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B2" "B6" "B9" 
    successors "B11" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i107 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v104 
values: i2314 i2318 i2320 
=== Succesors ===
=== Usages ===
?105 v8 v2063 a2032 i1992 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v104 values: i2314 i2318 i2320  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v112 v121 v130 
=== Succesors ===
next: i2321 
=== Usages ===
i107 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v112 v121 v130 #next: i2321  <|@  <|@
f <@~|@floating>@ <|@
tid v2380 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i2321 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2321 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:177) [bci: 6]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v2380 
=== Succesors ===
next: v11 
=== Usages ===
v8 
=== Predecessor ===
v104 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2380 #next: v11  <|@  <|@
f <@~|@floating>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:177) [bci: 8]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2321 
y: i107 
=== Succesors ===
=== Usages ===
v11 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2321 y: i107  <|@  <|@
f <@~|@floating>@ <|@
tid v2267 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2190 v2285 v2288 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2261 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2173 v2281 v2308 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2253 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2254 v2287 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2249 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
rawvalue: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2250 v2286 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2243 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2120 v2282 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2081 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a2095 a2149 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i21 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:121) [bci: 6]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 19]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v444 i75 v1292 v2129 v2177 i823 v612 v661 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i20 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:121) [bci: 6]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 19]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i94 i528 i349 v838 a2032 a2095 a2149 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:177) [bci: 8]
stamp: void
trueSuccessorProbability: 2.759914994618166E-4
=== Inputs ===
condition: v8 
=== Succesors ===
trueSuccessor: v9 
falseSuccessor: v10 
=== Usages ===
=== Predecessor ===
i2321 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v8 #trueSuccessor: v9 #falseSuccessor: v10  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4553726768201292438
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:177) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2322 
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2322  <|@  <|@
f <@~|@floating>@ <|@
tid v2425 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v2322 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2322 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 19]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2425 
=== Succesors ===
next: a1093 
=== Usages ===
v1965 v2067 v2379 
=== Predecessor ===
v9 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2425 #next: a1093  <|@  <|@
f <@~|@floating>@ <|@
tid v2379 <|@
d <@d|@=== Debug Properties ===
displacement: 224
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v2322 
=== Succesors ===
=== Usages ===
a1093 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v2322  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1093 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ArrayKlass::_component_mirror:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:124) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 19]
nullCheck: false
stamp: a!# Ljava/lang/Class;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2379 
=== Succesors ===
next: v1972 
=== Usages ===
v1969 
=== Predecessor ===
v2322 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2379 #next: v1972  <|@  <|@
f <@~|@floating>@ <|@
tid a1966 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
rawvalue: Class:void
stableDimension: 0
stamp: a!# Ljava/lang/Class;
stampKind: a -
value: Object[Class:void]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1969 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1969 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.throwsIllegalArgumentException(DynamicNewArrayNode.java:120) [bci: 2]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:369) [bci: 35]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1093 
y: a1966 
=== Succesors ===
=== Usages ===
v1972 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a1093 y: a1966  <|@  <|@
tid ?105 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray(Object[])>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 176
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - - - i107 
=== Succesors ===
=== Usages ===
a2032 v1328 v1973 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - - - i107  <|@  <|@
f <@*|@fixed>@ <|@
tid v1972 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:369) [bci: 49]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1969 
=== Succesors ===
trueSuccessor: v1971 
falseSuccessor: v1970 
=== Usages ===
=== Predecessor ===
a1093 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1969 #trueSuccessor: v1971 #falseSuccessor: v1970  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1971 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:370) [bci: 52]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1973 
=== Usages ===
=== Predecessor ===
v1972 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1973  <|@  <|@
f <@*|@fixed>@ <|@
tid v1973 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.DeoptimizeNode.deopt(DeoptimizationAction, DeoptimizationReason) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:370) [bci: 58]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?105 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1971 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?105  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4553726768201292438
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1970 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:373) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1998 
=== Usages ===
=== Predecessor ===
v1972 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1998  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1998 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2058 
=== Usages ===
v2426 v2427 
=== Predecessor ===
v1970 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2058  <|@  <|@
f <@~|@floating>@ <|@
tid v2426 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1998 
index: - 
=== Succesors ===
=== Usages ===
j2058 v2062 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1998 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2058 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2426 
=== Succesors ===
next: j2059 
=== Usages ===
j2002 v2428 v2429 v2435 v2430 a2031 v2431 v2432 v2433 v2434 
=== Predecessor ===
j1998 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2426 #next: j2059  <|@  <|@
f <@~|@floating>@ <|@
tid v2427 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1998 
index: - 
=== Succesors ===
=== Usages ===
j2059 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1998 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2059 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2427 
=== Succesors ===
next: v2006 
=== Usages ===
v2003 
=== Predecessor ===
j2058 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2427 #next: v2006  <|@  <|@
f <@~|@floating>@ <|@
tid i922 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1992 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1992 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i107 
y: i922 
=== Succesors ===
=== Usages ===
i2298 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i107 y: i922  <|@  <|@
f <@~|@floating>@ <|@
tid i2297 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2298 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2298 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: i32 [-2147483645 - 2147483647] ⇊0000000000000003
=== Inputs ===
x: i1992 
y: i2297 
=== Succesors ===
=== Usages ===
i1997 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1992 y: i2297  <|@  <|@
f <@~|@floating>@ <|@
tid i1996 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1997 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1997 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i2298 
y: i1996 
=== Succesors ===
=== Usages ===
j2001 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i2298 y: i1996  <|@  <|@
f <@~|@floating>@ <|@
tid j2001 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i1997 
=== Succesors ===
=== Usages ===
j2002 v2023 v2431 v2432 v2433 v2434 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1997  <|@  <|@
f <@~|@floating>@ <|@
tid j2002 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: i64
=== Inputs ===
x: j2001 
y: j2058 
=== Succesors ===
=== Usages ===
v2003 v2062 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2001 y: j2058  <|@  <|@
f <@~|@floating>@ <|@
tid v2003 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2059 
y: j2002 
=== Succesors ===
=== Usages ===
v2006 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2059 y: j2002  <|@  <|@
f <@*|@fixed>@ <|@
tid v2006 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2003 
=== Succesors ===
trueSuccessor: v2004 
falseSuccessor: v2005 
=== Usages ===
=== Predecessor ===
j2059 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2003 #trueSuccessor: v2004 #falseSuccessor: v2005  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B19" 
    xhandlers
    flags 
    probability 4523627091285684586
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2004 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2032 
=== Usages ===
=== Predecessor ===
v2006 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2032  <|@  <|@
f <@~|@floating>@ <|@
tid v1965 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 19]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v2322 
=== Succesors ===
=== Usages ===
a2032 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v2322  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2032 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?105 
arguments: v1965 i107 i20 
=== Succesors ===
next: v2035 
=== Usages ===
a2036 
=== Predecessor ===
v2004 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?105 arguments: v1965 i107 i20 #next: v2035  <|@  <|@
f <@*|@fixed>@ <|@
tid v2035 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2034 
=== Predecessor ===
a2032 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4553675856755721523
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2005 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2062 
=== Usages ===
=== Predecessor ===
v2006 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2062  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2062 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2426 
value: j2002 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2045 
=== Usages ===
=== Predecessor ===
v2005 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2426 value: j2002 stateAfter: - lastLocationAccess: - #next: v2045  <|@  <|@
f <@~|@floating>@ <|@
tid v2431 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j2001 
index: j2058 
=== Succesors ===
=== Usages ===
v2045 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2001 index: j2058  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2045 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
address: v2431 
=== Succesors ===
next: v2048 
=== Usages ===
=== Predecessor ===
v2062 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2431 #next: v2048  <|@  <|@
f <@~|@floating>@ <|@
tid v2432 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j2001 
index: j2058 
=== Succesors ===
=== Usages ===
v2048 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2001 index: j2058  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2048 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
address: v2432 
=== Succesors ===
next: v2051 
=== Usages ===
=== Predecessor ===
v2045 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2432 #next: v2051  <|@  <|@
f <@~|@floating>@ <|@
tid v2433 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j2001 
index: j2058 
=== Succesors ===
=== Usages ===
v2051 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2001 index: j2058  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2051 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
address: v2433 
=== Succesors ===
next: v2054 
=== Usages ===
=== Predecessor ===
v2048 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2433 #next: v2054  <|@  <|@
f <@~|@floating>@ <|@
tid v2434 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j2001 
index: j2058 
=== Succesors ===
=== Usages ===
v2054 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2001 index: j2058  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2054 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
address: v2434 
=== Succesors ===
next: v2063 
=== Usages ===
=== Predecessor ===
v2051 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2434 #next: v2063  <|@  <|@
f <@~|@floating>@ <|@
tid v2428 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2058 
index: - 
=== Succesors ===
=== Usages ===
v2063 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2058 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2063 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2428 
value: i107 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2064 
=== Usages ===
=== Predecessor ===
v2054 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2428 value: i107 stateAfter: - lastLocationAccess: - #next: v2064  <|@  <|@
f <@~|@floating>@ <|@
tid v2429 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2058 
index: - 
=== Succesors ===
=== Usages ===
v2064 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2058 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1967 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2064 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2064 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2429 
value: j1967 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2067 
=== Usages ===
=== Predecessor ===
v2063 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2429 value: j1967 stateAfter: - lastLocationAccess: - #next: v2067  <|@  <|@
f <@~|@floating>@ <|@
tid v2435 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2058 
index: - 
=== Succesors ===
=== Usages ===
v2067 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2058 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2067 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2435 
value: v2322 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2020 
=== Usages ===
=== Predecessor ===
v2064 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2435 value: v2322 stateAfter: - lastLocationAccess: - #next: v2020  <|@  <|@
f <@~|@floating>@ <|@
tid j924 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2022 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2020 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.fillMemory(NewObjectSnippets.java:489) [bci: 233]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:556) [bci: 37]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2021 
=== Predecessor ===
v2067 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" 
    successors "B17" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4558179456383092019
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2022 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:556) [bci: 37]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2021 
values: j924 j2028 
=== Succesors ===
=== Usages ===
v2023 v2430 j2028 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2021 values: j924 j2028  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2021 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.fillMemory(NewObjectSnippets.java:489) [bci: 233]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:556) [bci: 37]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2020 
=== Succesors ===
next: v2026 
=== Usages ===
j2022 v2025 v2029 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2020 #next: v2026  <|@  <|@
f <@~|@floating>@ <|@
tid v2023 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.fillMemory(NewObjectSnippets.java:489) [bci: 241]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:556) [bci: 37]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2022 
y: j2001 
=== Succesors ===
=== Usages ===
v2026 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2022 y: j2001  <|@  <|@
f <@*|@fixed>@ <|@
tid v2026 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.fillMemory(NewObjectSnippets.java:489) [bci: 241]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:556) [bci: 37]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2023 
=== Succesors ===
trueSuccessor: v2024 
falseSuccessor: v2025 
=== Usages ===
=== Predecessor ===
v2021 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2023 #trueSuccessor: v2024 #falseSuccessor: v2025  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4553675856755721523
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2024 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.fillMemory(NewObjectSnippets.java:490) [bci: 244]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:556) [bci: 37]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2068 
=== Usages ===
=== Predecessor ===
v2026 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2068  <|@  <|@
f <@~|@floating>@ <|@
tid v2430 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2058 
index: j2022 
=== Succesors ===
=== Usages ===
v2068 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2058 index: j2022  <|@  <|@
f <@~|@floating>@ <|@
tid j1601 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2068 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2068 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.fillMemory(NewObjectSnippets.java:490) [bci: 251]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:556) [bci: 37]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2430 
value: j1601 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2029 
=== Usages ===
=== Predecessor ===
v2024 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2430 value: j1601 stateAfter: - lastLocationAccess: - #next: v2029  <|@  <|@
f <@~|@floating>@ <|@
tid j1959 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2028 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2028 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.fillMemory(NewObjectSnippets.java:489) [bci: 258]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:556) [bci: 37]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: i64
=== Inputs ===
x: j2022 
y: j1959 
=== Succesors ===
=== Usages ===
j2022 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2022 y: j1959  <|@  <|@
f <@*|@fixed>@ <|@
tid v2029 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.fillMemory(NewObjectSnippets.java:489) [bci: 233]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:556) [bci: 37]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
loopBegin: v2021 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2068 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2021  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4553675856755721523
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2025 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.fillMemory(NewObjectSnippets.java:493) [bci: 266]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:556) [bci: 37]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2021 
=== Succesors ===
next: v2030 
=== Usages ===
=== Predecessor ===
v2026 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2021 #next: v2030  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2030 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2031 
=== Usages ===
=== Predecessor ===
v2025 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a2031  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2031 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j2058 
=== Succesors ===
next: v2033 
=== Usages ===
a2036 
=== Predecessor ===
v2030 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2058 #next: v2033  <|@  <|@
f <@*|@fixed>@ <|@
tid v2033 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2034 
=== Predecessor ===
a2031 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B14" 
    successors "B20" "B23" 
    xhandlers
    flags 
    probability 4553726768201292438
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a2036 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v2034 
values: a2031 a2032 
=== Succesors ===
=== Usages ===
a1270 v2436 a1271 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2034 values: a2031 a2032  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2034 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2033 v2035 
=== Succesors ===
next: v2323 
=== Usages ===
a2036 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2033 v2035 #next: v2323  <|@  <|@
f <@~|@floating>@ <|@
tid v2436 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a2036 
index: - 
=== Succesors ===
=== Usages ===
v2323 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2036 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2323 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 26]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2436 
=== Succesors ===
next: v1330 
=== Usages ===
v2236 
=== Predecessor ===
v2034 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2436 #next: v1330  <|@  <|@
f <@~|@floating>@ <|@
tid v2235 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 26]
rawvalue: meta{HotSpotType<[Ljava/lang/Class;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[Ljava/lang/Class;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2236 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2236 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 26]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2323 
y: v2235 
=== Succesors ===
=== Usages ===
v1330 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2323 y: v2235  <|@  <|@
f <@*|@fixed>@ <|@
tid v1330 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 26]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2236 
=== Succesors ===
trueSuccessor: v1327 
falseSuccessor: v1329 
=== Usages ===
=== Predecessor ===
v2323 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2236 #trueSuccessor: v1327 #falseSuccessor: v1329  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4553726768201292438
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1327 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v277 
=== Usages ===
=== Predecessor ===
v1330 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v277  <|@  <|@
f <@*|@fixed>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$SubList; target_method=iterator target_method_class=Ljava/util/ArrayList$SubList; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 0.9408274225153865
=== Inputs ===
condition: v2231 
=== Succesors ===
trueSuccessor: v274 
falseSuccessor: v276 
=== Usages ===
=== Predecessor ===
v1327 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2231 #trueSuccessor: v274 #falseSuccessor: v276  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 4553425512055502574
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$SubList; target_method=iterator target_method_class=Ljava/util/ArrayList$SubList; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v755 
=== Usages ===
=== Predecessor ===
v277 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v755  <|@  <|@
f <@*|@fixed>@ <|@
tid v755 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v754 
=== Predecessor ===
v274 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B36" 
    xhandlers
    flags 
    probability 4535441323467356793
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v758 
=== Usages ===
=== Predecessor ===
v277 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v758  <|@  <|@
f <@*|@fixed>@ <|@
tid v758 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v757 
=== Predecessor ===
v276 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1329 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1328 
=== Usages ===
=== Predecessor ===
v1330 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1328  <|@  <|@
f <@*|@fixed>@ <|@
tid v1328 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1097
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 26]
reason: TypeCheckedInliningViolated
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?105 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1329 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?105  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B25" "B35" 
    xhandlers
    flags 
    probability 4607179932889589141
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:177) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v784 
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v784  <|@  <|@
f <@*|@fixed>@ <|@
tid v784 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$SubList; target_method=iterator target_method_class=Ljava/util/ArrayList$SubList; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 0.9408274225153865
=== Inputs ===
condition: v2231 
=== Succesors ===
trueSuccessor: v782 
falseSuccessor: v783 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2231 #trueSuccessor: v782 #falseSuccessor: v783  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606647100791496063
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v782 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$SubList; target_method=iterator target_method_class=Ljava/util/ArrayList$SubList; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v756 
=== Usages ===
=== Predecessor ===
v784 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v756  <|@  <|@
f <@*|@fixed>@ <|@
tid v756 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v754 
=== Predecessor ===
v782 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" "B25" 
    successors "B27" "B33" 
    xhandlers
    flags 
    probability 4606649439604196894
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1270 <|@
d <@d|@=== Debug Properties ===
stamp: a! [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v754 
values: a2036 a2 
=== Succesors ===
=== Usages ===
?68 a764 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v754 values: a2036 a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v754 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v755 v756 
=== Succesors ===
next: a2324 
=== Usages ===
a1270 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v755 v756 #next: a2324  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2324 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList.this$0
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 1]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1099) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: n# Ljava/util/ArrayList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2411 
=== Succesors ===
next: i2325 
=== Usages ===
v2412 
=== Predecessor ===
v754 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2411 #next: i2325  <|@  <|@
tid ?68 <|@
d <@d|@=== Debug Properties ===
bci: 32
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray(Object[])>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 179
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - - - a1270 
=== Succesors ===
=== Usages ===
v1857 a2095 i2325 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - - - a1270  <|@  <|@
f <@~|@floating>@ <|@
tid v2412 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2324 
=== Succesors ===
=== Usages ===
i2325 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2324  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2325 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 4]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1099) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?68 
guard: - 
address: v2412 
=== Succesors ===
next: i2326 
=== Usages ===
v440 v2127 
=== Predecessor ===
a2324 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?68 guard: - address: v2412 #next: i2326  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2326 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 8]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1099) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2413 
=== Succesors ===
next: v1338 
=== Usages ===
v440 
=== Predecessor ===
i2325 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2413 #next: v1338  <|@  <|@
f <@~|@floating>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 11]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1099) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2325 
y: i2326 
=== Succesors ===
=== Usages ===
v1338 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2325 y: i2326  <|@  <|@
f <@*|@fixed>@ <|@
tid v1338 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 11]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1099) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v440 
=== Succesors ===
trueSuccessor: v1335 
falseSuccessor: v1337 
=== Usages ===
=== Predecessor ===
i2326 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v440 #trueSuccessor: v1335 #falseSuccessor: v1337  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4606649439604196894
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1335 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 11]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1099) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2327 
=== Usages ===
=== Predecessor ===
v1338 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2327  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2327 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList.size
nodeSourcePosition: at java.util.ArrayList$SubList.rangeCheckForAdd(ArrayList.java:1229) [bci: 6]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1100) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2414 
=== Succesors ===
next: v1342 
=== Usages ===
v444 
=== Predecessor ===
v1335 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2414 #next: v1342  <|@  <|@
f <@~|@floating>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList$SubList.rangeCheckForAdd(ArrayList.java:1229) [bci: 9]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1100) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2327 
y: i21 
=== Succesors ===
=== Usages ===
v1342 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2327 y: i21  <|@  <|@
f <@*|@fixed>@ <|@
tid v1342 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.rangeCheckForAdd(ArrayList.java:1229) [bci: 9]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1100) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v444 
=== Succesors ===
trueSuccessor: v1341 
falseSuccessor: v1339 
=== Usages ===
=== Predecessor ===
i2327 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v444 #trueSuccessor: v1341 #falseSuccessor: v1339  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1341 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.rangeCheckForAdd(ArrayList.java:1229) [bci: 9]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1100) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1858 
=== Usages ===
=== Predecessor ===
v1342 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1858  <|@  <|@
f <@~|@floating>@ <|@
tid i1859 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -284947
stableDimension: 0
stamp: i32 [-284947] ⇊00000000fffba6ed ⇈00000000fffba6ed
stampKind: i32
value: int[-284947|0xfffffffffffba6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1855 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1858 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1852 
=== Predecessor ===
v1341 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4606649439604196894
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.rangeCheckForAdd(ArrayList.java:1229) [bci: 9]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1100) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2083 
=== Usages ===
=== Predecessor ===
v1342 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2083  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2083 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2099 
=== Usages ===
v2437 v2438 
=== Predecessor ===
v1339 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2099  <|@  <|@
f <@~|@floating>@ <|@
tid v2437 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2083 
index: - 
=== Succesors ===
=== Usages ===
j2099 v2101 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2083 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2099 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2437 
=== Succesors ===
next: j2100 
=== Usages ===
j2238 j2105 v2455 
=== Predecessor ===
j2083 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2437 #next: j2100  <|@  <|@
f <@~|@floating>@ <|@
tid v2438 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2083 
index: - 
=== Succesors ===
=== Usages ===
j2100 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2083 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2100 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2438 
=== Succesors ===
next: v2091 
=== Usages ===
v2088 
=== Predecessor ===
j2099 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2438 #next: v2091  <|@  <|@
f <@~|@floating>@ <|@
tid j2237 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 40
stableDimension: 0
stamp: i64 [40] ⇊0000000000000028 ⇈0000000000000028
stampKind: i64
value: long[40|0x28]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2238 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2238 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2099 
y: j2237 
=== Succesors ===
=== Usages ===
v2088 v2101 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2099 y: j2237  <|@  <|@
f <@~|@floating>@ <|@
tid v2088 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2100 
y: j2238 
=== Succesors ===
=== Usages ===
v2091 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2100 y: j2238  <|@  <|@
f <@*|@fixed>@ <|@
tid v2091 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2088 
=== Succesors ===
trueSuccessor: v2089 
falseSuccessor: v2090 
=== Usages ===
=== Predecessor ===
j2100 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2088 #trueSuccessor: v2089 #falseSuccessor: v2090  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576577122618762551
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2089 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a2095 
=== Usages ===
=== Predecessor ===
v2091 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2095  <|@  <|@
f <@~|@floating>@ <|@
tid i2240 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 6
stableDimension: 0
stamp: i32 [6] ⇊0000000000000006 ⇈0000000000000006
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
a2095 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2095 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?68 
arguments: v2081 i2240 i20 
=== Succesors ===
next: j2096 
=== Usages ===
j2096 
=== Predecessor ===
v2089 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?68 arguments: v2081 i2240 i20 #next: j2096  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2096 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2095 
=== Succesors ===
next: v2106 
=== Usages ===
j2105 
=== Predecessor ===
a2095 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a2095 #next: v2106  <|@  <|@
f <@*|@fixed>@ <|@
tid v2106 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2103 
=== Predecessor ===
j2096 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606564697403607689
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2090 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2101 
=== Usages ===
=== Predecessor ===
v2091 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2101  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2101 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2437 
value: j2238 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2098 
=== Usages ===
=== Predecessor ===
v2090 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2437 value: j2238 stateAfter: - lastLocationAccess: - #next: v2098  <|@  <|@
f <@~|@floating>@ <|@
tid v2455 <|@
d <@d|@=== Debug Properties ===
displacement: 232
scale: Times1
stamp: void*
=== Inputs ===
base: j2099 
index: - 
=== Succesors ===
=== Usages ===
v2098 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2099 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2098 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v2455 
=== Succesors ===
next: v2104 
=== Usages ===
=== Predecessor ===
v2101 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2455 #next: v2104  <|@  <|@
f <@*|@fixed>@ <|@
tid v2104 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2103 
=== Predecessor ===
v2098 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B64" 
    xhandlers
    flags 
    probability 4606649439604196894
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2105 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2103 
values: j2099 j2096 
=== Succesors ===
=== Usages ===
v2441 v2440 a1603 v2456 v2457 v2458 v2459 v2460 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2103 values: j2099 j2096  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2103 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2104 v2106 
=== Succesors ===
next: a1603 
=== Usages ===
j2105 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2104 v2106 #next: a1603  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1603 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j2105 
=== Succesors ===
next: j2116 
=== Usages ===
a1609 
=== Predecessor ===
v2103 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2105 #next: j2116  <|@  <|@
f <@~|@floating>@ <|@
tid v1720 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
rawvalue: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j2111 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2111 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1720 
=== Succesors ===
=== Usages ===
v2439 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1720  <|@  <|@
f <@~|@floating>@ <|@
tid v2439 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j2111 
index: - 
=== Succesors ===
=== Usages ===
j2116 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2111 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2116 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2439 
=== Succesors ===
next: v2117 
=== Usages ===
v2117 
=== Predecessor ===
a1603 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2439 #next: v2117  <|@  <|@
f <@~|@floating>@ <|@
tid v2440 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2105 
index: - 
=== Succesors ===
=== Usages ===
v2117 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2105 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2117 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2440 
value: j2116 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2120 
=== Usages ===
=== Predecessor ===
j2116 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2440 value: j2116 stateAfter: - lastLocationAccess: - #next: v2120  <|@  <|@
f <@~|@floating>@ <|@
tid v2441 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2105 
index: - 
=== Succesors ===
=== Usages ===
v2120 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2105 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2120 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2441 
value: v2243 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2125 
=== Usages ===
=== Predecessor ===
v2117 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2441 value: v2243 stateAfter: - lastLocationAccess: - #next: v2125  <|@  <|@
f <@~|@floating>@ <|@
tid v2456 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2105 
index: - 
=== Succesors ===
=== Usages ===
v2125 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2105 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j2123 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4294967296
stableDimension: 0
stamp: i64 [-4294967296] ⇊ffffffff00000000 ⇈ffffffff00000000
stampKind: i64
value: long[-4294967296|0xffffffff00000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2125 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2125 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2456 
value: j2123 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2127 
=== Usages ===
=== Predecessor ===
v2120 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2456 value: j2123 stateAfter: - lastLocationAccess: - #next: v2127  <|@  <|@
f <@~|@floating>@ <|@
tid v2457 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j2105 
index: - 
=== Succesors ===
=== Usages ===
v2127 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2105 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2127 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2457 
value: i2325 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2129 
=== Usages ===
=== Predecessor ===
v2125 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2457 value: i2325 stateAfter: - lastLocationAccess: - #next: v2129  <|@  <|@
f <@~|@floating>@ <|@
tid v2458 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j2105 
index: - 
=== Succesors ===
=== Usages ===
v2129 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2105 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2129 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2458 
value: i21 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i2328 
=== Usages ===
=== Predecessor ===
v2127 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2458 value: i21 stateAfter: - lastLocationAccess: - #next: i2328  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2328 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList.offset
nodeSourcePosition: at java.util.ArrayList$SubList.listIterator(ArrayList.java:1101) [bci: 10]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2415 
=== Succesors ===
next: v2131 
=== Usages ===
v2131 
=== Predecessor ===
v2129 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2415 #next: v2131  <|@  <|@
f <@~|@floating>@ <|@
tid v2459 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: j2105 
index: - 
=== Succesors ===
=== Usages ===
v2131 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2105 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2131 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2459 
value: i2328 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2133 
=== Usages ===
=== Predecessor ===
i2328 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2459 value: i2328 stateAfter: - lastLocationAccess: - #next: v2133  <|@  <|@
f <@~|@floating>@ <|@
tid v2460 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: j2105 
index: - 
=== Succesors ===
=== Usages ===
v2133 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2105 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a1606 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! Ljava/util/AbstractCollection;
=== Inputs ===
value: a1 
=== Succesors ===
=== Usages ===
v2133 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2133 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2460 
value: a1606 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1609 
=== Usages ===
=== Predecessor ===
v2131 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2460 value: a1606 stateAfter: - lastLocationAccess: - #next: a1609  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1609 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1603 
=== Succesors ===
next: v1610 
=== Usages ===
a270 
=== Predecessor ===
v2133 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1603 #next: v1610  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1610 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v275 
=== Usages ===
=== Predecessor ===
a1609 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v275  <|@  <|@
f <@*|@fixed>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v267 
=== Predecessor ===
v1610 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1337 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 11]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1099) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1860 
=== Usages ===
=== Predecessor ===
v1338 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1860  <|@  <|@
f <@~|@floating>@ <|@
tid i1861 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -284179
stableDimension: 0
stamp: i32 [-284179] ⇊00000000fffba9ed ⇈00000000fffba9ed
stampKind: i32
value: int[-284179|0xfffffffffffba9ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1855 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1860 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1852 
=== Predecessor ===
v1337 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B33" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1855 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-284947 - -282635] ⇊00000000fffba0e5 ⇈00000000fffbaffd
valueDescription: i32
=== Inputs ===
merge: v1852 
values: i1859 i1861 
=== Succesors ===
=== Usages ===
v1857 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1852 values: i1859 i1861  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1852 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1858 v1860 
=== Succesors ===
next: v1857 
=== Usages ===
i1855 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1858 v1860 #next: v1857  <|@  <|@
f <@*|@fixed>@ <|@
tid v1857 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?68 
actionAndReason: i1855 
speculation: a1836 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1852 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?68 actionAndReason: i1855 speculation: a1836  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B36" 
    xhandlers
    flags 
    probability 4588686134605283673
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v783 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v760 
=== Usages ===
=== Predecessor ===
v784 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v760  <|@  <|@
f <@*|@fixed>@ <|@
tid v760 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v757 
=== Predecessor ===
v783 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B22" "B35" 
    successors "B37" "B63" 
    xhandlers
    flags 
    probability 4588688488168922656
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1271 <|@
d <@d|@=== Debug Properties ===
stamp: a! [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v757 
values: a2036 a2 
=== Succesors ===
=== Usages ===
?1825 a764 a764 ?604 ?759 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v757 values: a2036 a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v757 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v758 v760 
=== Succesors ===
next: v589 
=== Usages ===
a1271 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v758 v760 #next: v589  <|@  <|@
f <@~|@floating>@ <|@
tid v2229 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2310 
y: v2228 
=== Succesors ===
=== Usages ===
v589 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2310 y: v2228  <|@  <|@
f <@*|@fixed>@ <|@
tid v589 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/RandomAccessSubList; target_method=iterator target_method_class=Ljava/util/SubList; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 0.8652052238805972
=== Inputs ===
condition: v2229 
=== Succesors ===
trueSuccessor: v586 
falseSuccessor: v588 
=== Usages ===
=== Predecessor ===
v757 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2229 #trueSuccessor: v586 #falseSuccessor: v588  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B61" 
    xhandlers
    flags 
    probability 4587539003186891847
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/RandomAccessSubList; target_method=iterator target_method_class=Ljava/util/SubList; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2329 
=== Usages ===
=== Predecessor ===
v589 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2329  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2329 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.l
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 5]
at java.util.SubList.listIterator(AbstractList.java:695) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: n Ljava/util/AbstractList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2414 
=== Succesors ===
next: i2330 
=== Usages ===
?669 v2200 v2416 v2419 v2442 v2202 ?820 v2474 
=== Predecessor ===
v586 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2414 #next: i2330  <|@  <|@
tid ?759 <|@
d <@d|@=== Debug Properties ===
bci: 32
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray(Object[])>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 179
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - - - a1271 
=== Succesors ===
=== Usages ===
v1939 i2330 i2336 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - - - a1271  <|@  <|@
f <@~|@floating>@ <|@
tid v2416 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2329 
=== Succesors ===
=== Usages ===
i2330 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2329  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2330 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 8]
at java.util.SubList.listIterator(AbstractList.java:695) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?759 
guard: - 
address: v2416 
=== Succesors ===
next: i2331 
=== Usages ===
v608 v2198 
=== Predecessor ===
a2329 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?759 guard: - address: v2416 #next: i2331  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2331 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 1]
at java.util.SubList.listIterator(AbstractList.java:695) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2413 
=== Succesors ===
next: v1350 
=== Usages ===
v608 
=== Predecessor ===
i2330 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2413 #next: v1350  <|@  <|@
f <@~|@floating>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.listIterator(AbstractList.java:695) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2330 
y: i2331 
=== Succesors ===
=== Usages ===
v1350 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2330 y: i2331  <|@  <|@
f <@*|@fixed>@ <|@
tid v1350 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.listIterator(AbstractList.java:695) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v608 
=== Succesors ===
trueSuccessor: v1347 
falseSuccessor: v1349 
=== Usages ===
=== Predecessor ===
i2331 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v608 #trueSuccessor: v1347 #falseSuccessor: v1349  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4587539003186891847
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1347 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.listIterator(AbstractList.java:695) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2332 
=== Usages ===
=== Predecessor ===
v1350 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2332  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2332 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.size
nodeSourcePosition: at java.util.SubList.rangeCheckForAdd(AbstractList.java:759) [bci: 6]
at java.util.SubList.listIterator(AbstractList.java:696) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2415 
=== Succesors ===
next: v1354 
=== Usages ===
v612 
=== Predecessor ===
v1347 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2415 #next: v1354  <|@  <|@
f <@~|@floating>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.SubList.rangeCheckForAdd(AbstractList.java:759) [bci: 9]
at java.util.SubList.listIterator(AbstractList.java:696) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2332 
y: i21 
=== Succesors ===
=== Usages ===
v1354 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2332 y: i21  <|@  <|@
f <@*|@fixed>@ <|@
tid v1354 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.rangeCheckForAdd(AbstractList.java:759) [bci: 9]
at java.util.SubList.listIterator(AbstractList.java:696) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v612 
=== Succesors ===
trueSuccessor: v1353 
falseSuccessor: v1351 
=== Usages ===
=== Predecessor ===
i2332 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v612 #trueSuccessor: v1353 #falseSuccessor: v1351  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1353 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.rangeCheckForAdd(AbstractList.java:759) [bci: 9]
at java.util.SubList.listIterator(AbstractList.java:696) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1940 
=== Usages ===
=== Predecessor ===
v1354 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1940  <|@  <|@
f <@~|@floating>@ <|@
tid i1941 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -289043
stableDimension: 0
stamp: i32 [-289043] ⇊00000000fffb96ed ⇈00000000fffb96ed
stampKind: i32
value: int[-289043|0xfffffffffffb96ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1937 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1940 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1934 
=== Predecessor ===
v1353 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4587539003186891847
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1351 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.rangeCheckForAdd(AbstractList.java:759) [bci: 9]
at java.util.SubList.listIterator(AbstractList.java:696) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2333 
=== Usages ===
=== Predecessor ===
v1354 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2333  <|@  <|@
f <@~|@floating>@ <|@
tid v2417 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i2333 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2333 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.offset
nodeSourcePosition: at java.util.SubList.access$000(AbstractList.java:613) [bci: 1]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 30]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2417 
=== Succesors ===
next: v1358 
=== Usages ===
v2194 v838 v666 ?669 v661 v825 ?820 ?820 
=== Predecessor ===
v1351 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2417 #next: v1358  <|@  <|@
f <@~|@floating>@ <|@
tid v661 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2333 
y: i21 
=== Succesors ===
=== Usages ===
v1358 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2333 y: i21  <|@  <|@
f <@*|@fixed>@ <|@
tid v1358 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v661 
=== Succesors ===
trueSuccessor: v1357 
falseSuccessor: v1355 
=== Usages ===
=== Predecessor ===
i2333 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v661 #trueSuccessor: v1357 #falseSuccessor: v1355  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1357 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1944 
=== Usages ===
=== Predecessor ===
v1358 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1944  <|@  <|@
f <@~|@floating>@ <|@
tid i1945 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -291091
stableDimension: 0
stamp: i32 [-291091] ⇊00000000fffb8eed ⇈00000000fffb8eed
stampKind: i32
value: int[-291091|0xfffffffffffb8eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1937 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1944 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1934 
=== Predecessor ===
v1357 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B60" 
    xhandlers
    flags 
    probability 4587539003186891847
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1355 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2334 
=== Usages ===
=== Predecessor ===
v1358 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2334  <|@  <|@
f <@~|@floating>@ <|@
tid v2442 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2329 
=== Succesors ===
=== Usages ===
v2334 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2329  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2334 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2442 
=== Succesors ===
next: v1135 
=== Usages ===
v2418 v2250 v2252 v2254 
=== Predecessor ===
v1355 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2442 #next: v1135  <|@  <|@
f <@~|@floating>@ <|@
tid v2418 <|@
d <@d|@=== Debug Properties ===
displacement: 696
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v2334 
=== Succesors ===
=== Usages ===
v1135 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v2334  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1135 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v2418 
=== Succesors ===
next: v1362 
=== Usages ===
v648 
=== Predecessor ===
v2334 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2418 #next: v1362  <|@  <|@
f <@~|@floating>@ <|@
tid v646 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
rawvalue: meta{HotSpotMethod<AbstractList.listIterator(int)>}
stableDimension: 0
stamp: Method*!
stampKind: Method*
value: meta{HotSpotMethod<AbstractList.listIterator(int)>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v648 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v648 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1135 
y: v646 
=== Succesors ===
=== Usages ===
v1362 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1135 y: v646  <|@  <|@
f <@*|@fixed>@ <|@
tid v1362 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=null target_method=listIterator target_method_class=Ljava/util/AbstractList; position=at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v648 
=== Succesors ===
trueSuccessor: v1359 
falseSuccessor: v1361 
=== Usages ===
=== Predecessor ===
v1135 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v648 #trueSuccessor: v1359 #falseSuccessor: v1361  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B47" 
    xhandlers
    flags 
    probability 4587539003186891847
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1359 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=null target_method=listIterator target_method_class=Ljava/util/AbstractList; position=at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v692 
=== Usages ===
=== Predecessor ===
v1362 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v692  <|@  <|@
f <@~|@floating>@ <|@
tid v2250 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2334 
y: v2249 
=== Succesors ===
=== Usages ===
v692 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2334 y: v2249  <|@  <|@
f <@*|@fixed>@ <|@
tid v692 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=size target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 0.5044648172401477
=== Inputs ===
condition: v2250 
=== Succesors ===
trueSuccessor: v688 
falseSuccessor: v691 
=== Usages ===
=== Predecessor ===
v1359 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2250 #trueSuccessor: v688 #falseSuccessor: v691  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4583101288029259690
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v688 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=size target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2335 
=== Usages ===
=== Predecessor ===
v692 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2335  <|@  <|@
f <@~|@floating>@ <|@
tid v2419 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2329 
=== Succesors ===
=== Usages ===
a2335 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2329  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2335 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Arrays$ArrayList.a
nodeSourcePosition: at java.util.Arrays$ArrayList.size(Arrays.java:3818) [bci: 1]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2419 
=== Succesors ===
next: i2336 
=== Usages ===
v2420 
=== Predecessor ===
v688 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2419 #next: i2336  <|@  <|@
f <@~|@floating>@ <|@
tid v2420 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2335 
=== Succesors ===
=== Usages ===
i2336 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2335  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2336 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.Arrays$ArrayList.size(Arrays.java:3818) [bci: 4]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?759 
guard: - 
address: v2420 
=== Succesors ===
next: v1370 
=== Usages ===
i823 v825 
=== Predecessor ===
a2335 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?759 guard: - address: v2420 #next: v1370  <|@  <|@
f <@~|@floating>@ <|@
tid v825 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2336 
y: i2333 
=== Succesors ===
=== Usages ===
v1370 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2336 y: i2333  <|@  <|@
f <@*|@fixed>@ <|@
tid v1370 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v825 
=== Succesors ===
trueSuccessor: v1369 
falseSuccessor: v1367 
=== Usages ===
=== Predecessor ===
i2336 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v825 #trueSuccessor: v1369 #falseSuccessor: v1367  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1369 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1950 
=== Usages ===
=== Predecessor ===
v1370 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1950  <|@  <|@
f <@~|@floating>@ <|@
tid i1951 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -293395
stableDimension: 0
stamp: i32 [-293395] ⇊00000000fffb85ed ⇈00000000fffb85ed
stampKind: i32
value: int[-293395|0xfffffffffffb85ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1937 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1950 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1934 
=== Predecessor ===
v1369 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B55" 
    xhandlers
    flags 
    probability 4583101288029259690
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1367 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v821 
=== Usages ===
=== Predecessor ===
v1370 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v821  <|@  <|@
f <@*|@fixed>@ <|@
tid v821 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v819 
=== Predecessor ===
v1367 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" "B51" 
    xhandlers
    flags 
    probability 4582969519089783012
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v691 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v701 
=== Usages ===
=== Predecessor ===
v692 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v701  <|@  <|@
f <@~|@floating>@ <|@
tid v2251 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
rawvalue: meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2252 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2252 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2334 
y: v2251 
=== Succesors ===
=== Usages ===
v701 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2334 y: v2251  <|@  <|@
f <@*|@fixed>@ <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Collections$EmptyList; target_method=size target_method_class=Ljava/util/Collections$EmptyList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 0.5252282556463239
=== Inputs ===
condition: v2252 
=== Succesors ===
trueSuccessor: v697 
falseSuccessor: v700 
=== Usages ===
=== Predecessor ===
v691 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2252 #trueSuccessor: v697 #falseSuccessor: v700  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4578834872492947213
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v697 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Collections$EmptyList; target_method=size target_method_class=Ljava/util/Collections$EmptyList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1374 
=== Usages ===
=== Predecessor ===
v701 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1374  <|@  <|@
f <@~|@floating>@ <|@
tid v838 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2333 
y: i20 
=== Succesors ===
=== Usages ===
v1374 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2333 y: i20  <|@  <|@
f <@*|@fixed>@ <|@
tid v1374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v838 
=== Succesors ===
trueSuccessor: v1371 
falseSuccessor: v1373 
=== Usages ===
=== Predecessor ===
v697 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v838 #trueSuccessor: v1371 #falseSuccessor: v1373  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    probability 4578834872492947213
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1371 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v837 
=== Usages ===
=== Predecessor ===
v1374 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v837  <|@  <|@
f <@*|@fixed>@ <|@
tid v837 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v819 
=== Predecessor ===
v1371 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1373 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1954 
=== Usages ===
=== Predecessor ===
v1374 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1954  <|@  <|@
f <@~|@floating>@ <|@
tid i1955 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -293651
stableDimension: 0
stamp: i32 [-293651] ⇊00000000fffb84ed ⇈00000000fffb84ed
stampKind: i32
value: int[-293651|0xfffffffffffb84ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1937 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1954 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1934 
=== Predecessor ===
v1373 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" "B59" 
    xhandlers
    flags 
    probability 4578096966431877819
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v700 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1378 
=== Usages ===
=== Predecessor ===
v701 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1378  <|@  <|@
f <@~|@floating>@ <|@
tid v2254 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2334 
y: v2253 
=== Succesors ===
=== Usages ===
v1378 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2334 y: v2253  <|@  <|@
f <@*|@fixed>@ <|@
tid v1378 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=size target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2254 
=== Succesors ===
trueSuccessor: v1375 
falseSuccessor: v1377 
=== Usages ===
=== Predecessor ===
v700 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2254 #trueSuccessor: v1375 #falseSuccessor: v1377  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4578096966431877819
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1375 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=size target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2337 
=== Usages ===
=== Predecessor ===
v1378 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2337  <|@  <|@
f <@~|@floating>@ <|@
tid v2474 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2329 
=== Succesors ===
=== Usages ===
i2337 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2329  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2337 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeList.size
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.size(NodeList.java:119) [bci: 1]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2474 
=== Succesors ===
next: v1382 
=== Usages ===
v666 i823 
=== Predecessor ===
v1375 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2474 #next: v1382  <|@  <|@
f <@~|@floating>@ <|@
tid v666 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2337 
y: i2333 
=== Succesors ===
=== Usages ===
v1382 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2337 y: i2333  <|@  <|@
f <@*|@fixed>@ <|@
tid v1382 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v666 
=== Succesors ===
trueSuccessor: v1381 
falseSuccessor: v1379 
=== Usages ===
=== Predecessor ===
i2337 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v666 #trueSuccessor: v1381 #falseSuccessor: v1379  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1381 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1952 
=== Usages ===
=== Predecessor ===
v1382 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1952  <|@  <|@
f <@~|@floating>@ <|@
tid i1953 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -294675
stableDimension: 0
stamp: i32 [-294675] ⇊00000000fffb80ed ⇈00000000fffb80ed
stampKind: i32
value: int[-294675|0xfffffffffffb80ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1937 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1952 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1934 
=== Predecessor ===
v1381 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4578096966431877819
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1379 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v818 
=== Usages ===
=== Predecessor ===
v1382 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v818  <|@  <|@
f <@*|@fixed>@ <|@
tid v818 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v819 
=== Predecessor ===
v1379 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B46" "B49" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4587539003186891847
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i823 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v819 
values: i2337 i2336 i21 
=== Succesors ===
=== Usages ===
?820 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v819 values: i2337 i2336 i21  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v819 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v818 v821 v837 
=== Succesors ===
next: j2138 
=== Usages ===
i823 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v818 v821 v837 #next: j2138  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2138 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2153 
=== Usages ===
v2443 v2444 
=== Predecessor ===
v819 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2153  <|@  <|@
f <@~|@floating>@ <|@
tid v2443 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2138 
index: - 
=== Succesors ===
=== Usages ===
j2153 v2155 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2138 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2153 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2443 
=== Succesors ===
next: j2154 
=== Usages ===
j2256 j2159 v2461 
=== Predecessor ===
j2138 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2443 #next: j2154  <|@  <|@
f <@~|@floating>@ <|@
tid v2444 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2138 
index: - 
=== Succesors ===
=== Usages ===
j2154 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2138 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2154 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2444 
=== Succesors ===
next: v2146 
=== Usages ===
v2143 
=== Predecessor ===
j2153 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2444 #next: v2146  <|@  <|@
f <@~|@floating>@ <|@
tid j2255 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 56
stableDimension: 0
stamp: i64 [56] ⇊0000000000000038 ⇈0000000000000038
stampKind: i64
value: long[56|0x38]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2256 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2256 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2153 
y: j2255 
=== Succesors ===
=== Usages ===
v2143 v2155 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2153 y: j2255  <|@  <|@
f <@~|@floating>@ <|@
tid v2143 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2154 
y: j2256 
=== Succesors ===
=== Usages ===
v2146 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2154 y: j2256  <|@  <|@
f <@*|@fixed>@ <|@
tid v2146 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2143 
=== Succesors ===
trueSuccessor: v2144 
falseSuccessor: v2145 
=== Usages ===
=== Predecessor ===
j2154 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2143 #trueSuccessor: v2144 #falseSuccessor: v2145  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4557861259848273806
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2144 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a2149 
=== Usages ===
=== Predecessor ===
v2146 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2149  <|@  <|@
tid ?604 <|@
d <@d|@=== Debug Properties ===
bci: 34
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray(Object[])>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 180
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 - a1271 - - 
=== Succesors ===
=== Usages ===
?593 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 - a1271 - -  <|@  <|@
tid ?593 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<SubList.iterator()>
duringCall: true
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.SubList.listIterator(AbstractList.java:695) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 691
stackSize: 0
=== Inputs ===
outerFrameState: ?604 
values: a1 
=== Succesors ===
=== Usages ===
?594 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?604 values: a1  <|@  <|@
tid ?594 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<AbstractList.listIterator()>
duringCall: true
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.SubList.listIterator(AbstractList.java:695) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 299
stackSize: 0
=== Inputs ===
outerFrameState: ?593 
values: a1 
=== Succesors ===
=== Usages ===
?632 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?593 values: a1  <|@  <|@
tid a736 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@724f57db
hasIdentity: true
objectId: 1
stamp: a!# Ljava/util/SubList$1;
type: HotSpotType<Ljava/util/SubList$1;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?660 ?632 ?739 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?632 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<SubList.listIterator(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 698
stackSize: 1
=== Inputs ===
outerFrameState: ?594 
values: - - a736 
=== Succesors ===
=== Usages ===
?660 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?594 values: - - a736  <|@  <|@
tid ?660 <|@
d <@d|@=== Debug Properties ===
bci: 34
code: ResolvedJavaMethodBytecode<SubList$1.<init>(SubList, int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 699
stackSize: 1
=== Inputs ===
outerFrameState: ?632 
values: - - - a736 
=== Succesors ===
=== Usages ===
?669 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?632 values: - - - a736  <|@  <|@
tid ?669 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<AbstractList.listIterator(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 325
stackSize: 0
=== Inputs ===
outerFrameState: ?660 
values: a2329 i2333 
=== Succesors ===
=== Usages ===
?820 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?660 values: a2329 i2333  <|@  <|@
tid ?739 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a736 
values: - - a1 
=== Succesors ===
=== Usages ===
?820 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a736 values: - - a1  <|@  <|@
tid ?820 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<AbstractList.rangeCheckForAdd(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 604
stackSize: 2
=== Inputs ===
outerFrameState: ?669 
values: a2329 i2333 i2333 i823 
virtualObjectMappings: ?739 
=== Succesors ===
=== Usages ===
a2149 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?669 values: a2329 i2333 i2333 i823 virtualObjectMappings: ?739  <|@  <|@
f <@~|@floating>@ <|@
tid i2258 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 10
stableDimension: 0
stamp: i32 [10] ⇊000000000000000a ⇈000000000000000a
stampKind: i32
value: int[10|0xa]
=== Inputs ===
=== Succesors ===
=== Usages ===
a2149 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2149 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?820 
arguments: v2081 i2258 i20 
=== Succesors ===
next: j2150 
=== Usages ===
j2150 
=== Predecessor ===
v2144 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?820 arguments: v2081 i2258 i20 #next: j2150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2150 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2149 
=== Succesors ===
next: v2160 
=== Usages ===
j2159 
=== Predecessor ===
a2149 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a2149 #next: v2160  <|@  <|@
f <@*|@fixed>@ <|@
tid v2160 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2157 
=== Predecessor ===
j2150 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4587465221365380873
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2145 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2155 
=== Usages ===
=== Predecessor ===
v2146 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2155  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2155 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2443 
value: j2256 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2152 
=== Usages ===
=== Predecessor ===
v2145 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2443 value: j2256 stateAfter: - lastLocationAccess: - #next: v2152  <|@  <|@
f <@~|@floating>@ <|@
tid v2461 <|@
d <@d|@=== Debug Properties ===
displacement: 248
scale: Times1
stamp: void*
=== Inputs ===
base: j2153 
index: - 
=== Succesors ===
=== Usages ===
v2152 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2153 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2152 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v2461 
=== Succesors ===
next: v2158 
=== Usages ===
=== Predecessor ===
v2155 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2461 #next: v2158  <|@  <|@
f <@*|@fixed>@ <|@
tid v2158 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2157 
=== Predecessor ===
v2152 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B56" 
    successors "B64" 
    xhandlers
    flags 
    probability 4587539003186891847
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2159 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2157 
values: j2153 j2150 
=== Succesors ===
=== Usages ===
v2471 v2446 j1669 a1667 v2447 v2462 v2463 v2464 v2465 v2466 v2467 v2468 v2469 v2470 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2157 values: j2153 j2150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2157 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2158 v2160 
=== Succesors ===
next: a1667 
=== Usages ===
j2159 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2158 v2160 #next: a1667  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1667 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j2159 
=== Succesors ===
next: a1670 
=== Usages ===
a1681 
=== Predecessor ===
v2157 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2159 #next: a1670  <|@  <|@
f <@~|@floating>@ <|@
tid j938 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList$SubList$1.hasNext(ArrayList.java:1109) [bci: 8]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1669 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1669 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2159 
y: j938 
=== Succesors ===
=== Usages ===
a1670 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2159 y: j938  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1670 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1669 
=== Succesors ===
next: j2169 
=== Usages ===
a1682 a1673 
=== Predecessor ===
a1667 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1669 #next: j2169  <|@  <|@
f <@~|@floating>@ <|@
tid v1702 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
rawvalue: meta{HotSpotType<Ljava/util/SubList$1;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/SubList$1;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j2165 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2165 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1702 
=== Succesors ===
=== Usages ===
v2445 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1702  <|@  <|@
f <@~|@floating>@ <|@
tid v2445 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j2165 
index: - 
=== Succesors ===
=== Usages ===
j2169 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2165 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2169 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2445 
=== Succesors ===
next: v2170 
=== Usages ===
v2170 
=== Predecessor ===
a1670 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2445 #next: v2170  <|@  <|@
f <@~|@floating>@ <|@
tid v2446 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2159 
index: - 
=== Succesors ===
=== Usages ===
v2170 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2159 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2170 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2446 
value: j2169 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2173 
=== Usages ===
=== Predecessor ===
j2169 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2446 value: j2169 stateAfter: - lastLocationAccess: - #next: v2173  <|@  <|@
f <@~|@floating>@ <|@
tid v2447 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2159 
index: - 
=== Succesors ===
=== Usages ===
v2173 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2159 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2173 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2447 
value: v2261 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2177 
=== Usages ===
=== Predecessor ===
v2170 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2447 value: v2261 stateAfter: - lastLocationAccess: - #next: v2177  <|@  <|@
f <@~|@floating>@ <|@
tid v2462 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2159 
index: - 
=== Succesors ===
=== Usages ===
v2177 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2159 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2177 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2462 
value: i21 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2179 
=== Usages ===
=== Predecessor ===
v2173 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2462 value: i21 stateAfter: - lastLocationAccess: - #next: v2179  <|@  <|@
f <@~|@floating>@ <|@
tid v2463 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j2159 
index: - 
=== Succesors ===
=== Usages ===
v2179 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2159 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a1673 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n -
=== Inputs ===
value: a1670 
=== Succesors ===
=== Usages ===
v2179 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1670  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2179 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2463 
value: a1673 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2181 
=== Usages ===
=== Predecessor ===
v2177 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2463 value: a1673 stateAfter: - lastLocationAccess: - #next: v2181  <|@  <|@
f <@~|@floating>@ <|@
tid v2464 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j2159 
index: - 
=== Succesors ===
=== Usages ===
v2181 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2159 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a1674 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! Ljava/util/AbstractCollection;
=== Inputs ===
value: a1 
=== Succesors ===
=== Usages ===
v2181 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2181 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2464 
value: a1674 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j2186 
=== Usages ===
=== Predecessor ===
v2179 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2464 value: a1674 stateAfter: - lastLocationAccess: - #next: j2186  <|@  <|@
f <@~|@floating>@ <|@
tid v1738 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
rawvalue: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j2182 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2182 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1738 
=== Succesors ===
=== Usages ===
v2448 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1738  <|@  <|@
f <@~|@floating>@ <|@
tid v2448 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j2182 
index: - 
=== Succesors ===
=== Usages ===
j2186 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2182 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2186 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2448 
=== Succesors ===
next: v2187 
=== Usages ===
v2187 
=== Predecessor ===
v2181 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2448 #next: v2187  <|@  <|@
f <@~|@floating>@ <|@
tid v2465 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j2159 
index: - 
=== Succesors ===
=== Usages ===
v2187 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2159 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2187 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2465 
value: j2186 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2190 
=== Usages ===
=== Predecessor ===
j2186 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2465 value: j2186 stateAfter: - lastLocationAccess: - #next: v2190  <|@  <|@
f <@~|@floating>@ <|@
tid v2466 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: j2159 
index: - 
=== Succesors ===
=== Usages ===
v2190 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2159 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2190 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2466 
value: v2267 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2194 
=== Usages ===
=== Predecessor ===
v2187 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2466 value: v2267 stateAfter: - lastLocationAccess: - #next: v2194  <|@  <|@
f <@~|@floating>@ <|@
tid v2467 <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: j2159 
index: - 
=== Succesors ===
=== Usages ===
v2194 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2159 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2194 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2467 
value: i2333 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2196 
=== Usages ===
=== Predecessor ===
v2190 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2467 value: i2333 stateAfter: - lastLocationAccess: - #next: v2196  <|@  <|@
f <@~|@floating>@ <|@
tid v2468 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: j2159 
index: - 
=== Succesors ===
=== Usages ===
v2196 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2159 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i507 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList$SubList$1.<init>(ArrayList.java:1105) [bci: 28]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1103) [bci: 21]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2196 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2196 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2468 
value: i507 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2198 
=== Usages ===
=== Predecessor ===
v2194 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2468 value: i507 stateAfter: - lastLocationAccess: - #next: v2198  <|@  <|@
f <@~|@floating>@ <|@
tid v2469 <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: j2159 
index: - 
=== Succesors ===
=== Usages ===
v2198 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2159 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2198 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2469 
value: i2330 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2200 
=== Usages ===
=== Predecessor ===
v2196 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2469 value: i2330 stateAfter: - lastLocationAccess: - #next: v2200  <|@  <|@
f <@~|@floating>@ <|@
tid v2470 <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
=== Inputs ===
base: j2159 
index: - 
=== Succesors ===
=== Usages ===
v2200 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2159 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2200 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2470 
value: a2329 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2202 
=== Usages ===
=== Predecessor ===
v2198 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2470 value: a2329 stateAfter: - lastLocationAccess: - #next: v2202  <|@  <|@
f <@~|@floating>@ <|@
tid v2471 <|@
d <@d|@=== Debug Properties ===
displacement: 52
scale: Times1
stamp: void*
=== Inputs ===
base: j2159 
index: - 
=== Succesors ===
=== Usages ===
v2202 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2159 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2202 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2471 
value: a2329 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1681 
=== Usages ===
=== Predecessor ===
v2200 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2471 value: a2329 stateAfter: - lastLocationAccess: - #next: a1681  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1681 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1667 
=== Succesors ===
next: a1682 
=== Usages ===
a270 
=== Predecessor ===
v2202 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1667 #next: a1682  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1682 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1670 
=== Succesors ===
next: v1683 
=== Usages ===
=== Predecessor ===
a1681 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1670 #next: v1683  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1683 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v732 
=== Usages ===
=== Predecessor ===
a1682 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v732  <|@  <|@
f <@*|@fixed>@ <|@
tid v732 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v267 
=== Predecessor ===
v1683 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1377 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=size target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1956 
=== Usages ===
=== Predecessor ===
v1378 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1956  <|@  <|@
f <@~|@floating>@ <|@
tid i1957 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -293939
stableDimension: 0
stamp: i32 [-293939] ⇊00000000fffb83cd ⇈00000000fffb83cd
stampKind: i32
value: int[-293939|0xfffffffffffb83cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1937 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1956 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1934 
=== Predecessor ===
v1377 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=null target_method=listIterator target_method_class=Ljava/util/AbstractList; position=at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1948 
=== Usages ===
=== Predecessor ===
v1362 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1948  <|@  <|@
f <@~|@floating>@ <|@
tid i1949 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -290867
stableDimension: 0
stamp: i32 [-290867] ⇊00000000fffb8fcd ⇈00000000fffb8fcd
stampKind: i32
value: int[-290867|0xfffffffffffb8fcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1937 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1948 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1934 
=== Predecessor ===
v1361 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1349 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.listIterator(AbstractList.java:695) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1942 
=== Usages ===
=== Predecessor ===
v1350 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1942  <|@  <|@
f <@~|@floating>@ <|@
tid i1943 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -288275
stableDimension: 0
stamp: i32 [-288275] ⇊00000000fffb99ed ⇈00000000fffb99ed
stampKind: i32
value: int[-288275|0xfffffffffffb99ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1937 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1942 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1934 
=== Predecessor ===
v1349 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B39" "B61" "B41" "B60" "B45" "B53" "B50" "B59" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1937 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-294675 - -288275] ⇊00000000fffb80c5 ⇈00000000fffb9ffd
valueDescription: i32
=== Inputs ===
merge: v1934 
values: i1941 i1943 i1945 i1949 i1951 i1953 i1955 i1957 
=== Succesors ===
=== Usages ===
v1939 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1934 values: i1941 i1943 i1945 i1949 i1951 i1953 i1955 i1957  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1934 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1940 v1942 v1944 v1948 v1950 v1952 v1954 v1956 
=== Succesors ===
next: v1939 
=== Usages ===
i1937 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1940 v1942 v1944 v1948 v1950 v1952 v1954 v1956 #next: v1939  <|@  <|@
f <@*|@fixed>@ <|@
tid v1939 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?759 
actionAndReason: i1937 
speculation: a1836 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1934 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?759 actionAndReason: i1937 speculation: a1836  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B64" 
    xhandlers
    flags 
    probability 4575751561709176675
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: a70 
=== Usages ===
=== Predecessor ===
v589 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a70  <|@  <|@
tid v1152 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
returnStamp: a - (unchecked=a Ljava/util/Iterator;)
signature: [Ljdk.vm.ci.meta.JavaType;@3283ac09
stamp: void
targetMethod: HotSpotMethod<AbstractCollection.iterator()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
a70 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?1825 <|@
d <@d|@=== Debug Properties ===
bci: 34
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray(Object[])>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 180
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 - a1271 - - 
=== Succesors ===
=== Usages ===
a70 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 - a1271 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a70 <|@
d <@d|@=== Debug Properties ===
bci: 34
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
polymorphic: false
stamp: a -
targetMethod: Direct#AbstractCollection.iterator
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1152 
stateDuring: ?1825 
=== Succesors ===
next: v269 
=== Usages ===
a270 
=== Predecessor ===
v588 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1152 stateDuring: ?1825 #next: v269  <|@  <|@
f <@*|@fixed>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v267 
=== Predecessor ===
a70 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B32" "B58" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a270 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: a -
valueDescription: a -
=== Inputs ===
merge: v267 
values: a70 a1609 a1681 
=== Succesors ===
=== Usages ===
?268 ?76 ?1826 v1057 ?369 v2383 v2449 v2392 v2386 v2384 v2390 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v267 values: a70 a1609 a1681  <|@  <|@
f <@~|@floating>@ <|@
tid a764 <|@
d <@d|@=== Debug Properties ===
stamp: a! [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v267 
values: a1271 a1270 a1271 
=== Succesors ===
=== Usages ===
?76 v2450 ?268 ?369 ?369 ?1826 ?1826 v2381 v2382 v873 v102 v788 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v267 values: a1271 a1270 a1271  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v269 v275 v732 
=== Succesors ===
next: i2338 
=== Usages ===
a270 a764 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v269 v275 v732 #next: i2338  <|@  <|@
f <@~|@floating>@ <|@
tid v2381 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a764 
index: - 
=== Succesors ===
=== Usages ===
i2338 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a764 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2338 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 45]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v2381 
=== Succesors ===
next: v2306 
=== Usages ===
v78 j1278 v1292 
=== Predecessor ===
v267 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2381 #next: v2306  <|@  <|@
f <@~|@floating>@ <|@
tid j1278 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i2338 
=== Succesors ===
=== Usages ===
j1282 v1284 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2338  <|@  <|@
f <@~|@floating>@ <|@
tid j1281 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1282 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1282 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-1 - 2147483646]
=== Inputs ===
x: j1278 
y: j1281 
=== Succesors ===
=== Usages ===
v1284 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1278 y: j1281  <|@  <|@
f <@~|@floating>@ <|@
tid v1284 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1282 
y: j1278 
=== Succesors ===
=== Usages ===
v2306 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1282 y: j1278  <|@  <|@
tid ?268 <|@
d <@d|@=== Debug Properties ===
bci: 37
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray(Object[])>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 180
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - a2 - a764 - - a270 
=== Succesors ===
=== Usages ===
v1930 v2339 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 - a764 - - a270  <|@  <|@
f <@*|@fixed>@ <|@
tid v2306 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1284 
=== Succesors ===
trueSuccessor: v2302 
falseSuccessor: v2305 
=== Usages ===
=== Predecessor ===
i2338 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1284 #trueSuccessor: v2302 #falseSuccessor: v2305  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B68" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2302 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2300 
=== Usages ===
=== Predecessor ===
v2306 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2300  <|@  <|@
f <@*|@fixed>@ <|@
tid v2300 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2299 
=== Predecessor ===
v2302 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" "B120" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2305 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2304 
=== Usages ===
=== Predecessor ===
v2306 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2304  <|@  <|@
f <@~|@floating>@ <|@
tid v1292 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2338 
y: i21 
=== Succesors ===
=== Usages ===
v2304 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2338 y: i21  <|@  <|@
f <@*|@fixed>@ <|@
tid v2304 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1292 
=== Succesors ===
trueSuccessor: v2303 
falseSuccessor: v1385 
=== Usages ===
=== Predecessor ===
v2305 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1292 #trueSuccessor: v2303 #falseSuccessor: v1385  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2303 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2301 
=== Usages ===
=== Predecessor ===
v2304 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2301  <|@  <|@
f <@*|@fixed>@ <|@
tid v2301 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2299 
=== Predecessor ===
v2303 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B65" "B67" 
    successors "B69" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2299 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2300 v2301 
=== Succesors ===
next: v2339 
=== Usages ===
v1290 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2300 v2301 #next: v2339  <|@  <|@
f <@~|@floating>@ <|@
tid v2449 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a270 
index: - 
=== Succesors ===
=== Usages ===
v2339 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a270 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2339 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?268 
guard: - 
address: v2449 
=== Succesors ===
next: v2340 
=== Usages ===
v2282 v2280 v2281 v2307 v2308 
=== Predecessor ===
v2299 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?268 guard: - address: v2449 #next: v2340  <|@  <|@
f <@~|@floating>@ <|@
tid v2450 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a764 
index: - 
=== Succesors ===
=== Usages ===
v2340 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a764 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2340 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2450 
=== Succesors ===
next: v73 
=== Usages ===
v2284 
=== Predecessor ===
v2339 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2450 #next: v73  <|@  <|@
f <@~|@floating>@ <|@
tid v2283 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2284 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2284 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2340 
y: v2283 
=== Succesors ===
=== Usages ===
v1395 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2340 y: v2283  <|@  <|@
f <@~|@floating>@ <|@
tid v2282 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2339 
y: v2243 
=== Succesors ===
=== Usages ===
v184 v150 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2339 y: v2243  <|@  <|@
f <@~|@floating>@ <|@
tid v2392 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a270 
index: - 
=== Succesors ===
=== Usages ===
v969 a2351 a2371 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a270 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2390 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a270 
index: - 
=== Succesors ===
=== Usages ===
i2349 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a270 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2386 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a270 
index: - 
=== Succesors ===
=== Usages ===
i2346 a2353 a2367 a2373 a2377 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a270 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2383 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a270 
index: - 
=== Succesors ===
=== Usages ===
i2343 v967 i2370 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a270 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2384 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a270 
index: - 
=== Succesors ===
=== Usages ===
a2341 a2368 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a270 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i2222 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2221 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2216 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2217 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2220 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2453 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2279 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
rawvalue: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2280 v2307 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
v2340 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B101" 
    successors "B70" "B104" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4614651752012106329
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i75 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v74 
values: i21 i94 
=== Succesors ===
=== Usages ===
?76 v78 ?369 ?1826 ?1826 v2382 ?369 i94 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v74 values: i21 i94  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 3.317050284263399
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v73 
=== Succesors ===
next: v83 
=== Usages ===
i75 v81 v95 v1454 v1489 v1484 v1429 v1474 v1434 v1394 v1464 v1404 v1444 v1414 v1419 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v73 #next: v83  <|@  <|@
tid ?76 <|@
d <@d|@=== Debug Properties ===
bci: 42
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray(Object[])>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 182
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 - a764 a270 i75 
=== Succesors ===
=== Usages ===
v1867 i2369 i2342 i2345 i2348 v2352 i2354 i2358 i2362 i2365 v2473 v2372 i2374 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 - a764 a270 i75  <|@  <|@
f <@~|@floating>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 46]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i75 
y: i2338 
=== Succesors ===
=== Usages ===
v83 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i75 y: i2338  <|@  <|@
f <@*|@fixed>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 46]
stamp: void
trueSuccessorProbability: 0.6985273317247691
=== Inputs ===
condition: v78 
=== Succesors ===
trueSuccessor: v79 
falseSuccessor: v81 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v78 #trueSuccessor: v79 #falseSuccessor: v81  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612399952198421081
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1395 
=== Usages ===
v1290 
=== Predecessor ===
v83 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1395  <|@  <|@
f <@*|@fixed>@ <|@
tid v1395 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2284 
=== Succesors ===
trueSuccessor: v1391 
falseSuccessor: v1394 
=== Usages ===
=== Predecessor ===
v79 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2284 #trueSuccessor: v1391 #falseSuccessor: v1394  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612399952198421081
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1391 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v184 
=== Usages ===
=== Predecessor ===
v1395 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v184  <|@  <|@
f <@*|@fixed>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$SubList$1; target_method=hasNext target_method_class=Ljava/util/ArrayList$SubList$1; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
trueSuccessorProbability: 0.8936836714032184
=== Inputs ===
condition: v2282 
=== Succesors ===
trueSuccessor: v178 
falseSuccessor: v183 
=== Usages ===
=== Predecessor ===
v1391 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2282 #trueSuccessor: v178 #falseSuccessor: v183  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611845243203171713
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$SubList$1; target_method=hasNext target_method_class=Ljava/util/ArrayList$SubList$1; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2341 
=== Usages ===
=== Predecessor ===
v184 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2341  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2341 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList$1.this$1
nodeSourcePosition: at java.util.ArrayList$SubList$1.hasNext(ArrayList.java:1109) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
nullCheck: false
stamp: n# Ljava/util/ArrayList$SubList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2384 
=== Succesors ===
next: i2342 
=== Usages ===
v2387 v2385 
=== Predecessor ===
v178 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2384 #next: i2342  <|@  <|@
f <@~|@floating>@ <|@
tid v2385 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2341 
=== Succesors ===
=== Usages ===
i2342 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2341  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2342 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList.size
nodeSourcePosition: at java.util.ArrayList$SubList$1.hasNext(ArrayList.java:1109) [bci: 8]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?76 
guard: - 
address: v2385 
=== Succesors ===
next: i2343 
=== Usages ===
v245 v339 
=== Predecessor ===
a2341 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?76 guard: - address: v2385 #next: i2343  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2343 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList$1.cursor
nodeSourcePosition: at java.util.ArrayList$SubList$1.hasNext(ArrayList.java:1109) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2383 
=== Succesors ===
next: v1405 
=== Usages ===
v245 v339 i345 i349 v969 
=== Predecessor ===
i2342 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2383 #next: v1405  <|@  <|@
f <@~|@floating>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList$SubList$1.hasNext(ArrayList.java:1109) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2342 
y: i2343 
=== Succesors ===
=== Usages ===
v1405 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2342 y: i2343  <|@  <|@
f <@*|@fixed>@ <|@
tid v1405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 56]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v245 
=== Succesors ===
trueSuccessor: v1404 
falseSuccessor: v1401 
=== Usages ===
=== Predecessor ===
i2343 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v245 #trueSuccessor: v1404 #falseSuccessor: v1401  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1404 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 56]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v1873 
=== Usages ===
=== Predecessor ===
v1405 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v1873  <|@  <|@
f <@~|@floating>@ <|@
tid i1874 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -240915
stableDimension: 0
stamp: i32 [-240915] ⇊00000000fffc52ed ⇈00000000fffc52ed
stampKind: i32
value: int[-240915|0xfffffffffffc52ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1865 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1873 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1862 
=== Predecessor ===
v1404 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611845243203171713
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1401 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2344 
=== Usages ===
=== Predecessor ===
v1405 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2344  <|@  <|@
f <@~|@floating>@ <|@
tid v2387 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2341 
=== Succesors ===
=== Usages ===
a2344 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2341  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2344 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList.this$0
nodeSourcePosition: at java.util.ArrayList$SubList$1.checkForComodification(ArrayList.java:1212) [bci: 8]
at java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: n# Ljava/util/ArrayList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2387 
=== Succesors ===
next: i2345 
=== Usages ===
v2389 v2388 
=== Predecessor ===
v1401 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2387 #next: i2345  <|@  <|@
f <@~|@floating>@ <|@
tid v2388 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2344 
=== Succesors ===
=== Usages ===
i2345 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2344  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2345 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList$SubList$1.checkForComodification(ArrayList.java:1212) [bci: 11]
at java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?76 
guard: - 
address: v2388 
=== Succesors ===
next: i2346 
=== Usages ===
v421 
=== Predecessor ===
a2344 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?76 guard: - address: v2388 #next: i2346  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2346 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList$1.expectedModCount
nodeSourcePosition: at java.util.ArrayList$SubList$1.checkForComodification(ArrayList.java:1212) [bci: 1]
at java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2386 
=== Succesors ===
next: v1415 
=== Usages ===
v421 
=== Predecessor ===
i2345 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2386 #next: v1415  <|@  <|@
f <@~|@floating>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList$SubList$1.checkForComodification(ArrayList.java:1212) [bci: 14]
at java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2345 
y: i2346 
=== Succesors ===
=== Usages ===
v1415 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2345 y: i2346  <|@  <|@
f <@*|@fixed>@ <|@
tid v1415 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.checkForComodification(ArrayList.java:1212) [bci: 14]
at java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v421 
=== Succesors ===
trueSuccessor: v1411 
falseSuccessor: v1414 
=== Usages ===
=== Predecessor ===
i2346 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v421 #trueSuccessor: v1411 #falseSuccessor: v1414  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" "B81" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611845243203171713
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1411 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.checkForComodification(ArrayList.java:1212) [bci: 14]
at java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1420 
=== Usages ===
=== Predecessor ===
v1415 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1420  <|@  <|@
f <@~|@floating>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1116) [bci: 17]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2343 
y: i2342 
=== Succesors ===
=== Usages ===
v1420 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2343 y: i2342  <|@  <|@
f <@*|@fixed>@ <|@
tid v1420 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1116) [bci: 17]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v339 
=== Succesors ===
trueSuccessor: v1416 
falseSuccessor: v1419 
=== Usages ===
=== Predecessor ===
v1411 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v339 #trueSuccessor: v1416 #falseSuccessor: v1419  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611845243203171713
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1416 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1116) [bci: 17]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2347 
=== Usages ===
=== Predecessor ===
v1420 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2347  <|@  <|@
f <@~|@floating>@ <|@
tid v2389 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2344 
=== Succesors ===
=== Usages ===
a2347 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2344  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2347 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.elementData
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1118) [bci: 35]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2389 
=== Succesors ===
next: i2348 
=== Usages ===
a957 v2391 
=== Predecessor ===
v1416 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2389 #next: i2348  <|@  <|@
f <@~|@floating>@ <|@
tid v2391 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2347 
=== Succesors ===
=== Usages ===
i2348 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2347  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2348 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1119) [bci: 46]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?76 
guard: - 
address: v2391 
=== Succesors ===
next: i2349 
=== Usages ===
v347 v971 
=== Predecessor ===
a2347 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?76 guard: - address: v2391 #next: i2349  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2349 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList$1.val$offset
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1119) [bci: 40]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2390 
=== Succesors ===
next: v1430 
=== Usages ===
i345 
=== Predecessor ===
i2348 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2390 #next: v1430  <|@  <|@
f <@~|@floating>@ <|@
tid i345 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1119) [bci: 44]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: i32
=== Inputs ===
x: i2343 
y: i2349 
=== Succesors ===
=== Usages ===
v347 v2393 v971 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2343 y: i2349  <|@  <|@
f <@~|@floating>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1119) [bci: 47]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i345 
y: i2348 
=== Succesors ===
=== Usages ===
v1430 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i345 y: i2348  <|@  <|@
f <@*|@fixed>@ <|@
tid v1430 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1119) [bci: 47]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v347 
=== Succesors ===
trueSuccessor: v1426 
falseSuccessor: v1429 
=== Usages ===
=== Predecessor ===
i2349 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v347 #trueSuccessor: v1426 #falseSuccessor: v1429  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B78" "B79" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611845243203171713
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1426 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1119) [bci: 47]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1435 
=== Usages ===
=== Predecessor ===
v1430 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1435  <|@  <|@
f <@~|@floating>@ <|@
tid v971 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1122) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i345 
y: i2348 
=== Succesors ===
=== Usages ===
v1435 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i345 y: i2348  <|@  <|@
f <@*|@fixed>@ <|@
tid v1435 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1122) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v971 
=== Succesors ===
trueSuccessor: v1431 
falseSuccessor: v1434 
=== Usages ===
=== Predecessor ===
v1426 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v971 #trueSuccessor: v1431 #falseSuccessor: v1434  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611845243203171713
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1431 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1122) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: v967 
=== Usages ===
a2350 
=== Predecessor ===
v1435 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v967  <|@  <|@
f <@~|@floating>@ <|@
tid i349 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1121) [bci: 61]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: i32
=== Inputs ===
x: i2343 
y: i20 
=== Succesors ===
=== Usages ===
v967 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2343 y: i20  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v967 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayList$SubList$1.cursor
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1121) [bci: 62]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2383 
value: i349 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v969 
=== Usages ===
=== Predecessor ===
v1431 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2383 value: i349 stateAfter: - lastLocationAccess: - #next: v969  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v969 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayList$SubList$1.lastRet
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1122) [bci: 73]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2392 
value: i2343 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2350 
=== Usages ===
=== Predecessor ===
v967 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2392 value: i2343 stateAfter: - lastLocationAccess: - #next: a2350  <|@  <|@
f <@~|@floating>@ <|@
tid a957 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1118) [bci: 35]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a2347 
=== Succesors ===
=== Usages ===
v2393 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2347  <|@  <|@
f <@~|@floating>@ <|@
tid v2393 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a957 
index: i345 
=== Succesors ===
=== Usages ===
a2350 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a957 index: i345  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2350 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1122) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1431 
address: v2393 
=== Succesors ===
next: v287 
=== Usages ===
a1830 
=== Predecessor ===
v969 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1431 address: v2393 #next: v287  <|@  <|@
f <@*|@fixed>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v279 
=== Predecessor ===
a2350 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1434 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1122) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v1885 
=== Usages ===
=== Predecessor ===
v1435 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v1885  <|@  <|@
f <@~|@floating>@ <|@
tid i1886 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -248859
stableDimension: 0
stamp: i32 [-248859] ⇊00000000fffc33e5 ⇈00000000fffc33e5
stampKind: i32
value: int[-248859|0xfffffffffffc33e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1865 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1885 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1862 
=== Predecessor ===
v1434 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1429 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1119) [bci: 47]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v1883 
=== Usages ===
=== Predecessor ===
v1430 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v1883  <|@  <|@
f <@~|@floating>@ <|@
tid i1884 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -247315
stableDimension: 0
stamp: i32 [-247315] ⇊00000000fffc39ed ⇈00000000fffc39ed
stampKind: i32
value: int[-247315|0xfffffffffffc39ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1865 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1883 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1862 
=== Predecessor ===
v1429 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1419 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1116) [bci: 17]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v1879 
=== Usages ===
=== Predecessor ===
v1420 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v1879  <|@  <|@
f <@~|@floating>@ <|@
tid i1880 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -244243
stableDimension: 0
stamp: i32 [-244243] ⇊00000000fffc45ed ⇈00000000fffc45ed
stampKind: i32
value: int[-244243|0xfffffffffffc45ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1865 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1879 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1862 
=== Predecessor ===
v1419 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1414 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.checkForComodification(ArrayList.java:1212) [bci: 14]
at java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v1877 
=== Usages ===
=== Predecessor ===
v1415 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v1877  <|@  <|@
f <@~|@floating>@ <|@
tid i1878 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -243987
stableDimension: 0
stamp: i32 [-243987] ⇊00000000fffc46ed ⇈00000000fffc46ed
stampKind: i32
value: int[-243987|0xfffffffffffc46ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1865 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1877 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1862 
=== Predecessor ===
v1414 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B84" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598043364214525307
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: v193 
=== Usages ===
=== Predecessor ===
v184 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v193  <|@  <|@
f <@~|@floating>@ <|@
tid v2281 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2339 
y: v2261 
=== Succesors ===
=== Usages ===
v193 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2339 y: v2261  <|@  <|@
f <@*|@fixed>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/SubList$1; target_method=hasNext target_method_class=Ljava/util/SubList$1; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
trueSuccessorProbability: 0.9213533497647322
=== Inputs ===
condition: v2281 
=== Succesors ===
trueSuccessor: v189 
falseSuccessor: v192 
=== Usages ===
=== Predecessor ===
v183 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2281 #trueSuccessor: v189 #falseSuccessor: v192  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" "B98" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597345348145217565
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/SubList$1; target_method=hasNext target_method_class=Ljava/util/SubList$1; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2351 
=== Usages ===
=== Predecessor ===
v193 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2351  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2351 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList$1.i
nodeSourcePosition: at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 1]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v2392 
=== Succesors ===
next: v2352 
=== Usages ===
?1827 v2451 v2394 v2397 v2399 v2403 
=== Predecessor ===
v189 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2392 #next: v2352  <|@  <|@
f <@~|@floating>@ <|@
tid v2451 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2351 
=== Succesors ===
=== Usages ===
v2352 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2351  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2352 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?76 
guard: - 
address: v2451 
=== Succesors ===
next: v1445 
=== Usages ===
v2285 
=== Predecessor ===
a2351 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?76 guard: - address: v2451 #next: v1445  <|@  <|@
f <@~|@floating>@ <|@
tid v2285 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2352 
y: v2267 
=== Succesors ===
=== Usages ===
v1445 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2352 y: v2267  <|@  <|@
f <@*|@fixed>@ <|@
tid v1445 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=nextIndex target_method_class=Ljava/util/AbstractList$ListItr; position=at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2285 
=== Succesors ===
trueSuccessor: v1441 
falseSuccessor: v1444 
=== Usages ===
=== Predecessor ===
v2352 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2285 #trueSuccessor: v1441 #falseSuccessor: v1444  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B86" "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597345348145217565
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1441 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=nextIndex target_method_class=Ljava/util/AbstractList$ListItr; position=at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2353 
=== Usages ===
=== Predecessor ===
v1445 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2353  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2353 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList$1.this$0
nodeSourcePosition: at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 10]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
nullCheck: false
stamp: n Ljava/util/SubList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2386 
=== Succesors ===
next: i2354 
=== Usages ===
v2396 v2395 
=== Predecessor ===
v1441 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2386 #next: i2354  <|@  <|@
f <@~|@floating>@ <|@
tid v2396 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2353 
=== Succesors ===
=== Usages ===
i2354 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2353  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2354 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.size
nodeSourcePosition: at java.util.SubList.access$200(AbstractList.java:613) [bci: 1]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 8]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?76 
guard: - 
address: v2396 
=== Succesors ===
next: i2355 
=== Usages ===
v253 
=== Predecessor ===
a2353 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?76 guard: - address: v2396 #next: i2355  <|@  <|@
f <@~|@floating>@ <|@
tid v2395 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2353 
=== Succesors ===
=== Usages ===
i2355 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2353  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2355 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.offset
nodeSourcePosition: at java.util.SubList.access$000(AbstractList.java:613) [bci: 1]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 13]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2395 
=== Succesors ===
next: i2356 
=== Usages ===
i324 
=== Predecessor ===
i2354 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2395 #next: i2356  <|@  <|@
f <@~|@floating>@ <|@
tid v2394 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2351 
=== Succesors ===
=== Usages ===
i2356 v1029 v1048 v1051 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2351  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2356 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$ListItr.nextIndex(AbstractList.java:413) [bci: 1]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2394 
=== Succesors ===
next: v1455 
=== Usages ===
i324 v1047 v1049 ?1827 v1050 v1038 i528 v1018 v2406 v2402 v1028 
=== Predecessor ===
i2355 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2394 #next: v1455  <|@  <|@
f <@~|@floating>@ <|@
tid i324 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 16]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: i32
=== Inputs ===
x: i2356 
y: i2355 
=== Succesors ===
=== Usages ===
v253 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2356 y: i2355  <|@  <|@
f <@~|@floating>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i324 
y: i2354 
=== Succesors ===
=== Usages ===
v1455 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i324 y: i2354  <|@  <|@
f <@*|@fixed>@ <|@
tid v1455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 56]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v253 
=== Succesors ===
trueSuccessor: v1451 
falseSuccessor: v1454 
=== Usages ===
=== Predecessor ===
i2356 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v253 #trueSuccessor: v1451 #falseSuccessor: v1454  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B87" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597345348145217565
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1451 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2357 
=== Usages ===
=== Predecessor ===
v1455 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2357  <|@  <|@
f <@~|@floating>@ <|@
tid v2397 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2351 
=== Succesors ===
=== Usages ===
a2357 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2351  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2357 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.this$0
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: n Ljava/util/AbstractList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2397 
=== Succesors ===
next: i2358 
=== Usages ===
a1000 v2452 v2398 v2400 v2404 
=== Predecessor ===
v1451 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2397 #next: i2358  <|@  <|@
f <@~|@floating>@ <|@
tid v2398 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2357 
=== Succesors ===
=== Usages ===
i2358 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2357  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2358 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 4]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?76 
guard: - 
address: v2398 
=== Succesors ===
next: i2359 
=== Usages ===
v536 
=== Predecessor ===
a2357 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?76 guard: - address: v2398 #next: i2359  <|@  <|@
f <@~|@floating>@ <|@
tid v2399 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2351 
=== Succesors ===
=== Usages ===
i2359 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2351  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2359 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.expectedModCount
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 8]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2399 
=== Succesors ===
next: v1465 
=== Usages ===
v536 
=== Predecessor ===
i2358 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2399 #next: v1465  <|@  <|@
f <@~|@floating>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2358 
y: i2359 
=== Succesors ===
=== Usages ===
v1465 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2358 y: i2359  <|@  <|@
f <@*|@fixed>@ <|@
tid v1465 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v536 
=== Succesors ===
trueSuccessor: v1461 
falseSuccessor: v1464 
=== Usages ===
=== Predecessor ===
i2359 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v536 #trueSuccessor: v1461 #falseSuccessor: v1464  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" "B91" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597345348145217565
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1461 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2360 
=== Usages ===
=== Predecessor ===
v1465 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2360  <|@  <|@
f <@~|@floating>@ <|@
tid v2452 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2357 
=== Succesors ===
=== Usages ===
v2360 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2357  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2360 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2452 
=== Succesors ===
next: v553 
=== Usages ===
v2287 v2286 
=== Predecessor ===
v1461 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2452 #next: v553  <|@  <|@
f <@~|@floating>@ <|@
tid v2286 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2360 
y: v2249 
=== Succesors ===
=== Usages ===
v553 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2360 y: v2249  <|@  <|@
f <@~|@floating>@ <|@
tid i528 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:360) [bci: 26]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: i32
=== Inputs ===
x: i2356 
y: i20 
=== Succesors ===
=== Usages ===
v1051 v1029 v1048 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2356 y: i20  <|@  <|@
f <@~|@floating>@ <|@
tid v2403 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2351 
=== Succesors ===
=== Usages ===
v1028 v1047 v1050 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2351  <|@  <|@
f <@*|@fixed>@ <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=get target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
trueSuccessorProbability: 0.9304948647614187
=== Inputs ===
condition: v2286 
=== Succesors ===
trueSuccessor: v546 
falseSuccessor: v552 
=== Usages ===
=== Predecessor ===
v2360 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2286 #trueSuccessor: v546 #falseSuccessor: v552  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B89" "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596776981866787665
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=get target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2361 
=== Usages ===
=== Predecessor ===
v553 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2361  <|@  <|@
f <@~|@floating>@ <|@
tid v2400 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2357 
=== Succesors ===
=== Usages ===
a2361 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2357  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2361 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Arrays$ArrayList.a
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2400 
=== Succesors ===
next: i2362 
=== Usages ===
a1012 v2401 
=== Predecessor ===
v546 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2400 #next: i2362  <|@  <|@
f <@~|@floating>@ <|@
tid v2401 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2361 
=== Succesors ===
=== Usages ===
i2362 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2361  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2362 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?76 
guard: - 
address: v2401 
=== Succesors ===
next: v1475 
=== Usages ===
v1018 
=== Predecessor ===
a2361 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?76 guard: - address: v2401 #next: v1475  <|@  <|@
f <@~|@floating>@ <|@
tid v1018 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2356 
y: i2362 
=== Succesors ===
=== Usages ===
v1475 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2356 y: i2362  <|@  <|@
f <@*|@fixed>@ <|@
tid v1475 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1018 
=== Succesors ===
trueSuccessor: v1471 
falseSuccessor: v1474 
=== Usages ===
=== Predecessor ===
i2362 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1018 #trueSuccessor: v1471 #falseSuccessor: v1474  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596776981866787665
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1471 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1028 
=== Usages ===
a2363 
=== Predecessor ===
v1475 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1028  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1028 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.lastRet
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:359) [bci: 20]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2403 
value: i2356 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1029 
=== Usages ===
=== Predecessor ===
v1471 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2403 value: i2356 stateAfter: - lastLocationAccess: - #next: v1029  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1029 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:360) [bci: 27]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2394 
value: i528 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2363 
=== Usages ===
=== Predecessor ===
v1028 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2394 value: i528 stateAfter: - lastLocationAccess: - #next: a2363  <|@  <|@
f <@~|@floating>@ <|@
tid a1012 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a2361 
=== Succesors ===
=== Usages ===
v2402 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2361  <|@  <|@
f <@~|@floating>@ <|@
tid v2402 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1012 
index: i2356 
=== Succesors ===
=== Usages ===
a2363 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1012 index: i2356  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2363 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1471 
address: v2402 
=== Succesors ===
next: v799 
=== Usages ===
a1830 
=== Predecessor ===
v1029 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1471 address: v2402 #next: v799  <|@  <|@
f <@*|@fixed>@ <|@
tid v799 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v279 
=== Predecessor ===
a2363 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1474 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v1901 
=== Usages ===
=== Predecessor ===
v1475 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v1901  <|@  <|@
f <@~|@floating>@ <|@
tid i1902 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -260891
stableDimension: 0
stamp: i32 [-260891] ⇊00000000fffc04e5 ⇈00000000fffc04e5
stampKind: i32
value: int[-260891|0xfffffffffffc04e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1865 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1901 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1862 
=== Predecessor ===
v1474 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B92" "B95" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4580204151635863134
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: v562 
=== Usages ===
=== Predecessor ===
v553 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v562  <|@  <|@
f <@~|@floating>@ <|@
tid v2287 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2360 
y: v2253 
=== Succesors ===
=== Usages ===
v562 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2360 y: v2253  <|@  <|@
f <@*|@fixed>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=get target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
trueSuccessorProbability: 0.9931451844203526
=== Inputs ===
condition: v2287 
=== Succesors ===
trueSuccessor: v558 
falseSuccessor: v561 
=== Usages ===
=== Predecessor ===
v552 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2287 #trueSuccessor: v558 #falseSuccessor: v561  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B93" "B94" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4580172983267700514
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=get target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2364 
=== Usages ===
=== Predecessor ===
v562 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2364  <|@  <|@
f <@~|@floating>@ <|@
tid v2404 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2357 
=== Succesors ===
=== Usages ===
a2364 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2357  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2364 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeList.nodes
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 23]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: n [Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2404 
=== Succesors ===
next: i2365 
=== Usages ===
a1032 v2405 
=== Predecessor ===
v558 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2404 #next: i2365  <|@  <|@
f <@~|@floating>@ <|@
tid v2405 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2364 
=== Succesors ===
=== Usages ===
i2365 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2364  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2365 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?76 
guard: - 
address: v2405 
=== Succesors ===
next: v1485 
=== Usages ===
v1038 
=== Predecessor ===
a2364 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?76 guard: - address: v2405 #next: v1485  <|@  <|@
f <@~|@floating>@ <|@
tid v1038 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2356 
y: i2365 
=== Succesors ===
=== Usages ===
v1485 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2356 y: i2365  <|@  <|@
f <@*|@fixed>@ <|@
tid v1485 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1038 
=== Succesors ===
trueSuccessor: v1481 
falseSuccessor: v1484 
=== Usages ===
=== Predecessor ===
i2365 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1038 #trueSuccessor: v1481 #falseSuccessor: v1484  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4580172983267700514
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1481 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1047 
=== Usages ===
a2366 
=== Predecessor ===
v1485 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1047  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1047 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.lastRet
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:359) [bci: 20]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2403 
value: i2356 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1048 
=== Usages ===
=== Predecessor ===
v1481 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2403 value: i2356 stateAfter: - lastLocationAccess: - #next: v1048  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1048 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:360) [bci: 27]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2394 
value: i528 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2366 
=== Usages ===
=== Predecessor ===
v1047 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2394 value: i528 stateAfter: - lastLocationAccess: - #next: a2366  <|@  <|@
f <@~|@floating>@ <|@
tid a1032 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 23]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
op: Uncompress
stamp: a [Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
value: a2364 
=== Succesors ===
=== Usages ===
v2406 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2364  <|@  <|@
f <@~|@floating>@ <|@
tid v2406 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1032 
index: i2356 
=== Succesors ===
=== Usages ===
a2366 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1032 index: i2356  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2366 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: n Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
stateBefore: - 
guard: v1481 
address: v2406 
=== Succesors ===
next: v869 
=== Usages ===
a1830 
=== Predecessor ===
v1048 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1481 address: v2406 #next: v869  <|@  <|@
f <@*|@fixed>@ <|@
tid v869 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v279 
=== Predecessor ===
a2366 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1484 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v1905 
=== Usages ===
=== Predecessor ===
v1485 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v1905  <|@  <|@
f <@~|@floating>@ <|@
tid i1906 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -266011
stableDimension: 0
stamp: i32 [-266011] ⇊00000000fffbf0e5 ⇈00000000fffbf0e5
stampKind: i32
value: int[-266011|0xfffffffffffbf0e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1865 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1905 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1862 
=== Predecessor ===
v1484 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4547607526639090665
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: a524 
=== Usages ===
=== Predecessor ===
v562 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a524  <|@  <|@
f <@~|@floating>@ <|@
tid a1000 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
op: Uncompress
stamp: a Ljava/util/AbstractList;
=== Inputs ===
value: a2357 
=== Succesors ===
=== Usages ===
v1049 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2357  <|@  <|@
tid v1049 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@7ec44224
stamp: void
targetMethod: HotSpotMethod<AbstractList.get(int)>
=== Inputs ===
arguments: a1000 i2356 
=== Succesors ===
=== Usages ===
a524 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1000 i2356  <|@  <|@
tid ?369 <|@
d <@d|@=== Debug Properties ===
bci: 114
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray(Object[])>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 196
stackSize: 2
=== Inputs ===
outerFrameState: - 
values: - a2 - a764 a270 i75 a764 i75 
=== Succesors ===
=== Usages ===
?532 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 - a764 a270 i75 a764 i75  <|@  <|@
tid ?532 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<SubList$1.next()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 707
stackSize: 0
=== Inputs ===
outerFrameState: ?369 
values: - 
=== Succesors ===
=== Usages ===
?1827 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?369 values: -  <|@  <|@
tid ?1827 <|@
d <@d|@=== Debug Properties ===
bci: 14
code: ResolvedJavaMethodBytecode<AbstractList$Itr.next()>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 358
stackSize: 0
=== Inputs ===
outerFrameState: ?532 
values: a2351 i2356 - 
=== Succesors ===
=== Usages ===
a524 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?532 values: a2351 i2356 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a524 <|@
d <@d|@=== Debug Properties ===
bci: 14
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
polymorphic: false
stamp: a Ljava/lang/Object;
targetMethod: Direct#AbstractList.get
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1049 
stateDuring: ?1827 
=== Succesors ===
next: v1050 
=== Usages ===
a1829 
=== Predecessor ===
v561 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1049 stateDuring: ?1827 #next: v1050  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1050 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.lastRet
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:359) [bci: 20]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2403 
value: i2356 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1051 
=== Usages ===
=== Predecessor ===
a524 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2403 value: i2356 stateAfter: - lastLocationAccess: - #next: v1051  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1051 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:360) [bci: 27]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2394 
value: i528 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v298 
=== Usages ===
=== Predecessor ===
v1050 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2394 value: i528 stateAfter: - lastLocationAccess: - #next: v298  <|@  <|@
f <@~|@floating>@ <|@
tid a1829 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
op: Compress
stamp: n -
=== Inputs ===
value: a524 
=== Succesors ===
=== Usages ===
a1830 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a524  <|@  <|@
f <@*|@fixed>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v279 
=== Predecessor ===
v1051 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1464 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v1897 
=== Usages ===
=== Predecessor ===
v1465 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v1897  <|@  <|@
f <@~|@floating>@ <|@
tid i1898 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -258067
stableDimension: 0
stamp: i32 [-258067] ⇊00000000fffc0fed ⇈00000000fffc0fed
stampKind: i32
value: int[-258067|0xfffffffffffc0fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1865 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1897 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1862 
=== Predecessor ===
v1464 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1454 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 56]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v1893 
=== Usages ===
=== Predecessor ===
v1455 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v1893  <|@  <|@
f <@~|@floating>@ <|@
tid i1894 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -255251
stableDimension: 0
stamp: i32 [-255251] ⇊00000000fffc1aed ⇈00000000fffc1aed
stampKind: i32
value: int[-255251|0xfffffffffffc1aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1865 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1893 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1862 
=== Predecessor ===
v1454 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1444 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=nextIndex target_method_class=Ljava/util/AbstractList$ListItr; position=at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v1889 
=== Usages ===
=== Predecessor ===
v1445 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v1889  <|@  <|@
f <@~|@floating>@ <|@
tid i1890 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -251955
stableDimension: 0
stamp: i32 [-251955] ⇊00000000fffc27cd ⇈00000000fffc27cd
stampKind: i32
value: int[-251955|0xfffffffffffc27cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1865 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1889 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1862 
=== Predecessor ===
v1444 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B100" "B102" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581241349962885872
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1490 
=== Usages ===
=== Predecessor ===
v193 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1490  <|@  <|@
f <@~|@floating>@ <|@
tid v2280 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2339 
y: v2279 
=== Succesors ===
=== Usages ===
v1490 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2339 y: v2279  <|@  <|@
f <@*|@fixed>@ <|@
tid v1490 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap$KeyIterator; target_method=hasNext target_method_class=Ljava/util/HashMap$HashIterator; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2280 
=== Succesors ===
trueSuccessor: v1486 
falseSuccessor: v1489 
=== Usages ===
=== Predecessor ===
v192 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2280 #trueSuccessor: v1486 #falseSuccessor: v1489  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581241349962885872
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1486 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap$KeyIterator; target_method=hasNext target_method_class=Ljava/util/HashMap$HashIterator; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2367 
=== Usages ===
=== Predecessor ===
v1490 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2367  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2367 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$HashIterator.next
nodeSourcePosition: at java.util.HashMap$HashIterator.hasNext(HashMap.java:1435) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2386 
=== Succesors ===
next: v2473 
=== Usages ===
v2473 
=== Predecessor ===
v1486 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2386 #next: v2473  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2473 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?76 
object: a2367 
=== Succesors ===
next: a90 
=== Usages ===
=== Predecessor ===
a2367 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?76 object: a2367 #next: a90  <|@  <|@
tid v1057 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@72b0a41c
stamp: void
targetMethod: HotSpotMethod<Iterator.next()>
=== Inputs ===
arguments: a270 
=== Succesors ===
=== Usages ===
a90 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a270  <|@  <|@
tid ?1826 <|@
d <@d|@=== Debug Properties ===
bci: 114
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray(Object[])>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 196
stackSize: 2
=== Inputs ===
outerFrameState: - 
values: - a2 - a764 a270 i75 a764 i75 
=== Succesors ===
=== Usages ===
a90 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 - a764 a270 i75 a764 i75  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a90 <|@
d <@d|@=== Debug Properties ===
bci: 114
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
polymorphic: false
stamp: a Ljava/lang/Object;
targetMethod: Direct#Iterator.next
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1057 
stateDuring: ?1826 
=== Succesors ===
next: v281 
=== Usages ===
a1828 
=== Predecessor ===
v2473 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1057 stateDuring: ?1826 #next: v281  <|@  <|@
f <@~|@floating>@ <|@
tid a1828 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
op: Compress
stamp: n -
=== Inputs ===
value: a90 
=== Succesors ===
=== Usages ===
a1830 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a90  <|@  <|@
f <@*|@fixed>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v279 
=== Predecessor ===
a90 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" "B78" "B95" "B89" "B93" 
    successors "B69" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4612399952198421080
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1830 <|@
d <@d|@=== Debug Properties ===
stamp: n -
valueDescription: n -
=== Inputs ===
merge: v279 
values: a1828 a2350 a1829 a2363 a2366 
=== Succesors ===
=== Usages ===
v928 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v279 values: a1828 a2350 a1829 a2363 a2366  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v281 v287 v298 v799 v869 
=== Succesors ===
next: v928 
=== Usages ===
a1830 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v281 v287 v298 v799 v869 #next: v928  <|@  <|@
f <@~|@floating>@ <|@
tid v1290 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v2299 v79 
=== Succesors ===
=== Usages ===
v928 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v2299 v79  <|@  <|@
f <@~|@floating>@ <|@
tid v2382 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a764 
index: i75 
=== Succesors ===
=== Usages ===
v928 j2215 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a764 index: i75  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v928 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1290 
address: v2382 
value: a1830 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j2215 
=== Usages ===
=== Predecessor ===
v279 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1290 address: v2382 value: a1830 stateAfter: - lastLocationAccess: - #next: j2215  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2215 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v2382 
=== Succesors ===
next: v2221 
=== Usages ===
j2217 
=== Predecessor ===
v928 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v2382 #next: v2221  <|@  <|@
f <@~|@floating>@ <|@
tid j2217 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j2215 
y: i2216 
=== Succesors ===
=== Usages ===
v2453 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j2215 y: i2216  <|@  <|@
f <@~|@floating>@ <|@
tid v2453 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2217 
index: j2220 
=== Succesors ===
=== Usages ===
v2221 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2217 index: j2220  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2221 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2453 
value: i2222 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v95 
=== Usages ===
=== Predecessor ===
j2215 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2453 value: i2222 stateAfter: - lastLocationAccess: - #next: v95  <|@  <|@
f <@~|@floating>@ <|@
tid i94 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 120]
stamp: i32
=== Inputs ===
x: i75 
y: i20 
=== Succesors ===
=== Usages ===
i75 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i75 y: i20  <|@  <|@
f <@*|@fixed>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
stamp: void
=== Inputs ===
loopBegin: v74 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2221 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v74  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1489 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap$KeyIterator; target_method=hasNext target_method_class=Ljava/util/HashMap$HashIterator; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v1907 
=== Usages ===
=== Predecessor ===
v1490 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v1907  <|@  <|@
f <@~|@floating>@ <|@
tid i1908 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -269363
stableDimension: 0
stamp: i32 [-269363] ⇊00000000fffbe3cd ⇈00000000fffbe3cd
stampKind: i32
value: int[-269363|0xfffffffffffbe3cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1865 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1907 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1862 
=== Predecessor ===
v1489 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1394 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v1868 
=== Usages ===
=== Predecessor ===
v1395 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v1868  <|@  <|@
f <@~|@floating>@ <|@
tid a1870 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1418920718
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/l/d$a;
stampKind: a -
value: Object[d.a@1418920718]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1866 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1869 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -234300
stableDimension: 0
stamp: i32 [-234300] ⇊00000000fffc6cc4 ⇈00000000fffc6cc4
stampKind: i32
value: int[-234300|0xfffffffffffc6cc4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1865 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1868 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1862 
=== Predecessor ===
v1394 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B105" "B108" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 126]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v150 
=== Usages ===
=== Predecessor ===
v83 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v150  <|@  <|@
f <@*|@fixed>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$SubList$1; target_method=hasNext target_method_class=Ljava/util/ArrayList$SubList$1; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
trueSuccessorProbability: 0.9408014571948998
=== Inputs ===
condition: v2282 
=== Succesors ===
trueSuccessor: v143 
falseSuccessor: v149 
=== Usages ===
=== Predecessor ===
v81 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2282 #trueSuccessor: v143 #falseSuccessor: v149  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4606649205729381557
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$SubList$1; target_method=hasNext target_method_class=Ljava/util/ArrayList$SubList$1; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2368 
=== Usages ===
=== Predecessor ===
v150 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2368  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2368 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList$1.this$1
nodeSourcePosition: at java.util.ArrayList$SubList$1.hasNext(ArrayList.java:1109) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
nullCheck: false
stamp: n# Ljava/util/ArrayList$SubList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2384 
=== Succesors ===
next: i2369 
=== Usages ===
v2407 
=== Predecessor ===
v143 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2384 #next: i2369  <|@  <|@
f <@~|@floating>@ <|@
tid v2407 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2368 
=== Succesors ===
=== Usages ===
i2369 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2368  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2369 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList.size
nodeSourcePosition: at java.util.ArrayList$SubList$1.hasNext(ArrayList.java:1109) [bci: 8]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?76 
guard: - 
address: v2407 
=== Succesors ===
next: i2370 
=== Usages ===
v226 
=== Predecessor ===
a2368 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?76 guard: - address: v2407 #next: i2370  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2370 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList$1.cursor
nodeSourcePosition: at java.util.ArrayList$SubList$1.hasNext(ArrayList.java:1109) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2383 
=== Succesors ===
next: v1503 
=== Usages ===
v226 
=== Predecessor ===
i2369 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2383 #next: v1503  <|@  <|@
f <@~|@floating>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList$SubList$1.hasNext(ArrayList.java:1109) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2369 
y: i2370 
=== Succesors ===
=== Usages ===
v1503 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2369 y: i2370  <|@  <|@
f <@*|@fixed>@ <|@
tid v1503 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 133]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v226 
=== Succesors ===
trueSuccessor: v1500 
falseSuccessor: v1502 
=== Usages ===
=== Predecessor ===
i2370 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v226 #trueSuccessor: v1500 #falseSuccessor: v1502  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors 
    xhandlers
    flags 
    probability 4606649205729381557
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1500 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 133]
stamp: void
=== Inputs ===
=== Succesors ===
next: v788 
=== Usages ===
=== Predecessor ===
v1503 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v788  <|@  <|@
f <@*|@fixed>@ <|@
tid v788 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 146]
stamp: void
=== Inputs ===
result: a764 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1500 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a764 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1502 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 133]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1915 
=== Usages ===
=== Predecessor ===
v1503 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1915  <|@  <|@
f <@~|@floating>@ <|@
tid i1916 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -273683
stableDimension: 0
stamp: i32 [-273683] ⇊00000000fffbd2ed ⇈00000000fffbd2ed
stampKind: i32
value: int[-273683|0xfffffffffffbd2ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1865 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1915 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1862 
=== Predecessor ===
v1502 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B109" "B114" 
    xhandlers
    flags 
    probability 4588692230165968048
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: v159 
=== Usages ===
=== Predecessor ===
v150 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v159  <|@  <|@
f <@~|@floating>@ <|@
tid v2308 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2339 
y: v2261 
=== Succesors ===
=== Usages ===
v159 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2339 y: v2261  <|@  <|@
f <@*|@fixed>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/SubList$1; target_method=hasNext target_method_class=Ljava/util/SubList$1; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
trueSuccessorProbability: 0.8652680652680653
=== Inputs ===
condition: v2308 
=== Succesors ===
trueSuccessor: v155 
falseSuccessor: v158 
=== Usages ===
=== Predecessor ===
v149 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2308 #trueSuccessor: v155 #falseSuccessor: v158  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B110" "B113" 
    xhandlers
    flags 
    probability 4587542776907870065
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/SubList$1; target_method=hasNext target_method_class=Ljava/util/SubList$1; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2371 
=== Usages ===
=== Predecessor ===
v159 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2371  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2371 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList$1.i
nodeSourcePosition: at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 1]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v2392 
=== Succesors ===
next: v2372 
=== Usages ===
v2454 v2408 
=== Predecessor ===
v155 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2392 #next: v2372  <|@  <|@
f <@~|@floating>@ <|@
tid v2454 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2371 
=== Succesors ===
=== Usages ===
v2372 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2371  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2372 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?76 
guard: - 
address: v2454 
=== Succesors ===
next: v1511 
=== Usages ===
v2288 
=== Predecessor ===
a2371 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?76 guard: - address: v2454 #next: v1511  <|@  <|@
f <@~|@floating>@ <|@
tid v2288 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2372 
y: v2267 
=== Succesors ===
=== Usages ===
v1511 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2372 y: v2267  <|@  <|@
f <@*|@fixed>@ <|@
tid v1511 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=nextIndex target_method_class=Ljava/util/AbstractList$ListItr; position=at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2288 
=== Succesors ===
trueSuccessor: v1508 
falseSuccessor: v1510 
=== Usages ===
=== Predecessor ===
v2372 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2288 #trueSuccessor: v1508 #falseSuccessor: v1510  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B111" "B112" 
    xhandlers
    flags 
    probability 4587542776907870065
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1508 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=nextIndex target_method_class=Ljava/util/AbstractList$ListItr; position=at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2373 
=== Usages ===
=== Predecessor ===
v1511 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2373  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2373 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList$1.this$0
nodeSourcePosition: at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 10]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
nullCheck: false
stamp: n Ljava/util/SubList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2386 
=== Succesors ===
next: i2374 
=== Usages ===
v2410 v2409 
=== Predecessor ===
v1508 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2386 #next: i2374  <|@  <|@
f <@~|@floating>@ <|@
tid v2410 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2373 
=== Succesors ===
=== Usages ===
i2374 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2373  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2374 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.size
nodeSourcePosition: at java.util.SubList.access$200(AbstractList.java:613) [bci: 1]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 8]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?76 
guard: - 
address: v2410 
=== Succesors ===
next: i2375 
=== Usages ===
v234 
=== Predecessor ===
a2373 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?76 guard: - address: v2410 #next: i2375  <|@  <|@
f <@~|@floating>@ <|@
tid v2409 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2373 
=== Succesors ===
=== Usages ===
i2375 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2373  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2375 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.offset
nodeSourcePosition: at java.util.SubList.access$000(AbstractList.java:613) [bci: 1]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 13]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2409 
=== Succesors ===
next: i2376 
=== Usages ===
i315 
=== Predecessor ===
i2374 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2409 #next: i2376  <|@  <|@
f <@~|@floating>@ <|@
tid v2408 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2371 
=== Succesors ===
=== Usages ===
i2376 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2371  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2376 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$ListItr.nextIndex(AbstractList.java:413) [bci: 1]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2408 
=== Succesors ===
next: v1519 
=== Usages ===
i315 
=== Predecessor ===
i2375 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2408 #next: v1519  <|@  <|@
f <@~|@floating>@ <|@
tid i315 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 16]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: i32
=== Inputs ===
x: i2376 
y: i2375 
=== Succesors ===
=== Usages ===
v234 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2376 y: i2375  <|@  <|@
f <@~|@floating>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i315 
y: i2374 
=== Succesors ===
=== Usages ===
v1519 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i315 y: i2374  <|@  <|@
f <@*|@fixed>@ <|@
tid v1519 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 133]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v234 
=== Succesors ===
trueSuccessor: v1518 
falseSuccessor: v1516 
=== Usages ===
=== Predecessor ===
i2376 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v234 #trueSuccessor: v1518 #falseSuccessor: v1516  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1518 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 133]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1923 
=== Usages ===
=== Predecessor ===
v1519 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1923  <|@  <|@
f <@~|@floating>@ <|@
tid i1924 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -278291
stableDimension: 0
stamp: i32 [-278291] ⇊00000000fffbc0ed ⇈00000000fffbc0ed
stampKind: i32
value: int[-278291|0xfffffffffffbc0ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1865 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1923 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1862 
=== Predecessor ===
v1518 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors 
    xhandlers
    flags 
    probability 4587542776907870065
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1516 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 133]
stamp: void
=== Inputs ===
=== Succesors ===
next: v873 
=== Usages ===
=== Predecessor ===
v1519 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v873  <|@  <|@
f <@*|@fixed>@ <|@
tid v873 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 146]
stamp: void
=== Inputs ===
result: a764 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1516 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a764 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1510 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=nextIndex target_method_class=Ljava/util/AbstractList$ListItr; position=at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1921 
=== Usages ===
=== Predecessor ===
v1511 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1921  <|@  <|@
f <@~|@floating>@ <|@
tid i1922 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -274995
stableDimension: 0
stamp: i32 [-274995] ⇊00000000fffbcdcd ⇈00000000fffbcdcd
stampKind: i32
value: int[-274995|0xfffffffffffbcdcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1865 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1921 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1862 
=== Predecessor ===
v1510 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B115" "B118" 
    xhandlers
    flags 
    probability 4575751434813445373
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1523 
=== Usages ===
=== Predecessor ===
v159 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1523  <|@  <|@
f <@~|@floating>@ <|@
tid v2307 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2339 
y: v2279 
=== Succesors ===
=== Usages ===
v1523 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2339 y: v2279  <|@  <|@
f <@*|@fixed>@ <|@
tid v1523 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap$KeyIterator; target_method=hasNext target_method_class=Ljava/util/HashMap$HashIterator; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2307 
=== Succesors ===
trueSuccessor: v1520 
falseSuccessor: v1522 
=== Usages ===
=== Predecessor ===
v158 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2307 #trueSuccessor: v1520 #falseSuccessor: v1522  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B116" "B117" 
    xhandlers
    flags 
    probability 4575751434813445373
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1520 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap$KeyIterator; target_method=hasNext target_method_class=Ljava/util/HashMap$HashIterator; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2377 
=== Usages ===
=== Predecessor ===
v1523 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2377  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2377 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$HashIterator.next
nodeSourcePosition: at java.util.HashMap$HashIterator.hasNext(HashMap.java:1435) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2386 
=== Succesors ===
next: v1527 
=== Usages ===
v1193 
=== Predecessor ===
v1520 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2386 #next: v1527  <|@  <|@
f <@~|@floating>@ <|@
tid v1193 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.hasNext(HashMap.java:1435) [bci: 4]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
=== Inputs ===
value: a2377 
=== Succesors ===
=== Usages ===
v1527 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2377  <|@  <|@
f <@*|@fixed>@ <|@
tid v1527 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 133]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1193 
=== Succesors ===
trueSuccessor: v1524 
falseSuccessor: v1526 
=== Usages ===
=== Predecessor ===
a2377 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1193 #trueSuccessor: v1524 #falseSuccessor: v1526  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors 
    xhandlers
    flags 
    probability 4575751434813445373
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1524 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 133]
stamp: void
=== Inputs ===
=== Succesors ===
next: v102 
=== Usages ===
=== Predecessor ===
v1527 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v102  <|@  <|@
f <@*|@fixed>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 146]
stamp: void
=== Inputs ===
result: a764 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1524 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a764 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1526 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 133]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1919 
=== Usages ===
=== Predecessor ===
v1527 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1919  <|@  <|@
f <@~|@floating>@ <|@
tid i1920 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -279571
stableDimension: 0
stamp: i32 [-279571] ⇊00000000fffbbbed ⇈00000000fffbbbed
stampKind: i32
value: int[-279571|0xfffffffffffbbbed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1865 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1919 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1862 
=== Predecessor ===
v1526 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1522 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap$KeyIterator; target_method=hasNext target_method_class=Ljava/util/HashMap$HashIterator; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1917 
=== Usages ===
=== Predecessor ===
v1523 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1917  <|@  <|@
f <@~|@floating>@ <|@
tid i1918 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -278579
stableDimension: 0
stamp: i32 [-278579] ⇊00000000fffbbfcd ⇈00000000fffbbfcd
stampKind: i32
value: int[-278579|0xfffffffffffbbfcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1865 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1917 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1862 
=== Predecessor ===
v1522 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B103" "B73" "B82" "B81" "B80" "B79" "B98" "B97" "B96" "B90" "B94" "B102" "B107" "B118" "B117" "B113" "B111" 
    successors 
    xhandlers
    flags 
    probability 2373678478600962048
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1865 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-279571 - -234300] ⇊00000000fff800c4 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v1862 
values: i1869 i1874 i1878 i1880 i1884 i1886 i1890 i1894 i1898 i1902 i1906 i1908 i1916 i1918 i1920 i1922 i1924 
=== Succesors ===
=== Usages ===
v1867 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1862 values: i1869 i1874 i1878 i1880 i1884 i1886 i1890 i1894 i1898 i1902 i1906 i1908 i1916 i1918 i1920 i1922 i1924  <|@  <|@
f <@~|@floating>@ <|@
tid a1866 <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/l/d$a;
valueDescription: a -
=== Inputs ===
merge: v1862 
values: a1870 a1836 a1836 a1836 a1836 a1836 a1836 a1836 a1836 a1836 a1836 a1836 a1836 a1836 a1836 a1836 a1836 
=== Succesors ===
=== Usages ===
v1867 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1862 values: a1870 a1836 a1836 a1836 a1836 a1836 a1836 a1836 a1836 a1836 a1836 a1836 a1836 a1836 a1836 a1836 a1836  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1862 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1868 v1873 v1877 v1879 v1883 v1885 v1889 v1893 v1897 v1901 v1905 v1907 v1915 v1917 v1919 v1921 v1923 
=== Succesors ===
next: v1867 
=== Usages ===
i1865 a1866 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1868 v1873 v1877 v1879 v1883 v1885 v1889 v1893 v1897 v1901 v1905 v1907 v1915 v1917 v1919 v1921 v1923 #next: v1867  <|@  <|@
f <@*|@fixed>@ <|@
tid v1867 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?76 
actionAndReason: i1865 
speculation: a1866 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1862 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?76 actionAndReason: i1865 speculation: a1866  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1385 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1930 
=== Usages ===
=== Predecessor ===
v2304 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1930  <|@  <|@
f <@~|@floating>@ <|@
tid a1933 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@435668424
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@435668424]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1930 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1932 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -235291
stableDimension: 0
stamp: i32 [-235291] ⇊00000000fffc68e5 ⇈00000000fffc68e5
stampKind: i32
value: int[-235291|0xfffffffffffc68e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1930 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1930 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?268 
actionAndReason: i1932 
speculation: a1933 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1385 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?268 actionAndReason: i1932 speculation: a1933  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1321 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashSet; target_method=size target_method_class=Ljava/util/HashSet; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1848 
=== Usages ===
=== Predecessor ===
v1322 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1848  <|@  <|@
f <@~|@floating>@ <|@
tid i1849 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -301875
stableDimension: 0
stamp: i32 [-301875] ⇊00000000fffb64cd ⇈00000000fffb64cd
stampKind: i32
value: int[-301875|0xfffffffffffb64cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1837 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1848 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1833 
=== Predecessor ===
v1321 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B3" "B121" "B7" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1837 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-302859 - -231691] ⇊00000000fff860c5 ⇈00000000ffff7ffd
valueDescription: i32
=== Inputs ===
merge: v1833 
values: i1847 i1849 i1851 
=== Succesors ===
=== Usages ===
v1839 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1833 values: i1847 i1849 i1851  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1833 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1846 v1848 v1850 
=== Succesors ===
next: v1839 
=== Usages ===
i1837 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1846 v1848 v1850 #next: v1839  <|@  <|@
f <@*|@fixed>@ <|@
tid v1839 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i1837 
speculation: a1836 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1833 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i1837 speculation: a1836  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v2472 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v2472  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/util/AbstractCollection;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v2413 v2414 v1152 ?68 ?739 ?759 ?105 ?593 v2424 v2415 a1674 ?594 v2411 v2417 a1606 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a [Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?76 ?759 v2472 a1271 ?105 ?1825 ?268 ?604 ?369 ?68 ?1826 v2425 v2380 a1270 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray(Object[])>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 176
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - - - 
=== Succesors ===
=== Usages ===
v1839 v2472 i2312 i2316 i2320 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2472 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a2 
=== Succesors ===
next: v2310 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a2 #next: v2310  <|@  <|@
f <@~|@floating>@ <|@
tid v2424 <|@
result [v0|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v2310 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2310 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2424 
=== Succesors ===
next: v115 
=== Usages ===
v2233 v2229 v2231 v2309 
=== Predecessor ===
v2472 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2424 #next: v115  <|@  <|@
f <@~|@floating>@ <|@
tid v2230 <|@
result meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
rawvalue: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2231 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2231 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2310 
y: v2230 
=== Succesors ===
=== Usages ===
v784 v115 v277 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2310 y: v2230  <|@  <|@
f <@~|@floating>@ <|@
tid a1836 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1839 v1939 a1866 a1866 a1866 a1866 a1866 a1866 a1866 v1857 a1866 a1866 a1866 a1866 a1866 a1866 a1866 a1866 a1866 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2415 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i2328 i2332 i2318 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2228 <|@
result meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
rawvalue: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2229 v2309 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2414 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i2327 a2329 i2314 a2315 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2413 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i2326 i2331 i2313 i2317 a2319 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2411 <|@
result [v0|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a2324 a2311 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$SubList; target_method=size target_method_class=Ljava/util/ArrayList$SubList; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
trueSuccessorProbability: 0.9408274225153865
=== Inputs ===
condition: v2231 
=== Succesors ===
trueSuccessor: v111 
falseSuccessor: v114 
=== Usages ===
=== Predecessor ===
v2310 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2231 #trueSuccessor: v111 #falseSuccessor: v114  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@55cef607 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9408274225153865 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606649439604196894
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$SubList; target_method=size target_method_class=Ljava/util/ArrayList$SubList; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2311 
=== Usages ===
=== Predecessor ===
v115 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2311  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2311 <|@
result v3|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList.this$0
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 1]
at java.util.ArrayList$SubList.size(ArrayList.java:1048) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
nullCheck: false
stamp: n# Ljava/util/ArrayList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2411 
=== Succesors ===
next: i2312 
=== Usages ===
v2421 
=== Predecessor ===
v111 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2411 #next: i2312  <|@  <|@
f <@~|@floating>@ <|@
tid v2421 <|@
result [v3|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2311 
=== Succesors ===
=== Usages ===
i2312 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2311  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2312 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 4]
at java.util.ArrayList$SubList.size(ArrayList.java:1048) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v2421 
=== Succesors ===
next: i2313 
=== Usages ===
v264 
=== Predecessor ===
a2311 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v2421 #next: i2313  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2313 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 8]
at java.util.ArrayList$SubList.size(ArrayList.java:1048) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2413 
=== Succesors ===
next: v1310 
=== Usages ===
v264 
=== Predecessor ===
i2312 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2413 #next: v1310  <|@  <|@
f <@~|@floating>@ <|@
tid v264 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 11]
at java.util.ArrayList$SubList.size(ArrayList.java:1048) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2312 
y: i2313 
=== Succesors ===
=== Usages ===
v1310 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2312 y: i2313  <|@  <|@
f <@*|@fixed>@ <|@
tid v1310 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 11]
at java.util.ArrayList$SubList.size(ArrayList.java:1048) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v264 
=== Succesors ===
trueSuccessor: v1307 
falseSuccessor: v1309 
=== Usages ===
=== Predecessor ===
i2313 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v264 #trueSuccessor: v1307 #falseSuccessor: v1309  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction v4|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606649439604196894
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1307 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 11]
at java.util.ArrayList$SubList.size(ArrayList.java:1048) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2314 
=== Usages ===
=== Predecessor ===
v1310 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2314  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2314 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList.size
nodeSourcePosition: at java.util.ArrayList$SubList.size(ArrayList.java:1049) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2414 
=== Succesors ===
next: v112 
=== Usages ===
i107 
=== Predecessor ===
v1307 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2414 #next: v112  <|@  <|@
f <@*|@fixed>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
i2314 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|DWORD] destination: B2 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1309 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 11]
at java.util.ArrayList$SubList.size(ArrayList.java:1048) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1846 
=== Usages ===
=== Predecessor ===
v1310 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1846  <|@  <|@
f <@~|@floating>@ <|@
tid i1847 <|@
result int[-297747|0xfffffffffffb74ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -297747
stableDimension: 0
stamp: i32 [-297747] ⇊00000000fffb74ed ⇈00000000fffb74ed
stampKind: i32
value: int[-297747|0xfffffffffffb74ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1837 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1846 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1833 
=== Predecessor ===
v1309 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-297747|0xfffffffffffb74ed]] destination: B3 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B8" 
    xhandlers
    flags 
    probability 4588688488168922656
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v124 
=== Usages ===
=== Predecessor ===
v115 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v124  <|@  <|@
f <@~|@floating>@ <|@
tid v2309 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2310 
y: v2228 
=== Succesors ===
=== Usages ===
v124 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2310 y: v2228  <|@  <|@
f <@*|@fixed>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/RandomAccessSubList; target_method=size target_method_class=Ljava/util/SubList; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
trueSuccessorProbability: 0.8652052238805972
=== Inputs ===
condition: v2309 
=== Succesors ===
trueSuccessor: v120 
falseSuccessor: v123 
=== Usages ===
=== Predecessor ===
v114 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2309 #trueSuccessor: v120 #falseSuccessor: v123  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8652052238805972 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4587539003186891847
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/RandomAccessSubList; target_method=size target_method_class=Ljava/util/SubList; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2315 
=== Usages ===
=== Predecessor ===
v124 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2315  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2315 <|@
result v6|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.l
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 5]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
nullCheck: false
stamp: n Ljava/util/AbstractList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2414 
=== Succesors ===
next: i2316 
=== Usages ===
v2422 
=== Predecessor ===
v120 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2414 #next: i2316  <|@  <|@
f <@~|@floating>@ <|@
tid v2422 <|@
result [v6|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2315 
=== Succesors ===
=== Usages ===
i2316 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2315  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2316 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 8]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v2422 
=== Succesors ===
next: i2317 
=== Usages ===
v306 
=== Predecessor ===
a2315 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v2422 #next: i2317  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2317 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 1]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2413 
=== Succesors ===
next: v1318 
=== Usages ===
v306 
=== Predecessor ===
i2316 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2413 #next: v1318  <|@  <|@
f <@~|@floating>@ <|@
tid v306 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2316 
y: i2317 
=== Succesors ===
=== Usages ===
v1318 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2316 y: i2317  <|@  <|@
f <@*|@fixed>@ <|@
tid v1318 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v306 
=== Succesors ===
trueSuccessor: v1315 
falseSuccessor: v1317 
=== Usages ===
=== Predecessor ===
i2317 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v306 #trueSuccessor: v1315 #falseSuccessor: v1317  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction v7|DWORD = MOV [v6|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4587539003186891847
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1315 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2318 
=== Usages ===
=== Predecessor ===
v1318 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2318  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2318 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.size
nodeSourcePosition: at java.util.SubList.size(AbstractList.java:646) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2415 
=== Succesors ===
next: v121 
=== Usages ===
i107 
=== Predecessor ===
v1315 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2415 #next: v121  <|@  <|@
f <@*|@fixed>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
i2318 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v8|DWORD] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1317 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1850 
=== Usages ===
=== Predecessor ===
v1318 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1850  <|@  <|@
f <@~|@floating>@ <|@
tid i1851 <|@
result int[-301075|0xfffffffffffb67ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -301075
stableDimension: 0
stamp: i32 [-301075] ⇊00000000fffb67ed ⇈00000000fffb67ed
stampKind: i32
value: int[-301075|0xfffffffffffb67ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1837 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1850 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1833 
=== Predecessor ===
v1317 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-301075|0xfffffffffffb67ed]] destination: B7 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" "B121" 
    xhandlers
    flags 
    probability 4575751561709176675
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1322 
=== Usages ===
=== Predecessor ===
v124 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1322  <|@  <|@
f <@~|@floating>@ <|@
tid v2232 <|@
result meta{HotSpotType<Ljava/util/HashSet;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
rawvalue: meta{HotSpotType<Ljava/util/HashSet;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/HashSet;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2233 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2233 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2310 
y: v2232 
=== Succesors ===
=== Usages ===
v1322 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2310 y: v2232  <|@  <|@
f <@*|@fixed>@ <|@
tid v1322 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashSet; target_method=size target_method_class=Ljava/util/HashSet; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2233 
=== Succesors ===
trueSuccessor: v1319 
falseSuccessor: v1321 
=== Usages ===
=== Predecessor ===
v123 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2233 #trueSuccessor: v1319 #falseSuccessor: v1321  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashSet;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 4575751561709176675
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1319 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashSet; target_method=size target_method_class=Ljava/util/HashSet; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2319 
=== Usages ===
=== Predecessor ===
v1322 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2319  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2319 <|@
result v9|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashSet.map
nodeSourcePosition: at java.util.HashSet.size(HashSet.java:182) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
nullCheck: false
stamp: n Ljava/util/HashMap;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2413 
=== Succesors ===
next: i2320 
=== Usages ===
v2423 
=== Predecessor ===
v1319 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2413 #next: i2320  <|@  <|@
f <@~|@floating>@ <|@
tid v2423 <|@
result [v9|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2319 
=== Succesors ===
=== Usages ===
i2320 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2319  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2320 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.size
nodeSourcePosition: at java.util.HashMap.size(HashMap.java:526) [bci: 1]
at java.util.HashSet.size(HashSet.java:182) [bci: 4]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v2423 
=== Succesors ===
next: v130 
=== Usages ===
i107 
=== Predecessor ===
a2319 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v2423 #next: v130  <|@  <|@
f <@*|@fixed>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
i2320 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction v10|DWORD = MOV [v9|DWORD[.] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|DWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B2" "B6" "B9" 
    successors "B11" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i107 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v104 
values: i2314 i2318 i2320 
=== Succesors ===
=== Usages ===
?105 v8 v2063 a2032 i1992 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v104 values: i2314 i2318 i2320  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v112 v121 v130 
=== Succesors ===
next: i2321 
=== Usages ===
i107 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v112 v121 v130 #next: i2321  <|@  <|@
f <@~|@floating>@ <|@
tid v2380 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i2321 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2321 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:177) [bci: 6]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v2380 
=== Succesors ===
next: v11 
=== Usages ===
v8 
=== Predecessor ===
v104 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2380 #next: v11  <|@  <|@
f <@~|@floating>@ <|@
tid v8 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:177) [bci: 8]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2321 
y: i107 
=== Succesors ===
=== Usages ===
v11 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2321 y: i107  <|@  <|@
f <@~|@floating>@ <|@
tid v2267 <|@
result meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2190 v2285 v2288 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2261 <|@
result meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2173 v2281 v2308 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2253 <|@
result meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2254 v2287 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2249 <|@
result meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
rawvalue: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2250 v2286 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2243 <|@
result meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2120 v2282 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2081 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a2095 a2149 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i21 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:121) [bci: 6]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 19]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v444 i75 v1292 v2129 v2177 i823 v612 v661 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i20 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:121) [bci: 6]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 19]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i94 i528 i349 v838 a2032 a2095 a2149 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v11 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:177) [bci: 8]
stamp: void
trueSuccessorProbability: 2.759914994618166E-4
=== Inputs ===
condition: v8 
=== Succesors ===
trueSuccessor: v9 
falseSuccessor: v10 
=== Usages ===
=== Predecessor ===
i2321 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v8 #trueSuccessor: v9 #falseSuccessor: v10  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|DWORD, y: [v1|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 2.759914994618166E-4 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4553726768201292438
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:177) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2322 
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2322  <|@  <|@
f <@~|@floating>@ <|@
tid v2425 <|@
result [v1|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v2322 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2322 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 19]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2425 
=== Succesors ===
next: a1093 
=== Usages ===
v1965 v2067 v2379 
=== Predecessor ===
v9 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2425 #next: a1093  <|@  <|@
f <@~|@floating>@ <|@
tid v2379 <|@
result [v13|DWORD * 8 + 224] <|@
d <@d|@=== Debug Properties ===
displacement: 224
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v2322 
=== Succesors ===
=== Usages ===
a1093 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v2322  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1093 <|@
result v14|QWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ArrayKlass::_component_mirror:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:124) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 19]
nullCheck: false
stamp: a!# Ljava/lang/Class;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2379 
=== Succesors ===
next: v1972 
=== Usages ===
v1969 
=== Predecessor ===
v2322 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2379 #next: v1972  <|@  <|@
f <@~|@floating>@ <|@
tid a1966 <|@
result v15|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
rawvalue: Class:void
stableDimension: 0
stamp: a!# Ljava/lang/Class;
stampKind: a -
value: Object[Class:void]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1969 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1969 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.throwsIllegalArgumentException(DynamicNewArrayNode.java:120) [bci: 2]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:369) [bci: 35]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1093 
y: a1966 
=== Succesors ===
=== Usages ===
v1972 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a1093 y: a1966  <|@  <|@
tid ?105 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray(Object[])>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 176
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - - - i107 
=== Succesors ===
=== Usages ===
a2032 v1328 v1973 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - - - i107  <|@  <|@
f <@*|@fixed>@ <|@
tid v1972 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:369) [bci: 49]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1969 
=== Succesors ===
trueSuccessor: v1971 
falseSuccessor: v1970 
=== Usages ===
=== Predecessor ===
a1093 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1969 #trueSuccessor: v1971 #falseSuccessor: v1970  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = MOV [v13|DWORD * 8 + 224] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:void] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v15|QWORD[.], y: v14|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1971 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:370) [bci: 52]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1973 
=== Usages ===
=== Predecessor ===
v1972 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1973  <|@  <|@
f <@*|@fixed>@ <|@
tid v1973 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.DeoptimizeNode.deopt(DeoptimizationAction, DeoptimizationReason) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:370) [bci: 58]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?105 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1971 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?105  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -505185 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 4]
stack: v11|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4553726768201292438
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1970 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:373) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1998 
=== Usages ===
=== Predecessor ===
v1972 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1998  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1998 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2058 
=== Usages ===
v2426 v2427 
=== Predecessor ===
v1970 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2058  <|@  <|@
f <@~|@floating>@ <|@
tid v2426 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1998 
index: - 
=== Succesors ===
=== Usages ===
j2058 v2062 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1998 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2058 <|@
result v16|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2426 
=== Succesors ===
next: j2059 
=== Usages ===
j2002 v2428 v2429 v2435 v2430 a2031 v2431 v2432 v2433 v2434 
=== Predecessor ===
j1998 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2426 #next: j2059  <|@  <|@
f <@~|@floating>@ <|@
tid v2427 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1998 
index: - 
=== Succesors ===
=== Usages ===
j2059 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1998 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2059 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2427 
=== Succesors ===
next: v2006 
=== Usages ===
v2003 
=== Predecessor ===
j2058 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2427 #next: v2006  <|@  <|@
f <@~|@floating>@ <|@
tid i922 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1992 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1992 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i107 
y: i922 
=== Succesors ===
=== Usages ===
i2298 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i107 y: i922  <|@  <|@
f <@~|@floating>@ <|@
tid i2297 <|@
result int[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2298 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2298 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: i32 [-2147483645 - 2147483647] ⇊0000000000000003
=== Inputs ===
x: i1992 
y: i2297 
=== Succesors ===
=== Usages ===
i1997 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1992 y: i2297  <|@  <|@
f <@~|@floating>@ <|@
tid i1996 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1997 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1997 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i2298 
y: i1996 
=== Succesors ===
=== Usages ===
j2001 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i2298 y: i1996  <|@  <|@
f <@~|@floating>@ <|@
tid j2001 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i1997 
=== Succesors ===
=== Usages ===
j2002 v2023 v2431 v2432 v2433 v2434 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1997  <|@  <|@
f <@~|@floating>@ <|@
tid j2002 <|@
result v21|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: i64
=== Inputs ===
x: j2001 
y: j2058 
=== Succesors ===
=== Usages ===
v2003 v2062 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2001 y: j2058  <|@  <|@
f <@~|@floating>@ <|@
tid v2003 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2059 
y: j2002 
=== Succesors ===
=== Usages ===
v2006 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2059 y: j2002  <|@  <|@
f <@*|@fixed>@ <|@
tid v2006 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2003 
=== Succesors ===
trueSuccessor: v2004 
falseSuccessor: v2005 
=== Usages ===
=== Predecessor ===
j2059 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2003 #trueSuccessor: v2004 #falseSuccessor: v2005  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SHL v11|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = LEA [v17|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = AND v18|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOVSXD v19|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = ADD (x: v20|QWORD, y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B19" 
    xhandlers
    flags 
    probability 4523627091285684586
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2004 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2032 
=== Usages ===
=== Predecessor ===
v2006 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2032  <|@  <|@
f <@~|@floating>@ <|@
tid v1965 <|@
result v22|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 19]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v2322 
=== Succesors ===
=== Usages ===
a2032 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v2322  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2032 <|@
result v23|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?105 
arguments: v1965 i107 i20 
=== Succesors ===
next: v2035 
=== Usages ===
a2036 
=== Predecessor ===
v2004 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?105 arguments: v1965 i107 i20 #next: v2035  <|@  <|@
f <@*|@fixed>@ <|@
tid v2035 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2034 
=== Predecessor ===
a2032 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = UNCOMPRESSPOINTER (input: v13|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@7a82eb53 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v22|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 4]
stack: v11|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:4] <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|QWORD[.]] destination: B14 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4553675856755721523
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2005 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2062 
=== Usages ===
=== Predecessor ===
v2006 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2062  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2062 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2426 
value: j2002 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2045 
=== Usages ===
=== Predecessor ===
v2005 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2426 value: j2002 stateAfter: - lastLocationAccess: - #next: v2045  <|@  <|@
f <@~|@floating>@ <|@
tid v2431 <|@
result [v20|QWORD + v16|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j2001 
index: j2058 
=== Succesors ===
=== Usages ===
v2045 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2001 index: j2058  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2045 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
address: v2431 
=== Succesors ===
next: v2048 
=== Usages ===
=== Predecessor ===
v2062 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2431 #next: v2048  <|@  <|@
f <@~|@floating>@ <|@
tid v2432 <|@
result [v20|QWORD + v16|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j2001 
index: j2058 
=== Succesors ===
=== Usages ===
v2048 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2001 index: j2058  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2048 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
address: v2432 
=== Succesors ===
next: v2051 
=== Usages ===
=== Predecessor ===
v2045 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2432 #next: v2051  <|@  <|@
f <@~|@floating>@ <|@
tid v2433 <|@
result [v20|QWORD + v16|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j2001 
index: j2058 
=== Succesors ===
=== Usages ===
v2051 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2001 index: j2058  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2051 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
address: v2433 
=== Succesors ===
next: v2054 
=== Usages ===
=== Predecessor ===
v2048 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2433 #next: v2054  <|@  <|@
f <@~|@floating>@ <|@
tid v2434 <|@
result [v20|QWORD + v16|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j2001 
index: j2058 
=== Succesors ===
=== Usages ===
v2054 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2001 index: j2058  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2054 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
address: v2434 
=== Succesors ===
next: v2063 
=== Usages ===
=== Predecessor ===
v2051 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2434 #next: v2063  <|@  <|@
f <@~|@floating>@ <|@
tid v2428 <|@
result [v16|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2058 
index: - 
=== Succesors ===
=== Usages ===
v2063 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2058 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2063 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2428 
value: i107 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2064 
=== Usages ===
=== Predecessor ===
v2054 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2428 value: i107 stateAfter: - lastLocationAccess: - #next: v2064  <|@  <|@
f <@~|@floating>@ <|@
tid v2429 <|@
result [v16|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2058 
index: - 
=== Succesors ===
=== Usages ===
v2064 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2058 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1967 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2064 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2064 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2429 
value: j1967 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2067 
=== Usages ===
=== Predecessor ===
v2063 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2429 value: j1967 stateAfter: - lastLocationAccess: - #next: v2067  <|@  <|@
f <@~|@floating>@ <|@
tid v2435 <|@
result [v16|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2058 
index: - 
=== Succesors ===
=== Usages ===
v2067 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2058 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2067 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2435 
value: v2322 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2020 
=== Usages ===
=== Predecessor ===
v2064 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2435 value: v2322 stateAfter: - lastLocationAccess: - #next: v2020  <|@  <|@
f <@~|@floating>@ <|@
tid j924 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2022 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2020 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.fillMemory(NewObjectSnippets.java:489) [bci: 233]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:556) [bci: 37]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2021 
=== Predecessor ===
v2067 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v20|QWORD + v16|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v20|QWORD + v16|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v20|QWORD + v16|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v20|QWORD + v16|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v16|QWORD + 12], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v16|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v16|QWORD + 8], y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[16|0x10]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" 
    successors "B17" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4558179456383092019
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2022 <|@
result v24|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:556) [bci: 37]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2021 
values: j924 j2028 
=== Succesors ===
=== Usages ===
v2023 v2430 j2028 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2021 values: j924 j2028  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2021 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.fillMemory(NewObjectSnippets.java:489) [bci: 233]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:556) [bci: 37]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2020 
=== Succesors ===
next: v2026 
=== Usages ===
j2022 v2025 v2029 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2020 #next: v2026  <|@  <|@
f <@~|@floating>@ <|@
tid v2023 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.fillMemory(NewObjectSnippets.java:489) [bci: 241]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:556) [bci: 37]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2022 
y: j2001 
=== Succesors ===
=== Usages ===
v2026 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2022 y: j2001  <|@  <|@
f <@*|@fixed>@ <|@
tid v2026 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.fillMemory(NewObjectSnippets.java:489) [bci: 241]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:556) [bci: 37]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2023 
=== Succesors ===
trueSuccessor: v2024 
falseSuccessor: v2025 
=== Usages ===
=== Predecessor ===
v2021 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2023 #trueSuccessor: v2024 #falseSuccessor: v2025  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v20|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4553675856755721523
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2024 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.fillMemory(NewObjectSnippets.java:490) [bci: 244]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:556) [bci: 37]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2068 
=== Usages ===
=== Predecessor ===
v2026 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2068  <|@  <|@
f <@~|@floating>@ <|@
tid v2430 <|@
result [v16|QWORD + v24|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2058 
index: j2022 
=== Succesors ===
=== Usages ===
v2068 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2058 index: j2022  <|@  <|@
f <@~|@floating>@ <|@
tid j1601 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2068 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2068 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.fillMemory(NewObjectSnippets.java:490) [bci: 251]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:556) [bci: 37]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2430 
value: j1601 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2029 
=== Usages ===
=== Predecessor ===
v2024 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2430 value: j1601 stateAfter: - lastLocationAccess: - #next: v2029  <|@  <|@
f <@~|@floating>@ <|@
tid j1959 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2028 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2028 <|@
result v25|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.fillMemory(NewObjectSnippets.java:489) [bci: 258]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:556) [bci: 37]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: i64
=== Inputs ===
x: j2022 
y: j1959 
=== Succesors ===
=== Usages ===
j2022 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2022 y: j1959  <|@  <|@
f <@*|@fixed>@ <|@
tid v2029 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.fillMemory(NewObjectSnippets.java:489) [bci: 233]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:556) [bci: 37]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
loopBegin: v2021 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2068 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2021  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v16|QWORD + v24|QWORD * 1], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = LEA [v24|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|QWORD] destination: B17 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4553675856755721523
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2025 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.fillMemory(NewObjectSnippets.java:493) [bci: 266]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:556) [bci: 37]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2021 
=== Succesors ===
next: v2030 
=== Usages ===
=== Predecessor ===
v2026 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2021 #next: v2030  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2030 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2031 
=== Usages ===
=== Predecessor ===
v2025 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a2031  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2031 <|@
result v26|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j2058 
=== Succesors ===
next: v2033 
=== Usages ===
a2036 
=== Predecessor ===
v2030 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2058 #next: v2033  <|@  <|@
f <@*|@fixed>@ <|@
tid v2033 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2034 
=== Predecessor ===
a2031 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = MOVE v16|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|QWORD[.]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B14" 
    successors "B20" "B23" 
    xhandlers
    flags 
    probability 4553726768201292438
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a2036 <|@
result v27|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v2034 
values: a2031 a2032 
=== Succesors ===
=== Usages ===
a1270 v2436 a1271 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2034 values: a2031 a2032  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2034 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2033 v2035 
=== Succesors ===
next: v2323 
=== Usages ===
a2036 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2033 v2035 #next: v2323  <|@  <|@
f <@~|@floating>@ <|@
tid v2436 <|@
result [v27|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a2036 
index: - 
=== Succesors ===
=== Usages ===
v2323 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2036 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2323 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 26]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2436 
=== Succesors ===
next: v1330 
=== Usages ===
v2236 
=== Predecessor ===
v2034 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2436 #next: v1330  <|@  <|@
f <@~|@floating>@ <|@
tid v2235 <|@
result meta{HotSpotType<[Ljava/lang/Class;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 26]
rawvalue: meta{HotSpotType<[Ljava/lang/Class;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[Ljava/lang/Class;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2236 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2236 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 26]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2323 
y: v2235 
=== Succesors ===
=== Usages ===
v1330 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2323 y: v2235  <|@  <|@
f <@*|@fixed>@ <|@
tid v1330 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 26]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2236 
=== Succesors ===
trueSuccessor: v1327 
falseSuccessor: v1329 
=== Usages ===
=== Predecessor ===
v2323 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2236 #trueSuccessor: v1327 #falseSuccessor: v1329  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v27|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Class;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4553726768201292438
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1327 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v277 
=== Usages ===
=== Predecessor ===
v1330 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v277  <|@  <|@
f <@*|@fixed>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$SubList; target_method=iterator target_method_class=Ljava/util/ArrayList$SubList; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 0.9408274225153865
=== Inputs ===
condition: v2231 
=== Succesors ===
trueSuccessor: v274 
falseSuccessor: v276 
=== Usages ===
=== Predecessor ===
v1327 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2231 #trueSuccessor: v274 #falseSuccessor: v276  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9408274225153865 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 4553425512055502574
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$SubList; target_method=iterator target_method_class=Ljava/util/ArrayList$SubList; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v755 
=== Usages ===
=== Predecessor ===
v277 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v755  <|@  <|@
f <@*|@fixed>@ <|@
tid v755 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v754 
=== Predecessor ===
v274 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|QWORD[.]] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B36" 
    xhandlers
    flags 
    probability 4535441323467356793
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v758 
=== Usages ===
=== Predecessor ===
v277 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v758  <|@  <|@
f <@*|@fixed>@ <|@
tid v758 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v757 
=== Predecessor ===
v276 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|QWORD[.]] destination: B22 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1329 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1328 
=== Usages ===
=== Predecessor ===
v1330 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1328  <|@  <|@
f <@*|@fixed>@ <|@
tid v1328 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1097
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 26]
reason: TypeCheckedInliningViolated
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?105 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1329 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?105  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -280883 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 4]
stack: v11|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B25" "B35" 
    xhandlers
    flags 
    probability 4607179932889589141
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:177) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v784 
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v784  <|@  <|@
f <@*|@fixed>@ <|@
tid v784 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$SubList; target_method=iterator target_method_class=Ljava/util/ArrayList$SubList; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 0.9408274225153865
=== Inputs ===
condition: v2231 
=== Succesors ===
trueSuccessor: v782 
falseSuccessor: v783 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2231 #trueSuccessor: v782 #falseSuccessor: v783  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9408274225153865 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606647100791496063
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v782 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$SubList; target_method=iterator target_method_class=Ljava/util/ArrayList$SubList; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v756 
=== Usages ===
=== Predecessor ===
v784 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v756  <|@  <|@
f <@*|@fixed>@ <|@
tid v756 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v754 
=== Predecessor ===
v782 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v1|QWORD[.]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" "B25" 
    successors "B27" "B33" 
    xhandlers
    flags 
    probability 4606649439604196894
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1270 <|@
result v28|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v754 
values: a2036 a2 
=== Succesors ===
=== Usages ===
?68 a764 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v754 values: a2036 a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v754 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v755 v756 
=== Succesors ===
next: a2324 
=== Usages ===
a1270 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v755 v756 #next: a2324  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2324 <|@
result v29|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList.this$0
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 1]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1099) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: n# Ljava/util/ArrayList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2411 
=== Succesors ===
next: i2325 
=== Usages ===
v2412 
=== Predecessor ===
v754 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2411 #next: i2325  <|@  <|@
tid ?68 <|@
d <@d|@=== Debug Properties ===
bci: 32
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray(Object[])>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 179
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - - - a1270 
=== Succesors ===
=== Usages ===
v1857 a2095 i2325 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - - - a1270  <|@  <|@
f <@~|@floating>@ <|@
tid v2412 <|@
result [v29|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2324 
=== Succesors ===
=== Usages ===
i2325 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2324  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2325 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 4]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1099) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?68 
guard: - 
address: v2412 
=== Succesors ===
next: i2326 
=== Usages ===
v440 v2127 
=== Predecessor ===
a2324 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?68 guard: - address: v2412 #next: i2326  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2326 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 8]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1099) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2413 
=== Succesors ===
next: v1338 
=== Usages ===
v440 
=== Predecessor ===
i2325 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2413 #next: v1338  <|@  <|@
f <@~|@floating>@ <|@
tid v440 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 11]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1099) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2325 
y: i2326 
=== Succesors ===
=== Usages ===
v1338 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2325 y: i2326  <|@  <|@
f <@*|@fixed>@ <|@
tid v1338 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 11]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1099) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v440 
=== Succesors ===
trueSuccessor: v1335 
falseSuccessor: v1337 
=== Usages ===
=== Predecessor ===
i2326 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v440 #trueSuccessor: v1335 #falseSuccessor: v1337  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: v28|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction v30|DWORD = MOV [v29|DWORD[.] * 8 + 12] size: DWORD state [bci:32] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v30|DWORD, y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4606649439604196894
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1335 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 11]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1099) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2327 
=== Usages ===
=== Predecessor ===
v1338 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2327  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2327 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList.size
nodeSourcePosition: at java.util.ArrayList$SubList.rangeCheckForAdd(ArrayList.java:1229) [bci: 6]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1100) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2414 
=== Succesors ===
next: v1342 
=== Usages ===
v444 
=== Predecessor ===
v1335 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2414 #next: v1342  <|@  <|@
f <@~|@floating>@ <|@
tid v444 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList$SubList.rangeCheckForAdd(ArrayList.java:1229) [bci: 9]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1100) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2327 
y: i21 
=== Succesors ===
=== Usages ===
v1342 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2327 y: i21  <|@  <|@
f <@*|@fixed>@ <|@
tid v1342 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.rangeCheckForAdd(ArrayList.java:1229) [bci: 9]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1100) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v444 
=== Succesors ===
trueSuccessor: v1341 
falseSuccessor: v1339 
=== Usages ===
=== Predecessor ===
i2327 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v444 #trueSuccessor: v1341 #falseSuccessor: v1339  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1341 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.rangeCheckForAdd(ArrayList.java:1229) [bci: 9]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1100) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1858 
=== Usages ===
=== Predecessor ===
v1342 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1858  <|@  <|@
f <@~|@floating>@ <|@
tid i1859 <|@
result int[-284947|0xfffffffffffba6ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -284947
stableDimension: 0
stamp: i32 [-284947] ⇊00000000fffba6ed ⇈00000000fffba6ed
stampKind: i32
value: int[-284947|0xfffffffffffba6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1855 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1858 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1852 
=== Predecessor ===
v1341 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-284947|0xfffffffffffba6ed]] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4606649439604196894
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.rangeCheckForAdd(ArrayList.java:1229) [bci: 9]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1100) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2083 
=== Usages ===
=== Predecessor ===
v1342 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2083  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2083 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2099 
=== Usages ===
v2437 v2438 
=== Predecessor ===
v1339 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2099  <|@  <|@
f <@~|@floating>@ <|@
tid v2437 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2083 
index: - 
=== Succesors ===
=== Usages ===
j2099 v2101 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2083 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2099 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2437 
=== Succesors ===
next: j2100 
=== Usages ===
j2238 j2105 v2455 
=== Predecessor ===
j2083 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2437 #next: j2100  <|@  <|@
f <@~|@floating>@ <|@
tid v2438 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2083 
index: - 
=== Succesors ===
=== Usages ===
j2100 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2083 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2100 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2438 
=== Succesors ===
next: v2091 
=== Usages ===
v2088 
=== Predecessor ===
j2099 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2438 #next: v2091  <|@  <|@
f <@~|@floating>@ <|@
tid j2237 <|@
result long[40|0x28] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 40
stableDimension: 0
stamp: i64 [40] ⇊0000000000000028 ⇈0000000000000028
stampKind: i64
value: long[40|0x28]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2238 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2238 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2099 
y: j2237 
=== Succesors ===
=== Usages ===
v2088 v2101 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2099 y: j2237  <|@  <|@
f <@~|@floating>@ <|@
tid v2088 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2100 
y: j2238 
=== Succesors ===
=== Usages ===
v2091 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2100 y: j2238  <|@  <|@
f <@*|@fixed>@ <|@
tid v2091 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2088 
=== Succesors ===
trueSuccessor: v2089 
falseSuccessor: v2090 
=== Usages ===
=== Predecessor ===
j2100 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2088 #trueSuccessor: v2089 #falseSuccessor: v2090  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA [v31|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v32|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576577122618762551
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2089 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a2095 
=== Usages ===
=== Predecessor ===
v2091 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2095  <|@  <|@
f <@~|@floating>@ <|@
tid i2240 <|@
result int[6|0x6] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 6
stableDimension: 0
stamp: i32 [6] ⇊0000000000000006 ⇈0000000000000006
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
a2095 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2095 <|@
result v33|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?68 
arguments: v2081 i2240 i20 
=== Succesors ===
next: j2096 
=== Usages ===
j2096 
=== Predecessor ===
v2089 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?68 arguments: v2081 i2240 i20 #next: j2096  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2096 <|@
result v33|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2095 
=== Succesors ===
next: v2106 
=== Usages ===
j2105 
=== Predecessor ===
a2095 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a2095 #next: v2106  <|@  <|@
f <@*|@fixed>@ <|@
tid v2106 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2103 
=== Predecessor ===
j2096 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: v28|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:32] <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|QWORD[.]] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606564697403607689
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2090 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2101 
=== Usages ===
=== Predecessor ===
v2091 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2101  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2101 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2437 
value: j2238 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2098 
=== Usages ===
=== Predecessor ===
v2090 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2437 value: j2238 stateAfter: - lastLocationAccess: - #next: v2098  <|@  <|@
f <@~|@floating>@ <|@
tid v2455 <|@
result [v31|QWORD + 232] <|@
d <@d|@=== Debug Properties ===
displacement: 232
scale: Times1
stamp: void*
=== Inputs ===
base: j2099 
index: - 
=== Succesors ===
=== Usages ===
v2098 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2099 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2098 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v2455 
=== Succesors ===
next: v2104 
=== Usages ===
=== Predecessor ===
v2101 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2455 #next: v2104  <|@  <|@
f <@*|@fixed>@ <|@
tid v2104 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2103 
=== Predecessor ===
v2098 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v31|QWORD + 232] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v31|QWORD] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B64" 
    xhandlers
    flags 
    probability 4606649439604196894
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2105 <|@
result v34|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2103 
values: j2099 j2096 
=== Succesors ===
=== Usages ===
v2441 v2440 a1603 v2456 v2457 v2458 v2459 v2460 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2103 values: j2099 j2096  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2103 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2104 v2106 
=== Succesors ===
next: a1603 
=== Usages ===
j2105 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2104 v2106 #next: a1603  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1603 <|@
result v35|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j2105 
=== Succesors ===
next: j2116 
=== Usages ===
a1609 
=== Predecessor ===
v2103 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2105 #next: j2116  <|@  <|@
f <@~|@floating>@ <|@
tid v1720 <|@
result v36|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
rawvalue: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j2111 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2111 <|@
result v36|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1720 
=== Succesors ===
=== Usages ===
v2439 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1720  <|@  <|@
f <@~|@floating>@ <|@
tid v2439 <|@
result [v36|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j2111 
index: - 
=== Succesors ===
=== Usages ===
j2116 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2111 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2116 <|@
result v37|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2439 
=== Succesors ===
next: v2117 
=== Usages ===
v2117 
=== Predecessor ===
a1603 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2439 #next: v2117  <|@  <|@
f <@~|@floating>@ <|@
tid v2440 <|@
result [v34|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2105 
index: - 
=== Succesors ===
=== Usages ===
v2117 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2105 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2117 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2440 
value: j2116 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2120 
=== Usages ===
=== Predecessor ===
j2116 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2440 value: j2116 stateAfter: - lastLocationAccess: - #next: v2120  <|@  <|@
f <@~|@floating>@ <|@
tid v2441 <|@
result [v34|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2105 
index: - 
=== Succesors ===
=== Usages ===
v2120 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2105 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2120 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2441 
value: v2243 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2125 
=== Usages ===
=== Predecessor ===
v2117 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2441 value: v2243 stateAfter: - lastLocationAccess: - #next: v2125  <|@  <|@
f <@~|@floating>@ <|@
tid v2456 <|@
result [v34|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2105 
index: - 
=== Succesors ===
=== Usages ===
v2125 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2105 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j2123 <|@
result v38|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4294967296
stableDimension: 0
stamp: i64 [-4294967296] ⇊ffffffff00000000 ⇈ffffffff00000000
stampKind: i64
value: long[-4294967296|0xffffffff00000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2125 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2125 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2456 
value: j2123 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2127 
=== Usages ===
=== Predecessor ===
v2120 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2456 value: j2123 stateAfter: - lastLocationAccess: - #next: v2127  <|@  <|@
f <@~|@floating>@ <|@
tid v2457 <|@
result [v34|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j2105 
index: - 
=== Succesors ===
=== Usages ===
v2127 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2105 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2127 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2457 
value: i2325 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2129 
=== Usages ===
=== Predecessor ===
v2125 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2457 value: i2325 stateAfter: - lastLocationAccess: - #next: v2129  <|@  <|@
f <@~|@floating>@ <|@
tid v2458 <|@
result [v34|QWORD[*] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j2105 
index: - 
=== Succesors ===
=== Usages ===
v2129 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2105 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2129 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2458 
value: i21 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i2328 
=== Usages ===
=== Predecessor ===
v2127 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2458 value: i21 stateAfter: - lastLocationAccess: - #next: i2328  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2328 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList.offset
nodeSourcePosition: at java.util.ArrayList$SubList.listIterator(ArrayList.java:1101) [bci: 10]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2415 
=== Succesors ===
next: v2131 
=== Usages ===
v2131 
=== Predecessor ===
v2129 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2415 #next: v2131  <|@  <|@
f <@~|@floating>@ <|@
tid v2459 <|@
result [v34|QWORD[*] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: j2105 
index: - 
=== Succesors ===
=== Usages ===
v2131 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2105 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2131 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2459 
value: i2328 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2133 
=== Usages ===
=== Predecessor ===
i2328 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2459 value: i2328 stateAfter: - lastLocationAccess: - #next: v2133  <|@  <|@
f <@~|@floating>@ <|@
tid v2460 <|@
result [v34|QWORD[*] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: j2105 
index: - 
=== Succesors ===
=== Usages ===
v2133 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2105 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a1606 <|@
result v40|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! Ljava/util/AbstractCollection;
=== Inputs ===
value: a1 
=== Succesors ===
=== Usages ===
v2133 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2133 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2460 
value: a1606 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1609 
=== Usages ===
=== Predecessor ===
v2131 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2460 value: a1606 stateAfter: - lastLocationAccess: - #next: a1609  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1609 <|@
result v35|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1603 
=== Succesors ===
next: v1610 
=== Usages ===
a270 
=== Predecessor ===
v2133 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1603 #next: v1610  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1610 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v275 
=== Usages ===
=== Predecessor ===
a1609 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v275  <|@  <|@
f <@*|@fixed>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v267 
=== Predecessor ===
v1610 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v34|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE v34|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV [v36|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v34|QWORD[*]], y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v34|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVE input: long[-4294967296|0xffffffff00000000] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v34|QWORD[*] + 12], y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v34|QWORD[*] + 20], y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v34|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v34|QWORD[*] + 28], y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|DWORD[.] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@7a82eb53 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v34|QWORD[*] + 32], y: v40|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v35|QWORD[.], v28|QWORD[.]] destination: B32 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1337 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 11]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1099) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1860 
=== Usages ===
=== Predecessor ===
v1338 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1860  <|@  <|@
f <@~|@floating>@ <|@
tid i1861 <|@
result int[-284179|0xfffffffffffba9ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -284179
stableDimension: 0
stamp: i32 [-284179] ⇊00000000fffba9ed ⇈00000000fffba9ed
stampKind: i32
value: int[-284179|0xfffffffffffba9ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1855 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1860 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1852 
=== Predecessor ===
v1337 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-284179|0xfffffffffffba9ed]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B33" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1855 <|@
result v41|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-284947 - -282635] ⇊00000000fffba0e5 ⇈00000000fffbaffd
valueDescription: i32
=== Inputs ===
merge: v1852 
values: i1859 i1861 
=== Succesors ===
=== Usages ===
v1857 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1852 values: i1859 i1861  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1852 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1858 v1860 
=== Succesors ===
next: v1857 
=== Usages ===
i1855 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1858 v1860 #next: v1857  <|@  <|@
f <@*|@fixed>@ <|@
tid v1857 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?68 
actionAndReason: i1855 
speculation: a1836 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1852 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?68 actionAndReason: i1855 speculation: a1836  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v41|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: v28|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B36" 
    xhandlers
    flags 
    probability 4588686134605283673
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v783 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v760 
=== Usages ===
=== Predecessor ===
v784 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v760  <|@  <|@
f <@*|@fixed>@ <|@
tid v760 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v757 
=== Predecessor ===
v783 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v1|QWORD[.]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B22" "B35" 
    successors "B37" "B63" 
    xhandlers
    flags 
    probability 4588688488168922656
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1271 <|@
result v42|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v757 
values: a2036 a2 
=== Succesors ===
=== Usages ===
?1825 a764 a764 ?604 ?759 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v757 values: a2036 a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v757 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v758 v760 
=== Succesors ===
next: v589 
=== Usages ===
a1271 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v758 v760 #next: v589  <|@  <|@
f <@~|@floating>@ <|@
tid v2229 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2310 
y: v2228 
=== Succesors ===
=== Usages ===
v589 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2310 y: v2228  <|@  <|@
f <@*|@fixed>@ <|@
tid v589 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/RandomAccessSubList; target_method=iterator target_method_class=Ljava/util/SubList; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 0.8652052238805972
=== Inputs ===
condition: v2229 
=== Succesors ===
trueSuccessor: v586 
falseSuccessor: v588 
=== Usages ===
=== Predecessor ===
v757 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2229 #trueSuccessor: v586 #falseSuccessor: v588  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v42|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8652052238805972 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B61" 
    xhandlers
    flags 
    probability 4587539003186891847
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/RandomAccessSubList; target_method=iterator target_method_class=Ljava/util/SubList; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2329 
=== Usages ===
=== Predecessor ===
v589 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2329  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2329 <|@
result v43|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.l
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 5]
at java.util.SubList.listIterator(AbstractList.java:695) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: n Ljava/util/AbstractList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2414 
=== Succesors ===
next: i2330 
=== Usages ===
?669 v2200 v2416 v2419 v2442 v2202 ?820 v2474 
=== Predecessor ===
v586 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2414 #next: i2330  <|@  <|@
tid ?759 <|@
d <@d|@=== Debug Properties ===
bci: 32
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray(Object[])>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 179
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - - - a1271 
=== Succesors ===
=== Usages ===
v1939 i2330 i2336 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - - - a1271  <|@  <|@
f <@~|@floating>@ <|@
tid v2416 <|@
result [v43|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2329 
=== Succesors ===
=== Usages ===
i2330 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2329  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2330 <|@
result v44|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 8]
at java.util.SubList.listIterator(AbstractList.java:695) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?759 
guard: - 
address: v2416 
=== Succesors ===
next: i2331 
=== Usages ===
v608 v2198 
=== Predecessor ===
a2329 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?759 guard: - address: v2416 #next: i2331  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2331 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 1]
at java.util.SubList.listIterator(AbstractList.java:695) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2413 
=== Succesors ===
next: v1350 
=== Usages ===
v608 
=== Predecessor ===
i2330 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2413 #next: v1350  <|@  <|@
f <@~|@floating>@ <|@
tid v608 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.listIterator(AbstractList.java:695) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2330 
y: i2331 
=== Succesors ===
=== Usages ===
v1350 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2330 y: i2331  <|@  <|@
f <@*|@fixed>@ <|@
tid v1350 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.listIterator(AbstractList.java:695) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v608 
=== Succesors ===
trueSuccessor: v1347 
falseSuccessor: v1349 
=== Usages ===
=== Predecessor ===
i2331 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v608 #trueSuccessor: v1347 #falseSuccessor: v1349  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: v42|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction v44|DWORD = MOV [v43|DWORD[.] * 8 + 12] size: DWORD state [bci:32] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v44|DWORD, y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4587539003186891847
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1347 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.listIterator(AbstractList.java:695) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2332 
=== Usages ===
=== Predecessor ===
v1350 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2332  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2332 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.size
nodeSourcePosition: at java.util.SubList.rangeCheckForAdd(AbstractList.java:759) [bci: 6]
at java.util.SubList.listIterator(AbstractList.java:696) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2415 
=== Succesors ===
next: v1354 
=== Usages ===
v612 
=== Predecessor ===
v1347 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2415 #next: v1354  <|@  <|@
f <@~|@floating>@ <|@
tid v612 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.SubList.rangeCheckForAdd(AbstractList.java:759) [bci: 9]
at java.util.SubList.listIterator(AbstractList.java:696) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2332 
y: i21 
=== Succesors ===
=== Usages ===
v1354 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2332 y: i21  <|@  <|@
f <@*|@fixed>@ <|@
tid v1354 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.rangeCheckForAdd(AbstractList.java:759) [bci: 9]
at java.util.SubList.listIterator(AbstractList.java:696) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v612 
=== Succesors ===
trueSuccessor: v1353 
falseSuccessor: v1351 
=== Usages ===
=== Predecessor ===
i2332 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v612 #trueSuccessor: v1353 #falseSuccessor: v1351  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v0|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1353 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.rangeCheckForAdd(AbstractList.java:759) [bci: 9]
at java.util.SubList.listIterator(AbstractList.java:696) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1940 
=== Usages ===
=== Predecessor ===
v1354 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1940  <|@  <|@
f <@~|@floating>@ <|@
tid i1941 <|@
result int[-289043|0xfffffffffffb96ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -289043
stableDimension: 0
stamp: i32 [-289043] ⇊00000000fffb96ed ⇈00000000fffb96ed
stampKind: i32
value: int[-289043|0xfffffffffffb96ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1937 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1940 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1934 
=== Predecessor ===
v1353 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-289043|0xfffffffffffb96ed]] destination: B39 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4587539003186891847
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1351 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.rangeCheckForAdd(AbstractList.java:759) [bci: 9]
at java.util.SubList.listIterator(AbstractList.java:696) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2333 
=== Usages ===
=== Predecessor ===
v1354 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2333  <|@  <|@
f <@~|@floating>@ <|@
tid v2417 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i2333 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2333 <|@
result v45|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.offset
nodeSourcePosition: at java.util.SubList.access$000(AbstractList.java:613) [bci: 1]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 30]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2417 
=== Succesors ===
next: v1358 
=== Usages ===
v2194 v838 v666 ?669 v661 v825 ?820 ?820 
=== Predecessor ===
v1351 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2417 #next: v1358  <|@  <|@
f <@~|@floating>@ <|@
tid v661 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2333 
y: i21 
=== Succesors ===
=== Usages ===
v1358 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2333 y: i21  <|@  <|@
f <@*|@fixed>@ <|@
tid v1358 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v661 
=== Succesors ===
trueSuccessor: v1357 
falseSuccessor: v1355 
=== Usages ===
=== Predecessor ===
i2333 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v661 #trueSuccessor: v1357 #falseSuccessor: v1355  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v45|DWORD, y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1357 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1944 
=== Usages ===
=== Predecessor ===
v1358 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1944  <|@  <|@
f <@~|@floating>@ <|@
tid i1945 <|@
result int[-291091|0xfffffffffffb8eed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -291091
stableDimension: 0
stamp: i32 [-291091] ⇊00000000fffb8eed ⇈00000000fffb8eed
stampKind: i32
value: int[-291091|0xfffffffffffb8eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1937 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1944 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1934 
=== Predecessor ===
v1357 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-291091|0xfffffffffffb8eed]] destination: B41 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B60" 
    xhandlers
    flags 
    probability 4587539003186891847
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1355 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2334 
=== Usages ===
=== Predecessor ===
v1358 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2334  <|@  <|@
f <@~|@floating>@ <|@
tid v2442 <|@
result [v43|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2329 
=== Succesors ===
=== Usages ===
v2334 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2329  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2334 <|@
result v46|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2442 
=== Succesors ===
next: v1135 
=== Usages ===
v2418 v2250 v2252 v2254 
=== Predecessor ===
v1355 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2442 #next: v1135  <|@  <|@
f <@~|@floating>@ <|@
tid v2418 <|@
result [v46|DWORD * 8 + 696] <|@
d <@d|@=== Debug Properties ===
displacement: 696
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v2334 
=== Succesors ===
=== Usages ===
v1135 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v2334  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1135 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v2418 
=== Succesors ===
next: v1362 
=== Usages ===
v648 
=== Predecessor ===
v2334 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2418 #next: v1362  <|@  <|@
f <@~|@floating>@ <|@
tid v646 <|@
result v47|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
rawvalue: meta{HotSpotMethod<AbstractList.listIterator(int)>}
stableDimension: 0
stamp: Method*!
stampKind: Method*
value: meta{HotSpotMethod<AbstractList.listIterator(int)>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v648 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v648 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1135 
y: v646 
=== Succesors ===
=== Usages ===
v1362 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1135 y: v646  <|@  <|@
f <@*|@fixed>@ <|@
tid v1362 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=null target_method=listIterator target_method_class=Ljava/util/AbstractList; position=at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v648 
=== Succesors ===
trueSuccessor: v1359 
falseSuccessor: v1361 
=== Usages ===
=== Predecessor ===
v1135 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v648 #trueSuccessor: v1359 #falseSuccessor: v1361  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOV [v43|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<AbstractList.listIterator(int)>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v47|QWORD, y: [v46|DWORD * 8 + 696]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B47" 
    xhandlers
    flags 
    probability 4587539003186891847
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1359 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=null target_method=listIterator target_method_class=Ljava/util/AbstractList; position=at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v692 
=== Usages ===
=== Predecessor ===
v1362 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v692  <|@  <|@
f <@~|@floating>@ <|@
tid v2250 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2334 
y: v2249 
=== Succesors ===
=== Usages ===
v692 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2334 y: v2249  <|@  <|@
f <@*|@fixed>@ <|@
tid v692 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=size target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 0.5044648172401477
=== Inputs ===
condition: v2250 
=== Succesors ===
trueSuccessor: v688 
falseSuccessor: v691 
=== Usages ===
=== Predecessor ===
v1359 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2250 #trueSuccessor: v688 #falseSuccessor: v691  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v46|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5044648172401477 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4583101288029259690
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v688 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=size target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2335 
=== Usages ===
=== Predecessor ===
v692 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2335  <|@  <|@
f <@~|@floating>@ <|@
tid v2419 <|@
result [v43|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2329 
=== Succesors ===
=== Usages ===
a2335 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2329  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2335 <|@
result v48|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Arrays$ArrayList.a
nodeSourcePosition: at java.util.Arrays$ArrayList.size(Arrays.java:3818) [bci: 1]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2419 
=== Succesors ===
next: i2336 
=== Usages ===
v2420 
=== Predecessor ===
v688 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2419 #next: i2336  <|@  <|@
f <@~|@floating>@ <|@
tid v2420 <|@
result [v48|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2335 
=== Succesors ===
=== Usages ===
i2336 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2335  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2336 <|@
result v49|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.Arrays$ArrayList.size(Arrays.java:3818) [bci: 4]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?759 
guard: - 
address: v2420 
=== Succesors ===
next: v1370 
=== Usages ===
i823 v825 
=== Predecessor ===
a2335 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?759 guard: - address: v2420 #next: v1370  <|@  <|@
f <@~|@floating>@ <|@
tid v825 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2336 
y: i2333 
=== Succesors ===
=== Usages ===
v1370 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2336 y: i2333  <|@  <|@
f <@*|@fixed>@ <|@
tid v1370 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v825 
=== Succesors ===
trueSuccessor: v1369 
falseSuccessor: v1367 
=== Usages ===
=== Predecessor ===
i2336 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v825 #trueSuccessor: v1369 #falseSuccessor: v1367  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD[.] = MOV [v43|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: v42|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction v49|DWORD = MOV [v48|DWORD[.] * 8 + 12] size: DWORD state [bci:32] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v45|DWORD, y: v49|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1369 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1950 
=== Usages ===
=== Predecessor ===
v1370 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1950  <|@  <|@
f <@~|@floating>@ <|@
tid i1951 <|@
result int[-293395|0xfffffffffffb85ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -293395
stableDimension: 0
stamp: i32 [-293395] ⇊00000000fffb85ed ⇈00000000fffb85ed
stampKind: i32
value: int[-293395|0xfffffffffffb85ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1937 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1950 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1934 
=== Predecessor ===
v1369 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-293395|0xfffffffffffb85ed]] destination: B45 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B55" 
    xhandlers
    flags 
    probability 4583101288029259690
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1367 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v821 
=== Usages ===
=== Predecessor ===
v1370 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v821  <|@  <|@
f <@*|@fixed>@ <|@
tid v821 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v819 
=== Predecessor ===
v1367 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|DWORD] destination: B46 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" "B51" 
    xhandlers
    flags 
    probability 4582969519089783012
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v691 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v701 
=== Usages ===
=== Predecessor ===
v692 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v701  <|@  <|@
f <@~|@floating>@ <|@
tid v2251 <|@
result meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
rawvalue: meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2252 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2252 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2334 
y: v2251 
=== Succesors ===
=== Usages ===
v701 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2334 y: v2251  <|@  <|@
f <@*|@fixed>@ <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Collections$EmptyList; target_method=size target_method_class=Ljava/util/Collections$EmptyList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 0.5252282556463239
=== Inputs ===
condition: v2252 
=== Succesors ===
trueSuccessor: v697 
falseSuccessor: v700 
=== Usages ===
=== Predecessor ===
v691 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2252 #trueSuccessor: v697 #falseSuccessor: v700  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v46|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5252282556463239 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4578834872492947213
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v697 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Collections$EmptyList; target_method=size target_method_class=Ljava/util/Collections$EmptyList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1374 
=== Usages ===
=== Predecessor ===
v701 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1374  <|@  <|@
f <@~|@floating>@ <|@
tid v838 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2333 
y: i20 
=== Succesors ===
=== Usages ===
v1374 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2333 y: i20  <|@  <|@
f <@*|@fixed>@ <|@
tid v1374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v838 
=== Succesors ===
trueSuccessor: v1371 
falseSuccessor: v1373 
=== Usages ===
=== Predecessor ===
v697 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v838 #trueSuccessor: v1371 #falseSuccessor: v1373  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v45|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    probability 4578834872492947213
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1371 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v837 
=== Usages ===
=== Predecessor ===
v1374 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v837  <|@  <|@
f <@*|@fixed>@ <|@
tid v837 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v819 
=== Predecessor ===
v1371 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1373 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1954 
=== Usages ===
=== Predecessor ===
v1374 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1954  <|@  <|@
f <@~|@floating>@ <|@
tid i1955 <|@
result int[-293651|0xfffffffffffb84ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -293651
stableDimension: 0
stamp: i32 [-293651] ⇊00000000fffb84ed ⇈00000000fffb84ed
stampKind: i32
value: int[-293651|0xfffffffffffb84ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1937 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1954 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1934 
=== Predecessor ===
v1373 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-293651|0xfffffffffffb84ed]] destination: B50 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" "B59" 
    xhandlers
    flags 
    probability 4578096966431877819
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v700 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1378 
=== Usages ===
=== Predecessor ===
v701 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1378  <|@  <|@
f <@~|@floating>@ <|@
tid v2254 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2334 
y: v2253 
=== Succesors ===
=== Usages ===
v1378 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2334 y: v2253  <|@  <|@
f <@*|@fixed>@ <|@
tid v1378 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=size target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2254 
=== Succesors ===
trueSuccessor: v1375 
falseSuccessor: v1377 
=== Usages ===
=== Predecessor ===
v700 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2254 #trueSuccessor: v1375 #falseSuccessor: v1377  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v46|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4578096966431877819
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1375 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=size target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2337 
=== Usages ===
=== Predecessor ===
v1378 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2337  <|@  <|@
f <@~|@floating>@ <|@
tid v2474 <|@
result [v43|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2329 
=== Succesors ===
=== Usages ===
i2337 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2329  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2337 <|@
result v50|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeList.size
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.size(NodeList.java:119) [bci: 1]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2474 
=== Succesors ===
next: v1382 
=== Usages ===
v666 i823 
=== Predecessor ===
v1375 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2474 #next: v1382  <|@  <|@
f <@~|@floating>@ <|@
tid v666 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2337 
y: i2333 
=== Succesors ===
=== Usages ===
v1382 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2337 y: i2333  <|@  <|@
f <@*|@fixed>@ <|@
tid v1382 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v666 
=== Succesors ===
trueSuccessor: v1381 
falseSuccessor: v1379 
=== Usages ===
=== Predecessor ===
i2337 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v666 #trueSuccessor: v1381 #falseSuccessor: v1379  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOV [v43|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v45|DWORD, y: v50|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1381 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1952 
=== Usages ===
=== Predecessor ===
v1382 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1952  <|@  <|@
f <@~|@floating>@ <|@
tid i1953 <|@
result int[-294675|0xfffffffffffb80ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -294675
stableDimension: 0
stamp: i32 [-294675] ⇊00000000fffb80ed ⇈00000000fffb80ed
stampKind: i32
value: int[-294675|0xfffffffffffb80ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1937 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1952 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1934 
=== Predecessor ===
v1381 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-294675|0xfffffffffffb80ed]] destination: B53 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4578096966431877819
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1379 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v818 
=== Usages ===
=== Predecessor ===
v1382 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v818  <|@  <|@
f <@*|@fixed>@ <|@
tid v818 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v819 
=== Predecessor ===
v1379 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v50|DWORD] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B46" "B49" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4587539003186891847
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i823 <|@
result v51|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v819 
values: i2337 i2336 i21 
=== Succesors ===
=== Usages ===
?820 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v819 values: i2337 i2336 i21  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v819 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v818 v821 v837 
=== Succesors ===
next: j2138 
=== Usages ===
i823 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v818 v821 v837 #next: j2138  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2138 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2153 
=== Usages ===
v2443 v2444 
=== Predecessor ===
v819 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2153  <|@  <|@
f <@~|@floating>@ <|@
tid v2443 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2138 
index: - 
=== Succesors ===
=== Usages ===
j2153 v2155 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2138 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2153 <|@
result v52|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2443 
=== Succesors ===
next: j2154 
=== Usages ===
j2256 j2159 v2461 
=== Predecessor ===
j2138 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2443 #next: j2154  <|@  <|@
f <@~|@floating>@ <|@
tid v2444 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2138 
index: - 
=== Succesors ===
=== Usages ===
j2154 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2138 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2154 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2444 
=== Succesors ===
next: v2146 
=== Usages ===
v2143 
=== Predecessor ===
j2153 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2444 #next: v2146  <|@  <|@
f <@~|@floating>@ <|@
tid j2255 <|@
result long[56|0x38] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 56
stableDimension: 0
stamp: i64 [56] ⇊0000000000000038 ⇈0000000000000038
stampKind: i64
value: long[56|0x38]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2256 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2256 <|@
result v53|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2153 
y: j2255 
=== Succesors ===
=== Usages ===
v2143 v2155 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2153 y: j2255  <|@  <|@
f <@~|@floating>@ <|@
tid v2143 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2154 
y: j2256 
=== Succesors ===
=== Usages ===
v2146 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2154 y: j2256  <|@  <|@
f <@*|@fixed>@ <|@
tid v2146 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2143 
=== Succesors ===
trueSuccessor: v2144 
falseSuccessor: v2145 
=== Usages ===
=== Predecessor ===
j2154 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2143 #trueSuccessor: v2144 #falseSuccessor: v2145  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v51|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = LEA [v52|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v53|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4557861259848273806
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2144 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a2149 
=== Usages ===
=== Predecessor ===
v2146 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2149  <|@  <|@
tid ?604 <|@
d <@d|@=== Debug Properties ===
bci: 34
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray(Object[])>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 180
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 - a1271 - - 
=== Succesors ===
=== Usages ===
?593 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 - a1271 - -  <|@  <|@
tid ?593 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<SubList.iterator()>
duringCall: true
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.SubList.listIterator(AbstractList.java:695) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 691
stackSize: 0
=== Inputs ===
outerFrameState: ?604 
values: a1 
=== Succesors ===
=== Usages ===
?594 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?604 values: a1  <|@  <|@
tid ?594 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<AbstractList.listIterator()>
duringCall: true
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.SubList.listIterator(AbstractList.java:695) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 299
stackSize: 0
=== Inputs ===
outerFrameState: ?593 
values: a1 
=== Succesors ===
=== Usages ===
?632 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?593 values: a1  <|@  <|@
tid a736 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@724f57db
hasIdentity: true
objectId: 1
stamp: a!# Ljava/util/SubList$1;
type: HotSpotType<Ljava/util/SubList$1;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?660 ?632 ?739 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?632 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<SubList.listIterator(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 698
stackSize: 1
=== Inputs ===
outerFrameState: ?594 
values: - - a736 
=== Succesors ===
=== Usages ===
?660 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?594 values: - - a736  <|@  <|@
tid ?660 <|@
d <@d|@=== Debug Properties ===
bci: 34
code: ResolvedJavaMethodBytecode<SubList$1.<init>(SubList, int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 699
stackSize: 1
=== Inputs ===
outerFrameState: ?632 
values: - - - a736 
=== Succesors ===
=== Usages ===
?669 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?632 values: - - - a736  <|@  <|@
tid ?669 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<AbstractList.listIterator(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 325
stackSize: 0
=== Inputs ===
outerFrameState: ?660 
values: a2329 i2333 
=== Succesors ===
=== Usages ===
?820 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?660 values: a2329 i2333  <|@  <|@
tid ?739 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a736 
values: - - a1 
=== Succesors ===
=== Usages ===
?820 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a736 values: - - a1  <|@  <|@
tid ?820 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<AbstractList.rangeCheckForAdd(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 604
stackSize: 2
=== Inputs ===
outerFrameState: ?669 
values: a2329 i2333 i2333 i823 
virtualObjectMappings: ?739 
=== Succesors ===
=== Usages ===
a2149 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?669 values: a2329 i2333 i2333 i823 virtualObjectMappings: ?739  <|@  <|@
f <@~|@floating>@ <|@
tid i2258 <|@
result int[10|0xa] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 10
stableDimension: 0
stamp: i32 [10] ⇊000000000000000a ⇈000000000000000a
stampKind: i32
value: int[10|0xa]
=== Inputs ===
=== Succesors ===
=== Usages ===
a2149 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2149 <|@
result v54|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?820 
arguments: v2081 i2258 i20 
=== Succesors ===
next: j2150 
=== Usages ===
j2150 
=== Predecessor ===
v2144 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?820 arguments: v2081 i2258 i20 #next: j2150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2150 <|@
result v54|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2149 
=== Succesors ===
next: v2160 
=== Usages ===
j2159 
=== Predecessor ===
a2149 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a2149 #next: v2160  <|@  <|@
f <@*|@fixed>@ <|@
tid v2160 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2157 
=== Predecessor ===
j2150 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
stack: v45|DWORD v51|DWORD 
locals: v43|DWORD[.] v45|DWORD 
java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
locals: v43|DWORD[.] v45|DWORD 
java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
stack: vobject:SubList$1:0{val$index=int[0|0x0],i=Object[null],this$0=v0|QWORD[.]} 
locals: - - - 
java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
stack: vobject:SubList$1:0{val$index=int[0|0x0],i=Object[null],this$0=v0|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
locals: v0|QWORD[.] 
java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
locals: v0|QWORD[.] 
java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
locals: - v1|QWORD[.] - v42|QWORD[.] - - 
vobject:SubList$1:0{val$index=int[0|0x0],i=Object[null],this$0=v0|QWORD[.]} Ljava/util/SubList$1; int[0|0x0] Object[null] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 2, 34, 15, 2, 1, 34] <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|QWORD[.]] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4587465221365380873
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2145 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2155 
=== Usages ===
=== Predecessor ===
v2146 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2155  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2155 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2443 
value: j2256 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2152 
=== Usages ===
=== Predecessor ===
v2145 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2443 value: j2256 stateAfter: - lastLocationAccess: - #next: v2152  <|@  <|@
f <@~|@floating>@ <|@
tid v2461 <|@
result [v52|QWORD + 248] <|@
d <@d|@=== Debug Properties ===
displacement: 248
scale: Times1
stamp: void*
=== Inputs ===
base: j2153 
index: - 
=== Succesors ===
=== Usages ===
v2152 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2153 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2152 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v2461 
=== Succesors ===
next: v2158 
=== Usages ===
=== Predecessor ===
v2155 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2461 #next: v2158  <|@  <|@
f <@*|@fixed>@ <|@
tid v2158 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2157 
=== Predecessor ===
v2152 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v53|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v52|QWORD + 248] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v52|QWORD] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B56" 
    successors "B64" 
    xhandlers
    flags 
    probability 4587539003186891847
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2159 <|@
result v55|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2157 
values: j2153 j2150 
=== Succesors ===
=== Usages ===
v2471 v2446 j1669 a1667 v2447 v2462 v2463 v2464 v2465 v2466 v2467 v2468 v2469 v2470 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2157 values: j2153 j2150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2157 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2158 v2160 
=== Succesors ===
next: a1667 
=== Usages ===
j2159 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2158 v2160 #next: a1667  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1667 <|@
result v56|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j2159 
=== Succesors ===
next: a1670 
=== Usages ===
a1681 
=== Predecessor ===
v2157 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2159 #next: a1670  <|@  <|@
f <@~|@floating>@ <|@
tid j938 <|@
result long[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList$SubList$1.hasNext(ArrayList.java:1109) [bci: 8]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1669 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1669 <|@
result v57|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2159 
y: j938 
=== Succesors ===
=== Usages ===
a1670 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2159 y: j938  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1670 <|@
result v58|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1669 
=== Succesors ===
next: j2169 
=== Usages ===
a1682 a1673 
=== Predecessor ===
a1667 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1669 #next: j2169  <|@  <|@
f <@~|@floating>@ <|@
tid v1702 <|@
result v59|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
rawvalue: meta{HotSpotType<Ljava/util/SubList$1;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/SubList$1;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j2165 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2165 <|@
result v59|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1702 
=== Succesors ===
=== Usages ===
v2445 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1702  <|@  <|@
f <@~|@floating>@ <|@
tid v2445 <|@
result [v59|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j2165 
index: - 
=== Succesors ===
=== Usages ===
j2169 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2165 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2169 <|@
result v60|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2445 
=== Succesors ===
next: v2170 
=== Usages ===
v2170 
=== Predecessor ===
a1670 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2445 #next: v2170  <|@  <|@
f <@~|@floating>@ <|@
tid v2446 <|@
result [v55|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2159 
index: - 
=== Succesors ===
=== Usages ===
v2170 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2159 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2170 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2446 
value: j2169 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2173 
=== Usages ===
=== Predecessor ===
j2169 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2446 value: j2169 stateAfter: - lastLocationAccess: - #next: v2173  <|@  <|@
f <@~|@floating>@ <|@
tid v2447 <|@
result [v55|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2159 
index: - 
=== Succesors ===
=== Usages ===
v2173 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2159 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2173 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2447 
value: v2261 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2177 
=== Usages ===
=== Predecessor ===
v2170 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2447 value: v2261 stateAfter: - lastLocationAccess: - #next: v2177  <|@  <|@
f <@~|@floating>@ <|@
tid v2462 <|@
result [v55|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2159 
index: - 
=== Succesors ===
=== Usages ===
v2177 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2159 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2177 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2462 
value: i21 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2179 
=== Usages ===
=== Predecessor ===
v2173 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2462 value: i21 stateAfter: - lastLocationAccess: - #next: v2179  <|@  <|@
f <@~|@floating>@ <|@
tid v2463 <|@
result [v55|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j2159 
index: - 
=== Succesors ===
=== Usages ===
v2179 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2159 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a1673 <|@
result v61|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n -
=== Inputs ===
value: a1670 
=== Succesors ===
=== Usages ===
v2179 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1670  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2179 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2463 
value: a1673 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2181 
=== Usages ===
=== Predecessor ===
v2177 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2463 value: a1673 stateAfter: - lastLocationAccess: - #next: v2181  <|@  <|@
f <@~|@floating>@ <|@
tid v2464 <|@
result [v55|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j2159 
index: - 
=== Succesors ===
=== Usages ===
v2181 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2159 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a1674 <|@
result v62|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! Ljava/util/AbstractCollection;
=== Inputs ===
value: a1 
=== Succesors ===
=== Usages ===
v2181 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2181 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2464 
value: a1674 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j2186 
=== Usages ===
=== Predecessor ===
v2179 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2464 value: a1674 stateAfter: - lastLocationAccess: - #next: j2186  <|@  <|@
f <@~|@floating>@ <|@
tid v1738 <|@
result v63|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
rawvalue: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j2182 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2182 <|@
result v63|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1738 
=== Succesors ===
=== Usages ===
v2448 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1738  <|@  <|@
f <@~|@floating>@ <|@
tid v2448 <|@
result [v63|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j2182 
index: - 
=== Succesors ===
=== Usages ===
j2186 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2182 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2186 <|@
result v64|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2448 
=== Succesors ===
next: v2187 
=== Usages ===
v2187 
=== Predecessor ===
v2181 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2448 #next: v2187  <|@  <|@
f <@~|@floating>@ <|@
tid v2465 <|@
result [v55|QWORD[*] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j2159 
index: - 
=== Succesors ===
=== Usages ===
v2187 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2159 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2187 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2465 
value: j2186 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2190 
=== Usages ===
=== Predecessor ===
j2186 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2465 value: j2186 stateAfter: - lastLocationAccess: - #next: v2190  <|@  <|@
f <@~|@floating>@ <|@
tid v2466 <|@
result [v55|QWORD[*] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: j2159 
index: - 
=== Succesors ===
=== Usages ===
v2190 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2159 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2190 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2466 
value: v2267 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2194 
=== Usages ===
=== Predecessor ===
v2187 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2466 value: v2267 stateAfter: - lastLocationAccess: - #next: v2194  <|@  <|@
f <@~|@floating>@ <|@
tid v2467 <|@
result [v55|QWORD[*] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: j2159 
index: - 
=== Succesors ===
=== Usages ===
v2194 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2159 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2194 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2467 
value: i2333 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2196 
=== Usages ===
=== Predecessor ===
v2190 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2467 value: i2333 stateAfter: - lastLocationAccess: - #next: v2196  <|@  <|@
f <@~|@floating>@ <|@
tid v2468 <|@
result [v55|QWORD[*] + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: j2159 
index: - 
=== Succesors ===
=== Usages ===
v2196 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2159 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i507 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList$SubList$1.<init>(ArrayList.java:1105) [bci: 28]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1103) [bci: 21]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2196 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2196 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2468 
value: i507 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2198 
=== Usages ===
=== Predecessor ===
v2194 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2468 value: i507 stateAfter: - lastLocationAccess: - #next: v2198  <|@  <|@
f <@~|@floating>@ <|@
tid v2469 <|@
result [v55|QWORD[*] + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: j2159 
index: - 
=== Succesors ===
=== Usages ===
v2198 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2159 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2198 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2469 
value: i2330 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2200 
=== Usages ===
=== Predecessor ===
v2196 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2469 value: i2330 stateAfter: - lastLocationAccess: - #next: v2200  <|@  <|@
f <@~|@floating>@ <|@
tid v2470 <|@
result [v55|QWORD[*] + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
=== Inputs ===
base: j2159 
index: - 
=== Succesors ===
=== Usages ===
v2200 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2159 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2200 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2470 
value: a2329 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2202 
=== Usages ===
=== Predecessor ===
v2198 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2470 value: a2329 stateAfter: - lastLocationAccess: - #next: v2202  <|@  <|@
f <@~|@floating>@ <|@
tid v2471 <|@
result [v55|QWORD[*] + 52] <|@
d <@d|@=== Debug Properties ===
displacement: 52
scale: Times1
stamp: void*
=== Inputs ===
base: j2159 
index: - 
=== Succesors ===
=== Usages ===
v2202 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2159 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2202 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2471 
value: a2329 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1681 
=== Usages ===
=== Predecessor ===
v2200 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2471 value: a2329 stateAfter: - lastLocationAccess: - #next: a1681  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1681 <|@
result v56|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1667 
=== Succesors ===
next: a1682 
=== Usages ===
a270 
=== Predecessor ===
v2202 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1667 #next: a1682  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1682 <|@
result v58|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1670 
=== Succesors ===
next: v1683 
=== Usages ===
=== Predecessor ===
a1681 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1670 #next: v1683  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1683 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v732 
=== Usages ===
=== Predecessor ===
a1682 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v732  <|@  <|@
f <@*|@fixed>@ <|@
tid v732 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v267 
=== Predecessor ===
v1683 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE v55|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[*] = LEA [v55|QWORD[*] + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = MOVE v57|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/SubList$1;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOV [v59|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD[*]], y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v55|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD[*] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v61|DWORD[.] = COMPRESSPOINTER (input: v58|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7a82eb53 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD[*] + 16], y: v61|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD[.] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@7a82eb53 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD[*] + 20], y: v62|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = MOV [v63|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD[*] + 24], y: v64|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v55|QWORD[*] + 32] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD[*] + 36], y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v55|QWORD[*] + 40] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD[*] + 44], y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD[*] + 48], y: v43|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD[*] + 52], y: v43|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v56|QWORD[.], v42|QWORD[.]] destination: B58 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1377 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=size target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1956 
=== Usages ===
=== Predecessor ===
v1378 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1956  <|@  <|@
f <@~|@floating>@ <|@
tid i1957 <|@
result int[-293939|0xfffffffffffb83cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -293939
stableDimension: 0
stamp: i32 [-293939] ⇊00000000fffb83cd ⇈00000000fffb83cd
stampKind: i32
value: int[-293939|0xfffffffffffb83cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1937 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1956 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1934 
=== Predecessor ===
v1377 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-293939|0xfffffffffffb83cd]] destination: B59 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=null target_method=listIterator target_method_class=Ljava/util/AbstractList; position=at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1948 
=== Usages ===
=== Predecessor ===
v1362 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1948  <|@  <|@
f <@~|@floating>@ <|@
tid i1949 <|@
result int[-290867|0xfffffffffffb8fcd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -290867
stableDimension: 0
stamp: i32 [-290867] ⇊00000000fffb8fcd ⇈00000000fffb8fcd
stampKind: i32
value: int[-290867|0xfffffffffffb8fcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1937 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1948 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1934 
=== Predecessor ===
v1361 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-290867|0xfffffffffffb8fcd]] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1349 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.listIterator(AbstractList.java:695) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1942 
=== Usages ===
=== Predecessor ===
v1350 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1942  <|@  <|@
f <@~|@floating>@ <|@
tid i1943 <|@
result int[-288275|0xfffffffffffb99ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -288275
stableDimension: 0
stamp: i32 [-288275] ⇊00000000fffb99ed ⇈00000000fffb99ed
stampKind: i32
value: int[-288275|0xfffffffffffb99ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1937 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1942 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1934 
=== Predecessor ===
v1349 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-288275|0xfffffffffffb99ed]] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B39" "B61" "B41" "B60" "B45" "B53" "B50" "B59" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1937 <|@
result v65|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-294675 - -288275] ⇊00000000fffb80c5 ⇈00000000fffb9ffd
valueDescription: i32
=== Inputs ===
merge: v1934 
values: i1941 i1943 i1945 i1949 i1951 i1953 i1955 i1957 
=== Succesors ===
=== Usages ===
v1939 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1934 values: i1941 i1943 i1945 i1949 i1951 i1953 i1955 i1957  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1934 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1940 v1942 v1944 v1948 v1950 v1952 v1954 v1956 
=== Succesors ===
next: v1939 
=== Usages ===
i1937 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1940 v1942 v1944 v1948 v1950 v1952 v1954 v1956 #next: v1939  <|@  <|@
f <@*|@fixed>@ <|@
tid v1939 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?759 
actionAndReason: i1937 
speculation: a1836 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1934 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?759 actionAndReason: i1937 speculation: a1836  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v65|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v65|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: v42|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B64" 
    xhandlers
    flags 
    probability 4575751561709176675
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: a70 
=== Usages ===
=== Predecessor ===
v589 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a70  <|@  <|@
tid v1152 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
returnStamp: a - (unchecked=a Ljava/util/Iterator;)
signature: [Ljdk.vm.ci.meta.JavaType;@3283ac09
stamp: void
targetMethod: HotSpotMethod<AbstractCollection.iterator()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
a70 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?1825 <|@
d <@d|@=== Debug Properties ===
bci: 34
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray(Object[])>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 180
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 - a1271 - - 
=== Succesors ===
=== Usages ===
a70 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 - a1271 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a70 <|@
result v66|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 34
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
polymorphic: false
stamp: a -
targetMethod: Direct#AbstractCollection.iterator
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1152 
stateDuring: ?1825 
=== Succesors ===
next: v269 
=== Usages ===
a270 
=== Predecessor ===
v588 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1152 stateDuring: ?1825 #next: v269  <|@  <|@
f <@*|@fixed>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v267 
=== Predecessor ===
a70 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
locals: - v1|QWORD[.] - v42|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractCollection.iterator()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:34] <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|QWORD[.], v42|QWORD[.]] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B32" "B58" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a270 <|@
result v67|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: a -
valueDescription: a -
=== Inputs ===
merge: v267 
values: a70 a1609 a1681 
=== Succesors ===
=== Usages ===
?268 ?76 ?1826 v1057 ?369 v2383 v2449 v2392 v2386 v2384 v2390 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v267 values: a70 a1609 a1681  <|@  <|@
f <@~|@floating>@ <|@
tid a764 <|@
result v68|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v267 
values: a1271 a1270 a1271 
=== Succesors ===
=== Usages ===
?76 v2450 ?268 ?369 ?369 ?1826 ?1826 v2381 v2382 v873 v102 v788 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v267 values: a1271 a1270 a1271  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v269 v275 v732 
=== Succesors ===
next: i2338 
=== Usages ===
a270 a764 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v269 v275 v732 #next: i2338  <|@  <|@
f <@~|@floating>@ <|@
tid v2381 <|@
result [v68|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a764 
index: - 
=== Succesors ===
=== Usages ===
i2338 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a764 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2338 <|@
result v69|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 45]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v2381 
=== Succesors ===
next: v2306 
=== Usages ===
v78 j1278 v1292 
=== Predecessor ===
v267 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2381 #next: v2306  <|@  <|@
f <@~|@floating>@ <|@
tid j1278 <|@
result v70|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i2338 
=== Succesors ===
=== Usages ===
j1282 v1284 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2338  <|@  <|@
f <@~|@floating>@ <|@
tid j1281 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1282 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1282 <|@
result v71|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-1 - 2147483646]
=== Inputs ===
x: j1278 
y: j1281 
=== Succesors ===
=== Usages ===
v1284 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1278 y: j1281  <|@  <|@
f <@~|@floating>@ <|@
tid v1284 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1282 
y: j1278 
=== Succesors ===
=== Usages ===
v2306 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1282 y: j1278  <|@  <|@
tid ?268 <|@
d <@d|@=== Debug Properties ===
bci: 37
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray(Object[])>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 180
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - a2 - a764 - - a270 
=== Succesors ===
=== Usages ===
v1930 v2339 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 - a764 - - a270  <|@  <|@
f <@*|@fixed>@ <|@
tid v2306 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1284 
=== Succesors ===
trueSuccessor: v2302 
falseSuccessor: v2305 
=== Usages ===
=== Predecessor ===
i2338 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1284 #trueSuccessor: v2302 #falseSuccessor: v2305  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v67|QWORD[.], v68|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = MOV [v68|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = MOV v69|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = DEC v70|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v70|QWORD, y: v71|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B68" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2302 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2300 
=== Usages ===
=== Predecessor ===
v2306 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2300  <|@  <|@
f <@*|@fixed>@ <|@
tid v2300 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2299 
=== Predecessor ===
v2302 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B65 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" "B120" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2305 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2304 
=== Usages ===
=== Predecessor ===
v2306 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2304  <|@  <|@
f <@~|@floating>@ <|@
tid v1292 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2338 
y: i21 
=== Succesors ===
=== Usages ===
v2304 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2338 y: i21  <|@  <|@
f <@*|@fixed>@ <|@
tid v2304 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1292 
=== Succesors ===
trueSuccessor: v2303 
falseSuccessor: v1385 
=== Usages ===
=== Predecessor ===
v2305 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1292 #trueSuccessor: v2303 #falseSuccessor: v1385  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v69|DWORD, y: v69|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2303 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2301 
=== Usages ===
=== Predecessor ===
v2304 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2301  <|@  <|@
f <@*|@fixed>@ <|@
tid v2301 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2299 
=== Predecessor ===
v2303 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B65" "B67" 
    successors "B69" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2299 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2300 v2301 
=== Succesors ===
next: v2339 
=== Usages ===
v1290 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2300 v2301 #next: v2339  <|@  <|@
f <@~|@floating>@ <|@
tid v2449 <|@
result [v67|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a270 
index: - 
=== Succesors ===
=== Usages ===
v2339 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a270 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2339 <|@
result v72|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?268 
guard: - 
address: v2449 
=== Succesors ===
next: v2340 
=== Usages ===
v2282 v2280 v2281 v2307 v2308 
=== Predecessor ===
v2299 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?268 guard: - address: v2449 #next: v2340  <|@  <|@
f <@~|@floating>@ <|@
tid v2450 <|@
result [v68|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a764 
index: - 
=== Succesors ===
=== Usages ===
v2340 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a764 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2340 <|@
result v73|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2450 
=== Succesors ===
next: v73 
=== Usages ===
v2284 
=== Predecessor ===
v2339 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2450 #next: v73  <|@  <|@
f <@~|@floating>@ <|@
tid v2283 <|@
result meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2284 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2284 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2340 
y: v2283 
=== Succesors ===
=== Usages ===
v1395 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2340 y: v2283  <|@  <|@
f <@~|@floating>@ <|@
tid v2282 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2339 
y: v2243 
=== Succesors ===
=== Usages ===
v184 v150 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2339 y: v2243  <|@  <|@
f <@~|@floating>@ <|@
tid v2392 <|@
result [v67|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a270 
index: - 
=== Succesors ===
=== Usages ===
v969 a2351 a2371 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a270 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2390 <|@
result [v67|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a270 
index: - 
=== Succesors ===
=== Usages ===
i2349 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a270 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2386 <|@
result [v67|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a270 
index: - 
=== Succesors ===
=== Usages ===
i2346 a2353 a2367 a2373 a2377 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a270 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2383 <|@
result [v67|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a270 
index: - 
=== Succesors ===
=== Usages ===
i2343 v967 i2370 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a270 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2384 <|@
result [v67|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a270 
index: - 
=== Succesors ===
=== Usages ===
a2341 a2368 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a270 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i2222 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2221 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2216 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2217 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2220 <|@
result v74|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2453 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2279 <|@
result meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
rawvalue: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2280 v2307 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
v2340 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 37]
stack: v67|QWORD[.] 
locals: - v1|QWORD[.] - v68|QWORD[.] - - 
>@ <|@ instruction v72|DWORD = MOV [v67|QWORD[.] + 8] size: DWORD state [bci:37] <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOV [v68|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B101" 
    successors "B70" "B104" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4614651752012106329
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i75 <|@
result v75|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v74 
values: i21 i94 
=== Succesors ===
=== Usages ===
?76 v78 ?369 ?1826 ?1826 v2382 ?369 i94 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v74 values: i21 i94  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 3.317050284263399
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v73 
=== Succesors ===
next: v83 
=== Usages ===
i75 v81 v95 v1454 v1489 v1484 v1429 v1474 v1434 v1394 v1464 v1404 v1444 v1414 v1419 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v73 #next: v83  <|@  <|@
tid ?76 <|@
d <@d|@=== Debug Properties ===
bci: 42
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray(Object[])>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 182
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 - a764 a270 i75 
=== Succesors ===
=== Usages ===
v1867 i2369 i2342 i2345 i2348 v2352 i2354 i2358 i2362 i2365 v2473 v2372 i2374 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 - a764 a270 i75  <|@  <|@
f <@~|@floating>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 46]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i75 
y: i2338 
=== Succesors ===
=== Usages ===
v83 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i75 y: i2338  <|@  <|@
f <@*|@fixed>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 46]
stamp: void
trueSuccessorProbability: 0.6985273317247691
=== Inputs ===
condition: v78 
=== Succesors ===
trueSuccessor: v79 
falseSuccessor: v81 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v78 #trueSuccessor: v79 #falseSuccessor: v81  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v75|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v69|DWORD, y: v75|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6985273317247691 condition: > trueDestination: B69 -> B70 falseDestination: B69 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612399952198421081
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1395 
=== Usages ===
v1290 
=== Predecessor ===
v83 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1395  <|@  <|@
f <@*|@fixed>@ <|@
tid v1395 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2284 
=== Succesors ===
trueSuccessor: v1391 
falseSuccessor: v1394 
=== Usages ===
=== Predecessor ===
v79 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2284 #trueSuccessor: v1391 #falseSuccessor: v1394  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v73|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612399952198421081
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1391 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v184 
=== Usages ===
=== Predecessor ===
v1395 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v184  <|@  <|@
f <@*|@fixed>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$SubList$1; target_method=hasNext target_method_class=Ljava/util/ArrayList$SubList$1; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
trueSuccessorProbability: 0.8936836714032184
=== Inputs ===
condition: v2282 
=== Succesors ===
trueSuccessor: v178 
falseSuccessor: v183 
=== Usages ===
=== Predecessor ===
v1391 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2282 #trueSuccessor: v178 #falseSuccessor: v183  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v72|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8936836714032184 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611845243203171713
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$SubList$1; target_method=hasNext target_method_class=Ljava/util/ArrayList$SubList$1; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2341 
=== Usages ===
=== Predecessor ===
v184 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2341  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2341 <|@
result v76|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList$1.this$1
nodeSourcePosition: at java.util.ArrayList$SubList$1.hasNext(ArrayList.java:1109) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
nullCheck: false
stamp: n# Ljava/util/ArrayList$SubList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2384 
=== Succesors ===
next: i2342 
=== Usages ===
v2387 v2385 
=== Predecessor ===
v178 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2384 #next: i2342  <|@  <|@
f <@~|@floating>@ <|@
tid v2385 <|@
result [v76|DWORD[.] * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2341 
=== Succesors ===
=== Usages ===
i2342 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2341  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2342 <|@
result v77|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList.size
nodeSourcePosition: at java.util.ArrayList$SubList$1.hasNext(ArrayList.java:1109) [bci: 8]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?76 
guard: - 
address: v2385 
=== Succesors ===
next: i2343 
=== Usages ===
v245 v339 
=== Predecessor ===
a2341 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?76 guard: - address: v2385 #next: i2343  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2343 <|@
result v78|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList$1.cursor
nodeSourcePosition: at java.util.ArrayList$SubList$1.hasNext(ArrayList.java:1109) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2383 
=== Succesors ===
next: v1405 
=== Usages ===
v245 v339 i345 i349 v969 
=== Predecessor ===
i2342 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2383 #next: v1405  <|@  <|@
f <@~|@floating>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList$SubList$1.hasNext(ArrayList.java:1109) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2342 
y: i2343 
=== Succesors ===
=== Usages ===
v1405 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2342 y: i2343  <|@  <|@
f <@*|@fixed>@ <|@
tid v1405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 56]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v245 
=== Succesors ===
trueSuccessor: v1404 
falseSuccessor: v1401 
=== Usages ===
=== Predecessor ===
i2343 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v245 #trueSuccessor: v1404 #falseSuccessor: v1401  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v76|DWORD[.] = MOV [v67|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction v77|DWORD = MOV [v76|DWORD[.] * 8 + 24] size: DWORD state [bci:42] <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = MOV [v67|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v78|DWORD, y: v77|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1404 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 56]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v1873 
=== Usages ===
=== Predecessor ===
v1405 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v1873  <|@  <|@
f <@~|@floating>@ <|@
tid i1874 <|@
result int[-240915|0xfffffffffffc52ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -240915
stableDimension: 0
stamp: i32 [-240915] ⇊00000000fffc52ed ⇈00000000fffc52ed
stampKind: i32
value: int[-240915|0xfffffffffffc52ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1865 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1873 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1862 
=== Predecessor ===
v1404 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-240915|0xfffffffffffc52ed], Object[null]] destination: B73 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611845243203171713
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1401 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2344 
=== Usages ===
=== Predecessor ===
v1405 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2344  <|@  <|@
f <@~|@floating>@ <|@
tid v2387 <|@
result [v76|DWORD[.] * 8 + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2341 
=== Succesors ===
=== Usages ===
a2344 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2341  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2344 <|@
result v79|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList.this$0
nodeSourcePosition: at java.util.ArrayList$SubList$1.checkForComodification(ArrayList.java:1212) [bci: 8]
at java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: n# Ljava/util/ArrayList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2387 
=== Succesors ===
next: i2345 
=== Usages ===
v2389 v2388 
=== Predecessor ===
v1401 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2387 #next: i2345  <|@  <|@
f <@~|@floating>@ <|@
tid v2388 <|@
result [v79|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2344 
=== Succesors ===
=== Usages ===
i2345 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2344  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2345 <|@
result v80|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList$SubList$1.checkForComodification(ArrayList.java:1212) [bci: 11]
at java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?76 
guard: - 
address: v2388 
=== Succesors ===
next: i2346 
=== Usages ===
v421 
=== Predecessor ===
a2344 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?76 guard: - address: v2388 #next: i2346  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2346 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList$1.expectedModCount
nodeSourcePosition: at java.util.ArrayList$SubList$1.checkForComodification(ArrayList.java:1212) [bci: 1]
at java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2386 
=== Succesors ===
next: v1415 
=== Usages ===
v421 
=== Predecessor ===
i2345 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2386 #next: v1415  <|@  <|@
f <@~|@floating>@ <|@
tid v421 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList$SubList$1.checkForComodification(ArrayList.java:1212) [bci: 14]
at java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2345 
y: i2346 
=== Succesors ===
=== Usages ===
v1415 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2345 y: i2346  <|@  <|@
f <@*|@fixed>@ <|@
tid v1415 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.checkForComodification(ArrayList.java:1212) [bci: 14]
at java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v421 
=== Succesors ===
trueSuccessor: v1411 
falseSuccessor: v1414 
=== Usages ===
=== Predecessor ===
i2346 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v421 #trueSuccessor: v1411 #falseSuccessor: v1414  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v79|DWORD[.] = MOV [v76|DWORD[.] * 8 + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction v80|DWORD = MOV [v79|DWORD[.] * 8 + 12] size: DWORD state [bci:42] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v80|DWORD, y: [v67|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" "B81" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611845243203171713
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1411 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.checkForComodification(ArrayList.java:1212) [bci: 14]
at java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1420 
=== Usages ===
=== Predecessor ===
v1415 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1420  <|@  <|@
f <@~|@floating>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1116) [bci: 17]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2343 
y: i2342 
=== Succesors ===
=== Usages ===
v1420 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2343 y: i2342  <|@  <|@
f <@*|@fixed>@ <|@
tid v1420 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1116) [bci: 17]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v339 
=== Succesors ===
trueSuccessor: v1416 
falseSuccessor: v1419 
=== Usages ===
=== Predecessor ===
v1411 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v339 #trueSuccessor: v1416 #falseSuccessor: v1419  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v77|DWORD, y: v78|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B75 -> B76 falseDestination: B75 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611845243203171713
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1416 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1116) [bci: 17]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2347 
=== Usages ===
=== Predecessor ===
v1420 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2347  <|@  <|@
f <@~|@floating>@ <|@
tid v2389 <|@
result [v79|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2344 
=== Succesors ===
=== Usages ===
a2347 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2344  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2347 <|@
result v81|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.elementData
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1118) [bci: 35]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2389 
=== Succesors ===
next: i2348 
=== Usages ===
a957 v2391 
=== Predecessor ===
v1416 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2389 #next: i2348  <|@  <|@
f <@~|@floating>@ <|@
tid v2391 <|@
result [v81|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2347 
=== Succesors ===
=== Usages ===
i2348 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2347  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2348 <|@
result v82|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1119) [bci: 46]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?76 
guard: - 
address: v2391 
=== Succesors ===
next: i2349 
=== Usages ===
v347 v971 
=== Predecessor ===
a2347 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?76 guard: - address: v2391 #next: i2349  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2349 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList$1.val$offset
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1119) [bci: 40]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2390 
=== Succesors ===
next: v1430 
=== Usages ===
i345 
=== Predecessor ===
i2348 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2390 #next: v1430  <|@  <|@
f <@~|@floating>@ <|@
tid i345 <|@
result v83|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1119) [bci: 44]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: i32
=== Inputs ===
x: i2343 
y: i2349 
=== Succesors ===
=== Usages ===
v347 v2393 v971 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2343 y: i2349  <|@  <|@
f <@~|@floating>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1119) [bci: 47]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i345 
y: i2348 
=== Succesors ===
=== Usages ===
v1430 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i345 y: i2348  <|@  <|@
f <@*|@fixed>@ <|@
tid v1430 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1119) [bci: 47]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v347 
=== Succesors ===
trueSuccessor: v1426 
falseSuccessor: v1429 
=== Usages ===
=== Predecessor ===
i2349 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v347 #trueSuccessor: v1426 #falseSuccessor: v1429  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v81|DWORD[.] = MOV [v79|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction v82|DWORD = MOV [v81|DWORD[.] * 8 + 12] size: DWORD state [bci:42] <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = ADD (x: v78|DWORD, ~y: [v67|QWORD[.] + 28]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v82|DWORD, y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B76 -> B77 falseDestination: B76 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B78" "B79" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611845243203171713
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1426 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1119) [bci: 47]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1435 
=== Usages ===
=== Predecessor ===
v1430 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1435  <|@  <|@
f <@~|@floating>@ <|@
tid v971 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1122) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i345 
y: i2348 
=== Succesors ===
=== Usages ===
v1435 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i345 y: i2348  <|@  <|@
f <@*|@fixed>@ <|@
tid v1435 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1122) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v971 
=== Succesors ===
trueSuccessor: v1431 
falseSuccessor: v1434 
=== Usages ===
=== Predecessor ===
v1426 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v971 #trueSuccessor: v1431 #falseSuccessor: v1434  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v82|DWORD, y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B77 -> B78 falseDestination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611845243203171713
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1431 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1122) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: v967 
=== Usages ===
a2350 
=== Predecessor ===
v1435 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v967  <|@  <|@
f <@~|@floating>@ <|@
tid i349 <|@
result v84|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1121) [bci: 61]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: i32
=== Inputs ===
x: i2343 
y: i20 
=== Succesors ===
=== Usages ===
v967 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2343 y: i20  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v967 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayList$SubList$1.cursor
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1121) [bci: 62]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2383 
value: i349 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v969 
=== Usages ===
=== Predecessor ===
v1431 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2383 value: i349 stateAfter: - lastLocationAccess: - #next: v969  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v969 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayList$SubList$1.lastRet
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1122) [bci: 73]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2392 
value: i2343 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2350 
=== Usages ===
=== Predecessor ===
v967 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2392 value: i2343 stateAfter: - lastLocationAccess: - #next: a2350  <|@  <|@
f <@~|@floating>@ <|@
tid a957 <|@
result v85|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1118) [bci: 35]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a2347 
=== Succesors ===
=== Usages ===
v2393 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2347  <|@  <|@
f <@~|@floating>@ <|@
tid v2393 <|@
result [v85|QWORD[.] + v83|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a957 
index: i345 
=== Succesors ===
=== Usages ===
a2350 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a957 index: i345  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2350 <|@
result v86|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1122) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1431 
address: v2393 
=== Succesors ===
next: v287 
=== Usages ===
a1830 
=== Predecessor ===
v969 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1431 address: v2393 #next: v287  <|@  <|@
f <@*|@fixed>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v279 
=== Predecessor ===
a2350 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = INC v78|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v67|QWORD[.] + 12], y: v84|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v67|QWORD[.] + 16], y: v78|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = UNCOMPRESSPOINTER (input: v81|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7a82eb53 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v86|DWORD[.] = MOV [v85|QWORD[.] + v83|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v86|DWORD[.]] destination: B78 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1434 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1122) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v1885 
=== Usages ===
=== Predecessor ===
v1435 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v1885  <|@  <|@
f <@~|@floating>@ <|@
tid i1886 <|@
result int[-248859|0xfffffffffffc33e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -248859
stableDimension: 0
stamp: i32 [-248859] ⇊00000000fffc33e5 ⇈00000000fffc33e5
stampKind: i32
value: int[-248859|0xfffffffffffc33e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1865 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1885 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1862 
=== Predecessor ===
v1434 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-248859|0xfffffffffffc33e5], Object[null]] destination: B79 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1429 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1119) [bci: 47]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v1883 
=== Usages ===
=== Predecessor ===
v1430 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v1883  <|@  <|@
f <@~|@floating>@ <|@
tid i1884 <|@
result int[-247315|0xfffffffffffc39ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -247315
stableDimension: 0
stamp: i32 [-247315] ⇊00000000fffc39ed ⇈00000000fffc39ed
stampKind: i32
value: int[-247315|0xfffffffffffc39ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1865 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1883 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1862 
=== Predecessor ===
v1429 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-247315|0xfffffffffffc39ed], Object[null]] destination: B80 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1419 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1116) [bci: 17]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v1879 
=== Usages ===
=== Predecessor ===
v1420 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v1879  <|@  <|@
f <@~|@floating>@ <|@
tid i1880 <|@
result int[-244243|0xfffffffffffc45ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -244243
stableDimension: 0
stamp: i32 [-244243] ⇊00000000fffc45ed ⇈00000000fffc45ed
stampKind: i32
value: int[-244243|0xfffffffffffc45ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1865 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1879 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1862 
=== Predecessor ===
v1419 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-244243|0xfffffffffffc45ed], Object[null]] destination: B81 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1414 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.checkForComodification(ArrayList.java:1212) [bci: 14]
at java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v1877 
=== Usages ===
=== Predecessor ===
v1415 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v1877  <|@  <|@
f <@~|@floating>@ <|@
tid i1878 <|@
result int[-243987|0xfffffffffffc46ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -243987
stableDimension: 0
stamp: i32 [-243987] ⇊00000000fffc46ed ⇈00000000fffc46ed
stampKind: i32
value: int[-243987|0xfffffffffffc46ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1865 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1877 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1862 
=== Predecessor ===
v1414 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-243987|0xfffffffffffc46ed], Object[null]] destination: B82 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B84" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598043364214525307
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: v193 
=== Usages ===
=== Predecessor ===
v184 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v193  <|@  <|@
f <@~|@floating>@ <|@
tid v2281 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2339 
y: v2261 
=== Succesors ===
=== Usages ===
v193 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2339 y: v2261  <|@  <|@
f <@*|@fixed>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/SubList$1; target_method=hasNext target_method_class=Ljava/util/SubList$1; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
trueSuccessorProbability: 0.9213533497647322
=== Inputs ===
condition: v2281 
=== Succesors ===
trueSuccessor: v189 
falseSuccessor: v192 
=== Usages ===
=== Predecessor ===
v183 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2281 #trueSuccessor: v189 #falseSuccessor: v192  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v72|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9213533497647322 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" "B98" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597345348145217565
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/SubList$1; target_method=hasNext target_method_class=Ljava/util/SubList$1; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2351 
=== Usages ===
=== Predecessor ===
v193 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2351  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2351 <|@
result v87|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList$1.i
nodeSourcePosition: at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 1]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v2392 
=== Succesors ===
next: v2352 
=== Usages ===
?1827 v2451 v2394 v2397 v2399 v2403 
=== Predecessor ===
v189 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2392 #next: v2352  <|@  <|@
f <@~|@floating>@ <|@
tid v2451 <|@
result [v87|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2351 
=== Succesors ===
=== Usages ===
v2352 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2351  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2352 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?76 
guard: - 
address: v2451 
=== Succesors ===
next: v1445 
=== Usages ===
v2285 
=== Predecessor ===
a2351 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?76 guard: - address: v2451 #next: v1445  <|@  <|@
f <@~|@floating>@ <|@
tid v2285 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2352 
y: v2267 
=== Succesors ===
=== Usages ===
v1445 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2352 y: v2267  <|@  <|@
f <@*|@fixed>@ <|@
tid v1445 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=nextIndex target_method_class=Ljava/util/AbstractList$ListItr; position=at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2285 
=== Succesors ===
trueSuccessor: v1441 
falseSuccessor: v1444 
=== Usages ===
=== Predecessor ===
v2352 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2285 #trueSuccessor: v1441 #falseSuccessor: v1444  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v87|DWORD[.] = MOV [v67|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction CMP [v87|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} state [bci:42] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B86" "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597345348145217565
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1441 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=nextIndex target_method_class=Ljava/util/AbstractList$ListItr; position=at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2353 
=== Usages ===
=== Predecessor ===
v1445 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2353  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2353 <|@
result v88|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList$1.this$0
nodeSourcePosition: at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 10]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
nullCheck: false
stamp: n Ljava/util/SubList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2386 
=== Succesors ===
next: i2354 
=== Usages ===
v2396 v2395 
=== Predecessor ===
v1441 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2386 #next: i2354  <|@  <|@
f <@~|@floating>@ <|@
tid v2396 <|@
result [v88|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2353 
=== Succesors ===
=== Usages ===
i2354 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2353  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2354 <|@
result v89|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.size
nodeSourcePosition: at java.util.SubList.access$200(AbstractList.java:613) [bci: 1]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 8]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?76 
guard: - 
address: v2396 
=== Succesors ===
next: i2355 
=== Usages ===
v253 
=== Predecessor ===
a2353 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?76 guard: - address: v2396 #next: i2355  <|@  <|@
f <@~|@floating>@ <|@
tid v2395 <|@
result [v88|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2353 
=== Succesors ===
=== Usages ===
i2355 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2353  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2355 <|@
result v90|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.offset
nodeSourcePosition: at java.util.SubList.access$000(AbstractList.java:613) [bci: 1]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 13]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2395 
=== Succesors ===
next: i2356 
=== Usages ===
i324 
=== Predecessor ===
i2354 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2395 #next: i2356  <|@  <|@
f <@~|@floating>@ <|@
tid v2394 <|@
result [v87|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2351 
=== Succesors ===
=== Usages ===
i2356 v1029 v1048 v1051 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2351  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2356 <|@
result v91|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$ListItr.nextIndex(AbstractList.java:413) [bci: 1]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2394 
=== Succesors ===
next: v1455 
=== Usages ===
i324 v1047 v1049 ?1827 v1050 v1038 i528 v1018 v2406 v2402 v1028 
=== Predecessor ===
i2355 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2394 #next: v1455  <|@  <|@
f <@~|@floating>@ <|@
tid i324 <|@
result v92|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 16]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: i32
=== Inputs ===
x: i2356 
y: i2355 
=== Succesors ===
=== Usages ===
v253 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2356 y: i2355  <|@  <|@
f <@~|@floating>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i324 
y: i2354 
=== Succesors ===
=== Usages ===
v1455 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i324 y: i2354  <|@  <|@
f <@*|@fixed>@ <|@
tid v1455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 56]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v253 
=== Succesors ===
trueSuccessor: v1451 
falseSuccessor: v1454 
=== Usages ===
=== Predecessor ===
i2356 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v253 #trueSuccessor: v1451 #falseSuccessor: v1454  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v88|DWORD[.] = MOV [v67|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction v89|DWORD = MOV [v88|DWORD[.] * 8 + 20] size: DWORD state [bci:42] <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = MOV [v88|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = MOV [v87|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = SUB (x: v91|DWORD, ~y: v90|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v89|DWORD, y: v92|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B87" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597345348145217565
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1451 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2357 
=== Usages ===
=== Predecessor ===
v1455 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2357  <|@  <|@
f <@~|@floating>@ <|@
tid v2397 <|@
result [v87|DWORD[.] * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2351 
=== Succesors ===
=== Usages ===
a2357 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2351  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2357 <|@
result v93|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.this$0
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: n Ljava/util/AbstractList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2397 
=== Succesors ===
next: i2358 
=== Usages ===
a1000 v2452 v2398 v2400 v2404 
=== Predecessor ===
v1451 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2397 #next: i2358  <|@  <|@
f <@~|@floating>@ <|@
tid v2398 <|@
result [v93|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2357 
=== Succesors ===
=== Usages ===
i2358 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2357  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2358 <|@
result v94|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 4]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?76 
guard: - 
address: v2398 
=== Succesors ===
next: i2359 
=== Usages ===
v536 
=== Predecessor ===
a2357 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?76 guard: - address: v2398 #next: i2359  <|@  <|@
f <@~|@floating>@ <|@
tid v2399 <|@
result [v87|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2351 
=== Succesors ===
=== Usages ===
i2359 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2351  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2359 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.expectedModCount
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 8]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2399 
=== Succesors ===
next: v1465 
=== Usages ===
v536 
=== Predecessor ===
i2358 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2399 #next: v1465  <|@  <|@
f <@~|@floating>@ <|@
tid v536 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2358 
y: i2359 
=== Succesors ===
=== Usages ===
v1465 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2358 y: i2359  <|@  <|@
f <@*|@fixed>@ <|@
tid v1465 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v536 
=== Succesors ===
trueSuccessor: v1461 
falseSuccessor: v1464 
=== Usages ===
=== Predecessor ===
i2359 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v536 #trueSuccessor: v1461 #falseSuccessor: v1464  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v93|DWORD[.] = MOV [v87|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction v94|DWORD = MOV [v93|DWORD[.] * 8 + 12] size: DWORD state [bci:42] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v94|DWORD, y: [v87|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" "B91" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597345348145217565
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1461 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2360 
=== Usages ===
=== Predecessor ===
v1465 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2360  <|@  <|@
f <@~|@floating>@ <|@
tid v2452 <|@
result [v93|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2357 
=== Succesors ===
=== Usages ===
v2360 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2357  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2360 <|@
result v95|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2452 
=== Succesors ===
next: v553 
=== Usages ===
v2287 v2286 
=== Predecessor ===
v1461 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2452 #next: v553  <|@  <|@
f <@~|@floating>@ <|@
tid v2286 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2360 
y: v2249 
=== Succesors ===
=== Usages ===
v553 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2360 y: v2249  <|@  <|@
f <@~|@floating>@ <|@
tid i528 <|@
result v96|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:360) [bci: 26]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: i32
=== Inputs ===
x: i2356 
y: i20 
=== Succesors ===
=== Usages ===
v1051 v1029 v1048 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2356 y: i20  <|@  <|@
f <@~|@floating>@ <|@
tid v2403 <|@
result [v87|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2351 
=== Succesors ===
=== Usages ===
v1028 v1047 v1050 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2351  <|@  <|@
f <@*|@fixed>@ <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=get target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
trueSuccessorProbability: 0.9304948647614187
=== Inputs ===
condition: v2286 
=== Succesors ===
trueSuccessor: v546 
falseSuccessor: v552 
=== Usages ===
=== Predecessor ===
v2360 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2286 #trueSuccessor: v546 #falseSuccessor: v552  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = MOV [v93|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = INC v91|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v95|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9304948647614187 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B89" "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596776981866787665
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=get target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2361 
=== Usages ===
=== Predecessor ===
v553 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2361  <|@  <|@
f <@~|@floating>@ <|@
tid v2400 <|@
result [v93|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2357 
=== Succesors ===
=== Usages ===
a2361 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2357  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2361 <|@
result v97|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Arrays$ArrayList.a
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2400 
=== Succesors ===
next: i2362 
=== Usages ===
a1012 v2401 
=== Predecessor ===
v546 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2400 #next: i2362  <|@  <|@
f <@~|@floating>@ <|@
tid v2401 <|@
result [v97|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2361 
=== Succesors ===
=== Usages ===
i2362 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2361  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2362 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?76 
guard: - 
address: v2401 
=== Succesors ===
next: v1475 
=== Usages ===
v1018 
=== Predecessor ===
a2361 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?76 guard: - address: v2401 #next: v1475  <|@  <|@
f <@~|@floating>@ <|@
tid v1018 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2356 
y: i2362 
=== Succesors ===
=== Usages ===
v1475 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2356 y: i2362  <|@  <|@
f <@*|@fixed>@ <|@
tid v1475 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1018 
=== Succesors ===
trueSuccessor: v1471 
falseSuccessor: v1474 
=== Usages ===
=== Predecessor ===
i2362 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1018 #trueSuccessor: v1471 #falseSuccessor: v1474  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v97|DWORD[.] = MOV [v93|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction CMP (x: v91|DWORD, y: [v97|DWORD[.] * 8 + 12]) size: DWORD state [bci:42] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B88 -> B89 falseDestination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596776981866787665
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1471 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1028 
=== Usages ===
a2363 
=== Predecessor ===
v1475 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1028  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1028 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.lastRet
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:359) [bci: 20]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2403 
value: i2356 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1029 
=== Usages ===
=== Predecessor ===
v1471 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2403 value: i2356 stateAfter: - lastLocationAccess: - #next: v1029  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1029 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:360) [bci: 27]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2394 
value: i528 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2363 
=== Usages ===
=== Predecessor ===
v1028 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2394 value: i528 stateAfter: - lastLocationAccess: - #next: a2363  <|@  <|@
f <@~|@floating>@ <|@
tid a1012 <|@
result v98|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a2361 
=== Succesors ===
=== Usages ===
v2402 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2361  <|@  <|@
f <@~|@floating>@ <|@
tid v2402 <|@
result [v98|QWORD[.] + v91|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1012 
index: i2356 
=== Succesors ===
=== Usages ===
a2363 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1012 index: i2356  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2363 <|@
result v99|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1471 
address: v2402 
=== Succesors ===
next: v799 
=== Usages ===
a1830 
=== Predecessor ===
v1029 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1471 address: v2402 #next: v799  <|@  <|@
f <@*|@fixed>@ <|@
tid v799 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v279 
=== Predecessor ===
a2363 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v87|DWORD[.] * 8 + 16], y: v91|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v87|DWORD[.] * 8 + 12], y: v96|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = UNCOMPRESSPOINTER (input: v97|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7a82eb53 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v99|DWORD[.] = MOV [v98|QWORD[.] + v91|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v99|DWORD[.]] destination: B89 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1474 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v1901 
=== Usages ===
=== Predecessor ===
v1475 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v1901  <|@  <|@
f <@~|@floating>@ <|@
tid i1902 <|@
result int[-260891|0xfffffffffffc04e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -260891
stableDimension: 0
stamp: i32 [-260891] ⇊00000000fffc04e5 ⇈00000000fffc04e5
stampKind: i32
value: int[-260891|0xfffffffffffc04e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1865 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1901 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1862 
=== Predecessor ===
v1474 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-260891|0xfffffffffffc04e5], Object[null]] destination: B90 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B92" "B95" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4580204151635863134
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: v562 
=== Usages ===
=== Predecessor ===
v553 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v562  <|@  <|@
f <@~|@floating>@ <|@
tid v2287 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2360 
y: v2253 
=== Succesors ===
=== Usages ===
v562 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2360 y: v2253  <|@  <|@
f <@*|@fixed>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=get target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
trueSuccessorProbability: 0.9931451844203526
=== Inputs ===
condition: v2287 
=== Succesors ===
trueSuccessor: v558 
falseSuccessor: v561 
=== Usages ===
=== Predecessor ===
v552 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2287 #trueSuccessor: v558 #falseSuccessor: v561  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v95|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9931451844203526 condition: = trueDestination: B91 -> B92 falseDestination: B91 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B93" "B94" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4580172983267700514
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=get target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2364 
=== Usages ===
=== Predecessor ===
v562 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2364  <|@  <|@
f <@~|@floating>@ <|@
tid v2404 <|@
result [v93|DWORD[.] * 8 + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2357 
=== Succesors ===
=== Usages ===
a2364 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2357  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2364 <|@
result v100|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeList.nodes
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 23]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: n [Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2404 
=== Succesors ===
next: i2365 
=== Usages ===
a1032 v2405 
=== Predecessor ===
v558 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2404 #next: i2365  <|@  <|@
f <@~|@floating>@ <|@
tid v2405 <|@
result [v100|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2364 
=== Succesors ===
=== Usages ===
i2365 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2364  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2365 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?76 
guard: - 
address: v2405 
=== Succesors ===
next: v1485 
=== Usages ===
v1038 
=== Predecessor ===
a2364 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?76 guard: - address: v2405 #next: v1485  <|@  <|@
f <@~|@floating>@ <|@
tid v1038 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2356 
y: i2365 
=== Succesors ===
=== Usages ===
v1485 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2356 y: i2365  <|@  <|@
f <@*|@fixed>@ <|@
tid v1485 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1038 
=== Succesors ===
trueSuccessor: v1481 
falseSuccessor: v1484 
=== Usages ===
=== Predecessor ===
i2365 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1038 #trueSuccessor: v1481 #falseSuccessor: v1484  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v100|DWORD[.] = MOV [v93|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction CMP (x: v91|DWORD, y: [v100|DWORD[.] * 8 + 12]) size: DWORD state [bci:42] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B92 -> B93 falseDestination: B92 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4580172983267700514
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1481 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1047 
=== Usages ===
a2366 
=== Predecessor ===
v1485 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1047  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1047 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.lastRet
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:359) [bci: 20]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2403 
value: i2356 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1048 
=== Usages ===
=== Predecessor ===
v1481 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2403 value: i2356 stateAfter: - lastLocationAccess: - #next: v1048  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1048 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:360) [bci: 27]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2394 
value: i528 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2366 
=== Usages ===
=== Predecessor ===
v1047 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2394 value: i528 stateAfter: - lastLocationAccess: - #next: a2366  <|@  <|@
f <@~|@floating>@ <|@
tid a1032 <|@
result v101|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 23]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
op: Uncompress
stamp: a [Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
value: a2364 
=== Succesors ===
=== Usages ===
v2406 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2364  <|@  <|@
f <@~|@floating>@ <|@
tid v2406 <|@
result [v101|QWORD[.] + v91|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1032 
index: i2356 
=== Succesors ===
=== Usages ===
a2366 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1032 index: i2356  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2366 <|@
result v102|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: n Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
stateBefore: - 
guard: v1481 
address: v2406 
=== Succesors ===
next: v869 
=== Usages ===
a1830 
=== Predecessor ===
v1048 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1481 address: v2406 #next: v869  <|@  <|@
f <@*|@fixed>@ <|@
tid v869 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v279 
=== Predecessor ===
a2366 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v87|DWORD[.] * 8 + 16], y: v91|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v87|DWORD[.] * 8 + 12], y: v96|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v101|QWORD[.] = UNCOMPRESSPOINTER (input: v100|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7a82eb53 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v102|DWORD[.] = MOV [v101|QWORD[.] + v91|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v102|DWORD[.]] destination: B93 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1484 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v1905 
=== Usages ===
=== Predecessor ===
v1485 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v1905  <|@  <|@
f <@~|@floating>@ <|@
tid i1906 <|@
result int[-266011|0xfffffffffffbf0e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -266011
stableDimension: 0
stamp: i32 [-266011] ⇊00000000fffbf0e5 ⇈00000000fffbf0e5
stampKind: i32
value: int[-266011|0xfffffffffffbf0e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1865 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1905 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1862 
=== Predecessor ===
v1484 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-266011|0xfffffffffffbf0e5], Object[null]] destination: B94 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4547607526639090665
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: a524 
=== Usages ===
=== Predecessor ===
v562 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a524  <|@  <|@
f <@~|@floating>@ <|@
tid a1000 <|@
result v103|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
op: Uncompress
stamp: a Ljava/util/AbstractList;
=== Inputs ===
value: a2357 
=== Succesors ===
=== Usages ===
v1049 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2357  <|@  <|@
tid v1049 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@7ec44224
stamp: void
targetMethod: HotSpotMethod<AbstractList.get(int)>
=== Inputs ===
arguments: a1000 i2356 
=== Succesors ===
=== Usages ===
a524 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1000 i2356  <|@  <|@
tid ?369 <|@
d <@d|@=== Debug Properties ===
bci: 114
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray(Object[])>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 196
stackSize: 2
=== Inputs ===
outerFrameState: - 
values: - a2 - a764 a270 i75 a764 i75 
=== Succesors ===
=== Usages ===
?532 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 - a764 a270 i75 a764 i75  <|@  <|@
tid ?532 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<SubList$1.next()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 707
stackSize: 0
=== Inputs ===
outerFrameState: ?369 
values: - 
=== Succesors ===
=== Usages ===
?1827 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?369 values: -  <|@  <|@
tid ?1827 <|@
d <@d|@=== Debug Properties ===
bci: 14
code: ResolvedJavaMethodBytecode<AbstractList$Itr.next()>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 358
stackSize: 0
=== Inputs ===
outerFrameState: ?532 
values: a2351 i2356 - 
=== Succesors ===
=== Usages ===
a524 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?532 values: a2351 i2356 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a524 <|@
result v104|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 14
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
polymorphic: false
stamp: a Ljava/lang/Object;
targetMethod: Direct#AbstractList.get
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1049 
stateDuring: ?1827 
=== Succesors ===
next: v1050 
=== Usages ===
a1829 
=== Predecessor ===
v561 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1049 stateDuring: ?1827 #next: v1050  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1050 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.lastRet
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:359) [bci: 20]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2403 
value: i2356 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1051 
=== Usages ===
=== Predecessor ===
a524 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2403 value: i2356 stateAfter: - lastLocationAccess: - #next: v1051  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1051 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:360) [bci: 27]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2394 
value: i528 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v298 
=== Usages ===
=== Predecessor ===
v1050 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2394 value: i528 stateAfter: - lastLocationAccess: - #next: v298  <|@  <|@
f <@~|@floating>@ <|@
tid a1829 <|@
result v105|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
op: Compress
stamp: n -
=== Inputs ===
value: a524 
=== Succesors ===
=== Usages ===
a1830 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a524  <|@  <|@
f <@*|@fixed>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v279 
=== Predecessor ===
v1051 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v103|QWORD[.] = UNCOMPRESSPOINTER (input: v93|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7a82eb53 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v103|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v91|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
locals: v87|DWORD[.] v91|DWORD - 
java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
locals: - 
java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stack: v68|QWORD[.] v75|DWORD 
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractList.get(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:14, 11, 114] <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v87|DWORD[.] * 8 + 16], y: v91|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v87|DWORD[.] * 8 + 12], y: v96|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v105|DWORD[.] = COMPRESSPOINTER (input: v104|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7a82eb53 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v105|DWORD[.]] destination: B95 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1464 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v1897 
=== Usages ===
=== Predecessor ===
v1465 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v1897  <|@  <|@
f <@~|@floating>@ <|@
tid i1898 <|@
result int[-258067|0xfffffffffffc0fed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -258067
stableDimension: 0
stamp: i32 [-258067] ⇊00000000fffc0fed ⇈00000000fffc0fed
stampKind: i32
value: int[-258067|0xfffffffffffc0fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1865 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1897 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1862 
=== Predecessor ===
v1464 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-258067|0xfffffffffffc0fed], Object[null]] destination: B96 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1454 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 56]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v1893 
=== Usages ===
=== Predecessor ===
v1455 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v1893  <|@  <|@
f <@~|@floating>@ <|@
tid i1894 <|@
result int[-255251|0xfffffffffffc1aed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -255251
stableDimension: 0
stamp: i32 [-255251] ⇊00000000fffc1aed ⇈00000000fffc1aed
stampKind: i32
value: int[-255251|0xfffffffffffc1aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1865 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1893 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1862 
=== Predecessor ===
v1454 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-255251|0xfffffffffffc1aed], Object[null]] destination: B97 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1444 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=nextIndex target_method_class=Ljava/util/AbstractList$ListItr; position=at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v1889 
=== Usages ===
=== Predecessor ===
v1445 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v1889  <|@  <|@
f <@~|@floating>@ <|@
tid i1890 <|@
result int[-251955|0xfffffffffffc27cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -251955
stableDimension: 0
stamp: i32 [-251955] ⇊00000000fffc27cd ⇈00000000fffc27cd
stampKind: i32
value: int[-251955|0xfffffffffffc27cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1865 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1889 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1862 
=== Predecessor ===
v1444 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-251955|0xfffffffffffc27cd], Object[null]] destination: B98 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B100" "B102" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581241349962885872
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1490 
=== Usages ===
=== Predecessor ===
v193 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1490  <|@  <|@
f <@~|@floating>@ <|@
tid v2280 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2339 
y: v2279 
=== Succesors ===
=== Usages ===
v1490 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2339 y: v2279  <|@  <|@
f <@*|@fixed>@ <|@
tid v1490 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap$KeyIterator; target_method=hasNext target_method_class=Ljava/util/HashMap$HashIterator; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2280 
=== Succesors ===
trueSuccessor: v1486 
falseSuccessor: v1489 
=== Usages ===
=== Predecessor ===
v192 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2280 #trueSuccessor: v1486 #falseSuccessor: v1489  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v72|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581241349962885872
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1486 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap$KeyIterator; target_method=hasNext target_method_class=Ljava/util/HashMap$HashIterator; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2367 
=== Usages ===
=== Predecessor ===
v1490 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2367  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2367 <|@
result v106|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$HashIterator.next
nodeSourcePosition: at java.util.HashMap$HashIterator.hasNext(HashMap.java:1435) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2386 
=== Succesors ===
next: v2473 
=== Usages ===
v2473 
=== Predecessor ===
v1486 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2386 #next: v2473  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2473 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?76 
object: a2367 
=== Succesors ===
next: a90 
=== Usages ===
=== Predecessor ===
a2367 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?76 object: a2367 #next: a90  <|@  <|@
tid v1057 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@72b0a41c
stamp: void
targetMethod: HotSpotMethod<Iterator.next()>
=== Inputs ===
arguments: a270 
=== Succesors ===
=== Usages ===
a90 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a270  <|@  <|@
tid ?1826 <|@
d <@d|@=== Debug Properties ===
bci: 114
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray(Object[])>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 196
stackSize: 2
=== Inputs ===
outerFrameState: - 
values: - a2 - a764 a270 i75 a764 i75 
=== Succesors ===
=== Usages ===
a90 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 - a764 a270 i75 a764 i75  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a90 <|@
result v107|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 114
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
polymorphic: false
stamp: a Ljava/lang/Object;
targetMethod: Direct#Iterator.next
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1057 
stateDuring: ?1826 
=== Succesors ===
next: v281 
=== Usages ===
a1828 
=== Predecessor ===
v2473 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1057 stateDuring: ?1826 #next: v281  <|@  <|@
f <@~|@floating>@ <|@
tid a1828 <|@
result v108|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
op: Compress
stamp: n -
=== Inputs ===
value: a90 
=== Succesors ===
=== Usages ===
a1830 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a90  <|@  <|@
f <@*|@fixed>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v279 
=== Predecessor ===
a90 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v106|DWORD[.] = MOV [v67|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v106|DWORD[.] * 8] state [bci:42] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stack: v68|QWORD[.] v75|DWORD 
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.next()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:114] <|@ <|@
      nr   -1  <|@ instruction v107|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v108|DWORD[.] = COMPRESSPOINTER (input: v107|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7a82eb53 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v108|DWORD[.]] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" "B78" "B95" "B89" "B93" 
    successors "B69" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4612399952198421080
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1830 <|@
result v109|DWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: n -
valueDescription: n -
=== Inputs ===
merge: v279 
values: a1828 a2350 a1829 a2363 a2366 
=== Succesors ===
=== Usages ===
v928 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v279 values: a1828 a2350 a1829 a2363 a2366  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v281 v287 v298 v799 v869 
=== Succesors ===
next: v928 
=== Usages ===
a1830 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v281 v287 v298 v799 v869 #next: v928  <|@  <|@
f <@~|@floating>@ <|@
tid v1290 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v2299 v79 
=== Succesors ===
=== Usages ===
v928 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v2299 v79  <|@  <|@
f <@~|@floating>@ <|@
tid v2382 <|@
result [v68|QWORD[.] + v75|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a764 
index: i75 
=== Succesors ===
=== Usages ===
v928 j2215 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a764 index: i75  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v928 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1290 
address: v2382 
value: a1830 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j2215 
=== Usages ===
=== Predecessor ===
v279 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1290 address: v2382 value: a1830 stateAfter: - lastLocationAccess: - #next: j2215  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2215 <|@
result [v68|QWORD[.] + v75|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v2382 
=== Succesors ===
next: v2221 
=== Usages ===
j2217 
=== Predecessor ===
v928 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v2382 #next: v2221  <|@  <|@
f <@~|@floating>@ <|@
tid j2217 <|@
result v110|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j2215 
y: i2216 
=== Succesors ===
=== Usages ===
v2453 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j2215 y: i2216  <|@  <|@
f <@~|@floating>@ <|@
tid v2453 <|@
result [v110|QWORD[*] + v74|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2217 
index: j2220 
=== Succesors ===
=== Usages ===
v2221 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2217 index: j2220  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2221 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2453 
value: i2222 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v95 
=== Usages ===
=== Predecessor ===
j2215 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2453 value: i2222 stateAfter: - lastLocationAccess: - #next: v95  <|@  <|@
f <@~|@floating>@ <|@
tid i94 <|@
result v112|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 120]
stamp: i32
=== Inputs ===
x: i75 
y: i20 
=== Succesors ===
=== Usages ===
i75 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i75 y: i20  <|@  <|@
f <@*|@fixed>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
stamp: void
=== Inputs ===
loopBegin: v74 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2221 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v74  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v109|DWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v68|QWORD[.] + v75|DWORD * 4 + 16], y: v109|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v111|QWORD[.] = LEA [v68|QWORD[.] + v75|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v110|QWORD[*] = SHR v111|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v110|QWORD[*] + v74|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = INC v75|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v112|DWORD] destination: B101 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1489 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap$KeyIterator; target_method=hasNext target_method_class=Ljava/util/HashMap$HashIterator; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v1907 
=== Usages ===
=== Predecessor ===
v1490 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v1907  <|@  <|@
f <@~|@floating>@ <|@
tid i1908 <|@
result int[-269363|0xfffffffffffbe3cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -269363
stableDimension: 0
stamp: i32 [-269363] ⇊00000000fffbe3cd ⇈00000000fffbe3cd
stampKind: i32
value: int[-269363|0xfffffffffffbe3cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1865 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1907 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1862 
=== Predecessor ===
v1489 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-269363|0xfffffffffffbe3cd], Object[null]] destination: B102 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1394 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v1868 
=== Usages ===
=== Predecessor ===
v1395 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v1868  <|@  <|@
f <@~|@floating>@ <|@
tid a1870 <|@
result v113|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1418920718
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/l/d$a;
stampKind: a -
value: Object[d.a@1418920718]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1866 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1869 <|@
result int[-234300|0xfffffffffffc6cc4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -234300
stableDimension: 0
stamp: i32 [-234300] ⇊00000000fffc6cc4 ⇈00000000fffc6cc4
stampKind: i32
value: int[-234300|0xfffffffffffc6cc4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1865 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1868 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1862 
=== Predecessor ===
v1394 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v113|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1418920718] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-234300|0xfffffffffffc6cc4], v113|QWORD[.]] destination: B103 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B105" "B108" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 126]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v150 
=== Usages ===
=== Predecessor ===
v83 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v150  <|@  <|@
f <@*|@fixed>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$SubList$1; target_method=hasNext target_method_class=Ljava/util/ArrayList$SubList$1; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
trueSuccessorProbability: 0.9408014571948998
=== Inputs ===
condition: v2282 
=== Succesors ===
trueSuccessor: v143 
falseSuccessor: v149 
=== Usages ===
=== Predecessor ===
v81 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2282 #trueSuccessor: v143 #falseSuccessor: v149  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v72|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9408014571948998 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4606649205729381557
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$SubList$1; target_method=hasNext target_method_class=Ljava/util/ArrayList$SubList$1; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2368 
=== Usages ===
=== Predecessor ===
v150 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2368  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2368 <|@
result v114|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList$1.this$1
nodeSourcePosition: at java.util.ArrayList$SubList$1.hasNext(ArrayList.java:1109) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
nullCheck: false
stamp: n# Ljava/util/ArrayList$SubList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2384 
=== Succesors ===
next: i2369 
=== Usages ===
v2407 
=== Predecessor ===
v143 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2384 #next: i2369  <|@  <|@
f <@~|@floating>@ <|@
tid v2407 <|@
result [v114|DWORD[.] * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2368 
=== Succesors ===
=== Usages ===
i2369 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2368  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2369 <|@
result v115|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList.size
nodeSourcePosition: at java.util.ArrayList$SubList$1.hasNext(ArrayList.java:1109) [bci: 8]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?76 
guard: - 
address: v2407 
=== Succesors ===
next: i2370 
=== Usages ===
v226 
=== Predecessor ===
a2368 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?76 guard: - address: v2407 #next: i2370  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2370 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList$1.cursor
nodeSourcePosition: at java.util.ArrayList$SubList$1.hasNext(ArrayList.java:1109) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2383 
=== Succesors ===
next: v1503 
=== Usages ===
v226 
=== Predecessor ===
i2369 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2383 #next: v1503  <|@  <|@
f <@~|@floating>@ <|@
tid v226 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList$SubList$1.hasNext(ArrayList.java:1109) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2369 
y: i2370 
=== Succesors ===
=== Usages ===
v1503 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2369 y: i2370  <|@  <|@
f <@*|@fixed>@ <|@
tid v1503 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 133]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v226 
=== Succesors ===
trueSuccessor: v1500 
falseSuccessor: v1502 
=== Usages ===
=== Predecessor ===
i2370 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v226 #trueSuccessor: v1500 #falseSuccessor: v1502  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v114|DWORD[.] = MOV [v67|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction v115|DWORD = MOV [v114|DWORD[.] * 8 + 24] size: DWORD state [bci:42] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v115|DWORD, y: [v67|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors 
    xhandlers
    flags 
    probability 4606649205729381557
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1500 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 133]
stamp: void
=== Inputs ===
=== Succesors ===
next: v788 
=== Usages ===
=== Predecessor ===
v1503 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v788  <|@  <|@
f <@*|@fixed>@ <|@
tid v788 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 146]
stamp: void
=== Inputs ===
result: a764 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1500 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a764 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v68|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1502 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 133]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1915 
=== Usages ===
=== Predecessor ===
v1503 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1915  <|@  <|@
f <@~|@floating>@ <|@
tid i1916 <|@
result int[-273683|0xfffffffffffbd2ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -273683
stableDimension: 0
stamp: i32 [-273683] ⇊00000000fffbd2ed ⇈00000000fffbd2ed
stampKind: i32
value: int[-273683|0xfffffffffffbd2ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1865 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1915 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1862 
=== Predecessor ===
v1502 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-273683|0xfffffffffffbd2ed], Object[null]] destination: B107 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B109" "B114" 
    xhandlers
    flags 
    probability 4588692230165968048
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: v159 
=== Usages ===
=== Predecessor ===
v150 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v159  <|@  <|@
f <@~|@floating>@ <|@
tid v2308 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2339 
y: v2261 
=== Succesors ===
=== Usages ===
v159 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2339 y: v2261  <|@  <|@
f <@*|@fixed>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/SubList$1; target_method=hasNext target_method_class=Ljava/util/SubList$1; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
trueSuccessorProbability: 0.8652680652680653
=== Inputs ===
condition: v2308 
=== Succesors ===
trueSuccessor: v155 
falseSuccessor: v158 
=== Usages ===
=== Predecessor ===
v149 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2308 #trueSuccessor: v155 #falseSuccessor: v158  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v72|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8652680652680653 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B110" "B113" 
    xhandlers
    flags 
    probability 4587542776907870065
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/SubList$1; target_method=hasNext target_method_class=Ljava/util/SubList$1; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2371 
=== Usages ===
=== Predecessor ===
v159 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2371  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2371 <|@
result v116|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList$1.i
nodeSourcePosition: at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 1]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v2392 
=== Succesors ===
next: v2372 
=== Usages ===
v2454 v2408 
=== Predecessor ===
v155 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2392 #next: v2372  <|@  <|@
f <@~|@floating>@ <|@
tid v2454 <|@
result [v116|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2371 
=== Succesors ===
=== Usages ===
v2372 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2371  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2372 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?76 
guard: - 
address: v2454 
=== Succesors ===
next: v1511 
=== Usages ===
v2288 
=== Predecessor ===
a2371 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?76 guard: - address: v2454 #next: v1511  <|@  <|@
f <@~|@floating>@ <|@
tid v2288 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2372 
y: v2267 
=== Succesors ===
=== Usages ===
v1511 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2372 y: v2267  <|@  <|@
f <@*|@fixed>@ <|@
tid v1511 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=nextIndex target_method_class=Ljava/util/AbstractList$ListItr; position=at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2288 
=== Succesors ===
trueSuccessor: v1508 
falseSuccessor: v1510 
=== Usages ===
=== Predecessor ===
v2372 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2288 #trueSuccessor: v1508 #falseSuccessor: v1510  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v116|DWORD[.] = MOV [v67|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction CMP [v116|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} state [bci:42] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B109 -> B110 falseDestination: B109 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B111" "B112" 
    xhandlers
    flags 
    probability 4587542776907870065
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1508 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=nextIndex target_method_class=Ljava/util/AbstractList$ListItr; position=at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2373 
=== Usages ===
=== Predecessor ===
v1511 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2373  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2373 <|@
result v117|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList$1.this$0
nodeSourcePosition: at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 10]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
nullCheck: false
stamp: n Ljava/util/SubList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2386 
=== Succesors ===
next: i2374 
=== Usages ===
v2410 v2409 
=== Predecessor ===
v1508 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2386 #next: i2374  <|@  <|@
f <@~|@floating>@ <|@
tid v2410 <|@
result [v117|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2373 
=== Succesors ===
=== Usages ===
i2374 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2373  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2374 <|@
result v118|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.size
nodeSourcePosition: at java.util.SubList.access$200(AbstractList.java:613) [bci: 1]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 8]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?76 
guard: - 
address: v2410 
=== Succesors ===
next: i2375 
=== Usages ===
v234 
=== Predecessor ===
a2373 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?76 guard: - address: v2410 #next: i2375  <|@  <|@
f <@~|@floating>@ <|@
tid v2409 <|@
result [v117|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2373 
=== Succesors ===
=== Usages ===
i2375 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2373  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2375 <|@
result v119|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.offset
nodeSourcePosition: at java.util.SubList.access$000(AbstractList.java:613) [bci: 1]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 13]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2409 
=== Succesors ===
next: i2376 
=== Usages ===
i315 
=== Predecessor ===
i2374 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2409 #next: i2376  <|@  <|@
f <@~|@floating>@ <|@
tid v2408 <|@
result [v116|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2371 
=== Succesors ===
=== Usages ===
i2376 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2371  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2376 <|@
result v120|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$ListItr.nextIndex(AbstractList.java:413) [bci: 1]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2408 
=== Succesors ===
next: v1519 
=== Usages ===
i315 
=== Predecessor ===
i2375 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2408 #next: v1519  <|@  <|@
f <@~|@floating>@ <|@
tid i315 <|@
result v121|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 16]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: i32
=== Inputs ===
x: i2376 
y: i2375 
=== Succesors ===
=== Usages ===
v234 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2376 y: i2375  <|@  <|@
f <@~|@floating>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i315 
y: i2374 
=== Succesors ===
=== Usages ===
v1519 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i315 y: i2374  <|@  <|@
f <@*|@fixed>@ <|@
tid v1519 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 133]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v234 
=== Succesors ===
trueSuccessor: v1518 
falseSuccessor: v1516 
=== Usages ===
=== Predecessor ===
i2376 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v234 #trueSuccessor: v1518 #falseSuccessor: v1516  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v117|DWORD[.] = MOV [v67|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction v118|DWORD = MOV [v117|DWORD[.] * 8 + 20] size: DWORD state [bci:42] <|@ <|@
      nr   -1  <|@ instruction v119|DWORD = MOV [v117|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = MOV [v116|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = SUB (x: v120|DWORD, ~y: v119|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v118|DWORD, y: v121|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B110 -> B111 falseDestination: B110 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1518 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 133]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1923 
=== Usages ===
=== Predecessor ===
v1519 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1923  <|@  <|@
f <@~|@floating>@ <|@
tid i1924 <|@
result int[-278291|0xfffffffffffbc0ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -278291
stableDimension: 0
stamp: i32 [-278291] ⇊00000000fffbc0ed ⇈00000000fffbc0ed
stampKind: i32
value: int[-278291|0xfffffffffffbc0ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1865 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1923 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1862 
=== Predecessor ===
v1518 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-278291|0xfffffffffffbc0ed], Object[null]] destination: B111 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors 
    xhandlers
    flags 
    probability 4587542776907870065
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1516 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 133]
stamp: void
=== Inputs ===
=== Succesors ===
next: v873 
=== Usages ===
=== Predecessor ===
v1519 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v873  <|@  <|@
f <@*|@fixed>@ <|@
tid v873 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 146]
stamp: void
=== Inputs ===
result: a764 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1516 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a764 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v68|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1510 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=nextIndex target_method_class=Ljava/util/AbstractList$ListItr; position=at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1921 
=== Usages ===
=== Predecessor ===
v1511 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1921  <|@  <|@
f <@~|@floating>@ <|@
tid i1922 <|@
result int[-274995|0xfffffffffffbcdcd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -274995
stableDimension: 0
stamp: i32 [-274995] ⇊00000000fffbcdcd ⇈00000000fffbcdcd
stampKind: i32
value: int[-274995|0xfffffffffffbcdcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1865 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1921 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1862 
=== Predecessor ===
v1510 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-274995|0xfffffffffffbcdcd], Object[null]] destination: B113 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B115" "B118" 
    xhandlers
    flags 
    probability 4575751434813445373
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1523 
=== Usages ===
=== Predecessor ===
v159 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1523  <|@  <|@
f <@~|@floating>@ <|@
tid v2307 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2339 
y: v2279 
=== Succesors ===
=== Usages ===
v1523 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2339 y: v2279  <|@  <|@
f <@*|@fixed>@ <|@
tid v1523 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap$KeyIterator; target_method=hasNext target_method_class=Ljava/util/HashMap$HashIterator; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2307 
=== Succesors ===
trueSuccessor: v1520 
falseSuccessor: v1522 
=== Usages ===
=== Predecessor ===
v158 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2307 #trueSuccessor: v1520 #falseSuccessor: v1522  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v72|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B114 -> B115 falseDestination: B114 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B116" "B117" 
    xhandlers
    flags 
    probability 4575751434813445373
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1520 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap$KeyIterator; target_method=hasNext target_method_class=Ljava/util/HashMap$HashIterator; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2377 
=== Usages ===
=== Predecessor ===
v1523 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2377  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2377 <|@
result v122|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$HashIterator.next
nodeSourcePosition: at java.util.HashMap$HashIterator.hasNext(HashMap.java:1435) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2386 
=== Succesors ===
next: v1527 
=== Usages ===
v1193 
=== Predecessor ===
v1520 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2386 #next: v1527  <|@  <|@
f <@~|@floating>@ <|@
tid v1193 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.hasNext(HashMap.java:1435) [bci: 4]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
=== Inputs ===
value: a2377 
=== Succesors ===
=== Usages ===
v1527 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2377  <|@  <|@
f <@*|@fixed>@ <|@
tid v1527 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 133]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1193 
=== Succesors ===
trueSuccessor: v1524 
falseSuccessor: v1526 
=== Usages ===
=== Predecessor ===
a2377 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1193 #trueSuccessor: v1524 #falseSuccessor: v1526  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v122|DWORD[.] = MOV [v67|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v122|DWORD[.], y: v122|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors 
    xhandlers
    flags 
    probability 4575751434813445373
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1524 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 133]
stamp: void
=== Inputs ===
=== Succesors ===
next: v102 
=== Usages ===
=== Predecessor ===
v1527 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v102  <|@  <|@
f <@*|@fixed>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 146]
stamp: void
=== Inputs ===
result: a764 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1524 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a764 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v68|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1526 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 133]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1919 
=== Usages ===
=== Predecessor ===
v1527 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1919  <|@  <|@
f <@~|@floating>@ <|@
tid i1920 <|@
result int[-279571|0xfffffffffffbbbed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -279571
stableDimension: 0
stamp: i32 [-279571] ⇊00000000fffbbbed ⇈00000000fffbbbed
stampKind: i32
value: int[-279571|0xfffffffffffbbbed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1865 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1919 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1862 
=== Predecessor ===
v1526 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-279571|0xfffffffffffbbbed], Object[null]] destination: B117 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1522 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap$KeyIterator; target_method=hasNext target_method_class=Ljava/util/HashMap$HashIterator; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1917 
=== Usages ===
=== Predecessor ===
v1523 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1917  <|@  <|@
f <@~|@floating>@ <|@
tid i1918 <|@
result int[-278579|0xfffffffffffbbfcd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -278579
stableDimension: 0
stamp: i32 [-278579] ⇊00000000fffbbfcd ⇈00000000fffbbfcd
stampKind: i32
value: int[-278579|0xfffffffffffbbfcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1865 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1917 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1862 
=== Predecessor ===
v1522 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-278579|0xfffffffffffbbfcd], Object[null]] destination: B118 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B103" "B73" "B82" "B81" "B80" "B79" "B98" "B97" "B96" "B90" "B94" "B102" "B107" "B118" "B117" "B113" "B111" 
    successors 
    xhandlers
    flags 
    probability 2373678478600962048
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1865 <|@
result v123|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-279571 - -234300] ⇊00000000fff800c4 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v1862 
values: i1869 i1874 i1878 i1880 i1884 i1886 i1890 i1894 i1898 i1902 i1906 i1908 i1916 i1918 i1920 i1922 i1924 
=== Succesors ===
=== Usages ===
v1867 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1862 values: i1869 i1874 i1878 i1880 i1884 i1886 i1890 i1894 i1898 i1902 i1906 i1908 i1916 i1918 i1920 i1922 i1924  <|@  <|@
f <@~|@floating>@ <|@
tid a1866 <|@
result v124|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/l/d$a;
valueDescription: a -
=== Inputs ===
merge: v1862 
values: a1870 a1836 a1836 a1836 a1836 a1836 a1836 a1836 a1836 a1836 a1836 a1836 a1836 a1836 a1836 a1836 a1836 
=== Succesors ===
=== Usages ===
v1867 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1862 values: a1870 a1836 a1836 a1836 a1836 a1836 a1836 a1836 a1836 a1836 a1836 a1836 a1836 a1836 a1836 a1836 a1836  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1862 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1868 v1873 v1877 v1879 v1883 v1885 v1889 v1893 v1897 v1901 v1905 v1907 v1915 v1917 v1919 v1921 v1923 
=== Succesors ===
next: v1867 
=== Usages ===
i1865 a1866 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1868 v1873 v1877 v1879 v1883 v1885 v1889 v1893 v1897 v1901 v1905 v1907 v1915 v1917 v1919 v1921 v1923 #next: v1867  <|@  <|@
f <@*|@fixed>@ <|@
tid v1867 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?76 
actionAndReason: i1865 
speculation: a1866 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1862 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?76 actionAndReason: i1865 speculation: a1866  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v123|DWORD, v124|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v123|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v124|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction DEOPT info [bci:42] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1385 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1930 
=== Usages ===
=== Predecessor ===
v2304 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1930  <|@  <|@
f <@~|@floating>@ <|@
tid a1933 <|@
result v125|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@435668424
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@435668424]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1930 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1932 <|@
result int[-235291|0xfffffffffffc68e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -235291
stableDimension: 0
stamp: i32 [-235291] ⇊00000000fffc68e5 ⇈00000000fffc68e5
stampKind: i32
value: int[-235291|0xfffffffffffc68e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1930 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1930 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?268 
actionAndReason: i1932 
speculation: a1933 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1385 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?268 actionAndReason: i1932 speculation: a1933  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v125|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@435668424] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -235291 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v125|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 37]
stack: v67|QWORD[.] 
locals: - v1|QWORD[.] - v68|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1321 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashSet; target_method=size target_method_class=Ljava/util/HashSet; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1848 
=== Usages ===
=== Predecessor ===
v1322 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1848  <|@  <|@
f <@~|@floating>@ <|@
tid i1849 <|@
result int[-301875|0xfffffffffffb64cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -301875
stableDimension: 0
stamp: i32 [-301875] ⇊00000000fffb64cd ⇈00000000fffb64cd
stampKind: i32
value: int[-301875|0xfffffffffffb64cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1837 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1848 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1833 
=== Predecessor ===
v1321 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-301875|0xfffffffffffb64cd]] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B3" "B121" "B7" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1837 <|@
result v126|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-302859 - -231691] ⇊00000000fff860c5 ⇈00000000ffff7ffd
valueDescription: i32
=== Inputs ===
merge: v1833 
values: i1847 i1849 i1851 
=== Succesors ===
=== Usages ===
v1839 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1833 values: i1847 i1849 i1851  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1833 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1846 v1848 v1850 
=== Succesors ===
next: v1839 
=== Usages ===
i1837 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1846 v1848 v1850 #next: v1839  <|@  <|@
f <@*|@fixed>@ <|@
tid v1839 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i1837 
speculation: a1836 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1833 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i1837 speculation: a1836  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v126|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v126|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@55cef607 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9408274225153865 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606649439604196894
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction v4|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606649439604196894
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|DWORD] destination: B2 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B2" "B6" "B9" 
    successors "B11" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|DWORD, y: [v1|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 2.759914994618166E-4 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B25" "B35" 
    xhandlers
    flags 
    probability 4607179932889589141
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9408274225153865 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606647100791496063
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v1|QWORD[.]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" "B25" 
    successors "B27" "B33" 
    xhandlers
    flags 
    probability 4606649439604196894
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: v28|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction v30|DWORD = MOV [v29|DWORD[.] * 8 + 12] size: DWORD state [bci:32] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v30|DWORD, y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4606649439604196894
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4606649439604196894
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA [v31|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v32|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606564697403607689
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v31|QWORD + 232] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v31|QWORD] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B64" 
    xhandlers
    flags 
    probability 4606649439604196894
    begin_IR
      LIR
      nr   -1  <|@ instruction [v34|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE v34|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV [v36|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v34|QWORD[*]], y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v34|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVE input: long[-4294967296|0xffffffff00000000] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v34|QWORD[*] + 12], y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v34|QWORD[*] + 20], y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v34|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v34|QWORD[*] + 28], y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|DWORD[.] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@7a82eb53 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v34|QWORD[*] + 32], y: v40|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v35|QWORD[.], v28|QWORD[.]] destination: B32 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B32" "B58" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v67|QWORD[.], v68|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = MOV [v68|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = MOV v69|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = DEC v70|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v70|QWORD, y: v71|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" "B120" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v69|DWORD, y: v69|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B65" "B67" 
    successors "B69" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 37]
stack: v67|QWORD[.] 
locals: - v1|QWORD[.] - v68|QWORD[.] - - 
>@ <|@ instruction v72|DWORD = MOV [v67|QWORD[.] + 8] size: DWORD state [bci:37] <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOV [v68|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612399952198421081
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v73|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612399952198421081
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v72|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8936836714032184 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611845243203171713
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v76|DWORD[.] = MOV [v67|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction v77|DWORD = MOV [v76|DWORD[.] * 8 + 24] size: DWORD state [bci:42] <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = MOV [v67|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v78|DWORD, y: v77|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611845243203171713
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v79|DWORD[.] = MOV [v76|DWORD[.] * 8 + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction v80|DWORD = MOV [v79|DWORD[.] * 8 + 12] size: DWORD state [bci:42] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v80|DWORD, y: [v67|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" "B81" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611845243203171713
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v77|DWORD, y: v78|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B75 -> B76 falseDestination: B75 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611845243203171713
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v81|DWORD[.] = MOV [v79|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction v82|DWORD = MOV [v81|DWORD[.] * 8 + 12] size: DWORD state [bci:42] <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = ADD (x: v78|DWORD, ~y: [v67|QWORD[.] + 28]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v82|DWORD, y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B76 -> B77 falseDestination: B76 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B78" "B79" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611845243203171713
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v82|DWORD, y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B77 -> B78 falseDestination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611845243203171713
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = INC v78|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v67|QWORD[.] + 12], y: v84|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v67|QWORD[.] + 16], y: v78|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = UNCOMPRESSPOINTER (input: v81|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7a82eb53 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v86|DWORD[.] = MOV [v85|QWORD[.] + v83|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v86|DWORD[.]] destination: B78 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" "B78" "B95" "B89" "B93" 
    successors "B69" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4612399952198421080
    begin_IR
      LIR
      nr   -1  <|@ instruction [v109|DWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v68|QWORD[.] + v75|DWORD * 4 + 16], y: v109|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v111|QWORD[.] = LEA [v68|QWORD[.] + v75|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v110|QWORD[*] = SHR v111|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v110|QWORD[*] + v74|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = INC v75|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v112|DWORD] destination: B101 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B101" 
    successors "B70" "B104" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4614651752012106329
    begin_IR
      LIR
      nr   -1  <|@ instruction [v75|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v69|DWORD, y: v75|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6985273317247691 condition: > trueDestination: B69 -> B70 falseDestination: B69 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B84" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598043364214525307
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v72|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9213533497647322 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" "B98" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597345348145217565
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v87|DWORD[.] = MOV [v67|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction CMP [v87|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} state [bci:42] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B86" "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597345348145217565
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v88|DWORD[.] = MOV [v67|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction v89|DWORD = MOV [v88|DWORD[.] * 8 + 20] size: DWORD state [bci:42] <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = MOV [v88|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = MOV [v87|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = SUB (x: v91|DWORD, ~y: v90|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v89|DWORD, y: v92|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B87" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597345348145217565
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v93|DWORD[.] = MOV [v87|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction v94|DWORD = MOV [v93|DWORD[.] * 8 + 12] size: DWORD state [bci:42] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v94|DWORD, y: [v87|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" "B91" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597345348145217565
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = MOV [v93|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = INC v91|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v95|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9304948647614187 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B89" "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596776981866787665
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v97|DWORD[.] = MOV [v93|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction CMP (x: v91|DWORD, y: [v97|DWORD[.] * 8 + 12]) size: DWORD state [bci:42] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B88 -> B89 falseDestination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596776981866787665
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v87|DWORD[.] * 8 + 16], y: v91|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v87|DWORD[.] * 8 + 12], y: v96|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = UNCOMPRESSPOINTER (input: v97|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7a82eb53 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v99|DWORD[.] = MOV [v98|QWORD[.] + v91|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v99|DWORD[.]] destination: B89 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B100" "B102" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581241349962885872
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v72|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581241349962885872
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v106|DWORD[.] = MOV [v67|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v106|DWORD[.] * 8] state [bci:42] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stack: v68|QWORD[.] v75|DWORD 
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.next()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:114] <|@ <|@
      nr   -1  <|@ instruction v107|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v108|DWORD[.] = COMPRESSPOINTER (input: v107|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7a82eb53 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v108|DWORD[.]] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B92" "B95" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4580204151635863134
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v95|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9931451844203526 condition: = trueDestination: B91 -> B92 falseDestination: B91 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B93" "B94" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4580172983267700514
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v100|DWORD[.] = MOV [v93|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction CMP (x: v91|DWORD, y: [v100|DWORD[.] * 8 + 12]) size: DWORD state [bci:42] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B92 -> B93 falseDestination: B92 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4580172983267700514
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v87|DWORD[.] * 8 + 16], y: v91|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v87|DWORD[.] * 8 + 12], y: v96|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v101|QWORD[.] = UNCOMPRESSPOINTER (input: v100|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7a82eb53 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v102|DWORD[.] = MOV [v101|QWORD[.] + v91|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v102|DWORD[.]] destination: B93 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4547607526639090665
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v103|QWORD[.] = UNCOMPRESSPOINTER (input: v93|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7a82eb53 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v103|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v91|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
locals: v87|DWORD[.] v91|DWORD - 
java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
locals: - 
java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stack: v68|QWORD[.] v75|DWORD 
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractList.get(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:14, 11, 114] <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v87|DWORD[.] * 8 + 16], y: v91|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v87|DWORD[.] * 8 + 12], y: v96|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v105|DWORD[.] = COMPRESSPOINTER (input: v104|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7a82eb53 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v105|DWORD[.]] destination: B95 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B105" "B108" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v72|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9408014571948998 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4606649205729381557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v114|DWORD[.] = MOV [v67|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction v115|DWORD = MOV [v114|DWORD[.] * 8 + 24] size: DWORD state [bci:42] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v115|DWORD, y: [v67|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors 
    xhandlers
    flags 
    probability 4606649205729381557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v68|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B68" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B65 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B109" "B114" 
    xhandlers
    flags 
    probability 4588692230165968048
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v72|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8652680652680653 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B110" "B113" 
    xhandlers
    flags 
    probability 4587542776907870065
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v116|DWORD[.] = MOV [v67|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction CMP [v116|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} state [bci:42] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B109 -> B110 falseDestination: B109 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B111" "B112" 
    xhandlers
    flags 
    probability 4587542776907870065
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v117|DWORD[.] = MOV [v67|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction v118|DWORD = MOV [v117|DWORD[.] * 8 + 20] size: DWORD state [bci:42] <|@ <|@
      nr   -1  <|@ instruction v119|DWORD = MOV [v117|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = MOV [v116|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = SUB (x: v120|DWORD, ~y: v119|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v118|DWORD, y: v121|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B110 -> B111 falseDestination: B110 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors 
    xhandlers
    flags 
    probability 4587542776907870065
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v68|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B8" 
    xhandlers
    flags 
    probability 4588688488168922656
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8652052238805972 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4587539003186891847
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction v7|DWORD = MOV [v6|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4587539003186891847
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v8|DWORD] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B36" 
    xhandlers
    flags 
    probability 4588686134605283673
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v1|QWORD[.]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B22" "B35" 
    successors "B37" "B63" 
    xhandlers
    flags 
    probability 4588688488168922656
    begin_IR
      LIR
      nr   -1  <|@ instruction [v42|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8652052238805972 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B61" 
    xhandlers
    flags 
    probability 4587539003186891847
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: v42|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction v44|DWORD = MOV [v43|DWORD[.] * 8 + 12] size: DWORD state [bci:32] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v44|DWORD, y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4587539003186891847
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v0|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4587539003186891847
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v45|DWORD, y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B60" 
    xhandlers
    flags 
    probability 4587539003186891847
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOV [v43|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<AbstractList.listIterator(int)>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v47|QWORD, y: [v46|DWORD * 8 + 696]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B47" 
    xhandlers
    flags 
    probability 4587539003186891847
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v46|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5044648172401477 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4583101288029259690
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD[.] = MOV [v43|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: v42|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction v49|DWORD = MOV [v48|DWORD[.] * 8 + 12] size: DWORD state [bci:32] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v45|DWORD, y: v49|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B55" 
    xhandlers
    flags 
    probability 4583101288029259690
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|DWORD] destination: B46 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B46" "B49" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4587539003186891847
    begin_IR
      LIR
      nr   -1  <|@ instruction [v51|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = LEA [v52|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v53|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4587465221365380873
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v53|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v52|QWORD + 248] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v52|QWORD] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B56" 
    successors "B64" 
    xhandlers
    flags 
    probability 4587539003186891847
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE v55|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[*] = LEA [v55|QWORD[*] + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = MOVE v57|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/SubList$1;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOV [v59|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD[*]], y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v55|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD[*] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v61|DWORD[.] = COMPRESSPOINTER (input: v58|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7a82eb53 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD[*] + 16], y: v61|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD[.] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@7a82eb53 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD[*] + 20], y: v62|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = MOV [v63|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD[*] + 24], y: v64|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v55|QWORD[*] + 32] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD[*] + 36], y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v55|QWORD[*] + 40] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD[*] + 44], y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD[*] + 48], y: v43|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD[*] + 52], y: v43|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v56|QWORD[.], v42|QWORD[.]] destination: B58 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" "B51" 
    xhandlers
    flags 
    probability 4582969519089783012
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v46|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5252282556463239 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4578834872492947213
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v45|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    probability 4578834872492947213
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" "B59" 
    xhandlers
    flags 
    probability 4578096966431877819
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v46|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4578096966431877819
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOV [v43|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v45|DWORD, y: v50|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4578096966431877819
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v50|DWORD] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576577122618762551
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v128|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v128|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: v28|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:32] <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|QWORD[.]] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" "B121" 
    xhandlers
    flags 
    probability 4575751561709176675
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashSet;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 4575751561709176675
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction v10|DWORD = MOV [v9|DWORD[.] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|DWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B64" 
    xhandlers
    flags 
    probability 4575751561709176675
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
locals: - v1|QWORD[.] - v42|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractCollection.iterator()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:34] <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|QWORD[.], v42|QWORD[.]] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B115" "B118" 
    xhandlers
    flags 
    probability 4575751434813445373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v72|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B114 -> B115 falseDestination: B114 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B116" "B117" 
    xhandlers
    flags 
    probability 4575751434813445373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v122|DWORD[.] = MOV [v67|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v122|DWORD[.], y: v122|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors 
    xhandlers
    flags 
    probability 4575751434813445373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v68|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4557861259848273806
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v127|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v127|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
stack: v45|DWORD v51|DWORD 
locals: v43|DWORD[.] v45|DWORD 
java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
locals: v43|DWORD[.] v45|DWORD 
java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
stack: vobject:SubList$1:0{val$index=int[0|0x0],i=Object[null],this$0=v0|QWORD[.]} 
locals: - - - 
java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
stack: vobject:SubList$1:0{val$index=int[0|0x0],i=Object[null],this$0=v0|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
locals: v0|QWORD[.] 
java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
locals: v0|QWORD[.] 
java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
locals: - v1|QWORD[.] - v42|QWORD[.] - - 
vobject:SubList$1:0{val$index=int[0|0x0],i=Object[null],this$0=v0|QWORD[.]} Ljava/util/SubList$1; int[0|0x0] Object[null] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 2, 34, 15, 2, 1, 34] <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|QWORD[.]] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4553726768201292438
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = MOV [v13|DWORD * 8 + 224] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:void] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v15|QWORD[.], y: v14|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4553726768201292438
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SHL v11|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = LEA [v17|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = AND v18|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOVSXD v19|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = ADD (x: v20|QWORD, y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4553675856755721523
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v20|QWORD + v16|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v20|QWORD + v16|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v20|QWORD + v16|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v20|QWORD + v16|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v16|QWORD + 12], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v16|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v16|QWORD + 8], y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[16|0x10]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4553675856755721523
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v16|QWORD + v24|QWORD * 1], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = LEA [v24|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|QWORD] destination: B17 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" 
    successors "B17" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4558179456383092019
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v20|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4553675856755721523
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = MOVE v16|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|QWORD[.]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B14" 
    successors "B20" "B23" 
    xhandlers
    flags 
    probability 4553726768201292438
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v27|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Class;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4553726768201292438
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9408274225153865 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 4553425512055502574
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|QWORD[.]] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B36" 
    xhandlers
    flags 
    probability 4535441323467356793
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|QWORD[.]] destination: B22 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B19" 
    xhandlers
    flags 
    probability 4523627091285684586
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = UNCOMPRESSPOINTER (input: v13|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@7a82eb53 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v22|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 4]
stack: v11|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:4] <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|QWORD[.]] destination: B14 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-247315|0xfffffffffffc39ed], Object[null]] destination: B80 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B103" "B73" "B82" "B81" "B80" "B79" "B98" "B97" "B96" "B90" "B94" "B102" "B107" "B118" "B117" "B113" "B111" 
    successors 
    xhandlers
    flags 
    probability 2373678478600962048
    begin_IR
      LIR
      nr   -1  <|@ instruction [v123|DWORD, v124|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v123|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v124|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction DEOPT info [bci:42] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-293939|0xfffffffffffb83cd]] destination: B59 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B39" "B61" "B41" "B60" "B45" "B53" "B50" "B59" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr   -1  <|@ instruction [v65|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v65|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: v42|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-279571|0xfffffffffffbbbed], Object[null]] destination: B117 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-278579|0xfffffffffffbbfcd], Object[null]] destination: B118 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -280883 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 4]
stack: v11|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v125|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@435668424] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -235291 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v125|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 37]
stack: v67|QWORD[.] 
locals: - v1|QWORD[.] - v68|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-244243|0xfffffffffffc45ed], Object[null]] destination: B81 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -505185 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 4]
stack: v11|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-290867|0xfffffffffffb8fcd]] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-291091|0xfffffffffffb8eed]] destination: B41 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-294675|0xfffffffffffb80ed]] destination: B53 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-288275|0xfffffffffffb99ed]] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-240915|0xfffffffffffc52ed], Object[null]] destination: B73 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-284947|0xfffffffffffba6ed]] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B33" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v41|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: v28|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-255251|0xfffffffffffc1aed], Object[null]] destination: B97 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-266011|0xfffffffffffbf0e5], Object[null]] destination: B94 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-260891|0xfffffffffffc04e5], Object[null]] destination: B90 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-258067|0xfffffffffffc0fed], Object[null]] destination: B96 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-301875|0xfffffffffffb64cd]] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B3" "B121" "B7" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v126|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v126|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-251955|0xfffffffffffc27cd], Object[null]] destination: B98 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v113|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1418920718] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-234300|0xfffffffffffc6cc4], v113|QWORD[.]] destination: B103 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-243987|0xfffffffffffc46ed], Object[null]] destination: B82 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-269363|0xfffffffffffbe3cd], Object[null]] destination: B102 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-289043|0xfffffffffffb96ed]] destination: B39 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-248859|0xfffffffffffc33e5], Object[null]] destination: B79 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-293651|0xfffffffffffb84ed]] destination: B50 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-284179|0xfffffffffffba9ed]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-273683|0xfffffffffffbd2ed], Object[null]] destination: B107 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-301075|0xfffffffffffb67ed]] destination: B7 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-293395|0xfffffffffffb85ed]] destination: B45 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-297747|0xfffffffffffb74ed]] destination: B3 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-278291|0xfffffffffffbc0ed], Object[null]] destination: B111 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-274995|0xfffffffffffbcdcd], Object[null]] destination: B113 -> B119 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #1          // size:()int
     4: istore_2      
     5: aload_1       
     6: arraylength   
     7: iload_2       
     8: if_icmplt     15
    11: aload_1       
    12: goto          32
    15: aload_1       
    16: invokevirtual #8          // java.lang.Object.getClass:()java.lang.Class
    19: invokevirtual #9          // java.lang.Class.getComponentType:()java.lang.Class
    22: iload_2       
    23: invokestatic  #10         // java.lang.reflect.Array.newInstance:(java.lang.Class, int)java.lang.Object
    26: checkcast     #14         // java.lang.Object[]
    29: checkcast     #14         // java.lang.Object[]
    32: astore_3      
    33: aload_0       
    34: invokevirtual #2          // iterator:()java.util.Iterator
    37: astore        4
    39: iconst_0      
    40: istore        5
    42: iload         5
    44: aload_3       
    45: arraylength   
    46: if_icmpge     126
    49: aload         4
    51: invokeinterface#3, 1       // java.util.Iterator.hasNext:()boolean
    56: ifne          109
    59: aload_1       
    60: aload_3       
    61: if_acmpne     72
    64: aload_3       
    65: iload         5
    67: aconst_null   
    68: aastore       
    69: goto          107
    72: aload_1       
    73: arraylength   
    74: iload         5
    76: if_icmpge     86
    79: aload_3       
    80: iload         5
    82: invokestatic  #6          // java.util.Arrays.copyOf:(java.lang.Object[], int)java.lang.Object[]
    85: areturn       
    86: aload_3       
    87: iconst_0      
    88: aload_1       
    89: iconst_0      
    90: iload         5
    92: invokestatic  #11         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
    95: aload_1       
    96: arraylength   
    97: iload         5
    99: if_icmple     107
   102: aload_1       
   103: iload         5
   105: aconst_null   
   106: aastore       
   107: aload_1       
   108: areturn       
   109: aload_3       
   110: iload         5
   112: aload         4
   114: invokeinterface#4, 1       // java.util.Iterator.next:()java.lang.Object
   119: aastore       
   120: iinc          
   123: goto          42
   126: aload         4
   128: invokeinterface#3, 1       // java.util.Iterator.hasNext:()boolean
   133: ifeq          145
   136: aload_3       
   137: aload         4
   139: invokestatic  #7          // finishToArray:(java.lang.Object[], java.util.Iterator)java.lang.Object[]
   142: goto          146
   145: aload_3       
   146: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@55cef607 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:32|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rdx:0, r13:0, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0]
locals: r13|QWORD[.] rdx|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   12  <|@ instruction r14|DWORD = MOV [r13|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   14  <|@ instruction CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed} <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 0.9408274225153865 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606649439604196894
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction rsi|DWORD[.] = MOV [r13|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   22  <|@ st <@st|@reference-map: [rdx:0, r13:0, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0]
locals: r13|QWORD[.] rdx|QWORD[.] - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   24  <|@ instruction CMP (x: rsi|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606649439604196894
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction rsi|DWORD = MOV [r13|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction JUMP ~[] destination: B2 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B2" "B6" "B9" 
    successors "B11" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   90  <|@ instruction CMP (x: r10|DWORD, y: [rdx|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   92  <|@ instruction BRANCH trueDestinationProbability: 2.759914994618166E-4 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B25" "B35" 
    xhandlers
    flags 
    probability 4607179932889589141
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed} <|@ <|@
      nr  234  <|@ instruction BRANCH trueDestinationProbability: 0.9408274225153865 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606647100791496063
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  238  <|@ instruction r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" "B25" 
    successors "B27" "B33" 
    xhandlers
    flags 
    probability 4606649439604196894
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  244  <|@ instruction rsi|DWORD[.] = MOV [r13|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  246  <|@ st <@st|@reference-map: [rdx:0, r13:0, r14:0, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: r14|QWORD[.] 
locals: r13|QWORD[.] rdx|QWORD[.] - - - - 
>@ <|@ instruction r10|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:32] <|@ <|@
      nr  248  <|@ instruction CMP (x: r10|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  250  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4606649439604196894
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  254  <|@ instruction CMP [r13|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  256  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4606649439604196894
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  266  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  268  <|@ instruction r11|QWORD = LEA [rsi|QWORD + 40] size: QWORD <|@ <|@
      nr  270  <|@ instruction CMP (x: r11|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  272  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606564697403607689
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  296  <|@ instruction MOV (x: [r15|QWORD + 96], y: r11|QWORD) size: QWORD <|@ <|@
      nr  298  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 232] instr: 0 <|@ <|@
      nr  300  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B64" 
    xhandlers
    flags 
    probability 4606649439604196894
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  306  <|@ instruction r11|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>} <|@ <|@
      nr  310  <|@ instruction r8|QWORD = MOV [r8|QWORD + 168] size: QWORD <|@ <|@
      nr  312  <|@ instruction MOV (x: [rsi|QWORD[*]], y: r8|QWORD) size: QWORD <|@ <|@
      nr  314  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed} <|@ <|@
      nr  316  <|@ instruction r8|QWORD = MOVE input: long[-4294967296|0xffffffff00000000] <|@ <|@
      nr  318  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r8|QWORD) size: QWORD <|@ <|@
      nr  320  <|@ instruction MOV (x: [rsi|QWORD[*] + 20], y: r10|DWORD) size: DWORD <|@ <|@
      nr  322  <|@ instruction MOV (x: [rsi|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  324  <|@ instruction r10|DWORD = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  326  <|@ instruction MOV (x: [rsi|QWORD[*] + 28], y: r10|DWORD) size: DWORD <|@ <|@
      nr  328  <|@ instruction r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@7a82eb53 encoding: base: 0 shift: 3 <|@ <|@
      nr  330  <|@ instruction MOV (x: [rsi|QWORD[*] + 32], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  332  <|@ instruction r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B32 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B32" "B58" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  630  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  632  <|@ instruction stack:64|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction r8|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  636  <|@ instruction stack:44|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  638  <|@ instruction rsi|QWORD = MOV r8|DWORD size: DWORD <|@ <|@
      nr  640  <|@ instruction r9|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  642  <|@ instruction CMP (x: rsi|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  644  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" "B120" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  652  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  654  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  658  <|@ instruction JUMP ~[] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B65" "B67" 
    successors "B69" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  662  <|@ st <@st|@reference-map: [rdx:0, r10:0, r11:0, stack:16, stack:24, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 37]
stack: r10|QWORD[.] 
locals: - rdx|QWORD[.] - r11|QWORD[.] - - 
>@ <|@ instruction r9|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD state [bci:37] <|@ <|@
      nr  664  <|@ instruction stack:40|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction rcx|DWORD = MOV [r11|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  668  <|@ instruction stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction rbx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  672  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  674  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612399952198421081
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  686  <|@ instruction CMP rcx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  688  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612399952198421081
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  692  <|@ instruction CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed} <|@ <|@
      nr  694  <|@ instruction BRANCH trueDestinationProbability: 0.8936836714032184 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611845243203171713
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  698  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  700  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:16, stack:24, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] r10|QWORD[.] r11|DWORD 
>@ <|@ instruction rax|DWORD = MOV [rsi|DWORD[.] * 8 + 24] size: DWORD state [bci:42] <|@ <|@
      nr  702  <|@ instruction rbp|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  704  <|@ instruction CMP (x: rbp|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  706  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611845243203171713
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  724  <|@ instruction rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 32] size: DWORD <|@ <|@
      nr  726  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:16, stack:24, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] r10|QWORD[.] r11|DWORD 
>@ <|@ instruction r13|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:42] <|@ <|@
      nr  728  <|@ instruction CMP (x: r13|DWORD, y: [r10|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr  730  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" "B81" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611845243203171713
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  734  <|@ instruction CMP (x: rax|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  736  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B75 -> B76 falseDestination: B75 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611845243203171713
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  740  <|@ instruction rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  742  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:16, stack:24, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] r10|QWORD[.] r11|DWORD 
>@ <|@ instruction rax|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:42] <|@ <|@
      nr  744  <|@ instruction r13|DWORD = ADD (x: rbp|DWORD, ~y: [r10|QWORD[.] + 28]) size: DWORD <|@ <|@
      nr  746  <|@ instruction CMP (x: rax|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  748  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B76 -> B77 falseDestination: B76 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B78" "B79" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611845243203171713
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  752  <|@ instruction CMP (x: rax|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  754  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B77 -> B78 falseDestination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611845243203171713
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  758  <|@ instruction rax|DWORD = INC rbp|DWORD size: DWORD <|@ <|@
      nr  760  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  762  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  764  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7a82eb53 encoding: base: 0 shift: 3 <|@ <|@
      nr  766  <|@ instruction rsi|DWORD[.] = MOV [rsi|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  768  <|@ instruction rbx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  770  <|@ instruction r10|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  772  <|@ instruction r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction JUMP ~[] destination: B78 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" "B78" "B95" "B89" "B93" 
    successors "B69" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4612399952198421080
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1078  <|@ instruction MOV (x: [r11|QWORD[.] + r10|DWORD * 4 + 16], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr 1080  <|@ instruction rsi|QWORD[.] = LEA [r11|QWORD[.] + r10|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1082  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1084  <|@ instruction MOVB (x: [rsi|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1086  <|@ instruction rsi|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr 1088  <|@ instruction rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1090  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1092  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1094  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1096  <|@ instruction r11|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1098  <|@ instruction JUMP ~[] destination: B101 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B101" 
    successors "B70" "B104" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4614651752012106329
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  678  <|@ instruction stack:68|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  680  <|@ instruction CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  682  <|@ instruction BRANCH trueDestinationProbability: 0.6985273317247691 condition: > trueDestination: B69 -> B70 falseDestination: B69 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B84" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598043364214525307
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  834  <|@ instruction CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed} <|@ <|@
      nr  836  <|@ instruction BRANCH trueDestinationProbability: 0.9213533497647322 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" "B98" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597345348145217565
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  840  <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  842  <|@ st <@st|@reference-map: [rax:0, r10:0, stack:16, stack:24, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] r10|QWORD[.] r11|DWORD 
>@ <|@ instruction CMP [rax|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} state [bci:42] <|@ <|@
      nr  844  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B86" "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597345348145217565
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  848  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  850  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0, stack:16, stack:24, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] r10|QWORD[.] r11|DWORD 
>@ <|@ instruction rbp|DWORD = MOV [rsi|DWORD[.] * 8 + 20] size: DWORD state [bci:42] <|@ <|@
      nr  852  <|@ instruction rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  854  <|@ instruction r13|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  856  <|@ instruction r14|DWORD = SUB (x: r13|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  858  <|@ instruction CMP (x: rbp|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  860  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B87" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597345348145217565
    begin_IR
      LIR
      nr  862  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  864  <|@ instruction rsi|DWORD[.] = MOV [rax|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr  866  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0, stack:16, stack:24, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] r10|QWORD[.] r11|DWORD 
>@ <|@ instruction rbp|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:42] <|@ <|@
      nr  868  <|@ instruction CMP (x: rbp|DWORD, y: [rax|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr  870  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" "B91" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597345348145217565
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  874  <|@ instruction rbp|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  876  <|@ instruction r14|DWORD = INC r13|DWORD size: DWORD <|@ <|@
      nr  878  <|@ instruction CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr  880  <|@ instruction BRANCH trueDestinationProbability: 0.9304948647614187 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B89" "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596776981866787665
    begin_IR
      LIR
      nr  882  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  884  <|@ instruction rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  886  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0, stack:16, stack:24, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] r10|QWORD[.] r11|DWORD 
>@ <|@ instruction CMP (x: r13|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:42] <|@ <|@
      nr  888  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B88 -> B89 falseDestination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596776981866787665
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  892  <|@ instruction MOV (x: [rax|DWORD[.] * 8 + 16], y: r13|DWORD) size: DWORD <|@ <|@
      nr  894  <|@ instruction MOV (x: [rax|DWORD[.] * 8 + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  896  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7a82eb53 encoding: base: 0 shift: 3 <|@ <|@
      nr  898  <|@ instruction rsi|DWORD[.] = MOV [rsi|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  900  <|@ instruction rbx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  902  <|@ instruction r10|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  904  <|@ instruction r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ instruction JUMP ~[] destination: B89 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B100" "B102" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581241349962885872
    begin_IR
      LIR
      nr 1048  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1050  <|@ instruction CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed} <|@ <|@
      nr 1052  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581241349962885872
    begin_IR
      LIR
      nr 1054  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1056  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1058  <|@ st <@st|@reference-map: [r10:0, stack:16, stack:24, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] r10|QWORD[.] stack:68|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:42] <|@ <|@
      nr 1060  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1062  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stack: stack:64|QWORD[.] stack:68|DWORD 
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] stack:56|QWORD[.] stack:68|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.next()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:114] <|@ <|@
      nr 1064  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7a82eb53 encoding: base: 0 shift: 3 <|@ <|@
      nr 1066  <|@ instruction rsi|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1068  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1070  <|@ instruction rbx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr 1072  <|@ instruction r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1074  <|@ instruction JUMP ~[] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B92" "B95" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4580204151635863134
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  924  <|@ instruction CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr  926  <|@ instruction BRANCH trueDestinationProbability: 0.9931451844203526 condition: = trueDestination: B91 -> B92 falseDestination: B91 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B93" "B94" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4580172983267700514
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  930  <|@ instruction rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr  932  <|@ st <@st|@reference-map: [rax:0, rsi:0, stack:16, stack:24, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] stack:56|QWORD[.] stack:68|DWORD 
>@ <|@ instruction CMP (x: r13|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:42] <|@ <|@
      nr  934  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B92 -> B93 falseDestination: B92 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4580172983267700514
    begin_IR
      LIR
      nr  936  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  938  <|@ instruction MOV (x: [rax|DWORD[.] * 8 + 16], y: r13|DWORD) size: DWORD <|@ <|@
      nr  940  <|@ instruction MOV (x: [rax|DWORD[.] * 8 + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  942  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7a82eb53 encoding: base: 0 shift: 3 <|@ <|@
      nr  944  <|@ instruction rsi|DWORD[.] = MOV [rsi|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  946  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction rbx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  950  <|@ instruction r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  952  <|@ instruction JUMP ~[] destination: B93 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4547607526639090665
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  972  <|@ instruction stack:72|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  974  <|@ instruction stack:76|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD <|@ <|@
      nr  976  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7a82eb53 encoding: base: 0 shift: 3 <|@ <|@
      nr  978  <|@ instruction rdx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  980  <|@ instruction stack:80|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ st <@st|@reference-map: [stack:4, stack:16, stack:24, stack:48]
live-base-pointers: []
java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
locals: stack:76|DWORD[.] stack:80|DWORD - 
java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
locals: - 
java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stack: stack:64|QWORD[.] stack:68|DWORD 
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] stack:56|QWORD[.] stack:68|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractList.get(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:14, 11, 114] <|@ <|@
      nr  984  <|@ instruction rsi|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD <|@ <|@
      nr  986  <|@ instruction r13|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr  988  <|@ instruction MOV (x: [rsi|DWORD[.] * 8 + 16], y: r13|DWORD) size: DWORD <|@ <|@
      nr  990  <|@ instruction r14|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  992  <|@ instruction MOV (x: [rsi|DWORD[.] * 8 + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  994  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7a82eb53 encoding: base: 0 shift: 3 <|@ <|@
      nr  996  <|@ instruction rsi|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD <|@ <|@
      nr  998  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1000  <|@ instruction rbx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr 1002  <|@ instruction r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1004  <|@ instruction JUMP ~[] destination: B95 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B105" "B108" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1130  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1132  <|@ instruction CMP stack:40|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed} <|@ <|@
      nr 1134  <|@ instruction BRANCH trueDestinationProbability: 0.9408014571948998 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4606649205729381557
    begin_IR
      LIR
      nr 1136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1138  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1140  <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + 32] size: DWORD <|@ <|@
      nr 1142  <|@ st <@st|@reference-map: [r10:0, stack:16, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] r10|QWORD[.] stack:68|DWORD 
>@ <|@ instruction rax|DWORD = MOV [rax|DWORD[.] * 8 + 24] size: DWORD state [bci:42] <|@ <|@
      nr 1144  <|@ instruction CMP (x: rax|DWORD, y: [r10|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr 1146  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors 
    xhandlers
    flags 
    probability 4606649205729381557
    begin_IR
      LIR
      nr 1148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1150  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1152  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B68" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  648  <|@ instruction JUMP ~[] destination: B65 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B109" "B114" 
    xhandlers
    flags 
    probability 4588692230165968048
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1170  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1172  <|@ instruction CMP stack:40|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed} <|@ <|@
      nr 1174  <|@ instruction BRANCH trueDestinationProbability: 0.8652680652680653 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B110" "B113" 
    xhandlers
    flags 
    probability 4587542776907870065
    begin_IR
      LIR
      nr 1176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1178  <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1180  <|@ st <@st|@reference-map: [rax:0, r10:0, stack:16, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] r10|QWORD[.] stack:68|DWORD 
>@ <|@ instruction CMP [rax|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} state [bci:42] <|@ <|@
      nr 1182  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B109 -> B110 falseDestination: B109 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B111" "B112" 
    xhandlers
    flags 
    probability 4587542776907870065
    begin_IR
      LIR
      nr 1184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1186  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1188  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0, stack:16, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] r10|QWORD[.] stack:68|DWORD 
>@ <|@ instruction rdx|DWORD = MOV [rsi|DWORD[.] * 8 + 20] size: DWORD state [bci:42] <|@ <|@
      nr 1190  <|@ instruction rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 1192  <|@ instruction rax|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 1194  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1196  <|@ instruction CMP (x: rdx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1198  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B110 -> B111 falseDestination: B110 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors 
    xhandlers
    flags 
    probability 4587542776907870065
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1216  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1218  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B8" 
    xhandlers
    flags 
    probability 4588688488168922656
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed} <|@ <|@
      nr   46  <|@ instruction BRANCH trueDestinationProbability: 0.8652052238805972 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4587539003186891847
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction rsi|DWORD[.] = MOV [r13|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   52  <|@ st <@st|@reference-map: [r13:0, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0]
locals: r13|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction CMP (x: rsi|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   56  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4587539003186891847
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction r10|DWORD = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   62  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B36" 
    xhandlers
    flags 
    probability 4588686134605283673
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  354  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B22" "B35" 
    successors "B37" "B63" 
    xhandlers
    flags 
    probability 4588688488168922656
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  358  <|@ instruction CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed} <|@ <|@
      nr  360  <|@ instruction BRANCH trueDestinationProbability: 0.8652052238805972 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B61" 
    xhandlers
    flags 
    probability 4587539003186891847
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  364  <|@ instruction r14|DWORD[.] = MOV [r13|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  366  <|@ st <@st|@reference-map: [rdx:0, r13:0, r14:0, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: rdx|QWORD[.] 
locals: r13|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction r10|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD state [bci:32] <|@ <|@
      nr  368  <|@ instruction CMP (x: r10|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  370  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4587539003186891847
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  374  <|@ instruction CMP [r13|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr  376  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4587539003186891847
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  386  <|@ instruction r11|DWORD = MOV [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  388  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  390  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B60" 
    xhandlers
    flags 
    probability 4587539003186891847
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction rsi|DWORD = MOV [r14|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  402  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<AbstractList.listIterator(int)>} <|@ <|@
      nr  404  <|@ instruction CMP (x: rcx|QWORD, y: [rsi|DWORD * 8 + 696]) size: QWORD <|@ <|@
      nr  406  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B47" 
    xhandlers
    flags 
    probability 4587539003186891847
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr  412  <|@ instruction BRANCH trueDestinationProbability: 0.5044648172401477 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4583101288029259690
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  416  <|@ instruction rsi|DWORD[.] = MOV [r14|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  418  <|@ st <@st|@reference-map: [rdx:0, r13:0, r14:0, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: rdx|QWORD[.] 
locals: r13|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:32] <|@ <|@
      nr  420  <|@ instruction CMP (x: r11|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  422  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B55" 
    xhandlers
    flags 
    probability 4583101288029259690
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  432  <|@ instruction stack:36|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B46 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B46" "B49" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4587539003186891847
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  488  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  490  <|@ instruction r8|QWORD = LEA [rcx|QWORD + 56] size: QWORD <|@ <|@
      nr  492  <|@ instruction CMP (x: r8|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  494  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4587465221365380873
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  526  <|@ instruction MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD <|@ <|@
      nr  528  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + 248] instr: 0 <|@ <|@
      nr  530  <|@ instruction rsi|QWORD[*] = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B56" 
    successors "B64" 
    xhandlers
    flags 
    probability 4587539003186891847
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  536  <|@ instruction rcx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction r8|QWORD[*] = LEA [rsi|QWORD[*] + 24] size: QWORD <|@ <|@
      nr  540  <|@ instruction r8|QWORD[.] = MOVE r8|QWORD[*] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/SubList$1;, resolved>} <|@ <|@
      nr  544  <|@ instruction r9|QWORD = MOV [r9|QWORD + 168] size: QWORD <|@ <|@
      nr  546  <|@ instruction MOV (x: [rsi|QWORD[*]], y: r9|QWORD) size: QWORD <|@ <|@
      nr  548  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed} <|@ <|@
      nr  550  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  552  <|@ instruction r8|DWORD[.] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7a82eb53 encoding: base: 0 shift: 3 <|@ <|@
      nr  554  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr  556  <|@ instruction r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@7a82eb53 encoding: base: 0 shift: 3 <|@ <|@
      nr  558  <|@ instruction MOV (x: [rsi|QWORD[*] + 20], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  560  <|@ instruction r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>} <|@ <|@
      nr  562  <|@ instruction r8|QWORD = MOV [r8|QWORD + 168] size: QWORD <|@ <|@
      nr  564  <|@ instruction MOV (x: [rsi|QWORD[*] + 24], y: r8|QWORD) size: QWORD <|@ <|@
      nr  566  <|@ instruction MOV [rsi|QWORD[*] + 32] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr  568  <|@ instruction MOV (x: [rsi|QWORD[*] + 36], y: r11|DWORD) size: DWORD <|@ <|@
      nr  570  <|@ instruction MOV [rsi|QWORD[*] + 40] y: -1 size: DWORD <|@ <|@
      nr  572  <|@ instruction MOV (x: [rsi|QWORD[*] + 44], y: r10|DWORD) size: DWORD <|@ <|@
      nr  574  <|@ instruction MOV (x: [rsi|QWORD[*] + 48], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr  576  <|@ instruction MOV (x: [rsi|QWORD[*] + 52], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr  578  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  580  <|@ instruction r10|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  582  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  584  <|@ instruction JUMP ~[] destination: B58 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" "B51" 
    xhandlers
    flags 
    probability 4582969519089783012
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  438  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed} <|@ <|@
      nr  440  <|@ instruction BRANCH trueDestinationProbability: 0.5252282556463239 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4578834872492947213
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  444  <|@ instruction CMP r11|DWORD y: 1 size: DWORD <|@ <|@
      nr  446  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    probability 4578834872492947213
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  450  <|@ instruction stack:36|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" "B59" 
    xhandlers
    flags 
    probability 4578096966431877819
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  462  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr  464  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4578096966431877819
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  468  <|@ instruction rsi|DWORD = MOV [r14|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  470  <|@ instruction CMP (x: r11|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  472  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4578096966431877819
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  482  <|@ instruction stack:36|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576577122618762551
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  276  <|@ instruction stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  278  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  280  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr  282  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  284  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: r14|QWORD[.] 
locals: r13|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:32] <|@ <|@
      nr  286  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  290  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" "B121" 
    xhandlers
    flags 
    probability 4575751561709176675
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashSet;, resolved>;compressed} <|@ <|@
      nr   76  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 4575751561709176675
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction rsi|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   82  <|@ st <@st|@reference-map: [r13:0, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0]
locals: r13|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction r10|DWORD = MOV [rsi|DWORD[.] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   84  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B64" 
    xhandlers
    flags 
    probability 4575751561709176675
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  614  <|@ instruction stack:56|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  618  <|@ st <@st|@reference-map: [stack:24, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
locals: - stack:32|QWORD[.] - stack:56|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractCollection.iterator()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:34] <|@ <|@
      nr  620  <|@ instruction r11|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B115" "B118" 
    xhandlers
    flags 
    probability 4575751434813445373
    begin_IR
      LIR
      nr 1234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1236  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1238  <|@ instruction CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed} <|@ <|@
      nr 1240  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B114 -> B115 falseDestination: B114 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B116" "B117" 
    xhandlers
    flags 
    probability 4575751434813445373
    begin_IR
      LIR
      nr 1242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1244  <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1246  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr 1248  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors 
    xhandlers
    flags 
    probability 4575751434813445373
    begin_IR
      LIR
      nr 1250  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1252  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1254  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4557861259848273806
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  498  <|@ instruction stack:40|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  500  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  502  <|@ instruction stack:56|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  506  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  508  <|@ instruction rdx|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr  510  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  512  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:24, stack:48]
live-base-pointers: []
java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
stack: stack:40|DWORD stack:36|DWORD 
locals: r14|DWORD[.] stack:40|DWORD 
java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
locals: r14|DWORD[.] stack:40|DWORD 
java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
stack: vobject:SubList$1:0{val$index=int[0|0x0],i=Object[null],this$0=r13|QWORD[.]} 
locals: - - - 
java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
stack: vobject:SubList$1:0{val$index=int[0|0x0],i=Object[null],this$0=r13|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
locals: r13|QWORD[.] 
java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
locals: r13|QWORD[.] 
java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
locals: - stack:32|QWORD[.] - stack:56|QWORD[.] - - 
vobject:SubList$1:0{val$index=int[0|0x0],i=Object[null],this$0=r13|QWORD[.]} Ljava/util/SubList$1; int[0|0x0] Object[null] r13|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 2, 34, 15, 2, 1, 34] <|@ <|@
      nr  514  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction r11|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  518  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  520  <|@ instruction rdx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  522  <|@ instruction JUMP ~[] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4553726768201292438
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction rsi|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   98  <|@ instruction rcx|QWORD[.] = MOV [rsi|DWORD * 8 + 224] size: QWORD <|@ <|@
      nr  100  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:void] <|@ <|@
      nr  102  <|@ instruction CMP (x: r11|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr  104  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4553726768201292438
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  116  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  118  <|@ instruction r11|DWORD = SHL r10|DWORD y: 2 size: DWORD <|@ <|@
      nr  120  <|@ instruction r11|DWORD = LEA [r11|DWORD + 23] size: DWORD <|@ <|@
      nr  122  <|@ instruction r11|DWORD = AND r11|DWORD y: -8 size: DWORD <|@ <|@
      nr  124  <|@ instruction r11|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  126  <|@ instruction r8|QWORD = ADD (x: r11|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  128  <|@ instruction CMP (x: r8|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  130  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4553675856755721523
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  154  <|@ instruction MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD <|@ <|@
      nr  156  <|@ instruction AMD64PREFETCH ~[r11|QWORD + rcx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  158  <|@ instruction AMD64PREFETCH ~[r11|QWORD + rcx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  160  <|@ instruction AMD64PREFETCH ~[r11|QWORD + rcx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  162  <|@ instruction AMD64PREFETCH ~[r11|QWORD + rcx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  164  <|@ instruction MOV (x: [rcx|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  166  <|@ instruction MOV [rcx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  168  <|@ instruction MOV (x: [rcx|QWORD + 8], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  170  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4553675856755721523
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  182  <|@ instruction MOV (x: [rcx|QWORD + rsi|QWORD * 1], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  184  <|@ instruction rsi|QWORD = LEA [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  186  <|@ instruction JUMP ~[] destination: B17 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" 
    successors "B17" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4558179456383092019
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  176  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  178  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4553675856755721523
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction rcx|QWORD[.] = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B14" 
    successors "B20" "B23" 
    xhandlers
    flags 
    probability 4553726768201292438
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  198  <|@ instruction CMP [rsi|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Class;, resolved>;compressed} <|@ <|@
      nr  200  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4553726768201292438
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed} <|@ <|@
      nr  206  <|@ instruction BRANCH trueDestinationProbability: 0.9408274225153865 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 4553425512055502574
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B36" 
    xhandlers
    flags 
    probability 4535441323467356793
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  216  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B22 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B19" 
    xhandlers
    flags 
    probability 4523627091285684586
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  134  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@7a82eb53 encoding: base: 0 shift: 3 <|@ <|@
      nr  136  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  138  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  140  <|@ instruction stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  142  <|@ st <@st|@reference-map: [r13:0, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 4]
stack: stack:36|DWORD 
locals: r13|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:4] <|@ <|@
      nr  144  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B14 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  792  <|@ instruction r8|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  794  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  796  <|@ instruction rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction r11|DWORD = MOVE input: int[-247315|0xfffffffffffc39ed] <|@ <|@
      nr  802  <|@ instruction JUMP ~[] destination: B80 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B103" "B73" "B82" "B81" "B80" "B79" "B98" "B97" "B96" "B90" "B94" "B102" "B107" "B118" "B117" "B113" "B111" 
    successors 
    xhandlers
    flags 
    probability 2373678478600962048
    begin_IR
      LIR
      nr 1284  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1286  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1288  <|@ instruction MOV (x: [r15|QWORD + 680], y: r8|QWORD[.]) size: QWORD <|@ <|@
      nr 1290  <|@ st <@st|@reference-map: [rcx:0, rdx:0, r10:0]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - rdx|QWORD[.] - rcx|QWORD[.] r10|QWORD[.] r9|DWORD 
>@ <|@ instruction DEOPT info [bci:42] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  588  <|@ instruction r10|DWORD = MOVE input: int[-293939|0xfffffffffffb83cd] <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B59 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B39" "B61" "B41" "B60" "B45" "B53" "B50" "B59" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  606  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  608  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  610  <|@ st <@st|@reference-map: [rdx:0, r13:0, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: rdx|QWORD[.] 
locals: r13|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1258  <|@ instruction r8|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1260  <|@ instruction r11|DWORD = MOVE input: int[-279571|0xfffffffffffbbbed] <|@ <|@
      nr 1262  <|@ instruction r9|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1264  <|@ instruction rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1266  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1268  <|@ instruction JUMP ~[] destination: B117 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1270  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1272  <|@ instruction r8|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1274  <|@ instruction r11|DWORD = MOVE input: int[-278579|0xfffffffffffbbfcd] <|@ <|@
      nr 1276  <|@ instruction r9|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1278  <|@ instruction rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1280  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1282  <|@ instruction JUMP ~[] destination: B118 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction MOV [r15|QWORD + 668] y: -280883 size: DWORD <|@ <|@
      nr  226  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  228  <|@ st <@st|@reference-map: [r13:0, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 4]
stack: stack:36|DWORD 
locals: r13|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1292  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1294  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@435668424] <|@ <|@
      nr 1296  <|@ instruction MOV [r15|QWORD + 668] y: -235291 size: DWORD <|@ <|@
      nr 1298  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr 1300  <|@ st <@st|@reference-map: [r10:0, stack:16, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 37]
stack: r10|QWORD[.] 
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  806  <|@ instruction r8|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  808  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  810  <|@ instruction rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  812  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction r11|DWORD = MOVE input: int[-244243|0xfffffffffffc45ed] <|@ <|@
      nr  816  <|@ instruction JUMP ~[] destination: B81 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  108  <|@ instruction MOV [r15|QWORD + 668] y: -505185 size: DWORD <|@ <|@
      nr  110  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  112  <|@ st <@st|@reference-map: [r13:0, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 4]
stack: r10|DWORD 
locals: r13|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  594  <|@ instruction r10|DWORD = MOVE input: int[-290867|0xfffffffffffb8fcd] <|@ <|@
      nr  596  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  394  <|@ instruction r10|DWORD = MOVE input: int[-291091|0xfffffffffffb8eed] <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B41 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  476  <|@ instruction r10|DWORD = MOVE input: int[-294675|0xfffffffffffb80ed] <|@ <|@
      nr  478  <|@ instruction JUMP ~[] destination: B53 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  600  <|@ instruction r10|DWORD = MOVE input: int[-288275|0xfffffffffffb99ed] <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  710  <|@ instruction r8|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  712  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction r11|DWORD = MOVE input: int[-240915|0xfffffffffffc52ed] <|@ <|@
      nr  720  <|@ instruction JUMP ~[] destination: B73 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  260  <|@ instruction r10|DWORD = MOVE input: int[-284947|0xfffffffffffba6ed] <|@ <|@
      nr  262  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B33" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  346  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  348  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  350  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: r14|QWORD[.] 
locals: r13|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1022  <|@ instruction r8|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1024  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1026  <|@ instruction rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1028  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1030  <|@ instruction r11|DWORD = MOVE input: int[-255251|0xfffffffffffc1aed] <|@ <|@
      nr 1032  <|@ instruction JUMP ~[] destination: B97 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  956  <|@ instruction r8|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  958  <|@ instruction r11|DWORD = MOVE input: int[-266011|0xfffffffffffbf0e5] <|@ <|@
      nr  960  <|@ instruction r9|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  962  <|@ instruction rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  964  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  966  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ instruction JUMP ~[] destination: B94 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  910  <|@ instruction r8|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  912  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  914  <|@ instruction rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  916  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  918  <|@ instruction r11|DWORD = MOVE input: int[-260891|0xfffffffffffc04e5] <|@ <|@
      nr  920  <|@ instruction JUMP ~[] destination: B90 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1008  <|@ instruction r8|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1010  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1012  <|@ instruction rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1014  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1016  <|@ instruction r11|DWORD = MOVE input: int[-258067|0xfffffffffffc0fed] <|@ <|@
      nr 1018  <|@ instruction JUMP ~[] destination: B96 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1304  <|@ instruction r10|DWORD = MOVE input: int[-301875|0xfffffffffffb64cd] <|@ <|@
      nr 1306  <|@ instruction JUMP ~[] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B3" "B121" "B7" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1308  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1310  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1312  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1314  <|@ st <@st|@reference-map: [r13:0, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0]
locals: r13|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1036  <|@ instruction r8|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1038  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1040  <|@ instruction rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1042  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1044  <|@ instruction r11|DWORD = MOVE input: int[-251955|0xfffffffffffc27cd] <|@ <|@
      nr 1046  <|@ instruction JUMP ~[] destination: B98 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1116  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1418920718] <|@ <|@
      nr 1118  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1120  <|@ instruction r11|DWORD = MOVE input: int[-234300|0xfffffffffffc6cc4] <|@ <|@
      nr 1122  <|@ instruction r9|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1124  <|@ instruction rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1126  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1128  <|@ instruction JUMP ~[] destination: B103 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  818  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  820  <|@ instruction r8|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  822  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  824  <|@ instruction rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  826  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  828  <|@ instruction r11|DWORD = MOVE input: int[-243987|0xfffffffffffc46ed] <|@ <|@
      nr  830  <|@ instruction JUMP ~[] destination: B82 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1102  <|@ instruction r8|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1104  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1106  <|@ instruction rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1108  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1110  <|@ instruction r11|DWORD = MOVE input: int[-269363|0xfffffffffffbe3cd] <|@ <|@
      nr 1112  <|@ instruction JUMP ~[] destination: B102 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction r10|DWORD = MOVE input: int[-289043|0xfffffffffffb96ed] <|@ <|@
      nr  382  <|@ instruction JUMP ~[] destination: B39 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  778  <|@ instruction r8|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  780  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  782  <|@ instruction rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  784  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction r11|DWORD = MOVE input: int[-248859|0xfffffffffffc33e5] <|@ <|@
      nr  788  <|@ instruction JUMP ~[] destination: B79 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  456  <|@ instruction r10|DWORD = MOVE input: int[-293651|0xfffffffffffb84ed] <|@ <|@
      nr  458  <|@ instruction JUMP ~[] destination: B50 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  340  <|@ instruction r10|DWORD = MOVE input: int[-284179|0xfffffffffffba9ed] <|@ <|@
      nr  342  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1156  <|@ instruction r8|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1158  <|@ instruction r11|DWORD = MOVE input: int[-273683|0xfffffffffffbd2ed] <|@ <|@
      nr 1160  <|@ instruction r9|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1162  <|@ instruction rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1164  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1166  <|@ instruction JUMP ~[] destination: B107 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   68  <|@ instruction r10|DWORD = MOVE input: int[-301075|0xfffffffffffb67ed] <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B7 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction r10|DWORD = MOVE input: int[-293395|0xfffffffffffb85ed] <|@ <|@
      nr  428  <|@ instruction JUMP ~[] destination: B45 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction r10|DWORD = MOVE input: int[-297747|0xfffffffffffb74ed] <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B3 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1202  <|@ instruction r8|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1204  <|@ instruction r11|DWORD = MOVE input: int[-278291|0xfffffffffffbc0ed] <|@ <|@
      nr 1206  <|@ instruction r9|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1208  <|@ instruction rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1210  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1212  <|@ instruction JUMP ~[] destination: B111 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1222  <|@ instruction r8|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1224  <|@ instruction r11|DWORD = MOVE input: int[-274995|0xfffffffffffbcdcd] <|@ <|@
      nr 1226  <|@ instruction r9|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1228  <|@ instruction rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1230  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1232  <|@ instruction JUMP ~[] destination: B113 -> B119 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #1          // size:()int
     4: istore_2      
     5: aload_1       
     6: arraylength   
     7: iload_2       
     8: if_icmplt     15
    11: aload_1       
    12: goto          32
    15: aload_1       
    16: invokevirtual #8          // java.lang.Object.getClass:()java.lang.Class
    19: invokevirtual #9          // java.lang.Class.getComponentType:()java.lang.Class
    22: iload_2       
    23: invokestatic  #10         // java.lang.reflect.Array.newInstance:(java.lang.Class, int)java.lang.Object
    26: checkcast     #14         // java.lang.Object[]
    29: checkcast     #14         // java.lang.Object[]
    32: astore_3      
    33: aload_0       
    34: invokevirtual #2          // iterator:()java.util.Iterator
    37: astore        4
    39: iconst_0      
    40: istore        5
    42: iload         5
    44: aload_3       
    45: arraylength   
    46: if_icmpge     126
    49: aload         4
    51: invokeinterface#3, 1       // java.util.Iterator.hasNext:()boolean
    56: ifne          109
    59: aload_1       
    60: aload_3       
    61: if_acmpne     72
    64: aload_3       
    65: iload         5
    67: aconst_null   
    68: aastore       
    69: goto          107
    72: aload_1       
    73: arraylength   
    74: iload         5
    76: if_icmpge     86
    79: aload_3       
    80: iload         5
    82: invokestatic  #6          // java.util.Arrays.copyOf:(java.lang.Object[], int)java.lang.Object[]
    85: areturn       
    86: aload_3       
    87: iconst_0      
    88: aload_1       
    89: iconst_0      
    90: iload         5
    92: invokestatic  #11         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
    95: aload_1       
    96: arraylength   
    97: iload         5
    99: if_icmple     107
   102: aload_1       
   103: iload         5
   105: aconst_null   
   106: aastore       
   107: aload_1       
   108: areturn       
   109: aload_3       
   110: iload         5
   112: aload         4
   114: invokeinterface#4, 1       // java.util.Iterator.next:()java.lang.Object
   119: aastore       
   120: iinc          
   123: goto          42
   126: aload         4
   128: invokeinterface#3, 1       // java.util.Iterator.hasNext:()boolean
   133: ifeq          145
   136: aload_3       
   137: aload         4
   139: invokestatic  #7          // finishToArray:(java.lang.Object[], java.util.Iterator)java.lang.Object[]
   142: goto          146
   145: aload_3       
   146: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@55cef607 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:32|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rdx:0, r13:0, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0]
locals: r13|QWORD[.] rdx|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   12  <|@ instruction r14|DWORD = MOV [r13|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   14  <|@ instruction CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed} <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 0.9408274225153865 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606649439604196894
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction rsi|DWORD[.] = MOV [r13|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   22  <|@ st <@st|@reference-map: [rdx:0, r13:0, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0]
locals: r13|QWORD[.] rdx|QWORD[.] - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   24  <|@ instruction CMP (x: rsi|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606649439604196894
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction rsi|DWORD = MOV [r13|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction JUMP ~[] destination: B2 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B2" "B6" "B9" 
    successors "B11" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   90  <|@ instruction CMP (x: r10|DWORD, y: [rdx|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   92  <|@ instruction BRANCH trueDestinationProbability: 2.759914994618166E-4 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B25" "B36" 
    xhandlers
    flags 
    probability 4607179932889589141
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed} <|@ <|@
      nr  234  <|@ instruction BRANCH trueDestinationProbability: 0.9408274225153865 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606647100791496063
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  238  <|@ instruction r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" "B25" 
    successors "B27" "B33" 
    xhandlers
    flags 
    probability 4606649439604196894
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  244  <|@ instruction rsi|DWORD[.] = MOV [r13|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  246  <|@ st <@st|@reference-map: [rdx:0, r13:0, r14:0, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: r14|QWORD[.] 
locals: r13|QWORD[.] rdx|QWORD[.] - - - - 
>@ <|@ instruction r10|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:32] <|@ <|@
      nr  248  <|@ instruction CMP (x: r10|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  250  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4606649439604196894
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  254  <|@ instruction CMP [r13|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  256  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4606649439604196894
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  266  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  268  <|@ instruction r11|QWORD = LEA [rsi|QWORD + 40] size: QWORD <|@ <|@
      nr  270  <|@ instruction CMP (x: r11|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  272  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606564697403607689
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  296  <|@ instruction MOV (x: [r15|QWORD + 96], y: r11|QWORD) size: QWORD <|@ <|@
      nr  298  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 232] instr: 0 <|@ <|@
      nr  300  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B64" 
    xhandlers
    flags 
    probability 4606649439604196894
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  306  <|@ instruction r11|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>} <|@ <|@
      nr  310  <|@ instruction r8|QWORD = MOV [r8|QWORD + 168] size: QWORD <|@ <|@
      nr  312  <|@ instruction MOV (x: [rsi|QWORD[*]], y: r8|QWORD) size: QWORD <|@ <|@
      nr  314  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed} <|@ <|@
      nr  316  <|@ instruction r8|QWORD = MOVE input: long[-4294967296|0xffffffff00000000] <|@ <|@
      nr  318  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r8|QWORD) size: QWORD <|@ <|@
      nr  320  <|@ instruction MOV (x: [rsi|QWORD[*] + 20], y: r10|DWORD) size: DWORD <|@ <|@
      nr  322  <|@ instruction MOV (x: [rsi|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  324  <|@ instruction r10|DWORD = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  326  <|@ instruction MOV (x: [rsi|QWORD[*] + 28], y: r10|DWORD) size: DWORD <|@ <|@
      nr  328  <|@ instruction r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@7a82eb53 encoding: base: 0 shift: 3 <|@ <|@
      nr  330  <|@ instruction MOV (x: [rsi|QWORD[*] + 32], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  332  <|@ instruction r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B32 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B32" "B58" 
    successors "B68" "B66" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  630  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  632  <|@ instruction stack:64|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction r8|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  636  <|@ instruction stack:44|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  638  <|@ instruction rsi|QWORD = MOV r8|DWORD size: DWORD <|@ <|@
      nr  640  <|@ instruction r9|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  642  <|@ instruction CMP (x: rsi|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  644  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B64 -> B68 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B68" "B120" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  652  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  654  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B66 -> B68 falseDestination: B66 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B64" "B66" 
    successors "B69" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  662  <|@ st <@st|@reference-map: [rdx:0, r10:0, r11:0, stack:16, stack:24, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 37]
stack: r10|QWORD[.] 
locals: - rdx|QWORD[.] - r11|QWORD[.] - - 
>@ <|@ instruction r9|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD state [bci:37] <|@ <|@
      nr  664  <|@ instruction stack:40|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction rcx|DWORD = MOV [r11|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  668  <|@ instruction stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction rbx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  672  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  674  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612399952198421081
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  686  <|@ instruction CMP rcx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  688  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612399952198421081
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  692  <|@ instruction CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed} <|@ <|@
      nr  694  <|@ instruction BRANCH trueDestinationProbability: 0.8936836714032184 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611845243203171713
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  698  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  700  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:16, stack:24, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] r10|QWORD[.] r11|DWORD 
>@ <|@ instruction rax|DWORD = MOV [rsi|DWORD[.] * 8 + 24] size: DWORD state [bci:42] <|@ <|@
      nr  702  <|@ instruction rbp|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  704  <|@ instruction CMP (x: rbp|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  706  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611845243203171713
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  724  <|@ instruction rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 32] size: DWORD <|@ <|@
      nr  726  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:16, stack:24, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] r10|QWORD[.] r11|DWORD 
>@ <|@ instruction r13|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:42] <|@ <|@
      nr  728  <|@ instruction CMP (x: r13|DWORD, y: [r10|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr  730  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" "B81" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611845243203171713
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  734  <|@ instruction CMP (x: rax|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  736  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B75 -> B76 falseDestination: B75 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611845243203171713
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  740  <|@ instruction rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  742  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:16, stack:24, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] r10|QWORD[.] r11|DWORD 
>@ <|@ instruction rax|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:42] <|@ <|@
      nr  744  <|@ instruction r13|DWORD = ADD (x: rbp|DWORD, ~y: [r10|QWORD[.] + 28]) size: DWORD <|@ <|@
      nr  746  <|@ instruction CMP (x: rax|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  748  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B76 -> B77 falseDestination: B76 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B78" "B79" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611845243203171713
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  752  <|@ instruction CMP (x: rax|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  754  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B77 -> B78 falseDestination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611845243203171713
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  758  <|@ instruction rax|DWORD = INC rbp|DWORD size: DWORD <|@ <|@
      nr  760  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  762  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  764  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7a82eb53 encoding: base: 0 shift: 3 <|@ <|@
      nr  766  <|@ instruction rsi|DWORD[.] = MOV [rsi|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  768  <|@ instruction rbx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  770  <|@ instruction r10|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  774  <|@ instruction JUMP ~[] destination: B78 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" "B78" "B95" "B89" "B93" 
    successors "B69" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4612399952198421080
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1072  <|@ instruction r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1078  <|@ instruction MOV (x: [r11|QWORD[.] + r10|DWORD * 4 + 16], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr 1080  <|@ instruction rsi|QWORD[.] = LEA [r11|QWORD[.] + r10|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1082  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1084  <|@ instruction MOVB (x: [rsi|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1086  <|@ instruction rsi|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr 1088  <|@ instruction rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1090  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1092  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1094  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1096  <|@ instruction r11|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1098  <|@ instruction JUMP ~[] destination: B101 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B101" 
    successors "B70" "B104" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4614651752012106329
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  678  <|@ instruction stack:68|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  680  <|@ instruction CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  682  <|@ instruction BRANCH trueDestinationProbability: 0.6985273317247691 condition: > trueDestination: B69 -> B70 falseDestination: B69 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B84" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598043364214525307
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  834  <|@ instruction CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed} <|@ <|@
      nr  836  <|@ instruction BRANCH trueDestinationProbability: 0.9213533497647322 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" "B98" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597345348145217565
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  840  <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  842  <|@ st <@st|@reference-map: [rax:0, r10:0, stack:16, stack:24, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] r10|QWORD[.] r11|DWORD 
>@ <|@ instruction CMP [rax|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} state [bci:42] <|@ <|@
      nr  844  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B86" "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597345348145217565
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  848  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  850  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0, stack:16, stack:24, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] r10|QWORD[.] r11|DWORD 
>@ <|@ instruction rbp|DWORD = MOV [rsi|DWORD[.] * 8 + 20] size: DWORD state [bci:42] <|@ <|@
      nr  852  <|@ instruction rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  854  <|@ instruction r13|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  856  <|@ instruction r14|DWORD = SUB (x: r13|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  858  <|@ instruction CMP (x: rbp|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  860  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B87" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597345348145217565
    begin_IR
      LIR
      nr  862  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  864  <|@ instruction rsi|DWORD[.] = MOV [rax|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr  866  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0, stack:16, stack:24, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] r10|QWORD[.] r11|DWORD 
>@ <|@ instruction rbp|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:42] <|@ <|@
      nr  868  <|@ instruction CMP (x: rbp|DWORD, y: [rax|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr  870  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" "B91" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597345348145217565
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  874  <|@ instruction rbp|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  876  <|@ instruction r14|DWORD = INC r13|DWORD size: DWORD <|@ <|@
      nr  878  <|@ instruction CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr  880  <|@ instruction BRANCH trueDestinationProbability: 0.9304948647614187 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B89" "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596776981866787665
    begin_IR
      LIR
      nr  882  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  884  <|@ instruction rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  886  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0, stack:16, stack:24, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] r10|QWORD[.] r11|DWORD 
>@ <|@ instruction CMP (x: r13|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:42] <|@ <|@
      nr  888  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B88 -> B89 falseDestination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596776981866787665
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  892  <|@ instruction MOV (x: [rax|DWORD[.] * 8 + 16], y: r13|DWORD) size: DWORD <|@ <|@
      nr  894  <|@ instruction MOV (x: [rax|DWORD[.] * 8 + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  896  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7a82eb53 encoding: base: 0 shift: 3 <|@ <|@
      nr  898  <|@ instruction rsi|DWORD[.] = MOV [rsi|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  900  <|@ instruction rbx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  902  <|@ instruction r10|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  906  <|@ instruction JUMP ~[] destination: B89 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B100" "B102" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581241349962885872
    begin_IR
      LIR
      nr 1048  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1050  <|@ instruction CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed} <|@ <|@
      nr 1052  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581241349962885872
    begin_IR
      LIR
      nr 1054  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1056  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1058  <|@ st <@st|@reference-map: [r10:0, stack:16, stack:24, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] r10|QWORD[.] stack:68|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:42] <|@ <|@
      nr 1060  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1062  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stack: stack:64|QWORD[.] stack:68|DWORD 
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] stack:56|QWORD[.] stack:68|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.next()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:114] <|@ <|@
      nr 1064  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7a82eb53 encoding: base: 0 shift: 3 <|@ <|@
      nr 1066  <|@ instruction rsi|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1068  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1070  <|@ instruction rbx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr 1074  <|@ instruction JUMP ~[] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B92" "B95" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4580204151635863134
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  924  <|@ instruction CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr  926  <|@ instruction BRANCH trueDestinationProbability: 0.9931451844203526 condition: = trueDestination: B91 -> B92 falseDestination: B91 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B93" "B94" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4580172983267700514
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  930  <|@ instruction rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr  932  <|@ st <@st|@reference-map: [rax:0, rsi:0, stack:16, stack:24, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] stack:56|QWORD[.] stack:68|DWORD 
>@ <|@ instruction CMP (x: r13|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:42] <|@ <|@
      nr  934  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B92 -> B93 falseDestination: B92 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4580172983267700514
    begin_IR
      LIR
      nr  936  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  938  <|@ instruction MOV (x: [rax|DWORD[.] * 8 + 16], y: r13|DWORD) size: DWORD <|@ <|@
      nr  940  <|@ instruction MOV (x: [rax|DWORD[.] * 8 + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  942  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7a82eb53 encoding: base: 0 shift: 3 <|@ <|@
      nr  944  <|@ instruction rsi|DWORD[.] = MOV [rsi|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  946  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction rbx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  952  <|@ instruction JUMP ~[] destination: B93 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4547607526639090665
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  972  <|@ instruction stack:72|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  974  <|@ instruction stack:76|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD <|@ <|@
      nr  976  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7a82eb53 encoding: base: 0 shift: 3 <|@ <|@
      nr  978  <|@ instruction rdx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  980  <|@ instruction stack:80|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ st <@st|@reference-map: [stack:4, stack:16, stack:24, stack:48]
live-base-pointers: []
java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
locals: stack:76|DWORD[.] stack:80|DWORD - 
java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
locals: - 
java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stack: stack:64|QWORD[.] stack:68|DWORD 
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] stack:56|QWORD[.] stack:68|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractList.get(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:14, 11, 114] <|@ <|@
      nr  984  <|@ instruction rsi|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD <|@ <|@
      nr  986  <|@ instruction r13|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr  988  <|@ instruction MOV (x: [rsi|DWORD[.] * 8 + 16], y: r13|DWORD) size: DWORD <|@ <|@
      nr  990  <|@ instruction r14|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  992  <|@ instruction MOV (x: [rsi|DWORD[.] * 8 + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  994  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7a82eb53 encoding: base: 0 shift: 3 <|@ <|@
      nr  996  <|@ instruction rsi|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD <|@ <|@
      nr  998  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1000  <|@ instruction rbx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr 1004  <|@ instruction JUMP ~[] destination: B95 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B105" "B108" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1130  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1132  <|@ instruction CMP stack:40|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed} <|@ <|@
      nr 1138  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1134  <|@ instruction BRANCH trueDestinationProbability: 0.9408014571948998 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4606649205729381557
    begin_IR
      LIR
      nr 1136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1140  <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + 32] size: DWORD <|@ <|@
      nr 1142  <|@ st <@st|@reference-map: [r10:0, stack:16, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] r10|QWORD[.] stack:68|DWORD 
>@ <|@ instruction rax|DWORD = MOV [rax|DWORD[.] * 8 + 24] size: DWORD state [bci:42] <|@ <|@
      nr 1144  <|@ instruction CMP (x: rax|DWORD, y: [r10|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr 1146  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors 
    xhandlers
    flags 
    probability 4606649205729381557
    begin_IR
      LIR
      nr 1148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1150  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1152  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B109" "B114" 
    xhandlers
    flags 
    probability 4588692230165968048
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1172  <|@ instruction CMP stack:40|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed} <|@ <|@
      nr 1174  <|@ instruction BRANCH trueDestinationProbability: 0.8652680652680653 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B110" "B113" 
    xhandlers
    flags 
    probability 4587542776907870065
    begin_IR
      LIR
      nr 1176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1178  <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1180  <|@ st <@st|@reference-map: [rax:0, r10:0, stack:16, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] r10|QWORD[.] stack:68|DWORD 
>@ <|@ instruction CMP [rax|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} state [bci:42] <|@ <|@
      nr 1182  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B109 -> B110 falseDestination: B109 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B111" "B112" 
    xhandlers
    flags 
    probability 4587542776907870065
    begin_IR
      LIR
      nr 1184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1186  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1188  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0, stack:16, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] r10|QWORD[.] stack:68|DWORD 
>@ <|@ instruction rdx|DWORD = MOV [rsi|DWORD[.] * 8 + 20] size: DWORD state [bci:42] <|@ <|@
      nr 1190  <|@ instruction rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 1192  <|@ instruction rax|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 1194  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1196  <|@ instruction CMP (x: rdx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1198  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B110 -> B111 falseDestination: B110 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors 
    xhandlers
    flags 
    probability 4587542776907870065
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1216  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1218  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B8" 
    xhandlers
    flags 
    probability 4588688488168922656
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed} <|@ <|@
      nr   46  <|@ instruction BRANCH trueDestinationProbability: 0.8652052238805972 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4587539003186891847
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction rsi|DWORD[.] = MOV [r13|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   52  <|@ st <@st|@reference-map: [r13:0, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0]
locals: r13|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction CMP (x: rsi|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   56  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4587539003186891847
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction r10|DWORD = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   62  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B37" "B63" 
    xhandlers
    flags 
    probability 4588688488168922656
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  358  <|@ instruction CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed} <|@ <|@
      nr  360  <|@ instruction BRANCH trueDestinationProbability: 0.8652052238805972 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B61" 
    xhandlers
    flags 
    probability 4587539003186891847
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  364  <|@ instruction r14|DWORD[.] = MOV [r13|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  366  <|@ st <@st|@reference-map: [rdx:0, r13:0, r14:0, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: rdx|QWORD[.] 
locals: r13|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction r10|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD state [bci:32] <|@ <|@
      nr  368  <|@ instruction CMP (x: r10|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  370  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4587539003186891847
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  374  <|@ instruction CMP [r13|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr  376  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4587539003186891847
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  386  <|@ instruction r11|DWORD = MOV [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  388  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  390  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B60" 
    xhandlers
    flags 
    probability 4587539003186891847
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction rsi|DWORD = MOV [r14|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  402  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<AbstractList.listIterator(int)>} <|@ <|@
      nr  404  <|@ instruction CMP (x: rcx|QWORD, y: [rsi|DWORD * 8 + 696]) size: QWORD <|@ <|@
      nr  406  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B47" 
    xhandlers
    flags 
    probability 4587539003186891847
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr  412  <|@ instruction BRANCH trueDestinationProbability: 0.5044648172401477 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4583101288029259690
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  416  <|@ instruction rsi|DWORD[.] = MOV [r14|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  418  <|@ st <@st|@reference-map: [rdx:0, r13:0, r14:0, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: rdx|QWORD[.] 
locals: r13|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:32] <|@ <|@
      nr  420  <|@ instruction CMP (x: r11|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  422  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B55" 
    xhandlers
    flags 
    probability 4583101288029259690
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  432  <|@ instruction stack:36|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B46 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B46" "B49" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4587539003186891847
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  488  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  490  <|@ instruction r8|QWORD = LEA [rcx|QWORD + 56] size: QWORD <|@ <|@
      nr  492  <|@ instruction CMP (x: r8|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  494  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4587465221365380873
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  526  <|@ instruction MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD <|@ <|@
      nr  528  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + 248] instr: 0 <|@ <|@
      nr  530  <|@ instruction rsi|QWORD[*] = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B56" 
    successors "B64" 
    xhandlers
    flags 
    probability 4587539003186891847
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  536  <|@ instruction rcx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction r8|QWORD[*] = LEA [rsi|QWORD[*] + 24] size: QWORD <|@ <|@
      nr  540  <|@ instruction r8|QWORD[.] = MOVE r8|QWORD[*] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/SubList$1;, resolved>} <|@ <|@
      nr  544  <|@ instruction r9|QWORD = MOV [r9|QWORD + 168] size: QWORD <|@ <|@
      nr  546  <|@ instruction MOV (x: [rsi|QWORD[*]], y: r9|QWORD) size: QWORD <|@ <|@
      nr  548  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed} <|@ <|@
      nr  550  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  552  <|@ instruction r8|DWORD[.] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7a82eb53 encoding: base: 0 shift: 3 <|@ <|@
      nr  554  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr  556  <|@ instruction r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@7a82eb53 encoding: base: 0 shift: 3 <|@ <|@
      nr  558  <|@ instruction MOV (x: [rsi|QWORD[*] + 20], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  560  <|@ instruction r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>} <|@ <|@
      nr  562  <|@ instruction r8|QWORD = MOV [r8|QWORD + 168] size: QWORD <|@ <|@
      nr  564  <|@ instruction MOV (x: [rsi|QWORD[*] + 24], y: r8|QWORD) size: QWORD <|@ <|@
      nr  566  <|@ instruction MOV [rsi|QWORD[*] + 32] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr  568  <|@ instruction MOV (x: [rsi|QWORD[*] + 36], y: r11|DWORD) size: DWORD <|@ <|@
      nr  570  <|@ instruction MOV [rsi|QWORD[*] + 40] y: -1 size: DWORD <|@ <|@
      nr  572  <|@ instruction MOV (x: [rsi|QWORD[*] + 44], y: r10|DWORD) size: DWORD <|@ <|@
      nr  574  <|@ instruction MOV (x: [rsi|QWORD[*] + 48], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr  576  <|@ instruction MOV (x: [rsi|QWORD[*] + 52], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr  578  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  580  <|@ instruction r10|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  582  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  584  <|@ instruction JUMP ~[] destination: B58 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" "B51" 
    xhandlers
    flags 
    probability 4582969519089783012
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  438  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed} <|@ <|@
      nr  440  <|@ instruction BRANCH trueDestinationProbability: 0.5252282556463239 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4578834872492947213
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  444  <|@ instruction CMP r11|DWORD y: 1 size: DWORD <|@ <|@
      nr  446  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    probability 4578834872492947213
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  450  <|@ instruction stack:36|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" "B59" 
    xhandlers
    flags 
    probability 4578096966431877819
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  462  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr  464  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4578096966431877819
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  468  <|@ instruction rsi|DWORD = MOV [r14|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  470  <|@ instruction CMP (x: r11|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  472  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4578096966431877819
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  482  <|@ instruction stack:36|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576577122618762551
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  276  <|@ instruction stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  278  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  280  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr  282  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  284  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: r14|QWORD[.] 
locals: r13|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:32] <|@ <|@
      nr  286  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  290  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" "B121" 
    xhandlers
    flags 
    probability 4575751561709176675
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashSet;, resolved>;compressed} <|@ <|@
      nr   76  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 4575751561709176675
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction rsi|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   82  <|@ st <@st|@reference-map: [r13:0, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0]
locals: r13|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction r10|DWORD = MOV [rsi|DWORD[.] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   84  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B64" 
    xhandlers
    flags 
    probability 4575751561709176675
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  614  <|@ instruction stack:56|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  618  <|@ st <@st|@reference-map: [stack:24, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
locals: - stack:32|QWORD[.] - stack:56|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractCollection.iterator()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:34] <|@ <|@
      nr  620  <|@ instruction r11|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B115" "B118" 
    xhandlers
    flags 
    probability 4575751434813445373
    begin_IR
      LIR
      nr 1234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1238  <|@ instruction CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed} <|@ <|@
      nr 1240  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B114 -> B115 falseDestination: B114 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B116" "B117" 
    xhandlers
    flags 
    probability 4575751434813445373
    begin_IR
      LIR
      nr 1242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1244  <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1246  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr 1248  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors 
    xhandlers
    flags 
    probability 4575751434813445373
    begin_IR
      LIR
      nr 1250  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1252  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1254  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4557861259848273806
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  498  <|@ instruction stack:40|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  500  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  502  <|@ instruction stack:56|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  506  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  508  <|@ instruction rdx|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr  510  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  512  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:24, stack:48]
live-base-pointers: []
java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
stack: stack:40|DWORD stack:36|DWORD 
locals: r14|DWORD[.] stack:40|DWORD 
java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
locals: r14|DWORD[.] stack:40|DWORD 
java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
stack: vobject:SubList$1:0{val$index=int[0|0x0],i=Object[null],this$0=r13|QWORD[.]} 
locals: - - - 
java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
stack: vobject:SubList$1:0{val$index=int[0|0x0],i=Object[null],this$0=r13|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
locals: r13|QWORD[.] 
java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
locals: r13|QWORD[.] 
java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
locals: - stack:32|QWORD[.] - stack:56|QWORD[.] - - 
vobject:SubList$1:0{val$index=int[0|0x0],i=Object[null],this$0=r13|QWORD[.]} Ljava/util/SubList$1; int[0|0x0] Object[null] r13|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 2, 34, 15, 2, 1, 34] <|@ <|@
      nr  514  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction r11|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  518  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  520  <|@ instruction rdx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  522  <|@ instruction JUMP ~[] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4553726768201292438
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction rsi|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   98  <|@ instruction rcx|QWORD[.] = MOV [rsi|DWORD * 8 + 224] size: QWORD <|@ <|@
      nr  100  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:void] <|@ <|@
      nr  102  <|@ instruction CMP (x: r11|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr  104  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4553726768201292438
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  116  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  118  <|@ instruction r11|DWORD = SHL r10|DWORD y: 2 size: DWORD <|@ <|@
      nr  120  <|@ instruction r11|DWORD = LEA [r11|DWORD + 23] size: DWORD <|@ <|@
      nr  122  <|@ instruction r11|DWORD = AND r11|DWORD y: -8 size: DWORD <|@ <|@
      nr  124  <|@ instruction r11|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  126  <|@ instruction r8|QWORD = ADD (x: r11|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  128  <|@ instruction CMP (x: r8|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  130  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4553675856755721523
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  154  <|@ instruction MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD <|@ <|@
      nr  156  <|@ instruction AMD64PREFETCH ~[r11|QWORD + rcx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  158  <|@ instruction AMD64PREFETCH ~[r11|QWORD + rcx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  160  <|@ instruction AMD64PREFETCH ~[r11|QWORD + rcx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  162  <|@ instruction AMD64PREFETCH ~[r11|QWORD + rcx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  164  <|@ instruction MOV (x: [rcx|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  166  <|@ instruction MOV [rcx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  168  <|@ instruction MOV (x: [rcx|QWORD + 8], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  170  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4553675856755721523
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  182  <|@ instruction MOV (x: [rcx|QWORD + rsi|QWORD * 1], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  184  <|@ instruction rsi|QWORD = LEA [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  186  <|@ instruction JUMP ~[] destination: B17 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" 
    successors "B17" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4558179456383092019
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  176  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  178  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4553675856755721523
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction rcx|QWORD[.] = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B14" 
    successors "B20" "B23" 
    xhandlers
    flags 
    probability 4553726768201292438
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  198  <|@ instruction CMP [rsi|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Class;, resolved>;compressed} <|@ <|@
      nr  200  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4553726768201292438
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed} <|@ <|@
      nr  206  <|@ instruction BRANCH trueDestinationProbability: 0.9408274225153865 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 4553425512055502574
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B36" 
    xhandlers
    flags 
    probability 4535441323467356793
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  216  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B22 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B19" 
    xhandlers
    flags 
    probability 4523627091285684586
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  134  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@7a82eb53 encoding: base: 0 shift: 3 <|@ <|@
      nr  136  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  138  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  140  <|@ instruction stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  142  <|@ st <@st|@reference-map: [r13:0, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 4]
stack: stack:36|DWORD 
locals: r13|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:4] <|@ <|@
      nr  144  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B14 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  792  <|@ instruction r8|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  794  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  796  <|@ instruction rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction r11|DWORD = MOVE input: int[-247315|0xfffffffffffc39ed] <|@ <|@
      nr  802  <|@ instruction JUMP ~[] destination: B80 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B103" "B73" "B82" "B81" "B80" "B79" "B98" "B97" "B96" "B90" "B94" "B102" "B107" "B118" "B117" "B113" "B111" 
    successors 
    xhandlers
    flags 
    probability 2373678478600962048
    begin_IR
      LIR
      nr 1284  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1286  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1288  <|@ instruction MOV (x: [r15|QWORD + 680], y: r8|QWORD[.]) size: QWORD <|@ <|@
      nr 1290  <|@ st <@st|@reference-map: [rcx:0, rdx:0, r10:0]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - rdx|QWORD[.] - rcx|QWORD[.] r10|QWORD[.] r9|DWORD 
>@ <|@ instruction DEOPT info [bci:42] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  588  <|@ instruction r10|DWORD = MOVE input: int[-293939|0xfffffffffffb83cd] <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B59 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B39" "B61" "B41" "B60" "B45" "B53" "B50" "B59" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  606  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  608  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  610  <|@ st <@st|@reference-map: [rdx:0, r13:0, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: rdx|QWORD[.] 
locals: r13|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1258  <|@ instruction r8|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1260  <|@ instruction r11|DWORD = MOVE input: int[-279571|0xfffffffffffbbbed] <|@ <|@
      nr 1262  <|@ instruction r9|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1264  <|@ instruction rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1266  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1268  <|@ instruction JUMP ~[] destination: B117 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1270  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1272  <|@ instruction r8|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1274  <|@ instruction r11|DWORD = MOVE input: int[-278579|0xfffffffffffbbfcd] <|@ <|@
      nr 1276  <|@ instruction r9|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1278  <|@ instruction rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1280  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1282  <|@ instruction JUMP ~[] destination: B118 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction MOV [r15|QWORD + 668] y: -280883 size: DWORD <|@ <|@
      nr  226  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  228  <|@ st <@st|@reference-map: [r13:0, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 4]
stack: stack:36|DWORD 
locals: r13|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1292  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1294  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@435668424] <|@ <|@
      nr 1296  <|@ instruction MOV [r15|QWORD + 668] y: -235291 size: DWORD <|@ <|@
      nr 1298  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr 1300  <|@ st <@st|@reference-map: [r10:0, stack:16, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 37]
stack: r10|QWORD[.] 
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  806  <|@ instruction r8|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  808  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  810  <|@ instruction rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  812  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction r11|DWORD = MOVE input: int[-244243|0xfffffffffffc45ed] <|@ <|@
      nr  816  <|@ instruction JUMP ~[] destination: B81 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  108  <|@ instruction MOV [r15|QWORD + 668] y: -505185 size: DWORD <|@ <|@
      nr  110  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  112  <|@ st <@st|@reference-map: [r13:0, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 4]
stack: r10|DWORD 
locals: r13|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  594  <|@ instruction r10|DWORD = MOVE input: int[-290867|0xfffffffffffb8fcd] <|@ <|@
      nr  596  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  394  <|@ instruction r10|DWORD = MOVE input: int[-291091|0xfffffffffffb8eed] <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B41 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  476  <|@ instruction r10|DWORD = MOVE input: int[-294675|0xfffffffffffb80ed] <|@ <|@
      nr  478  <|@ instruction JUMP ~[] destination: B53 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  600  <|@ instruction r10|DWORD = MOVE input: int[-288275|0xfffffffffffb99ed] <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  710  <|@ instruction r8|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  712  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction r11|DWORD = MOVE input: int[-240915|0xfffffffffffc52ed] <|@ <|@
      nr  720  <|@ instruction JUMP ~[] destination: B73 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  260  <|@ instruction r10|DWORD = MOVE input: int[-284947|0xfffffffffffba6ed] <|@ <|@
      nr  262  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B33" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  346  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  348  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  350  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: r14|QWORD[.] 
locals: r13|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1022  <|@ instruction r8|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1024  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1026  <|@ instruction rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1028  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1030  <|@ instruction r11|DWORD = MOVE input: int[-255251|0xfffffffffffc1aed] <|@ <|@
      nr 1032  <|@ instruction JUMP ~[] destination: B97 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  956  <|@ instruction r8|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  958  <|@ instruction r11|DWORD = MOVE input: int[-266011|0xfffffffffffbf0e5] <|@ <|@
      nr  960  <|@ instruction r9|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  962  <|@ instruction rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  964  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  966  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ instruction JUMP ~[] destination: B94 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  910  <|@ instruction r8|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  912  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  914  <|@ instruction rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  916  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  918  <|@ instruction r11|DWORD = MOVE input: int[-260891|0xfffffffffffc04e5] <|@ <|@
      nr  920  <|@ instruction JUMP ~[] destination: B90 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1008  <|@ instruction r8|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1010  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1012  <|@ instruction rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1014  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1016  <|@ instruction r11|DWORD = MOVE input: int[-258067|0xfffffffffffc0fed] <|@ <|@
      nr 1018  <|@ instruction JUMP ~[] destination: B96 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1304  <|@ instruction r10|DWORD = MOVE input: int[-301875|0xfffffffffffb64cd] <|@ <|@
      nr 1306  <|@ instruction JUMP ~[] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B3" "B121" "B7" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1308  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1310  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1312  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1314  <|@ st <@st|@reference-map: [r13:0, stack:48]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0]
locals: r13|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1036  <|@ instruction r8|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1038  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1040  <|@ instruction rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1042  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1044  <|@ instruction r11|DWORD = MOVE input: int[-251955|0xfffffffffffc27cd] <|@ <|@
      nr 1046  <|@ instruction JUMP ~[] destination: B98 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1116  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1418920718] <|@ <|@
      nr 1118  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1120  <|@ instruction r11|DWORD = MOVE input: int[-234300|0xfffffffffffc6cc4] <|@ <|@
      nr 1122  <|@ instruction r9|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1124  <|@ instruction rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1126  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1128  <|@ instruction JUMP ~[] destination: B103 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  818  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  820  <|@ instruction r8|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  822  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  824  <|@ instruction rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  826  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  828  <|@ instruction r11|DWORD = MOVE input: int[-243987|0xfffffffffffc46ed] <|@ <|@
      nr  830  <|@ instruction JUMP ~[] destination: B82 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1102  <|@ instruction r8|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1104  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1106  <|@ instruction rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1108  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1110  <|@ instruction r11|DWORD = MOVE input: int[-269363|0xfffffffffffbe3cd] <|@ <|@
      nr 1112  <|@ instruction JUMP ~[] destination: B102 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction r10|DWORD = MOVE input: int[-289043|0xfffffffffffb96ed] <|@ <|@
      nr  382  <|@ instruction JUMP ~[] destination: B39 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  778  <|@ instruction r8|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  780  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  782  <|@ instruction rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  784  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction r11|DWORD = MOVE input: int[-248859|0xfffffffffffc33e5] <|@ <|@
      nr  788  <|@ instruction JUMP ~[] destination: B79 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  456  <|@ instruction r10|DWORD = MOVE input: int[-293651|0xfffffffffffb84ed] <|@ <|@
      nr  458  <|@ instruction JUMP ~[] destination: B50 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  340  <|@ instruction r10|DWORD = MOVE input: int[-284179|0xfffffffffffba9ed] <|@ <|@
      nr  342  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1156  <|@ instruction r8|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1158  <|@ instruction r11|DWORD = MOVE input: int[-273683|0xfffffffffffbd2ed] <|@ <|@
      nr 1160  <|@ instruction r9|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1162  <|@ instruction rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1164  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1166  <|@ instruction JUMP ~[] destination: B107 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   68  <|@ instruction r10|DWORD = MOVE input: int[-301075|0xfffffffffffb67ed] <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B7 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction r10|DWORD = MOVE input: int[-293395|0xfffffffffffb85ed] <|@ <|@
      nr  428  <|@ instruction JUMP ~[] destination: B45 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction r10|DWORD = MOVE input: int[-297747|0xfffffffffffb74ed] <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B3 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1202  <|@ instruction r8|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1204  <|@ instruction r11|DWORD = MOVE input: int[-278291|0xfffffffffffbc0ed] <|@ <|@
      nr 1206  <|@ instruction r9|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1208  <|@ instruction rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1210  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1212  <|@ instruction JUMP ~[] destination: B111 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1222  <|@ instruction r8|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1224  <|@ instruction r11|DWORD = MOVE input: int[-274995|0xfffffffffffbcdcd] <|@ <|@
      nr 1226  <|@ instruction r9|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1228  <|@ instruction rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1230  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1232  <|@ instruction JUMP ~[] destination: B113 -> B119 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #1          // size:()int
     4: istore_2      
     5: aload_1       
     6: arraylength   
     7: iload_2       
     8: if_icmplt     15
    11: aload_1       
    12: goto          32
    15: aload_1       
    16: invokevirtual #8          // java.lang.Object.getClass:()java.lang.Class
    19: invokevirtual #9          // java.lang.Class.getComponentType:()java.lang.Class
    22: iload_2       
    23: invokestatic  #10         // java.lang.reflect.Array.newInstance:(java.lang.Class, int)java.lang.Object
    26: checkcast     #14         // java.lang.Object[]
    29: checkcast     #14         // java.lang.Object[]
    32: astore_3      
    33: aload_0       
    34: invokevirtual #2          // iterator:()java.util.Iterator
    37: astore        4
    39: iconst_0      
    40: istore        5
    42: iload         5
    44: aload_3       
    45: arraylength   
    46: if_icmpge     126
    49: aload         4
    51: invokeinterface#3, 1       // java.util.Iterator.hasNext:()boolean
    56: ifne          109
    59: aload_1       
    60: aload_3       
    61: if_acmpne     72
    64: aload_3       
    65: iload         5
    67: aconst_null   
    68: aastore       
    69: goto          107
    72: aload_1       
    73: arraylength   
    74: iload         5
    76: if_icmpge     86
    79: aload_3       
    80: iload         5
    82: invokestatic  #6          // java.util.Arrays.copyOf:(java.lang.Object[], int)java.lang.Object[]
    85: areturn       
    86: aload_3       
    87: iconst_0      
    88: aload_1       
    89: iconst_0      
    90: iload         5
    92: invokestatic  #11         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
    95: aload_1       
    96: arraylength   
    97: iload         5
    99: if_icmple     107
   102: aload_1       
   103: iload         5
   105: aconst_null   
   106: aastore       
   107: aload_1       
   108: areturn       
   109: aload_3       
   110: iload         5
   112: aload         4
   114: invokeinterface#4, 1       // java.util.Iterator.next:()java.lang.Object
   119: aastore       
   120: iinc          
   123: goto          42
   126: aload         4
   128: invokeinterface#3, 1       // java.util.Iterator.hasNext:()boolean
   133: ifeq          145
   136: aload_3       
   137: aload         4
   139: invokestatic  #7          // finishToArray:(java.lang.Object[], java.util.Iterator)java.lang.Object[]
   142: goto          146
   145: aload_3       
   146: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec4848896c24404c8bee48895424308502458b75084181feaddeadde0f8547040000418b75208b34f50c000000413b750c0f85d10a0000418b7518448bd6443b520c0f8faa0600004181feaddeadde0f85440400004c8bf2418b7520448b14f50c000000453b550c0f85550a000041837d18000f8cc2080000498b77604c8d5e284d3b5f700f87730500004d895f600f1886e80000004c8bde49b8addeaddeaddeadde4d8b80a80000004c8906c74608addeadde49b800000000ffffffff4c89460c4489561444896618458b55144489561c49c1ed0344896e204d8bd34d8bde4c895424184c895c2410458b430c4489442424418bf04c8bce49ffc9493bf10f87090000004585c00f8583070000458b4a0844894c2428418b4b08894c242c48bb00e01b170100000041bb00000000e9cf00000066669081f9addeadde0f85dd0800004181f9addeadde0f85c6000000418b72208b04f518000000418b6a0c3be80f84b20700008b34f520000000448b2cf50c000000453b6a140f85c70800003bc50f8e2b0700008b34f5140000008b04f50c000000448bed45036a1c413bc50f8e41060000413bc50f86e70800008bc5ffc04189420c41896a1048c1e603428b74ae1048bb00e01b1701000000458bd34c8b5c241043897493104b8d74931048c1ee094488241e418bf2ffc68b4c242c448b4c2428448b4424244c8b542418448bde44895c240c453bc30f8f26ffffffe9b50100004181f9addeadde0f85b2000000418b4210813cc508000000addeadde0f85c6070000418b72148b2cf5140000008b34f510000000448b2cc50c000000458bf5442bf6413bee0f8ef40600008b34c5180000008b2cf50c0000003b2cc5140000000f85460700008b2cf508000000458bf541ffc681fdaddeadde0f85890000008b34f510000000443b2cf50c0000000f83f606000044892cc510000000448934c50c00000048c1e603428b74ae1048bb00e01b1701000000458bd3e9fcfeffff4181f9addeadde0f8587070000418b7214418504f4498bf248b8ffffffffffffffff0f1f8000000000e8000000009048c1e8038bf0448b54240c48bb00e01b1701000000e9b3feffff81fdaddeadde0f85420000008b34f51c000000443b2cf50c0000000f833806000044892cc510000000448934c50c00000048c1e603428b74ae10448b54240c48bb00e01b1701000000e965feffff44897424088944240448c1e603418bd544892c2448b8ffffffffffffffff0f1f4000e800000000908b742404448b2c2444892cf510000000448b742408448934f50c00000048c1e8038bf0448b54240c48bb00e01b1701000000e906feffff817c2428addeadde4c8b5424180f852d000000418b42208b04c518000000413b420c0f85db060000488b442410488b6c24404883c448850500000000c5f877c3817c2428addeadde0f8565020000418b4210813cc508000000addeadde0f8509070000418b72148b14f5140000008b34f5100000008b04c50c0000002bc63bd00f8fc2060000488b442410488b6c24404883c448850500000000c5f877c34181feaddeadde0f85b9010000418b75188b34f50c000000413b750c0f8567060000458b5514488b542430e9a5fbffff4181feaddeadde0f85ac010000458b7518468b14f50c000000453b550c0f855204000041837d14000f8cc4050000458b5d104585db0f8c24040000428b34f50800000048b9addeaddeaddeadde483b0cf5b80200000f85f903000081feaddeadde0f85b5000000428b34f5100000008b34f50c000000443bde0f8fe50500008974242c498b4f604c8d41384d3b47700f87810100004d8947600f1881f8000000488bf1488bce4c8d461849b9addeaddeaddeadde4d8b89a80000004c890ec74608addeadde4489660c49c1e8034489461049c1ed0344896e1449b8addeaddeaddeadde4d8b80a80000004c894618c74620addeadde44895e24c74628ffffffff4489562c44897630448976344c8bda4c8bd1488b542430e92bfbffff81feaddeadde0f85170000004183fb010f8ded040000c744242c00000000e944ffffff81feaddeadde0f8534020000428b34f510000000443bde0f8f0e0300008974242ce91effffff448954242c48beaddeaddeaddeaddeba06000000b901000000e80000000090488bf0448b54242c488b542430e967faffff4181feaddeadde0f85a8030000418b750c448b14f514000000488b542430e9ecf9ffff4889542418498bf548b8ffffffffffffffff6690e800000000904c8b5c24184c8bd0488b542430e962faffff4181f9addeadde0f85c8010000418b421485c00f859b010000488b442410488b6c24404883c448850500000000c5f877c344895c24284489542424488954241848baaddeaddeaddeadde488bf2ba0a000000b901000000e80000000090488bf0448b5c2428448b542424488b542418e94afeffff8b7208488b0cf5e000000049bbaddeaddeaddeadde4c3bd90f84c5010000498b4f60458bda41c1e302458d5b174183e3f84d63db4d8bc34c03c14d3b47700f878b0000004d894760410f18840bc0000000410f18840b00010000410f18840b40010000410f18840b800100004489510c48c7010100000089710848c7c610000000e9170000000f1f8400000000000f1f80000000004c892431488d76084c3bde7ff3488bf1817e08addeadde0f85d00000004181feaddeadde0f85080000004c8bf6e99ff8ffff488bd6e9d8fcffff48c1e603418bd2b901000000448954242ce80000000090488bf0448b54242c488b542430ebb049b80000000000000000458bcb488b4c2410488b54243041bbed39fcff45899f9c0200004d8987a8020000e8000000009041bacd83fbff4589979c0200004d89a7a8020000e8000000009049b8000000000000000041bbedbbfbff448b4c240c488b4c2410488b542430ebb149b8000000000000000041bbcdbffbff448b4c240c488b4c2410488b542430eb90448954242c41c7879c020000cdb6fbff4d89a7a8020000e8000000009049bbaddeaddeaddeadde41c7879c020000e568fcff4d899fa8020000e8000000009049b80000000000000000458bcb488b4c2410488b54243041bbed45fcffe92fffffff41c7879c0200009f4af8ff4d89a7a8020000e8000000009041bacd8ffbffe926ffffff41baed8efbffe91bffffff41baed80fbffe910ffffff41baed99fbffe905ffffff49b80000000000000000458bcb488b4c2410488b54243041bbed52fcffe9c9feffff41baeda6fbff4589979c0200004d89a7a8020000e8000000009049b80000000000000000458bcb488b4c2410488b54243041bbed1afcffe98dfeffff49b8000000000000000041bbe5f0fbff448b4c240c488b4c24104c8b542418488b542430e964feffff49b80000000000000000458bcb488b4c2410488b54243041bbe504fcffe942feffff49b80000000000000000458bcb488b4c2410488b54243041bbed0ffcffe920feffff41bacd64fbff4589979c0200004d89a7a8020000e8000000009049b80000000000000000458bcb488b4c2410488b54243041bbcd27fcffe9e4fdffff49bbaddeaddeaddeadde4d8bc341bbc46cfcff448b4c240c488b4c2410488b542430e9bdfdffff49b80000000000000000458bcb488b4c2410488b54243041bbed46fcffe99bfdffff49b80000000000000000458bcb488b4c2410488b54243041bbcde3fbffe979fdffff41baed96fbffe988fdffff49b80000000000000000458bcb488b4c2410488b54243041bbe533fcffe94cfdffff41baed84fbffe95bfdffff41baeda9fbffe973feffff49b8000000000000000041bbedd2fbff448b4c240c488b4c2410488b542430e912fdffff41baed67fbffe9edfeffff41baed85fbffe916fdffff41baed74fbffe9d7feffff49b8000000000000000041bbedc0fbff448b4c240c488b4c2410488b542430e9cdfcffff49b8000000000000000041bbcdcdfbff448b4c240c488b4c2410488b542430e9a9fcffffe80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@55cef607 slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 stack:32|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 56 10 NULLCHECK [rdx|QWORD[.]] state [bci:0]  <||@
  Comment 56 [rdx:0, r13:0, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 56 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 58 12 r14|DWORD = MOV [r13|QWORD[.] + 8] size: DWORD  <||@
  Comment 62 14 CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed}  <||@
  Comment 62 {meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed}}  <||@
  Comment 69 16 BRANCH trueDestinationProbability: 0.9408274225153865 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4  <||@
  Comment 75 block B1 null  <||@
  Comment 75 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 75 20 rsi|DWORD[.] = MOV [r13|QWORD[.] + 32] size: DWORD  <||@
  Comment 79 22 rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 79 [rdx:0, r13:0, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 79 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 86 24 CMP (x: rsi|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD  <||@
  Comment 90 26 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 96 block B2 null  <||@
  Comment 96 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 96 30 rsi|DWORD = MOV [r13|QWORD[.] + 24] size: DWORD  <||@
  Comment 100 32 r10|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 103 34 JUMP ~[] destination: B2 -> B10  <||@
  Comment 103 block B10 null  <||@
  Comment 103 88 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 103 90 CMP (x: r10|DWORD, y: [rdx|QWORD[.] + 12]) size: DWORD  <||@
  Comment 107 92 BRANCH trueDestinationProbability: 2.759914994618166E-4 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B24  <||@
  Comment 113 block B24 null  <||@
  Comment 113 230 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 113 232 CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed}  <||@
  Comment 113 {meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed}}  <||@
  Comment 120 234 BRANCH trueDestinationProbability: 0.9408274225153865 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B36  <||@
  Comment 126 block B25 null  <||@
  Comment 126 236 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 126 238 r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 129 240 JUMP ~[] destination: B25 -> B26  <||@
  Comment 129 block B26 null  <||@
  Comment 129 242 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 129 244 rsi|DWORD[.] = MOV [r13|QWORD[.] + 32] size: DWORD  <||@
  Comment 133 246 r10|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:32]  <||@
  Comment 133 [rdx:0, r13:0, r14:0, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |- 
     stack:   |r14|QWORD[.]  |              |   |   |   |    <||@
  Comment 133 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 141 248 CMP (x: r10|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD  <||@
  Comment 145 250 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B33  <||@
  Comment 151 block B27 null  <||@
  Comment 151 252 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 151 254 CMP [r13|QWORD[.] + 24] y: 0 size: DWORD  <||@
  Comment 156 256 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29  <||@
  Comment 162 block B29 null  <||@
  Comment 162 264 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 162 266 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 166 268 r11|QWORD = LEA [rsi|QWORD + 40] size: QWORD  <||@
  Comment 170 270 CMP (x: r11|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 174 272 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31  <||@
  Comment 180 block B31 null  <||@
  Comment 180 294 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 180 296 MOV (x: [r15|QWORD + 96], y: r11|QWORD) size: QWORD  <||@
  Comment 184 298 AMD64PREFETCH ~[rsi|QWORD + 232] instr: 0  <||@
  Comment 191 300 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 191 302 JUMP ~[] destination: B31 -> B32  <||@
  Comment 191 block B32 null  <||@
  Comment 191 304 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 191 306 r11|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 194 308 r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>}  <||@
  Comment 194 {meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>}}  <||@
  Comment 204 310 r8|QWORD = MOV [r8|QWORD + 168] size: QWORD  <||@
  Comment 211 312 MOV (x: [rsi|QWORD[*]], y: r8|QWORD) size: QWORD  <||@
  Comment 214 314 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed}  <||@
  Comment 214 {meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed}}  <||@
  Comment 221 316 r8|QWORD = MOVE input: long[-4294967296|0xffffffff00000000]  <||@
  Comment 231 318 MOV (x: [rsi|QWORD[*] + 12], y: r8|QWORD) size: QWORD  <||@
  Comment 235 320 MOV (x: [rsi|QWORD[*] + 20], y: r10|DWORD) size: DWORD  <||@
  Comment 239 322 MOV (x: [rsi|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 243 324 r10|DWORD = MOV [r13|QWORD[.] + 20] size: DWORD  <||@
  Comment 247 326 MOV (x: [rsi|QWORD[*] + 28], y: r10|DWORD) size: DWORD  <||@
  Comment 251 328 r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@7a82eb53 encoding: base: 0 shift: 3  <||@
  Comment 255 330 MOV (x: [rsi|QWORD[*] + 32], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 259 332 r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 262 334 r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 265 336 JUMP ~[] destination: B32 -> B64  <||@
  Comment 265 block B64 null  <||@
  Comment 265 628 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 265 630 stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 270 632 stack:64|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 275 634 r8|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD  <||@
  Comment 279 636 stack:44|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 284 638 rsi|QWORD = MOV r8|DWORD size: DWORD  <||@
  Comment 287 640 r9|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 293 642 CMP (x: rsi|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 296 644 BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B64 -> B68 falseDestination: B64 -> B66  <||@
  Comment 302 block B66 null  <||@
  Comment 302 650 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 302 652 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 305 654 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B66 -> B68 falseDestination: B66 -> B120  <||@
  Comment 311 block B68 null  <||@
  Comment 311 660 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 311 662 r9|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD state [bci:37]  <||@
  Comment 311 [rdx:0, r10:0, r11:0, stack:16, stack:24, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 37, duringCall: false, rethrow: false]
              |0             |1             |2  |3             |4  |5 
     locals:  |-             |rdx|QWORD[.]  |-  |r11|QWORD[.]  |-  |- 
     stack:   |r10|QWORD[.]  |              |   |              |   |    <||@
  Comment 311 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 315 664 stack:40|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 320 666 rcx|DWORD = MOV [r11|QWORD[.] + 8] size: DWORD  <||@
  Comment 324 668 stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 328 670 rbx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 338 672 r11|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 344 674 JUMP ~[] destination: B68 -> B69  <||@
  Comment 349 block B70 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 349 684 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 352 686 CMP rcx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 352 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 358 688 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B103  <||@
  Comment 364 block B71 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 364 690 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 364 692 CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed}  <||@
  Comment 364 {meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed}}  <||@
  Comment 371 694 BRANCH trueDestinationProbability: 0.8936836714032184 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B83  <||@
  Comment 377 block B72 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 377 696 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 377 698 rsi|DWORD[.] = MOV [r10|QWORD[.] + 32] size: DWORD  <||@
  Comment 381 700 rax|DWORD = MOV [rsi|DWORD[.] * 8 + 24] size: DWORD state [bci:42]  <||@
  Comment 381 [rsi:0, r10:0, stack:16, stack:24, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3                  |4             |5         
     locals:  |-  |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |r10|QWORD[.]  |r11|DWORD   <||@
  Comment 381 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 388 702 rbp|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 392 704 CMP (x: rbp|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 394 706 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74  <||@
  Comment 400 block B74 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 400 722 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 400 724 rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 32] size: DWORD  <||@
  Comment 407 726 r13|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:42]  <||@
  Comment 407 [rsi:0, r10:0, stack:16, stack:24, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3                  |4             |5         
     locals:  |-  |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |r10|QWORD[.]  |r11|DWORD   <||@
  Comment 407 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 415 728 CMP (x: r13|DWORD, y: [r10|QWORD[.] + 20]) size: DWORD  <||@
  Comment 419 730 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B82  <||@
  Comment 425 block B75 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 425 732 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 425 734 CMP (x: rax|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 427 736 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B75 -> B76 falseDestination: B75 -> B81  <||@
  Comment 433 block B76 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 433 738 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 433 740 rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 440 742 rax|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:42]  <||@
  Comment 440 [rsi:0, r10:0, stack:16, stack:24, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3                  |4             |5         
     locals:  |-  |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |r10|QWORD[.]  |r11|DWORD   <||@
  Comment 440 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 447 744 r13|DWORD = ADD (x: rbp|DWORD, ~y: [r10|QWORD[.] + 28]) size: DWORD  <||@
  Comment 454 746 CMP (x: rax|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 457 748 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B76 -> B77 falseDestination: B76 -> B80  <||@
  Comment 463 block B77 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 463 750 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 463 752 CMP (x: rax|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 466 754 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B77 -> B78 falseDestination: B77 -> B79  <||@
  Comment 472 block B78 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 472 756 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 472 758 rax|DWORD = INC rbp|DWORD size: DWORD  <||@
  Comment 476 760 MOV (x: [r10|QWORD[.] + 12], y: rax|DWORD) size: DWORD  <||@
  Comment 480 762 MOV (x: [r10|QWORD[.] + 16], y: rbp|DWORD) size: DWORD  <||@
  Comment 484 764 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7a82eb53 encoding: base: 0 shift: 3  <||@
  Comment 488 766 rsi|DWORD[.] = MOV [rsi|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD  <||@
  Comment 493 768 rbx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 503 770 r10|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 506 774 JUMP ~[] destination: B78 -> B101  <||@
  Comment 506 block B101 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 506 1076 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 506 1072 r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 511 1078 MOV (x: [r11|QWORD[.] + r10|DWORD * 4 + 16], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 516 1080 rsi|QWORD[.] = LEA [r11|QWORD[.] + r10|DWORD * 4 + 16] size: QWORD  <||@
  Comment 521 1082 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 525 1084 MOVB (x: [rsi|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 529 1086 rsi|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 534 1088 rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 538 1090 r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 543 1092 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 548 1094 r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 553 1096 r11|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 556 1098 JUMP ~[] destination: B101 -> B69  <||@
  Comment 556 block B69 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 556 676 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 556 678 stack:68|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 561 680 CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 564 682 BRANCH trueDestinationProbability: 0.6985273317247691 condition: > trueDestination: B69 -> B70 falseDestination: B69 -> B104  <||@
  Comment 575 block B83 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 575 832 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 575 834 CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed}  <||@
  Comment 575 {meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed}}  <||@
  Comment 582 836 BRANCH trueDestinationProbability: 0.9213533497647322 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B99  <||@
  Comment 588 block B84 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 588 838 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 588 840 rax|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 592 842 CMP [rax|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} state [bci:42]  <||@
  Comment 592 [rax:0, r10:0, stack:16, stack:24, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3                  |4             |5         
     locals:  |-  |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |r10|QWORD[.]  |r11|DWORD   <||@
  Comment 592 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 592 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}}  <||@
  Comment 603 844 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B98  <||@
  Comment 609 block B85 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 609 846 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 609 848 rsi|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD  <||@
  Comment 613 850 rbp|DWORD = MOV [rsi|DWORD[.] * 8 + 20] size: DWORD state [bci:42]  <||@
  Comment 613 [rax:0, rsi:0, r10:0, stack:16, stack:24, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3                  |4             |5         
     locals:  |-  |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |r10|QWORD[.]  |r11|DWORD   <||@
  Comment 613 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 620 852 rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 627 854 r13|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 635 856 r14|DWORD = SUB (x: r13|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 641 858 CMP (x: rbp|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 644 860 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B97  <||@
  Comment 650 block B86 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 650 862 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 650 864 rsi|DWORD[.] = MOV [rax|DWORD[.] * 8 + 24] size: DWORD  <||@
  Comment 657 866 rbp|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:42]  <||@
  Comment 657 [rax:0, rsi:0, r10:0, stack:16, stack:24, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3                  |4             |5         
     locals:  |-  |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |r10|QWORD[.]  |r11|DWORD   <||@
  Comment 657 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 664 868 CMP (x: rbp|DWORD, y: [rax|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 671 870 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B96  <||@
  Comment 677 block B87 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 677 872 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 677 874 rbp|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 684 876 r14|DWORD = INC r13|DWORD size: DWORD  <||@
  Comment 690 878 CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}  <||@
  Comment 690 {meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}}  <||@
  Comment 696 880 BRANCH trueDestinationProbability: 0.9304948647614187 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B91  <||@
  Comment 702 block B88 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 702 882 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 702 884 rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 709 886 CMP (x: r13|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:42]  <||@
  Comment 709 [rax:0, rsi:0, r10:0, stack:16, stack:24, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3                  |4             |5         
     locals:  |-  |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |r10|QWORD[.]  |r11|DWORD   <||@
  Comment 709 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 717 888 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B88 -> B89 falseDestination: B88 -> B90  <||@
  Comment 723 block B89 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 723 890 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 723 892 MOV (x: [rax|DWORD[.] * 8 + 16], y: r13|DWORD) size: DWORD  <||@
  Comment 731 894 MOV (x: [rax|DWORD[.] * 8 + 12], y: r14|DWORD) size: DWORD  <||@
  Comment 739 896 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7a82eb53 encoding: base: 0 shift: 3  <||@
  Comment 743 898 rsi|DWORD[.] = MOV [rsi|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD  <||@
  Comment 748 900 rbx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 758 902 r10|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 761 906 JUMP ~[] destination: B89 -> B101  <||@
  Comment 766 block B99 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 766 1048 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 766 1050 CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed}  <||@
  Comment 766 {meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed}}  <||@
  Comment 773 1052 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B102  <||@
  Comment 779 block B100 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 779 1054 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 779 1056 rsi|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD  <||@
  Comment 783 1058 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:42]  <||@
  Comment 783 [r10:0, stack:16, stack:24, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3                  |4             |5              
     locals:  |-  |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |r10|QWORD[.]  |stack:68|DWORD   <||@
  Comment 783 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 787 1060 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 790 1062 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.next()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:114]  <||@
  Comment 790 6  <||@
  Comment 807 {HotSpotMethod<Iterator.next()>}  <||@
  Comment 812 [stack:16, stack:24, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3                  |4                  |5              
     locals:  |-                  |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |stack:56|QWORD[.]  |stack:68|DWORD 
     stack:   |stack:64|QWORD[.]  |stack:68|DWORD     |   |                   |                   |                 <||@
  Comment 813 1064 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7a82eb53 encoding: base: 0 shift: 3  <||@
  Comment 817 1066 rsi|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD  <||@
  Comment 819 1068 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 824 1070 rbx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 834 1074 JUMP ~[] destination: B100 -> B101  <||@
  Comment 839 block B91 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 839 922 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 839 924 CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}  <||@
  Comment 839 {meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}}  <||@
  Comment 845 926 BRANCH trueDestinationProbability: 0.9931451844203526 condition: = trueDestination: B91 -> B92 falseDestination: B91 -> B95  <||@
  Comment 851 block B92 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 851 928 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 851 930 rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 28] size: DWORD  <||@
  Comment 858 932 CMP (x: r13|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:42]  <||@
  Comment 858 [rax:0, rsi:0, stack:16, stack:24, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3                  |4                  |5              
     locals:  |-  |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |stack:56|QWORD[.]  |stack:68|DWORD   <||@
  Comment 858 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 866 934 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B92 -> B93 falseDestination: B92 -> B94  <||@
  Comment 872 block B93 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 872 936 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 872 938 MOV (x: [rax|DWORD[.] * 8 + 16], y: r13|DWORD) size: DWORD  <||@
  Comment 880 940 MOV (x: [rax|DWORD[.] * 8 + 12], y: r14|DWORD) size: DWORD  <||@
  Comment 888 942 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7a82eb53 encoding: base: 0 shift: 3  <||@
  Comment 892 944 rsi|DWORD[.] = MOV [rsi|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD  <||@
  Comment 897 946 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 902 948 rbx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 912 952 JUMP ~[] destination: B93 -> B101  <||@
  Comment 917 block B95 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 917 970 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 917 972 stack:72|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 922 974 stack:76|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD  <||@
  Comment 926 976 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7a82eb53 encoding: base: 0 shift: 3  <||@
  Comment 930 978 rdx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 933 980 stack:80|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 937 982 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractList.get(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:14, 11, 114]  <||@
  Comment 937 7  <||@
  Comment 951 {HotSpotMethod<AbstractList.get(int)>}  <||@
  Comment 956 [stack:4, stack:16, stack:24, stack:48]at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14, duringCall: true, rethrow: false]
              |0                  |1               |2 
     locals:  |stack:76|DWORD[.]  |stack:80|DWORD  |- 
  at java.util.SubList$1.next(AbstractList.java:707) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3                  |4                  |5              
     locals:  |-                  |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |stack:56|QWORD[.]  |stack:68|DWORD 
     stack:   |stack:64|QWORD[.]  |stack:68|DWORD     |   |                   |                   |                 <||@
  Comment 957 984 rsi|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD  <||@
  Comment 961 986 r13|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 965 988 MOV (x: [rsi|DWORD[.] * 8 + 16], y: r13|DWORD) size: DWORD  <||@
  Comment 973 990 r14|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 978 992 MOV (x: [rsi|DWORD[.] * 8 + 12], y: r14|DWORD) size: DWORD  <||@
  Comment 986 994 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7a82eb53 encoding: base: 0 shift: 3  <||@
  Comment 990 996 rsi|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD  <||@
  Comment 992 998 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 997 1000 rbx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1007 1004 JUMP ~[] destination: B95 -> B101  <||@
  Comment 1012 block B104 null  <||@
  Comment 1012 1130 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1012 1132 CMP stack:40|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed}  <||@
  Comment 1012 {meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed}}  <||@
  Comment 1020 1138 r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1025 1134 BRANCH trueDestinationProbability: 0.9408014571948998 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B108  <||@
  Comment 1031 block B105 null  <||@
  Comment 1031 1136 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1031 1140 rax|DWORD[.] = MOV [r10|QWORD[.] + 32] size: DWORD  <||@
  Comment 1035 1142 rax|DWORD = MOV [rax|DWORD[.] * 8 + 24] size: DWORD state [bci:42]  <||@
  Comment 1035 [r10:0, stack:16, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3                  |4             |5              
     locals:  |-  |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |r10|QWORD[.]  |stack:68|DWORD   <||@
  Comment 1035 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1042 1144 CMP (x: rax|DWORD, y: [r10|QWORD[.] + 12]) size: DWORD  <||@
  Comment 1046 1146 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B107  <||@
  Comment 1052 block B106 null  <||@
  Comment 1052 1148 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1052 1150 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1057 1152 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1066 12  <||@
  Comment 1076 block B108 null  <||@
  Comment 1076 1168 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1076 1172 CMP stack:40|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed}  <||@
  Comment 1076 {meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed}}  <||@
  Comment 1084 1174 BRANCH trueDestinationProbability: 0.8652680652680653 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B114  <||@
  Comment 1090 block B109 null  <||@
  Comment 1090 1176 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1090 1178 rax|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 1094 1180 CMP [rax|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} state [bci:42]  <||@
  Comment 1094 [rax:0, r10:0, stack:16, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3                  |4             |5              
     locals:  |-  |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |r10|QWORD[.]  |stack:68|DWORD   <||@
  Comment 1094 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1094 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}}  <||@
  Comment 1105 1182 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B109 -> B110 falseDestination: B109 -> B113  <||@
  Comment 1111 block B110 null  <||@
  Comment 1111 1184 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1111 1186 rsi|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD  <||@
  Comment 1115 1188 rdx|DWORD = MOV [rsi|DWORD[.] * 8 + 20] size: DWORD state [bci:42]  <||@
  Comment 1115 [rax:0, rsi:0, r10:0, stack:16, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3                  |4             |5              
     locals:  |-  |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |r10|QWORD[.]  |stack:68|DWORD   <||@
  Comment 1115 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1122 1190 rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1129 1192 rax|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1136 1194 rax|DWORD = SUB (x: rax|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 1138 1196 CMP (x: rdx|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1140 1198 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B110 -> B111 falseDestination: B110 -> B112  <||@
  Comment 1146 block B112 null  <||@
  Comment 1146 1214 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1146 1216 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1151 1218 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1160 12  <||@
  Comment 1170 block B4 null  <||@
  Comment 1170 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1170 44 CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed}  <||@
  Comment 1170 {meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed}}  <||@
  Comment 1177 46 BRANCH trueDestinationProbability: 0.8652052238805972 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B8  <||@
  Comment 1183 block B5 null  <||@
  Comment 1183 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1183 50 rsi|DWORD[.] = MOV [r13|QWORD[.] + 24] size: DWORD  <||@
  Comment 1187 52 rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 1187 [r13:0, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 1187 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1194 54 CMP (x: rsi|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD  <||@
  Comment 1198 56 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7  <||@
  Comment 1204 block B6 null  <||@
  Comment 1204 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1204 60 r10|DWORD = MOV [r13|QWORD[.] + 20] size: DWORD  <||@
  Comment 1208 62 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1213 64 JUMP ~[] destination: B6 -> B10  <||@
  Comment 1218 block B36 null  <||@
  Comment 1218 356 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1218 358 CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed}  <||@
  Comment 1218 {meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed}}  <||@
  Comment 1225 360 BRANCH trueDestinationProbability: 0.8652052238805972 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B63  <||@
  Comment 1231 block B37 null  <||@
  Comment 1231 362 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1231 364 r14|DWORD[.] = MOV [r13|QWORD[.] + 24] size: DWORD  <||@
  Comment 1235 366 r10|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD state [bci:32]  <||@
  Comment 1235 [rdx:0, r13:0, r14:0, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |- 
     stack:   |rdx|QWORD[.]  |                   |   |   |   |    <||@
  Comment 1235 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1243 368 CMP (x: r10|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD  <||@
  Comment 1247 370 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B61  <||@
  Comment 1253 block B38 null  <||@
  Comment 1253 372 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1253 374 CMP [r13|QWORD[.] + 20] y: 0 size: DWORD  <||@
  Comment 1258 376 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40  <||@
  Comment 1264 block B40 null  <||@
  Comment 1264 384 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1264 386 r11|DWORD = MOV [r13|QWORD[.] + 16] size: DWORD  <||@
  Comment 1268 388 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 1271 390 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42  <||@
  Comment 1277 block B42 null  <||@
  Comment 1277 398 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1277 400 rsi|DWORD = MOV [r14|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 1285 402 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<AbstractList.listIterator(int)>}  <||@
  Comment 1285 {meta{HotSpotMethod<AbstractList.listIterator(int)>}}  <||@
  Comment 1295 404 CMP (x: rcx|QWORD, y: [rsi|DWORD * 8 + 696]) size: QWORD  <||@
  Comment 1303 406 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B60  <||@
  Comment 1309 block B43 null  <||@
  Comment 1309 408 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1309 410 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}  <||@
  Comment 1309 {meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}}  <||@
  Comment 1315 412 BRANCH trueDestinationProbability: 0.5044648172401477 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B47  <||@
  Comment 1321 block B44 null  <||@
  Comment 1321 414 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1321 416 rsi|DWORD[.] = MOV [r14|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1329 418 rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:32]  <||@
  Comment 1329 [rdx:0, r13:0, r14:0, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |- 
     stack:   |rdx|QWORD[.]  |                   |   |   |   |    <||@
  Comment 1329 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1336 420 CMP (x: r11|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1339 422 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46  <||@
  Comment 1345 block B46 null  <||@
  Comment 1345 430 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1345 432 stack:36|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1349 434 JUMP ~[] destination: B46 -> B55  <||@
  Comment 1349 block B55 null  <||@
  Comment 1349 486 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1349 488 rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1353 490 r8|QWORD = LEA [rcx|QWORD + 56] size: QWORD  <||@
  Comment 1357 492 CMP (x: r8|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1361 494 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57  <||@
  Comment 1367 block B57 null  <||@
  Comment 1367 524 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1367 526 MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD  <||@
  Comment 1371 528 AMD64PREFETCH ~[rcx|QWORD + 248] instr: 0  <||@
  Comment 1378 530 rsi|QWORD[*] = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 1381 532 JUMP ~[] destination: B57 -> B58  <||@
  Comment 1381 block B58 null  <||@
  Comment 1381 534 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1381 536 rcx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1384 538 r8|QWORD[*] = LEA [rsi|QWORD[*] + 24] size: QWORD  <||@
  Comment 1388 540 r8|QWORD[.] = MOVE r8|QWORD[*] moveKind: QWORD  <||@
  Comment 1388 542 r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/SubList$1;, resolved>}  <||@
  Comment 1388 {meta{HotSpotType<Ljava/util/SubList$1;, resolved>}}  <||@
  Comment 1398 544 r9|QWORD = MOV [r9|QWORD + 168] size: QWORD  <||@
  Comment 1405 546 MOV (x: [rsi|QWORD[*]], y: r9|QWORD) size: QWORD  <||@
  Comment 1408 548 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed}  <||@
  Comment 1408 {meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed}}  <||@
  Comment 1415 550 MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 1419 552 r8|DWORD[.] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7a82eb53 encoding: base: 0 shift: 3  <||@
  Comment 1423 554 MOV (x: [rsi|QWORD[*] + 16], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 1427 556 r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@7a82eb53 encoding: base: 0 shift: 3  <||@
  Comment 1431 558 MOV (x: [rsi|QWORD[*] + 20], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 1435 560 r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>}  <||@
  Comment 1435 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>}}  <||@
  Comment 1445 562 r8|QWORD = MOV [r8|QWORD + 168] size: QWORD  <||@
  Comment 1452 564 MOV (x: [rsi|QWORD[*] + 24], y: r8|QWORD) size: QWORD  <||@
  Comment 1456 566 MOV [rsi|QWORD[*] + 32] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}  <||@
  Comment 1456 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}}  <||@
  Comment 1463 568 MOV (x: [rsi|QWORD[*] + 36], y: r11|DWORD) size: DWORD  <||@
  Comment 1467 570 MOV [rsi|QWORD[*] + 40] y: -1 size: DWORD  <||@
  Comment 1474 572 MOV (x: [rsi|QWORD[*] + 44], y: r10|DWORD) size: DWORD  <||@
  Comment 1478 574 MOV (x: [rsi|QWORD[*] + 48], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 1482 576 MOV (x: [rsi|QWORD[*] + 52], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 1486 578 r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1489 580 r10|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1492 582 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1497 584 JUMP ~[] destination: B58 -> B64  <||@
  Comment 1502 block B47 null  <||@
  Comment 1502 436 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1502 438 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed}  <||@
  Comment 1502 {meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed}}  <||@
  Comment 1508 440 BRANCH trueDestinationProbability: 0.5252282556463239 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B51  <||@
  Comment 1514 block B48 null  <||@
  Comment 1514 442 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1514 444 CMP r11|DWORD y: 1 size: DWORD  <||@
  Comment 1518 446 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50  <||@
  Comment 1524 block B49 null  <||@
  Comment 1524 448 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1524 450 stack:36|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1532 452 JUMP ~[] destination: B49 -> B55  <||@
  Comment 1537 block B51 null  <||@
  Comment 1537 460 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1537 462 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}  <||@
  Comment 1537 {meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}}  <||@
  Comment 1543 464 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B59  <||@
  Comment 1549 block B52 null  <||@
  Comment 1549 466 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1549 468 rsi|DWORD = MOV [r14|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1557 470 CMP (x: r11|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1560 472 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54  <||@
  Comment 1566 block B54 null  <||@
  Comment 1566 480 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1566 482 stack:36|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1570 484 JUMP ~[] destination: B54 -> B55  <||@
  Comment 1575 block B30 null  <||@
  Comment 1575 274 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1575 276 stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1580 278 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1580 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1590 280 rdx|DWORD = MOVE input: int[6|0x6]  <||@
  Comment 1595 282 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1600 284 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:32]  <||@
  Comment 1600 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1605 [r13:0, r14:0, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |- 
     stack:   |r14|QWORD[.]  |                   |   |   |   |    <||@
  Comment 1606 286 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1609 288 r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1614 290 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1619 292 JUMP ~[] destination: B30 -> B32  <||@
  Comment 1624 block B8 null  <||@
  Comment 1624 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1624 74 CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashSet;, resolved>;compressed}  <||@
  Comment 1624 {meta{HotSpotType<Ljava/util/HashSet;, resolved>;compressed}}  <||@
  Comment 1631 76 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B121  <||@
  Comment 1637 block B9 null  <||@
  Comment 1637 78 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1637 80 rsi|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 1641 82 r10|DWORD = MOV [rsi|DWORD[.] * 8 + 20] size: DWORD state [bci:0]  <||@
  Comment 1641 [r13:0, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 1641 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1649 84 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1654 86 JUMP ~[] destination: B9 -> B10  <||@
  Comment 1659 block B63 null  <||@
  Comment 1659 612 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1659 614 stack:56|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1664 616 rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1667 618 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractCollection.iterator()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:34]  <||@
  Comment 1667 7  <||@
  Comment 1679 {HotSpotMethod<AbstractCollection.iterator()>}  <||@
  Comment 1684 [stack:24, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34, duringCall: true, rethrow: false]
              |0  |1                  |2  |3                  |4  |5 
     locals:  |-  |stack:32|QWORD[.]  |-  |stack:56|QWORD[.]  |-  |-   <||@
  Comment 1685 620 r11|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1690 622 r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1693 624 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1698 626 JUMP ~[] destination: B63 -> B64  <||@
  Comment 1703 block B114 null  <||@
  Comment 1703 1234 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1703 1238 CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed}  <||@
  Comment 1703 {meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed}}  <||@
  Comment 1710 1240 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B114 -> B115 falseDestination: B114 -> B118  <||@
  Comment 1716 block B115 null  <||@
  Comment 1716 1242 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1716 1244 rax|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD  <||@
  Comment 1720 1246 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 1722 1248 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117  <||@
  Comment 1728 block B116 null  <||@
  Comment 1728 1250 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1728 1252 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1733 1254 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1742 12  <||@
  Comment 1752 block B56 null  <||@
  Comment 1752 496 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1752 498 stack:40|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1757 500 stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1762 502 stack:56|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1767 504 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1767 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1777 506 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1780 508 rdx|DWORD = MOVE input: int[10|0xa]  <||@
  Comment 1785 510 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1790 512 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 2, 34, 15, 2, 1, 34]  <||@
  Comment 1790 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1795 [r13:0, r14:0, stack:24, stack:48]at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9, duringCall: false, rethrow: false]
              |0               |1              
     locals:  |r14|DWORD[.]    |stack:40|DWORD 
     stack:   |stack:40|DWORD  |stack:36|DWORD 
  at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2, duringCall: true, rethrow: false]
              |0             |1              
     locals:  |r14|DWORD[.]  |stack:40|DWORD 
  at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34, duringCall: true, rethrow: false]
              |0                                                                             |1  |2 
     locals:  |-                                                                             |-  |- 
     stack:   |vobject:SubList$1:0{val$index=int[0|0x0],i=Object[null],this$0=r13|QWORD[.]}  |   |  
  at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15, duringCall: true, rethrow: false]
              |0                                                                             |1 
     locals:  |-                                                                             |- 
     stack:   |vobject:SubList$1:0{val$index=int[0|0x0],i=Object[null],this$0=r13|QWORD[.]}  |  
  at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2, duringCall: true, rethrow: false]
              |0            
     locals:  |r13|QWORD[.] 
  at java.util.SubList.iterator(AbstractList.java:691) [bci: 1, duringCall: true, rethrow: false]
              |0            
     locals:  |r13|QWORD[.] 
  at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34, duringCall: true, rethrow: false]
              |0  |1                  |2  |3                  |4  |5 
     locals:  |-  |stack:32|QWORD[.]  |-  |stack:56|QWORD[.]  |-  |-   <||@
  Comment 1796 514 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1799 516 r11|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1804 518 r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1809 520 rdx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1814 522 JUMP ~[] destination: B56 -> B58  <||@
  Comment 1819 block B11 null  <||@
  Comment 1819 94 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1819 96 rsi|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD  <||@
  Comment 1822 98 rcx|QWORD[.] = MOV [rsi|DWORD * 8 + 224] size: QWORD  <||@
  Comment 1830 100 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:void]  <||@
  Comment 1830 {Object[Class:void]}  <||@
  Comment 1840 102 CMP (x: r11|QWORD[.], y: rcx|QWORD[.]) size: QWORD  <||@
  Comment 1843 104 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13  <||@
  Comment 1849 block B13 null  <||@
  Comment 1849 114 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1849 116 rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1853 118 r11|DWORD = SHL r10|DWORD y: 2 size: DWORD  <||@
  Comment 1860 120 r11|DWORD = LEA [r11|DWORD + 23] size: DWORD  <||@
  Comment 1864 122 r11|DWORD = AND r11|DWORD y: -8 size: DWORD  <||@
  Comment 1868 124 r11|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 1871 126 r8|QWORD = ADD (x: r11|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1877 128 CMP (x: r8|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1881 130 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15  <||@
  Comment 1887 block B15 null  <||@
  Comment 1887 152 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1887 154 MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD  <||@
  Comment 1891 156 AMD64PREFETCH ~[r11|QWORD + rcx|QWORD * 1 + 192] instr: 0  <||@
  Comment 1900 158 AMD64PREFETCH ~[r11|QWORD + rcx|QWORD * 1 + 256] instr: 0  <||@
  Comment 1909 160 AMD64PREFETCH ~[r11|QWORD + rcx|QWORD * 1 + 320] instr: 0  <||@
  Comment 1918 162 AMD64PREFETCH ~[r11|QWORD + rcx|QWORD * 1 + 384] instr: 0  <||@
  Comment 1927 164 MOV (x: [rcx|QWORD + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 1931 166 MOV [rcx|QWORD] y: 1 size: QWORD  <||@
  Comment 1938 168 MOV (x: [rcx|QWORD + 8], y: rsi|DWORD) size: DWORD  <||@
  Comment 1941 170 rsi|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 1948 172 JUMP ~[] destination: B15 -> B16  <||@
  Comment 1953 block B17 loop 0 depth 1 header:2021|LoopBegin  <||@
  Comment 1953 180 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1968 182 MOV (x: [rcx|QWORD + rsi|QWORD * 1], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1972 184 rsi|QWORD = LEA [rsi|QWORD + 8] size: QWORD  <||@
  Comment 1976 186 JUMP ~[] destination: B17 -> B16  <||@
  Comment 1976 block B16 loop 0 depth 1 header:2021|LoopBegin  <||@
  Comment 1976 174 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1976 176 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1979 178 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18  <||@
  Comment 1981 block B18 null  <||@
  Comment 1981 188 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1981 190 rcx|QWORD[.] = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 1981 192 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1984 194 JUMP ~[] destination: B18 -> B19  <||@
  Comment 1984 block B19 null  <||@
  Comment 1984 196 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1984 198 CMP [rsi|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Class;, resolved>;compressed}  <||@
  Comment 1984 {meta{HotSpotType<[Ljava/lang/Class;, resolved>;compressed}}  <||@
  Comment 1991 200 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B23  <||@
  Comment 1997 block B20 null  <||@
  Comment 1997 202 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1997 204 CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed}  <||@
  Comment 1997 {meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed}}  <||@
  Comment 2004 206 BRANCH trueDestinationProbability: 0.9408274225153865 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22  <||@
  Comment 2010 block B21 null  <||@
  Comment 2010 208 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2010 210 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2013 212 JUMP ~[] destination: B21 -> B26  <||@
  Comment 2018 block B22 null  <||@
  Comment 2018 214 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2018 216 rdx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2021 218 JUMP ~[] destination: B22 -> B36  <||@
  Comment 2026 block B14 null  <||@
  Comment 2026 132 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2026 134 rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@7a82eb53 encoding: base: 0 shift: 3  <||@
  Comment 2030 136 rdx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2033 138 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2038 140 stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2043 142 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:4]  <||@
  Comment 2043 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2048 [r13:0, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 4, duringCall: false, rethrow: false]
              |0               |1                  |2  |3  |4  |5 
     locals:  |r13|QWORD[.]    |stack:32|QWORD[.]  |-  |-  |-  |- 
     stack:   |stack:36|DWORD  |                   |   |   |   |    <||@
  Comment 2049 144 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2052 146 r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2057 148 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2062 150 JUMP ~[] destination: B14 -> B19  <||@
  Comment 2064 block B80 null  <||@
  Comment 2064 790 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2064 792 r8|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2074 794 r9|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2077 796 rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2082 798 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2087 800 r11|DWORD = MOVE input: int[-247315|0xfffffffffffc39ed]  <||@
  Comment 2093 802 JUMP ~[] destination: B80 -> B119  <||@
  Comment 2093 block B119 null  <||@
  Comment 2093 1284 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 2093 1286 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 2100 1288 MOV (x: [r15|QWORD + 680], y: r8|QWORD[.]) size: QWORD  <||@
  Comment 2107 1290 DEOPT info [bci:42]  <||@
  Comment 2107 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2112 [rcx:0, rdx:0, r10:0]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1             |2  |3             |4             |5        
     locals:  |-  |rdx|QWORD[.]  |-  |rcx|QWORD[.]  |r10|QWORD[.]  |r9|DWORD   <||@
  Comment 2113 block B59 null  <||@
  Comment 2113 586 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2113 588 r10|DWORD = MOVE input: int[-293939|0xfffffffffffb83cd]  <||@
  Comment 2119 590 JUMP ~[] destination: B59 -> B62  <||@
  Comment 2119 block B62 null  <||@
  Comment 2119 604 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2119 606 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2126 608 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2133 610 DEOPT info [bci:32]  <||@
  Comment 2133 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2138 [rdx:0, r13:0, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |- 
     stack:   |rdx|QWORD[.]  |                   |   |   |   |    <||@
  Comment 2139 block B117 null  <||@
  Comment 2139 1256 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2139 1258 r8|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2149 1260 r11|DWORD = MOVE input: int[-279571|0xfffffffffffbbbed]  <||@
  Comment 2155 1262 r9|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 2160 1264 rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2165 1266 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2170 1268 JUMP ~[] destination: B117 -> B119  <||@
  Comment 2172 block B118 null  <||@
  Comment 2172 1270 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2172 1272 r8|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2182 1274 r11|DWORD = MOVE input: int[-278579|0xfffffffffffbbfcd]  <||@
  Comment 2188 1276 r9|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 2193 1278 rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2198 1280 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2203 1282 JUMP ~[] destination: B118 -> B119  <||@
  Comment 2205 block B23 null  <||@
  Comment 2205 220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2205 222 stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2210 224 MOV [r15|QWORD + 668] y: -280883 size: DWORD  <||@
  Comment 2221 226 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2228 228 DEOPT info [bci:4]  <||@
  Comment 2228 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2233 [r13:0, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 4, duringCall: false, rethrow: false]
              |0               |1                  |2  |3  |4  |5 
     locals:  |r13|QWORD[.]    |stack:32|QWORD[.]  |-  |-  |-  |- 
     stack:   |stack:36|DWORD  |                   |   |   |   |    <||@
  Comment 2234 block B120 null  <||@
  Comment 2234 1292 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2234 1294 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@435668424]  <||@
  Comment 2234 {Object[d.a@435668424]}  <||@
  Comment 2244 1296 MOV [r15|QWORD + 668] y: -235291 size: DWORD  <||@
  Comment 2255 1298 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 2262 1300 DEOPT info [bci:37]  <||@
  Comment 2262 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2267 [r10:0, stack:16, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 37, duringCall: false, rethrow: false]
              |0             |1                  |2  |3                  |4  |5 
     locals:  |-             |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |-  |- 
     stack:   |r10|QWORD[.]  |                   |   |                   |   |    <||@
  Comment 2268 block B81 null  <||@
  Comment 2268 804 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2268 806 r8|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2278 808 r9|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2281 810 rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2286 812 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2291 814 r11|DWORD = MOVE input: int[-244243|0xfffffffffffc45ed]  <||@
  Comment 2297 816 JUMP ~[] destination: B81 -> B119  <||@
  Comment 2302 block B12 null  <||@
  Comment 2302 106 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2302 108 MOV [r15|QWORD + 668] y: -505185 size: DWORD  <||@
  Comment 2313 110 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2320 112 DEOPT info [bci:4]  <||@
  Comment 2320 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2325 [r13:0, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 4, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |- 
     stack:   |r10|DWORD     |                   |   |   |   |    <||@
  Comment 2326 block B60 null  <||@
  Comment 2326 592 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2326 594 r10|DWORD = MOVE input: int[-290867|0xfffffffffffb8fcd]  <||@
  Comment 2332 596 JUMP ~[] destination: B60 -> B62  <||@
  Comment 2337 block B41 null  <||@
  Comment 2337 392 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2337 394 r10|DWORD = MOVE input: int[-291091|0xfffffffffffb8eed]  <||@
  Comment 2343 396 JUMP ~[] destination: B41 -> B62  <||@
  Comment 2348 block B53 null  <||@
  Comment 2348 474 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2348 476 r10|DWORD = MOVE input: int[-294675|0xfffffffffffb80ed]  <||@
  Comment 2354 478 JUMP ~[] destination: B53 -> B62  <||@
  Comment 2359 block B61 null  <||@
  Comment 2359 598 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2359 600 r10|DWORD = MOVE input: int[-288275|0xfffffffffffb99ed]  <||@
  Comment 2365 602 JUMP ~[] destination: B61 -> B62  <||@
  Comment 2370 block B73 null  <||@
  Comment 2370 708 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2370 710 r8|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2380 712 r9|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2383 714 rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2388 716 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2393 718 r11|DWORD = MOVE input: int[-240915|0xfffffffffffc52ed]  <||@
  Comment 2399 720 JUMP ~[] destination: B73 -> B119  <||@
  Comment 2404 block B28 null  <||@
  Comment 2404 258 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2404 260 r10|DWORD = MOVE input: int[-284947|0xfffffffffffba6ed]  <||@
  Comment 2410 262 JUMP ~[] destination: B28 -> B34  <||@
  Comment 2410 block B34 null  <||@
  Comment 2410 344 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2410 346 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2417 348 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2424 350 DEOPT info [bci:32]  <||@
  Comment 2424 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2429 [r13:0, r14:0, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |- 
     stack:   |r14|QWORD[.]  |                   |   |   |   |    <||@
  Comment 2430 block B97 null  <||@
  Comment 2430 1020 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2430 1022 r8|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2440 1024 r9|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2443 1026 rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2448 1028 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2453 1030 r11|DWORD = MOVE input: int[-255251|0xfffffffffffc1aed]  <||@
  Comment 2459 1032 JUMP ~[] destination: B97 -> B119  <||@
  Comment 2464 block B94 null  <||@
  Comment 2464 954 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2464 956 r8|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2474 958 r11|DWORD = MOVE input: int[-266011|0xfffffffffffbf0e5]  <||@
  Comment 2480 960 r9|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 2485 962 rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2490 964 r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2495 966 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2500 968 JUMP ~[] destination: B94 -> B119  <||@
  Comment 2505 block B90 null  <||@
  Comment 2505 908 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2505 910 r8|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2515 912 r9|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2518 914 rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2523 916 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2528 918 r11|DWORD = MOVE input: int[-260891|0xfffffffffffc04e5]  <||@
  Comment 2534 920 JUMP ~[] destination: B90 -> B119  <||@
  Comment 2539 block B96 null  <||@
  Comment 2539 1006 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2539 1008 r8|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2549 1010 r9|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2552 1012 rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2557 1014 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2562 1016 r11|DWORD = MOVE input: int[-258067|0xfffffffffffc0fed]  <||@
  Comment 2568 1018 JUMP ~[] destination: B96 -> B119  <||@
  Comment 2573 block B121 null  <||@
  Comment 2573 1302 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2573 1304 r10|DWORD = MOVE input: int[-301875|0xfffffffffffb64cd]  <||@
  Comment 2579 1306 JUMP ~[] destination: B121 -> B122  <||@
  Comment 2579 block B122 null  <||@
  Comment 2579 1308 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2579 1310 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2586 1312 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2593 1314 DEOPT info [bci:0]  <||@
  Comment 2593 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2598 [r13:0, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 2599 block B98 null  <||@
  Comment 2599 1034 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2599 1036 r8|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2609 1038 r9|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2612 1040 rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2617 1042 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2622 1044 r11|DWORD = MOVE input: int[-251955|0xfffffffffffc27cd]  <||@
  Comment 2628 1046 JUMP ~[] destination: B98 -> B119  <||@
  Comment 2633 block B103 null  <||@
  Comment 2633 1114 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2633 1116 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1418920718]  <||@
  Comment 2633 {Object[d.a@1418920718]}  <||@
  Comment 2643 1118 r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2646 1120 r11|DWORD = MOVE input: int[-234300|0xfffffffffffc6cc4]  <||@
  Comment 2652 1122 r9|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 2657 1124 rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2662 1126 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2667 1128 JUMP ~[] destination: B103 -> B119  <||@
  Comment 2672 block B82 null  <||@
  Comment 2672 818 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2672 820 r8|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2682 822 r9|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2685 824 rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2690 826 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2695 828 r11|DWORD = MOVE input: int[-243987|0xfffffffffffc46ed]  <||@
  Comment 2701 830 JUMP ~[] destination: B82 -> B119  <||@
  Comment 2706 block B102 null  <||@
  Comment 2706 1100 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2706 1102 r8|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2716 1104 r9|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2719 1106 rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2724 1108 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2729 1110 r11|DWORD = MOVE input: int[-269363|0xfffffffffffbe3cd]  <||@
  Comment 2735 1112 JUMP ~[] destination: B102 -> B119  <||@
  Comment 2740 block B39 null  <||@
  Comment 2740 378 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2740 380 r10|DWORD = MOVE input: int[-289043|0xfffffffffffb96ed]  <||@
  Comment 2746 382 JUMP ~[] destination: B39 -> B62  <||@
  Comment 2751 block B79 null  <||@
  Comment 2751 776 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2751 778 r8|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2761 780 r9|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2764 782 rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2769 784 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2774 786 r11|DWORD = MOVE input: int[-248859|0xfffffffffffc33e5]  <||@
  Comment 2780 788 JUMP ~[] destination: B79 -> B119  <||@
  Comment 2785 block B50 null  <||@
  Comment 2785 454 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2785 456 r10|DWORD = MOVE input: int[-293651|0xfffffffffffb84ed]  <||@
  Comment 2791 458 JUMP ~[] destination: B50 -> B62  <||@
  Comment 2796 block B33 null  <||@
  Comment 2796 338 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2796 340 r10|DWORD = MOVE input: int[-284179|0xfffffffffffba9ed]  <||@
  Comment 2802 342 JUMP ~[] destination: B33 -> B34  <||@
  Comment 2807 block B107 null  <||@
  Comment 2807 1154 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2807 1156 r8|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2817 1158 r11|DWORD = MOVE input: int[-273683|0xfffffffffffbd2ed]  <||@
  Comment 2823 1160 r9|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 2828 1162 rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2833 1164 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2838 1166 JUMP ~[] destination: B107 -> B119  <||@
  Comment 2843 block B7 null  <||@
  Comment 2843 66 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2843 68 r10|DWORD = MOVE input: int[-301075|0xfffffffffffb67ed]  <||@
  Comment 2849 70 JUMP ~[] destination: B7 -> B122  <||@
  Comment 2854 block B45 null  <||@
  Comment 2854 424 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2854 426 r10|DWORD = MOVE input: int[-293395|0xfffffffffffb85ed]  <||@
  Comment 2860 428 JUMP ~[] destination: B45 -> B62  <||@
  Comment 2865 block B3 null  <||@
  Comment 2865 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2865 38 r10|DWORD = MOVE input: int[-297747|0xfffffffffffb74ed]  <||@
  Comment 2871 40 JUMP ~[] destination: B3 -> B122  <||@
  Comment 2876 block B111 null  <||@
  Comment 2876 1200 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2876 1202 r8|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2886 1204 r11|DWORD = MOVE input: int[-278291|0xfffffffffffbc0ed]  <||@
  Comment 2892 1206 r9|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 2897 1208 rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2902 1210 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2907 1212 JUMP ~[] destination: B111 -> B119  <||@
  Comment 2912 block B113 null  <||@
  Comment 2912 1220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2912 1222 r8|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2922 1224 r11|DWORD = MOVE input: int[-274995|0xfffffffffffbcdcd]  <||@
  Comment 2928 1226 r9|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 2933 1228 rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2938 1230 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2943 1232 JUMP ~[] destination: B113 -> B119  <||@
  Comment 2948 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2948 4  <||@
  Comment 2954 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 2954 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9851[java.util.AbstractCollection.toArray(Object[])]"
  method "HotSpotCompilation-9851[java.util.AbstractCollection.toArray(Object[])]"
  date 1527005225874
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107c38580 448b560849c1e203493bc20f85cfd8bcfe900f1f80000000000f1f800000000089842400c0feff4883ec4848896c24404c8bee48895424308502458b75084181fe0fad00f80f8547040000418b75208b34f50c000000413b750c0f85d10a0000418b7518448bd6443b520c0f8faa0600004181fe0fad00f80f85440400004c8bf2418b7520448b14f50c000000453b550c0f85550a000041837d18000f8cc2080000498b77604c8d5e284d3b5f700f87730500004d895f600f1886e80000004c8bde49b8406f05c0070000004d8b80a80000004c8906c74608e8ad00f849b800000000ffffffff4c89460c4489561444896618458b55144489561c49c1ed0344896e204d8bd34d8bde4c895424184c895c2410458b430c4489442424418bf04c8bce49ffc9493bf10f87090000004585c00f8583070000458b4a0844894c2428418b4b08894c242c48bb00e01b170100000041bb00000000e9cf00000066669081f9f52200f80f85dd0800004181f9e8ad00f80f85c6000000418b72208b04f518000000418b6a0c3be80f84b20700008b34f520000000448b2cf50c000000453b6a140f85c70800003bc50f8e2b0700008b34f5140000008b04f50c000000448bed45036a1c413bc50f8e41060000413bc50f86e70800008bc5ffc04189420c41896a1048c1e603428b74ae1048bb00e01b1701000000458bd34c8b5c241043897493104b8d74931048c1ee094488241e418bf2ffc68b4c242c448b4c2428448b4424244c8b542418448bde44895c240c453bc30f8f26ffffffe9b50100004181f919ef01f80f85b2000000418b4210813cc50800000073ef01f80f85c6070000418b72148b2cf5140000008b34f510000000448b2cc50c000000458bf5442bf6413bee0f8ef40600008b34c5180000008b2cf50c0000003b2cc5140000000f85460700008b2cf508000000458bf541ffc681fd8faf00f80f85890000008b34f510000000443b2cf50c0000000f83f606000044892cc510000000448934c50c00000048c1e603428b74ae1048bb00e01b1701000000458bd3e9fcfeffff4181f9e39e00f80f8587070000418b7214418504f4498bf248b8ffffffffffffffff0f1f8000000000e834dabcfe9048c1e8038bf0448b54240c48bb00e01b1701000000e9b3feffff81fdc8b101f80f85420000008b34f51c000000443b2cf50c0000000f833806000044892cc510000000448934c50c00000048c1e603428b74ae10448b54240c48bb00e01b1701000000e965feffff44897424088944240448c1e603418bd544892c2448b8ffffffffffffffff0f1f4000e8a4d9bcfe908b742404448b2c2444892cf510000000448b742408448934f50c00000048c1e8038bf0448b54240c48bb00e01b1701000000e906feffff817c2428e8ad00f84c8b5424180f852d000000418b42208b04c518000000413b420c0f85db060000488b442410488b6c24404883c44885055666c5fcc5f877c3817c242819ef01f80f8565020000418b4210813cc50800000073ef01f80f8509070000418b72148b14f5140000008b34f5100000008b04c50c0000002bc63bd00f8fc2060000488b442410488b6c24404883c4488505f865c5fcc5f877c34181fe7dee01f80f85b9010000418b75188b34f50c000000413b750c0f8567060000458b5514488b542430e9a5fbffff4181fe7dee01f80f85ac010000458b7518468b14f50c000000453b550c0f855204000041837d14000f8cc4050000458b5d104585db0f8c24040000428b34f50800000048b900e8dd2301000000483b0cf5b80200000f85f903000081fe8faf00f80f85b5000000428b34f5100000008b34f50c000000443bde0f8fe50500008974242c498b4f604c8d41384d3b47700f87810100004d8947600f1881f8000000488bf1488bce4c8d461849b9c8780fc0070000004d8b89a80000004c890ec7460819ef01f84489660c49c1e8034489461049c1ed0344896e1449b8987b0fc0070000004d8b80a80000004c894618c7462073ef01f844895e24c74628ffffffff4489562c44897630448976344c8bda4c8bd1488b542430e92bfbffff81fe3b3100f80f85170000004183fb010f8ded040000c744242c00000000e944ffffff81fec8b101f80f8534020000428b34f510000000443bde0f8f0e0300008974242ce91effffff448954242c48be680b00c007000000ba06000000b901000000e81be235ff90488bf0448b54242c488b542430e967faffff4181fec37100f80f85a8030000418b750c448b14f514000000488b542430e9ecf9ffff4889542418498bf548b8ffffffffffffffff6690e8ccd6bcfe904c8b5c24184c8bd0488b542430e962faffff4181f9e39e00f80f85c8010000418b421485c00f859b010000488b442410488b6c24404883c4488505b263c5fcc5f877c344895c24284489542424488954241848ba680b00c007000000488bf2ba0a000000b901000000e85de135ff90488bf0448b5c2428448b542424488b542418e94afeffff8b7208488b0cf5e000000049bb107c03c0060000004c3bd90f84c5010000498b4f60458bda41c1e302458d5b174183e3f84d63db4d8bc34c03c14d3b47700f878b0000004d894760410f18840bc0000000410f18840b00010000410f18840b40010000410f18840b800100004489510c48c7010100000089710848c7c610000000e9170000000f1f8400000000000f1f80000000004c892431488d76084c3bde7ff3488bf1817e08212400f80f85d00000004181fe0fad00f80f85080000004c8bf6e99ff8ffff488bd6e9d8fcffff48c1e603418bd2b901000000448954242ce860e035ff90488bf0448b54242c488b542430ebb049b80000000000000000458bcb488b4c2410488b54243041bbed39fcff45899f9c0200004d8987a8020000e83ee8bcfe9041bacd83fbff4589979c0200004d89a7a8020000e824e8bcfe9049b8000000000000000041bbedbbfbff448b4c240c488b4c2410488b542430ebb149b8000000000000000041bbcdbffbff448b4c240c488b4c2410488b542430eb90448954242c41c7879c020000cdb6fbff4d89a7a8020000e8c5e7bcfe9049bb5067f5bd0700000041c7879c020000e568fcff4d899fa8020000e8a3e7bcfe9049b80000000000000000458bcb488b4c2410488b54243041bbed45fcffe92fffffff41c7879c0200009f4af8ff4d89a7a8020000e869e7bcfe9041bacd8ffbffe926ffffff41baed8efbffe91bffffff41baed80fbffe910ffffff41baed99fbffe905ffffff49b80000000000000000458bcb488b4c2410488b54243041bbed52fcffe9c9feffff41baeda6fbff4589979c0200004d89a7a8020000e801e7bcfe9049b80000000000000000458bcb488b4c2410488b54243041bbed1afcffe98dfeffff49b8000000000000000041bbe5f0fbff448b4c240c488b4c24104c8b542418488b542430e964feffff49b80000000000000000458bcb488b4c2410488b54243041bbe504fcffe942feffff49b80000000000000000458bcb488b4c2410488b54243041bbed0ffcffe920feffff41bacd64fbff4589979c0200004d89a7a8020000e858e6bcfe9049b80000000000000000458bcb488b4c2410488b54243041bbcd27fcffe9e4fdffff49bb1066f5bd070000004d8bc341bbc46cfcff448b4c240c488b4c2410488b542430e9bdfdffff49b80000000000000000458bcb488b4c2410488b54243041bbed46fcffe99bfdffff49b80000000000000000458bcb488b4c2410488b54243041bbcde3fbffe979fdffff41baed96fbffe988fdffff49b80000000000000000458bcb488b4c2410488b54243041bbe533fcffe94cfdffff41baed84fbffe95bfdffff41baeda9fbffe973feffff49b8000000000000000041bbedd2fbff448b4c240c488b4c2410488b542430e912fdffff41baed67fbffe9edfeffff41baed85fbffe916fdffff41baed74fbffe9d7feffff49b8000000000000000041bbedc0fbff448b4c240c488b4c2410488b542430e9cdfcffff49b8000000000000000041bbcdcdfbff448b4c240c488b4c2410488b542430e9a9fcffffe8171501ff90e8f1e3bcfe90  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@55cef607 slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 stack:32|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 56 10 NULLCHECK [rdx|QWORD[.]] state [bci:0]  <||@
  Comment 56 [rdx:0, r13:0, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 56 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 58 12 r14|DWORD = MOV [r13|QWORD[.] + 8] size: DWORD  <||@
  Comment 62 14 CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed}  <||@
  Comment 62 {meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed}}  <||@
  Comment 69 16 BRANCH trueDestinationProbability: 0.9408274225153865 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4  <||@
  Comment 75 block B1 null  <||@
  Comment 75 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 75 20 rsi|DWORD[.] = MOV [r13|QWORD[.] + 32] size: DWORD  <||@
  Comment 79 22 rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 79 [rdx:0, r13:0, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 79 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 86 24 CMP (x: rsi|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD  <||@
  Comment 90 26 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 96 block B2 null  <||@
  Comment 96 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 96 30 rsi|DWORD = MOV [r13|QWORD[.] + 24] size: DWORD  <||@
  Comment 100 32 r10|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 103 34 JUMP ~[] destination: B2 -> B10  <||@
  Comment 103 block B10 null  <||@
  Comment 103 88 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 103 90 CMP (x: r10|DWORD, y: [rdx|QWORD[.] + 12]) size: DWORD  <||@
  Comment 107 92 BRANCH trueDestinationProbability: 2.759914994618166E-4 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B24  <||@
  Comment 113 block B24 null  <||@
  Comment 113 230 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 113 232 CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed}  <||@
  Comment 113 {meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed}}  <||@
  Comment 120 234 BRANCH trueDestinationProbability: 0.9408274225153865 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B36  <||@
  Comment 126 block B25 null  <||@
  Comment 126 236 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 126 238 r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 129 240 JUMP ~[] destination: B25 -> B26  <||@
  Comment 129 block B26 null  <||@
  Comment 129 242 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 129 244 rsi|DWORD[.] = MOV [r13|QWORD[.] + 32] size: DWORD  <||@
  Comment 133 246 r10|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:32]  <||@
  Comment 133 [rdx:0, r13:0, r14:0, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |- 
     stack:   |r14|QWORD[.]  |              |   |   |   |    <||@
  Comment 133 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 141 248 CMP (x: r10|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD  <||@
  Comment 145 250 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B33  <||@
  Comment 151 block B27 null  <||@
  Comment 151 252 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 151 254 CMP [r13|QWORD[.] + 24] y: 0 size: DWORD  <||@
  Comment 156 256 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29  <||@
  Comment 162 block B29 null  <||@
  Comment 162 264 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 162 266 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 166 268 r11|QWORD = LEA [rsi|QWORD + 40] size: QWORD  <||@
  Comment 170 270 CMP (x: r11|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 174 272 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31  <||@
  Comment 180 block B31 null  <||@
  Comment 180 294 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 180 296 MOV (x: [r15|QWORD + 96], y: r11|QWORD) size: QWORD  <||@
  Comment 184 298 AMD64PREFETCH ~[rsi|QWORD + 232] instr: 0  <||@
  Comment 191 300 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 191 302 JUMP ~[] destination: B31 -> B32  <||@
  Comment 191 block B32 null  <||@
  Comment 191 304 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 191 306 r11|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 194 308 r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>}  <||@
  Comment 194 {meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>}}  <||@
  Comment 204 310 r8|QWORD = MOV [r8|QWORD + 168] size: QWORD  <||@
  Comment 211 312 MOV (x: [rsi|QWORD[*]], y: r8|QWORD) size: QWORD  <||@
  Comment 214 314 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed}  <||@
  Comment 214 {meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed}}  <||@
  Comment 221 316 r8|QWORD = MOVE input: long[-4294967296|0xffffffff00000000]  <||@
  Comment 231 318 MOV (x: [rsi|QWORD[*] + 12], y: r8|QWORD) size: QWORD  <||@
  Comment 235 320 MOV (x: [rsi|QWORD[*] + 20], y: r10|DWORD) size: DWORD  <||@
  Comment 239 322 MOV (x: [rsi|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 243 324 r10|DWORD = MOV [r13|QWORD[.] + 20] size: DWORD  <||@
  Comment 247 326 MOV (x: [rsi|QWORD[*] + 28], y: r10|DWORD) size: DWORD  <||@
  Comment 251 328 r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@7a82eb53 encoding: base: 0 shift: 3  <||@
  Comment 255 330 MOV (x: [rsi|QWORD[*] + 32], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 259 332 r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 262 334 r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 265 336 JUMP ~[] destination: B32 -> B64  <||@
  Comment 265 block B64 null  <||@
  Comment 265 628 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 265 630 stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 270 632 stack:64|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 275 634 r8|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD  <||@
  Comment 279 636 stack:44|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 284 638 rsi|QWORD = MOV r8|DWORD size: DWORD  <||@
  Comment 287 640 r9|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 293 642 CMP (x: rsi|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 296 644 BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B64 -> B68 falseDestination: B64 -> B66  <||@
  Comment 302 block B66 null  <||@
  Comment 302 650 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 302 652 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 305 654 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B66 -> B68 falseDestination: B66 -> B120  <||@
  Comment 311 block B68 null  <||@
  Comment 311 660 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 311 662 r9|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD state [bci:37]  <||@
  Comment 311 [rdx:0, r10:0, r11:0, stack:16, stack:24, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 37, duringCall: false, rethrow: false]
              |0             |1             |2  |3             |4  |5 
     locals:  |-             |rdx|QWORD[.]  |-  |r11|QWORD[.]  |-  |- 
     stack:   |r10|QWORD[.]  |              |   |              |   |    <||@
  Comment 311 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 315 664 stack:40|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 320 666 rcx|DWORD = MOV [r11|QWORD[.] + 8] size: DWORD  <||@
  Comment 324 668 stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 328 670 rbx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 338 672 r11|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 344 674 JUMP ~[] destination: B68 -> B69  <||@
  Comment 349 block B70 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 349 684 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 352 686 CMP rcx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 352 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 358 688 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B103  <||@
  Comment 364 block B71 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 364 690 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 364 692 CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed}  <||@
  Comment 364 {meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed}}  <||@
  Comment 371 694 BRANCH trueDestinationProbability: 0.8936836714032184 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B83  <||@
  Comment 377 block B72 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 377 696 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 377 698 rsi|DWORD[.] = MOV [r10|QWORD[.] + 32] size: DWORD  <||@
  Comment 381 700 rax|DWORD = MOV [rsi|DWORD[.] * 8 + 24] size: DWORD state [bci:42]  <||@
  Comment 381 [rsi:0, r10:0, stack:16, stack:24, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3                  |4             |5         
     locals:  |-  |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |r10|QWORD[.]  |r11|DWORD   <||@
  Comment 381 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 388 702 rbp|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 392 704 CMP (x: rbp|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 394 706 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74  <||@
  Comment 400 block B74 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 400 722 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 400 724 rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 32] size: DWORD  <||@
  Comment 407 726 r13|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:42]  <||@
  Comment 407 [rsi:0, r10:0, stack:16, stack:24, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3                  |4             |5         
     locals:  |-  |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |r10|QWORD[.]  |r11|DWORD   <||@
  Comment 407 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 415 728 CMP (x: r13|DWORD, y: [r10|QWORD[.] + 20]) size: DWORD  <||@
  Comment 419 730 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B82  <||@
  Comment 425 block B75 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 425 732 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 425 734 CMP (x: rax|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 427 736 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B75 -> B76 falseDestination: B75 -> B81  <||@
  Comment 433 block B76 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 433 738 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 433 740 rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 440 742 rax|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:42]  <||@
  Comment 440 [rsi:0, r10:0, stack:16, stack:24, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3                  |4             |5         
     locals:  |-  |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |r10|QWORD[.]  |r11|DWORD   <||@
  Comment 440 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 447 744 r13|DWORD = ADD (x: rbp|DWORD, ~y: [r10|QWORD[.] + 28]) size: DWORD  <||@
  Comment 454 746 CMP (x: rax|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 457 748 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B76 -> B77 falseDestination: B76 -> B80  <||@
  Comment 463 block B77 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 463 750 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 463 752 CMP (x: rax|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 466 754 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B77 -> B78 falseDestination: B77 -> B79  <||@
  Comment 472 block B78 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 472 756 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 472 758 rax|DWORD = INC rbp|DWORD size: DWORD  <||@
  Comment 476 760 MOV (x: [r10|QWORD[.] + 12], y: rax|DWORD) size: DWORD  <||@
  Comment 480 762 MOV (x: [r10|QWORD[.] + 16], y: rbp|DWORD) size: DWORD  <||@
  Comment 484 764 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7a82eb53 encoding: base: 0 shift: 3  <||@
  Comment 488 766 rsi|DWORD[.] = MOV [rsi|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD  <||@
  Comment 493 768 rbx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 503 770 r10|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 506 774 JUMP ~[] destination: B78 -> B101  <||@
  Comment 506 block B101 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 506 1076 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 506 1072 r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 511 1078 MOV (x: [r11|QWORD[.] + r10|DWORD * 4 + 16], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 516 1080 rsi|QWORD[.] = LEA [r11|QWORD[.] + r10|DWORD * 4 + 16] size: QWORD  <||@
  Comment 521 1082 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 525 1084 MOVB (x: [rsi|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 529 1086 rsi|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 534 1088 rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 538 1090 r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 543 1092 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 548 1094 r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 553 1096 r11|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 556 1098 JUMP ~[] destination: B101 -> B69  <||@
  Comment 556 block B69 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 556 676 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 556 678 stack:68|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 561 680 CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 564 682 BRANCH trueDestinationProbability: 0.6985273317247691 condition: > trueDestination: B69 -> B70 falseDestination: B69 -> B104  <||@
  Comment 575 block B83 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 575 832 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 575 834 CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed}  <||@
  Comment 575 {meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed}}  <||@
  Comment 582 836 BRANCH trueDestinationProbability: 0.9213533497647322 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B99  <||@
  Comment 588 block B84 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 588 838 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 588 840 rax|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 592 842 CMP [rax|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} state [bci:42]  <||@
  Comment 592 [rax:0, r10:0, stack:16, stack:24, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3                  |4             |5         
     locals:  |-  |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |r10|QWORD[.]  |r11|DWORD   <||@
  Comment 592 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 592 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}}  <||@
  Comment 603 844 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B98  <||@
  Comment 609 block B85 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 609 846 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 609 848 rsi|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD  <||@
  Comment 613 850 rbp|DWORD = MOV [rsi|DWORD[.] * 8 + 20] size: DWORD state [bci:42]  <||@
  Comment 613 [rax:0, rsi:0, r10:0, stack:16, stack:24, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3                  |4             |5         
     locals:  |-  |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |r10|QWORD[.]  |r11|DWORD   <||@
  Comment 613 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 620 852 rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 627 854 r13|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 635 856 r14|DWORD = SUB (x: r13|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 641 858 CMP (x: rbp|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 644 860 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B97  <||@
  Comment 650 block B86 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 650 862 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 650 864 rsi|DWORD[.] = MOV [rax|DWORD[.] * 8 + 24] size: DWORD  <||@
  Comment 657 866 rbp|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:42]  <||@
  Comment 657 [rax:0, rsi:0, r10:0, stack:16, stack:24, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3                  |4             |5         
     locals:  |-  |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |r10|QWORD[.]  |r11|DWORD   <||@
  Comment 657 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 664 868 CMP (x: rbp|DWORD, y: [rax|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 671 870 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B96  <||@
  Comment 677 block B87 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 677 872 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 677 874 rbp|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 684 876 r14|DWORD = INC r13|DWORD size: DWORD  <||@
  Comment 690 878 CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}  <||@
  Comment 690 {meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}}  <||@
  Comment 696 880 BRANCH trueDestinationProbability: 0.9304948647614187 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B91  <||@
  Comment 702 block B88 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 702 882 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 702 884 rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 709 886 CMP (x: r13|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:42]  <||@
  Comment 709 [rax:0, rsi:0, r10:0, stack:16, stack:24, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3                  |4             |5         
     locals:  |-  |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |r10|QWORD[.]  |r11|DWORD   <||@
  Comment 709 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 717 888 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B88 -> B89 falseDestination: B88 -> B90  <||@
  Comment 723 block B89 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 723 890 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 723 892 MOV (x: [rax|DWORD[.] * 8 + 16], y: r13|DWORD) size: DWORD  <||@
  Comment 731 894 MOV (x: [rax|DWORD[.] * 8 + 12], y: r14|DWORD) size: DWORD  <||@
  Comment 739 896 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7a82eb53 encoding: base: 0 shift: 3  <||@
  Comment 743 898 rsi|DWORD[.] = MOV [rsi|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD  <||@
  Comment 748 900 rbx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 758 902 r10|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 761 906 JUMP ~[] destination: B89 -> B101  <||@
  Comment 766 block B99 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 766 1048 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 766 1050 CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed}  <||@
  Comment 766 {meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed}}  <||@
  Comment 773 1052 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B102  <||@
  Comment 779 block B100 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 779 1054 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 779 1056 rsi|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD  <||@
  Comment 783 1058 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:42]  <||@
  Comment 783 [r10:0, stack:16, stack:24, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3                  |4             |5              
     locals:  |-  |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |r10|QWORD[.]  |stack:68|DWORD   <||@
  Comment 783 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 787 1060 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 790 1062 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.next()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:114]  <||@
  Comment 790 6  <||@
  Comment 807 {HotSpotMethod<Iterator.next()>}  <||@
  Comment 812 [stack:16, stack:24, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3                  |4                  |5              
     locals:  |-                  |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |stack:56|QWORD[.]  |stack:68|DWORD 
     stack:   |stack:64|QWORD[.]  |stack:68|DWORD     |   |                   |                   |                 <||@
  Comment 813 1064 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7a82eb53 encoding: base: 0 shift: 3  <||@
  Comment 817 1066 rsi|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD  <||@
  Comment 819 1068 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 824 1070 rbx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 834 1074 JUMP ~[] destination: B100 -> B101  <||@
  Comment 839 block B91 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 839 922 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 839 924 CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}  <||@
  Comment 839 {meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}}  <||@
  Comment 845 926 BRANCH trueDestinationProbability: 0.9931451844203526 condition: = trueDestination: B91 -> B92 falseDestination: B91 -> B95  <||@
  Comment 851 block B92 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 851 928 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 851 930 rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 28] size: DWORD  <||@
  Comment 858 932 CMP (x: r13|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:42]  <||@
  Comment 858 [rax:0, rsi:0, stack:16, stack:24, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3                  |4                  |5              
     locals:  |-  |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |stack:56|QWORD[.]  |stack:68|DWORD   <||@
  Comment 858 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 866 934 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B92 -> B93 falseDestination: B92 -> B94  <||@
  Comment 872 block B93 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 872 936 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 872 938 MOV (x: [rax|DWORD[.] * 8 + 16], y: r13|DWORD) size: DWORD  <||@
  Comment 880 940 MOV (x: [rax|DWORD[.] * 8 + 12], y: r14|DWORD) size: DWORD  <||@
  Comment 888 942 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7a82eb53 encoding: base: 0 shift: 3  <||@
  Comment 892 944 rsi|DWORD[.] = MOV [rsi|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD  <||@
  Comment 897 946 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 902 948 rbx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 912 952 JUMP ~[] destination: B93 -> B101  <||@
  Comment 917 block B95 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 917 970 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 917 972 stack:72|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 922 974 stack:76|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD  <||@
  Comment 926 976 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7a82eb53 encoding: base: 0 shift: 3  <||@
  Comment 930 978 rdx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 933 980 stack:80|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 937 982 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractList.get(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:14, 11, 114]  <||@
  Comment 937 7  <||@
  Comment 951 {HotSpotMethod<AbstractList.get(int)>}  <||@
  Comment 956 [stack:4, stack:16, stack:24, stack:48]at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14, duringCall: true, rethrow: false]
              |0                  |1               |2 
     locals:  |stack:76|DWORD[.]  |stack:80|DWORD  |- 
  at java.util.SubList$1.next(AbstractList.java:707) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3                  |4                  |5              
     locals:  |-                  |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |stack:56|QWORD[.]  |stack:68|DWORD 
     stack:   |stack:64|QWORD[.]  |stack:68|DWORD     |   |                   |                   |                 <||@
  Comment 957 984 rsi|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD  <||@
  Comment 961 986 r13|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 965 988 MOV (x: [rsi|DWORD[.] * 8 + 16], y: r13|DWORD) size: DWORD  <||@
  Comment 973 990 r14|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 978 992 MOV (x: [rsi|DWORD[.] * 8 + 12], y: r14|DWORD) size: DWORD  <||@
  Comment 986 994 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7a82eb53 encoding: base: 0 shift: 3  <||@
  Comment 990 996 rsi|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD  <||@
  Comment 992 998 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 997 1000 rbx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1007 1004 JUMP ~[] destination: B95 -> B101  <||@
  Comment 1012 block B104 null  <||@
  Comment 1012 1130 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1012 1132 CMP stack:40|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed}  <||@
  Comment 1012 {meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed}}  <||@
  Comment 1020 1138 r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1025 1134 BRANCH trueDestinationProbability: 0.9408014571948998 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B108  <||@
  Comment 1031 block B105 null  <||@
  Comment 1031 1136 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1031 1140 rax|DWORD[.] = MOV [r10|QWORD[.] + 32] size: DWORD  <||@
  Comment 1035 1142 rax|DWORD = MOV [rax|DWORD[.] * 8 + 24] size: DWORD state [bci:42]  <||@
  Comment 1035 [r10:0, stack:16, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3                  |4             |5              
     locals:  |-  |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |r10|QWORD[.]  |stack:68|DWORD   <||@
  Comment 1035 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1042 1144 CMP (x: rax|DWORD, y: [r10|QWORD[.] + 12]) size: DWORD  <||@
  Comment 1046 1146 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B107  <||@
  Comment 1052 block B106 null  <||@
  Comment 1052 1148 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1052 1150 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1057 1152 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1066 12  <||@
  Comment 1076 block B108 null  <||@
  Comment 1076 1168 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1076 1172 CMP stack:40|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed}  <||@
  Comment 1076 {meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed}}  <||@
  Comment 1084 1174 BRANCH trueDestinationProbability: 0.8652680652680653 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B114  <||@
  Comment 1090 block B109 null  <||@
  Comment 1090 1176 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1090 1178 rax|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 1094 1180 CMP [rax|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} state [bci:42]  <||@
  Comment 1094 [rax:0, r10:0, stack:16, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3                  |4             |5              
     locals:  |-  |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |r10|QWORD[.]  |stack:68|DWORD   <||@
  Comment 1094 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1094 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}}  <||@
  Comment 1105 1182 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B109 -> B110 falseDestination: B109 -> B113  <||@
  Comment 1111 block B110 null  <||@
  Comment 1111 1184 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1111 1186 rsi|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD  <||@
  Comment 1115 1188 rdx|DWORD = MOV [rsi|DWORD[.] * 8 + 20] size: DWORD state [bci:42]  <||@
  Comment 1115 [rax:0, rsi:0, r10:0, stack:16, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3                  |4             |5              
     locals:  |-  |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |r10|QWORD[.]  |stack:68|DWORD   <||@
  Comment 1115 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1122 1190 rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1129 1192 rax|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1136 1194 rax|DWORD = SUB (x: rax|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 1138 1196 CMP (x: rdx|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1140 1198 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B110 -> B111 falseDestination: B110 -> B112  <||@
  Comment 1146 block B112 null  <||@
  Comment 1146 1214 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1146 1216 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1151 1218 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1160 12  <||@
  Comment 1170 block B4 null  <||@
  Comment 1170 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1170 44 CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed}  <||@
  Comment 1170 {meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed}}  <||@
  Comment 1177 46 BRANCH trueDestinationProbability: 0.8652052238805972 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B8  <||@
  Comment 1183 block B5 null  <||@
  Comment 1183 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1183 50 rsi|DWORD[.] = MOV [r13|QWORD[.] + 24] size: DWORD  <||@
  Comment 1187 52 rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 1187 [r13:0, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 1187 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1194 54 CMP (x: rsi|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD  <||@
  Comment 1198 56 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7  <||@
  Comment 1204 block B6 null  <||@
  Comment 1204 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1204 60 r10|DWORD = MOV [r13|QWORD[.] + 20] size: DWORD  <||@
  Comment 1208 62 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1213 64 JUMP ~[] destination: B6 -> B10  <||@
  Comment 1218 block B36 null  <||@
  Comment 1218 356 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1218 358 CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed}  <||@
  Comment 1218 {meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed}}  <||@
  Comment 1225 360 BRANCH trueDestinationProbability: 0.8652052238805972 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B63  <||@
  Comment 1231 block B37 null  <||@
  Comment 1231 362 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1231 364 r14|DWORD[.] = MOV [r13|QWORD[.] + 24] size: DWORD  <||@
  Comment 1235 366 r10|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD state [bci:32]  <||@
  Comment 1235 [rdx:0, r13:0, r14:0, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |- 
     stack:   |rdx|QWORD[.]  |                   |   |   |   |    <||@
  Comment 1235 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1243 368 CMP (x: r10|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD  <||@
  Comment 1247 370 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B61  <||@
  Comment 1253 block B38 null  <||@
  Comment 1253 372 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1253 374 CMP [r13|QWORD[.] + 20] y: 0 size: DWORD  <||@
  Comment 1258 376 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40  <||@
  Comment 1264 block B40 null  <||@
  Comment 1264 384 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1264 386 r11|DWORD = MOV [r13|QWORD[.] + 16] size: DWORD  <||@
  Comment 1268 388 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 1271 390 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42  <||@
  Comment 1277 block B42 null  <||@
  Comment 1277 398 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1277 400 rsi|DWORD = MOV [r14|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 1285 402 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<AbstractList.listIterator(int)>}  <||@
  Comment 1285 {meta{HotSpotMethod<AbstractList.listIterator(int)>}}  <||@
  Comment 1295 404 CMP (x: rcx|QWORD, y: [rsi|DWORD * 8 + 696]) size: QWORD  <||@
  Comment 1303 406 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B60  <||@
  Comment 1309 block B43 null  <||@
  Comment 1309 408 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1309 410 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}  <||@
  Comment 1309 {meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}}  <||@
  Comment 1315 412 BRANCH trueDestinationProbability: 0.5044648172401477 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B47  <||@
  Comment 1321 block B44 null  <||@
  Comment 1321 414 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1321 416 rsi|DWORD[.] = MOV [r14|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1329 418 rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:32]  <||@
  Comment 1329 [rdx:0, r13:0, r14:0, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |- 
     stack:   |rdx|QWORD[.]  |                   |   |   |   |    <||@
  Comment 1329 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1336 420 CMP (x: r11|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1339 422 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46  <||@
  Comment 1345 block B46 null  <||@
  Comment 1345 430 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1345 432 stack:36|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1349 434 JUMP ~[] destination: B46 -> B55  <||@
  Comment 1349 block B55 null  <||@
  Comment 1349 486 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1349 488 rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1353 490 r8|QWORD = LEA [rcx|QWORD + 56] size: QWORD  <||@
  Comment 1357 492 CMP (x: r8|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1361 494 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57  <||@
  Comment 1367 block B57 null  <||@
  Comment 1367 524 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1367 526 MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD  <||@
  Comment 1371 528 AMD64PREFETCH ~[rcx|QWORD + 248] instr: 0  <||@
  Comment 1378 530 rsi|QWORD[*] = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 1381 532 JUMP ~[] destination: B57 -> B58  <||@
  Comment 1381 block B58 null  <||@
  Comment 1381 534 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1381 536 rcx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1384 538 r8|QWORD[*] = LEA [rsi|QWORD[*] + 24] size: QWORD  <||@
  Comment 1388 540 r8|QWORD[.] = MOVE r8|QWORD[*] moveKind: QWORD  <||@
  Comment 1388 542 r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/SubList$1;, resolved>}  <||@
  Comment 1388 {meta{HotSpotType<Ljava/util/SubList$1;, resolved>}}  <||@
  Comment 1398 544 r9|QWORD = MOV [r9|QWORD + 168] size: QWORD  <||@
  Comment 1405 546 MOV (x: [rsi|QWORD[*]], y: r9|QWORD) size: QWORD  <||@
  Comment 1408 548 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed}  <||@
  Comment 1408 {meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed}}  <||@
  Comment 1415 550 MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 1419 552 r8|DWORD[.] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7a82eb53 encoding: base: 0 shift: 3  <||@
  Comment 1423 554 MOV (x: [rsi|QWORD[*] + 16], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 1427 556 r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@7a82eb53 encoding: base: 0 shift: 3  <||@
  Comment 1431 558 MOV (x: [rsi|QWORD[*] + 20], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 1435 560 r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>}  <||@
  Comment 1435 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>}}  <||@
  Comment 1445 562 r8|QWORD = MOV [r8|QWORD + 168] size: QWORD  <||@
  Comment 1452 564 MOV (x: [rsi|QWORD[*] + 24], y: r8|QWORD) size: QWORD  <||@
  Comment 1456 566 MOV [rsi|QWORD[*] + 32] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}  <||@
  Comment 1456 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}}  <||@
  Comment 1463 568 MOV (x: [rsi|QWORD[*] + 36], y: r11|DWORD) size: DWORD  <||@
  Comment 1467 570 MOV [rsi|QWORD[*] + 40] y: -1 size: DWORD  <||@
  Comment 1474 572 MOV (x: [rsi|QWORD[*] + 44], y: r10|DWORD) size: DWORD  <||@
  Comment 1478 574 MOV (x: [rsi|QWORD[*] + 48], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 1482 576 MOV (x: [rsi|QWORD[*] + 52], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 1486 578 r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1489 580 r10|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1492 582 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1497 584 JUMP ~[] destination: B58 -> B64  <||@
  Comment 1502 block B47 null  <||@
  Comment 1502 436 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1502 438 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed}  <||@
  Comment 1502 {meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed}}  <||@
  Comment 1508 440 BRANCH trueDestinationProbability: 0.5252282556463239 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B51  <||@
  Comment 1514 block B48 null  <||@
  Comment 1514 442 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1514 444 CMP r11|DWORD y: 1 size: DWORD  <||@
  Comment 1518 446 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50  <||@
  Comment 1524 block B49 null  <||@
  Comment 1524 448 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1524 450 stack:36|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1532 452 JUMP ~[] destination: B49 -> B55  <||@
  Comment 1537 block B51 null  <||@
  Comment 1537 460 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1537 462 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}  <||@
  Comment 1537 {meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}}  <||@
  Comment 1543 464 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B59  <||@
  Comment 1549 block B52 null  <||@
  Comment 1549 466 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1549 468 rsi|DWORD = MOV [r14|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1557 470 CMP (x: r11|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1560 472 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54  <||@
  Comment 1566 block B54 null  <||@
  Comment 1566 480 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1566 482 stack:36|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1570 484 JUMP ~[] destination: B54 -> B55  <||@
  Comment 1575 block B30 null  <||@
  Comment 1575 274 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1575 276 stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1580 278 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1580 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1590 280 rdx|DWORD = MOVE input: int[6|0x6]  <||@
  Comment 1595 282 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1600 284 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:32]  <||@
  Comment 1600 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1605 [r13:0, r14:0, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |- 
     stack:   |r14|QWORD[.]  |                   |   |   |   |    <||@
  Comment 1606 286 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1609 288 r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1614 290 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1619 292 JUMP ~[] destination: B30 -> B32  <||@
  Comment 1624 block B8 null  <||@
  Comment 1624 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1624 74 CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashSet;, resolved>;compressed}  <||@
  Comment 1624 {meta{HotSpotType<Ljava/util/HashSet;, resolved>;compressed}}  <||@
  Comment 1631 76 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B121  <||@
  Comment 1637 block B9 null  <||@
  Comment 1637 78 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1637 80 rsi|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 1641 82 r10|DWORD = MOV [rsi|DWORD[.] * 8 + 20] size: DWORD state [bci:0]  <||@
  Comment 1641 [r13:0, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 1641 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1649 84 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1654 86 JUMP ~[] destination: B9 -> B10  <||@
  Comment 1659 block B63 null  <||@
  Comment 1659 612 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1659 614 stack:56|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1664 616 rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1667 618 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractCollection.iterator()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:34]  <||@
  Comment 1667 7  <||@
  Comment 1679 {HotSpotMethod<AbstractCollection.iterator()>}  <||@
  Comment 1684 [stack:24, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34, duringCall: true, rethrow: false]
              |0  |1                  |2  |3                  |4  |5 
     locals:  |-  |stack:32|QWORD[.]  |-  |stack:56|QWORD[.]  |-  |-   <||@
  Comment 1685 620 r11|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1690 622 r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1693 624 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1698 626 JUMP ~[] destination: B63 -> B64  <||@
  Comment 1703 block B114 null  <||@
  Comment 1703 1234 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1703 1238 CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed}  <||@
  Comment 1703 {meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed}}  <||@
  Comment 1710 1240 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B114 -> B115 falseDestination: B114 -> B118  <||@
  Comment 1716 block B115 null  <||@
  Comment 1716 1242 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1716 1244 rax|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD  <||@
  Comment 1720 1246 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 1722 1248 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117  <||@
  Comment 1728 block B116 null  <||@
  Comment 1728 1250 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1728 1252 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1733 1254 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1742 12  <||@
  Comment 1752 block B56 null  <||@
  Comment 1752 496 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1752 498 stack:40|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1757 500 stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1762 502 stack:56|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1767 504 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1767 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1777 506 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1780 508 rdx|DWORD = MOVE input: int[10|0xa]  <||@
  Comment 1785 510 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1790 512 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 2, 34, 15, 2, 1, 34]  <||@
  Comment 1790 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1795 [r13:0, r14:0, stack:24, stack:48]at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9, duringCall: false, rethrow: false]
              |0               |1              
     locals:  |r14|DWORD[.]    |stack:40|DWORD 
     stack:   |stack:40|DWORD  |stack:36|DWORD 
  at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2, duringCall: true, rethrow: false]
              |0             |1              
     locals:  |r14|DWORD[.]  |stack:40|DWORD 
  at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34, duringCall: true, rethrow: false]
              |0                                                                             |1  |2 
     locals:  |-                                                                             |-  |- 
     stack:   |vobject:SubList$1:0{val$index=int[0|0x0],i=Object[null],this$0=r13|QWORD[.]}  |   |  
  at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15, duringCall: true, rethrow: false]
              |0                                                                             |1 
     locals:  |-                                                                             |- 
     stack:   |vobject:SubList$1:0{val$index=int[0|0x0],i=Object[null],this$0=r13|QWORD[.]}  |  
  at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2, duringCall: true, rethrow: false]
              |0            
     locals:  |r13|QWORD[.] 
  at java.util.SubList.iterator(AbstractList.java:691) [bci: 1, duringCall: true, rethrow: false]
              |0            
     locals:  |r13|QWORD[.] 
  at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34, duringCall: true, rethrow: false]
              |0  |1                  |2  |3                  |4  |5 
     locals:  |-  |stack:32|QWORD[.]  |-  |stack:56|QWORD[.]  |-  |-   <||@
  Comment 1796 514 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1799 516 r11|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1804 518 r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1809 520 rdx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1814 522 JUMP ~[] destination: B56 -> B58  <||@
  Comment 1819 block B11 null  <||@
  Comment 1819 94 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1819 96 rsi|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD  <||@
  Comment 1822 98 rcx|QWORD[.] = MOV [rsi|DWORD * 8 + 224] size: QWORD  <||@
  Comment 1830 100 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:void]  <||@
  Comment 1830 {Object[Class:void]}  <||@
  Comment 1840 102 CMP (x: r11|QWORD[.], y: rcx|QWORD[.]) size: QWORD  <||@
  Comment 1843 104 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13  <||@
  Comment 1849 block B13 null  <||@
  Comment 1849 114 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1849 116 rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1853 118 r11|DWORD = SHL r10|DWORD y: 2 size: DWORD  <||@
  Comment 1860 120 r11|DWORD = LEA [r11|DWORD + 23] size: DWORD  <||@
  Comment 1864 122 r11|DWORD = AND r11|DWORD y: -8 size: DWORD  <||@
  Comment 1868 124 r11|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 1871 126 r8|QWORD = ADD (x: r11|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1877 128 CMP (x: r8|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1881 130 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15  <||@
  Comment 1887 block B15 null  <||@
  Comment 1887 152 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1887 154 MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD  <||@
  Comment 1891 156 AMD64PREFETCH ~[r11|QWORD + rcx|QWORD * 1 + 192] instr: 0  <||@
  Comment 1900 158 AMD64PREFETCH ~[r11|QWORD + rcx|QWORD * 1 + 256] instr: 0  <||@
  Comment 1909 160 AMD64PREFETCH ~[r11|QWORD + rcx|QWORD * 1 + 320] instr: 0  <||@
  Comment 1918 162 AMD64PREFETCH ~[r11|QWORD + rcx|QWORD * 1 + 384] instr: 0  <||@
  Comment 1927 164 MOV (x: [rcx|QWORD + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 1931 166 MOV [rcx|QWORD] y: 1 size: QWORD  <||@
  Comment 1938 168 MOV (x: [rcx|QWORD + 8], y: rsi|DWORD) size: DWORD  <||@
  Comment 1941 170 rsi|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 1948 172 JUMP ~[] destination: B15 -> B16  <||@
  Comment 1953 block B17 loop 0 depth 1 header:2021|LoopBegin  <||@
  Comment 1953 180 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1968 182 MOV (x: [rcx|QWORD + rsi|QWORD * 1], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1972 184 rsi|QWORD = LEA [rsi|QWORD + 8] size: QWORD  <||@
  Comment 1976 186 JUMP ~[] destination: B17 -> B16  <||@
  Comment 1976 block B16 loop 0 depth 1 header:2021|LoopBegin  <||@
  Comment 1976 174 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1976 176 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1979 178 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18  <||@
  Comment 1981 block B18 null  <||@
  Comment 1981 188 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1981 190 rcx|QWORD[.] = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 1981 192 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1984 194 JUMP ~[] destination: B18 -> B19  <||@
  Comment 1984 block B19 null  <||@
  Comment 1984 196 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1984 198 CMP [rsi|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Class;, resolved>;compressed}  <||@
  Comment 1984 {meta{HotSpotType<[Ljava/lang/Class;, resolved>;compressed}}  <||@
  Comment 1991 200 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B23  <||@
  Comment 1997 block B20 null  <||@
  Comment 1997 202 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1997 204 CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed}  <||@
  Comment 1997 {meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed}}  <||@
  Comment 2004 206 BRANCH trueDestinationProbability: 0.9408274225153865 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22  <||@
  Comment 2010 block B21 null  <||@
  Comment 2010 208 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2010 210 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2013 212 JUMP ~[] destination: B21 -> B26  <||@
  Comment 2018 block B22 null  <||@
  Comment 2018 214 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2018 216 rdx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2021 218 JUMP ~[] destination: B22 -> B36  <||@
  Comment 2026 block B14 null  <||@
  Comment 2026 132 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2026 134 rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@7a82eb53 encoding: base: 0 shift: 3  <||@
  Comment 2030 136 rdx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2033 138 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2038 140 stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2043 142 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:4]  <||@
  Comment 2043 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2048 [r13:0, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 4, duringCall: false, rethrow: false]
              |0               |1                  |2  |3  |4  |5 
     locals:  |r13|QWORD[.]    |stack:32|QWORD[.]  |-  |-  |-  |- 
     stack:   |stack:36|DWORD  |                   |   |   |   |    <||@
  Comment 2049 144 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2052 146 r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2057 148 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2062 150 JUMP ~[] destination: B14 -> B19  <||@
  Comment 2064 block B80 null  <||@
  Comment 2064 790 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2064 792 r8|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2074 794 r9|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2077 796 rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2082 798 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2087 800 r11|DWORD = MOVE input: int[-247315|0xfffffffffffc39ed]  <||@
  Comment 2093 802 JUMP ~[] destination: B80 -> B119  <||@
  Comment 2093 block B119 null  <||@
  Comment 2093 1284 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 2093 1286 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 2100 1288 MOV (x: [r15|QWORD + 680], y: r8|QWORD[.]) size: QWORD  <||@
  Comment 2107 1290 DEOPT info [bci:42]  <||@
  Comment 2107 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2112 [rcx:0, rdx:0, r10:0]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1             |2  |3             |4             |5        
     locals:  |-  |rdx|QWORD[.]  |-  |rcx|QWORD[.]  |r10|QWORD[.]  |r9|DWORD   <||@
  Comment 2113 block B59 null  <||@
  Comment 2113 586 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2113 588 r10|DWORD = MOVE input: int[-293939|0xfffffffffffb83cd]  <||@
  Comment 2119 590 JUMP ~[] destination: B59 -> B62  <||@
  Comment 2119 block B62 null  <||@
  Comment 2119 604 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2119 606 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2126 608 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2133 610 DEOPT info [bci:32]  <||@
  Comment 2133 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2138 [rdx:0, r13:0, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |- 
     stack:   |rdx|QWORD[.]  |                   |   |   |   |    <||@
  Comment 2139 block B117 null  <||@
  Comment 2139 1256 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2139 1258 r8|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2149 1260 r11|DWORD = MOVE input: int[-279571|0xfffffffffffbbbed]  <||@
  Comment 2155 1262 r9|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 2160 1264 rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2165 1266 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2170 1268 JUMP ~[] destination: B117 -> B119  <||@
  Comment 2172 block B118 null  <||@
  Comment 2172 1270 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2172 1272 r8|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2182 1274 r11|DWORD = MOVE input: int[-278579|0xfffffffffffbbfcd]  <||@
  Comment 2188 1276 r9|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 2193 1278 rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2198 1280 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2203 1282 JUMP ~[] destination: B118 -> B119  <||@
  Comment 2205 block B23 null  <||@
  Comment 2205 220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2205 222 stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2210 224 MOV [r15|QWORD + 668] y: -280883 size: DWORD  <||@
  Comment 2221 226 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2228 228 DEOPT info [bci:4]  <||@
  Comment 2228 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2233 [r13:0, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 4, duringCall: false, rethrow: false]
              |0               |1                  |2  |3  |4  |5 
     locals:  |r13|QWORD[.]    |stack:32|QWORD[.]  |-  |-  |-  |- 
     stack:   |stack:36|DWORD  |                   |   |   |   |    <||@
  Comment 2234 block B120 null  <||@
  Comment 2234 1292 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2234 1294 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@435668424]  <||@
  Comment 2234 {Object[d.a@435668424]}  <||@
  Comment 2244 1296 MOV [r15|QWORD + 668] y: -235291 size: DWORD  <||@
  Comment 2255 1298 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 2262 1300 DEOPT info [bci:37]  <||@
  Comment 2262 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2267 [r10:0, stack:16, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 37, duringCall: false, rethrow: false]
              |0             |1                  |2  |3                  |4  |5 
     locals:  |-             |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |-  |- 
     stack:   |r10|QWORD[.]  |                   |   |                   |   |    <||@
  Comment 2268 block B81 null  <||@
  Comment 2268 804 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2268 806 r8|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2278 808 r9|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2281 810 rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2286 812 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2291 814 r11|DWORD = MOVE input: int[-244243|0xfffffffffffc45ed]  <||@
  Comment 2297 816 JUMP ~[] destination: B81 -> B119  <||@
  Comment 2302 block B12 null  <||@
  Comment 2302 106 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2302 108 MOV [r15|QWORD + 668] y: -505185 size: DWORD  <||@
  Comment 2313 110 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2320 112 DEOPT info [bci:4]  <||@
  Comment 2320 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2325 [r13:0, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 4, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |- 
     stack:   |r10|DWORD     |                   |   |   |   |    <||@
  Comment 2326 block B60 null  <||@
  Comment 2326 592 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2326 594 r10|DWORD = MOVE input: int[-290867|0xfffffffffffb8fcd]  <||@
  Comment 2332 596 JUMP ~[] destination: B60 -> B62  <||@
  Comment 2337 block B41 null  <||@
  Comment 2337 392 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2337 394 r10|DWORD = MOVE input: int[-291091|0xfffffffffffb8eed]  <||@
  Comment 2343 396 JUMP ~[] destination: B41 -> B62  <||@
  Comment 2348 block B53 null  <||@
  Comment 2348 474 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2348 476 r10|DWORD = MOVE input: int[-294675|0xfffffffffffb80ed]  <||@
  Comment 2354 478 JUMP ~[] destination: B53 -> B62  <||@
  Comment 2359 block B61 null  <||@
  Comment 2359 598 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2359 600 r10|DWORD = MOVE input: int[-288275|0xfffffffffffb99ed]  <||@
  Comment 2365 602 JUMP ~[] destination: B61 -> B62  <||@
  Comment 2370 block B73 null  <||@
  Comment 2370 708 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2370 710 r8|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2380 712 r9|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2383 714 rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2388 716 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2393 718 r11|DWORD = MOVE input: int[-240915|0xfffffffffffc52ed]  <||@
  Comment 2399 720 JUMP ~[] destination: B73 -> B119  <||@
  Comment 2404 block B28 null  <||@
  Comment 2404 258 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2404 260 r10|DWORD = MOVE input: int[-284947|0xfffffffffffba6ed]  <||@
  Comment 2410 262 JUMP ~[] destination: B28 -> B34  <||@
  Comment 2410 block B34 null  <||@
  Comment 2410 344 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2410 346 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2417 348 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2424 350 DEOPT info [bci:32]  <||@
  Comment 2424 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2429 [r13:0, r14:0, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |- 
     stack:   |r14|QWORD[.]  |                   |   |   |   |    <||@
  Comment 2430 block B97 null  <||@
  Comment 2430 1020 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2430 1022 r8|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2440 1024 r9|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2443 1026 rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2448 1028 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2453 1030 r11|DWORD = MOVE input: int[-255251|0xfffffffffffc1aed]  <||@
  Comment 2459 1032 JUMP ~[] destination: B97 -> B119  <||@
  Comment 2464 block B94 null  <||@
  Comment 2464 954 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2464 956 r8|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2474 958 r11|DWORD = MOVE input: int[-266011|0xfffffffffffbf0e5]  <||@
  Comment 2480 960 r9|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 2485 962 rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2490 964 r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2495 966 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2500 968 JUMP ~[] destination: B94 -> B119  <||@
  Comment 2505 block B90 null  <||@
  Comment 2505 908 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2505 910 r8|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2515 912 r9|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2518 914 rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2523 916 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2528 918 r11|DWORD = MOVE input: int[-260891|0xfffffffffffc04e5]  <||@
  Comment 2534 920 JUMP ~[] destination: B90 -> B119  <||@
  Comment 2539 block B96 null  <||@
  Comment 2539 1006 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2539 1008 r8|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2549 1010 r9|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2552 1012 rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2557 1014 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2562 1016 r11|DWORD = MOVE input: int[-258067|0xfffffffffffc0fed]  <||@
  Comment 2568 1018 JUMP ~[] destination: B96 -> B119  <||@
  Comment 2573 block B121 null  <||@
  Comment 2573 1302 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2573 1304 r10|DWORD = MOVE input: int[-301875|0xfffffffffffb64cd]  <||@
  Comment 2579 1306 JUMP ~[] destination: B121 -> B122  <||@
  Comment 2579 block B122 null  <||@
  Comment 2579 1308 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2579 1310 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2586 1312 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2593 1314 DEOPT info [bci:0]  <||@
  Comment 2593 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2598 [r13:0, stack:48]at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 2599 block B98 null  <||@
  Comment 2599 1034 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2599 1036 r8|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2609 1038 r9|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2612 1040 rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2617 1042 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2622 1044 r11|DWORD = MOVE input: int[-251955|0xfffffffffffc27cd]  <||@
  Comment 2628 1046 JUMP ~[] destination: B98 -> B119  <||@
  Comment 2633 block B103 null  <||@
  Comment 2633 1114 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2633 1116 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1418920718]  <||@
  Comment 2633 {Object[d.a@1418920718]}  <||@
  Comment 2643 1118 r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2646 1120 r11|DWORD = MOVE input: int[-234300|0xfffffffffffc6cc4]  <||@
  Comment 2652 1122 r9|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 2657 1124 rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2662 1126 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2667 1128 JUMP ~[] destination: B103 -> B119  <||@
  Comment 2672 block B82 null  <||@
  Comment 2672 818 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2672 820 r8|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2682 822 r9|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2685 824 rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2690 826 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2695 828 r11|DWORD = MOVE input: int[-243987|0xfffffffffffc46ed]  <||@
  Comment 2701 830 JUMP ~[] destination: B82 -> B119  <||@
  Comment 2706 block B102 null  <||@
  Comment 2706 1100 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2706 1102 r8|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2716 1104 r9|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2719 1106 rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2724 1108 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2729 1110 r11|DWORD = MOVE input: int[-269363|0xfffffffffffbe3cd]  <||@
  Comment 2735 1112 JUMP ~[] destination: B102 -> B119  <||@
  Comment 2740 block B39 null  <||@
  Comment 2740 378 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2740 380 r10|DWORD = MOVE input: int[-289043|0xfffffffffffb96ed]  <||@
  Comment 2746 382 JUMP ~[] destination: B39 -> B62  <||@
  Comment 2751 block B79 null  <||@
  Comment 2751 776 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2751 778 r8|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2761 780 r9|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2764 782 rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2769 784 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2774 786 r11|DWORD = MOVE input: int[-248859|0xfffffffffffc33e5]  <||@
  Comment 2780 788 JUMP ~[] destination: B79 -> B119  <||@
  Comment 2785 block B50 null  <||@
  Comment 2785 454 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2785 456 r10|DWORD = MOVE input: int[-293651|0xfffffffffffb84ed]  <||@
  Comment 2791 458 JUMP ~[] destination: B50 -> B62  <||@
  Comment 2796 block B33 null  <||@
  Comment 2796 338 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2796 340 r10|DWORD = MOVE input: int[-284179|0xfffffffffffba9ed]  <||@
  Comment 2802 342 JUMP ~[] destination: B33 -> B34  <||@
  Comment 2807 block B107 null  <||@
  Comment 2807 1154 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2807 1156 r8|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2817 1158 r11|DWORD = MOVE input: int[-273683|0xfffffffffffbd2ed]  <||@
  Comment 2823 1160 r9|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 2828 1162 rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2833 1164 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2838 1166 JUMP ~[] destination: B107 -> B119  <||@
  Comment 2843 block B7 null  <||@
  Comment 2843 66 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2843 68 r10|DWORD = MOVE input: int[-301075|0xfffffffffffb67ed]  <||@
  Comment 2849 70 JUMP ~[] destination: B7 -> B122  <||@
  Comment 2854 block B45 null  <||@
  Comment 2854 424 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2854 426 r10|DWORD = MOVE input: int[-293395|0xfffffffffffb85ed]  <||@
  Comment 2860 428 JUMP ~[] destination: B45 -> B62  <||@
  Comment 2865 block B3 null  <||@
  Comment 2865 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2865 38 r10|DWORD = MOVE input: int[-297747|0xfffffffffffb74ed]  <||@
  Comment 2871 40 JUMP ~[] destination: B3 -> B122  <||@
  Comment 2876 block B111 null  <||@
  Comment 2876 1200 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2876 1202 r8|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2886 1204 r11|DWORD = MOVE input: int[-278291|0xfffffffffffbc0ed]  <||@
  Comment 2892 1206 r9|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 2897 1208 rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2902 1210 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2907 1212 JUMP ~[] destination: B111 -> B119  <||@
  Comment 2912 block B113 null  <||@
  Comment 2912 1220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2912 1222 r8|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2922 1224 r11|DWORD = MOVE input: int[-274995|0xfffffffffffbcdcd]  <||@
  Comment 2928 1226 r9|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 2933 1228 rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2938 1230 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2943 1232 JUMP ~[] destination: B113 -> B119  <||@
  Comment 2948 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2948 4  <||@
  Comment 2954 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 2954 5  <||@
  HexCodeFile>>> <|@
end_nmethod
