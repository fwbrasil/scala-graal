begin_compilation
  name " HotSpotCompilation-8818[java.util.SubList$1.next()]"
  method "HotSpotCompilation-8818[java.util.SubList$1.next()]"
  date 1527005197988
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a387 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a387  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/SubList$1;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v405 v403 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a387 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a387 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList$1.i
nodeSourcePosition: at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 1]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:706) [bci: 1]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v403 
=== Succesors ===
next: v388 
=== Usages ===
?348 v418 v404 v408 v410 v414 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v403 #next: v388  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<SubList$1.next()>
duringCall: false
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 706
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v355 v388 i390 i394 i398 i401 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a387 
=== Succesors ===
=== Usages ===
v388 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a387  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:706) [bci: 1]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v418 
=== Succesors ===
next: v256 
=== Usages ===
v382 
=== Predecessor ===
a387 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v418 #next: v256  <|@  <|@
f <@~|@floating>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:706) [bci: 1]
rawvalue: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v382 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:706) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v388 
y: v381 
=== Succesors ===
=== Usages ===
v256 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v388 y: v381  <|@  <|@
f <@*|@fixed>@ <|@
tid v256 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=nextIndex target_method_class=Ljava/util/AbstractList$ListItr; position=at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:706) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v382 
=== Succesors ===
trueSuccessor: v253 
falseSuccessor: v255 
=== Usages ===
=== Predecessor ===
v388 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v382 #trueSuccessor: v253 #falseSuccessor: v255  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=nextIndex target_method_class=Ljava/util/AbstractList$ListItr; position=at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:706) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a389 
=== Usages ===
=== Predecessor ===
v256 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a389  <|@  <|@
f <@~|@floating>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a389 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a389 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList$1.this$0
nodeSourcePosition: at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 10]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:706) [bci: 1]
nullCheck: false
stamp: n Ljava/util/SubList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v405 
=== Succesors ===
next: i390 
=== Usages ===
v407 v406 
=== Predecessor ===
v253 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v405 #next: i390  <|@  <|@
f <@~|@floating>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a389 
=== Succesors ===
=== Usages ===
i390 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a389  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i390 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.size
nodeSourcePosition: at java.util.SubList.access$200(AbstractList.java:613) [bci: 1]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 8]
at java.util.SubList$1.next(AbstractList.java:706) [bci: 1]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v407 
=== Succesors ===
next: i391 
=== Usages ===
v19 
=== Predecessor ===
a389 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v407 #next: i391  <|@  <|@
f <@~|@floating>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a389 
=== Succesors ===
=== Usages ===
i391 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a389  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i391 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.offset
nodeSourcePosition: at java.util.SubList.access$000(AbstractList.java:613) [bci: 1]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 13]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:706) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v406 
=== Succesors ===
next: i392 
=== Usages ===
i30 
=== Predecessor ===
i390 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v406 #next: i392  <|@  <|@
f <@~|@floating>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a387 
=== Succesors ===
=== Usages ===
i392 v208 v228 v231 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a387  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i392 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$ListItr.nextIndex(AbstractList.java:413) [bci: 1]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:706) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v404 
=== Succesors ===
next: v264 
=== Usages ===
i30 v229 ?348 v230 v218 i81 v227 v417 v413 v207 v196 
=== Predecessor ===
i391 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v404 #next: v264  <|@  <|@
f <@~|@floating>@ <|@
tid i30 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 16]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:706) [bci: 1]
stamp: i32
=== Inputs ===
x: i392 
y: i391 
=== Succesors ===
=== Usages ===
v19 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i392 y: i391  <|@  <|@
f <@~|@floating>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 11]
at java.util.SubList$1.next(AbstractList.java:706) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i30 
y: i390 
=== Succesors ===
=== Usages ===
v264 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i30 y: i390  <|@  <|@
f <@*|@fixed>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList$1.next(AbstractList.java:706) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v19 
=== Succesors ===
trueSuccessor: v261 
falseSuccessor: v263 
=== Usages ===
=== Predecessor ===
i392 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v19 #trueSuccessor: v261 #falseSuccessor: v263  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList$1.next(AbstractList.java:706) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: a393 
=== Usages ===
=== Predecessor ===
v264 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a393  <|@  <|@
f <@~|@floating>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a387 
=== Succesors ===
=== Usages ===
a393 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a387  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a393 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.this$0
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
nullCheck: false
stamp: n Ljava/util/AbstractList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v408 
=== Succesors ===
next: i394 
=== Usages ===
a178 v419 v409 v411 v415 
=== Predecessor ===
v261 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v408 #next: i394  <|@  <|@
f <@~|@floating>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a393 
=== Succesors ===
=== Usages ===
i394 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a393  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i394 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 4]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v409 
=== Succesors ===
next: i395 
=== Usages ===
v89 
=== Predecessor ===
a393 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v409 #next: i395  <|@  <|@
f <@~|@floating>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a387 
=== Succesors ===
=== Usages ===
i395 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a387  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i395 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.expectedModCount
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 8]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v410 
=== Succesors ===
next: v272 
=== Usages ===
v89 
=== Predecessor ===
i394 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v410 #next: v272  <|@  <|@
f <@~|@floating>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i394 
y: i395 
=== Succesors ===
=== Usages ===
v272 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i394 y: i395  <|@  <|@
f <@*|@fixed>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v89 
=== Succesors ===
trueSuccessor: v269 
falseSuccessor: v271 
=== Usages ===
=== Predecessor ===
i395 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v89 #trueSuccessor: v269 #falseSuccessor: v271  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v396 
=== Usages ===
=== Predecessor ===
v272 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v396  <|@  <|@
f <@~|@floating>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a393 
=== Succesors ===
=== Usages ===
v396 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a393  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v419 
=== Succesors ===
next: v106 
=== Usages ===
v386 v384 
=== Predecessor ===
v269 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v419 #next: v106  <|@  <|@
f <@~|@floating>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
rawvalue: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v384 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v396 
y: v383 
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v396 y: v383  <|@  <|@
f <@~|@floating>@ <|@
tid i80 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:360) [bci: 25]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i81 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i81 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:360) [bci: 26]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
stamp: i32
=== Inputs ===
x: i392 
y: i80 
=== Succesors ===
=== Usages ===
v231 v208 v228 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i392 y: i80  <|@  <|@
f <@~|@floating>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a387 
=== Succesors ===
=== Usages ===
v207 v227 v230 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a387  <|@  <|@
f <@*|@fixed>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=get target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
stamp: void
trueSuccessorProbability: 0.9304948647614187
=== Inputs ===
condition: v384 
=== Succesors ===
trueSuccessor: v99 
falseSuccessor: v105 
=== Usages ===
=== Predecessor ===
v396 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v384 #trueSuccessor: v99 #falseSuccessor: v105  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606556372197695787
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=get target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: a397 
=== Usages ===
=== Predecessor ===
v106 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a397  <|@  <|@
f <@~|@floating>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a393 
=== Succesors ===
=== Usages ===
a397 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a393  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a397 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Arrays$ArrayList.a
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v411 
=== Succesors ===
next: i398 
=== Usages ===
a190 v412 
=== Predecessor ===
v99 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v411 #next: i398  <|@  <|@
f <@~|@floating>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a397 
=== Succesors ===
=== Usages ===
i398 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a397  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i398 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v412 
=== Succesors ===
next: v280 
=== Usages ===
v196 
=== Predecessor ===
a397 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v412 #next: v280  <|@  <|@
f <@~|@floating>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i392 
y: i398 
=== Succesors ===
=== Usages ===
v280 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i392 y: i398  <|@  <|@
f <@*|@fixed>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v196 
=== Succesors ===
trueSuccessor: v277 
falseSuccessor: v279 
=== Usages ===
=== Predecessor ===
i398 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v196 #trueSuccessor: v277 #falseSuccessor: v279  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4606556372197695787
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v207 
=== Usages ===
a399 
=== Predecessor ===
v280 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v207  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.lastRet
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:359) [bci: 20]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v414 
value: i392 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v208 
=== Usages ===
=== Predecessor ===
v277 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v414 value: i392 stateAfter: - lastLocationAccess: - #next: v208  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:360) [bci: 27]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v404 
value: i81 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a399 
=== Usages ===
=== Predecessor ===
v207 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v404 value: i81 stateAfter: - lastLocationAccess: - #next: a399  <|@  <|@
f <@~|@floating>@ <|@
tid a190 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a397 
=== Succesors ===
=== Usages ===
v413 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a397  <|@  <|@
f <@~|@floating>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a190 
index: i392 
=== Succesors ===
=== Usages ===
a399 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a190 index: i392  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a399 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v277 
address: v413 
=== Succesors ===
next: v141 
=== Usages ===
a205 
=== Predecessor ===
v208 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v277 address: v413 #next: v141  <|@  <|@
f <@~|@floating>@ <|@
tid a205 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a399 
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a399  <|@  <|@
f <@*|@fixed>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a205 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a399 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a205 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v370 
=== Usages ===
=== Predecessor ===
v280 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v370  <|@  <|@
f <@~|@floating>@ <|@
tid i371 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -50459
stableDimension: 0
stamp: i32 [-50459] ⇊00000000ffff3ae5 ⇈00000000ffff3ae5
stampKind: i32
value: int[-50459|0xffffffffffff3ae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i353 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v349 
=== Predecessor ===
v279 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4589672793481737896
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v115 
=== Usages ===
=== Predecessor ===
v106 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v115  <|@  <|@
f <@~|@floating>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v386 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v396 
y: v385 
=== Succesors ===
=== Usages ===
v115 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v396 y: v385  <|@  <|@
f <@*|@fixed>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=get target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
stamp: void
trueSuccessorProbability: 0.9931451844203523
=== Inputs ===
condition: v386 
=== Succesors ===
trueSuccessor: v111 
falseSuccessor: v114 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v386 #trueSuccessor: v111 #falseSuccessor: v114  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4589638462009712458
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=get target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: a400 
=== Usages ===
=== Predecessor ===
v115 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a400  <|@  <|@
f <@~|@floating>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a393 
=== Succesors ===
=== Usages ===
a400 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a393  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a400 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeList.nodes
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 23]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
nullCheck: false
stamp: n [Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v415 
=== Succesors ===
next: i401 
=== Usages ===
a212 v416 
=== Predecessor ===
v111 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v415 #next: i401  <|@  <|@
f <@~|@floating>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a400 
=== Succesors ===
=== Usages ===
i401 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a400  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i401 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v416 
=== Succesors ===
next: v288 
=== Usages ===
v218 
=== Predecessor ===
a400 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v416 #next: v288  <|@  <|@
f <@~|@floating>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i392 
y: i401 
=== Succesors ===
=== Usages ===
v288 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i392 y: i401  <|@  <|@
f <@*|@fixed>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v218 
=== Succesors ===
trueSuccessor: v285 
falseSuccessor: v287 
=== Usages ===
=== Predecessor ===
i401 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v218 #trueSuccessor: v285 #falseSuccessor: v287  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 4589638462009712458
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v227 
=== Usages ===
a402 
=== Predecessor ===
v288 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v227  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.lastRet
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:359) [bci: 20]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v414 
value: i392 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v228 
=== Usages ===
=== Predecessor ===
v285 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v414 value: i392 stateAfter: - lastLocationAccess: - #next: v228  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:360) [bci: 27]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v404 
value: i81 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a402 
=== Usages ===
=== Predecessor ===
v227 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v404 value: i81 stateAfter: - lastLocationAccess: - #next: a402  <|@  <|@
f <@~|@floating>@ <|@
tid a212 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 23]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
op: Uncompress
stamp: a [Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
value: a400 
=== Succesors ===
=== Usages ===
v417 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a400  <|@  <|@
f <@~|@floating>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a212 
index: i392 
=== Succesors ===
=== Usages ===
a402 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a212 index: i392  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a402 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
nullCheck: false
stamp: n Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
stateBefore: - 
guard: v285 
address: v417 
=== Succesors ===
next: v153 
=== Usages ===
a226 
=== Predecessor ===
v228 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v285 address: v417 #next: v153  <|@  <|@
f <@~|@floating>@ <|@
tid a226 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
op: Uncompress
stamp: a Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
value: a402 
=== Succesors ===
=== Usages ===
v153 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a402  <|@  <|@
f <@*|@fixed>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a226 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a402 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a226 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v372 
=== Usages ===
=== Predecessor ===
v288 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v372  <|@  <|@
f <@~|@floating>@ <|@
tid i373 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -56091
stableDimension: 0
stamp: i32 [-56091] ⇊00000000ffff24e5 ⇈00000000ffff24e5
stampKind: i32
value: int[-56091|0xffffffffffff24e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i353 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v349 
=== Predecessor ===
v287 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4557424480482713141
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: a76 
=== Usages ===
=== Predecessor ===
v115 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a76  <|@  <|@
f <@~|@floating>@ <|@
tid a178 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
op: Uncompress
stamp: a Ljava/util/AbstractList;
=== Inputs ===
value: a393 
=== Succesors ===
=== Usages ===
v229 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a393  <|@  <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@31498525
stamp: void
targetMethod: HotSpotMethod<AbstractList.get(int)>
=== Inputs ===
arguments: a178 i392 
=== Succesors ===
=== Usages ===
a76 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a178 i392  <|@  <|@
tid ?85 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<SubList$1.next()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 707
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - 
=== Succesors ===
=== Usages ===
?348 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: -  <|@  <|@
tid ?348 <|@
d <@d|@=== Debug Properties ===
bci: 14
code: ResolvedJavaMethodBytecode<AbstractList$Itr.next()>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 358
stackSize: 0
=== Inputs ===
outerFrameState: ?85 
values: a387 i392 - 
=== Succesors ===
=== Usages ===
a76 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?85 values: a387 i392 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a76 <|@
d <@d|@=== Debug Properties ===
bci: 14
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
polymorphic: false
stamp: a Ljava/lang/Object;
targetMethod: Direct#AbstractList.get
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v229 
stateDuring: ?348 
=== Succesors ===
next: v230 
=== Usages ===
v152 
=== Predecessor ===
v114 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v229 stateDuring: ?348 #next: v230  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.lastRet
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:359) [bci: 20]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v414 
value: i392 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v231 
=== Usages ===
=== Predecessor ===
a76 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v414 value: i392 stateAfter: - lastLocationAccess: - #next: v231  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:360) [bci: 27]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v404 
value: i81 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v152 
=== Usages ===
=== Predecessor ===
v230 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v404 value: i81 stateAfter: - lastLocationAccess: - #next: v152  <|@  <|@
f <@*|@fixed>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a76 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v231 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a76 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v366 
=== Usages ===
=== Predecessor ===
v272 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v366  <|@  <|@
f <@~|@floating>@ <|@
tid i367 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -47635
stableDimension: 0
stamp: i32 [-47635] ⇊00000000ffff45ed ⇈00000000ffff45ed
stampKind: i32
value: int[-47635|0xffffffffffff45ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i353 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v349 
=== Predecessor ===
v271 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList$1.next(AbstractList.java:706) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v362 
=== Usages ===
=== Predecessor ===
v264 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v362  <|@  <|@
f <@~|@floating>@ <|@
tid i363 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -44563
stableDimension: 0
stamp: i32 [-44563] ⇊00000000ffff51ed ⇈00000000ffff51ed
stampKind: i32
value: int[-44563|0xffffffffffff51ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i353 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v349 
=== Predecessor ===
v263 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=nextIndex target_method_class=Ljava/util/AbstractList$ListItr; position=at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:706) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v358 
=== Usages ===
=== Predecessor ===
v256 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v358  <|@  <|@
f <@~|@floating>@ <|@
tid i359 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -40755
stableDimension: 0
stamp: i32 [-40755] ⇊00000000ffff60cd ⇈00000000ffff60cd
stampKind: i32
value: int[-40755|0xffffffffffff60cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i353 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v349 
=== Predecessor ===
v255 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" "B12" "B6" "B10" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i353 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-56091 - -40459] ⇊00000000ffff00c5 ⇈00000000ffff7ffd
valueDescription: i32
=== Inputs ===
merge: v349 
values: i359 i363 i367 i371 i373 
=== Succesors ===
=== Usages ===
v355 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v349 values: i359 i363 i367 i371 i373  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v358 v362 v366 v370 v372 
=== Succesors ===
next: v355 
=== Usages ===
i353 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v358 v362 v366 v370 v372 #next: v355  <|@  <|@
f <@~|@floating>@ <|@
tid a352 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v355 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i353 
speculation: a352 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v349 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i353 speculation: a352  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a387 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a387  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/SubList$1;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v405 v403 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v403 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a387 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a387 <|@
result v1|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList$1.i
nodeSourcePosition: at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 1]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:706) [bci: 1]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v403 
=== Succesors ===
next: v388 
=== Usages ===
?348 v418 v404 v408 v410 v414 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v403 #next: v388  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<SubList$1.next()>
duringCall: false
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 706
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v355 v388 i390 i394 i398 i401 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v418 <|@
result [v1|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a387 
=== Succesors ===
=== Usages ===
v388 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a387  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v388 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:706) [bci: 1]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v418 
=== Succesors ===
next: v256 
=== Usages ===
v382 
=== Predecessor ===
a387 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v418 #next: v256  <|@  <|@
f <@~|@floating>@ <|@
tid v381 <|@
result meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:706) [bci: 1]
rawvalue: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v382 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v382 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:706) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v388 
y: v381 
=== Succesors ===
=== Usages ===
v256 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v388 y: v381  <|@  <|@
f <@*|@fixed>@ <|@
tid v256 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=nextIndex target_method_class=Ljava/util/AbstractList$ListItr; position=at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:706) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v382 
=== Succesors ===
trueSuccessor: v253 
falseSuccessor: v255 
=== Usages ===
=== Predecessor ===
v388 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v382 #trueSuccessor: v253 #falseSuccessor: v255  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@19243d27 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.SubList$1.next(AbstractList.java:706) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction CMP [v1|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=nextIndex target_method_class=Ljava/util/AbstractList$ListItr; position=at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:706) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a389 
=== Usages ===
=== Predecessor ===
v256 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a389  <|@  <|@
f <@~|@floating>@ <|@
tid v405 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a389 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a389 <|@
result v2|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList$1.this$0
nodeSourcePosition: at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 10]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:706) [bci: 1]
nullCheck: false
stamp: n Ljava/util/SubList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v405 
=== Succesors ===
next: i390 
=== Usages ===
v407 v406 
=== Predecessor ===
v253 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v405 #next: i390  <|@  <|@
f <@~|@floating>@ <|@
tid v407 <|@
result [v2|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a389 
=== Succesors ===
=== Usages ===
i390 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a389  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i390 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.size
nodeSourcePosition: at java.util.SubList.access$200(AbstractList.java:613) [bci: 1]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 8]
at java.util.SubList$1.next(AbstractList.java:706) [bci: 1]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v407 
=== Succesors ===
next: i391 
=== Usages ===
v19 
=== Predecessor ===
a389 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v407 #next: i391  <|@  <|@
f <@~|@floating>@ <|@
tid v406 <|@
result [v2|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a389 
=== Succesors ===
=== Usages ===
i391 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a389  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i391 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.offset
nodeSourcePosition: at java.util.SubList.access$000(AbstractList.java:613) [bci: 1]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 13]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:706) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v406 
=== Succesors ===
next: i392 
=== Usages ===
i30 
=== Predecessor ===
i390 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v406 #next: i392  <|@  <|@
f <@~|@floating>@ <|@
tid v404 <|@
result [v1|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a387 
=== Succesors ===
=== Usages ===
i392 v208 v228 v231 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a387  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i392 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$ListItr.nextIndex(AbstractList.java:413) [bci: 1]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:706) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v404 
=== Succesors ===
next: v264 
=== Usages ===
i30 v229 ?348 v230 v218 i81 v227 v417 v413 v207 v196 
=== Predecessor ===
i391 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v404 #next: v264  <|@  <|@
f <@~|@floating>@ <|@
tid i30 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 16]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:706) [bci: 1]
stamp: i32
=== Inputs ===
x: i392 
y: i391 
=== Succesors ===
=== Usages ===
v19 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i392 y: i391  <|@  <|@
f <@~|@floating>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 11]
at java.util.SubList$1.next(AbstractList.java:706) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i30 
y: i390 
=== Succesors ===
=== Usages ===
v264 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i30 y: i390  <|@  <|@
f <@*|@fixed>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList$1.next(AbstractList.java:706) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v19 
=== Succesors ===
trueSuccessor: v261 
falseSuccessor: v263 
=== Usages ===
=== Predecessor ===
i392 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v19 #trueSuccessor: v261 #falseSuccessor: v263  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.SubList$1.next(AbstractList.java:706) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v3|DWORD = MOV [v2|DWORD[.] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v2|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v1|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = SUB (x: v5|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList$1.next(AbstractList.java:706) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: a393 
=== Usages ===
=== Predecessor ===
v264 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a393  <|@  <|@
f <@~|@floating>@ <|@
tid v408 <|@
result [v1|DWORD[.] * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a387 
=== Succesors ===
=== Usages ===
a393 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a387  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a393 <|@
result v7|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.this$0
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
nullCheck: false
stamp: n Ljava/util/AbstractList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v408 
=== Succesors ===
next: i394 
=== Usages ===
a178 v419 v409 v411 v415 
=== Predecessor ===
v261 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v408 #next: i394  <|@  <|@
f <@~|@floating>@ <|@
tid v409 <|@
result [v7|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a393 
=== Succesors ===
=== Usages ===
i394 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a393  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i394 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 4]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v409 
=== Succesors ===
next: i395 
=== Usages ===
v89 
=== Predecessor ===
a393 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v409 #next: i395  <|@  <|@
f <@~|@floating>@ <|@
tid v410 <|@
result [v1|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a387 
=== Succesors ===
=== Usages ===
i395 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a387  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i395 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.expectedModCount
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 8]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v410 
=== Succesors ===
next: v272 
=== Usages ===
v89 
=== Predecessor ===
i394 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v410 #next: v272  <|@  <|@
f <@~|@floating>@ <|@
tid v89 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i394 
y: i395 
=== Succesors ===
=== Usages ===
v272 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i394 y: i395  <|@  <|@
f <@*|@fixed>@ <|@
tid v272 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v89 
=== Succesors ===
trueSuccessor: v269 
falseSuccessor: v271 
=== Usages ===
=== Predecessor ===
i395 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v89 #trueSuccessor: v269 #falseSuccessor: v271  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[.] = MOV [v1|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.SubList$1.next(AbstractList.java:706) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v8|DWORD = MOV [v7|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v8|DWORD, y: [v1|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v396 
=== Usages ===
=== Predecessor ===
v272 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v396  <|@  <|@
f <@~|@floating>@ <|@
tid v419 <|@
result [v7|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a393 
=== Succesors ===
=== Usages ===
v396 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a393  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v396 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v419 
=== Succesors ===
next: v106 
=== Usages ===
v386 v384 
=== Predecessor ===
v269 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v419 #next: v106  <|@  <|@
f <@~|@floating>@ <|@
tid v383 <|@
result meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
rawvalue: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v384 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v396 
y: v383 
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v396 y: v383  <|@  <|@
f <@~|@floating>@ <|@
tid i80 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:360) [bci: 25]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i81 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i81 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:360) [bci: 26]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
stamp: i32
=== Inputs ===
x: i392 
y: i80 
=== Succesors ===
=== Usages ===
v231 v208 v228 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i392 y: i80  <|@  <|@
f <@~|@floating>@ <|@
tid v414 <|@
result [v1|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a387 
=== Succesors ===
=== Usages ===
v207 v227 v230 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a387  <|@  <|@
f <@*|@fixed>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=get target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
stamp: void
trueSuccessorProbability: 0.9304948647614187
=== Inputs ===
condition: v384 
=== Succesors ===
trueSuccessor: v99 
falseSuccessor: v105 
=== Usages ===
=== Predecessor ===
v396 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v384 #trueSuccessor: v99 #falseSuccessor: v105  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOV [v7|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = INC v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9304948647614187 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606556372197695787
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=get target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: a397 
=== Usages ===
=== Predecessor ===
v106 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a397  <|@  <|@
f <@~|@floating>@ <|@
tid v411 <|@
result [v7|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a393 
=== Succesors ===
=== Usages ===
a397 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a393  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a397 <|@
result v11|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Arrays$ArrayList.a
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v411 
=== Succesors ===
next: i398 
=== Usages ===
a190 v412 
=== Predecessor ===
v99 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v411 #next: i398  <|@  <|@
f <@~|@floating>@ <|@
tid v412 <|@
result [v11|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a397 
=== Succesors ===
=== Usages ===
i398 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a397  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i398 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v412 
=== Succesors ===
next: v280 
=== Usages ===
v196 
=== Predecessor ===
a397 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v412 #next: v280  <|@  <|@
f <@~|@floating>@ <|@
tid v196 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i392 
y: i398 
=== Succesors ===
=== Usages ===
v280 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i392 y: i398  <|@  <|@
f <@*|@fixed>@ <|@
tid v280 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v196 
=== Succesors ===
trueSuccessor: v277 
falseSuccessor: v279 
=== Usages ===
=== Predecessor ===
i398 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v196 #trueSuccessor: v277 #falseSuccessor: v279  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[.] = MOV [v7|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.SubList$1.next(AbstractList.java:706) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction CMP (x: v5|DWORD, y: [v11|DWORD[.] * 8 + 12]) size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4606556372197695787
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v207 
=== Usages ===
a399 
=== Predecessor ===
v280 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v207  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.lastRet
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:359) [bci: 20]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v414 
value: i392 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v208 
=== Usages ===
=== Predecessor ===
v277 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v414 value: i392 stateAfter: - lastLocationAccess: - #next: v208  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:360) [bci: 27]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v404 
value: i81 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a399 
=== Usages ===
=== Predecessor ===
v207 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v404 value: i81 stateAfter: - lastLocationAccess: - #next: a399  <|@  <|@
f <@~|@floating>@ <|@
tid a190 <|@
result v12|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a397 
=== Succesors ===
=== Usages ===
v413 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a397  <|@  <|@
f <@~|@floating>@ <|@
tid v413 <|@
result [v12|QWORD[.] + v5|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a190 
index: i392 
=== Succesors ===
=== Usages ===
a399 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a190 index: i392  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a399 <|@
result v13|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v277 
address: v413 
=== Succesors ===
next: v141 
=== Usages ===
a205 
=== Predecessor ===
v208 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v277 address: v413 #next: v141  <|@  <|@
f <@~|@floating>@ <|@
tid a205 <|@
result v14|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a399 
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a399  <|@  <|@
f <@*|@fixed>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a205 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a399 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a205 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|DWORD[.] * 8 + 16], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|DWORD[.] * 8 + 12], y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68b179e4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[.] = MOV [v12|QWORD[.] + v5|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68b179e4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v14|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v370 
=== Usages ===
=== Predecessor ===
v280 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v370  <|@  <|@
f <@~|@floating>@ <|@
tid i371 <|@
result int[-50459|0xffffffffffff3ae5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -50459
stableDimension: 0
stamp: i32 [-50459] ⇊00000000ffff3ae5 ⇈00000000ffff3ae5
stampKind: i32
value: int[-50459|0xffffffffffff3ae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i353 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v349 
=== Predecessor ===
v279 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-50459|0xffffffffffff3ae5]] destination: B6 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4589672793481737896
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v115 
=== Usages ===
=== Predecessor ===
v106 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v115  <|@  <|@
f <@~|@floating>@ <|@
tid v385 <|@
result meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v386 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v396 
y: v385 
=== Succesors ===
=== Usages ===
v115 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v396 y: v385  <|@  <|@
f <@*|@fixed>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=get target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
stamp: void
trueSuccessorProbability: 0.9931451844203523
=== Inputs ===
condition: v386 
=== Succesors ===
trueSuccessor: v111 
falseSuccessor: v114 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v386 #trueSuccessor: v111 #falseSuccessor: v114  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9931451844203523 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4589638462009712458
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=get target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: a400 
=== Usages ===
=== Predecessor ===
v115 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a400  <|@  <|@
f <@~|@floating>@ <|@
tid v415 <|@
result [v7|DWORD[.] * 8 + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a393 
=== Succesors ===
=== Usages ===
a400 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a393  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a400 <|@
result v15|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeList.nodes
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 23]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
nullCheck: false
stamp: n [Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v415 
=== Succesors ===
next: i401 
=== Usages ===
a212 v416 
=== Predecessor ===
v111 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v415 #next: i401  <|@  <|@
f <@~|@floating>@ <|@
tid v416 <|@
result [v15|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a400 
=== Succesors ===
=== Usages ===
i401 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a400  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i401 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v416 
=== Succesors ===
next: v288 
=== Usages ===
v218 
=== Predecessor ===
a400 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v416 #next: v288  <|@  <|@
f <@~|@floating>@ <|@
tid v218 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i392 
y: i401 
=== Succesors ===
=== Usages ===
v288 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i392 y: i401  <|@  <|@
f <@*|@fixed>@ <|@
tid v288 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v218 
=== Succesors ===
trueSuccessor: v285 
falseSuccessor: v287 
=== Usages ===
=== Predecessor ===
i401 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v218 #trueSuccessor: v285 #falseSuccessor: v287  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[.] = MOV [v7|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.SubList$1.next(AbstractList.java:706) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction CMP (x: v5|DWORD, y: [v15|DWORD[.] * 8 + 12]) size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 4589638462009712458
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v227 
=== Usages ===
a402 
=== Predecessor ===
v288 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v227  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.lastRet
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:359) [bci: 20]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v414 
value: i392 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v228 
=== Usages ===
=== Predecessor ===
v285 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v414 value: i392 stateAfter: - lastLocationAccess: - #next: v228  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:360) [bci: 27]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v404 
value: i81 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a402 
=== Usages ===
=== Predecessor ===
v227 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v404 value: i81 stateAfter: - lastLocationAccess: - #next: a402  <|@  <|@
f <@~|@floating>@ <|@
tid a212 <|@
result v16|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 23]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
op: Uncompress
stamp: a [Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
value: a400 
=== Succesors ===
=== Usages ===
v417 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a400  <|@  <|@
f <@~|@floating>@ <|@
tid v417 <|@
result [v16|QWORD[.] + v5|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a212 
index: i392 
=== Succesors ===
=== Usages ===
a402 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a212 index: i392  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a402 <|@
result v17|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
nullCheck: false
stamp: n Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
stateBefore: - 
guard: v285 
address: v417 
=== Succesors ===
next: v153 
=== Usages ===
a226 
=== Predecessor ===
v228 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v285 address: v417 #next: v153  <|@  <|@
f <@~|@floating>@ <|@
tid a226 <|@
result v18|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
op: Uncompress
stamp: a Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
value: a402 
=== Succesors ===
=== Usages ===
v153 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a402  <|@  <|@
f <@*|@fixed>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a226 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a402 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a226 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|DWORD[.] * 8 + 16], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|DWORD[.] * 8 + 12], y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68b179e4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v17|DWORD[.] = MOV [v16|QWORD[.] + v5|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v17|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68b179e4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v372 
=== Usages ===
=== Predecessor ===
v288 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v372  <|@  <|@
f <@~|@floating>@ <|@
tid i373 <|@
result int[-56091|0xffffffffffff24e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -56091
stableDimension: 0
stamp: i32 [-56091] ⇊00000000ffff24e5 ⇈00000000ffff24e5
stampKind: i32
value: int[-56091|0xffffffffffff24e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i353 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v349 
=== Predecessor ===
v287 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-56091|0xffffffffffff24e5]] destination: B10 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4557424480482713141
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: a76 
=== Usages ===
=== Predecessor ===
v115 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a76  <|@  <|@
f <@~|@floating>@ <|@
tid a178 <|@
result v19|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
op: Uncompress
stamp: a Ljava/util/AbstractList;
=== Inputs ===
value: a393 
=== Succesors ===
=== Usages ===
v229 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a393  <|@  <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@31498525
stamp: void
targetMethod: HotSpotMethod<AbstractList.get(int)>
=== Inputs ===
arguments: a178 i392 
=== Succesors ===
=== Usages ===
a76 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a178 i392  <|@  <|@
tid ?85 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<SubList$1.next()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 707
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - 
=== Succesors ===
=== Usages ===
?348 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: -  <|@  <|@
tid ?348 <|@
d <@d|@=== Debug Properties ===
bci: 14
code: ResolvedJavaMethodBytecode<AbstractList$Itr.next()>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 358
stackSize: 0
=== Inputs ===
outerFrameState: ?85 
values: a387 i392 - 
=== Succesors ===
=== Usages ===
a76 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?85 values: a387 i392 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a76 <|@
result v20|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 14
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
polymorphic: false
stamp: a Ljava/lang/Object;
targetMethod: Direct#AbstractList.get
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v229 
stateDuring: ?348 
=== Succesors ===
next: v230 
=== Usages ===
v152 
=== Predecessor ===
v114 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v229 stateDuring: ?348 #next: v230  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.lastRet
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:359) [bci: 20]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v414 
value: i392 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v231 
=== Usages ===
=== Predecessor ===
a76 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v414 value: i392 stateAfter: - lastLocationAccess: - #next: v231  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:360) [bci: 27]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v404 
value: i81 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v152 
=== Usages ===
=== Predecessor ===
v230 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v404 value: i81 stateAfter: - lastLocationAccess: - #next: v152  <|@  <|@
f <@*|@fixed>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a76 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v231 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a76 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68b179e4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
locals: v1|DWORD[.] v5|DWORD - 
java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
locals: - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractList.get(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:14, 11] <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|DWORD[.] * 8 + 16], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|DWORD[.] * 8 + 12], y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v366 
=== Usages ===
=== Predecessor ===
v272 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v366  <|@  <|@
f <@~|@floating>@ <|@
tid i367 <|@
result int[-47635|0xffffffffffff45ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -47635
stableDimension: 0
stamp: i32 [-47635] ⇊00000000ffff45ed ⇈00000000ffff45ed
stampKind: i32
value: int[-47635|0xffffffffffff45ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i353 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v349 
=== Predecessor ===
v271 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-47635|0xffffffffffff45ed]] destination: B12 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList$1.next(AbstractList.java:706) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v362 
=== Usages ===
=== Predecessor ===
v264 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v362  <|@  <|@
f <@~|@floating>@ <|@
tid i363 <|@
result int[-44563|0xffffffffffff51ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -44563
stableDimension: 0
stamp: i32 [-44563] ⇊00000000ffff51ed ⇈00000000ffff51ed
stampKind: i32
value: int[-44563|0xffffffffffff51ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i353 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v349 
=== Predecessor ===
v263 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-44563|0xffffffffffff51ed]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=nextIndex target_method_class=Ljava/util/AbstractList$ListItr; position=at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:706) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v358 
=== Usages ===
=== Predecessor ===
v256 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v358  <|@  <|@
f <@~|@floating>@ <|@
tid i359 <|@
result int[-40755|0xffffffffffff60cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -40755
stableDimension: 0
stamp: i32 [-40755] ⇊00000000ffff60cd ⇈00000000ffff60cd
stampKind: i32
value: int[-40755|0xffffffffffff60cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i353 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v349 
=== Predecessor ===
v255 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-40755|0xffffffffffff60cd]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" "B12" "B6" "B10" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i353 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-56091 - -40459] ⇊00000000ffff00c5 ⇈00000000ffff7ffd
valueDescription: i32
=== Inputs ===
merge: v349 
values: i359 i363 i367 i371 i373 
=== Succesors ===
=== Usages ===
v355 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v349 values: i359 i363 i367 i371 i373  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v358 v362 v366 v370 v372 
=== Succesors ===
next: v355 
=== Usages ===
i353 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v358 v362 v366 v370 v372 #next: v355  <|@  <|@
f <@~|@floating>@ <|@
tid a352 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v355 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i353 
speculation: a352 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v349 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i353 speculation: a352  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v21|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.SubList$1.next(AbstractList.java:706) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@19243d27 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.SubList$1.next(AbstractList.java:706) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction CMP [v1|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.SubList$1.next(AbstractList.java:706) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v3|DWORD = MOV [v2|DWORD[.] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v2|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v1|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = SUB (x: v5|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[.] = MOV [v1|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.SubList$1.next(AbstractList.java:706) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v8|DWORD = MOV [v7|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v8|DWORD, y: [v1|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOV [v7|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = INC v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9304948647614187 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606556372197695787
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[.] = MOV [v7|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.SubList$1.next(AbstractList.java:706) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction CMP (x: v5|DWORD, y: [v11|DWORD[.] * 8 + 12]) size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4606556372197695787
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|DWORD[.] * 8 + 16], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|DWORD[.] * 8 + 12], y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68b179e4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[.] = MOV [v12|QWORD[.] + v5|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68b179e4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v14|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4589672793481737896
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9931451844203523 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4589638462009712458
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[.] = MOV [v7|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.SubList$1.next(AbstractList.java:706) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction CMP (x: v5|DWORD, y: [v15|DWORD[.] * 8 + 12]) size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 4589638462009712458
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|DWORD[.] * 8 + 16], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|DWORD[.] * 8 + 12], y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68b179e4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v17|DWORD[.] = MOV [v16|QWORD[.] + v5|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v17|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68b179e4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4557424480482713141
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68b179e4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
locals: v1|DWORD[.] v5|DWORD - 
java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
locals: - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractList.get(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:14, 11] <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|DWORD[.] * 8 + 16], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|DWORD[.] * 8 + 12], y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-50459|0xffffffffffff3ae5]] destination: B6 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" "B12" "B6" "B10" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v21|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.SubList$1.next(AbstractList.java:706) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-56091|0xffffffffffff24e5]] destination: B10 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-40755|0xffffffffffff60cd]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-47635|0xffffffffffff45ed]] destination: B12 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-44563|0xffffffffffff51ed]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #9          // hasNext:()boolean
     4: ifeq          17
     7: aload_0       
     8: getfield      #6          // i:java.util.ListIterator
    11: invokeinterface#10, 1      // java.util.ListIterator.next:()java.lang.Object
    16: areturn       
    17: new           #12         // java.util.NoSuchElementException
    20: dup           
    21: invokespecial #11         // java.util.NoSuchElementException.<init>:()void
    24: athrow        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@19243d27 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [rsi:0, r10:0]
live-base-pointers: []
java.util.SubList$1.next(AbstractList.java:706) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction CMP [r10|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   10  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   16  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0]
live-base-pointers: []
java.util.SubList$1.next(AbstractList.java:706) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction rdx|DWORD = MOV [rax|DWORD[.] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   18  <|@ instruction rax|DWORD = MOV [rax|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   20  <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   22  <|@ instruction r8|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction CMP (x: rdx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction rdx|DWORD[.] = MOV [r10|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   32  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0]
live-base-pointers: []
java.util.SubList$1.next(AbstractList.java:706) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction CMP (x: rax|DWORD, y: [r10|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   36  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction r8|DWORD = MOV [rdx|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   42  <|@ instruction r9|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr   44  <|@ instruction CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr   46  <|@ instruction BRANCH trueDestinationProbability: 0.9304948647614187 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606556372197695787
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction rax|DWORD[.] = MOV [rdx|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   52  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0]
live-base-pointers: []
java.util.SubList$1.next(AbstractList.java:706) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction CMP (x: r11|DWORD, y: [rax|DWORD[.] * 8 + 12]) size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4606556372197695787
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction MOV (x: [r10|DWORD[.] * 8 + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr   60  <|@ instruction MOV (x: [r10|DWORD[.] * 8 + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68b179e4 encoding: base: 0 shift: 3 <|@ <|@
      nr   64  <|@ instruction rax|DWORD[.] = MOV [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   66  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68b179e4 encoding: base: 0 shift: 3 <|@ <|@
      nr   68  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4589672793481737896
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ instruction CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr   80  <|@ instruction BRANCH trueDestinationProbability: 0.9931451844203523 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4589638462009712458
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction rax|DWORD[.] = MOV [rdx|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr   86  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0]
live-base-pointers: []
java.util.SubList$1.next(AbstractList.java:706) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction CMP (x: r11|DWORD, y: [rax|DWORD[.] * 8 + 12]) size: DWORD state [bci:0] <|@ <|@
      nr   88  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 4589638462009712458
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   92  <|@ instruction MOV (x: [r10|DWORD[.] * 8 + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction MOV (x: [r10|DWORD[.] * 8 + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr   96  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68b179e4 encoding: base: 0 shift: 3 <|@ <|@
      nr   98  <|@ instruction rax|DWORD[.] = MOV [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  100  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68b179e4 encoding: base: 0 shift: 3 <|@ <|@
      nr  102  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4557424480482713141
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  112  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction stack:32|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68b179e4 encoding: base: 0 shift: 3 <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction rdx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  122  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  124  <|@ st <@st|@reference-map: [stack:16]
live-base-pointers: []
java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
locals: stack:32|DWORD[.] stack:36|DWORD - 
java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
locals: - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractList.get(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:14, 11] <|@ <|@
      nr  126  <|@ instruction r10|DWORD[.] = MOVE stack:32|DWORD[.] moveKind: DWORD <|@ <|@
      nr  128  <|@ instruction r11|DWORD = MOVE stack:36|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  130  <|@ instruction MOV (x: [r10|DWORD[.] * 8 + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction MOV (x: [r10|DWORD[.] * 8 + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction r10|DWORD = MOVE input: int[-50459|0xffffffffffff3ae5] <|@ <|@
      nr   74  <|@ instruction JUMP ~[] destination: B6 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" "B12" "B6" "B10" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  158  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  162  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.SubList$1.next(AbstractList.java:706) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  106  <|@ instruction r10|DWORD = MOVE input: int[-56091|0xffffffffffff24e5] <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B10 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  152  <|@ instruction r10|DWORD = MOVE input: int[-40755|0xffffffffffff60cd] <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  140  <|@ instruction r10|DWORD = MOVE input: int[-47635|0xffffffffffff45ed] <|@ <|@
      nr  142  <|@ instruction JUMP ~[] destination: B12 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  146  <|@ instruction r10|DWORD = MOVE input: int[-44563|0xffffffffffff51ed] <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #9          // hasNext:()boolean
     4: ifeq          17
     7: aload_0       
     8: getfield      #6          // i:java.util.ListIterator
    11: invokeinterface#10, 1      // java.util.ListIterator.next:()java.lang.Object
    16: areturn       
    17: new           #12         // java.util.NoSuchElementException
    20: dup           
    21: invokespecial #11         // java.util.NoSuchElementException.<init>:()void
    24: athrow        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@19243d27 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [rsi:0, r10:0]
live-base-pointers: []
java.util.SubList$1.next(AbstractList.java:706) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction CMP [r10|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   10  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   16  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0]
live-base-pointers: []
java.util.SubList$1.next(AbstractList.java:706) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction rdx|DWORD = MOV [rax|DWORD[.] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   18  <|@ instruction rax|DWORD = MOV [rax|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   20  <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   22  <|@ instruction r8|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction CMP (x: rdx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction rdx|DWORD[.] = MOV [r10|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   32  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0]
live-base-pointers: []
java.util.SubList$1.next(AbstractList.java:706) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction CMP (x: rax|DWORD, y: [r10|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   36  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction r8|DWORD = MOV [rdx|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   42  <|@ instruction r9|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr   44  <|@ instruction CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr   46  <|@ instruction BRANCH trueDestinationProbability: 0.9304948647614187 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606556372197695787
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction rax|DWORD[.] = MOV [rdx|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   52  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0]
live-base-pointers: []
java.util.SubList$1.next(AbstractList.java:706) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction CMP (x: r11|DWORD, y: [rax|DWORD[.] * 8 + 12]) size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4606556372197695787
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction MOV (x: [r10|DWORD[.] * 8 + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr   60  <|@ instruction MOV (x: [r10|DWORD[.] * 8 + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68b179e4 encoding: base: 0 shift: 3 <|@ <|@
      nr   64  <|@ instruction rax|DWORD[.] = MOV [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   66  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68b179e4 encoding: base: 0 shift: 3 <|@ <|@
      nr   68  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4589672793481737896
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ instruction CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr   80  <|@ instruction BRANCH trueDestinationProbability: 0.9931451844203523 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4589638462009712458
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction rax|DWORD[.] = MOV [rdx|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr   86  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0]
live-base-pointers: []
java.util.SubList$1.next(AbstractList.java:706) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction CMP (x: r11|DWORD, y: [rax|DWORD[.] * 8 + 12]) size: DWORD state [bci:0] <|@ <|@
      nr   88  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 4589638462009712458
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   92  <|@ instruction MOV (x: [r10|DWORD[.] * 8 + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction MOV (x: [r10|DWORD[.] * 8 + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr   96  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68b179e4 encoding: base: 0 shift: 3 <|@ <|@
      nr   98  <|@ instruction rax|DWORD[.] = MOV [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  100  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68b179e4 encoding: base: 0 shift: 3 <|@ <|@
      nr  102  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4557424480482713141
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  112  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction stack:32|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68b179e4 encoding: base: 0 shift: 3 <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction rdx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  122  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  124  <|@ st <@st|@reference-map: [stack:16]
live-base-pointers: []
java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
locals: stack:32|DWORD[.] stack:36|DWORD - 
java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
locals: - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractList.get(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:14, 11] <|@ <|@
      nr  126  <|@ instruction r10|DWORD[.] = MOVE stack:32|DWORD[.] moveKind: DWORD <|@ <|@
      nr  128  <|@ instruction r11|DWORD = MOVE stack:36|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  130  <|@ instruction MOV (x: [r10|DWORD[.] * 8 + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction MOV (x: [r10|DWORD[.] * 8 + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction r10|DWORD = MOVE input: int[-50459|0xffffffffffff3ae5] <|@ <|@
      nr   74  <|@ instruction JUMP ~[] destination: B6 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" "B12" "B6" "B10" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  158  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  162  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.SubList$1.next(AbstractList.java:706) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  106  <|@ instruction r10|DWORD = MOVE input: int[-56091|0xffffffffffff24e5] <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B10 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  152  <|@ instruction r10|DWORD = MOVE input: int[-40755|0xffffffffffff60cd] <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  140  <|@ instruction r10|DWORD = MOVE input: int[-47635|0xffffffffffff45ed] <|@ <|@
      nr  142  <|@ instruction JUMP ~[] destination: B12 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  146  <|@ instruction r10|DWORD = MOVE input: int[-44563|0xffffffffffff51ed] <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #9          // hasNext:()boolean
     4: ifeq          17
     7: aload_0       
     8: getfield      #6          // i:java.util.ListIterator
    11: invokeinterface#10, 1      // java.util.ListIterator.next:()java.lang.Object
    16: areturn       
    17: new           #12         // java.util.NoSuchElementException
    20: dup           
    21: invokespecial #11         // java.util.NoSuchElementException.<init>:()void
    24: athrow        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec2848896c2420448b561042813cd508000000addeadde0f857b0100008b46148b14c5140000008b04c510000000468b1cd50c000000458bc3442bc0413bd00f8e63010000428b14d5180000008b04d50c000000423b04d5140000000f853e010000448b04d508000000458bcb41ffc14181f8addeadde0f85450000008b04d510000000443b1cc50c0000000f83e400000046891cd51000000046890cd50c00000048c1e003428b44981048c1e003488b6c24204883c428850500000000c5f877c34181f8addeadde0f85450000008b04d51c000000443b1cc50c0000000f83ac00000046891cd51000000046890cd50c00000048c1e003428b44981048c1e003488b6c24204883c428850500000000c5f877c344894c2414448954241048c1e203488bf2418bd344895c240c48b8ffffffffffffffff0f1f8000000000e80000000090448b542410448b5c240c46891cd510000000448b4c241446890cd50c000000488b6c24204883c428850500000000c5f877c341bae53affff4589979c0200004d89a7a8020000e8000000009041bae524ffffebe441bacd60ffffebdc41baed45ffffebd441baed51ffffebcce80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@19243d27 slotKind: QWORD  <||@
  Comment 48 6 r10|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 52 8 CMP [r10|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} state [bci:0]  <||@
  Comment 52 [rsi:0, r10:0]at java.util.SubList$1.next(AbstractList.java:706) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 52 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 52 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}}  <||@
  Comment 64 10 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B14  <||@
  Comment 70 block B1 null  <||@
  Comment 70 12 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 70 14 rax|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 73 16 rdx|DWORD = MOV [rax|DWORD[.] * 8 + 20] size: DWORD state [bci:0]  <||@
  Comment 73 [rax:0, rsi:0, r10:0]at java.util.SubList$1.next(AbstractList.java:706) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 73 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 80 18 rax|DWORD = MOV [rax|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 87 20 r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 95 22 r8|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 101 24 CMP (x: rdx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 104 26 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B13  <||@
  Comment 110 block B2 null  <||@
  Comment 110 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 110 30 rdx|DWORD[.] = MOV [r10|DWORD[.] * 8 + 24] size: DWORD  <||@
  Comment 118 32 rax|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 118 [rdx:0, rsi:0, r10:0]at java.util.SubList$1.next(AbstractList.java:706) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 118 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 125 34 CMP (x: rax|DWORD, y: [r10|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 133 36 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B12  <||@
  Comment 139 block B3 null  <||@
  Comment 139 38 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 139 40 r8|DWORD = MOV [rdx|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 147 42 r9|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 153 44 CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}  <||@
  Comment 153 {meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}}  <||@
  Comment 160 46 BRANCH trueDestinationProbability: 0.9304948647614187 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B7  <||@
  Comment 166 block B4 null  <||@
  Comment 166 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 166 50 rax|DWORD[.] = MOV [rdx|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 173 52 CMP (x: r11|DWORD, y: [rax|DWORD[.] * 8 + 12]) size: DWORD state [bci:0]  <||@
  Comment 173 [rax:0, rsi:0, r10:0]at java.util.SubList$1.next(AbstractList.java:706) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 173 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 181 54 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 187 block B5 null  <||@
  Comment 187 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 187 58 MOV (x: [r10|DWORD[.] * 8 + 16], y: r11|DWORD) size: DWORD  <||@
  Comment 195 60 MOV (x: [r10|DWORD[.] * 8 + 12], y: r9|DWORD) size: DWORD  <||@
  Comment 203 62 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68b179e4 encoding: base: 0 shift: 3  <||@
  Comment 207 64 rax|DWORD[.] = MOV [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD  <||@
  Comment 212 66 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68b179e4 encoding: base: 0 shift: 3  <||@
  Comment 216 68 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 225 12  <||@
  Comment 235 block B7 null  <||@
  Comment 235 76 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 235 78 CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}  <||@
  Comment 235 {meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}}  <||@
  Comment 242 80 BRANCH trueDestinationProbability: 0.9931451844203523 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B11  <||@
  Comment 248 block B8 null  <||@
  Comment 248 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 248 84 rax|DWORD[.] = MOV [rdx|DWORD[.] * 8 + 28] size: DWORD  <||@
  Comment 255 86 CMP (x: r11|DWORD, y: [rax|DWORD[.] * 8 + 12]) size: DWORD state [bci:0]  <||@
  Comment 255 [rax:0, rsi:0, r10:0]at java.util.SubList$1.next(AbstractList.java:706) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 255 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 263 88 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B10  <||@
  Comment 269 block B9 null  <||@
  Comment 269 90 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 269 92 MOV (x: [r10|DWORD[.] * 8 + 16], y: r11|DWORD) size: DWORD  <||@
  Comment 277 94 MOV (x: [r10|DWORD[.] * 8 + 12], y: r9|DWORD) size: DWORD  <||@
  Comment 285 96 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68b179e4 encoding: base: 0 shift: 3  <||@
  Comment 289 98 rax|DWORD[.] = MOV [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD  <||@
  Comment 294 100 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68b179e4 encoding: base: 0 shift: 3  <||@
  Comment 298 102 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 307 12  <||@
  Comment 317 block B11 null  <||@
  Comment 317 110 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 317 112 stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 322 114 stack:32|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 327 116 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68b179e4 encoding: base: 0 shift: 3  <||@
  Comment 331 118 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 334 120 rdx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 337 122 stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 342 124 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractList.get(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:14, 11]  <||@
  Comment 342 7  <||@
  Comment 359 {HotSpotMethod<AbstractList.get(int)>}  <||@
  Comment 364 [stack:16]at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14, duringCall: true, rethrow: false]
              |0                  |1               |2 
     locals:  |stack:32|DWORD[.]  |stack:36|DWORD  |- 
  at java.util.SubList$1.next(AbstractList.java:707) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 365 126 r10|DWORD[.] = MOVE stack:32|DWORD[.] moveKind: DWORD  <||@
  Comment 370 128 r11|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 375 130 MOV (x: [r10|DWORD[.] * 8 + 16], y: r11|DWORD) size: DWORD  <||@
  Comment 383 132 r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 388 134 MOV (x: [r10|DWORD[.] * 8 + 12], y: r9|DWORD) size: DWORD  <||@
  Comment 396 136 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 405 12  <||@
  Comment 415 block B6 null  <||@
  Comment 415 70 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 415 72 r10|DWORD = MOVE input: int[-50459|0xffffffffffff3ae5]  <||@
  Comment 421 74 JUMP ~[] destination: B6 -> B15  <||@
  Comment 421 block B15 null  <||@
  Comment 421 156 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 421 158 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 428 160 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 435 162 DEOPT info [bci:0]  <||@
  Comment 435 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 440 [rsi:0]at java.util.SubList$1.next(AbstractList.java:706) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 441 block B10 null  <||@
  Comment 441 104 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 441 106 r10|DWORD = MOVE input: int[-56091|0xffffffffffff24e5]  <||@
  Comment 447 108 JUMP ~[] destination: B10 -> B15  <||@
  Comment 449 block B14 null  <||@
  Comment 449 150 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 449 152 r10|DWORD = MOVE input: int[-40755|0xffffffffffff60cd]  <||@
  Comment 455 154 JUMP ~[] destination: B14 -> B15  <||@
  Comment 457 block B12 null  <||@
  Comment 457 138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 457 140 r10|DWORD = MOVE input: int[-47635|0xffffffffffff45ed]  <||@
  Comment 463 142 JUMP ~[] destination: B12 -> B15  <||@
  Comment 465 block B13 null  <||@
  Comment 465 144 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 465 146 r10|DWORD = MOVE input: int[-44563|0xffffffffffff51ed]  <||@
  Comment 471 148 JUMP ~[] destination: B13 -> B15  <||@
  Comment 473 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 473 4  <||@
  Comment 479 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 479 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-8818[java.util.SubList$1.next()]"
  method "HotSpotCompilation-8818[java.util.SubList$1.next()]"
  date 1527005198071
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 1078e3dc0 448b560849c1e203493bc20f858f20f2fe900f1f80000000000f1f800000000089842400c0feff4883ec2848896c2420448b561042813cd50800000073ef01f80f857b0100008b46148b14c5140000008b04c510000000468b1cd50c000000458bc3442bc0413bd00f8e63010000428b14d5180000008b04d50c000000423b04d5140000000f853e010000448b04d508000000458bcb41ffc14181f88faf00f80f85450000008b04d510000000443b1cc50c0000000f83e400000046891cd51000000046890cd50c00000048c1e003428b44981048c1e003488b6c24204883c42885055fb1fafcc5f877c34181f8c8b101f80f85450000008b04d51c000000443b1cc50c0000000f83ac00000046891cd51000000046890cd50c00000048c1e003428b44981048c1e003488b6c24204883c42885050db1fafcc5f877c344894c2414448954241048c1e203488bf2418bd344895c240c48b8ffffffffffffffff0f1f8000000000e8b423f2fe90448b542410448b5c240c46891cd510000000448b4c241446890cd50c000000488b6c24204883c4288505abb0fafcc5f877c341bae53affff4589979c0200004d89a7a8020000e88636f2fe9041bae524ffffebe441bacd60ffffebdc41baed45ffffebd441baed51ffffebcce8826636ff90e85c35f2fe90f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@19243d27 slotKind: QWORD  <||@
  Comment 48 6 r10|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 52 8 CMP [r10|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} state [bci:0]  <||@
  Comment 52 [rsi:0, r10:0]at java.util.SubList$1.next(AbstractList.java:706) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 52 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 52 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}}  <||@
  Comment 64 10 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B14  <||@
  Comment 70 block B1 null  <||@
  Comment 70 12 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 70 14 rax|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 73 16 rdx|DWORD = MOV [rax|DWORD[.] * 8 + 20] size: DWORD state [bci:0]  <||@
  Comment 73 [rax:0, rsi:0, r10:0]at java.util.SubList$1.next(AbstractList.java:706) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 73 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 80 18 rax|DWORD = MOV [rax|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 87 20 r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 95 22 r8|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 101 24 CMP (x: rdx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 104 26 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B13  <||@
  Comment 110 block B2 null  <||@
  Comment 110 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 110 30 rdx|DWORD[.] = MOV [r10|DWORD[.] * 8 + 24] size: DWORD  <||@
  Comment 118 32 rax|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 118 [rdx:0, rsi:0, r10:0]at java.util.SubList$1.next(AbstractList.java:706) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 118 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 125 34 CMP (x: rax|DWORD, y: [r10|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 133 36 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B12  <||@
  Comment 139 block B3 null  <||@
  Comment 139 38 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 139 40 r8|DWORD = MOV [rdx|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 147 42 r9|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 153 44 CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}  <||@
  Comment 153 {meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}}  <||@
  Comment 160 46 BRANCH trueDestinationProbability: 0.9304948647614187 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B7  <||@
  Comment 166 block B4 null  <||@
  Comment 166 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 166 50 rax|DWORD[.] = MOV [rdx|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 173 52 CMP (x: r11|DWORD, y: [rax|DWORD[.] * 8 + 12]) size: DWORD state [bci:0]  <||@
  Comment 173 [rax:0, rsi:0, r10:0]at java.util.SubList$1.next(AbstractList.java:706) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 173 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 181 54 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 187 block B5 null  <||@
  Comment 187 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 187 58 MOV (x: [r10|DWORD[.] * 8 + 16], y: r11|DWORD) size: DWORD  <||@
  Comment 195 60 MOV (x: [r10|DWORD[.] * 8 + 12], y: r9|DWORD) size: DWORD  <||@
  Comment 203 62 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68b179e4 encoding: base: 0 shift: 3  <||@
  Comment 207 64 rax|DWORD[.] = MOV [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD  <||@
  Comment 212 66 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68b179e4 encoding: base: 0 shift: 3  <||@
  Comment 216 68 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 225 12  <||@
  Comment 235 block B7 null  <||@
  Comment 235 76 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 235 78 CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}  <||@
  Comment 235 {meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}}  <||@
  Comment 242 80 BRANCH trueDestinationProbability: 0.9931451844203523 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B11  <||@
  Comment 248 block B8 null  <||@
  Comment 248 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 248 84 rax|DWORD[.] = MOV [rdx|DWORD[.] * 8 + 28] size: DWORD  <||@
  Comment 255 86 CMP (x: r11|DWORD, y: [rax|DWORD[.] * 8 + 12]) size: DWORD state [bci:0]  <||@
  Comment 255 [rax:0, rsi:0, r10:0]at java.util.SubList$1.next(AbstractList.java:706) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 255 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 263 88 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B10  <||@
  Comment 269 block B9 null  <||@
  Comment 269 90 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 269 92 MOV (x: [r10|DWORD[.] * 8 + 16], y: r11|DWORD) size: DWORD  <||@
  Comment 277 94 MOV (x: [r10|DWORD[.] * 8 + 12], y: r9|DWORD) size: DWORD  <||@
  Comment 285 96 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68b179e4 encoding: base: 0 shift: 3  <||@
  Comment 289 98 rax|DWORD[.] = MOV [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD  <||@
  Comment 294 100 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68b179e4 encoding: base: 0 shift: 3  <||@
  Comment 298 102 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 307 12  <||@
  Comment 317 block B11 null  <||@
  Comment 317 110 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 317 112 stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 322 114 stack:32|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 327 116 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68b179e4 encoding: base: 0 shift: 3  <||@
  Comment 331 118 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 334 120 rdx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 337 122 stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 342 124 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractList.get(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:14, 11]  <||@
  Comment 342 7  <||@
  Comment 359 {HotSpotMethod<AbstractList.get(int)>}  <||@
  Comment 364 [stack:16]at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14, duringCall: true, rethrow: false]
              |0                  |1               |2 
     locals:  |stack:32|DWORD[.]  |stack:36|DWORD  |- 
  at java.util.SubList$1.next(AbstractList.java:707) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 365 126 r10|DWORD[.] = MOVE stack:32|DWORD[.] moveKind: DWORD  <||@
  Comment 370 128 r11|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 375 130 MOV (x: [r10|DWORD[.] * 8 + 16], y: r11|DWORD) size: DWORD  <||@
  Comment 383 132 r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 388 134 MOV (x: [r10|DWORD[.] * 8 + 12], y: r9|DWORD) size: DWORD  <||@
  Comment 396 136 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 405 12  <||@
  Comment 415 block B6 null  <||@
  Comment 415 70 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 415 72 r10|DWORD = MOVE input: int[-50459|0xffffffffffff3ae5]  <||@
  Comment 421 74 JUMP ~[] destination: B6 -> B15  <||@
  Comment 421 block B15 null  <||@
  Comment 421 156 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 421 158 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 428 160 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 435 162 DEOPT info [bci:0]  <||@
  Comment 435 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 440 [rsi:0]at java.util.SubList$1.next(AbstractList.java:706) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 441 block B10 null  <||@
  Comment 441 104 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 441 106 r10|DWORD = MOVE input: int[-56091|0xffffffffffff24e5]  <||@
  Comment 447 108 JUMP ~[] destination: B10 -> B15  <||@
  Comment 449 block B14 null  <||@
  Comment 449 150 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 449 152 r10|DWORD = MOVE input: int[-40755|0xffffffffffff60cd]  <||@
  Comment 455 154 JUMP ~[] destination: B14 -> B15  <||@
  Comment 457 block B12 null  <||@
  Comment 457 138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 457 140 r10|DWORD = MOVE input: int[-47635|0xffffffffffff45ed]  <||@
  Comment 463 142 JUMP ~[] destination: B12 -> B15  <||@
  Comment 465 block B13 null  <||@
  Comment 465 144 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 465 146 r10|DWORD = MOVE input: int[-44563|0xffffffffffff51ed]  <||@
  Comment 471 148 JUMP ~[] destination: B13 -> B15  <||@
  Comment 473 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 473 4  <||@
  Comment 479 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 479 5  <||@
  HexCodeFile>>> <|@
end_nmethod
