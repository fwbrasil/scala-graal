begin_compilation
  name " HotSpotCompilation-8747[java.lang.StringCoding.encode(Charset, char[], int, int)]"
  method "HotSpotCompilation-8747[java.lang.StringCoding.encode(Charset, char[], int, int)]"
  date 1527005196940
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B183" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v1629 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v1629  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a Ljava/nio/charset/Charset;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v1660 ?216 ?211 ?172 ?327 ?208 ?335 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# [C
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?211 v1652 v417 v1650 ?116 v1649 v1730 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?211 i78 i71 j539 v546 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?211 d13 v19 v173 i71 i516 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<StringCoding.encode(Charset, char[], int, int)>
duringCall: false
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: StringCoding.java
sourceLine: 348
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 i4 - - - - - - - 
=== Succesors ===
=== Usages ===
v752 a829 a888 v1629 v1728 v1729 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 i4 - - - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v1660 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v1629 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1629 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v1660 
=== Succesors ===
next: v577 
=== Usages ===
v972 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v1660 #next: v577  <|@  <|@
f <@~|@floating>@ <|@
tid v971 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
rawvalue: meta{HotSpotType<Lsun/nio/cs/UTF_8;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lsun/nio/cs/UTF_8;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v972 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v972 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1629 
y: v971 
=== Succesors ===
=== Usages ===
v577 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1629 y: v971  <|@  <|@
f <@~|@floating>@ <|@
tid a749 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v752 v768 a790 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lsun/nio/cs/UTF_8; target_method=newEncoder target_method_class=Lsun/nio/cs/UTF_8; position=at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v972 
=== Succesors ===
trueSuccessor: v574 
falseSuccessor: v576 
=== Usages ===
=== Predecessor ===
v1629 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v972 #trueSuccessor: v574 #falseSuccessor: v576  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lsun/nio/cs/UTF_8; target_method=newEncoder target_method_class=Lsun/nio/cs/UTF_8; position=at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v368 
=== Usages ===
=== Predecessor ===
v577 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v368  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v368 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: ANY_LOCATION
nodeSourcePosition: at java.nio.charset.Charset.atBugLevel(Charset.java:280) [bci: 0]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1630 
=== Usages ===
=== Predecessor ===
v574 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a1630  <|@  <|@
f <@~|@floating>@ <|@
tid a363 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.charset.Charset.atBugLevel(Charset.java:280) [bci: 0]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
rawvalue: Class:java.nio.charset.Charset
stableDimension: 0
stamp: a!# Ljava/lang/Class;
stampKind: a -
value: Object[Class:java.nio.charset.Charset]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1645 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1645 <|@
d <@d|@=== Debug Properties ===
displacement: 104
scale: Times1
stamp: void*
=== Inputs ===
base: a363 
index: - 
=== Succesors ===
=== Usages ===
a1630 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a363 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1630 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Charset.bugLevel
nodeSourcePosition: at java.nio.charset.Charset.atBugLevel(Charset.java:280) [bci: 0]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
nullCheck: false
stamp: n# Ljava/lang/String;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1645 
=== Succesors ===
next: v1728 
=== Usages ===
v1725 v1728 v1646 
=== Predecessor ===
v368 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1645 #next: v1728  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1728 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?5 
object: a1630 
=== Succesors ===
next: v585 
=== Usages ===
=== Predecessor ===
a1630 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?5 object: a1630 #next: v585  <|@  <|@
f <@~|@floating>@ <|@
tid a1724 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:43) [bci: 2]
at java.nio.charset.Charset.atBugLevel(Charset.java:287) [bci: 40]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
rawvalue: "1.4"
stableDimension: 0
stamp: n!# Ljava/lang/String;
stampKind: n -
value: NarrowOop[String:"1.4"]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1725 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1725 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:43) [bci: 2]
at java.nio.charset.Charset.atBugLevel(Charset.java:287) [bci: 40]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1630 
y: a1724 
=== Succesors ===
=== Usages ===
v585 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a1630 y: a1724  <|@  <|@
f <@*|@fixed>@ <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:43) [bci: 2]
at java.nio.charset.Charset.atBugLevel(Charset.java:287) [bci: 40]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1725 
=== Succesors ===
trueSuccessor: v584 
falseSuccessor: v582 
=== Usages ===
=== Predecessor ===
v1728 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1725 #trueSuccessor: v584 #falseSuccessor: v582  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v584 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:43) [bci: 2]
at java.nio.charset.Charset.atBugLevel(Charset.java:287) [bci: 40]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v757 
=== Usages ===
=== Predecessor ===
v585 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v757  <|@  <|@
f <@~|@floating>@ <|@
tid i758 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -94995
stableDimension: 0
stamp: i32 [-94995] ⇊00000000fffe8ced ⇈00000000fffe8ced
stampKind: i32
value: int[-94995|0xfffffffffffe8ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i750 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v757 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v746 
=== Predecessor ===
v584 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v582 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:43) [bci: 2]
at java.nio.charset.Charset.atBugLevel(Charset.java:287) [bci: 40]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v369 
=== Usages ===
=== Predecessor ===
v585 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v369  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
barriers: 3
location: ANY_LOCATION
nodeSourcePosition: at java.nio.charset.Charset.atBugLevel(Charset.java:280) [bci: 0]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1631 
=== Usages ===
=== Predecessor ===
v582 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a1631  <|@  <|@
f <@~|@floating>@ <|@
tid v1646 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1630 
=== Succesors ===
=== Usages ===
a1631 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1630  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1631 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.nio.charset.Charset.atBugLevel(Charset.java:287) [bci: 40]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1646 
=== Succesors ===
next: v1729 
=== Usages ===
a375 v1729 v1647 
=== Predecessor ===
v369 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1646 #next: v1729  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1729 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?5 
object: a1631 
=== Succesors ===
next: v386 
=== Usages ===
=== Predecessor ===
a1631 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?5 object: a1631 #next: v386  <|@  <|@
f <@~|@floating>@ <|@
tid d13 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.FloatConvertNode$$Lambda$1/154487945@39bcec26
nodeSourcePosition: at java.lang.StringCoding.scale(StringCoding.java:95) [bci: 1]
at java.lang.StringCoding.encode(StringCoding.java:349) [bci: 12]
op: I2D
stamp: f64! [-2.147483648E9 - 2.147483647E9]
=== Inputs ===
value: i4 
=== Succesors ===
=== Usages ===
d15 
=== Predecessor ===
- >@ <|@
instruction <@FloatConvert|@org.graalvm.compiler.nodes.calc.FloatConvertNode>@ value: i4  <|@  <|@
f <@~|@floating>@ <|@
tid d333 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 3.0
stableDimension: 0
stamp: f64! [3.0]
stampKind: f64
value: double[3.0|0x4008000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
d15 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid d15 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at java.lang.StringCoding.scale(StringCoding.java:95) [bci: 4]
at java.lang.StringCoding.encode(StringCoding.java:349) [bci: 12]
stamp: f64
=== Inputs ===
x: d13 
y: d333 
=== Succesors ===
=== Usages ===
v392 i381 v387 v387 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: d13 y: d333  <|@  <|@
f <@~|@floating>@ <|@
tid i381 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.replacements.amd64.AMD64FloatConvertNode$$Lambda$199/890056911@20584f7
nodeSourcePosition: at java.lang.StringCoding.scale(StringCoding.java:95) [bci: 5]
at java.lang.StringCoding.encode(StringCoding.java:349) [bci: 12]
op: D2I
stamp: i32
=== Inputs ===
value: d15 
=== Succesors ===
=== Usages ===
v383 i399 i399 j672 
=== Predecessor ===
- >@ <|@
instruction <@AMD64FloatConvert|@org.graalvm.compiler.replacements.amd64.AMD64FloatConvertNode>@ value: d15  <|@  <|@
f <@~|@floating>@ <|@
tid j672 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i381 
=== Succesors ===
=== Usages ===
j673 j673 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i381  <|@  <|@
f <@~|@floating>@ <|@
tid j670 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j673 v1623 v1453 j1445 v1509 j1317 j1322 v1330 j1503 j1378 j1383 j1498 j1438 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringCoding.encode(StringCoding.java:351) [bci: 24]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v19 i399 v241 ?345 ?172 v678 i79 v566 v685 a829 a888 a940 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i382 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64ConvertSnippets.d2i(AMD64ConvertSnippets.java:114) [bci: 4]
at java.lang.StringCoding.scale(StringCoding.java:95) [bci: 5]
at java.lang.StringCoding.encode(StringCoding.java:349) [bci: 12]
rawvalue: -2147483648
stableDimension: 0
stamp: i32 [-2147483648] ⇊0000000080000000 ⇈0000000080000000
stampKind: i32
value: int[-2147483648|0xffffffff80000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v383 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64ConvertSnippets.d2i(AMD64ConvertSnippets.java:114) [bci: 6]
at java.lang.StringCoding.scale(StringCoding.java:95) [bci: 5]
at java.lang.StringCoding.encode(StringCoding.java:349) [bci: 12]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i381 
y: i382 
=== Succesors ===
=== Usages ===
v386 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i381 y: i382  <|@  <|@
f <@*|@fixed>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64ConvertSnippets.d2i(AMD64ConvertSnippets.java:114) [bci: 17]
at java.lang.StringCoding.scale(StringCoding.java:95) [bci: 5]
at java.lang.StringCoding.encode(StringCoding.java:349) [bci: 12]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v383 
=== Succesors ===
trueSuccessor: v385 
falseSuccessor: v384 
=== Usages ===
=== Predecessor ===
v1729 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v383 #trueSuccessor: v385 #falseSuccessor: v384  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64ConvertSnippets.d2i(AMD64ConvertSnippets.java:115) [bci: 20]
at java.lang.StringCoding.scale(StringCoding.java:95) [bci: 5]
at java.lang.StringCoding.encode(StringCoding.java:349) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v390 
=== Usages ===
=== Predecessor ===
v386 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v390  <|@  <|@
f <@~|@floating>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.Double.isNaN(Double.java:550) [bci: 3]
at org.graalvm.compiler.replacements.amd64.AMD64ConvertSnippets.d2i(AMD64ConvertSnippets.java:115) [bci: 21]
at java.lang.StringCoding.scale(StringCoding.java:95) [bci: 5]
at java.lang.StringCoding.encode(StringCoding.java:349) [bci: 12]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: d15 
y: d15 
=== Succesors ===
=== Usages ===
v390 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.FloatEqualsNode>@ x: d15 y: d15  <|@  <|@
f <@*|@fixed>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64ConvertSnippets.d2i(AMD64ConvertSnippets.java:115) [bci: 24]
at java.lang.StringCoding.scale(StringCoding.java:95) [bci: 5]
at java.lang.StringCoding.encode(StringCoding.java:349) [bci: 12]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v387 
=== Succesors ===
trueSuccessor: v388 
falseSuccessor: v389 
=== Usages ===
=== Predecessor ===
v385 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v387 #trueSuccessor: v388 #falseSuccessor: v389  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4572414629676717184
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64ConvertSnippets.d2i(AMD64ConvertSnippets.java:118) [bci: 29]
at java.lang.StringCoding.scale(StringCoding.java:95) [bci: 5]
at java.lang.StringCoding.encode(StringCoding.java:349) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v395 
=== Usages ===
=== Predecessor ===
v390 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v395  <|@  <|@
f <@~|@floating>@ <|@
tid d391 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64ConvertSnippets.d2i(AMD64ConvertSnippets.java:118) [bci: 30]
at java.lang.StringCoding.scale(StringCoding.java:95) [bci: 5]
at java.lang.StringCoding.encode(StringCoding.java:349) [bci: 12]
rawvalue: 0.0
stableDimension: 0
stamp: f64! [0.0]
stampKind: f64
value: double[0.0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v392 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64ConvertSnippets.d2i(AMD64ConvertSnippets.java:118) [bci: 32]
at java.lang.StringCoding.scale(StringCoding.java:95) [bci: 5]
at java.lang.StringCoding.encode(StringCoding.java:349) [bci: 12]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: d391 
y: d15 
=== Succesors ===
=== Usages ===
v395 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.FloatLessThanNode>@ x: d391 y: d15  <|@  <|@
f <@*|@fixed>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64ConvertSnippets.d2i(AMD64ConvertSnippets.java:118) [bci: 32]
at java.lang.StringCoding.scale(StringCoding.java:95) [bci: 5]
at java.lang.StringCoding.encode(StringCoding.java:349) [bci: 12]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v392 
=== Succesors ===
trueSuccessor: v393 
falseSuccessor: v394 
=== Usages ===
=== Predecessor ===
v388 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v392 #trueSuccessor: v393 #falseSuccessor: v394  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4567911030049346688
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64ConvertSnippets.d2i(AMD64ConvertSnippets.java:120) [bci: 35]
at java.lang.StringCoding.scale(StringCoding.java:95) [bci: 5]
at java.lang.StringCoding.encode(StringCoding.java:349) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v400 
=== Usages ===
=== Predecessor ===
v395 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v400  <|@  <|@
f <@~|@floating>@ <|@
tid j671 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2147483647
stableDimension: 0
stamp: i64 [2147483647] ⇊000000007fffffff ⇈000000007fffffff
stampKind: i64
value: long[2147483647|0x7fffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j673 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i396 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64ConvertSnippets.d2i(AMD64ConvertSnippets.java:120) [bci: 35]
at java.lang.StringCoding.scale(StringCoding.java:95) [bci: 5]
at java.lang.StringCoding.encode(StringCoding.java:349) [bci: 12]
rawvalue: 2147483647
stableDimension: 0
stamp: i32 [2147483647] ⇊000000007fffffff ⇈000000007fffffff
stampKind: i32
value: int[2147483647|0x7fffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i399 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.scale(StringCoding.java:95) [bci: 5]
at java.lang.StringCoding.encode(StringCoding.java:349) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v397 
=== Predecessor ===
v393 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4567911030049346688
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64ConvertSnippets.d2i(AMD64ConvertSnippets.java:123) [bci: 38]
at java.lang.StringCoding.scale(StringCoding.java:95) [bci: 5]
at java.lang.StringCoding.encode(StringCoding.java:349) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v402 
=== Usages ===
=== Predecessor ===
v395 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v402  <|@  <|@
f <@*|@fixed>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.scale(StringCoding.java:95) [bci: 5]
at java.lang.StringCoding.encode(StringCoding.java:349) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v397 
=== Predecessor ===
v394 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4572414629676717184
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64ConvertSnippets.d2i(AMD64ConvertSnippets.java:117) [bci: 27]
at java.lang.StringCoding.scale(StringCoding.java:95) [bci: 5]
at java.lang.StringCoding.encode(StringCoding.java:349) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v398 
=== Usages ===
=== Predecessor ===
v390 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v398  <|@  <|@
f <@*|@fixed>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.scale(StringCoding.java:95) [bci: 5]
at java.lang.StringCoding.encode(StringCoding.java:349) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v397 
=== Predecessor ===
v389 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64ConvertSnippets.d2i(AMD64ConvertSnippets.java:123) [bci: 38]
at java.lang.StringCoding.scale(StringCoding.java:95) [bci: 5]
at java.lang.StringCoding.encode(StringCoding.java:349) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v401 
=== Usages ===
=== Predecessor ===
v386 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v401  <|@  <|@
f <@*|@fixed>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.scale(StringCoding.java:95) [bci: 5]
at java.lang.StringCoding.encode(StringCoding.java:349) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v397 
=== Predecessor ===
v384 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B6" "B9" "B7" 
    successors "B11" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.scale(StringCoding.java:95) [bci: 5]
at java.lang.StringCoding.encode(StringCoding.java:349) [bci: 12]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v397 
values: i18 i396 i381 i381 
=== Succesors ===
=== Usages ===
a888 j981 v64 i717 i516 v173 v566 v464 v483 v492 v685 v692 v855 v907 i895 a829 i1628 j1625 v873 v1288 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v397 values: i18 i396 i381 i381  <|@  <|@
f <@~|@floating>@ <|@
tid j673 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-2147483648 - 2147483647]
valueDescription: i64
=== Inputs ===
merge: v397 
values: j670 j671 j672 j672 
=== Succesors ===
=== Usages ===
v555 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v397 values: j670 j671 j672 j672  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.scale(StringCoding.java:95) [bci: 5]
at java.lang.StringCoding.encode(StringCoding.java:349) [bci: 12]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v398 v400 v401 v402 
=== Succesors ===
next: i1632 
=== Usages ===
i399 j673 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v398 v400 v401 v402 #next: i1632  <|@  <|@
f <@~|@floating>@ <|@
tid v1647 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1631 
=== Succesors ===
=== Usages ===
i1632 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1631  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1632 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.nio.charset.Charset.atBugLevel(Charset.java:287) [bci: 40]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1647 
=== Succesors ===
next: v269 
=== Usages ===
v266 
=== Predecessor ===
v397 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1647 #next: v269  <|@  <|@
f <@~|@floating>@ <|@
tid i169 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 339]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i170 v266 i278 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v266 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 29]
at java.nio.charset.Charset.atBugLevel(Charset.java:287) [bci: 40]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1632 
y: i169 
=== Succesors ===
=== Usages ===
v269 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1632 y: i169  <|@  <|@
f <@~|@floating>@ <|@
tid i102 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 40]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i103 i104 i123 i129 v1288 v563 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1288 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i399 
y: i102 
=== Succesors ===
=== Usages ===
v989 v1067 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i399 y: i102  <|@  <|@
f <@~|@floating>@ <|@
tid i813 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v925 v873 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v873 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i399 
y: i813 
=== Succesors ===
=== Usages ===
v876 v817 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i399 y: i813  <|@  <|@
f <@~|@floating>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.StringCoding.encode(StringCoding.java:351) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4 
y: i18 
=== Succesors ===
=== Usages ===
v22 v355 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i4 y: i18  <|@  <|@
f <@~|@floating>@ <|@
tid j1529 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1530 j1531 j1532 j1533 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1583 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1544 v1545 v1546 v1554 v1555 v1556 v1575 v1576 v1577 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j541 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j542 j1346 j1466 j1522 j1619 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1310 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1311 j1372 j1430 j1492 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1584 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000>
stampKind: <i8,i8,i8,i8>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1548 v1557 v1578 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1342 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1343 j1463 j1519 j1620 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j800 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1497 j1437 j1377 j1316 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1585 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000>
stampKind: <i8,i8,i8,i8,i8,i8,i8,i8>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1550 v1558 v1579 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1338 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1339 j1460 j1516 j1621 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j427 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1502 j1321 j1444 j1382 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1586 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000>
stampKind: <i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1552 v1559 v1580 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1334 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] ⇊fffffffffffffff0 ⇈fffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1335 j1457 j1513 j1622 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1326 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 32
stableDimension: 0
stamp: i64 [32] ⇊0000000000000020 ⇈0000000000000020
stampKind: i64
value: long[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1327 j1387 j1451 j1507 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1582 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000>
stampKind: <i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1581 v1553 v1560 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1328 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -32
stableDimension: 0
stamp: i64 [-32] ⇊ffffffffffffffe0 ⇈ffffffffffffffe0
stampKind: i64
value: long[-32|0xffffffffffffffe0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1329 j1452 j1508 j1624 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v804 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
rawvalue: meta{HotSpotType<[B, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[B, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a829 a940 a888 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v973 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
rawvalue: meta{HotSpotType<[B, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[B, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v859 v911 v963 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j805 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v856 v908 v960 v1139 j1299 j1413 j1481 j1361 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i836 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i947 i895 i1628 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i806 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i807 i919 i1627 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 29]
at java.nio.charset.Charset.atBugLevel(Charset.java:287) [bci: 40]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v266 
=== Succesors ===
trueSuccessor: v267 
falseSuccessor: v268 
=== Usages ===
=== Predecessor ===
i1632 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v266 #trueSuccessor: v267 #falseSuccessor: v268  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B45" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:53) [bci: 34]
at java.nio.charset.Charset.atBugLevel(Charset.java:287) [bci: 40]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i278 
=== Usages ===
=== Predecessor ===
v269 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i278  <|@  <|@
f <@~|@floating>@ <|@
tid a375 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.nio.charset.Charset.atBugLevel(Charset.java:287) [bci: 40]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1631 
=== Succesors ===
=== Usages ===
i278 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1631  <|@  <|@
f <@~|@floating>@ <|@
tid a283 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.getValue(String) [bci: -1]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:58) [bci: 49]
at java.nio.charset.Charset.atBugLevel(Charset.java:287) [bci: 40]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
rawvalue: char[3]{1, ., 4}
stableDimension: 1
stamp: a!# [C
stampKind: a -
value: Object[char[3]{1, ., 4}]
=== Inputs ===
=== Succesors ===
=== Usages ===
i278 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i278 <|@
d <@d|@=== Debug Properties ===
kind: char
nodeSourcePosition: at org.graalvm.compiler.replacements.nodes.ArrayEqualsNode.equals(Object, Object, int, JavaKind) [bci: -1]
at org.graalvm.compiler.replacements.nodes.ArrayEqualsNode.equals(ArrayEqualsNode.java:202) [bci: 6]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:60) [bci: 59]
at java.nio.charset.Charset.atBugLevel(Charset.java:287) [bci: 40]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
array1: a375 
array2: a283 
length: i169 
lastLocationAccess: - 
=== Succesors ===
next: v593 
=== Usages ===
v241 
=== Predecessor ===
v267 >@ <|@
instruction <@ArrayEquals|@org.graalvm.compiler.replacements.nodes.ArrayEqualsNode>@ array1: a375 array2: a283 length: i169 lastLocationAccess: - #next: v593  <|@  <|@
f <@~|@floating>@ <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 70]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i278 
y: i18 
=== Succesors ===
=== Usages ===
v593 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i278 y: i18  <|@  <|@
f <@*|@fixed>@ <|@
tid v593 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 70]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v241 
=== Succesors ===
trueSuccessor: v590 
falseSuccessor: v592 
=== Usages ===
=== Predecessor ===
i278 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v241 #trueSuccessor: v590 #falseSuccessor: v592  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B16" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v590 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 70]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: j808 
=== Usages ===
=== Predecessor ===
v593 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j808  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j808 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j852 
=== Usages ===
v1661 v1662 
=== Predecessor ===
v590 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j852  <|@  <|@
f <@~|@floating>@ <|@
tid v1661 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j808 
index: - 
=== Succesors ===
=== Usages ===
j852 v854 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j808 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j852 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1661 
=== Succesors ===
next: j853 
=== Usages ===
j812 v1663 v1664 a828 v1669 v1665 v1666 v1667 v1668 
=== Predecessor ===
j808 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1661 #next: j853  <|@  <|@
f <@~|@floating>@ <|@
tid v1662 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j808 
index: - 
=== Succesors ===
=== Usages ===
j853 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j808 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j853 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1662 
=== Succesors ===
next: v817 
=== Usages ===
v818 
=== Predecessor ===
j852 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1662 #next: v817  <|@  <|@
f <@*|@fixed>@ <|@
tid v817 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v873 
=== Succesors ===
trueSuccessor: v816 
falseSuccessor: v815 
=== Usages ===
=== Predecessor ===
j853 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v873 #trueSuccessor: v816 #falseSuccessor: v815  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v816 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v824 
=== Usages ===
=== Predecessor ===
v817 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v824  <|@  <|@
f <@~|@floating>@ <|@
tid i895 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: i32
=== Inputs ===
x: i399 
y: i836 
=== Succesors ===
=== Usages ===
i807 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i399 y: i836  <|@  <|@
f <@~|@floating>@ <|@
tid i807 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i895 
y: i806 
=== Succesors ===
=== Usages ===
j811 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i895 y: i806  <|@  <|@
f <@~|@floating>@ <|@
tid j811 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i807 
=== Succesors ===
=== Usages ===
j812 v1665 v1666 v1667 v1668 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i807  <|@  <|@
f <@~|@floating>@ <|@
tid j812 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: i64
=== Inputs ===
x: j811 
y: j852 
=== Succesors ===
=== Usages ===
v818 v854 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j811 y: j852  <|@  <|@
f <@~|@floating>@ <|@
tid v818 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j853 
y: j812 
=== Succesors ===
=== Usages ===
v824 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j853 y: j812  <|@  <|@
f <@*|@fixed>@ <|@
tid v824 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v818 
=== Succesors ===
trueSuccessor: v823 
falseSuccessor: v822 
=== Usages ===
=== Predecessor ===
v816 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v818 #trueSuccessor: v823 #falseSuccessor: v822  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4571838168924413760
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v823 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v821 
=== Usages ===
=== Predecessor ===
v824 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v821  <|@  <|@
f <@*|@fixed>@ <|@
tid v821 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v820 
=== Predecessor ===
v823 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4601697034453880144
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v822 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v854 
=== Usages ===
=== Predecessor ===
v824 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v854  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v854 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1661 
value: j812 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v841 
=== Usages ===
=== Predecessor ===
v822 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1661 value: j812 stateAfter: - lastLocationAccess: - #next: v841  <|@  <|@
f <@~|@floating>@ <|@
tid v1665 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j811 
index: j852 
=== Succesors ===
=== Usages ===
v841 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j811 index: j852  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v841 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: void
=== Inputs ===
address: v1665 
=== Succesors ===
next: v844 
=== Usages ===
=== Predecessor ===
v854 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1665 #next: v844  <|@  <|@
f <@~|@floating>@ <|@
tid v1666 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j811 
index: j852 
=== Succesors ===
=== Usages ===
v844 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j811 index: j852  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v844 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: void
=== Inputs ===
address: v1666 
=== Succesors ===
next: v847 
=== Usages ===
=== Predecessor ===
v841 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1666 #next: v847  <|@  <|@
f <@~|@floating>@ <|@
tid v1667 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j811 
index: j852 
=== Succesors ===
=== Usages ===
v847 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j811 index: j852  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v847 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: void
=== Inputs ===
address: v1667 
=== Succesors ===
next: v850 
=== Usages ===
=== Predecessor ===
v844 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1667 #next: v850  <|@  <|@
f <@~|@floating>@ <|@
tid v1668 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j811 
index: j852 
=== Succesors ===
=== Usages ===
v850 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j811 index: j852  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v850 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: void
=== Inputs ===
address: v1668 
=== Succesors ===
next: v855 
=== Usages ===
=== Predecessor ===
v847 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1668 #next: v855  <|@  <|@
f <@~|@floating>@ <|@
tid v1663 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j852 
index: - 
=== Succesors ===
=== Usages ===
v855 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j852 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v855 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1663 
value: i399 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v856 
=== Usages ===
=== Predecessor ===
v850 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1663 value: i399 stateAfter: - lastLocationAccess: - #next: v856  <|@  <|@
f <@~|@floating>@ <|@
tid v1664 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j852 
index: - 
=== Succesors ===
=== Usages ===
v856 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j852 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v856 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1664 
value: j805 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v859 
=== Usages ===
=== Predecessor ===
v855 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1664 value: j805 stateAfter: - lastLocationAccess: - #next: v859  <|@  <|@
f <@~|@floating>@ <|@
tid v1669 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j852 
index: - 
=== Succesors ===
=== Usages ===
v859 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j852 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v859 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1669 
value: v973 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v827 
=== Usages ===
=== Predecessor ===
v856 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1669 value: v973 stateAfter: - lastLocationAccess: - #next: v827  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v827 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: a828 
=== Usages ===
=== Predecessor ===
v859 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a828  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a828 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j852 
=== Succesors ===
next: v830 
=== Usages ===
a833 
=== Predecessor ===
v827 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j852 #next: v830  <|@  <|@
f <@*|@fixed>@ <|@
tid v830 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v831 
=== Predecessor ===
a828 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4587366580439587224
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v815 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v819 
=== Usages ===
=== Predecessor ===
v817 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v819  <|@  <|@
f <@*|@fixed>@ <|@
tid v819 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v820 
=== Predecessor ===
v815 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B14" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588015098785928576
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v820 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v819 v821 
=== Succesors ===
next: a829 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v819 v821 #next: a829  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a829 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?5 
arguments: v804 i399 i18 
=== Succesors ===
next: v832 
=== Usages ===
a833 
=== Predecessor ===
v820 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?5 arguments: v804 i399 i18 #next: v832  <|@  <|@
f <@*|@fixed>@ <|@
tid v832 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v831 
=== Predecessor ===
a829 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a833 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v831 
values: a828 a829 
=== Succesors ===
=== Usages ===
v1658 a728 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v831 values: a828 a829  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v831 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v830 v832 
=== Succesors ===
next: v1292 
=== Usages ===
a833 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v830 v832 #next: v1292  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1292 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v989 
=== Usages ===
j1294 
=== Predecessor ===
v831 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v989  <|@  <|@
f <@*|@fixed>@ <|@
tid v989 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1288 
=== Succesors ===
trueSuccessor: v987 
falseSuccessor: v988 
=== Usages ===
=== Predecessor ===
v1292 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1288 #trueSuccessor: v987 #falseSuccessor: v988  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B41" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v987 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1006 
=== Usages ===
=== Predecessor ===
v989 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1006  <|@  <|@
f <@*|@fixed>@ <|@
tid v1006 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1007 
=== Predecessor ===
v987 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v988 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v992 
=== Usages ===
=== Predecessor ===
v989 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v992  <|@  <|@
f <@~|@floating>@ <|@
tid v1658 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a833 
index: - 
=== Succesors ===
=== Usages ===
j1294 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a833 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1294 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1292 
address: v1658 
=== Succesors ===
=== Usages ===
v1689 v1690 v1691 v1692 v1693 v1694 v1695 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1292 address: v1658  <|@  <|@
f <@~|@floating>@ <|@
tid j981 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i399 
=== Succesors ===
=== Usages ===
j1346 j1343 j1624 j1335 j1339 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i399  <|@  <|@
f <@~|@floating>@ <|@
tid j1624 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483680 - 2147483615]
=== Inputs ===
x: j981 
y: j1328 
=== Succesors ===
=== Usages ===
v1623 v1332 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j981 y: j1328  <|@  <|@
f <@~|@floating>@ <|@
tid v1623 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1624 
y: j670 
=== Succesors ===
=== Usages ===
v992 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1624 y: j670  <|@  <|@
f <@*|@fixed>@ <|@
tid v992 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1623 
=== Succesors ===
trueSuccessor: v990 
falseSuccessor: v991 
=== Usages ===
=== Predecessor ===
v988 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1623 #trueSuccessor: v990 #falseSuccessor: v991  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v990 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1002 
=== Usages ===
=== Predecessor ===
v992 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1002  <|@  <|@
f <@*|@fixed>@ <|@
tid v1002 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1003 
=== Predecessor ===
v990 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4589168020290535424
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v991 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v993 
=== Usages ===
=== Predecessor ===
v992 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v993  <|@  <|@
f <@*|@fixed>@ <|@
tid v993 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v994 
=== Predecessor ===
v991 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B44" 
    successors "B24" "B44" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4598175219545276416
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1322 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v994 
values: j670 j1327 
=== Succesors ===
=== Usages ===
v1695 j1327 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v994 values: j670 j1327  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v994 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v993 
=== Succesors ===
next: v1553 
=== Usages ===
j1322 v998 v999 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v993 #next: v1553  <|@  <|@
f <@~|@floating>@ <|@
tid v1695 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1294 
index: j1322 
=== Succesors ===
=== Usages ===
v1553 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1294 index: j1322  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1553 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1695 
value: v1582 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1001 
=== Usages ===
=== Predecessor ===
v994 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1695 value: v1582 stateAfter: - lastLocationAccess: - #next: v1001  <|@  <|@
f <@~|@floating>@ <|@
tid j1327 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1322 
y: j1326 
=== Succesors ===
=== Usages ===
j1317 j1322 v1332 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1322 y: j1326  <|@  <|@
f <@~|@floating>@ <|@
tid v1332 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1624 
y: j1327 
=== Succesors ===
=== Usages ===
v1001 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1624 y: j1327  <|@  <|@
f <@*|@fixed>@ <|@
tid v1001 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1332 
=== Succesors ===
trueSuccessor: v998 
falseSuccessor: v1000 
=== Usages ===
=== Predecessor ===
v1553 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1332 #trueSuccessor: v998 #falseSuccessor: v1000  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4589168020290535424
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v998 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v994 
=== Succesors ===
next: v1004 
=== Usages ===
=== Predecessor ===
v1001 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v994 #next: v1004  <|@  <|@
f <@*|@fixed>@ <|@
tid v1004 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1003 
=== Predecessor ===
v998 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1317 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1003 
values: j670 j1327 
=== Succesors ===
=== Usages ===
v1694 j1321 j1312 v1336 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1003 values: j670 j1327  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1003 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1002 v1004 
=== Succesors ===
next: v1027 
=== Usages ===
j1317 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1002 v1004 #next: v1027  <|@  <|@
f <@~|@floating>@ <|@
tid j1335 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j981 
y: j1334 
=== Succesors ===
=== Usages ===
v1336 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j981 y: j1334  <|@  <|@
f <@~|@floating>@ <|@
tid v1336 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1335 
y: j1317 
=== Succesors ===
=== Usages ===
v1027 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1335 y: j1317  <|@  <|@
f <@*|@fixed>@ <|@
tid v1027 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1336 
=== Succesors ===
trueSuccessor: v1026 
falseSuccessor: v1025 
=== Usages ===
=== Predecessor ===
v1003 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1336 #trueSuccessor: v1026 #falseSuccessor: v1025  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589168020290535424
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1026 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1030 
=== Usages ===
=== Predecessor ===
v1027 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1030  <|@  <|@
f <@*|@fixed>@ <|@
tid v1030 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1014 
=== Predecessor ===
v1026 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1025 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1552 
=== Usages ===
=== Predecessor ===
v1027 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1552  <|@  <|@
f <@~|@floating>@ <|@
tid v1694 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1294 
index: j1317 
=== Succesors ===
=== Usages ===
v1552 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1294 index: j1317  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1552 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1694 
value: v1586 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1013 
=== Usages ===
=== Predecessor ===
v1025 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1694 value: v1586 stateAfter: - lastLocationAccess: - #next: v1013  <|@  <|@
f <@~|@floating>@ <|@
tid j1321 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1317 
y: j427 
=== Succesors ===
=== Usages ===
j1312 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1317 y: j427  <|@  <|@
f <@*|@fixed>@ <|@
tid v1013 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1014 
=== Predecessor ===
v1552 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1312 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1014 
values: j1321 j1317 
=== Succesors ===
=== Usages ===
v1693 j1316 j1306 v1340 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1014 values: j1321 j1317  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1014 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1013 v1030 
=== Succesors ===
next: v1033 
=== Usages ===
j1312 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1013 v1030 #next: v1033  <|@  <|@
f <@~|@floating>@ <|@
tid j1339 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j981 
y: j1338 
=== Succesors ===
=== Usages ===
v1340 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j981 y: j1338  <|@  <|@
f <@~|@floating>@ <|@
tid v1340 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1339 
y: j1312 
=== Succesors ===
=== Usages ===
v1033 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1339 y: j1312  <|@  <|@
f <@*|@fixed>@ <|@
tid v1033 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1340 
=== Succesors ===
trueSuccessor: v1032 
falseSuccessor: v1031 
=== Usages ===
=== Predecessor ===
v1014 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1340 #trueSuccessor: v1032 #falseSuccessor: v1031  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4589168020290535424
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1032 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1036 
=== Usages ===
=== Predecessor ===
v1033 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1036  <|@  <|@
f <@*|@fixed>@ <|@
tid v1036 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1018 
=== Predecessor ===
v1032 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1031 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1550 
=== Usages ===
=== Predecessor ===
v1033 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1550  <|@  <|@
f <@~|@floating>@ <|@
tid v1693 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1294 
index: j1312 
=== Succesors ===
=== Usages ===
v1550 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1294 index: j1312  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1550 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1693 
value: v1585 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1017 
=== Usages ===
=== Predecessor ===
v1031 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1693 value: v1585 stateAfter: - lastLocationAccess: - #next: v1017  <|@  <|@
f <@~|@floating>@ <|@
tid j1316 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1312 
y: j800 
=== Succesors ===
=== Usages ===
j1306 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1312 y: j800  <|@  <|@
f <@*|@fixed>@ <|@
tid v1017 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1018 
=== Predecessor ===
v1550 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1306 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1018 
values: j1316 j1312 
=== Succesors ===
=== Usages ===
v1692 j1311 j1295 v1344 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1018 values: j1316 j1312  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1018 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1017 v1036 
=== Succesors ===
next: v1039 
=== Usages ===
j1306 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1017 v1036 #next: v1039  <|@  <|@
f <@~|@floating>@ <|@
tid j1343 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j981 
y: j1342 
=== Succesors ===
=== Usages ===
v1344 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j981 y: j1342  <|@  <|@
f <@~|@floating>@ <|@
tid v1344 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1343 
y: j1306 
=== Succesors ===
=== Usages ===
v1039 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1343 y: j1306  <|@  <|@
f <@*|@fixed>@ <|@
tid v1039 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1344 
=== Succesors ===
trueSuccessor: v1038 
falseSuccessor: v1037 
=== Usages ===
=== Predecessor ===
v1018 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1344 #trueSuccessor: v1038 #falseSuccessor: v1037  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589168020290535424
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1038 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1042 
=== Usages ===
=== Predecessor ===
v1039 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1042  <|@  <|@
f <@*|@fixed>@ <|@
tid v1042 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1022 
=== Predecessor ===
v1038 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1037 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1548 
=== Usages ===
=== Predecessor ===
v1039 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1548  <|@  <|@
f <@~|@floating>@ <|@
tid v1692 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1294 
index: j1306 
=== Succesors ===
=== Usages ===
v1548 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1294 index: j1306  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1548 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1692 
value: v1584 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1021 
=== Usages ===
=== Predecessor ===
v1037 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1692 value: v1584 stateAfter: - lastLocationAccess: - #next: v1021  <|@  <|@
f <@~|@floating>@ <|@
tid j1311 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1306 
y: j1310 
=== Succesors ===
=== Usages ===
j1295 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1306 y: j1310  <|@  <|@
f <@*|@fixed>@ <|@
tid v1021 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1022 
=== Predecessor ===
v1548 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1295 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1022 
values: j1311 j1306 
=== Succesors ===
=== Usages ===
v1689 j1299 v1347 j1530 v1690 v1691 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1022 values: j1311 j1306  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1022 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1021 v1042 
=== Succesors ===
next: v1045 
=== Usages ===
j1295 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1021 v1042 #next: v1045  <|@  <|@
f <@~|@floating>@ <|@
tid j1346 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j981 
y: j541 
=== Succesors ===
=== Usages ===
v1347 v1349 v1351 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j981 y: j541  <|@  <|@
f <@~|@floating>@ <|@
tid v1347 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1346 
y: j1295 
=== Succesors ===
=== Usages ===
v1045 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1346 y: j1295  <|@  <|@
f <@*|@fixed>@ <|@
tid v1045 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1347 
=== Succesors ===
trueSuccessor: v1044 
falseSuccessor: v1043 
=== Usages ===
=== Predecessor ===
v1022 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1347 #trueSuccessor: v1044 #falseSuccessor: v1043  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B41" 
    xhandlers
    flags 
    probability 4589168020290535424
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1044 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1048 
=== Usages ===
=== Predecessor ===
v1045 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1048  <|@  <|@
f <@*|@fixed>@ <|@
tid v1048 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1007 
=== Predecessor ===
v1044 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1043 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1544 
=== Usages ===
=== Predecessor ===
v1045 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1544  <|@  <|@
f <@~|@floating>@ <|@
tid v1689 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1294 
index: j1295 
=== Succesors ===
=== Usages ===
v1544 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1294 index: j1295  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1544 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1689 
value: i1583 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1051 
=== Usages ===
=== Predecessor ===
v1043 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1689 value: i1583 stateAfter: - lastLocationAccess: - #next: v1051  <|@  <|@
f <@~|@floating>@ <|@
tid j1299 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1295 
y: j805 
=== Succesors ===
=== Usages ===
v1349 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1295 y: j805  <|@  <|@
f <@~|@floating>@ <|@
tid v1349 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1346 
y: j1299 
=== Succesors ===
=== Usages ===
v1051 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1346 y: j1299  <|@  <|@
f <@*|@fixed>@ <|@
tid v1051 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1349 
=== Succesors ===
trueSuccessor: v1050 
falseSuccessor: v1049 
=== Usages ===
=== Predecessor ===
v1544 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1349 #trueSuccessor: v1050 #falseSuccessor: v1049  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    probability 4586916220476850176
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1050 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1054 
=== Usages ===
=== Predecessor ===
v1051 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1054  <|@  <|@
f <@*|@fixed>@ <|@
tid v1054 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1007 
=== Predecessor ===
v1050 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4594234569871327232
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1049 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1545 
=== Usages ===
=== Predecessor ===
v1051 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1545  <|@  <|@
f <@~|@floating>@ <|@
tid v1690 <|@
d <@d|@=== Debug Properties ===
displacement: 1
scale: Times1
stamp: void*
=== Inputs ===
base: j1294 
index: j1295 
=== Succesors ===
=== Usages ===
v1545 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1294 index: j1295  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1545 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1690 
value: i1583 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1057 
=== Usages ===
=== Predecessor ===
v1049 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1690 value: i1583 stateAfter: - lastLocationAccess: - #next: v1057  <|@  <|@
f <@~|@floating>@ <|@
tid j1530 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1295 
y: j1529 
=== Succesors ===
=== Usages ===
v1351 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1295 y: j1529  <|@  <|@
f <@~|@floating>@ <|@
tid v1351 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1346 
y: j1530 
=== Succesors ===
=== Usages ===
v1057 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1346 y: j1530  <|@  <|@
f <@*|@fixed>@ <|@
tid v1057 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1351 
=== Succesors ===
trueSuccessor: v1056 
falseSuccessor: v1055 
=== Usages ===
=== Predecessor ===
v1545 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1351 #trueSuccessor: v1056 #falseSuccessor: v1055  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4585227370616586240
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1056 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1060 
=== Usages ===
=== Predecessor ===
v1057 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1060  <|@  <|@
f <@*|@fixed>@ <|@
tid v1060 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1007 
=== Predecessor ===
v1056 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4592264245034352640
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1055 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1546 
=== Usages ===
=== Predecessor ===
v1057 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1546  <|@  <|@
f <@~|@floating>@ <|@
tid v1691 <|@
d <@d|@=== Debug Properties ===
displacement: 2
scale: Times1
stamp: void*
=== Inputs ===
base: j1294 
index: j1295 
=== Succesors ===
=== Usages ===
v1546 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1294 index: j1295  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1546 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1691 
value: i1583 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1024 
=== Usages ===
=== Predecessor ===
v1055 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1691 value: i1583 stateAfter: - lastLocationAccess: - #next: v1024  <|@  <|@
f <@*|@fixed>@ <|@
tid v1024 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1007 
=== Predecessor ===
v1546 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B19" "B40" "B35" "B37" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1007 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1006 v1024 v1048 v1054 v1060 
=== Succesors ===
next: a728 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1006 v1024 v1048 v1054 v1060 #next: a728  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a728 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a833 
=== Succesors ===
next: v22 
=== Usages ===
v358 a348 
=== Predecessor ===
v1007 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a833 #next: v22  <|@  <|@
f <@*|@fixed>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.encode(StringCoding.java:351) [bci: 24]
stamp: void
trueSuccessorProbability: 0.04030493641460409
=== Inputs ===
condition: v19 
=== Succesors ===
trueSuccessor: v20 
falseSuccessor: v21 
=== Usages ===
=== Predecessor ===
a728 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v19 #trueSuccessor: v20 #falseSuccessor: v21  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors 
    xhandlers
    flags 
    probability 4581465774900200016
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.encode(StringCoding.java:352) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v358 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v358  <|@  <|@
f <@*|@fixed>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a728 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a728 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B78" 
    xhandlers
    flags 
    probability 4602315784579410907
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.encode(StringCoding.java:353) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v344 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v344  <|@  <|@
f <@*|@fixed>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v343 
=== Predecessor ===
v21 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4595923419731591168
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1000 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v999 
=== Usages ===
=== Predecessor ===
v1001 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v999  <|@  <|@
f <@*|@fixed>@ <|@
tid v999 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v994 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1000 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v994  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 70]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v761 
=== Usages ===
=== Predecessor ===
v593 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v761  <|@  <|@
f <@~|@floating>@ <|@
tid i762 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -103699
stableDimension: 0
stamp: i32 [-103699] ⇊00000000fffe6aed ⇈00000000fffe6aed
stampKind: i32
value: int[-103699|0xfffffffffffe6aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i750 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v746 
=== Predecessor ===
v592 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B47" "B50" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:51) [bci: 32]
at java.nio.charset.Charset.atBugLevel(Charset.java:287) [bci: 40]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: j868 
=== Usages ===
=== Predecessor ===
v269 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j868  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j868 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j904 
=== Usages ===
v1670 v1671 
=== Predecessor ===
v268 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j904  <|@  <|@
f <@~|@floating>@ <|@
tid v1670 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j868 
index: - 
=== Succesors ===
=== Usages ===
j904 v906 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j868 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j904 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1670 
=== Succesors ===
next: j905 
=== Usages ===
j872 v1672 v1673 a887 v1678 v1674 v1675 v1676 v1677 
=== Predecessor ===
j868 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1670 #next: j905  <|@  <|@
f <@~|@floating>@ <|@
tid v1671 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j868 
index: - 
=== Succesors ===
=== Usages ===
j905 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j868 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j905 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1671 
=== Succesors ===
next: v876 
=== Usages ===
v877 
=== Predecessor ===
j904 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1671 #next: v876  <|@  <|@
f <@*|@fixed>@ <|@
tid v876 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v873 
=== Succesors ===
trueSuccessor: v875 
falseSuccessor: v874 
=== Usages ===
=== Predecessor ===
j905 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v873 #trueSuccessor: v875 #falseSuccessor: v874  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v875 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v883 
=== Usages ===
=== Predecessor ===
v876 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v883  <|@  <|@
f <@~|@floating>@ <|@
tid i1628 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: i32
=== Inputs ===
x: i399 
y: i836 
=== Succesors ===
=== Usages ===
i1627 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i399 y: i836  <|@  <|@
f <@~|@floating>@ <|@
tid i1627 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i1628 
y: i806 
=== Succesors ===
=== Usages ===
j1626 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i1628 y: i806  <|@  <|@
f <@~|@floating>@ <|@
tid j1626 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i1627 
=== Succesors ===
=== Usages ===
j872 v1674 v1675 v1676 v1677 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1627  <|@  <|@
f <@~|@floating>@ <|@
tid j872 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: i64
=== Inputs ===
x: j904 
y: j1626 
=== Succesors ===
=== Usages ===
v877 v906 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j904 y: j1626  <|@  <|@
f <@~|@floating>@ <|@
tid v877 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j905 
y: j872 
=== Succesors ===
=== Usages ===
v883 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j905 y: j872  <|@  <|@
f <@*|@fixed>@ <|@
tid v883 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v877 
=== Succesors ===
trueSuccessor: v882 
falseSuccessor: v881 
=== Usages ===
=== Predecessor ===
v875 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v877 #trueSuccessor: v882 #falseSuccessor: v881  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B51" 
    xhandlers
    flags 
    probability 4571838168924413760
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v882 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v880 
=== Usages ===
=== Predecessor ===
v883 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v880  <|@  <|@
f <@*|@fixed>@ <|@
tid v880 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v879 
=== Predecessor ===
v882 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 4601697034453880144
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v881 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v906 
=== Usages ===
=== Predecessor ===
v883 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v906  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v906 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1670 
value: j872 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v897 
=== Usages ===
=== Predecessor ===
v881 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1670 value: j872 stateAfter: - lastLocationAccess: - #next: v897  <|@  <|@
f <@~|@floating>@ <|@
tid v1674 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j1626 
index: j904 
=== Succesors ===
=== Usages ===
v897 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1626 index: j904  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v897 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: void
=== Inputs ===
address: v1674 
=== Succesors ===
next: v899 
=== Usages ===
=== Predecessor ===
v906 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1674 #next: v899  <|@  <|@
f <@~|@floating>@ <|@
tid v1675 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j1626 
index: j904 
=== Succesors ===
=== Usages ===
v899 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1626 index: j904  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v899 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: void
=== Inputs ===
address: v1675 
=== Succesors ===
next: v901 
=== Usages ===
=== Predecessor ===
v897 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1675 #next: v901  <|@  <|@
f <@~|@floating>@ <|@
tid v1676 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j1626 
index: j904 
=== Succesors ===
=== Usages ===
v901 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1626 index: j904  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v901 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: void
=== Inputs ===
address: v1676 
=== Succesors ===
next: v903 
=== Usages ===
=== Predecessor ===
v899 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1676 #next: v903  <|@  <|@
f <@~|@floating>@ <|@
tid v1677 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j1626 
index: j904 
=== Succesors ===
=== Usages ===
v903 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1626 index: j904  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v903 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: void
=== Inputs ===
address: v1677 
=== Succesors ===
next: v907 
=== Usages ===
=== Predecessor ===
v901 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1677 #next: v907  <|@  <|@
f <@~|@floating>@ <|@
tid v1672 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j904 
index: - 
=== Succesors ===
=== Usages ===
v907 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j904 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v907 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1672 
value: i399 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v908 
=== Usages ===
=== Predecessor ===
v903 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1672 value: i399 stateAfter: - lastLocationAccess: - #next: v908  <|@  <|@
f <@~|@floating>@ <|@
tid v1673 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j904 
index: - 
=== Succesors ===
=== Usages ===
v908 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j904 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v908 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1673 
value: j805 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v911 
=== Usages ===
=== Predecessor ===
v907 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1673 value: j805 stateAfter: - lastLocationAccess: - #next: v911  <|@  <|@
f <@~|@floating>@ <|@
tid v1678 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j904 
index: - 
=== Succesors ===
=== Usages ===
v911 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j904 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v911 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1678 
value: v973 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v886 
=== Usages ===
=== Predecessor ===
v908 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1678 value: v973 stateAfter: - lastLocationAccess: - #next: v886  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v886 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: a887 
=== Usages ===
=== Predecessor ===
v911 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a887  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a887 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j904 
=== Succesors ===
next: v889 
=== Usages ===
a892 
=== Predecessor ===
v886 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j904 #next: v889  <|@  <|@
f <@*|@fixed>@ <|@
tid v889 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v890 
=== Predecessor ===
a887 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B51" 
    xhandlers
    flags 
    probability 4587366580439587224
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v874 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v878 
=== Usages ===
=== Predecessor ===
v876 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v878  <|@  <|@
f <@*|@fixed>@ <|@
tid v878 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v879 
=== Predecessor ===
v874 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B48" 
    successors "B52" 
    xhandlers
    flags 
    probability 4588015098785928576
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v879 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v878 v880 
=== Succesors ===
next: a888 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v878 v880 #next: a888  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a888 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?5 
arguments: v804 i399 i18 
=== Succesors ===
next: v891 
=== Usages ===
a892 
=== Predecessor ===
v879 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?5 arguments: v804 i399 i18 #next: v891  <|@  <|@
f <@*|@fixed>@ <|@
tid v891 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v890 
=== Predecessor ===
a888 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B49" "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a892 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v890 
values: a887 a888 
=== Succesors ===
=== Usages ===
v1659 a732 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v890 values: a887 a888  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v890 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v889 v891 
=== Succesors ===
next: v1354 
=== Usages ===
a892 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v889 v891 #next: v1354  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1354 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v1067 
=== Usages ===
j1356 
=== Predecessor ===
v890 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v1067  <|@  <|@
f <@*|@fixed>@ <|@
tid v1067 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1288 
=== Succesors ===
trueSuccessor: v1065 
falseSuccessor: v1066 
=== Usages ===
=== Predecessor ===
v1354 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1288 #trueSuccessor: v1065 #falseSuccessor: v1066  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B75" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1065 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1083 
=== Usages ===
=== Predecessor ===
v1067 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1083  <|@  <|@
f <@*|@fixed>@ <|@
tid v1083 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1084 
=== Predecessor ===
v1065 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1066 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1070 
=== Usages ===
=== Predecessor ===
v1067 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1070  <|@  <|@
f <@~|@floating>@ <|@
tid v1659 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a892 
index: - 
=== Succesors ===
=== Usages ===
j1356 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a892 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1356 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1354 
address: v1659 
=== Succesors ===
=== Usages ===
v1696 v1697 v1698 v1699 v1700 v1701 v1702 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1354 address: v1659  <|@  <|@
f <@~|@floating>@ <|@
tid j1625 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i399 
=== Succesors ===
=== Usages ===
j1329 j1622 j1621 j1620 j1619 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i399  <|@  <|@
f <@~|@floating>@ <|@
tid j1329 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483680 - 2147483615]
=== Inputs ===
x: j1625 
y: j1328 
=== Succesors ===
=== Usages ===
v1330 v1388 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1625 y: j1328  <|@  <|@
f <@~|@floating>@ <|@
tid v1330 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1329 
y: j670 
=== Succesors ===
=== Usages ===
v1070 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1329 y: j670  <|@  <|@
f <@*|@fixed>@ <|@
tid v1070 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1330 
=== Succesors ===
trueSuccessor: v1068 
falseSuccessor: v1069 
=== Usages ===
=== Predecessor ===
v1066 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1330 #trueSuccessor: v1068 #falseSuccessor: v1069  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1068 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1079 
=== Usages ===
=== Predecessor ===
v1070 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1079  <|@  <|@
f <@*|@fixed>@ <|@
tid v1079 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1080 
=== Predecessor ===
v1068 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4589168020290535424
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1069 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1071 
=== Usages ===
=== Predecessor ===
v1070 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1071  <|@  <|@
f <@*|@fixed>@ <|@
tid v1071 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1072 
=== Predecessor ===
v1069 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B182" 
    successors "B58" "B182" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4598175219545276416
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1383 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1072 
values: j670 j1387 
=== Succesors ===
=== Usages ===
v1702 j1387 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1072 values: j670 j1387  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1072 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1071 
=== Succesors ===
next: v1560 
=== Usages ===
j1383 v1075 v1076 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1071 #next: v1560  <|@  <|@
f <@~|@floating>@ <|@
tid v1702 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1356 
index: j1383 
=== Succesors ===
=== Usages ===
v1560 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1356 index: j1383  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1560 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1702 
value: v1582 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1078 
=== Usages ===
=== Predecessor ===
v1072 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1702 value: v1582 stateAfter: - lastLocationAccess: - #next: v1078  <|@  <|@
f <@~|@floating>@ <|@
tid j1387 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1383 
y: j1326 
=== Succesors ===
=== Usages ===
j1378 j1383 v1388 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1383 y: j1326  <|@  <|@
f <@~|@floating>@ <|@
tid v1388 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1329 
y: j1387 
=== Succesors ===
=== Usages ===
v1078 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1329 y: j1387  <|@  <|@
f <@*|@fixed>@ <|@
tid v1078 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1388 
=== Succesors ===
trueSuccessor: v1075 
falseSuccessor: v1077 
=== Usages ===
=== Predecessor ===
v1560 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1388 #trueSuccessor: v1075 #falseSuccessor: v1077  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" 
    xhandlers
    flags 
    probability 4589168020290535424
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1075 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1072 
=== Succesors ===
next: v1081 
=== Usages ===
=== Predecessor ===
v1078 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1072 #next: v1081  <|@  <|@
f <@*|@fixed>@ <|@
tid v1081 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1080 
=== Predecessor ===
v1075 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B55" "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1378 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1080 
values: j670 j1387 
=== Succesors ===
=== Usages ===
v1701 j1382 j1373 v1390 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1080 values: j670 j1387  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1080 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1079 v1081 
=== Succesors ===
next: v1102 
=== Usages ===
j1378 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1079 v1081 #next: v1102  <|@  <|@
f <@~|@floating>@ <|@
tid j1622 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j1625 
y: j1334 
=== Succesors ===
=== Usages ===
v1390 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1625 y: j1334  <|@  <|@
f <@~|@floating>@ <|@
tid v1390 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1622 
y: j1378 
=== Succesors ===
=== Usages ===
v1102 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1622 y: j1378  <|@  <|@
f <@*|@fixed>@ <|@
tid v1102 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1390 
=== Succesors ===
trueSuccessor: v1101 
falseSuccessor: v1100 
=== Usages ===
=== Predecessor ===
v1080 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1390 #trueSuccessor: v1101 #falseSuccessor: v1100  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4589168020290535424
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1101 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1105 
=== Usages ===
=== Predecessor ===
v1102 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1105  <|@  <|@
f <@*|@fixed>@ <|@
tid v1105 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1091 
=== Predecessor ===
v1101 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1100 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1559 
=== Usages ===
=== Predecessor ===
v1102 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1559  <|@  <|@
f <@~|@floating>@ <|@
tid v1701 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1356 
index: j1378 
=== Succesors ===
=== Usages ===
v1559 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1356 index: j1378  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1559 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1701 
value: v1586 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1090 
=== Usages ===
=== Predecessor ===
v1100 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1701 value: v1586 stateAfter: - lastLocationAccess: - #next: v1090  <|@  <|@
f <@~|@floating>@ <|@
tid j1382 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1378 
y: j427 
=== Succesors ===
=== Usages ===
j1373 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1378 y: j427  <|@  <|@
f <@*|@fixed>@ <|@
tid v1090 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1091 
=== Predecessor ===
v1559 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1373 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1091 
values: j1382 j1378 
=== Succesors ===
=== Usages ===
v1700 j1377 j1368 v1392 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1091 values: j1382 j1378  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1091 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1090 v1105 
=== Succesors ===
next: v1108 
=== Usages ===
j1373 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1090 v1105 #next: v1108  <|@  <|@
f <@~|@floating>@ <|@
tid j1621 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j1625 
y: j1338 
=== Succesors ===
=== Usages ===
v1392 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1625 y: j1338  <|@  <|@
f <@~|@floating>@ <|@
tid v1392 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1621 
y: j1373 
=== Succesors ===
=== Usages ===
v1108 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1621 y: j1373  <|@  <|@
f <@*|@fixed>@ <|@
tid v1108 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1392 
=== Succesors ===
trueSuccessor: v1107 
falseSuccessor: v1106 
=== Usages ===
=== Predecessor ===
v1091 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1392 #trueSuccessor: v1107 #falseSuccessor: v1106  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    probability 4589168020290535424
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1107 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1111 
=== Usages ===
=== Predecessor ===
v1108 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1111  <|@  <|@
f <@*|@fixed>@ <|@
tid v1111 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1094 
=== Predecessor ===
v1107 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1106 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1558 
=== Usages ===
=== Predecessor ===
v1108 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1558  <|@  <|@
f <@~|@floating>@ <|@
tid v1700 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1356 
index: j1373 
=== Succesors ===
=== Usages ===
v1558 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1356 index: j1373  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1558 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1700 
value: v1585 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1093 
=== Usages ===
=== Predecessor ===
v1106 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1700 value: v1585 stateAfter: - lastLocationAccess: - #next: v1093  <|@  <|@
f <@~|@floating>@ <|@
tid j1377 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1373 
y: j800 
=== Succesors ===
=== Usages ===
j1368 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1373 y: j800  <|@  <|@
f <@*|@fixed>@ <|@
tid v1093 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1094 
=== Predecessor ===
v1558 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1368 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1094 
values: j1377 j1373 
=== Succesors ===
=== Usages ===
v1699 j1372 j1357 v1394 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1094 values: j1377 j1373  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1094 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1093 v1111 
=== Succesors ===
next: v1114 
=== Usages ===
j1368 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1093 v1111 #next: v1114  <|@  <|@
f <@~|@floating>@ <|@
tid j1620 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j1625 
y: j1342 
=== Succesors ===
=== Usages ===
v1394 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1625 y: j1342  <|@  <|@
f <@~|@floating>@ <|@
tid v1394 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1620 
y: j1368 
=== Succesors ===
=== Usages ===
v1114 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1620 y: j1368  <|@  <|@
f <@*|@fixed>@ <|@
tid v1114 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1394 
=== Succesors ===
trueSuccessor: v1113 
falseSuccessor: v1112 
=== Usages ===
=== Predecessor ===
v1094 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1394 #trueSuccessor: v1113 #falseSuccessor: v1112  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4589168020290535424
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1113 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1117 
=== Usages ===
=== Predecessor ===
v1114 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1117  <|@  <|@
f <@*|@fixed>@ <|@
tid v1117 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1097 
=== Predecessor ===
v1113 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1112 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1557 
=== Usages ===
=== Predecessor ===
v1114 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1557  <|@  <|@
f <@~|@floating>@ <|@
tid v1699 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1356 
index: j1368 
=== Succesors ===
=== Usages ===
v1557 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1356 index: j1368  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1557 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1699 
value: v1584 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1096 
=== Usages ===
=== Predecessor ===
v1112 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1699 value: v1584 stateAfter: - lastLocationAccess: - #next: v1096  <|@  <|@
f <@~|@floating>@ <|@
tid j1372 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1368 
y: j1310 
=== Succesors ===
=== Usages ===
j1357 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1368 y: j1310  <|@  <|@
f <@*|@fixed>@ <|@
tid v1096 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1097 
=== Predecessor ===
v1557 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors "B69" "B70" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1357 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1097 
values: j1372 j1368 
=== Succesors ===
=== Usages ===
v1696 j1361 v1396 j1531 v1697 v1698 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1097 values: j1372 j1368  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1097 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1096 v1117 
=== Succesors ===
next: v1120 
=== Usages ===
j1357 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1096 v1117 #next: v1120  <|@  <|@
f <@~|@floating>@ <|@
tid j1619 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j1625 
y: j541 
=== Succesors ===
=== Usages ===
v1396 v1398 v1400 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1625 y: j541  <|@  <|@
f <@~|@floating>@ <|@
tid v1396 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1619 
y: j1357 
=== Succesors ===
=== Usages ===
v1120 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1619 y: j1357  <|@  <|@
f <@*|@fixed>@ <|@
tid v1120 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1396 
=== Succesors ===
trueSuccessor: v1119 
falseSuccessor: v1118 
=== Usages ===
=== Predecessor ===
v1097 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1396 #trueSuccessor: v1119 #falseSuccessor: v1118  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B75" 
    xhandlers
    flags 
    probability 4589168020290535424
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1119 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1123 
=== Usages ===
=== Predecessor ===
v1120 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1123  <|@  <|@
f <@*|@fixed>@ <|@
tid v1123 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1084 
=== Predecessor ===
v1119 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1118 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1554 
=== Usages ===
=== Predecessor ===
v1120 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1554  <|@  <|@
f <@~|@floating>@ <|@
tid v1696 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1356 
index: j1357 
=== Succesors ===
=== Usages ===
v1554 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1356 index: j1357  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1554 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1696 
value: i1583 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1126 
=== Usages ===
=== Predecessor ===
v1118 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1696 value: i1583 stateAfter: - lastLocationAccess: - #next: v1126  <|@  <|@
f <@~|@floating>@ <|@
tid j1361 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1357 
y: j805 
=== Succesors ===
=== Usages ===
v1398 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1357 y: j805  <|@  <|@
f <@~|@floating>@ <|@
tid v1398 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1619 
y: j1361 
=== Succesors ===
=== Usages ===
v1126 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1619 y: j1361  <|@  <|@
f <@*|@fixed>@ <|@
tid v1126 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1398 
=== Succesors ===
trueSuccessor: v1125 
falseSuccessor: v1124 
=== Usages ===
=== Predecessor ===
v1554 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1398 #trueSuccessor: v1125 #falseSuccessor: v1124  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B75" 
    xhandlers
    flags 
    probability 4586916220476850176
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1125 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1129 
=== Usages ===
=== Predecessor ===
v1126 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1129  <|@  <|@
f <@*|@fixed>@ <|@
tid v1129 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1084 
=== Predecessor ===
v1125 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4594234569871327232
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1124 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1555 
=== Usages ===
=== Predecessor ===
v1126 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1555  <|@  <|@
f <@~|@floating>@ <|@
tid v1697 <|@
d <@d|@=== Debug Properties ===
displacement: 1
scale: Times1
stamp: void*
=== Inputs ===
base: j1356 
index: j1357 
=== Succesors ===
=== Usages ===
v1555 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1356 index: j1357  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1555 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1697 
value: i1583 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1132 
=== Usages ===
=== Predecessor ===
v1124 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1697 value: i1583 stateAfter: - lastLocationAccess: - #next: v1132  <|@  <|@
f <@~|@floating>@ <|@
tid j1531 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1357 
y: j1529 
=== Succesors ===
=== Usages ===
v1400 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1357 y: j1529  <|@  <|@
f <@~|@floating>@ <|@
tid v1400 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1619 
y: j1531 
=== Succesors ===
=== Usages ===
v1132 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1619 y: j1531  <|@  <|@
f <@*|@fixed>@ <|@
tid v1132 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1400 
=== Succesors ===
trueSuccessor: v1131 
falseSuccessor: v1130 
=== Usages ===
=== Predecessor ===
v1555 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1400 #trueSuccessor: v1131 #falseSuccessor: v1130  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" 
    xhandlers
    flags 
    probability 4585227370616586240
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1131 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1135 
=== Usages ===
=== Predecessor ===
v1132 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1135  <|@  <|@
f <@*|@fixed>@ <|@
tid v1135 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1084 
=== Predecessor ===
v1131 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" 
    xhandlers
    flags 
    probability 4592264245034352640
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1130 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1556 
=== Usages ===
=== Predecessor ===
v1132 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1556  <|@  <|@
f <@~|@floating>@ <|@
tid v1698 <|@
d <@d|@=== Debug Properties ===
displacement: 2
scale: Times1
stamp: void*
=== Inputs ===
base: j1356 
index: j1357 
=== Succesors ===
=== Usages ===
v1556 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1356 index: j1357  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1556 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1698 
value: i1583 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1099 
=== Usages ===
=== Predecessor ===
v1130 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1698 value: i1583 stateAfter: - lastLocationAccess: - #next: v1099  <|@  <|@
f <@*|@fixed>@ <|@
tid v1099 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1084 
=== Predecessor ===
v1556 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B53" "B74" "B69" "B71" "B73" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1084 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1083 v1099 v1123 v1129 v1135 
=== Succesors ===
next: a732 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1083 v1099 v1123 v1129 v1135 #next: a732  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a732 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a892 
=== Succesors ===
next: v355 
=== Usages ===
v359 a348 
=== Predecessor ===
v1084 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a892 #next: v355  <|@  <|@
f <@*|@fixed>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.encode(StringCoding.java:351) [bci: 24]
stamp: void
trueSuccessorProbability: 0.04030493641460409
=== Inputs ===
condition: v19 
=== Succesors ===
trueSuccessor: v353 
falseSuccessor: v354 
=== Usages ===
=== Predecessor ===
a732 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v19 #trueSuccessor: v353 #falseSuccessor: v354  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors 
    xhandlers
    flags 
    probability 4581465774900200016
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.encode(StringCoding.java:352) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v359 
=== Usages ===
=== Predecessor ===
v355 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v359  <|@  <|@
f <@*|@fixed>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a732 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v353 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a732 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B78" 
    xhandlers
    flags 
    probability 4602315784579410907
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.encode(StringCoding.java:353) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v346 
=== Usages ===
=== Predecessor ===
v355 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v346  <|@  <|@
f <@*|@fixed>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v343 
=== Predecessor ===
v354 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B43" "B77" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4606819384206781403
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a348 <|@
d <@d|@=== Debug Properties ===
stamp: a!# [B
valueDescription: a -
=== Inputs ===
merge: v343 
values: a728 a732 
=== Succesors ===
=== Usages ===
v1654 v1655 v1653 ?116 ?172 v1656 v1651 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v343 values: a728 a732  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v344 v346 
=== Succesors ===
next: v597 
=== Usages ===
a348 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v344 v346 #next: v597  <|@  <|@
tid a325 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@352e7fb1
hasIdentity: true
objectId: -1
stamp: a!# Lsun/nio/cs/UTF_8$Encoder;
type: HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?345 ?216 ?208 ?327 ?116 ?335 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid f212 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 2]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
rawvalue: 1.1
stableDimension: 0
stamp: f32! [1.100000023841858]
stampKind: f32
value: float[1.1|0x3f8ccccd]
=== Inputs ===
=== Succesors ===
=== Usages ===
?335 ?345 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid f213 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
rawvalue: 3.0
stableDimension: 0
stamp: f32! [3.0]
stampKind: f32
value: float[3.0|0x40400000]
=== Inputs ===
=== Succesors ===
=== Usages ===
?335 ?345 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i152 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 329]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
rawvalue: 63
stableDimension: 0
stamp: i32 [63] ⇊000000000000003f ⇈000000000000003f
stampKind: i32
value: int[63|0x3f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i153 i159 ?336 ?335 ?328 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v597 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2  <|@  <|@
f <@*|@fixed>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v417 
=== Succesors ===
trueSuccessor: v596 
falseSuccessor: v594 
=== Usages ===
=== Predecessor ===
v343 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v417 #trueSuccessor: v596 #falseSuccessor: v594  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B181" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v596 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
next: v786 
=== Usages ===
=== Predecessor ===
v597 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v786  <|@  <|@
f <@~|@floating>@ <|@
tid a788 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1621998909
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1621998909]
=== Inputs ===
=== Succesors ===
=== Usages ===
a790 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i787 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -107019
stableDimension: 0
stamp: i32 [-107019] ⇊00000000fffe5df5 ⇈00000000fffe5df5
stampKind: i32
value: int[-107019|0xfffffffffffe5df5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i789 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v786 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v785 
=== Predecessor ===
v596 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4606819384206781403
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1594 
=== Usages ===
=== Predecessor ===
v597 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1594  <|@  <|@
f <@~|@floating>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:706) [bci: 14]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i399 
y: i4 
=== Succesors ===
=== Usages ===
i516 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i399 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i516 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v173 
trueValue: i399 
falseValue: i4 
=== Succesors ===
=== Usages ===
v563 v81 j540 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v173 trueValue: i399 falseValue: i4  <|@  <|@
f <@~|@floating>@ <|@
tid j540 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i516 
=== Succesors ===
=== Usages ===
j542 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i516  <|@  <|@
f <@~|@floating>@ <|@
tid j542 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j540 
y: j541 
=== Succesors ===
=== Usages ===
j543 v555 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j540 y: j541  <|@  <|@
f <@~|@floating>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i516 
y: i102 
=== Succesors ===
=== Usages ===
v1610 v1594 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i516 y: i102  <|@  <|@
f <@~|@floating>@ <|@
tid a794 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@455242270
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@455242270]
=== Inputs ===
=== Succesors ===
=== Usages ===
a790 a790 a790 a790 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1594 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v563 
=== Succesors ===
trueSuccessor: v1590 
falseSuccessor: v1593 
=== Usages ===
=== Predecessor ===
v594 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v563 #trueSuccessor: v1590 #falseSuccessor: v1593  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B85" 
    xhandlers
    flags 
    probability 4602315784579410907
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1590 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1588 
=== Usages ===
=== Predecessor ===
v1594 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1588  <|@  <|@
f <@*|@fixed>@ <|@
tid v1588 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1587 
=== Predecessor ===
v1590 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B180" 
    xhandlers
    flags 
    probability 4602315784579410907
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1593 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1633 
=== Usages ===
=== Predecessor ===
v1594 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1633  <|@  <|@
f <@~|@floating>@ <|@
tid v1649 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1633 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1633 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1649 
=== Succesors ===
next: v1602 
=== Usages ===
v546 j537 
=== Predecessor ===
v1593 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1649 #next: v1602  <|@  <|@
f <@~|@floating>@ <|@
tid j539 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i3 
=== Succesors ===
=== Usages ===
j543 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i3  <|@  <|@
f <@~|@floating>@ <|@
tid j543 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j539 
y: j542 
=== Succesors ===
=== Usages ===
v545 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j539 y: j542  <|@  <|@
f <@~|@floating>@ <|@
tid j537 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i1633 
=== Succesors ===
=== Usages ===
v545 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1633  <|@  <|@
f <@~|@floating>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j543 
y: j537 
=== Succesors ===
=== Usages ===
v1602 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j543 y: j537  <|@  <|@
f <@~|@floating>@ <|@
tid i793 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -108315
stableDimension: 0
stamp: i32 [-108315] ⇊00000000fffe58e5 ⇈00000000fffe58e5
stampKind: i32
value: int[-108315|0xfffffffffffe58e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i789 i789 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1602 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v545 
=== Succesors ===
trueSuccessor: v1601 
falseSuccessor: v1598 
=== Usages ===
=== Predecessor ===
i1633 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v545 #trueSuccessor: v1601 #falseSuccessor: v1598  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B84" "B179" 
    xhandlers
    flags 
    probability 4602315784579410907
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1601 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1600 
=== Usages ===
=== Predecessor ===
v1602 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1600  <|@  <|@
f <@~|@floating>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i1633 
=== Succesors ===
=== Usages ===
v1600 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i3 y: i1633  <|@  <|@
f <@*|@fixed>@ <|@
tid v1600 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v546 
=== Succesors ===
trueSuccessor: v1591 
falseSuccessor: v1599 
=== Usages ===
=== Predecessor ===
v1601 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v546 #trueSuccessor: v1591 #falseSuccessor: v1599  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" 
    xhandlers
    flags 
    probability 4602315784579410907
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1591 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1589 
=== Usages ===
=== Predecessor ===
v1600 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1589  <|@  <|@
f <@*|@fixed>@ <|@
tid v1589 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1587 
=== Predecessor ===
v1591 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B81" "B84" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4606819384206781403
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1587 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1588 v1589 
=== Succesors ===
next: v1610 
=== Usages ===
v551 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1588 v1589 #next: v1610  <|@  <|@
f <@*|@fixed>@ <|@
tid v1610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v563 
=== Succesors ===
trueSuccessor: v1606 
falseSuccessor: v1609 
=== Usages ===
=== Predecessor ===
v1587 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v563 #trueSuccessor: v1606 #falseSuccessor: v1609  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B91" 
    xhandlers
    flags 
    probability 4602315784579410907
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1606 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1604 
=== Usages ===
=== Predecessor ===
v1610 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1604  <|@  <|@
f <@*|@fixed>@ <|@
tid v1604 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1603 
=== Predecessor ===
v1606 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B178" 
    xhandlers
    flags 
    probability 4602315784579410907
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1609 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1618 
=== Usages ===
=== Predecessor ===
v1610 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1618  <|@  <|@
f <@~|@floating>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j542 
y: j673 
=== Succesors ===
=== Usages ===
v1618 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j542 y: j673  <|@  <|@
f <@~|@floating>@ <|@
tid i796 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -113435
stableDimension: 0
stamp: i32 [-113435] ⇊00000000fffe44e5 ⇈00000000fffe44e5
stampKind: i32
value: int[-113435|0xfffffffffffe44e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i789 i789 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1618 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v555 
=== Succesors ===
trueSuccessor: v1617 
falseSuccessor: v1614 
=== Usages ===
=== Predecessor ===
v1609 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v555 #trueSuccessor: v1617 #falseSuccessor: v1614  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4602315784579410907
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1617 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1616 
=== Usages ===
=== Predecessor ===
v1618 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1616  <|@  <|@
f <@~|@floating>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i399 
y: i18 
=== Succesors ===
=== Usages ===
v1616 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i399 y: i18  <|@  <|@
f <@*|@fixed>@ <|@
tid v1616 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v566 
=== Succesors ===
trueSuccessor: v1615 
falseSuccessor: v1607 
=== Usages ===
=== Predecessor ===
v1617 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v566 #trueSuccessor: v1615 #falseSuccessor: v1607  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B181" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1615 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1727 
=== Usages ===
=== Predecessor ===
v1616 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1727  <|@  <|@
f <@*|@fixed>@ <|@
tid v1727 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v785 
=== Predecessor ===
v1615 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4602315784579410907
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1607 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1605 
=== Usages ===
=== Predecessor ===
v1616 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1605  <|@  <|@
f <@*|@fixed>@ <|@
tid v1605 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1603 
=== Predecessor ===
v1607 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B86" "B90" 
    successors "B92" "B177" 
    xhandlers
    flags 
    probability 4606819384206781403
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1603 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1604 v1605 
=== Succesors ===
next: v414 
=== Usages ===
v560 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1604 v1605 #next: v414  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: ANY_LOCATION
nodeSourcePosition: at java.lang.System.getSecurityManager(System.java:334) [bci: 0]
at java.lang.StringCoding.encode(StringCoding.java:354) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1634 
=== Usages ===
=== Predecessor ===
v1603 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a1634  <|@  <|@
f <@~|@floating>@ <|@
tid a409 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.getSecurityManager(System.java:334) [bci: 0]
at java.lang.StringCoding.encode(StringCoding.java:354) [bci: 33]
rawvalue: Class:java.lang.System
stableDimension: 0
stamp: a!# Ljava/lang/Class;
stampKind: a -
value: Object[Class:java.lang.System]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1648 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1648 <|@
d <@d|@=== Debug Properties ===
displacement: 116
scale: Times1
stamp: void*
=== Inputs ===
base: a409 
index: - 
=== Succesors ===
=== Usages ===
a1634 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a409 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1634 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: System.security
nodeSourcePosition: at java.lang.System.getSecurityManager(System.java:334) [bci: 0]
at java.lang.StringCoding.encode(StringCoding.java:354) [bci: 33]
nullCheck: false
stamp: n# Ljava/lang/SecurityManager;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1648 
=== Succesors ===
next: v609 
=== Usages ===
v504 
=== Predecessor ===
v414 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1648 #next: v609  <|@  <|@
f <@~|@floating>@ <|@
tid v504 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.encode(StringCoding.java:354) [bci: 36]
stamp: void
=== Inputs ===
value: a1634 
=== Succesors ===
=== Usages ===
v609 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1634  <|@  <|@
f <@*|@fixed>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.encode(StringCoding.java:354) [bci: 36]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v504 
=== Succesors ===
trueSuccessor: v606 
falseSuccessor: v608 
=== Usages ===
=== Predecessor ===
a1634 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v504 #trueSuccessor: v606 #falseSuccessor: v608  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B93" 
    xhandlers
    flags 
    probability 4606819384206781403
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.encode(StringCoding.java:354) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: v415 
=== Usages ===
=== Predecessor ===
v609 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v415  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
barriers: 3
location: ANY_LOCATION
nodeSourcePosition: at java.lang.System.getSecurityManager(System.java:334) [bci: 0]
at java.lang.StringCoding.encode(StringCoding.java:354) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: v76 
=== Usages ===
=== Predecessor ===
v606 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v76  <|@  <|@
f <@~|@floating>@ <|@
tid i506 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 33]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
rawvalue: 128
stableDimension: 0
stamp: i16 [128] ⇊0000000000000080 ⇈0000000000000080
stampKind: i16
value: short[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
v507 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
v415 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" "B95" 
    successors "B94" "B97" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4633373721283045376
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i78 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v77 
values: i3 i104 
=== Succesors ===
=== Usages ===
i104 i114 v1650 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v77 values: i3 i104  <|@  <|@
f <@~|@floating>@ <|@
tid i79 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v77 
values: i18 i103 
=== Succesors ===
=== Usages ===
v1651 v81 i103 i115 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v77 values: i18 i103  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 60.54047728144854
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v76 
=== Succesors ===
next: v87 
=== Usages ===
i78 i79 v83 v95 v110 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v76 #next: v87  <|@  <|@
f <@~|@floating>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 24]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i79 
y: i516 
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i79 y: i516  <|@  <|@
f <@*|@fixed>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 24]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
trueSuccessorProbability: 0.9835900530402635
=== Inputs ===
condition: v81 
=== Succesors ===
trueSuccessor: v82 
falseSuccessor: v83 
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v81 #trueSuccessor: v82 #falseSuccessor: v83  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4633239538722544628
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 27]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1635 
=== Usages ===
v551 v560 
=== Predecessor ===
v87 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1635  <|@  <|@
f <@~|@floating>@ <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1587 v82 
=== Succesors ===
=== Usages ===
i1635 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1587 v82  <|@  <|@
f <@~|@floating>@ <|@
tid v1650 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a2 
index: i78 
=== Succesors ===
=== Usages ===
i1635 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: i78  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1635 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v551 
address: v1650 
=== Succesors ===
next: v101 
=== Usages ===
v507 i509 
=== Predecessor ===
v82 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v551 address: v1650 #next: v101  <|@  <|@
f <@~|@floating>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 33]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1635 
y: i506 
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1635 y: i506  <|@  <|@
f <@*|@fixed>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 33]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
trueSuccessorProbability: 0.9998902719253914
=== Inputs ===
condition: v507 
=== Succesors ===
trueSuccessor: v91 
falseSuccessor: v95 
=== Usages ===
=== Predecessor ===
i1635 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v507 #trueSuccessor: v91 #falseSuccessor: v95  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B93" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4633238656210209361
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 36]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
next: v450 
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v450  <|@  <|@
f <@~|@floating>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1603 v82 
=== Succesors ===
=== Usages ===
v450 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1603 v82  <|@  <|@
f <@~|@floating>@ <|@
tid v1651 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a348 
index: i79 
=== Succesors ===
=== Usages ===
v450 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a348 index: i79  <|@  <|@
f <@~|@floating>@ <|@
tid i509 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 16
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 49]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
resultBits: 8
stamp: i8
=== Inputs ===
value: i1635 
=== Succesors ===
=== Usages ===
v450 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i1635  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v560 
address: v1651 
value: i509 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v110 
=== Usages ===
=== Predecessor ===
v91 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v560 address: v1651 value: i509 stateAfter: - lastLocationAccess: - #next: v110  <|@  <|@
f <@~|@floating>@ <|@
tid i103 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 40]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: i32
=== Inputs ===
x: i79 
y: i102 
=== Succesors ===
=== Usages ===
i79 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i79 y: i102  <|@  <|@
f <@~|@floating>@ <|@
tid i104 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 45]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: i32
=== Inputs ===
x: i78 
y: i102 
=== Succesors ===
=== Usages ===
i78 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i78 y: i102  <|@  <|@
f <@*|@fixed>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
loopBegin: v77 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v450 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v77  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B98" 
    xhandlers
    flags 
    probability 4573879563204190531
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v77 
=== Succesors ===
next: v94 
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v77 #next: v94  <|@  <|@
f <@*|@fixed>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
v95 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B98" 
    xhandlers
    flags 
    probability 4606762903417324314
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v77 
=== Succesors ===
next: v92 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v77 #next: v92  <|@  <|@
f <@*|@fixed>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
v83 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" "B96" 
    successors "B99" 
    xhandlers
    flags 
    probability 4606819384206781405
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v92 v94 
=== Succesors ===
next: v112 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v92 v94 #next: v112  <|@  <|@
tid ?172 <|@
d <@d|@=== Debug Properties ===
bci: 107
code: ResolvedJavaMethodBytecode<StringCoding.encode(Charset, char[], int, int)>
duringCall: true
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: StringCoding.java
sourceLine: 364
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - a348 i18 - - - 
=== Succesors ===
=== Usages ===
?116 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - a348 i18 - - -  <|@  <|@
tid a332 <|@
d <@d|@=== Debug Properties ===
componentType: HotSpotResolvedPrimitiveType<byte>
hasIdentity: true
length: 1
objectId: -1
stamp: a!# [B
=== Inputs ===
=== Succesors ===
=== Usages ===
?335 ?336 
=== Predecessor ===
- >@ <|@
instruction <@VirtualArray|@org.graalvm.compiler.nodes.virtual.VirtualArrayNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a29 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringCoding.encode(StringCoding.java:360) [bci: 73]
rawvalue: CodingErrorAction@561514572
stableDimension: 0
stamp: a!# Ljava/nio/charset/CodingErrorAction;
stampKind: a -
value: Object[CodingErrorAction@561514572]
=== Inputs ===
=== Succesors ===
=== Usages ===
?335 ?335 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?335 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a325 
values: f212 f213 - a1 a332 a29 a29 - i152 - 
=== Succesors ===
=== Usages ===
?116 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a325 values: f212 f213 - a1 a332 a29 a29 - i152 -  <|@  <|@
tid ?336 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a332 
values: i152 
=== Succesors ===
=== Usages ===
?116 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a332 values: i152  <|@  <|@
f <@~|@floating>@ <|@
tid i71 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:704) [bci: 2]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: i32
=== Inputs ===
x: i3 
y: i4 
=== Succesors ===
=== Usages ===
v117 ?116 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i3 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
v93 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" "B103" "B109" 
    successors "B100" "B115" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4607837160947116637
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i114 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v113 
values: i78 i123 i123 
=== Succesors ===
=== Usages ===
?116 v117 i123 v1652 v455 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v113 values: i78 i123 i123  <|@  <|@
f <@~|@floating>@ <|@
tid i115 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v113 
values: i79 i129 i170 
=== Succesors ===
=== Usages ===
?116 j974 i129 v464 i170 v1653 i168 v64 v678 v692 i717 i947 v959 v925 a940 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v113 values: i79 i129 i170  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.1934853109500192
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v112 
=== Succesors ===
next: v122 
=== Usages ===
i114 i115 v119 v165 v171 v643 v638 v618 v623 v628 v633 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v112 #next: v122  <|@  <|@
tid ?116 <|@
d <@d|@=== Debug Properties ===
bci: 54
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encode(char[], int, int, byte[])>
duringCall: false
localsSize: 10
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 712
stackSize: 0
=== Inputs ===
outerFrameState: ?172 
values: a325 a2 i114 - a348 i71 i115 - - - 
virtualObjectMappings: ?335 ?336 
=== Succesors ===
=== Usages ===
v768 a940 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?172 values: a325 a2 i114 - a348 i71 i115 - - - virtualObjectMappings: ?335 ?336  <|@  <|@
f <@~|@floating>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 57]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i114 
y: i71 
=== Succesors ===
=== Usages ===
v122 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i114 y: i71  <|@  <|@
f <@*|@fixed>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 57]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
trueSuccessorProbability: 0.16211788211788214
=== Inputs ===
condition: v117 
=== Succesors ===
trueSuccessor: v118 
falseSuccessor: v119 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v117 #trueSuccessor: v118 #falseSuccessor: v119  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B101" "B114" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4595858095840273263
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 60]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1636 
=== Usages ===
=== Predecessor ===
v122 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1636  <|@  <|@
f <@~|@floating>@ <|@
tid v1730 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1636 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1636 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1730 
=== Succesors ===
next: v619 
=== Usages ===
v455 
=== Predecessor ===
v118 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1730 #next: v619  <|@  <|@
f <@~|@floating>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i114 
y: i1636 
=== Succesors ===
=== Usages ===
v619 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i114 y: i1636  <|@  <|@
f <@*|@fixed>@ <|@
tid v619 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v455 
=== Succesors ===
trueSuccessor: v615 
falseSuccessor: v618 
=== Usages ===
=== Predecessor ===
i1636 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v455 #trueSuccessor: v615 #falseSuccessor: v618  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" "B113" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4595858095840273263
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
next: v624 
=== Usages ===
i1637 
=== Predecessor ===
v619 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v624  <|@  <|@
f <@~|@floating>@ <|@
tid v464 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:716) [bci: 86]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i115 
y: i399 
=== Succesors ===
=== Usages ===
v624 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i115 y: i399  <|@  <|@
f <@*|@fixed>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 313]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v464 
=== Succesors ===
trueSuccessor: v620 
falseSuccessor: v623 
=== Usages ===
=== Predecessor ===
v615 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v464 #trueSuccessor: v620 #falseSuccessor: v623  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B103" "B104" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4595858095840273263
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v620 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 313]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1637 
=== Usages ===
v482 v472 
=== Predecessor ===
v624 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1637  <|@  <|@
f <@~|@floating>@ <|@
tid v1652 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a2 
index: i114 
=== Succesors ===
=== Usages ===
i1637 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: i114  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1637 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v615 
address: v1652 
=== Succesors ===
next: v128 
=== Usages ===
i463 
=== Predecessor ===
v620 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v615 address: v1652 #next: v128  <|@  <|@
f <@~|@floating>@ <|@
tid i463 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1637 
=== Succesors ===
=== Usages ===
v125 i130 i151 v135 i159 v184 i144 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1637  <|@  <|@
f <@~|@floating>@ <|@
tid i89 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 30]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
rawvalue: 128
stableDimension: 0
stamp: i32 [128] ⇊0000000000000080 ⇈0000000000000080
stampKind: i32
value: int[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
i160 v125 i154 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:714) [bci: 73]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i463 
y: i89 
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i463 y: i89  <|@  <|@
f <@~|@floating>@ <|@
tid i123 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 62]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: i32
=== Inputs ===
x: i114 
y: i102 
=== Succesors ===
=== Usages ===
i114 i114 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i114 y: i102  <|@  <|@
f <@~|@floating>@ <|@
tid i129 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:716) [bci: 80]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: i32
=== Inputs ===
x: i115 
y: i102 
=== Succesors ===
=== Usages ===
i115 v483 v1654 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i115 y: i102  <|@  <|@
f <@~|@floating>@ <|@
tid v1653 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a348 
index: i115 
=== Succesors ===
=== Usages ===
v482 v472 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a348 index: i115  <|@  <|@
f <@*|@fixed>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:714) [bci: 73]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
trueSuccessorProbability: 0.942568400295785
=== Inputs ===
condition: v125 
=== Succesors ===
trueSuccessor: v126 
falseSuccessor: v127 
=== Usages ===
=== Predecessor ===
i1637 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v125 #trueSuccessor: v126 #falseSuccessor: v127  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B99" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4595473874099309764
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:716) [bci: 76]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
next: v472 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v472  <|@  <|@
f <@~|@floating>@ <|@
tid i130 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:716) [bci: 85]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
resultBits: 8
stamp: i8
=== Inputs ===
value: i463 
=== Succesors ===
=== Usages ===
v472 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i463  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:716) [bci: 86]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v620 
address: v1653 
value: i130 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v165 
=== Usages ===
=== Predecessor ===
v126 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v620 address: v1653 value: i130 stateAfter: - lastLocationAccess: - #next: v165  <|@  <|@
f <@*|@fixed>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
loopBegin: v113 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v472 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v113  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B105" "B106" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4577301169636469431
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:717) [bci: 90]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
next: v629 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v629  <|@  <|@
f <@~|@floating>@ <|@
tid i134 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:717) [bci: 92]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
rawvalue: 2048
stableDimension: 0
stamp: i32 [2048] ⇊0000000000000800 ⇈0000000000000800
stampKind: i32
value: int[2048|0x800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v135 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:717) [bci: 95]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i463 
y: i134 
=== Succesors ===
=== Usages ===
v629 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i463 y: i134  <|@  <|@
f <@*|@fixed>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:717) [bci: 95]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v135 
=== Succesors ===
trueSuccessor: v628 
falseSuccessor: v625 
=== Usages ===
=== Predecessor ===
v127 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v135 #trueSuccessor: v628 #falseSuccessor: v625  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B121" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v628 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:717) [bci: 95]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v113 
=== Succesors ===
next: v775 
=== Usages ===
=== Predecessor ===
v629 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v113 #next: v775  <|@  <|@
f <@~|@floating>@ <|@
tid i776 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -121107
stableDimension: 0
stamp: i32 [-121107] ⇊00000000fffe26ed ⇈00000000fffe26ed
stampKind: i32
value: int[-121107|0xfffffffffffe26ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i766 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v775 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v763 
=== Predecessor ===
v628 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B112" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4577301169636469431
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v625 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:717) [bci: 95]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
next: v634 
=== Usages ===
=== Predecessor ===
v629 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v634  <|@  <|@
f <@~|@floating>@ <|@
tid i183 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:721) [bci: 139]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
rawvalue: 55296
stableDimension: 0
stamp: i32 [55296] ⇊000000000000d800 ⇈000000000000d800
stampKind: i32
value: int[55296|0xd800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v184 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:721) [bci: 139]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i463 
y: i183 
=== Succesors ===
=== Usages ===
v634 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i463 y: i183  <|@  <|@
f <@*|@fixed>@ <|@
tid v634 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:721) [bci: 139]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v184 
=== Succesors ===
trueSuccessor: v630 
falseSuccessor: v633 
=== Usages ===
=== Predecessor ===
v625 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v184 #trueSuccessor: v630 #falseSuccessor: v633  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B108" "B111" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4577301169636469431
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:721) [bci: 139]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
next: v639 
=== Usages ===
=== Predecessor ===
v634 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v639  <|@  <|@
f <@~|@floating>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 334]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i129 
y: i399 
=== Succesors ===
=== Usages ===
v639 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i129 y: i399  <|@  <|@
f <@*|@fixed>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 334]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v483 
=== Succesors ===
trueSuccessor: v635 
falseSuccessor: v638 
=== Usages ===
=== Predecessor ===
v630 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v483 #trueSuccessor: v635 #falseSuccessor: v638  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4577301169636469431
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 334]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
next: v644 
=== Usages ===
v491 
=== Predecessor ===
v639 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v644  <|@  <|@
f <@~|@floating>@ <|@
tid i167 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 318]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i168 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i168 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 318]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: i32
=== Inputs ===
x: i115 
y: i167 
=== Succesors ===
=== Usages ===
v492 v1655 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i115 y: i167  <|@  <|@
f <@~|@floating>@ <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 352]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i168 
y: i399 
=== Succesors ===
=== Usages ===
v644 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i168 y: i399  <|@  <|@
f <@*|@fixed>@ <|@
tid v644 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 352]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v492 
=== Succesors ===
trueSuccessor: v640 
falseSuccessor: v643 
=== Usages ===
=== Predecessor ===
v635 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v492 #trueSuccessor: v640 #falseSuccessor: v643  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B99" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4577301169636469431
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 352]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
next: v482 
=== Usages ===
v500 
=== Predecessor ===
v644 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v482  <|@  <|@
f <@~|@floating>@ <|@
tid i143 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 308]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
rawvalue: 12
stableDimension: 0
stamp: i32 [12] ⇊000000000000000c ⇈000000000000000c
stampKind: i32
value: int[12|0xc]
=== Inputs ===
=== Succesors ===
=== Usages ===
i144 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i144 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 310]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: i32 [0 - 15] ⇈000000000000000f
=== Inputs ===
x: i463 
y: i143 
=== Succesors ===
=== Usages ===
i145 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i463 y: i143  <|@  <|@
f <@~|@floating>@ <|@
tid i142 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 303]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
rawvalue: 224
stableDimension: 0
stamp: i32 [224] ⇊00000000000000e0 ⇈00000000000000e0
stampKind: i32
value: int[224|0xe0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i145 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i145 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 311]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: i32 [224 - 239] ⇊00000000000000e0 ⇈00000000000000ef
=== Inputs ===
x: i144 
y: i142 
=== Succesors ===
=== Usages ===
i146 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i144 y: i142  <|@  <|@
f <@~|@floating>@ <|@
tid i146 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 312]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
resultBits: 8
stamp: i8 [-32 - -17] ⇊00000000000000e0 ⇈00000000000000ef
=== Inputs ===
value: i145 
=== Succesors ===
=== Usages ===
v482 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i145  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 313]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v620 
address: v1653 
value: i146 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v491 
=== Usages ===
=== Predecessor ===
v640 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v620 address: v1653 value: i146 stateAfter: - lastLocationAccess: - #next: v491  <|@  <|@
f <@~|@floating>@ <|@
tid v1654 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a348 
index: i129 
=== Succesors ===
=== Usages ===
v491 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a348 index: i129  <|@  <|@
f <@~|@floating>@ <|@
tid i150 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 326]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
rawvalue: 6
stableDimension: 0
stamp: i32 [6] ⇊0000000000000006 ⇈0000000000000006
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
i151 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i151 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 328]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: i32 [0 - 1023] ⇈00000000000003ff
=== Inputs ===
x: i463 
y: i150 
=== Succesors ===
=== Usages ===
i153 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i463 y: i150  <|@  <|@
f <@~|@floating>@ <|@
tid i153 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 331]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: i32 [0 - 63] ⇈000000000000003f
=== Inputs ===
x: i151 
y: i152 
=== Succesors ===
=== Usages ===
i154 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i151 y: i152  <|@  <|@
f <@~|@floating>@ <|@
tid i154 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 332]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: i32 [128 - 191] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
x: i153 
y: i89 
=== Succesors ===
=== Usages ===
i155 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i153 y: i89  <|@  <|@
f <@~|@floating>@ <|@
tid i155 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 333]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
resultBits: 8
stamp: i8 [-128 - -65] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
value: i154 
=== Succesors ===
=== Usages ===
v491 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i154  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v491 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 334]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v635 
address: v1654 
value: i155 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v500 
=== Usages ===
=== Predecessor ===
v482 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v635 address: v1654 value: i155 stateAfter: - lastLocationAccess: - #next: v500  <|@  <|@
f <@~|@floating>@ <|@
tid v1655 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a348 
index: i168 
=== Succesors ===
=== Usages ===
v500 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a348 index: i168  <|@  <|@
f <@~|@floating>@ <|@
tid i159 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 349]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: i32 [0 - 63] ⇈000000000000003f
=== Inputs ===
x: i463 
y: i152 
=== Succesors ===
=== Usages ===
i160 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i463 y: i152  <|@  <|@
f <@~|@floating>@ <|@
tid i160 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 350]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: i32 [128 - 191] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
x: i159 
y: i89 
=== Succesors ===
=== Usages ===
i161 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i159 y: i89  <|@  <|@
f <@~|@floating>@ <|@
tid i161 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 351]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
resultBits: 8
stamp: i8 [-128 - -65] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
value: i160 
=== Succesors ===
=== Usages ===
v500 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i160  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 352]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v640 
address: v1655 
value: i161 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v171 
=== Usages ===
=== Predecessor ===
v491 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v640 address: v1655 value: i161 stateAfter: - lastLocationAccess: - #next: v171  <|@  <|@
f <@~|@floating>@ <|@
tid i170 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 339]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: i32
=== Inputs ===
x: i115 
y: i169 
=== Succesors ===
=== Usages ===
i115 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i115 y: i169  <|@  <|@
f <@*|@fixed>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 1
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:742) [bci: 353]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
loopBegin: v113 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v500 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v113  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B121" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v643 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 352]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v113 
=== Succesors ===
next: v781 
=== Usages ===
=== Predecessor ===
v644 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v113 #next: v781  <|@  <|@
f <@~|@floating>@ <|@
tid i782 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -126235
stableDimension: 0
stamp: i32 [-126235] ⇊00000000fffe12e5 ⇈00000000fffe12e5
stampKind: i32
value: int[-126235|0xfffffffffffe12e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i766 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v781 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v763 
=== Predecessor ===
v643 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B121" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 334]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v113 
=== Succesors ===
next: v779 
=== Usages ===
=== Predecessor ===
v639 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v113 #next: v779  <|@  <|@
f <@~|@floating>@ <|@
tid i780 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -123931
stableDimension: 0
stamp: i32 [-123931] ⇊00000000fffe1be5 ⇈00000000fffe1be5
stampKind: i32
value: int[-123931|0xfffffffffffe1be5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i766 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v763 
=== Predecessor ===
v638 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B121" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v633 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:721) [bci: 139]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v113 
=== Succesors ===
next: v777 
=== Usages ===
=== Predecessor ===
v634 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v113 #next: v777  <|@  <|@
f <@~|@floating>@ <|@
tid i778 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -121363
stableDimension: 0
stamp: i32 [-121363] ⇊00000000fffe25ed ⇈00000000fffe25ed
stampKind: i32
value: int[-121363|0xfffffffffffe25ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i766 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v777 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v763 
=== Predecessor ===
v633 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B121" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v623 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 313]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v113 
=== Succesors ===
next: v773 
=== Usages ===
=== Predecessor ===
v624 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v113 #next: v773  <|@  <|@
f <@~|@floating>@ <|@
tid i774 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -135195
stableDimension: 0
stamp: i32 [-135195] ⇊00000000fffdefe5 ⇈00000000fffdefe5
stampKind: i32
value: int[-135195|0xfffffffffffdefe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i766 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v773 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v763 
=== Predecessor ===
v623 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B121" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v113 
=== Succesors ===
next: v771 
=== Usages ===
=== Predecessor ===
v619 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v113 #next: v771  <|@  <|@
f <@~|@floating>@ <|@
tid i772 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -116763
stableDimension: 0
stamp: i32 [-116763] ⇊00000000fffe37e5 ⇈00000000fffe37e5
stampKind: i32
value: int[-116763|0xfffffffffffe37e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i766 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v771 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v763 
=== Predecessor ===
v618 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B116" "B117" 
    xhandlers
    flags 
    probability 4606819384206781406
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:743) [bci: 356]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v113 
=== Succesors ===
next: v648 
=== Usages ===
=== Predecessor ===
v122 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v113 #next: v648  <|@  <|@
f <@~|@floating>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.StringCoding.safeTrim(StringCoding.java:76) [bci: 3]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i115 
y: i399 
=== Succesors ===
=== Usages ===
v648 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i115 y: i399  <|@  <|@
f <@*|@fixed>@ <|@
tid v648 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.safeTrim(StringCoding.java:76) [bci: 3]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v64 
=== Succesors ===
trueSuccessor: v647 
falseSuccessor: v645 
=== Usages ===
=== Predecessor ===
v119 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v64 #trueSuccessor: v647 #falseSuccessor: v645  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B121" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v647 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.safeTrim(StringCoding.java:76) [bci: 3]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
next: v764 
=== Usages ===
=== Predecessor ===
v648 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v764  <|@  <|@
f <@~|@floating>@ <|@
tid i765 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -128275
stableDimension: 0
stamp: i32 [-128275] ⇊00000000fffe0aed ⇈00000000fffe0aed
stampKind: i32
value: int[-128275|0xfffffffffffe0aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i766 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v764 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v763 
=== Predecessor ===
v647 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" "B119" 
    xhandlers
    flags 
    probability 4606819384206781406
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v645 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.safeTrim(StringCoding.java:76) [bci: 3]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
next: v684 
=== Usages ===
=== Predecessor ===
v648 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v684  <|@  <|@
f <@~|@floating>@ <|@
tid v678 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 22]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:72) [bci: 3]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i115 
y: i18 
=== Succesors ===
=== Usages ===
v684 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i115 y: i18  <|@  <|@
f <@~|@floating>@ <|@
tid i784 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -176737
stableDimension: 0
stamp: i32 [-176737] ⇊00000000fffd4d9f ⇈00000000fffd4d9f
stampKind: i32
value: int[-176737|0xfffffffffffd4d9f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i766 i766 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v684 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 33]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:72) [bci: 3]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
stamp: void
trueSuccessorProbability: 9.999999999998899E-5
=== Inputs ===
condition: v678 
=== Succesors ===
trueSuccessor: v683 
falseSuccessor: v679 
=== Usages ===
=== Predecessor ===
v645 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v678 #trueSuccessor: v683 #falseSuccessor: v679  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B121" 
    xhandlers
    flags 
    probability 4546709724080164076
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v683 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:72) [bci: 3]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
next: v783 
=== Usages ===
=== Predecessor ===
v684 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v783  <|@  <|@
f <@*|@fixed>@ <|@
tid v783 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v763 
=== Predecessor ===
v683 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B120" "B122" 
    xhandlers
    flags 
    probability 4606818519790315256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v679 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 36]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:72) [bci: 3]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
next: v689 
=== Usages ===
=== Predecessor ===
v684 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v689  <|@  <|@
f <@~|@floating>@ <|@
tid v685 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 41]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:72) [bci: 3]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i399 
y: i18 
=== Succesors ===
=== Usages ===
v689 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i399 y: i18  <|@  <|@
f <@*|@fixed>@ <|@
tid v689 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:186) [bci: 52]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:72) [bci: 3]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
stamp: void
trueSuccessorProbability: 9.999999999998899E-5
=== Inputs ===
condition: v685 
=== Succesors ===
trueSuccessor: v688 
falseSuccessor: v686 
=== Usages ===
=== Predecessor ===
v679 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v685 #trueSuccessor: v688 #falseSuccessor: v686  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B121" 
    xhandlers
    flags 
    probability 4546709015950195006
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v688 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:72) [bci: 3]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
next: v799 
=== Usages ===
=== Predecessor ===
v689 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v799  <|@  <|@
f <@*|@fixed>@ <|@
tid v799 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:72) [bci: 3]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v763 
=== Predecessor ===
v688 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B116" "B114" "B113" "B105" "B112" "B111" "B110" "B118" "B120" 
    successors 
    xhandlers
    flags 
    probability 4551212969642550037
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i766 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-176737 - -116763] ⇊00000000fffc0085
valueDescription: i32
=== Inputs ===
merge: v763 
values: i765 i772 i774 i776 i778 i780 i782 i784 i784 
=== Succesors ===
=== Usages ===
v768 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v763 values: i765 i772 i774 i776 i778 i780 i782 i784 i784  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v764 v771 v773 v775 v777 v779 v781 v783 v799 
=== Succesors ===
next: v768 
=== Usages ===
i766 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v764 v771 v773 v775 v777 v779 v781 v783 v799 #next: v768  <|@  <|@
f <@*|@fixed>@ <|@
tid v768 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?116 
actionAndReason: i766 
speculation: a749 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v763 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?116 actionAndReason: i766 speculation: a749  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B123" "B126" 
    xhandlers
    flags 
    probability 4606817655460290752
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v686 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:189) [bci: 64]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:72) [bci: 3]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
next: j920 
=== Usages ===
=== Predecessor ===
v689 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j920  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j920 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j956 
=== Usages ===
v1679 v1680 
=== Predecessor ===
v686 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j956  <|@  <|@
f <@~|@floating>@ <|@
tid v1679 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j920 
index: - 
=== Succesors ===
=== Usages ===
j956 v958 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j920 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j956 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1679 
=== Succesors ===
next: j957 
=== Usages ===
j924 v1681 v1682 a939 v1687 v1683 v1684 v1685 v1686 
=== Predecessor ===
j920 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1679 #next: j957  <|@  <|@
f <@~|@floating>@ <|@
tid v1680 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j920 
index: - 
=== Succesors ===
=== Usages ===
j957 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j920 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j957 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1680 
=== Succesors ===
next: v928 
=== Usages ===
v929 
=== Predecessor ===
j956 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1680 #next: v928  <|@  <|@
f <@~|@floating>@ <|@
tid v925 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i115 
y: i813 
=== Succesors ===
=== Usages ===
v928 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i115 y: i813  <|@  <|@
f <@*|@fixed>@ <|@
tid v928 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v925 
=== Succesors ===
trueSuccessor: v927 
falseSuccessor: v926 
=== Usages ===
=== Predecessor ===
j957 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v925 #trueSuccessor: v927 #falseSuccessor: v926  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B124" "B125" 
    xhandlers
    flags 
    probability 4605953411868789319
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v927 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
next: v935 
=== Usages ===
=== Predecessor ===
v928 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v935  <|@  <|@
f <@~|@floating>@ <|@
tid i947 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
stamp: i32
=== Inputs ===
x: i115 
y: i836 
=== Succesors ===
=== Usages ===
i919 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i115 y: i836  <|@  <|@
f <@~|@floating>@ <|@
tid i919 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i947 
y: i806 
=== Succesors ===
=== Usages ===
j923 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i947 y: i806  <|@  <|@
f <@~|@floating>@ <|@
tid j923 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i919 
=== Succesors ===
=== Usages ===
j924 v1683 v1684 v1685 v1686 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i919  <|@  <|@
f <@~|@floating>@ <|@
tid j924 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
stamp: i64
=== Inputs ===
x: j923 
y: j956 
=== Succesors ===
=== Usages ===
v929 v958 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j923 y: j956  <|@  <|@
f <@~|@floating>@ <|@
tid v929 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j957 
y: j924 
=== Succesors ===
=== Usages ===
v935 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j957 y: j924  <|@  <|@
f <@*|@fixed>@ <|@
tid v935 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v929 
=== Succesors ===
trueSuccessor: v934 
falseSuccessor: v933 
=== Usages ===
=== Predecessor ===
v927 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v929 #trueSuccessor: v934 #falseSuccessor: v933  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B127" 
    xhandlers
    flags 
    probability 4576131664868101702
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v934 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
next: v932 
=== Usages ===
=== Predecessor ===
v935 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v932  <|@  <|@
f <@*|@fixed>@ <|@
tid v932 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v931 
=== Predecessor ===
v934 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B128" 
    xhandlers
    flags 
    probability 4605875629945554190
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v933 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
next: v958 
=== Usages ===
=== Predecessor ===
v935 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v958  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v958 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1679 
value: j924 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v949 
=== Usages ===
=== Predecessor ===
v933 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1679 value: j924 stateAfter: - lastLocationAccess: - #next: v949  <|@  <|@
f <@~|@floating>@ <|@
tid v1683 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j923 
index: j956 
=== Succesors ===
=== Usages ===
v949 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j923 index: j956  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v949 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
stamp: void
=== Inputs ===
address: v1683 
=== Succesors ===
next: v951 
=== Usages ===
=== Predecessor ===
v958 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1683 #next: v951  <|@  <|@
f <@~|@floating>@ <|@
tid v1684 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j923 
index: j956 
=== Succesors ===
=== Usages ===
v951 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j923 index: j956  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v951 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
stamp: void
=== Inputs ===
address: v1684 
=== Succesors ===
next: v953 
=== Usages ===
=== Predecessor ===
v949 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1684 #next: v953  <|@  <|@
f <@~|@floating>@ <|@
tid v1685 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j923 
index: j956 
=== Succesors ===
=== Usages ===
v953 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j923 index: j956  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v953 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
stamp: void
=== Inputs ===
address: v1685 
=== Succesors ===
next: v955 
=== Usages ===
=== Predecessor ===
v951 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1685 #next: v955  <|@  <|@
f <@~|@floating>@ <|@
tid v1686 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j923 
index: j956 
=== Succesors ===
=== Usages ===
v955 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j923 index: j956  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v955 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
stamp: void
=== Inputs ===
address: v1686 
=== Succesors ===
next: v959 
=== Usages ===
=== Predecessor ===
v953 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1686 #next: v959  <|@  <|@
f <@~|@floating>@ <|@
tid v1681 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j956 
index: - 
=== Succesors ===
=== Usages ===
v959 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j956 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v959 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1681 
value: i115 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v960 
=== Usages ===
=== Predecessor ===
v955 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1681 value: i115 stateAfter: - lastLocationAccess: - #next: v960  <|@  <|@
f <@~|@floating>@ <|@
tid v1682 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j956 
index: - 
=== Succesors ===
=== Usages ===
v960 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j956 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v960 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1682 
value: j805 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v963 
=== Usages ===
=== Predecessor ===
v959 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1682 value: j805 stateAfter: - lastLocationAccess: - #next: v963  <|@  <|@
f <@~|@floating>@ <|@
tid v1687 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j956 
index: - 
=== Succesors ===
=== Usages ===
v963 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j956 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v963 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1687 
value: v973 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v938 
=== Usages ===
=== Predecessor ===
v960 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1687 value: v973 stateAfter: - lastLocationAccess: - #next: v938  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v938 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
next: a939 
=== Usages ===
=== Predecessor ===
v963 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a939  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a939 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j956 
=== Succesors ===
next: v941 
=== Usages ===
a944 
=== Predecessor ===
v938 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j956 #next: v941  <|@  <|@
f <@*|@fixed>@ <|@
tid v941 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v942 
=== Predecessor ===
a939 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B127" 
    xhandlers
    flags 
    probability 4591578369395176395
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v926 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
next: v930 
=== Usages ===
=== Predecessor ===
v928 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v930  <|@  <|@
f <@*|@fixed>@ <|@
tid v930 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v931 
=== Predecessor ===
v926 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B126" "B124" 
    successors "B128" 
    xhandlers
    flags 
    probability 4592200624781057428
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v931 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v930 v932 
=== Succesors ===
next: a940 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v930 v932 #next: a940  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a940 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?116 
arguments: v804 i115 i18 
=== Succesors ===
next: v943 
=== Usages ===
a944 
=== Predecessor ===
v931 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?116 arguments: v804 i115 i18 #next: v943  <|@  <|@
f <@*|@fixed>@ <|@
tid v943 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v942 
=== Predecessor ===
a940 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B125" "B127" 
    successors "B129" "B130" 
    xhandlers
    flags 
    probability 4606817655460290752
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a944 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v942 
values: a939 a940 
=== Succesors ===
=== Usages ===
v1688 a724 v1657 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v942 values: a939 a940  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v942 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v941 v943 
=== Succesors ===
next: v1403 
=== Usages ===
a944 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v941 v943 #next: v1403  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1403 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v1142 
=== Usages ===
j1404 j1406 
=== Predecessor ===
v942 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v1142  <|@  <|@
f <@~|@floating>@ <|@
tid v692 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:74) [bci: 9]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i399 
y: i115 
=== Succesors ===
=== Usages ===
i717 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i399 y: i115  <|@  <|@
f <@~|@floating>@ <|@
tid i717 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v692 
trueValue: i399 
falseValue: i115 
=== Succesors ===
=== Usages ===
j975 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v692 trueValue: i399 falseValue: i115  <|@  <|@
f <@~|@floating>@ <|@
tid j975 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i717 
=== Succesors ===
=== Usages ===
j1466 v1688 j979 v1139 v1289 j1452 j1457 j1460 j1463 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i717  <|@  <|@
f <@~|@floating>@ <|@
tid v1139 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j975 
y: j805 
=== Succesors ===
=== Usages ===
v1142 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j975 y: j805  <|@  <|@
f <@*|@fixed>@ <|@
tid v1142 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1139 
=== Succesors ===
trueSuccessor: v1140 
falseSuccessor: v1141 
=== Usages ===
=== Predecessor ===
v1403 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1139 #trueSuccessor: v1140 #falseSuccessor: v1141  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B128" 
    successors "B151" 
    xhandlers
    flags 
    probability 4602314055832920256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1140 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1158 
=== Usages ===
=== Predecessor ===
v1142 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1158  <|@  <|@
f <@*|@fixed>@ <|@
tid v1158 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1159 
=== Predecessor ===
v1140 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B128" 
    successors "B131" "B132" 
    xhandlers
    flags 
    probability 4602314055832920256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1141 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1145 
=== Usages ===
=== Predecessor ===
v1142 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1145  <|@  <|@
f <@~|@floating>@ <|@
tid v1657 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a944 
index: - 
=== Succesors ===
=== Usages ===
j1406 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a944 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1406 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1403 
address: v1657 
=== Succesors ===
=== Usages ===
v1703 v1705 v1707 v1709 v1711 v1713 v1715 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1403 address: v1657  <|@  <|@
f <@~|@floating>@ <|@
tid v1656 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a348 
index: - 
=== Succesors ===
=== Usages ===
j1404 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a348 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1404 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1403 
address: v1656 
=== Succesors ===
=== Usages ===
v1704 v1706 v1708 v1710 v1712 v1714 v1716 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1403 address: v1656  <|@  <|@
f <@~|@floating>@ <|@
tid j1452 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483680 - 2147483615]
=== Inputs ===
x: j975 
y: j1328 
=== Succesors ===
=== Usages ===
v1453 v1455 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j975 y: j1328  <|@  <|@
f <@~|@floating>@ <|@
tid v1453 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1452 
y: j670 
=== Succesors ===
=== Usages ===
v1145 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1452 y: j670  <|@  <|@
f <@*|@fixed>@ <|@
tid v1145 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1453 
=== Succesors ===
trueSuccessor: v1143 
falseSuccessor: v1144 
=== Usages ===
=== Predecessor ===
v1141 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1453 #trueSuccessor: v1143 #falseSuccessor: v1144  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B135" 
    xhandlers
    flags 
    probability 4600153446854166672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1143 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1154 
=== Usages ===
=== Predecessor ===
v1145 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1154  <|@  <|@
f <@*|@fixed>@ <|@
tid v1154 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1155 
=== Predecessor ===
v1143 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B133" 
    xhandlers
    flags 
    probability 4593306856578179264
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1144 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1146 
=== Usages ===
=== Predecessor ===
v1145 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1146  <|@  <|@
f <@*|@fixed>@ <|@
tid v1146 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1147 
=== Predecessor ===
v1144 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" "B176" 
    successors "B134" "B176" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4602314055832920256
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1445 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1147 
values: j670 j1451 
=== Succesors ===
=== Usages ===
v1715 v1716 j1451 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1147 values: j670 j1451  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1147 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1146 
=== Succesors ===
next: v1638 
=== Usages ===
v1638 v1150 v1151 j1445 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1146 #next: v1638  <|@  <|@
f <@~|@floating>@ <|@
tid v1716 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1404 
index: j1445 
=== Succesors ===
=== Usages ===
v1638 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1404 index: j1445  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1638 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: byte
nullCheck: false
stamp: <i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8>
=== Inputs ===
stateBefore: - 
guard: v1147 
address: v1716 
=== Succesors ===
next: v1574 
=== Usages ===
v1574 
=== Predecessor ===
v1147 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1147 address: v1716 #next: v1574  <|@  <|@
f <@~|@floating>@ <|@
tid v1715 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1406 
index: j1445 
=== Succesors ===
=== Usages ===
v1574 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1406 index: j1445  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1574 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1715 
value: v1638 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1153 
=== Usages ===
=== Predecessor ===
v1638 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1715 value: v1638 stateAfter: - lastLocationAccess: - #next: v1153  <|@  <|@
f <@~|@floating>@ <|@
tid j1451 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1445 
y: j1326 
=== Succesors ===
=== Usages ===
j1438 j1445 v1455 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1445 y: j1326  <|@  <|@
f <@~|@floating>@ <|@
tid v1455 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1452 
y: j1451 
=== Succesors ===
=== Usages ===
v1153 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1452 y: j1451  <|@  <|@
f <@*|@fixed>@ <|@
tid v1153 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1455 
=== Succesors ===
trueSuccessor: v1150 
falseSuccessor: v1152 
=== Usages ===
=== Predecessor ===
v1574 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1455 #trueSuccessor: v1150 #falseSuccessor: v1152  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B133" 
    successors "B135" 
    xhandlers
    flags 
    probability 4593306856578179264
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1150 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1147 
=== Succesors ===
next: v1156 
=== Usages ===
=== Predecessor ===
v1153 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1147 #next: v1156  <|@  <|@
f <@*|@fixed>@ <|@
tid v1156 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1155 
=== Predecessor ===
v1150 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B131" "B134" 
    successors "B136" "B137" 
    xhandlers
    flags 
    probability 4602314055832920256
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1438 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1155 
values: j670 j1451 
=== Succesors ===
=== Usages ===
v1713 v1714 j1444 j1431 v1458 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1155 values: j670 j1451  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1155 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1154 v1156 
=== Succesors ===
next: v1177 
=== Usages ===
j1438 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1154 v1156 #next: v1177  <|@  <|@
f <@~|@floating>@ <|@
tid j1457 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j975 
y: j1334 
=== Succesors ===
=== Usages ===
v1458 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j975 y: j1334  <|@  <|@
f <@~|@floating>@ <|@
tid v1458 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1457 
y: j1438 
=== Succesors ===
=== Usages ===
v1177 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1457 y: j1438  <|@  <|@
f <@*|@fixed>@ <|@
tid v1177 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1458 
=== Succesors ===
trueSuccessor: v1176 
falseSuccessor: v1175 
=== Usages ===
=== Predecessor ===
v1155 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1458 #trueSuccessor: v1176 #falseSuccessor: v1175  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B138" 
    xhandlers
    flags 
    probability 4593306856578179264
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1176 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1180 
=== Usages ===
=== Predecessor ===
v1177 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1180  <|@  <|@
f <@*|@fixed>@ <|@
tid v1180 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1166 
=== Predecessor ===
v1176 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B138" 
    xhandlers
    flags 
    probability 4600153446854166672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1175 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1639 
=== Usages ===
v1639 
=== Predecessor ===
v1177 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1639  <|@  <|@
f <@~|@floating>@ <|@
tid v1714 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1404 
index: j1438 
=== Succesors ===
=== Usages ===
v1639 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1404 index: j1438  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1639 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: byte
nullCheck: false
stamp: <i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8>
=== Inputs ===
stateBefore: - 
guard: v1175 
address: v1714 
=== Succesors ===
next: v1572 
=== Usages ===
v1572 
=== Predecessor ===
v1175 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1175 address: v1714 #next: v1572  <|@  <|@
f <@~|@floating>@ <|@
tid v1713 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1406 
index: j1438 
=== Succesors ===
=== Usages ===
v1572 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1406 index: j1438  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1572 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1713 
value: v1639 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1165 
=== Usages ===
=== Predecessor ===
v1639 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1713 value: v1639 stateAfter: - lastLocationAccess: - #next: v1165  <|@  <|@
f <@~|@floating>@ <|@
tid j1444 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1438 
y: j427 
=== Succesors ===
=== Usages ===
j1431 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1438 y: j427  <|@  <|@
f <@*|@fixed>@ <|@
tid v1165 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1166 
=== Predecessor ===
v1572 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B137" "B136" 
    successors "B139" "B140" 
    xhandlers
    flags 
    probability 4602314055832920256
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1431 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1166 
values: j1444 j1438 
=== Succesors ===
=== Usages ===
v1711 v1712 j1437 j1424 v1461 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1166 values: j1444 j1438  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1166 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1165 v1180 
=== Succesors ===
next: v1183 
=== Usages ===
j1431 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1165 v1180 #next: v1183  <|@  <|@
f <@~|@floating>@ <|@
tid j1460 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j975 
y: j1338 
=== Succesors ===
=== Usages ===
v1461 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j975 y: j1338  <|@  <|@
f <@~|@floating>@ <|@
tid v1461 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1460 
y: j1431 
=== Succesors ===
=== Usages ===
v1183 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1460 y: j1431  <|@  <|@
f <@*|@fixed>@ <|@
tid v1183 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1461 
=== Succesors ===
trueSuccessor: v1182 
falseSuccessor: v1181 
=== Usages ===
=== Predecessor ===
v1166 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1461 #trueSuccessor: v1182 #falseSuccessor: v1181  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B141" 
    xhandlers
    flags 
    probability 4593306856578179264
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1182 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1186 
=== Usages ===
=== Predecessor ===
v1183 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1186  <|@  <|@
f <@*|@fixed>@ <|@
tid v1186 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1169 
=== Predecessor ===
v1182 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B141" 
    xhandlers
    flags 
    probability 4600153446854166672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1181 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1640 
=== Usages ===
v1640 
=== Predecessor ===
v1183 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1640  <|@  <|@
f <@~|@floating>@ <|@
tid v1712 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1404 
index: j1431 
=== Succesors ===
=== Usages ===
v1640 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1404 index: j1431  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1640 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: byte
nullCheck: false
stamp: <i8,i8,i8,i8,i8,i8,i8,i8>
=== Inputs ===
stateBefore: - 
guard: v1181 
address: v1712 
=== Succesors ===
next: v1570 
=== Usages ===
v1570 
=== Predecessor ===
v1181 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1181 address: v1712 #next: v1570  <|@  <|@
f <@~|@floating>@ <|@
tid v1711 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1406 
index: j1431 
=== Succesors ===
=== Usages ===
v1570 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1406 index: j1431  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1570 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1711 
value: v1640 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1168 
=== Usages ===
=== Predecessor ===
v1640 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1711 value: v1640 stateAfter: - lastLocationAccess: - #next: v1168  <|@  <|@
f <@~|@floating>@ <|@
tid j1437 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1431 
y: j800 
=== Succesors ===
=== Usages ===
j1424 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1431 y: j800  <|@  <|@
f <@*|@fixed>@ <|@
tid v1168 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1169 
=== Predecessor ===
v1570 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" "B139" 
    successors "B142" "B143" 
    xhandlers
    flags 
    probability 4602314055832920256
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1424 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1169 
values: j1437 j1431 
=== Succesors ===
=== Usages ===
v1709 v1710 j1430 j1407 v1464 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1169 values: j1437 j1431  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1169 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1168 v1186 
=== Succesors ===
next: v1189 
=== Usages ===
j1424 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1168 v1186 #next: v1189  <|@  <|@
f <@~|@floating>@ <|@
tid j1463 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j975 
y: j1342 
=== Succesors ===
=== Usages ===
v1464 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j975 y: j1342  <|@  <|@
f <@~|@floating>@ <|@
tid v1464 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1463 
y: j1424 
=== Succesors ===
=== Usages ===
v1189 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1463 y: j1424  <|@  <|@
f <@*|@fixed>@ <|@
tid v1189 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1464 
=== Succesors ===
trueSuccessor: v1188 
falseSuccessor: v1187 
=== Usages ===
=== Predecessor ===
v1169 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1464 #trueSuccessor: v1188 #falseSuccessor: v1187  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B144" 
    xhandlers
    flags 
    probability 4593306856578179264
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1188 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1192 
=== Usages ===
=== Predecessor ===
v1189 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1192  <|@  <|@
f <@*|@fixed>@ <|@
tid v1192 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1172 
=== Predecessor ===
v1188 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B144" 
    xhandlers
    flags 
    probability 4600153446854166672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1187 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1641 
=== Usages ===
v1641 
=== Predecessor ===
v1189 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1641  <|@  <|@
f <@~|@floating>@ <|@
tid v1710 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1404 
index: j1424 
=== Succesors ===
=== Usages ===
v1641 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1404 index: j1424  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1641 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: byte
nullCheck: false
stamp: <i8,i8,i8,i8>
=== Inputs ===
stateBefore: - 
guard: v1187 
address: v1710 
=== Succesors ===
next: v1568 
=== Usages ===
v1568 
=== Predecessor ===
v1187 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1187 address: v1710 #next: v1568  <|@  <|@
f <@~|@floating>@ <|@
tid v1709 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1406 
index: j1424 
=== Succesors ===
=== Usages ===
v1568 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1406 index: j1424  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1568 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1709 
value: v1641 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1171 
=== Usages ===
=== Predecessor ===
v1641 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1709 value: v1641 stateAfter: - lastLocationAccess: - #next: v1171  <|@  <|@
f <@~|@floating>@ <|@
tid j1430 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1424 
y: j1310 
=== Succesors ===
=== Usages ===
j1407 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1424 y: j1310  <|@  <|@
f <@*|@fixed>@ <|@
tid v1171 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1172 
=== Predecessor ===
v1568 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B143" "B142" 
    successors "B145" "B146" 
    xhandlers
    flags 
    probability 4602314055832920256
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1407 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1172 
values: j1430 j1424 
=== Succesors ===
=== Usages ===
v1703 v1704 j1413 v1467 j1532 v1705 v1706 v1707 v1708 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1172 values: j1430 j1424  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1172 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1171 v1192 
=== Succesors ===
next: v1195 
=== Usages ===
j1407 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1171 v1192 #next: v1195  <|@  <|@
f <@~|@floating>@ <|@
tid j1466 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j975 
y: j541 
=== Succesors ===
=== Usages ===
v1467 v1469 v1471 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j975 y: j541  <|@  <|@
f <@~|@floating>@ <|@
tid v1467 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1466 
y: j1407 
=== Succesors ===
=== Usages ===
v1195 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1466 y: j1407  <|@  <|@
f <@*|@fixed>@ <|@
tid v1195 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1467 
=== Succesors ===
trueSuccessor: v1194 
falseSuccessor: v1193 
=== Usages ===
=== Predecessor ===
v1172 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1467 #trueSuccessor: v1194 #falseSuccessor: v1193  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B151" 
    xhandlers
    flags 
    probability 4593306856578179264
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1194 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1198 
=== Usages ===
=== Predecessor ===
v1195 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1198  <|@  <|@
f <@*|@fixed>@ <|@
tid v1198 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1159 
=== Predecessor ===
v1194 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B147" "B148" 
    xhandlers
    flags 
    probability 4600153446854166672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1193 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i1642 
=== Usages ===
i1642 
=== Predecessor ===
v1195 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1642  <|@  <|@
f <@~|@floating>@ <|@
tid v1704 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1404 
index: j1407 
=== Succesors ===
=== Usages ===
i1642 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1404 index: j1407  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1642 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: byte
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: v1193 
address: v1704 
=== Succesors ===
next: v1562 
=== Usages ===
v1562 
=== Predecessor ===
v1193 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1193 address: v1704 #next: v1562  <|@  <|@
f <@~|@floating>@ <|@
tid v1703 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1406 
index: j1407 
=== Succesors ===
=== Usages ===
v1562 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1406 index: j1407  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1562 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1703 
value: i1642 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1201 
=== Usages ===
=== Predecessor ===
i1642 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1703 value: i1642 stateAfter: - lastLocationAccess: - #next: v1201  <|@  <|@
f <@~|@floating>@ <|@
tid j1413 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1407 
y: j805 
=== Succesors ===
=== Usages ===
v1469 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1407 y: j805  <|@  <|@
f <@~|@floating>@ <|@
tid v1469 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1466 
y: j1413 
=== Succesors ===
=== Usages ===
v1201 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1466 y: j1413  <|@  <|@
f <@*|@fixed>@ <|@
tid v1201 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1469 
=== Succesors ===
trueSuccessor: v1200 
falseSuccessor: v1199 
=== Usages ===
=== Predecessor ===
v1562 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1469 #trueSuccessor: v1200 #falseSuccessor: v1199  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B151" 
    xhandlers
    flags 
    probability 4591146247599425680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1200 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1204 
=== Usages ===
=== Predecessor ===
v1201 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1204  <|@  <|@
f <@*|@fixed>@ <|@
tid v1204 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1159 
=== Predecessor ===
v1200 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" "B150" 
    xhandlers
    flags 
    probability 4598532990120101484
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1199 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i1643 
=== Usages ===
i1643 
=== Predecessor ===
v1201 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1643  <|@  <|@
f <@~|@floating>@ <|@
tid v1706 <|@
d <@d|@=== Debug Properties ===
displacement: 1
scale: Times1
stamp: void*
=== Inputs ===
base: j1404 
index: j1407 
=== Succesors ===
=== Usages ===
i1643 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1404 index: j1407  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1643 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: byte
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: v1199 
address: v1706 
=== Succesors ===
next: v1564 
=== Usages ===
v1564 
=== Predecessor ===
v1199 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1199 address: v1706 #next: v1564  <|@  <|@
f <@~|@floating>@ <|@
tid v1705 <|@
d <@d|@=== Debug Properties ===
displacement: 1
scale: Times1
stamp: void*
=== Inputs ===
base: j1406 
index: j1407 
=== Succesors ===
=== Usages ===
v1564 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1406 index: j1407  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1564 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1705 
value: i1643 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1207 
=== Usages ===
=== Predecessor ===
i1643 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1705 value: i1643 stateAfter: - lastLocationAccess: - #next: v1207  <|@  <|@
f <@~|@floating>@ <|@
tid j1532 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1407 
y: j1529 
=== Succesors ===
=== Usages ===
v1471 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1407 y: j1529  <|@  <|@
f <@~|@floating>@ <|@
tid v1471 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1466 
y: j1532 
=== Succesors ===
=== Usages ===
v1207 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1466 y: j1532  <|@  <|@
f <@*|@fixed>@ <|@
tid v1207 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1471 
=== Succesors ===
trueSuccessor: v1206 
falseSuccessor: v1205 
=== Usages ===
=== Predecessor ===
v1564 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1471 #trueSuccessor: v1206 #falseSuccessor: v1205  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B151" 
    xhandlers
    flags 
    probability 4589525790865360492
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1206 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1210 
=== Usages ===
=== Predecessor ===
v1207 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1210  <|@  <|@
f <@*|@fixed>@ <|@
tid v1210 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1159 
=== Predecessor ===
v1206 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B151" 
    xhandlers
    flags 
    probability 4596460075593828770
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1205 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i1644 
=== Usages ===
i1644 
=== Predecessor ===
v1207 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1644  <|@  <|@
f <@~|@floating>@ <|@
tid v1708 <|@
d <@d|@=== Debug Properties ===
displacement: 2
scale: Times1
stamp: void*
=== Inputs ===
base: j1404 
index: j1407 
=== Succesors ===
=== Usages ===
i1644 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1404 index: j1407  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1644 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: byte
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: v1205 
address: v1708 
=== Succesors ===
next: v1566 
=== Usages ===
v1566 
=== Predecessor ===
v1205 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1205 address: v1708 #next: v1566  <|@  <|@
f <@~|@floating>@ <|@
tid v1707 <|@
d <@d|@=== Debug Properties ===
displacement: 2
scale: Times1
stamp: void*
=== Inputs ===
base: j1406 
index: j1407 
=== Succesors ===
=== Usages ===
v1566 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1406 index: j1407  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1566 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1707 
value: i1644 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1174 
=== Usages ===
=== Predecessor ===
i1644 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1707 value: i1644 stateAfter: - lastLocationAccess: - #next: v1174  <|@  <|@
f <@*|@fixed>@ <|@
tid v1174 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1159 
=== Predecessor ===
v1566 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B129" "B150" "B145" "B147" "B149" 
    successors "B152" "B174" 
    xhandlers
    flags 
    probability 4606817655460290752
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1159 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1158 v1174 v1198 v1204 v1210 
=== Succesors ===
next: v1474 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1158 v1174 v1198 v1204 v1210 #next: v1474  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1474 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v1217 
=== Usages ===
j1476 
=== Predecessor ===
v1159 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v1217  <|@  <|@
f <@~|@floating>@ <|@
tid j974 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i115 
=== Succesors ===
=== Usages ===
j979 v1289 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i115  <|@  <|@
f <@~|@floating>@ <|@
tid v1289 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j975 
y: j974 
=== Succesors ===
=== Usages ===
v1217 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j975 y: j974  <|@  <|@
f <@*|@fixed>@ <|@
tid v1217 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1289 
=== Succesors ===
trueSuccessor: v1216 
falseSuccessor: v1215 
=== Usages ===
=== Predecessor ===
v1474 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1289 #trueSuccessor: v1216 #falseSuccessor: v1215  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B153" "B154" 
    xhandlers
    flags 
    probability 4602314055832920256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1216 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1220 
=== Usages ===
=== Predecessor ===
v1217 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1220  <|@  <|@
f <@~|@floating>@ <|@
tid v1688 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a944 
index: j975 
=== Succesors ===
=== Usages ===
j1476 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a944 index: j975  <|@  <|@
f <@~|@floating>@ <|@
tid j1476 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1474 
address: v1688 
=== Succesors ===
=== Usages ===
v1717 v1718 v1719 v1720 v1721 v1722 v1723 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1474 address: v1688  <|@  <|@
f <@~|@floating>@ <|@
tid j979 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j974 
y: j975 
=== Succesors ===
=== Usages ===
j1522 j1508 j1513 j1516 j1519 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j974 y: j975  <|@  <|@
f <@~|@floating>@ <|@
tid j1508 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967327 - 4294967263]
=== Inputs ===
x: j979 
y: j1328 
=== Succesors ===
=== Usages ===
v1509 v1511 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j979 y: j1328  <|@  <|@
f <@~|@floating>@ <|@
tid v1509 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1508 
y: j670 
=== Succesors ===
=== Usages ===
v1220 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1508 y: j670  <|@  <|@
f <@*|@fixed>@ <|@
tid v1220 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1509 
=== Succesors ===
trueSuccessor: v1218 
falseSuccessor: v1219 
=== Usages ===
=== Predecessor ===
v1216 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1509 #trueSuccessor: v1218 #falseSuccessor: v1219  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B157" 
    xhandlers
    flags 
    probability 4600153446854166672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1218 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1229 
=== Usages ===
=== Predecessor ===
v1220 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1229  <|@  <|@
f <@*|@fixed>@ <|@
tid v1229 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1230 
=== Predecessor ===
v1218 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B155" 
    xhandlers
    flags 
    probability 4593306856578179264
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1219 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1221 
=== Usages ===
=== Predecessor ===
v1220 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1221  <|@  <|@
f <@*|@fixed>@ <|@
tid v1221 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1222 
=== Predecessor ===
v1219 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B154" "B173" 
    successors "B156" "B173" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4602314055832920256
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1503 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1222 
values: j670 j1507 
=== Succesors ===
=== Usages ===
v1723 j1507 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1222 values: j670 j1507  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1222 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1221 
=== Succesors ===
next: v1581 
=== Usages ===
j1503 v1225 v1226 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1221 #next: v1581  <|@  <|@
f <@~|@floating>@ <|@
tid v1723 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1476 
index: j1503 
=== Succesors ===
=== Usages ===
v1581 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1476 index: j1503  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1581 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1723 
value: v1582 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1228 
=== Usages ===
=== Predecessor ===
v1222 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1723 value: v1582 stateAfter: - lastLocationAccess: - #next: v1228  <|@  <|@
f <@~|@floating>@ <|@
tid j1507 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1503 
y: j1326 
=== Succesors ===
=== Usages ===
j1498 j1503 v1511 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1503 y: j1326  <|@  <|@
f <@~|@floating>@ <|@
tid v1511 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1508 
y: j1507 
=== Succesors ===
=== Usages ===
v1228 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1508 y: j1507  <|@  <|@
f <@*|@fixed>@ <|@
tid v1228 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1511 
=== Succesors ===
trueSuccessor: v1225 
falseSuccessor: v1227 
=== Usages ===
=== Predecessor ===
v1581 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1511 #trueSuccessor: v1225 #falseSuccessor: v1227  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B157" 
    xhandlers
    flags 
    probability 4593306856578179264
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1225 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1222 
=== Succesors ===
next: v1231 
=== Usages ===
=== Predecessor ===
v1228 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1222 #next: v1231  <|@  <|@
f <@*|@fixed>@ <|@
tid v1231 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1230 
=== Predecessor ===
v1225 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B153" "B156" 
    successors "B158" "B159" 
    xhandlers
    flags 
    probability 4602314055832920256
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1498 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1230 
values: j670 j1507 
=== Succesors ===
=== Usages ===
v1722 j1502 j1493 v1514 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1230 values: j670 j1507  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1230 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1229 v1231 
=== Succesors ===
next: v1252 
=== Usages ===
j1498 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1229 v1231 #next: v1252  <|@  <|@
f <@~|@floating>@ <|@
tid j1513 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j979 
y: j1334 
=== Succesors ===
=== Usages ===
v1514 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j979 y: j1334  <|@  <|@
f <@~|@floating>@ <|@
tid v1514 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1513 
y: j1498 
=== Succesors ===
=== Usages ===
v1252 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1513 y: j1498  <|@  <|@
f <@*|@fixed>@ <|@
tid v1252 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1514 
=== Succesors ===
trueSuccessor: v1251 
falseSuccessor: v1250 
=== Usages ===
=== Predecessor ===
v1230 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1514 #trueSuccessor: v1251 #falseSuccessor: v1250  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B157" 
    successors "B160" 
    xhandlers
    flags 
    probability 4593306856578179264
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1251 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1255 
=== Usages ===
=== Predecessor ===
v1252 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1255  <|@  <|@
f <@*|@fixed>@ <|@
tid v1255 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1241 
=== Predecessor ===
v1251 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B157" 
    successors "B160" 
    xhandlers
    flags 
    probability 4600153446854166672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1250 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1580 
=== Usages ===
=== Predecessor ===
v1252 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1580  <|@  <|@
f <@~|@floating>@ <|@
tid v1722 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1476 
index: j1498 
=== Succesors ===
=== Usages ===
v1580 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1476 index: j1498  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1580 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1722 
value: v1586 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1240 
=== Usages ===
=== Predecessor ===
v1250 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1722 value: v1586 stateAfter: - lastLocationAccess: - #next: v1240  <|@  <|@
f <@~|@floating>@ <|@
tid j1502 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1498 
y: j427 
=== Succesors ===
=== Usages ===
j1493 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1498 y: j427  <|@  <|@
f <@*|@fixed>@ <|@
tid v1240 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1241 
=== Predecessor ===
v1580 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B159" "B158" 
    successors "B161" "B162" 
    xhandlers
    flags 
    probability 4602314055832920256
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1493 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1241 
values: j1502 j1498 
=== Succesors ===
=== Usages ===
v1721 j1497 j1488 v1517 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1241 values: j1502 j1498  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1241 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1240 v1255 
=== Succesors ===
next: v1258 
=== Usages ===
j1493 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1240 v1255 #next: v1258  <|@  <|@
f <@~|@floating>@ <|@
tid j1516 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j979 
y: j1338 
=== Succesors ===
=== Usages ===
v1517 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j979 y: j1338  <|@  <|@
f <@~|@floating>@ <|@
tid v1517 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1516 
y: j1493 
=== Succesors ===
=== Usages ===
v1258 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1516 y: j1493  <|@  <|@
f <@*|@fixed>@ <|@
tid v1258 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1517 
=== Succesors ===
trueSuccessor: v1257 
falseSuccessor: v1256 
=== Usages ===
=== Predecessor ===
v1241 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1517 #trueSuccessor: v1257 #falseSuccessor: v1256  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B163" 
    xhandlers
    flags 
    probability 4593306856578179264
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1257 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1261 
=== Usages ===
=== Predecessor ===
v1258 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1261  <|@  <|@
f <@*|@fixed>@ <|@
tid v1261 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1244 
=== Predecessor ===
v1257 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B163" 
    xhandlers
    flags 
    probability 4600153446854166672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1256 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1579 
=== Usages ===
=== Predecessor ===
v1258 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1579  <|@  <|@
f <@~|@floating>@ <|@
tid v1721 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1476 
index: j1493 
=== Succesors ===
=== Usages ===
v1579 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1476 index: j1493  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1579 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1721 
value: v1585 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1243 
=== Usages ===
=== Predecessor ===
v1256 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1721 value: v1585 stateAfter: - lastLocationAccess: - #next: v1243  <|@  <|@
f <@~|@floating>@ <|@
tid j1497 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1493 
y: j800 
=== Succesors ===
=== Usages ===
j1488 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1493 y: j800  <|@  <|@
f <@*|@fixed>@ <|@
tid v1243 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1244 
=== Predecessor ===
v1579 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B162" "B161" 
    successors "B164" "B165" 
    xhandlers
    flags 
    probability 4602314055832920256
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1488 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1244 
values: j1497 j1493 
=== Succesors ===
=== Usages ===
v1720 j1492 j1477 v1520 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1244 values: j1497 j1493  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1244 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1243 v1261 
=== Succesors ===
next: v1264 
=== Usages ===
j1488 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1243 v1261 #next: v1264  <|@  <|@
f <@~|@floating>@ <|@
tid j1519 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j979 
y: j1342 
=== Succesors ===
=== Usages ===
v1520 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j979 y: j1342  <|@  <|@
f <@~|@floating>@ <|@
tid v1520 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1519 
y: j1488 
=== Succesors ===
=== Usages ===
v1264 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1519 y: j1488  <|@  <|@
f <@*|@fixed>@ <|@
tid v1264 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1520 
=== Succesors ===
trueSuccessor: v1263 
falseSuccessor: v1262 
=== Usages ===
=== Predecessor ===
v1244 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1520 #trueSuccessor: v1263 #falseSuccessor: v1262  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B163" 
    successors "B166" 
    xhandlers
    flags 
    probability 4593306856578179264
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1263 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1267 
=== Usages ===
=== Predecessor ===
v1264 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1267  <|@  <|@
f <@*|@fixed>@ <|@
tid v1267 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1247 
=== Predecessor ===
v1263 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B163" 
    successors "B166" 
    xhandlers
    flags 
    probability 4600153446854166672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1262 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1578 
=== Usages ===
=== Predecessor ===
v1264 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1578  <|@  <|@
f <@~|@floating>@ <|@
tid v1720 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1476 
index: j1488 
=== Succesors ===
=== Usages ===
v1578 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1476 index: j1488  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1578 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1720 
value: v1584 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1246 
=== Usages ===
=== Predecessor ===
v1262 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1720 value: v1584 stateAfter: - lastLocationAccess: - #next: v1246  <|@  <|@
f <@~|@floating>@ <|@
tid j1492 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1488 
y: j1310 
=== Succesors ===
=== Usages ===
j1477 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1488 y: j1310  <|@  <|@
f <@*|@fixed>@ <|@
tid v1246 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1247 
=== Predecessor ===
v1578 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B165" "B164" 
    successors "B167" "B168" 
    xhandlers
    flags 
    probability 4602314055832920256
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1477 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1247 
values: j1492 j1488 
=== Succesors ===
=== Usages ===
v1717 j1481 v1523 j1533 v1718 v1719 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1247 values: j1492 j1488  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1247 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1246 v1267 
=== Succesors ===
next: v1270 
=== Usages ===
j1477 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1246 v1267 #next: v1270  <|@  <|@
f <@~|@floating>@ <|@
tid j1522 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j979 
y: j541 
=== Succesors ===
=== Usages ===
v1523 v1525 v1527 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j979 y: j541  <|@  <|@
f <@~|@floating>@ <|@
tid v1523 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1522 
y: j1477 
=== Succesors ===
=== Usages ===
v1270 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1522 y: j1477  <|@  <|@
f <@*|@fixed>@ <|@
tid v1270 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1523 
=== Succesors ===
trueSuccessor: v1269 
falseSuccessor: v1268 
=== Usages ===
=== Predecessor ===
v1247 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1523 #trueSuccessor: v1269 #falseSuccessor: v1268  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B175" 
    xhandlers
    flags 
    probability 4593306856578179264
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1269 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1273 
=== Usages ===
=== Predecessor ===
v1270 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1273  <|@  <|@
f <@*|@fixed>@ <|@
tid v1273 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1234 
=== Predecessor ===
v1269 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B169" "B170" 
    xhandlers
    flags 
    probability 4600153446854166672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1268 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1575 
=== Usages ===
=== Predecessor ===
v1270 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1575  <|@  <|@
f <@~|@floating>@ <|@
tid v1717 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1476 
index: j1477 
=== Succesors ===
=== Usages ===
v1575 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1476 index: j1477  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1575 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1717 
value: i1583 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1276 
=== Usages ===
=== Predecessor ===
v1268 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1717 value: i1583 stateAfter: - lastLocationAccess: - #next: v1276  <|@  <|@
f <@~|@floating>@ <|@
tid j1481 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1477 
y: j805 
=== Succesors ===
=== Usages ===
v1525 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1477 y: j805  <|@  <|@
f <@~|@floating>@ <|@
tid v1525 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1522 
y: j1481 
=== Succesors ===
=== Usages ===
v1276 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1522 y: j1481  <|@  <|@
f <@*|@fixed>@ <|@
tid v1276 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1525 
=== Succesors ===
trueSuccessor: v1275 
falseSuccessor: v1274 
=== Usages ===
=== Predecessor ===
v1575 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1525 #trueSuccessor: v1275 #falseSuccessor: v1274  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B168" 
    successors "B175" 
    xhandlers
    flags 
    probability 4591146247599425680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1275 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1279 
=== Usages ===
=== Predecessor ===
v1276 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1279  <|@  <|@
f <@*|@fixed>@ <|@
tid v1279 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1234 
=== Predecessor ===
v1275 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B168" 
    successors "B171" "B172" 
    xhandlers
    flags 
    probability 4598532990120101484
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1274 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1576 
=== Usages ===
=== Predecessor ===
v1276 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1576  <|@  <|@
f <@~|@floating>@ <|@
tid v1718 <|@
d <@d|@=== Debug Properties ===
displacement: 1
scale: Times1
stamp: void*
=== Inputs ===
base: j1476 
index: j1477 
=== Succesors ===
=== Usages ===
v1576 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1476 index: j1477  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1576 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1718 
value: i1583 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1282 
=== Usages ===
=== Predecessor ===
v1274 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1718 value: i1583 stateAfter: - lastLocationAccess: - #next: v1282  <|@  <|@
f <@~|@floating>@ <|@
tid j1533 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1477 
y: j1529 
=== Succesors ===
=== Usages ===
v1527 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1477 y: j1529  <|@  <|@
f <@~|@floating>@ <|@
tid v1527 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1522 
y: j1533 
=== Succesors ===
=== Usages ===
v1282 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1522 y: j1533  <|@  <|@
f <@*|@fixed>@ <|@
tid v1282 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1527 
=== Succesors ===
trueSuccessor: v1281 
falseSuccessor: v1280 
=== Usages ===
=== Predecessor ===
v1576 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1527 #trueSuccessor: v1281 #falseSuccessor: v1280  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B170" 
    successors "B175" 
    xhandlers
    flags 
    probability 4589525790865360492
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1281 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1285 
=== Usages ===
=== Predecessor ===
v1282 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1285  <|@  <|@
f <@*|@fixed>@ <|@
tid v1285 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1234 
=== Predecessor ===
v1281 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B170" 
    successors "B175" 
    xhandlers
    flags 
    probability 4596460075593828770
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1280 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1577 
=== Usages ===
=== Predecessor ===
v1282 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1577  <|@  <|@
f <@~|@floating>@ <|@
tid v1719 <|@
d <@d|@=== Debug Properties ===
displacement: 2
scale: Times1
stamp: void*
=== Inputs ===
base: j1476 
index: j1477 
=== Succesors ===
=== Usages ===
v1577 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1476 index: j1477  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1577 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1719 
value: i1583 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1249 
=== Usages ===
=== Predecessor ===
v1280 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1719 value: i1583 stateAfter: - lastLocationAccess: - #next: v1249  <|@  <|@
f <@*|@fixed>@ <|@
tid v1249 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1234 
=== Predecessor ===
v1577 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B155" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4600153446854166672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1227 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1226 
=== Usages ===
=== Predecessor ===
v1228 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1226  <|@  <|@
f <@*|@fixed>@ <|@
tid v1226 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v1222 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1227 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1222  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B175" 
    xhandlers
    flags 
    probability 4602314055832920256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1215 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1233 
=== Usages ===
=== Predecessor ===
v1217 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1233  <|@  <|@
f <@*|@fixed>@ <|@
tid v1233 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1234 
=== Predecessor ===
v1215 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B174" "B172" "B167" "B169" "B171" 
    successors 
    xhandlers
    flags 
    probability 4606817655460290752
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1234 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1233 v1249 v1273 v1279 v1285 
=== Succesors ===
next: a724 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1233 v1249 v1273 v1279 v1285 #next: a724  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a724 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a944 
=== Succesors ===
next: v48 
=== Usages ===
v48 
=== Predecessor ===
v1234 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a944 #next: v48  <|@  <|@
f <@*|@fixed>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 124]
stamp: void
=== Inputs ===
result: a724 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a724 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a724 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B133" 
    successors "B133" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4600153446854166672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1152 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1151 
=== Usages ===
=== Predecessor ===
v1153 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1151  <|@  <|@
f <@*|@fixed>@ <|@
tid v1151 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v1147 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1152 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1147  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B181" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.encode(StringCoding.java:354) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: v797 
=== Usages ===
=== Predecessor ===
v609 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v797  <|@  <|@
f <@~|@floating>@ <|@
tid i798 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -106515
stableDimension: 0
stamp: i32 [-106515] ⇊00000000fffe5fed ⇈00000000fffe5fed
stampKind: i32
value: int[-106515|0xfffffffffffe5fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i789 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v797 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v785 
=== Predecessor ===
v608 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B181" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1614 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
next: v795 
=== Usages ===
=== Predecessor ===
v1618 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v795  <|@  <|@
f <@*|@fixed>@ <|@
tid v795 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v785 
=== Predecessor ===
v1614 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B181" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1599 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1726 
=== Usages ===
=== Predecessor ===
v1600 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1726  <|@  <|@
f <@*|@fixed>@ <|@
tid v1726 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v785 
=== Predecessor ===
v1599 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B181" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1598 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
next: v792 
=== Usages ===
=== Predecessor ===
v1602 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v792  <|@  <|@
f <@*|@fixed>@ <|@
tid v792 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v785 
=== Predecessor ===
v1598 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B79" "B180" "B178" "B177" "B179" "B89" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i789 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-113435 - -106515] ⇊00000000fffe40e5 ⇈00000000fffe5ffd
valueDescription: i32
=== Inputs ===
merge: v785 
values: i787 i793 i796 i798 i793 i796 
=== Succesors ===
=== Usages ===
v791 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v785 values: i787 i793 i796 i798 i793 i796  <|@  <|@
f <@~|@floating>@ <|@
tid a790 <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v785 
values: a788 a794 a794 a749 a794 a794 
=== Succesors ===
=== Usages ===
v791 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v785 values: a788 a794 a794 a749 a794 a794  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v785 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v786 v792 v795 v797 v1726 v1727 
=== Succesors ===
next: v791 
=== Usages ===
i789 a790 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v786 v792 v795 v797 v1726 v1727 #next: v791  <|@  <|@
tid ?211 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<StringCoding.encode(Charset, char[], int, int)>
duringCall: true
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: StringCoding.java
sourceLine: 348
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 i4 - - - - - - - 
=== Succesors ===
=== Usages ===
?208 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 i4 - - - - - - -  <|@  <|@
tid ?208 <|@
d <@d|@=== Debug Properties ===
bci: 6
code: ResolvedJavaMethodBytecode<UTF_8.newEncoder()>
duringCall: true
localsSize: 1
locksSize: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 72
stackSize: 1
=== Inputs ===
outerFrameState: ?211 
values: a1 a325 
=== Succesors ===
=== Usages ===
?224 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?211 values: a1 a325  <|@  <|@
tid ?224 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.<init>(Charset, UTF_8$1)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 554
stackSize: 0
=== Inputs ===
outerFrameState: ?208 
values: - - - 
=== Succesors ===
=== Usages ===
?216 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?208 values: - - -  <|@  <|@
tid ?216 <|@
d <@d|@=== Debug Properties ===
bci: 6
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.<init>(Charset)>
duringCall: true
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 558
stackSize: 0
=== Inputs ===
outerFrameState: ?224 
values: a325 a1 
=== Succesors ===
=== Usages ===
?254 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?224 values: a325 a1  <|@  <|@
tid ?254 <|@
d <@d|@=== Debug Properties ===
bci: 12
code: ResolvedJavaMethodBytecode<CharsetEncoder.<init>(Charset, float, float)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: CharsetEncoder.java
sourceLine: 233
stackSize: 0
=== Inputs ===
outerFrameState: ?216 
values: - - - - 
=== Succesors ===
=== Usages ===
?345 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?216 values: - - - -  <|@  <|@
tid a326 <|@
d <@d|@=== Debug Properties ===
componentType: HotSpotResolvedPrimitiveType<byte>
hasIdentity: true
length: 1
objectId: -1
stamp: a!# [B
=== Inputs ===
=== Succesors ===
=== Usages ===
?345 ?328 
=== Predecessor ===
- >@ <|@
instruction <@VirtualArray|@org.graalvm.compiler.nodes.virtual.VirtualArrayNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a225 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:144) [bci: 5]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
rawvalue: CodingErrorAction@250144264
stableDimension: 0
stamp: a!# Ljava/nio/charset/CodingErrorAction;
stampKind: a -
value: Object[CodingErrorAction@250144264]
=== Inputs ===
=== Succesors ===
=== Usages ===
?327 ?327 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?327 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a325 
values: - - - a1 - a225 a225 - - - 
=== Succesors ===
=== Usages ===
?345 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a325 values: - - - a1 - a225 a225 - - -  <|@  <|@
tid ?328 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a326 
values: i152 
=== Succesors ===
=== Usages ===
?345 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a326 values: i152  <|@  <|@
tid ?345 <|@
d <@d|@=== Debug Properties ===
bci: 70
code: ResolvedJavaMethodBytecode<CharsetEncoder.<init>(Charset, float, float, byte[])>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
rethrowException: false
sourceFile: CharsetEncoder.java
sourceLine: 198
stackSize: 1
=== Inputs ===
outerFrameState: ?254 
values: a325 - f212 f213 a326 i18 
virtualObjectMappings: ?327 ?328 
=== Succesors ===
=== Usages ===
v791 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?254 values: a325 - f212 f213 a326 i18 virtualObjectMappings: ?327 ?328  <|@  <|@
f <@*|@fixed>@ <|@
tid v791 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?345 
actionAndReason: i789 
speculation: a790 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v785 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?345 actionAndReason: i789 speculation: a790  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4595923419731591168
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1077 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1076 
=== Usages ===
=== Predecessor ===
v1078 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1076  <|@  <|@
f <@*|@fixed>@ <|@
tid v1076 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v1072 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1077 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1072  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lsun/nio/cs/UTF_8; target_method=newEncoder target_method_class=Lsun/nio/cs/UTF_8; position=at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v755 
=== Usages ===
=== Predecessor ===
v577 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v755  <|@  <|@
f <@~|@floating>@ <|@
tid i756 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -92723
stableDimension: 0
stamp: i32 [-92723] ⇊00000000fffe95cd ⇈00000000fffe95cd
stampKind: i32
value: int[-92723|0xfffffffffffe95cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i750 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v755 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v746 
=== Predecessor ===
v576 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B183" "B2" "B45" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i750 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-103699 - -92427] ⇊00000000fffe00c5 ⇈00000000fffefffd
valueDescription: i32
=== Inputs ===
merge: v746 
values: i756 i758 i762 
=== Succesors ===
=== Usages ===
v752 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v746 values: i756 i758 i762  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v746 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v755 v757 v761 
=== Succesors ===
next: v752 
=== Usages ===
i750 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v755 v757 v761 #next: v752  <|@  <|@
f <@*|@fixed>@ <|@
tid v752 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?5 
actionAndReason: i750 
speculation: a749 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v746 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?5 actionAndReason: i750 speculation: a749  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B183" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v1629 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v1629  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a Ljava/nio/charset/Charset;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v1660 ?216 ?211 ?172 ?327 ?208 ?335 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# [C
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?211 v1652 v417 v1650 ?116 v1649 v1730 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?211 i78 i71 j539 v546 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?211 d13 v19 v173 i71 i516 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<StringCoding.encode(Charset, char[], int, int)>
duringCall: false
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: StringCoding.java
sourceLine: 348
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 i4 - - - - - - - 
=== Succesors ===
=== Usages ===
v752 a829 a888 v1629 v1728 v1729 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 i4 - - - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v1660 <|@
result [v0|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v1629 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1629 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v1660 
=== Succesors ===
next: v577 
=== Usages ===
v972 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v1660 #next: v577  <|@  <|@
f <@~|@floating>@ <|@
tid v971 <|@
result meta{HotSpotType<Lsun/nio/cs/UTF_8;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
rawvalue: meta{HotSpotType<Lsun/nio/cs/UTF_8;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lsun/nio/cs/UTF_8;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v972 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v972 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1629 
y: v971 
=== Succesors ===
=== Usages ===
v577 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1629 y: v971  <|@  <|@
f <@~|@floating>@ <|@
tid a749 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v752 v768 a790 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v577 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lsun/nio/cs/UTF_8; target_method=newEncoder target_method_class=Lsun/nio/cs/UTF_8; position=at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v972 
=== Succesors ===
trueSuccessor: v574 
falseSuccessor: v576 
=== Usages ===
=== Predecessor ===
v1629 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v972 #trueSuccessor: v574 #falseSuccessor: v576  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@b0dad63 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringCoding.encode(StringCoding.java:348) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - - - - 
>@ <|@ instruction CMP [v0|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/nio/cs/UTF_8;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B183 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lsun/nio/cs/UTF_8; target_method=newEncoder target_method_class=Lsun/nio/cs/UTF_8; position=at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v368 
=== Usages ===
=== Predecessor ===
v577 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v368  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v368 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: ANY_LOCATION
nodeSourcePosition: at java.nio.charset.Charset.atBugLevel(Charset.java:280) [bci: 0]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1630 
=== Usages ===
=== Predecessor ===
v574 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a1630  <|@  <|@
f <@~|@floating>@ <|@
tid a363 <|@
result v4|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.charset.Charset.atBugLevel(Charset.java:280) [bci: 0]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
rawvalue: Class:java.nio.charset.Charset
stableDimension: 0
stamp: a!# Ljava/lang/Class;
stampKind: a -
value: Object[Class:java.nio.charset.Charset]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1645 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1645 <|@
result [v4|QWORD[.] + 104] <|@
d <@d|@=== Debug Properties ===
displacement: 104
scale: Times1
stamp: void*
=== Inputs ===
base: a363 
index: - 
=== Succesors ===
=== Usages ===
a1630 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a363 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1630 <|@
result v5|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Charset.bugLevel
nodeSourcePosition: at java.nio.charset.Charset.atBugLevel(Charset.java:280) [bci: 0]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
nullCheck: false
stamp: n# Ljava/lang/String;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1645 
=== Succesors ===
next: v1728 
=== Usages ===
v1725 v1728 v1646 
=== Predecessor ===
v368 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1645 #next: v1728  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1728 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?5 
object: a1630 
=== Succesors ===
next: v585 
=== Usages ===
=== Predecessor ===
a1630 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?5 object: a1630 #next: v585  <|@  <|@
f <@~|@floating>@ <|@
tid a1724 <|@
result NarrowOop[String:"1.4"] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:43) [bci: 2]
at java.nio.charset.Charset.atBugLevel(Charset.java:287) [bci: 40]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
rawvalue: "1.4"
stableDimension: 0
stamp: n!# Ljava/lang/String;
stampKind: n -
value: NarrowOop[String:"1.4"]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1725 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1725 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:43) [bci: 2]
at java.nio.charset.Charset.atBugLevel(Charset.java:287) [bci: 40]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1630 
y: a1724 
=== Succesors ===
=== Usages ===
v585 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a1630 y: a1724  <|@  <|@
f <@*|@fixed>@ <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:43) [bci: 2]
at java.nio.charset.Charset.atBugLevel(Charset.java:287) [bci: 40]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1725 
=== Succesors ===
trueSuccessor: v584 
falseSuccessor: v582 
=== Usages ===
=== Predecessor ===
v1728 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1725 #trueSuccessor: v584 #falseSuccessor: v582  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.nio.charset.Charset] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[.] = MOV [v4|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringCoding.encode(StringCoding.java:348) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v5|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[String:"1.4"] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v584 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:43) [bci: 2]
at java.nio.charset.Charset.atBugLevel(Charset.java:287) [bci: 40]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v757 
=== Usages ===
=== Predecessor ===
v585 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v757  <|@  <|@
f <@~|@floating>@ <|@
tid i758 <|@
result int[-94995|0xfffffffffffe8ced] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -94995
stableDimension: 0
stamp: i32 [-94995] ⇊00000000fffe8ced ⇈00000000fffe8ced
stampKind: i32
value: int[-94995|0xfffffffffffe8ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i750 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v757 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v746 
=== Predecessor ===
v584 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-94995|0xfffffffffffe8ced]] destination: B2 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v582 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:43) [bci: 2]
at java.nio.charset.Charset.atBugLevel(Charset.java:287) [bci: 40]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v369 
=== Usages ===
=== Predecessor ===
v585 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v369  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
barriers: 3
location: ANY_LOCATION
nodeSourcePosition: at java.nio.charset.Charset.atBugLevel(Charset.java:280) [bci: 0]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1631 
=== Usages ===
=== Predecessor ===
v582 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a1631  <|@  <|@
f <@~|@floating>@ <|@
tid v1646 <|@
result [v5|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1630 
=== Succesors ===
=== Usages ===
a1631 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1630  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1631 <|@
result v6|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.nio.charset.Charset.atBugLevel(Charset.java:287) [bci: 40]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1646 
=== Succesors ===
next: v1729 
=== Usages ===
a375 v1729 v1647 
=== Predecessor ===
v369 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1646 #next: v1729  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1729 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?5 
object: a1631 
=== Succesors ===
next: v386 
=== Usages ===
=== Predecessor ===
a1631 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?5 object: a1631 #next: v386  <|@  <|@
f <@~|@floating>@ <|@
tid d13 <|@
result v7|DOUBLE <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.FloatConvertNode$$Lambda$1/154487945@39bcec26
nodeSourcePosition: at java.lang.StringCoding.scale(StringCoding.java:95) [bci: 1]
at java.lang.StringCoding.encode(StringCoding.java:349) [bci: 12]
op: I2D
stamp: f64! [-2.147483648E9 - 2.147483647E9]
=== Inputs ===
value: i4 
=== Succesors ===
=== Usages ===
d15 
=== Predecessor ===
- >@ <|@
instruction <@FloatConvert|@org.graalvm.compiler.nodes.calc.FloatConvertNode>@ value: i4  <|@  <|@
f <@~|@floating>@ <|@
tid d333 <|@
result double[3.0|0x4008000000000000] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 3.0
stableDimension: 0
stamp: f64! [3.0]
stampKind: f64
value: double[3.0|0x4008000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
d15 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid d15 <|@
result v8|DOUBLE <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at java.lang.StringCoding.scale(StringCoding.java:95) [bci: 4]
at java.lang.StringCoding.encode(StringCoding.java:349) [bci: 12]
stamp: f64
=== Inputs ===
x: d13 
y: d333 
=== Succesors ===
=== Usages ===
v392 i381 v387 v387 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: d13 y: d333  <|@  <|@
f <@~|@floating>@ <|@
tid i381 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.replacements.amd64.AMD64FloatConvertNode$$Lambda$199/890056911@20584f7
nodeSourcePosition: at java.lang.StringCoding.scale(StringCoding.java:95) [bci: 5]
at java.lang.StringCoding.encode(StringCoding.java:349) [bci: 12]
op: D2I
stamp: i32
=== Inputs ===
value: d15 
=== Succesors ===
=== Usages ===
v383 i399 i399 j672 
=== Predecessor ===
- >@ <|@
instruction <@AMD64FloatConvert|@org.graalvm.compiler.replacements.amd64.AMD64FloatConvertNode>@ value: d15  <|@  <|@
f <@~|@floating>@ <|@
tid j672 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i381 
=== Succesors ===
=== Usages ===
j673 j673 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i381  <|@  <|@
f <@~|@floating>@ <|@
tid j670 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j673 v1623 v1453 j1445 v1509 j1317 j1322 v1330 j1503 j1378 j1383 j1498 j1438 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringCoding.encode(StringCoding.java:351) [bci: 24]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v19 i399 v241 ?345 ?172 v678 i79 v566 v685 a829 a888 a940 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i382 <|@
result int[-2147483648|0xffffffff80000000] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64ConvertSnippets.d2i(AMD64ConvertSnippets.java:114) [bci: 4]
at java.lang.StringCoding.scale(StringCoding.java:95) [bci: 5]
at java.lang.StringCoding.encode(StringCoding.java:349) [bci: 12]
rawvalue: -2147483648
stableDimension: 0
stamp: i32 [-2147483648] ⇊0000000080000000 ⇈0000000080000000
stampKind: i32
value: int[-2147483648|0xffffffff80000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v383 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64ConvertSnippets.d2i(AMD64ConvertSnippets.java:114) [bci: 6]
at java.lang.StringCoding.scale(StringCoding.java:95) [bci: 5]
at java.lang.StringCoding.encode(StringCoding.java:349) [bci: 12]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i381 
y: i382 
=== Succesors ===
=== Usages ===
v386 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i381 y: i382  <|@  <|@
f <@*|@fixed>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64ConvertSnippets.d2i(AMD64ConvertSnippets.java:114) [bci: 17]
at java.lang.StringCoding.scale(StringCoding.java:95) [bci: 5]
at java.lang.StringCoding.encode(StringCoding.java:349) [bci: 12]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v383 
=== Succesors ===
trueSuccessor: v385 
falseSuccessor: v384 
=== Usages ===
=== Predecessor ===
v1729 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v383 #trueSuccessor: v385 #falseSuccessor: v384  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[.] = MOV [v5|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringCoding.encode(StringCoding.java:348) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v6|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v7|DOUBLE = VCVTSI2SD v3|DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DOUBLE = VMOVE input: double[3.0|0x4008000000000000] <|@ <|@
      nr   -1  <|@ instruction v8|DOUBLE = VMULSD (x: v7|DOUBLE, y: v9|DOUBLE) nZ: XMM <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = VCVTTSD2SI v8|DOUBLE nZ: XMM <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVSXD v10|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v10|DWORD y: -2147483648 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64ConvertSnippets.d2i(AMD64ConvertSnippets.java:115) [bci: 20]
at java.lang.StringCoding.scale(StringCoding.java:95) [bci: 5]
at java.lang.StringCoding.encode(StringCoding.java:349) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v390 
=== Usages ===
=== Predecessor ===
v386 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v390  <|@  <|@
f <@~|@floating>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.Double.isNaN(Double.java:550) [bci: 3]
at org.graalvm.compiler.replacements.amd64.AMD64ConvertSnippets.d2i(AMD64ConvertSnippets.java:115) [bci: 21]
at java.lang.StringCoding.scale(StringCoding.java:95) [bci: 5]
at java.lang.StringCoding.encode(StringCoding.java:349) [bci: 12]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: d15 
y: d15 
=== Succesors ===
=== Usages ===
v390 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.FloatEqualsNode>@ x: d15 y: d15  <|@  <|@
f <@*|@fixed>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64ConvertSnippets.d2i(AMD64ConvertSnippets.java:115) [bci: 24]
at java.lang.StringCoding.scale(StringCoding.java:95) [bci: 5]
at java.lang.StringCoding.encode(StringCoding.java:349) [bci: 12]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v387 
=== Succesors ===
trueSuccessor: v388 
falseSuccessor: v389 
=== Usages ===
=== Predecessor ===
v385 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v387 #trueSuccessor: v388 #falseSuccessor: v389  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction VUCOMISD (x: v8|DOUBLE, y: v8|DOUBLE) <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B8 unorderedIsTrue: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4572414629676717184
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64ConvertSnippets.d2i(AMD64ConvertSnippets.java:118) [bci: 29]
at java.lang.StringCoding.scale(StringCoding.java:95) [bci: 5]
at java.lang.StringCoding.encode(StringCoding.java:349) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v395 
=== Usages ===
=== Predecessor ===
v390 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v395  <|@  <|@
f <@~|@floating>@ <|@
tid d391 <|@
result double[0.0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64ConvertSnippets.d2i(AMD64ConvertSnippets.java:118) [bci: 30]
at java.lang.StringCoding.scale(StringCoding.java:95) [bci: 5]
at java.lang.StringCoding.encode(StringCoding.java:349) [bci: 12]
rawvalue: 0.0
stableDimension: 0
stamp: f64! [0.0]
stampKind: f64
value: double[0.0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v392 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64ConvertSnippets.d2i(AMD64ConvertSnippets.java:118) [bci: 32]
at java.lang.StringCoding.scale(StringCoding.java:95) [bci: 5]
at java.lang.StringCoding.encode(StringCoding.java:349) [bci: 12]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: d391 
y: d15 
=== Succesors ===
=== Usages ===
v395 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.FloatLessThanNode>@ x: d391 y: d15  <|@  <|@
f <@*|@fixed>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64ConvertSnippets.d2i(AMD64ConvertSnippets.java:118) [bci: 32]
at java.lang.StringCoding.scale(StringCoding.java:95) [bci: 5]
at java.lang.StringCoding.encode(StringCoding.java:349) [bci: 12]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v392 
=== Succesors ===
trueSuccessor: v393 
falseSuccessor: v394 
=== Usages ===
=== Predecessor ===
v388 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v392 #trueSuccessor: v393 #falseSuccessor: v394  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DOUBLE = VMOVE input: double[0.0|0x0] <|@ <|@
      nr   -1  <|@ instruction VUCOMISD (x: v8|DOUBLE, y: v12|DOUBLE) <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 unorderedIsTrue: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4567911030049346688
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64ConvertSnippets.d2i(AMD64ConvertSnippets.java:120) [bci: 35]
at java.lang.StringCoding.scale(StringCoding.java:95) [bci: 5]
at java.lang.StringCoding.encode(StringCoding.java:349) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v400 
=== Usages ===
=== Predecessor ===
v395 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v400  <|@  <|@
f <@~|@floating>@ <|@
tid j671 <|@
result long[2147483647|0x7fffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2147483647
stableDimension: 0
stamp: i64 [2147483647] ⇊000000007fffffff ⇈000000007fffffff
stampKind: i64
value: long[2147483647|0x7fffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j673 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i396 <|@
result int[2147483647|0x7fffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64ConvertSnippets.d2i(AMD64ConvertSnippets.java:120) [bci: 35]
at java.lang.StringCoding.scale(StringCoding.java:95) [bci: 5]
at java.lang.StringCoding.encode(StringCoding.java:349) [bci: 12]
rawvalue: 2147483647
stableDimension: 0
stamp: i32 [2147483647] ⇊000000007fffffff ⇈000000007fffffff
stampKind: i32
value: int[2147483647|0x7fffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i399 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.scale(StringCoding.java:95) [bci: 5]
at java.lang.StringCoding.encode(StringCoding.java:349) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v397 
=== Predecessor ===
v393 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[2147483647|0x7fffffff], long[2147483647|0x7fffffff]] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4567911030049346688
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64ConvertSnippets.d2i(AMD64ConvertSnippets.java:123) [bci: 38]
at java.lang.StringCoding.scale(StringCoding.java:95) [bci: 5]
at java.lang.StringCoding.encode(StringCoding.java:349) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v402 
=== Usages ===
=== Predecessor ===
v395 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v402  <|@  <|@
f <@*|@fixed>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.scale(StringCoding.java:95) [bci: 5]
at java.lang.StringCoding.encode(StringCoding.java:349) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v397 
=== Predecessor ===
v394 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|DWORD, v11|QWORD] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4572414629676717184
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64ConvertSnippets.d2i(AMD64ConvertSnippets.java:117) [bci: 27]
at java.lang.StringCoding.scale(StringCoding.java:95) [bci: 5]
at java.lang.StringCoding.encode(StringCoding.java:349) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v398 
=== Usages ===
=== Predecessor ===
v390 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v398  <|@  <|@
f <@*|@fixed>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.scale(StringCoding.java:95) [bci: 5]
at java.lang.StringCoding.encode(StringCoding.java:349) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v397 
=== Predecessor ===
v389 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], long[0|0x0]] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64ConvertSnippets.d2i(AMD64ConvertSnippets.java:123) [bci: 38]
at java.lang.StringCoding.scale(StringCoding.java:95) [bci: 5]
at java.lang.StringCoding.encode(StringCoding.java:349) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v401 
=== Usages ===
=== Predecessor ===
v386 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v401  <|@  <|@
f <@*|@fixed>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.scale(StringCoding.java:95) [bci: 5]
at java.lang.StringCoding.encode(StringCoding.java:349) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v397 
=== Predecessor ===
v384 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|DWORD, v11|QWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B6" "B9" "B7" 
    successors "B11" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i399 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.scale(StringCoding.java:95) [bci: 5]
at java.lang.StringCoding.encode(StringCoding.java:349) [bci: 12]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v397 
values: i18 i396 i381 i381 
=== Succesors ===
=== Usages ===
a888 j981 v64 i717 i516 v173 v566 v464 v483 v492 v685 v692 v855 v907 i895 a829 i1628 j1625 v873 v1288 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v397 values: i18 i396 i381 i381  <|@  <|@
f <@~|@floating>@ <|@
tid j673 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-2147483648 - 2147483647]
valueDescription: i64
=== Inputs ===
merge: v397 
values: j670 j671 j672 j672 
=== Succesors ===
=== Usages ===
v555 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v397 values: j670 j671 j672 j672  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.scale(StringCoding.java:95) [bci: 5]
at java.lang.StringCoding.encode(StringCoding.java:349) [bci: 12]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v398 v400 v401 v402 
=== Succesors ===
next: i1632 
=== Usages ===
i399 j673 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v398 v400 v401 v402 #next: i1632  <|@  <|@
f <@~|@floating>@ <|@
tid v1647 <|@
result [v6|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1631 
=== Succesors ===
=== Usages ===
i1632 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1631  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1632 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.nio.charset.Charset.atBugLevel(Charset.java:287) [bci: 40]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1647 
=== Succesors ===
next: v269 
=== Usages ===
v266 
=== Predecessor ===
v397 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1647 #next: v269  <|@  <|@
f <@~|@floating>@ <|@
tid i169 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 339]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i170 v266 i278 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v266 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 29]
at java.nio.charset.Charset.atBugLevel(Charset.java:287) [bci: 40]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1632 
y: i169 
=== Succesors ===
=== Usages ===
v269 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1632 y: i169  <|@  <|@
f <@~|@floating>@ <|@
tid i102 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 40]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i103 i104 i123 i129 v1288 v563 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1288 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i399 
y: i102 
=== Succesors ===
=== Usages ===
v989 v1067 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i399 y: i102  <|@  <|@
f <@~|@floating>@ <|@
tid i813 <|@
result int[16777215|0xffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v925 v873 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v873 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i399 
y: i813 
=== Succesors ===
=== Usages ===
v876 v817 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i399 y: i813  <|@  <|@
f <@~|@floating>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.StringCoding.encode(StringCoding.java:351) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4 
y: i18 
=== Succesors ===
=== Usages ===
v22 v355 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i4 y: i18  <|@  <|@
f <@~|@floating>@ <|@
tid j1529 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1530 j1531 j1532 j1533 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1583 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1544 v1545 v1546 v1554 v1555 v1556 v1575 v1576 v1577 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j541 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j542 j1346 j1466 j1522 j1619 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1310 <|@
result long[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1311 j1372 j1430 j1492 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1584 <|@
result v15|V32_BYTE <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000>
stampKind: <i8,i8,i8,i8>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1548 v1557 v1578 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1342 <|@
result long[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1343 j1463 j1519 j1620 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j800 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1497 j1437 j1377 j1316 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1585 <|@
result v16|V64_BYTE <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000>
stampKind: <i8,i8,i8,i8,i8,i8,i8,i8>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1550 v1558 v1579 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1338 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1339 j1460 j1516 j1621 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j427 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1502 j1321 j1444 j1382 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1586 <|@
result v17|V128_BYTE <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000>
stampKind: <i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1552 v1559 v1580 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1334 <|@
result long[-16|0xfffffffffffffff0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] ⇊fffffffffffffff0 ⇈fffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1335 j1457 j1513 j1622 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1326 <|@
result long[32|0x20] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 32
stableDimension: 0
stamp: i64 [32] ⇊0000000000000020 ⇈0000000000000020
stampKind: i64
value: long[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1327 j1387 j1451 j1507 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1582 <|@
result v18|V256_BYTE <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000>
stampKind: <i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1581 v1553 v1560 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1328 <|@
result long[-32|0xffffffffffffffe0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -32
stableDimension: 0
stamp: i64 [-32] ⇊ffffffffffffffe0 ⇈ffffffffffffffe0
stampKind: i64
value: long[-32|0xffffffffffffffe0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1329 j1452 j1508 j1624 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v804 <|@
result v19|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
rawvalue: meta{HotSpotType<[B, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[B, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a829 a940 a888 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v973 <|@
result meta{HotSpotType<[B, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
rawvalue: meta{HotSpotType<[B, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[B, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v859 v911 v963 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j805 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v856 v908 v960 v1139 j1299 j1413 j1481 j1361 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i836 <|@
result int[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i947 i895 i1628 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i806 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i807 i919 i1627 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v269 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 29]
at java.nio.charset.Charset.atBugLevel(Charset.java:287) [bci: 40]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v266 
=== Succesors ===
trueSuccessor: v267 
falseSuccessor: v268 
=== Usages ===
=== Predecessor ===
i1632 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v266 #trueSuccessor: v267 #falseSuccessor: v268  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|DWORD, v14|QWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|V32_BYTE = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction v16|V64_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction v17|V128_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction v18|V256_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP [v6|DWORD[.] * 8 + 12] y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B45" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:53) [bci: 34]
at java.nio.charset.Charset.atBugLevel(Charset.java:287) [bci: 40]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i278 
=== Usages ===
=== Predecessor ===
v269 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i278  <|@  <|@
f <@~|@floating>@ <|@
tid a375 <|@
result v20|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.nio.charset.Charset.atBugLevel(Charset.java:287) [bci: 40]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1631 
=== Succesors ===
=== Usages ===
i278 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1631  <|@  <|@
f <@~|@floating>@ <|@
tid a283 <|@
result v21|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.getValue(String) [bci: -1]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:58) [bci: 49]
at java.nio.charset.Charset.atBugLevel(Charset.java:287) [bci: 40]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
rawvalue: char[3]{1, ., 4}
stableDimension: 1
stamp: a!# [C
stampKind: a -
value: Object[char[3]{1, ., 4}]
=== Inputs ===
=== Succesors ===
=== Usages ===
i278 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i278 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
kind: char
nodeSourcePosition: at org.graalvm.compiler.replacements.nodes.ArrayEqualsNode.equals(Object, Object, int, JavaKind) [bci: -1]
at org.graalvm.compiler.replacements.nodes.ArrayEqualsNode.equals(ArrayEqualsNode.java:202) [bci: 6]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:60) [bci: 59]
at java.nio.charset.Charset.atBugLevel(Charset.java:287) [bci: 40]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
array1: a375 
array2: a283 
length: i169 
lastLocationAccess: - 
=== Succesors ===
next: v593 
=== Usages ===
v241 
=== Predecessor ===
v267 >@ <|@
instruction <@ArrayEquals|@org.graalvm.compiler.replacements.nodes.ArrayEqualsNode>@ array1: a375 array2: a283 length: i169 lastLocationAccess: - #next: v593  <|@  <|@
f <@~|@floating>@ <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 70]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i278 
y: i18 
=== Succesors ===
=== Usages ===
v593 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i278 y: i18  <|@  <|@
f <@*|@fixed>@ <|@
tid v593 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 70]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v241 
=== Succesors ===
trueSuccessor: v590 
falseSuccessor: v592 
=== Usages ===
=== Predecessor ===
i278 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v241 #trueSuccessor: v590 #falseSuccessor: v592  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@644bd6a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[3]{1, ., 4}] <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = ARRAY_EQUALS (~array1Value: v20|QWORD[.], ~array2Value: v21|QWORD[.], ~lengthValue: v23|DWORD) {temp1: v24|QWORD[*], temp2: v25|QWORD[*], temp3: v26|QWORD, temp4: v27|QWORD, temp5: -, tempXMM: -, vectorTemp1: v28|DOUBLE, vectorTemp2: v29|DOUBLE} arrayBaseOffset: 16 arrayIndexScale: 2 kind: char <|@ <|@
      nr   -1  <|@ instruction TEST (x: v22|DWORD, y: v22|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B16" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v590 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 70]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: j808 
=== Usages ===
=== Predecessor ===
v593 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j808  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j808 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j852 
=== Usages ===
v1661 v1662 
=== Predecessor ===
v590 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j852  <|@  <|@
f <@~|@floating>@ <|@
tid v1661 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j808 
index: - 
=== Succesors ===
=== Usages ===
j852 v854 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j808 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j852 <|@
result v30|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1661 
=== Succesors ===
next: j853 
=== Usages ===
j812 v1663 v1664 a828 v1669 v1665 v1666 v1667 v1668 
=== Predecessor ===
j808 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1661 #next: j853  <|@  <|@
f <@~|@floating>@ <|@
tid v1662 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j808 
index: - 
=== Succesors ===
=== Usages ===
j853 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j808 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j853 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1662 
=== Succesors ===
next: v817 
=== Usages ===
v818 
=== Predecessor ===
j852 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1662 #next: v817  <|@  <|@
f <@*|@fixed>@ <|@
tid v817 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v873 
=== Succesors ===
trueSuccessor: v816 
falseSuccessor: v815 
=== Usages ===
=== Predecessor ===
j853 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v873 #trueSuccessor: v816 #falseSuccessor: v815  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v13|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B12 -> B13 falseDestination: B12 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v816 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v824 
=== Usages ===
=== Predecessor ===
v817 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v824  <|@  <|@
f <@~|@floating>@ <|@
tid i895 <|@
result v32|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: i32
=== Inputs ===
x: i399 
y: i836 
=== Succesors ===
=== Usages ===
i807 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i399 y: i836  <|@  <|@
f <@~|@floating>@ <|@
tid i807 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i895 
y: i806 
=== Succesors ===
=== Usages ===
j811 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i895 y: i806  <|@  <|@
f <@~|@floating>@ <|@
tid j811 <|@
result v34|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i807 
=== Succesors ===
=== Usages ===
j812 v1665 v1666 v1667 v1668 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i807  <|@  <|@
f <@~|@floating>@ <|@
tid j812 <|@
result v35|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: i64
=== Inputs ===
x: j811 
y: j852 
=== Succesors ===
=== Usages ===
v818 v854 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j811 y: j852  <|@  <|@
f <@~|@floating>@ <|@
tid v818 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j853 
y: j812 
=== Succesors ===
=== Usages ===
v824 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j853 y: j812  <|@  <|@
f <@*|@fixed>@ <|@
tid v824 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v818 
=== Succesors ===
trueSuccessor: v823 
falseSuccessor: v822 
=== Usages ===
=== Predecessor ===
v816 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v818 #trueSuccessor: v823 #falseSuccessor: v822  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = LEA [v13|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = AND v32|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOVSXD v33|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = ADD (x: v34|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v35|QWORD, y: v31|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4571838168924413760
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v823 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v821 
=== Usages ===
=== Predecessor ===
v824 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v821  <|@  <|@
f <@*|@fixed>@ <|@
tid v821 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v820 
=== Predecessor ===
v823 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4601697034453880144
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v822 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v854 
=== Usages ===
=== Predecessor ===
v824 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v854  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v854 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1661 
value: j812 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v841 
=== Usages ===
=== Predecessor ===
v822 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1661 value: j812 stateAfter: - lastLocationAccess: - #next: v841  <|@  <|@
f <@~|@floating>@ <|@
tid v1665 <|@
result [v34|QWORD + v30|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j811 
index: j852 
=== Succesors ===
=== Usages ===
v841 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j811 index: j852  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v841 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: void
=== Inputs ===
address: v1665 
=== Succesors ===
next: v844 
=== Usages ===
=== Predecessor ===
v854 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1665 #next: v844  <|@  <|@
f <@~|@floating>@ <|@
tid v1666 <|@
result [v34|QWORD + v30|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j811 
index: j852 
=== Succesors ===
=== Usages ===
v844 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j811 index: j852  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v844 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: void
=== Inputs ===
address: v1666 
=== Succesors ===
next: v847 
=== Usages ===
=== Predecessor ===
v841 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1666 #next: v847  <|@  <|@
f <@~|@floating>@ <|@
tid v1667 <|@
result [v34|QWORD + v30|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j811 
index: j852 
=== Succesors ===
=== Usages ===
v847 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j811 index: j852  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v847 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: void
=== Inputs ===
address: v1667 
=== Succesors ===
next: v850 
=== Usages ===
=== Predecessor ===
v844 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1667 #next: v850  <|@  <|@
f <@~|@floating>@ <|@
tid v1668 <|@
result [v34|QWORD + v30|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j811 
index: j852 
=== Succesors ===
=== Usages ===
v850 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j811 index: j852  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v850 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: void
=== Inputs ===
address: v1668 
=== Succesors ===
next: v855 
=== Usages ===
=== Predecessor ===
v847 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1668 #next: v855  <|@  <|@
f <@~|@floating>@ <|@
tid v1663 <|@
result [v30|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j852 
index: - 
=== Succesors ===
=== Usages ===
v855 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j852 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v855 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1663 
value: i399 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v856 
=== Usages ===
=== Predecessor ===
v850 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1663 value: i399 stateAfter: - lastLocationAccess: - #next: v856  <|@  <|@
f <@~|@floating>@ <|@
tid v1664 <|@
result [v30|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j852 
index: - 
=== Succesors ===
=== Usages ===
v856 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j852 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v856 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1664 
value: j805 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v859 
=== Usages ===
=== Predecessor ===
v855 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1664 value: j805 stateAfter: - lastLocationAccess: - #next: v859  <|@  <|@
f <@~|@floating>@ <|@
tid v1669 <|@
result [v30|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j852 
index: - 
=== Succesors ===
=== Usages ===
v859 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j852 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v859 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1669 
value: v973 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v827 
=== Usages ===
=== Predecessor ===
v856 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1669 value: v973 stateAfter: - lastLocationAccess: - #next: v827  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v827 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: a828 
=== Usages ===
=== Predecessor ===
v859 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a828  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a828 <|@
result v36|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j852 
=== Succesors ===
next: v830 
=== Usages ===
a833 
=== Predecessor ===
v827 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j852 #next: v830  <|@  <|@
f <@*|@fixed>@ <|@
tid v830 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v831 
=== Predecessor ===
a828 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v35|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v34|QWORD + v30|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v34|QWORD + v30|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v34|QWORD + v30|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v34|QWORD + v30|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v30|QWORD + 12], y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v30|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v30|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE v30|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|QWORD[.]] destination: B15 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4587366580439587224
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v815 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v819 
=== Usages ===
=== Predecessor ===
v817 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v819  <|@  <|@
f <@*|@fixed>@ <|@
tid v819 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v820 
=== Predecessor ===
v815 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B14" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588015098785928576
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v820 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v819 v821 
=== Succesors ===
next: a829 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v819 v821 #next: a829  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a829 <|@
result v37|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?5 
arguments: v804 i399 i18 
=== Succesors ===
next: v832 
=== Usages ===
a833 
=== Predecessor ===
v820 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?5 arguments: v804 i399 i18 #next: v832  <|@  <|@
f <@*|@fixed>@ <|@
tid v832 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v831 
=== Predecessor ===
a829 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v19|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringCoding.encode(StringCoding.java:348) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v37|QWORD[.]] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a833 <|@
result v38|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v831 
values: a828 a829 
=== Succesors ===
=== Usages ===
v1658 a728 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v831 values: a828 a829  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v831 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v830 v832 
=== Succesors ===
next: v1292 
=== Usages ===
a833 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v830 v832 #next: v1292  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1292 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v989 
=== Usages ===
j1294 
=== Predecessor ===
v831 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v989  <|@  <|@
f <@*|@fixed>@ <|@
tid v989 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1288 
=== Succesors ===
trueSuccessor: v987 
falseSuccessor: v988 
=== Usages ===
=== Predecessor ===
v1292 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1288 #trueSuccessor: v987 #falseSuccessor: v988  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v13|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B41" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v987 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1006 
=== Usages ===
=== Predecessor ===
v989 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1006  <|@  <|@
f <@*|@fixed>@ <|@
tid v1006 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1007 
=== Predecessor ===
v987 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v988 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v992 
=== Usages ===
=== Predecessor ===
v989 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v992  <|@  <|@
f <@~|@floating>@ <|@
tid v1658 <|@
result [v38|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a833 
index: - 
=== Succesors ===
=== Usages ===
j1294 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a833 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1294 <|@
result v39|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1292 
address: v1658 
=== Succesors ===
=== Usages ===
v1689 v1690 v1691 v1692 v1693 v1694 v1695 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1292 address: v1658  <|@  <|@
f <@~|@floating>@ <|@
tid j981 <|@
result v40|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i399 
=== Succesors ===
=== Usages ===
j1346 j1343 j1624 j1335 j1339 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i399  <|@  <|@
f <@~|@floating>@ <|@
tid j1624 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483680 - 2147483615]
=== Inputs ===
x: j981 
y: j1328 
=== Succesors ===
=== Usages ===
v1623 v1332 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j981 y: j1328  <|@  <|@
f <@~|@floating>@ <|@
tid v1623 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1624 
y: j670 
=== Succesors ===
=== Usages ===
v992 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1624 y: j670  <|@  <|@
f <@*|@fixed>@ <|@
tid v992 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1623 
=== Succesors ===
trueSuccessor: v990 
falseSuccessor: v991 
=== Usages ===
=== Predecessor ===
v988 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1623 #trueSuccessor: v990 #falseSuccessor: v991  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = LEA [v38|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOVSXD v13|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = LEA [v40|QWORD - 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v41|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v990 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1002 
=== Usages ===
=== Predecessor ===
v992 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1002  <|@  <|@
f <@*|@fixed>@ <|@
tid v1002 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1003 
=== Predecessor ===
v990 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4589168020290535424
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v991 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v993 
=== Usages ===
=== Predecessor ===
v992 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v993  <|@  <|@
f <@*|@fixed>@ <|@
tid v993 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v994 
=== Predecessor ===
v991 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B44" 
    successors "B24" "B44" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4598175219545276416
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1322 <|@
result v42|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v994 
values: j670 j1327 
=== Succesors ===
=== Usages ===
v1695 j1327 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v994 values: j670 j1327  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v994 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v993 
=== Succesors ===
next: v1553 
=== Usages ===
j1322 v998 v999 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v993 #next: v1553  <|@  <|@
f <@~|@floating>@ <|@
tid v1695 <|@
result [v39|QWORD[.] + v42|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1294 
index: j1322 
=== Succesors ===
=== Usages ===
v1553 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1294 index: j1322  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1553 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1695 
value: v1582 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1001 
=== Usages ===
=== Predecessor ===
v994 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1695 value: v1582 stateAfter: - lastLocationAccess: - #next: v1001  <|@  <|@
f <@~|@floating>@ <|@
tid j1327 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1322 
y: j1326 
=== Succesors ===
=== Usages ===
j1317 j1322 v1332 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1322 y: j1326  <|@  <|@
f <@~|@floating>@ <|@
tid v1332 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1624 
y: j1327 
=== Succesors ===
=== Usages ===
v1001 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1624 y: j1327  <|@  <|@
f <@*|@fixed>@ <|@
tid v1001 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1332 
=== Succesors ===
trueSuccessor: v998 
falseSuccessor: v1000 
=== Usages ===
=== Predecessor ===
v1553 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1332 #trueSuccessor: v998 #falseSuccessor: v1000  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v42|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v39|QWORD[.] + v42|QWORD * 1], input: v18|V256_BYTE) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = LEA [v42|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v43|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4589168020290535424
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v998 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v994 
=== Succesors ===
next: v1004 
=== Usages ===
=== Predecessor ===
v1001 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v994 #next: v1004  <|@  <|@
f <@*|@fixed>@ <|@
tid v1004 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1003 
=== Predecessor ===
v998 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v43|QWORD] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1317 <|@
result v44|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1003 
values: j670 j1327 
=== Succesors ===
=== Usages ===
v1694 j1321 j1312 v1336 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1003 values: j670 j1327  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1003 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1002 v1004 
=== Succesors ===
next: v1027 
=== Usages ===
j1317 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1002 v1004 #next: v1027  <|@  <|@
f <@~|@floating>@ <|@
tid j1335 <|@
result v45|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j981 
y: j1334 
=== Succesors ===
=== Usages ===
v1336 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j981 y: j1334  <|@  <|@
f <@~|@floating>@ <|@
tid v1336 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1335 
y: j1317 
=== Succesors ===
=== Usages ===
v1027 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1335 y: j1317  <|@  <|@
f <@*|@fixed>@ <|@
tid v1027 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1336 
=== Succesors ===
trueSuccessor: v1026 
falseSuccessor: v1025 
=== Usages ===
=== Predecessor ===
v1003 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1336 #trueSuccessor: v1026 #falseSuccessor: v1025  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = LEA [v40|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v44|QWORD, y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589168020290535424
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1026 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1030 
=== Usages ===
=== Predecessor ===
v1027 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1030  <|@  <|@
f <@*|@fixed>@ <|@
tid v1030 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1014 
=== Predecessor ===
v1026 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|QWORD] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1025 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1552 
=== Usages ===
=== Predecessor ===
v1027 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1552  <|@  <|@
f <@~|@floating>@ <|@
tid v1694 <|@
result [v39|QWORD[.] + v44|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1294 
index: j1317 
=== Succesors ===
=== Usages ===
v1552 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1294 index: j1317  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1552 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1694 
value: v1586 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1013 
=== Usages ===
=== Predecessor ===
v1025 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1694 value: v1586 stateAfter: - lastLocationAccess: - #next: v1013  <|@  <|@
f <@~|@floating>@ <|@
tid j1321 <|@
result v46|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1317 
y: j427 
=== Succesors ===
=== Usages ===
j1312 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1317 y: j427  <|@  <|@
f <@*|@fixed>@ <|@
tid v1013 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1014 
=== Predecessor ===
v1552 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v39|QWORD[.] + v44|QWORD * 1], input: v17|V128_BYTE) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA [v44|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v46|QWORD] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1312 <|@
result v47|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1014 
values: j1321 j1317 
=== Succesors ===
=== Usages ===
v1693 j1316 j1306 v1340 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1014 values: j1321 j1317  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1014 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1013 v1030 
=== Succesors ===
next: v1033 
=== Usages ===
j1312 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1013 v1030 #next: v1033  <|@  <|@
f <@~|@floating>@ <|@
tid j1339 <|@
result v48|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j981 
y: j1338 
=== Succesors ===
=== Usages ===
v1340 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j981 y: j1338  <|@  <|@
f <@~|@floating>@ <|@
tid v1340 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1339 
y: j1312 
=== Succesors ===
=== Usages ===
v1033 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1339 y: j1312  <|@  <|@
f <@*|@fixed>@ <|@
tid v1033 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1340 
=== Succesors ===
trueSuccessor: v1032 
falseSuccessor: v1031 
=== Usages ===
=== Predecessor ===
v1014 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1340 #trueSuccessor: v1032 #falseSuccessor: v1031  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = LEA [v40|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v47|QWORD, y: v48|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4589168020290535424
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1032 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1036 
=== Usages ===
=== Predecessor ===
v1033 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1036  <|@  <|@
f <@*|@fixed>@ <|@
tid v1036 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1018 
=== Predecessor ===
v1032 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v47|QWORD] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1031 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1550 
=== Usages ===
=== Predecessor ===
v1033 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1550  <|@  <|@
f <@~|@floating>@ <|@
tid v1693 <|@
result [v39|QWORD[.] + v47|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1294 
index: j1312 
=== Succesors ===
=== Usages ===
v1550 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1294 index: j1312  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1550 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1693 
value: v1585 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1017 
=== Usages ===
=== Predecessor ===
v1031 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1693 value: v1585 stateAfter: - lastLocationAccess: - #next: v1017  <|@  <|@
f <@~|@floating>@ <|@
tid j1316 <|@
result v49|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1312 
y: j800 
=== Succesors ===
=== Usages ===
j1306 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1312 y: j800  <|@  <|@
f <@*|@fixed>@ <|@
tid v1017 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1018 
=== Predecessor ===
v1550 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v39|QWORD[.] + v47|QWORD * 1], input: v16|V64_BYTE) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = LEA [v47|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|QWORD] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1306 <|@
result v50|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1018 
values: j1316 j1312 
=== Succesors ===
=== Usages ===
v1692 j1311 j1295 v1344 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1018 values: j1316 j1312  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1018 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1017 v1036 
=== Succesors ===
next: v1039 
=== Usages ===
j1306 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1017 v1036 #next: v1039  <|@  <|@
f <@~|@floating>@ <|@
tid j1343 <|@
result v51|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j981 
y: j1342 
=== Succesors ===
=== Usages ===
v1344 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j981 y: j1342  <|@  <|@
f <@~|@floating>@ <|@
tid v1344 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1343 
y: j1306 
=== Succesors ===
=== Usages ===
v1039 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1343 y: j1306  <|@  <|@
f <@*|@fixed>@ <|@
tid v1039 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1344 
=== Succesors ===
trueSuccessor: v1038 
falseSuccessor: v1037 
=== Usages ===
=== Predecessor ===
v1018 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1344 #trueSuccessor: v1038 #falseSuccessor: v1037  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = LEA [v40|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v50|QWORD, y: v51|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589168020290535424
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1038 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1042 
=== Usages ===
=== Predecessor ===
v1039 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1042  <|@  <|@
f <@*|@fixed>@ <|@
tid v1042 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1022 
=== Predecessor ===
v1038 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v50|QWORD] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1037 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1548 
=== Usages ===
=== Predecessor ===
v1039 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1548  <|@  <|@
f <@~|@floating>@ <|@
tid v1692 <|@
result [v39|QWORD[.] + v50|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1294 
index: j1306 
=== Succesors ===
=== Usages ===
v1548 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1294 index: j1306  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1548 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1692 
value: v1584 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1021 
=== Usages ===
=== Predecessor ===
v1037 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1692 value: v1584 stateAfter: - lastLocationAccess: - #next: v1021  <|@  <|@
f <@~|@floating>@ <|@
tid j1311 <|@
result v52|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1306 
y: j1310 
=== Succesors ===
=== Usages ===
j1295 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1306 y: j1310  <|@  <|@
f <@*|@fixed>@ <|@
tid v1021 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1022 
=== Predecessor ===
v1548 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v39|QWORD[.] + v50|QWORD * 1], input: v15|V32_BYTE) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = LEA [v50|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v52|QWORD] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1295 <|@
result v53|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1022 
values: j1311 j1306 
=== Succesors ===
=== Usages ===
v1689 j1299 v1347 j1530 v1690 v1691 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1022 values: j1311 j1306  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1022 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1021 v1042 
=== Succesors ===
next: v1045 
=== Usages ===
j1295 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1021 v1042 #next: v1045  <|@  <|@
f <@~|@floating>@ <|@
tid j1346 <|@
result v54|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j981 
y: j541 
=== Succesors ===
=== Usages ===
v1347 v1349 v1351 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j981 y: j541  <|@  <|@
f <@~|@floating>@ <|@
tid v1347 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1346 
y: j1295 
=== Succesors ===
=== Usages ===
v1045 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1346 y: j1295  <|@  <|@
f <@*|@fixed>@ <|@
tid v1045 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1347 
=== Succesors ===
trueSuccessor: v1044 
falseSuccessor: v1043 
=== Usages ===
=== Predecessor ===
v1022 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1347 #trueSuccessor: v1044 #falseSuccessor: v1043  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v53|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = DEC v40|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v53|QWORD, y: v54|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B41" 
    xhandlers
    flags 
    probability 4589168020290535424
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1044 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1048 
=== Usages ===
=== Predecessor ===
v1045 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1048  <|@  <|@
f <@*|@fixed>@ <|@
tid v1048 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1007 
=== Predecessor ===
v1044 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1043 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1544 
=== Usages ===
=== Predecessor ===
v1045 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1544  <|@  <|@
f <@~|@floating>@ <|@
tid v1689 <|@
result [v39|QWORD[.] + v53|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1294 
index: j1295 
=== Succesors ===
=== Usages ===
v1544 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1294 index: j1295  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1544 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1689 
value: i1583 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1051 
=== Usages ===
=== Predecessor ===
v1043 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1689 value: i1583 stateAfter: - lastLocationAccess: - #next: v1051  <|@  <|@
f <@~|@floating>@ <|@
tid j1299 <|@
result v55|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1295 
y: j805 
=== Succesors ===
=== Usages ===
v1349 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1295 y: j805  <|@  <|@
f <@~|@floating>@ <|@
tid v1349 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1346 
y: j1299 
=== Succesors ===
=== Usages ===
v1051 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1346 y: j1299  <|@  <|@
f <@*|@fixed>@ <|@
tid v1051 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1349 
=== Succesors ===
trueSuccessor: v1050 
falseSuccessor: v1049 
=== Usages ===
=== Predecessor ===
v1544 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1349 #trueSuccessor: v1050 #falseSuccessor: v1049  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v39|QWORD[.] + v53|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = INC v53|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v55|QWORD, y: v54|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    probability 4586916220476850176
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1050 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1054 
=== Usages ===
=== Predecessor ===
v1051 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1054  <|@  <|@
f <@*|@fixed>@ <|@
tid v1054 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1007 
=== Predecessor ===
v1050 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4594234569871327232
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1049 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1545 
=== Usages ===
=== Predecessor ===
v1051 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1545  <|@  <|@
f <@~|@floating>@ <|@
tid v1690 <|@
result [v39|QWORD[.] + v53|QWORD * 1 + 1] <|@
d <@d|@=== Debug Properties ===
displacement: 1
scale: Times1
stamp: void*
=== Inputs ===
base: j1294 
index: j1295 
=== Succesors ===
=== Usages ===
v1545 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1294 index: j1295  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1545 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1690 
value: i1583 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1057 
=== Usages ===
=== Predecessor ===
v1049 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1690 value: i1583 stateAfter: - lastLocationAccess: - #next: v1057  <|@  <|@
f <@~|@floating>@ <|@
tid j1530 <|@
result v56|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1295 
y: j1529 
=== Succesors ===
=== Usages ===
v1351 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1295 y: j1529  <|@  <|@
f <@~|@floating>@ <|@
tid v1351 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1346 
y: j1530 
=== Succesors ===
=== Usages ===
v1057 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1346 y: j1530  <|@  <|@
f <@*|@fixed>@ <|@
tid v1057 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1351 
=== Succesors ===
trueSuccessor: v1056 
falseSuccessor: v1055 
=== Usages ===
=== Predecessor ===
v1545 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1351 #trueSuccessor: v1056 #falseSuccessor: v1055  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v39|QWORD[.] + v53|QWORD * 1 + 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = LEA [v53|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v56|QWORD, y: v54|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4585227370616586240
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1056 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1060 
=== Usages ===
=== Predecessor ===
v1057 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1060  <|@  <|@
f <@*|@fixed>@ <|@
tid v1060 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1007 
=== Predecessor ===
v1056 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4592264245034352640
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1055 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1546 
=== Usages ===
=== Predecessor ===
v1057 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1546  <|@  <|@
f <@~|@floating>@ <|@
tid v1691 <|@
result [v39|QWORD[.] + v53|QWORD * 1 + 2] <|@
d <@d|@=== Debug Properties ===
displacement: 2
scale: Times1
stamp: void*
=== Inputs ===
base: j1294 
index: j1295 
=== Succesors ===
=== Usages ===
v1546 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1294 index: j1295  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1546 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1691 
value: i1583 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1024 
=== Usages ===
=== Predecessor ===
v1055 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1691 value: i1583 stateAfter: - lastLocationAccess: - #next: v1024  <|@  <|@
f <@*|@fixed>@ <|@
tid v1024 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1007 
=== Predecessor ===
v1546 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v39|QWORD[.] + v53|QWORD * 1 + 2], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B19" "B40" "B35" "B37" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1007 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1006 v1024 v1048 v1054 v1060 
=== Succesors ===
next: a728 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1006 v1024 v1048 v1054 v1060 #next: a728  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a728 <|@
result v38|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a833 
=== Succesors ===
next: v22 
=== Usages ===
v358 a348 
=== Predecessor ===
v1007 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a833 #next: v22  <|@  <|@
f <@*|@fixed>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.encode(StringCoding.java:351) [bci: 24]
stamp: void
trueSuccessorProbability: 0.04030493641460409
=== Inputs ===
condition: v19 
=== Succesors ===
trueSuccessor: v20 
falseSuccessor: v21 
=== Usages ===
=== Predecessor ===
a728 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v19 #trueSuccessor: v20 #falseSuccessor: v21  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.04030493641460409 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors 
    xhandlers
    flags 
    probability 4581465774900200016
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.encode(StringCoding.java:352) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v358 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v358  <|@  <|@
f <@*|@fixed>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a728 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a728 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B78" 
    xhandlers
    flags 
    probability 4602315784579410907
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.encode(StringCoding.java:353) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v344 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v344  <|@  <|@
f <@*|@fixed>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v343 
=== Predecessor ===
v21 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v38|QWORD[.]] destination: B43 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4595923419731591168
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1000 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v999 
=== Usages ===
=== Predecessor ===
v1001 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v999  <|@  <|@
f <@*|@fixed>@ <|@
tid v999 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v994 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1000 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v994  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v43|QWORD] destination: B44 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 70]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v761 
=== Usages ===
=== Predecessor ===
v593 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v761  <|@  <|@
f <@~|@floating>@ <|@
tid i762 <|@
result int[-103699|0xfffffffffffe6aed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -103699
stableDimension: 0
stamp: i32 [-103699] ⇊00000000fffe6aed ⇈00000000fffe6aed
stampKind: i32
value: int[-103699|0xfffffffffffe6aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i750 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v746 
=== Predecessor ===
v592 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-103699|0xfffffffffffe6aed]] destination: B45 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B47" "B50" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:51) [bci: 32]
at java.nio.charset.Charset.atBugLevel(Charset.java:287) [bci: 40]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: j868 
=== Usages ===
=== Predecessor ===
v269 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j868  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j868 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j904 
=== Usages ===
v1670 v1671 
=== Predecessor ===
v268 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j904  <|@  <|@
f <@~|@floating>@ <|@
tid v1670 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j868 
index: - 
=== Succesors ===
=== Usages ===
j904 v906 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j868 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j904 <|@
result v57|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1670 
=== Succesors ===
next: j905 
=== Usages ===
j872 v1672 v1673 a887 v1678 v1674 v1675 v1676 v1677 
=== Predecessor ===
j868 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1670 #next: j905  <|@  <|@
f <@~|@floating>@ <|@
tid v1671 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j868 
index: - 
=== Succesors ===
=== Usages ===
j905 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j868 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j905 <|@
result v58|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1671 
=== Succesors ===
next: v876 
=== Usages ===
v877 
=== Predecessor ===
j904 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1671 #next: v876  <|@  <|@
f <@*|@fixed>@ <|@
tid v876 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v873 
=== Succesors ===
trueSuccessor: v875 
falseSuccessor: v874 
=== Usages ===
=== Predecessor ===
j905 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v873 #trueSuccessor: v875 #falseSuccessor: v874  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v13|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B46 -> B47 falseDestination: B46 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v875 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v883 
=== Usages ===
=== Predecessor ===
v876 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v883  <|@  <|@
f <@~|@floating>@ <|@
tid i1628 <|@
result v59|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: i32
=== Inputs ===
x: i399 
y: i836 
=== Succesors ===
=== Usages ===
i1627 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i399 y: i836  <|@  <|@
f <@~|@floating>@ <|@
tid i1627 <|@
result v60|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i1628 
y: i806 
=== Succesors ===
=== Usages ===
j1626 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i1628 y: i806  <|@  <|@
f <@~|@floating>@ <|@
tid j1626 <|@
result v61|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i1627 
=== Succesors ===
=== Usages ===
j872 v1674 v1675 v1676 v1677 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1627  <|@  <|@
f <@~|@floating>@ <|@
tid j872 <|@
result v62|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: i64
=== Inputs ===
x: j904 
y: j1626 
=== Succesors ===
=== Usages ===
v877 v906 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j904 y: j1626  <|@  <|@
f <@~|@floating>@ <|@
tid v877 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j905 
y: j872 
=== Succesors ===
=== Usages ===
v883 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j905 y: j872  <|@  <|@
f <@*|@fixed>@ <|@
tid v883 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v877 
=== Succesors ===
trueSuccessor: v882 
falseSuccessor: v881 
=== Usages ===
=== Predecessor ===
v875 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v877 #trueSuccessor: v882 #falseSuccessor: v881  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = LEA [v13|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = AND v59|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOVSXD v60|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = ADD (x: v57|QWORD, y: v61|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v62|QWORD, y: v58|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B51" 
    xhandlers
    flags 
    probability 4571838168924413760
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v882 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v880 
=== Usages ===
=== Predecessor ===
v883 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v880  <|@  <|@
f <@*|@fixed>@ <|@
tid v880 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v879 
=== Predecessor ===
v882 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 4601697034453880144
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v881 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v906 
=== Usages ===
=== Predecessor ===
v883 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v906  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v906 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1670 
value: j872 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v897 
=== Usages ===
=== Predecessor ===
v881 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1670 value: j872 stateAfter: - lastLocationAccess: - #next: v897  <|@  <|@
f <@~|@floating>@ <|@
tid v1674 <|@
result [v61|QWORD + v57|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j1626 
index: j904 
=== Succesors ===
=== Usages ===
v897 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1626 index: j904  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v897 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: void
=== Inputs ===
address: v1674 
=== Succesors ===
next: v899 
=== Usages ===
=== Predecessor ===
v906 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1674 #next: v899  <|@  <|@
f <@~|@floating>@ <|@
tid v1675 <|@
result [v61|QWORD + v57|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j1626 
index: j904 
=== Succesors ===
=== Usages ===
v899 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1626 index: j904  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v899 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: void
=== Inputs ===
address: v1675 
=== Succesors ===
next: v901 
=== Usages ===
=== Predecessor ===
v897 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1675 #next: v901  <|@  <|@
f <@~|@floating>@ <|@
tid v1676 <|@
result [v61|QWORD + v57|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j1626 
index: j904 
=== Succesors ===
=== Usages ===
v901 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1626 index: j904  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v901 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: void
=== Inputs ===
address: v1676 
=== Succesors ===
next: v903 
=== Usages ===
=== Predecessor ===
v899 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1676 #next: v903  <|@  <|@
f <@~|@floating>@ <|@
tid v1677 <|@
result [v61|QWORD + v57|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j1626 
index: j904 
=== Succesors ===
=== Usages ===
v903 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1626 index: j904  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v903 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: void
=== Inputs ===
address: v1677 
=== Succesors ===
next: v907 
=== Usages ===
=== Predecessor ===
v901 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1677 #next: v907  <|@  <|@
f <@~|@floating>@ <|@
tid v1672 <|@
result [v57|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j904 
index: - 
=== Succesors ===
=== Usages ===
v907 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j904 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v907 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1672 
value: i399 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v908 
=== Usages ===
=== Predecessor ===
v903 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1672 value: i399 stateAfter: - lastLocationAccess: - #next: v908  <|@  <|@
f <@~|@floating>@ <|@
tid v1673 <|@
result [v57|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j904 
index: - 
=== Succesors ===
=== Usages ===
v908 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j904 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v908 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1673 
value: j805 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v911 
=== Usages ===
=== Predecessor ===
v907 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1673 value: j805 stateAfter: - lastLocationAccess: - #next: v911  <|@  <|@
f <@~|@floating>@ <|@
tid v1678 <|@
result [v57|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j904 
index: - 
=== Succesors ===
=== Usages ===
v911 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j904 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v911 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1678 
value: v973 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v886 
=== Usages ===
=== Predecessor ===
v908 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1678 value: v973 stateAfter: - lastLocationAccess: - #next: v886  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v886 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: a887 
=== Usages ===
=== Predecessor ===
v911 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a887  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a887 <|@
result v63|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j904 
=== Succesors ===
next: v889 
=== Usages ===
a892 
=== Predecessor ===
v886 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j904 #next: v889  <|@  <|@
f <@*|@fixed>@ <|@
tid v889 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v890 
=== Predecessor ===
a887 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v62|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v61|QWORD + v57|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v61|QWORD + v57|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v61|QWORD + v57|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v61|QWORD + v57|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v57|QWORD + 12], y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v57|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v57|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = MOVE v57|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v63|QWORD[.]] destination: B49 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B51" 
    xhandlers
    flags 
    probability 4587366580439587224
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v874 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v878 
=== Usages ===
=== Predecessor ===
v876 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v878  <|@  <|@
f <@*|@fixed>@ <|@
tid v878 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v879 
=== Predecessor ===
v874 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B48" 
    successors "B52" 
    xhandlers
    flags 
    probability 4588015098785928576
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v879 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v878 v880 
=== Succesors ===
next: a888 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v878 v880 #next: a888  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a888 <|@
result v64|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?5 
arguments: v804 i399 i18 
=== Succesors ===
next: v891 
=== Usages ===
a892 
=== Predecessor ===
v879 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?5 arguments: v804 i399 i18 #next: v891  <|@  <|@
f <@*|@fixed>@ <|@
tid v891 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v890 
=== Predecessor ===
a888 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v19|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringCoding.encode(StringCoding.java:348) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v64|QWORD[.]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B49" "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a892 <|@
result v65|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v890 
values: a887 a888 
=== Succesors ===
=== Usages ===
v1659 a732 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v890 values: a887 a888  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v890 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v889 v891 
=== Succesors ===
next: v1354 
=== Usages ===
a892 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v889 v891 #next: v1354  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1354 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v1067 
=== Usages ===
j1356 
=== Predecessor ===
v890 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v1067  <|@  <|@
f <@*|@fixed>@ <|@
tid v1067 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1288 
=== Succesors ===
trueSuccessor: v1065 
falseSuccessor: v1066 
=== Usages ===
=== Predecessor ===
v1354 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1288 #trueSuccessor: v1065 #falseSuccessor: v1066  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v65|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v13|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B75" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1065 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1083 
=== Usages ===
=== Predecessor ===
v1067 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1083  <|@  <|@
f <@*|@fixed>@ <|@
tid v1083 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1084 
=== Predecessor ===
v1065 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B53 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1066 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1070 
=== Usages ===
=== Predecessor ===
v1067 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1070  <|@  <|@
f <@~|@floating>@ <|@
tid v1659 <|@
result [v65|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a892 
index: - 
=== Succesors ===
=== Usages ===
j1356 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a892 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1356 <|@
result v66|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1354 
address: v1659 
=== Succesors ===
=== Usages ===
v1696 v1697 v1698 v1699 v1700 v1701 v1702 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1354 address: v1659  <|@  <|@
f <@~|@floating>@ <|@
tid j1625 <|@
result v67|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i399 
=== Succesors ===
=== Usages ===
j1329 j1622 j1621 j1620 j1619 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i399  <|@  <|@
f <@~|@floating>@ <|@
tid j1329 <|@
result v68|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483680 - 2147483615]
=== Inputs ===
x: j1625 
y: j1328 
=== Succesors ===
=== Usages ===
v1330 v1388 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1625 y: j1328  <|@  <|@
f <@~|@floating>@ <|@
tid v1330 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1329 
y: j670 
=== Succesors ===
=== Usages ===
v1070 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1329 y: j670  <|@  <|@
f <@*|@fixed>@ <|@
tid v1070 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1330 
=== Succesors ===
trueSuccessor: v1068 
falseSuccessor: v1069 
=== Usages ===
=== Predecessor ===
v1066 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1330 #trueSuccessor: v1068 #falseSuccessor: v1069  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = LEA [v65|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = MOVSXD v13|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = LEA [v67|QWORD - 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v68|QWORD, y: v68|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B54 -> B55 falseDestination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1068 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1079 
=== Usages ===
=== Predecessor ===
v1070 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1079  <|@  <|@
f <@*|@fixed>@ <|@
tid v1079 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1080 
=== Predecessor ===
v1068 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4589168020290535424
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1069 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1071 
=== Usages ===
=== Predecessor ===
v1070 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1071  <|@  <|@
f <@*|@fixed>@ <|@
tid v1071 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1072 
=== Predecessor ===
v1069 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B182" 
    successors "B58" "B182" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4598175219545276416
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1383 <|@
result v69|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1072 
values: j670 j1387 
=== Succesors ===
=== Usages ===
v1702 j1387 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1072 values: j670 j1387  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1072 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1071 
=== Succesors ===
next: v1560 
=== Usages ===
j1383 v1075 v1076 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1071 #next: v1560  <|@  <|@
f <@~|@floating>@ <|@
tid v1702 <|@
result [v66|QWORD[.] + v69|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1356 
index: j1383 
=== Succesors ===
=== Usages ===
v1560 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1356 index: j1383  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1560 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1702 
value: v1582 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1078 
=== Usages ===
=== Predecessor ===
v1072 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1702 value: v1582 stateAfter: - lastLocationAccess: - #next: v1078  <|@  <|@
f <@~|@floating>@ <|@
tid j1387 <|@
result v70|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1383 
y: j1326 
=== Succesors ===
=== Usages ===
j1378 j1383 v1388 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1383 y: j1326  <|@  <|@
f <@~|@floating>@ <|@
tid v1388 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1329 
y: j1387 
=== Succesors ===
=== Usages ===
v1078 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1329 y: j1387  <|@  <|@
f <@*|@fixed>@ <|@
tid v1078 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1388 
=== Succesors ===
trueSuccessor: v1075 
falseSuccessor: v1077 
=== Usages ===
=== Predecessor ===
v1560 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1388 #trueSuccessor: v1075 #falseSuccessor: v1077  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v69|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v66|QWORD[.] + v69|QWORD * 1], input: v18|V256_BYTE) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = LEA [v69|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v70|QWORD, y: v68|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B182 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" 
    xhandlers
    flags 
    probability 4589168020290535424
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1075 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1072 
=== Succesors ===
next: v1081 
=== Usages ===
=== Predecessor ===
v1078 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1072 #next: v1081  <|@  <|@
f <@*|@fixed>@ <|@
tid v1081 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1080 
=== Predecessor ===
v1075 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|QWORD] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B55" "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1378 <|@
result v71|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1080 
values: j670 j1387 
=== Succesors ===
=== Usages ===
v1701 j1382 j1373 v1390 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1080 values: j670 j1387  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1080 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1079 v1081 
=== Succesors ===
next: v1102 
=== Usages ===
j1378 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1079 v1081 #next: v1102  <|@  <|@
f <@~|@floating>@ <|@
tid j1622 <|@
result v72|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j1625 
y: j1334 
=== Succesors ===
=== Usages ===
v1390 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1625 y: j1334  <|@  <|@
f <@~|@floating>@ <|@
tid v1390 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1622 
y: j1378 
=== Succesors ===
=== Usages ===
v1102 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1622 y: j1378  <|@  <|@
f <@*|@fixed>@ <|@
tid v1102 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1390 
=== Succesors ===
trueSuccessor: v1101 
falseSuccessor: v1100 
=== Usages ===
=== Predecessor ===
v1080 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1390 #trueSuccessor: v1101 #falseSuccessor: v1100  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v71|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = LEA [v67|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v71|QWORD, y: v72|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4589168020290535424
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1101 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1105 
=== Usages ===
=== Predecessor ===
v1102 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1105  <|@  <|@
f <@*|@fixed>@ <|@
tid v1105 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1091 
=== Predecessor ===
v1101 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v71|QWORD] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1100 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1559 
=== Usages ===
=== Predecessor ===
v1102 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1559  <|@  <|@
f <@~|@floating>@ <|@
tid v1701 <|@
result [v66|QWORD[.] + v71|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1356 
index: j1378 
=== Succesors ===
=== Usages ===
v1559 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1356 index: j1378  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1559 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1701 
value: v1586 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1090 
=== Usages ===
=== Predecessor ===
v1100 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1701 value: v1586 stateAfter: - lastLocationAccess: - #next: v1090  <|@  <|@
f <@~|@floating>@ <|@
tid j1382 <|@
result v73|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1378 
y: j427 
=== Succesors ===
=== Usages ===
j1373 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1378 y: j427  <|@  <|@
f <@*|@fixed>@ <|@
tid v1090 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1091 
=== Predecessor ===
v1559 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v66|QWORD[.] + v71|QWORD * 1], input: v17|V128_BYTE) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = LEA [v71|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v73|QWORD] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1373 <|@
result v74|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1091 
values: j1382 j1378 
=== Succesors ===
=== Usages ===
v1700 j1377 j1368 v1392 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1091 values: j1382 j1378  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1091 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1090 v1105 
=== Succesors ===
next: v1108 
=== Usages ===
j1373 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1090 v1105 #next: v1108  <|@  <|@
f <@~|@floating>@ <|@
tid j1621 <|@
result v75|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j1625 
y: j1338 
=== Succesors ===
=== Usages ===
v1392 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1625 y: j1338  <|@  <|@
f <@~|@floating>@ <|@
tid v1392 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1621 
y: j1373 
=== Succesors ===
=== Usages ===
v1108 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1621 y: j1373  <|@  <|@
f <@*|@fixed>@ <|@
tid v1108 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1392 
=== Succesors ===
trueSuccessor: v1107 
falseSuccessor: v1106 
=== Usages ===
=== Predecessor ===
v1091 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1392 #trueSuccessor: v1107 #falseSuccessor: v1106  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v74|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = LEA [v67|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v74|QWORD, y: v75|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B62 -> B63 falseDestination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    probability 4589168020290535424
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1107 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1111 
=== Usages ===
=== Predecessor ===
v1108 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1111  <|@  <|@
f <@*|@fixed>@ <|@
tid v1111 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1094 
=== Predecessor ===
v1107 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v74|QWORD] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1106 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1558 
=== Usages ===
=== Predecessor ===
v1108 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1558  <|@  <|@
f <@~|@floating>@ <|@
tid v1700 <|@
result [v66|QWORD[.] + v74|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1356 
index: j1373 
=== Succesors ===
=== Usages ===
v1558 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1356 index: j1373  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1558 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1700 
value: v1585 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1093 
=== Usages ===
=== Predecessor ===
v1106 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1700 value: v1585 stateAfter: - lastLocationAccess: - #next: v1093  <|@  <|@
f <@~|@floating>@ <|@
tid j1377 <|@
result v76|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1373 
y: j800 
=== Succesors ===
=== Usages ===
j1368 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1373 y: j800  <|@  <|@
f <@*|@fixed>@ <|@
tid v1093 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1094 
=== Predecessor ===
v1558 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v66|QWORD[.] + v74|QWORD * 1], input: v16|V64_BYTE) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = LEA [v74|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v76|QWORD] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1368 <|@
result v77|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1094 
values: j1377 j1373 
=== Succesors ===
=== Usages ===
v1699 j1372 j1357 v1394 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1094 values: j1377 j1373  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1094 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1093 v1111 
=== Succesors ===
next: v1114 
=== Usages ===
j1368 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1093 v1111 #next: v1114  <|@  <|@
f <@~|@floating>@ <|@
tid j1620 <|@
result v78|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j1625 
y: j1342 
=== Succesors ===
=== Usages ===
v1394 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1625 y: j1342  <|@  <|@
f <@~|@floating>@ <|@
tid v1394 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1620 
y: j1368 
=== Succesors ===
=== Usages ===
v1114 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1620 y: j1368  <|@  <|@
f <@*|@fixed>@ <|@
tid v1114 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1394 
=== Succesors ===
trueSuccessor: v1113 
falseSuccessor: v1112 
=== Usages ===
=== Predecessor ===
v1094 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1394 #trueSuccessor: v1113 #falseSuccessor: v1112  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v77|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v78|QWORD = LEA [v67|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v77|QWORD, y: v78|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4589168020290535424
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1113 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1117 
=== Usages ===
=== Predecessor ===
v1114 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1117  <|@  <|@
f <@*|@fixed>@ <|@
tid v1117 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1097 
=== Predecessor ===
v1113 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|QWORD] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1112 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1557 
=== Usages ===
=== Predecessor ===
v1114 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1557  <|@  <|@
f <@~|@floating>@ <|@
tid v1699 <|@
result [v66|QWORD[.] + v77|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1356 
index: j1368 
=== Succesors ===
=== Usages ===
v1557 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1356 index: j1368  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1557 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1699 
value: v1584 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1096 
=== Usages ===
=== Predecessor ===
v1112 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1699 value: v1584 stateAfter: - lastLocationAccess: - #next: v1096  <|@  <|@
f <@~|@floating>@ <|@
tid j1372 <|@
result v79|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1368 
y: j1310 
=== Succesors ===
=== Usages ===
j1357 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1368 y: j1310  <|@  <|@
f <@*|@fixed>@ <|@
tid v1096 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1097 
=== Predecessor ===
v1557 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v66|QWORD[.] + v77|QWORD * 1], input: v15|V32_BYTE) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = LEA [v77|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v79|QWORD] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors "B69" "B70" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1357 <|@
result v80|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1097 
values: j1372 j1368 
=== Succesors ===
=== Usages ===
v1696 j1361 v1396 j1531 v1697 v1698 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1097 values: j1372 j1368  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1097 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1096 v1117 
=== Succesors ===
next: v1120 
=== Usages ===
j1357 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1096 v1117 #next: v1120  <|@  <|@
f <@~|@floating>@ <|@
tid j1619 <|@
result v81|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j1625 
y: j541 
=== Succesors ===
=== Usages ===
v1396 v1398 v1400 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1625 y: j541  <|@  <|@
f <@~|@floating>@ <|@
tid v1396 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1619 
y: j1357 
=== Succesors ===
=== Usages ===
v1120 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1619 y: j1357  <|@  <|@
f <@*|@fixed>@ <|@
tid v1120 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1396 
=== Succesors ===
trueSuccessor: v1119 
falseSuccessor: v1118 
=== Usages ===
=== Predecessor ===
v1097 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1396 #trueSuccessor: v1119 #falseSuccessor: v1118  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v80|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = DEC v67|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v80|QWORD, y: v81|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B75" 
    xhandlers
    flags 
    probability 4589168020290535424
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1119 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1123 
=== Usages ===
=== Predecessor ===
v1120 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1123  <|@  <|@
f <@*|@fixed>@ <|@
tid v1123 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1084 
=== Predecessor ===
v1119 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B69 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1118 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1554 
=== Usages ===
=== Predecessor ===
v1120 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1554  <|@  <|@
f <@~|@floating>@ <|@
tid v1696 <|@
result [v66|QWORD[.] + v80|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1356 
index: j1357 
=== Succesors ===
=== Usages ===
v1554 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1356 index: j1357  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1554 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1696 
value: i1583 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1126 
=== Usages ===
=== Predecessor ===
v1118 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1696 value: i1583 stateAfter: - lastLocationAccess: - #next: v1126  <|@  <|@
f <@~|@floating>@ <|@
tid j1361 <|@
result v82|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1357 
y: j805 
=== Succesors ===
=== Usages ===
v1398 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1357 y: j805  <|@  <|@
f <@~|@floating>@ <|@
tid v1398 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1619 
y: j1361 
=== Succesors ===
=== Usages ===
v1126 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1619 y: j1361  <|@  <|@
f <@*|@fixed>@ <|@
tid v1126 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1398 
=== Succesors ===
trueSuccessor: v1125 
falseSuccessor: v1124 
=== Usages ===
=== Predecessor ===
v1554 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1398 #trueSuccessor: v1125 #falseSuccessor: v1124  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v66|QWORD[.] + v80|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = INC v80|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v82|QWORD, y: v81|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B75" 
    xhandlers
    flags 
    probability 4586916220476850176
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1125 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1129 
=== Usages ===
=== Predecessor ===
v1126 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1129  <|@  <|@
f <@*|@fixed>@ <|@
tid v1129 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1084 
=== Predecessor ===
v1125 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B71 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4594234569871327232
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1124 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1555 
=== Usages ===
=== Predecessor ===
v1126 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1555  <|@  <|@
f <@~|@floating>@ <|@
tid v1697 <|@
result [v66|QWORD[.] + v80|QWORD * 1 + 1] <|@
d <@d|@=== Debug Properties ===
displacement: 1
scale: Times1
stamp: void*
=== Inputs ===
base: j1356 
index: j1357 
=== Succesors ===
=== Usages ===
v1555 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1356 index: j1357  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1555 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1697 
value: i1583 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1132 
=== Usages ===
=== Predecessor ===
v1124 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1697 value: i1583 stateAfter: - lastLocationAccess: - #next: v1132  <|@  <|@
f <@~|@floating>@ <|@
tid j1531 <|@
result v83|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1357 
y: j1529 
=== Succesors ===
=== Usages ===
v1400 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1357 y: j1529  <|@  <|@
f <@~|@floating>@ <|@
tid v1400 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1619 
y: j1531 
=== Succesors ===
=== Usages ===
v1132 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1619 y: j1531  <|@  <|@
f <@*|@fixed>@ <|@
tid v1132 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1400 
=== Succesors ===
trueSuccessor: v1131 
falseSuccessor: v1130 
=== Usages ===
=== Predecessor ===
v1555 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1400 #trueSuccessor: v1131 #falseSuccessor: v1130  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v66|QWORD[.] + v80|QWORD * 1 + 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = LEA [v80|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v83|QWORD, y: v81|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" 
    xhandlers
    flags 
    probability 4585227370616586240
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1131 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1135 
=== Usages ===
=== Predecessor ===
v1132 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1135  <|@  <|@
f <@*|@fixed>@ <|@
tid v1135 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1084 
=== Predecessor ===
v1131 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" 
    xhandlers
    flags 
    probability 4592264245034352640
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1130 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1556 
=== Usages ===
=== Predecessor ===
v1132 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1556  <|@  <|@
f <@~|@floating>@ <|@
tid v1698 <|@
result [v66|QWORD[.] + v80|QWORD * 1 + 2] <|@
d <@d|@=== Debug Properties ===
displacement: 2
scale: Times1
stamp: void*
=== Inputs ===
base: j1356 
index: j1357 
=== Succesors ===
=== Usages ===
v1556 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1356 index: j1357  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1556 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1698 
value: i1583 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1099 
=== Usages ===
=== Predecessor ===
v1130 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1698 value: i1583 stateAfter: - lastLocationAccess: - #next: v1099  <|@  <|@
f <@*|@fixed>@ <|@
tid v1099 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1084 
=== Predecessor ===
v1556 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v66|QWORD[.] + v80|QWORD * 1 + 2], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B53" "B74" "B69" "B71" "B73" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1084 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1083 v1099 v1123 v1129 v1135 
=== Succesors ===
next: a732 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1083 v1099 v1123 v1129 v1135 #next: a732  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a732 <|@
result v65|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.encode(StringCoding.java:350) [bci: 19]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a892 
=== Succesors ===
next: v355 
=== Usages ===
v359 a348 
=== Predecessor ===
v1084 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a892 #next: v355  <|@  <|@
f <@*|@fixed>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.encode(StringCoding.java:351) [bci: 24]
stamp: void
trueSuccessorProbability: 0.04030493641460409
=== Inputs ===
condition: v19 
=== Succesors ===
trueSuccessor: v353 
falseSuccessor: v354 
=== Usages ===
=== Predecessor ===
a732 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v19 #trueSuccessor: v353 #falseSuccessor: v354  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.04030493641460409 condition: = trueDestination: B75 -> B76 falseDestination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors 
    xhandlers
    flags 
    probability 4581465774900200016
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.encode(StringCoding.java:352) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v359 
=== Usages ===
=== Predecessor ===
v355 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v359  <|@  <|@
f <@*|@fixed>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a732 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v353 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a732 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v65|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B78" 
    xhandlers
    flags 
    probability 4602315784579410907
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.encode(StringCoding.java:353) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v346 
=== Usages ===
=== Predecessor ===
v355 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v346  <|@  <|@
f <@*|@fixed>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v343 
=== Predecessor ===
v354 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v65|QWORD[.]] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B43" "B77" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4606819384206781403
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a348 <|@
result v84|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# [B
valueDescription: a -
=== Inputs ===
merge: v343 
values: a728 a732 
=== Succesors ===
=== Usages ===
v1654 v1655 v1653 ?116 ?172 v1656 v1651 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v343 values: a728 a732  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v344 v346 
=== Succesors ===
next: v597 
=== Usages ===
a348 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v344 v346 #next: v597  <|@  <|@
tid a325 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@352e7fb1
hasIdentity: true
objectId: -1
stamp: a!# Lsun/nio/cs/UTF_8$Encoder;
type: HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?345 ?216 ?208 ?327 ?116 ?335 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid f212 <|@
result float[1.1|0x3f8ccccd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 2]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
rawvalue: 1.1
stableDimension: 0
stamp: f32! [1.100000023841858]
stampKind: f32
value: float[1.1|0x3f8ccccd]
=== Inputs ===
=== Succesors ===
=== Usages ===
?335 ?345 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid f213 <|@
result float[3.0|0x40400000] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
rawvalue: 3.0
stableDimension: 0
stamp: f32! [3.0]
stampKind: f32
value: float[3.0|0x40400000]
=== Inputs ===
=== Succesors ===
=== Usages ===
?335 ?345 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i152 <|@
result int[63|0x3f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 329]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
rawvalue: 63
stableDimension: 0
stamp: i32 [63] ⇊000000000000003f ⇈000000000000003f
stampKind: i32
value: int[63|0x3f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i153 i159 ?336 ?335 ?328 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v597 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2  <|@  <|@
f <@*|@fixed>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v417 
=== Succesors ===
trueSuccessor: v596 
falseSuccessor: v594 
=== Usages ===
=== Predecessor ===
v343 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v417 #trueSuccessor: v596 #falseSuccessor: v594  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v84|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B181" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v596 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
next: v786 
=== Usages ===
=== Predecessor ===
v597 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v786  <|@  <|@
f <@~|@floating>@ <|@
tid a788 <|@
result v85|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1621998909
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1621998909]
=== Inputs ===
=== Succesors ===
=== Usages ===
a790 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i787 <|@
result int[-107019|0xfffffffffffe5df5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -107019
stableDimension: 0
stamp: i32 [-107019] ⇊00000000fffe5df5 ⇈00000000fffe5df5
stampKind: i32
value: int[-107019|0xfffffffffffe5df5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i789 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v786 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v785 
=== Predecessor ===
v596 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1621998909] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-107019|0xfffffffffffe5df5], v85|QWORD[.]] destination: B79 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4606819384206781403
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1594 
=== Usages ===
=== Predecessor ===
v597 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1594  <|@  <|@
f <@~|@floating>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:706) [bci: 14]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i399 
y: i4 
=== Succesors ===
=== Usages ===
i516 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i399 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i516 <|@
result v86|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v173 
trueValue: i399 
falseValue: i4 
=== Succesors ===
=== Usages ===
v563 v81 j540 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v173 trueValue: i399 falseValue: i4  <|@  <|@
f <@~|@floating>@ <|@
tid j540 <|@
result v87|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i516 
=== Succesors ===
=== Usages ===
j542 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i516  <|@  <|@
f <@~|@floating>@ <|@
tid j542 <|@
result v88|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j540 
y: j541 
=== Succesors ===
=== Usages ===
j543 v555 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j540 y: j541  <|@  <|@
f <@~|@floating>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i516 
y: i102 
=== Succesors ===
=== Usages ===
v1610 v1594 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i516 y: i102  <|@  <|@
f <@~|@floating>@ <|@
tid a794 <|@
result v89|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@455242270
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@455242270]
=== Inputs ===
=== Succesors ===
=== Usages ===
a790 a790 a790 a790 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1594 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v563 
=== Succesors ===
trueSuccessor: v1590 
falseSuccessor: v1593 
=== Usages ===
=== Predecessor ===
v594 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v563 #trueSuccessor: v1590 #falseSuccessor: v1593  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v13|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = MOVSXD v86|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v88|QWORD = DEC v87|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@455242270] <|@ <|@
      nr   -1  <|@ instruction CMP v86|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B85" 
    xhandlers
    flags 
    probability 4602315784579410907
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1590 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1588 
=== Usages ===
=== Predecessor ===
v1594 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1588  <|@  <|@
f <@*|@fixed>@ <|@
tid v1588 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1587 
=== Predecessor ===
v1590 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B81 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B180" 
    xhandlers
    flags 
    probability 4602315784579410907
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1593 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1633 
=== Usages ===
=== Predecessor ===
v1594 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1633  <|@  <|@
f <@~|@floating>@ <|@
tid v1649 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1633 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1633 <|@
result v90|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1649 
=== Succesors ===
next: v1602 
=== Usages ===
v546 j537 
=== Predecessor ===
v1593 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1649 #next: v1602  <|@  <|@
f <@~|@floating>@ <|@
tid j539 <|@
result v91|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i3 
=== Succesors ===
=== Usages ===
j543 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i3  <|@  <|@
f <@~|@floating>@ <|@
tid j543 <|@
result v92|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j539 
y: j542 
=== Succesors ===
=== Usages ===
v545 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j539 y: j542  <|@  <|@
f <@~|@floating>@ <|@
tid j537 <|@
result v93|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i1633 
=== Succesors ===
=== Usages ===
v545 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1633  <|@  <|@
f <@~|@floating>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j543 
y: j537 
=== Succesors ===
=== Usages ===
v1602 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j543 y: j537  <|@  <|@
f <@~|@floating>@ <|@
tid i793 <|@
result int[-108315|0xfffffffffffe58e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -108315
stableDimension: 0
stamp: i32 [-108315] ⇊00000000fffe58e5 ⇈00000000fffe58e5
stampKind: i32
value: int[-108315|0xfffffffffffe58e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i789 i789 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1602 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v545 
=== Succesors ===
trueSuccessor: v1601 
falseSuccessor: v1598 
=== Usages ===
=== Predecessor ===
i1633 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v545 #trueSuccessor: v1601 #falseSuccessor: v1598  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v91|QWORD = MOVSXD v2|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v92|QWORD = ADD (x: v91|QWORD, y: v88|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v93|QWORD = MOV v90|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v93|QWORD, y: v92|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B82 -> B83 falseDestination: B82 -> B180 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B84" "B179" 
    xhandlers
    flags 
    probability 4602315784579410907
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1601 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1600 
=== Usages ===
=== Predecessor ===
v1602 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1600  <|@  <|@
f <@~|@floating>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i1633 
=== Succesors ===
=== Usages ===
v1600 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i3 y: i1633  <|@  <|@
f <@*|@fixed>@ <|@
tid v1600 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v546 
=== Succesors ===
trueSuccessor: v1591 
falseSuccessor: v1599 
=== Usages ===
=== Predecessor ===
v1601 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v546 #trueSuccessor: v1591 #falseSuccessor: v1599  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v90|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B83 -> B84 falseDestination: B83 -> B179 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" 
    xhandlers
    flags 
    probability 4602315784579410907
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1591 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1589 
=== Usages ===
=== Predecessor ===
v1600 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1589  <|@  <|@
f <@*|@fixed>@ <|@
tid v1589 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1587 
=== Predecessor ===
v1591 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B81" "B84" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4606819384206781403
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1587 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1588 v1589 
=== Succesors ===
next: v1610 
=== Usages ===
v551 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1588 v1589 #next: v1610  <|@  <|@
f <@*|@fixed>@ <|@
tid v1610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v563 
=== Succesors ===
trueSuccessor: v1606 
falseSuccessor: v1609 
=== Usages ===
=== Predecessor ===
v1587 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v563 #trueSuccessor: v1606 #falseSuccessor: v1609  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v86|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B85 -> B86 falseDestination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B91" 
    xhandlers
    flags 
    probability 4602315784579410907
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1606 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1604 
=== Usages ===
=== Predecessor ===
v1610 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1604  <|@  <|@
f <@*|@fixed>@ <|@
tid v1604 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1603 
=== Predecessor ===
v1606 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B86 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B178" 
    xhandlers
    flags 
    probability 4602315784579410907
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1609 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1618 
=== Usages ===
=== Predecessor ===
v1610 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1618  <|@  <|@
f <@~|@floating>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j542 
y: j673 
=== Succesors ===
=== Usages ===
v1618 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j542 y: j673  <|@  <|@
f <@~|@floating>@ <|@
tid i796 <|@
result int[-113435|0xfffffffffffe44e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -113435
stableDimension: 0
stamp: i32 [-113435] ⇊00000000fffe44e5 ⇈00000000fffe44e5
stampKind: i32
value: int[-113435|0xfffffffffffe44e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i789 i789 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1618 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v555 
=== Succesors ===
trueSuccessor: v1617 
falseSuccessor: v1614 
=== Usages ===
=== Predecessor ===
v1609 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v555 #trueSuccessor: v1617 #falseSuccessor: v1614  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|QWORD, y: v88|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B87 -> B88 falseDestination: B87 -> B178 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4602315784579410907
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1617 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1616 
=== Usages ===
=== Predecessor ===
v1618 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1616  <|@  <|@
f <@~|@floating>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i399 
y: i18 
=== Succesors ===
=== Usages ===
v1616 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i399 y: i18  <|@  <|@
f <@*|@fixed>@ <|@
tid v1616 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v566 
=== Succesors ===
trueSuccessor: v1615 
falseSuccessor: v1607 
=== Usages ===
=== Predecessor ===
v1617 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v566 #trueSuccessor: v1615 #falseSuccessor: v1607  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v13|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B88 -> B89 falseDestination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B181" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1615 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1727 
=== Usages ===
=== Predecessor ===
v1616 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1727  <|@  <|@
f <@*|@fixed>@ <|@
tid v1727 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v785 
=== Predecessor ===
v1615 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-113435|0xfffffffffffe44e5], v89|QWORD[.]] destination: B89 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4602315784579410907
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1607 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1605 
=== Usages ===
=== Predecessor ===
v1616 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1605  <|@  <|@
f <@*|@fixed>@ <|@
tid v1605 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1603 
=== Predecessor ===
v1607 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B86" "B90" 
    successors "B92" "B177" 
    xhandlers
    flags 
    probability 4606819384206781403
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1603 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1604 v1605 
=== Succesors ===
next: v414 
=== Usages ===
v560 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1604 v1605 #next: v414  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: ANY_LOCATION
nodeSourcePosition: at java.lang.System.getSecurityManager(System.java:334) [bci: 0]
at java.lang.StringCoding.encode(StringCoding.java:354) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1634 
=== Usages ===
=== Predecessor ===
v1603 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a1634  <|@  <|@
f <@~|@floating>@ <|@
tid a409 <|@
result v94|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.getSecurityManager(System.java:334) [bci: 0]
at java.lang.StringCoding.encode(StringCoding.java:354) [bci: 33]
rawvalue: Class:java.lang.System
stableDimension: 0
stamp: a!# Ljava/lang/Class;
stampKind: a -
value: Object[Class:java.lang.System]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1648 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1648 <|@
result [v94|QWORD[.] + 116] <|@
d <@d|@=== Debug Properties ===
displacement: 116
scale: Times1
stamp: void*
=== Inputs ===
base: a409 
index: - 
=== Succesors ===
=== Usages ===
a1634 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a409 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1634 <|@
result v95|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: System.security
nodeSourcePosition: at java.lang.System.getSecurityManager(System.java:334) [bci: 0]
at java.lang.StringCoding.encode(StringCoding.java:354) [bci: 33]
nullCheck: false
stamp: n# Ljava/lang/SecurityManager;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1648 
=== Succesors ===
next: v609 
=== Usages ===
v504 
=== Predecessor ===
v414 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1648 #next: v609  <|@  <|@
f <@~|@floating>@ <|@
tid v504 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.encode(StringCoding.java:354) [bci: 36]
stamp: void
=== Inputs ===
value: a1634 
=== Succesors ===
=== Usages ===
v609 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1634  <|@  <|@
f <@*|@fixed>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.encode(StringCoding.java:354) [bci: 36]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v504 
=== Succesors ===
trueSuccessor: v606 
falseSuccessor: v608 
=== Usages ===
=== Predecessor ===
a1634 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v504 #trueSuccessor: v606 #falseSuccessor: v608  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v94|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.lang.System] <|@ <|@
      nr   -1  <|@ instruction v95|DWORD[.] = MOV [v94|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v95|DWORD[.], y: v95|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B91 -> B92 falseDestination: B91 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B93" 
    xhandlers
    flags 
    probability 4606819384206781403
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.encode(StringCoding.java:354) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: v415 
=== Usages ===
=== Predecessor ===
v609 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v415  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
barriers: 3
location: ANY_LOCATION
nodeSourcePosition: at java.lang.System.getSecurityManager(System.java:334) [bci: 0]
at java.lang.StringCoding.encode(StringCoding.java:354) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: v76 
=== Usages ===
=== Predecessor ===
v606 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v76  <|@  <|@
f <@~|@floating>@ <|@
tid i506 <|@
result short[128|0x80] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 33]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
rawvalue: 128
stableDimension: 0
stamp: i16 [128] ⇊0000000000000080 ⇈0000000000000080
stampKind: i16
value: short[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
v507 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
v415 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v2|DWORD, int[0|0x0]] destination: B92 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" "B95" 
    successors "B94" "B97" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4633373721283045376
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i78 <|@
result v96|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v77 
values: i3 i104 
=== Succesors ===
=== Usages ===
i104 i114 v1650 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v77 values: i3 i104  <|@  <|@
f <@~|@floating>@ <|@
tid i79 <|@
result v97|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v77 
values: i18 i103 
=== Succesors ===
=== Usages ===
v1651 v81 i103 i115 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v77 values: i18 i103  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 60.54047728144854
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v76 
=== Succesors ===
next: v87 
=== Usages ===
i78 i79 v83 v95 v110 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v76 #next: v87  <|@  <|@
f <@~|@floating>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 24]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i79 
y: i516 
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i79 y: i516  <|@  <|@
f <@*|@fixed>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 24]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
trueSuccessorProbability: 0.9835900530402635
=== Inputs ===
condition: v81 
=== Succesors ===
trueSuccessor: v82 
falseSuccessor: v83 
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v81 #trueSuccessor: v82 #falseSuccessor: v83  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v96|DWORD, v97|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v86|DWORD, y: v97|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9835900530402635 condition: > trueDestination: B93 -> B94 falseDestination: B93 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4633239538722544628
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 27]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1635 
=== Usages ===
v551 v560 
=== Predecessor ===
v87 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1635  <|@  <|@
f <@~|@floating>@ <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1587 v82 
=== Succesors ===
=== Usages ===
i1635 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1587 v82  <|@  <|@
f <@~|@floating>@ <|@
tid v1650 <|@
result [v1|QWORD[.] + v96|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a2 
index: i78 
=== Succesors ===
=== Usages ===
i1635 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: i78  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1635 <|@
result v98|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v551 
address: v1650 
=== Succesors ===
next: v101 
=== Usages ===
v507 i509 
=== Predecessor ===
v82 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v551 address: v1650 #next: v101  <|@  <|@
f <@~|@floating>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 33]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1635 
y: i506 
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1635 y: i506  <|@  <|@
f <@*|@fixed>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 33]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
trueSuccessorProbability: 0.9998902719253914
=== Inputs ===
condition: v507 
=== Succesors ===
trueSuccessor: v91 
falseSuccessor: v95 
=== Usages ===
=== Predecessor ===
i1635 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v507 #trueSuccessor: v91 #falseSuccessor: v95  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = MOVSX [v1|QWORD[.] + v96|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v98|DWORD y: 128 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9998902719253914 condition: |<| trueDestination: B94 -> B95 falseDestination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B93" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4633238656210209361
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 36]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
next: v450 
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v450  <|@  <|@
f <@~|@floating>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1603 v82 
=== Succesors ===
=== Usages ===
v450 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1603 v82  <|@  <|@
f <@~|@floating>@ <|@
tid v1651 <|@
result [v84|QWORD[.] + v97|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a348 
index: i79 
=== Succesors ===
=== Usages ===
v450 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a348 index: i79  <|@  <|@
f <@~|@floating>@ <|@
tid i509 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 16
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 49]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
resultBits: 8
stamp: i8
=== Inputs ===
value: i1635 
=== Succesors ===
=== Usages ===
v450 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i1635  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v450 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v560 
address: v1651 
value: i509 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v110 
=== Usages ===
=== Predecessor ===
v91 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v560 address: v1651 value: i509 stateAfter: - lastLocationAccess: - #next: v110  <|@  <|@
f <@~|@floating>@ <|@
tid i103 <|@
result v99|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 40]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: i32
=== Inputs ===
x: i79 
y: i102 
=== Succesors ===
=== Usages ===
i79 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i79 y: i102  <|@  <|@
f <@~|@floating>@ <|@
tid i104 <|@
result v100|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 45]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: i32
=== Inputs ===
x: i78 
y: i102 
=== Succesors ===
=== Usages ===
i78 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i78 y: i102  <|@  <|@
f <@*|@fixed>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
loopBegin: v77 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v450 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v77  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v84|QWORD[.] + v97|DWORD * 1 + 16], y: v98|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = INC v97|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = INC v96|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v100|DWORD, v99|DWORD] destination: B95 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B98" 
    xhandlers
    flags 
    probability 4573879563204190531
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v77 
=== Succesors ===
next: v94 
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v77 #next: v94  <|@  <|@
f <@*|@fixed>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
v95 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B96 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B98" 
    xhandlers
    flags 
    probability 4606762903417324314
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v77 
=== Succesors ===
next: v92 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v77 #next: v92  <|@  <|@
f <@*|@fixed>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
v83 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B97 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" "B96" 
    successors "B99" 
    xhandlers
    flags 
    probability 4606819384206781405
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v92 v94 
=== Succesors ===
next: v112 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v92 v94 #next: v112  <|@  <|@
tid ?172 <|@
d <@d|@=== Debug Properties ===
bci: 107
code: ResolvedJavaMethodBytecode<StringCoding.encode(Charset, char[], int, int)>
duringCall: true
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: StringCoding.java
sourceLine: 364
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - a348 i18 - - - 
=== Succesors ===
=== Usages ===
?116 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - a348 i18 - - -  <|@  <|@
tid a332 <|@
d <@d|@=== Debug Properties ===
componentType: HotSpotResolvedPrimitiveType<byte>
hasIdentity: true
length: 1
objectId: -1
stamp: a!# [B
=== Inputs ===
=== Succesors ===
=== Usages ===
?335 ?336 
=== Predecessor ===
- >@ <|@
instruction <@VirtualArray|@org.graalvm.compiler.nodes.virtual.VirtualArrayNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a29 <|@
result Object[CodingErrorAction@561514572] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringCoding.encode(StringCoding.java:360) [bci: 73]
rawvalue: CodingErrorAction@561514572
stableDimension: 0
stamp: a!# Ljava/nio/charset/CodingErrorAction;
stampKind: a -
value: Object[CodingErrorAction@561514572]
=== Inputs ===
=== Succesors ===
=== Usages ===
?335 ?335 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?335 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a325 
values: f212 f213 - a1 a332 a29 a29 - i152 - 
=== Succesors ===
=== Usages ===
?116 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a325 values: f212 f213 - a1 a332 a29 a29 - i152 -  <|@  <|@
tid ?336 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a332 
values: i152 
=== Succesors ===
=== Usages ===
?116 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a332 values: i152  <|@  <|@
f <@~|@floating>@ <|@
tid i71 <|@
result v101|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:704) [bci: 2]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: i32
=== Inputs ===
x: i3 
y: i4 
=== Succesors ===
=== Usages ===
v117 ?116 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i3 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
v93 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = ADD (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v96|DWORD, v97|DWORD] destination: B98 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" "B103" "B109" 
    successors "B100" "B115" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4607837160947116637
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i114 <|@
result v102|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v113 
values: i78 i123 i123 
=== Succesors ===
=== Usages ===
?116 v117 i123 v1652 v455 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v113 values: i78 i123 i123  <|@  <|@
f <@~|@floating>@ <|@
tid i115 <|@
result v103|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v113 
values: i79 i129 i170 
=== Succesors ===
=== Usages ===
?116 j974 i129 v464 i170 v1653 i168 v64 v678 v692 i717 i947 v959 v925 a940 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v113 values: i79 i129 i170  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.1934853109500192
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v112 
=== Succesors ===
next: v122 
=== Usages ===
i114 i115 v119 v165 v171 v643 v638 v618 v623 v628 v633 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v112 #next: v122  <|@  <|@
tid ?116 <|@
d <@d|@=== Debug Properties ===
bci: 54
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encode(char[], int, int, byte[])>
duringCall: false
localsSize: 10
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 712
stackSize: 0
=== Inputs ===
outerFrameState: ?172 
values: a325 a2 i114 - a348 i71 i115 - - - 
virtualObjectMappings: ?335 ?336 
=== Succesors ===
=== Usages ===
v768 a940 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?172 values: a325 a2 i114 - a348 i71 i115 - - - virtualObjectMappings: ?335 ?336  <|@  <|@
f <@~|@floating>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 57]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i114 
y: i71 
=== Succesors ===
=== Usages ===
v122 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i114 y: i71  <|@  <|@
f <@*|@fixed>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 57]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
trueSuccessorProbability: 0.16211788211788214
=== Inputs ===
condition: v117 
=== Succesors ===
trueSuccessor: v118 
falseSuccessor: v119 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v117 #trueSuccessor: v118 #falseSuccessor: v119  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v102|DWORD, v103|DWORD] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v101|DWORD, y: v102|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.16211788211788214 condition: > trueDestination: B99 -> B100 falseDestination: B99 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B101" "B114" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4595858095840273263
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 60]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1636 
=== Usages ===
=== Predecessor ===
v122 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1636  <|@  <|@
f <@~|@floating>@ <|@
tid v1730 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1636 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1636 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1730 
=== Succesors ===
next: v619 
=== Usages ===
v455 
=== Predecessor ===
v118 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1730 #next: v619  <|@  <|@
f <@~|@floating>@ <|@
tid v455 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i114 
y: i1636 
=== Succesors ===
=== Usages ===
v619 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i114 y: i1636  <|@  <|@
f <@*|@fixed>@ <|@
tid v619 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v455 
=== Succesors ===
trueSuccessor: v615 
falseSuccessor: v618 
=== Usages ===
=== Predecessor ===
i1636 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v455 #trueSuccessor: v615 #falseSuccessor: v618  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v102|DWORD, y: [v1|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B100 -> B101 falseDestination: B100 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" "B113" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4595858095840273263
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
next: v624 
=== Usages ===
i1637 
=== Predecessor ===
v619 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v624  <|@  <|@
f <@~|@floating>@ <|@
tid v464 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:716) [bci: 86]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i115 
y: i399 
=== Succesors ===
=== Usages ===
v624 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i115 y: i399  <|@  <|@
f <@*|@fixed>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 313]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v464 
=== Succesors ===
trueSuccessor: v620 
falseSuccessor: v623 
=== Usages ===
=== Predecessor ===
v615 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v464 #trueSuccessor: v620 #falseSuccessor: v623  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v13|DWORD, y: v103|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B101 -> B102 falseDestination: B101 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B103" "B104" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4595858095840273263
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v620 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 313]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1637 
=== Usages ===
v482 v472 
=== Predecessor ===
v624 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1637  <|@  <|@
f <@~|@floating>@ <|@
tid v1652 <|@
result [v1|QWORD[.] + v102|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a2 
index: i114 
=== Succesors ===
=== Usages ===
i1637 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: i114  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1637 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v615 
address: v1652 
=== Succesors ===
next: v128 
=== Usages ===
i463 
=== Predecessor ===
v620 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v615 address: v1652 #next: v128  <|@  <|@
f <@~|@floating>@ <|@
tid i463 <|@
result v104|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1637 
=== Succesors ===
=== Usages ===
v125 i130 i151 v135 i159 v184 i144 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1637  <|@  <|@
f <@~|@floating>@ <|@
tid i89 <|@
result int[128|0x80] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 30]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
rawvalue: 128
stableDimension: 0
stamp: i32 [128] ⇊0000000000000080 ⇈0000000000000080
stampKind: i32
value: int[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
i160 v125 i154 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:714) [bci: 73]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i463 
y: i89 
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i463 y: i89  <|@  <|@
f <@~|@floating>@ <|@
tid i123 <|@
result v105|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 62]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: i32
=== Inputs ===
x: i114 
y: i102 
=== Succesors ===
=== Usages ===
i114 i114 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i114 y: i102  <|@  <|@
f <@~|@floating>@ <|@
tid i129 <|@
result v106|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:716) [bci: 80]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: i32
=== Inputs ===
x: i115 
y: i102 
=== Succesors ===
=== Usages ===
i115 v483 v1654 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i115 y: i102  <|@  <|@
f <@~|@floating>@ <|@
tid v1653 <|@
result [v84|QWORD[.] + v103|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a348 
index: i115 
=== Succesors ===
=== Usages ===
v482 v472 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a348 index: i115  <|@  <|@
f <@*|@fixed>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:714) [bci: 73]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
trueSuccessorProbability: 0.942568400295785
=== Inputs ===
condition: v125 
=== Succesors ===
trueSuccessor: v126 
falseSuccessor: v127 
=== Usages ===
=== Predecessor ===
i1637 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v125 #trueSuccessor: v126 #falseSuccessor: v127  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = MOVZX [v1|QWORD[.] + v102|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = INC v102|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = INC v103|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v104|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.942568400295785 condition: |<| trueDestination: B102 -> B103 falseDestination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B99" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4595473874099309764
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:716) [bci: 76]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
next: v472 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v472  <|@  <|@
f <@~|@floating>@ <|@
tid i130 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:716) [bci: 85]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
resultBits: 8
stamp: i8
=== Inputs ===
value: i463 
=== Succesors ===
=== Usages ===
v472 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i463  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v472 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:716) [bci: 86]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v620 
address: v1653 
value: i130 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v165 
=== Usages ===
=== Predecessor ===
v126 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v620 address: v1653 value: i130 stateAfter: - lastLocationAccess: - #next: v165  <|@  <|@
f <@*|@fixed>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
loopBegin: v113 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v472 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v113  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v84|QWORD[.] + v103|DWORD * 1 + 16], y: v104|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v105|DWORD, v106|DWORD] destination: B103 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B105" "B106" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4577301169636469431
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:717) [bci: 90]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
next: v629 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v629  <|@  <|@
f <@~|@floating>@ <|@
tid i134 <|@
result int[2048|0x800] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:717) [bci: 92]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
rawvalue: 2048
stableDimension: 0
stamp: i32 [2048] ⇊0000000000000800 ⇈0000000000000800
stampKind: i32
value: int[2048|0x800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v135 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:717) [bci: 95]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i463 
y: i134 
=== Succesors ===
=== Usages ===
v629 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i463 y: i134  <|@  <|@
f <@*|@fixed>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:717) [bci: 95]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v135 
=== Succesors ===
trueSuccessor: v628 
falseSuccessor: v625 
=== Usages ===
=== Predecessor ===
v127 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v135 #trueSuccessor: v628 #falseSuccessor: v625  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v104|DWORD y: 2048 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B104 -> B105 falseDestination: B104 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B121" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v628 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:717) [bci: 95]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v113 
=== Succesors ===
next: v775 
=== Usages ===
=== Predecessor ===
v629 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v113 #next: v775  <|@  <|@
f <@~|@floating>@ <|@
tid i776 <|@
result int[-121107|0xfffffffffffe26ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -121107
stableDimension: 0
stamp: i32 [-121107] ⇊00000000fffe26ed ⇈00000000fffe26ed
stampKind: i32
value: int[-121107|0xfffffffffffe26ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i766 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v775 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v763 
=== Predecessor ===
v628 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-121107|0xfffffffffffe26ed]] destination: B105 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B112" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4577301169636469431
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v625 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:717) [bci: 95]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
next: v634 
=== Usages ===
=== Predecessor ===
v629 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v634  <|@  <|@
f <@~|@floating>@ <|@
tid i183 <|@
result int[55296|0xd800] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:721) [bci: 139]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
rawvalue: 55296
stableDimension: 0
stamp: i32 [55296] ⇊000000000000d800 ⇈000000000000d800
stampKind: i32
value: int[55296|0xd800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v184 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:721) [bci: 139]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i463 
y: i183 
=== Succesors ===
=== Usages ===
v634 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i463 y: i183  <|@  <|@
f <@*|@fixed>@ <|@
tid v634 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:721) [bci: 139]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v184 
=== Succesors ===
trueSuccessor: v630 
falseSuccessor: v633 
=== Usages ===
=== Predecessor ===
v625 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v184 #trueSuccessor: v630 #falseSuccessor: v633  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v104|DWORD y: 55296 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B106 -> B107 falseDestination: B106 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B108" "B111" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4577301169636469431
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:721) [bci: 139]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
next: v639 
=== Usages ===
=== Predecessor ===
v634 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v639  <|@  <|@
f <@~|@floating>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 334]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i129 
y: i399 
=== Succesors ===
=== Usages ===
v639 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i129 y: i399  <|@  <|@
f <@*|@fixed>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 334]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v483 
=== Succesors ===
trueSuccessor: v635 
falseSuccessor: v638 
=== Usages ===
=== Predecessor ===
v630 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v483 #trueSuccessor: v635 #falseSuccessor: v638  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v13|DWORD, y: v106|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B107 -> B108 falseDestination: B107 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4577301169636469431
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 334]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
next: v644 
=== Usages ===
v491 
=== Predecessor ===
v639 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v644  <|@  <|@
f <@~|@floating>@ <|@
tid i167 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 318]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i168 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i168 <|@
result v107|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 318]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: i32
=== Inputs ===
x: i115 
y: i167 
=== Succesors ===
=== Usages ===
v492 v1655 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i115 y: i167  <|@  <|@
f <@~|@floating>@ <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 352]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i168 
y: i399 
=== Succesors ===
=== Usages ===
v644 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i168 y: i399  <|@  <|@
f <@*|@fixed>@ <|@
tid v644 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 352]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v492 
=== Succesors ===
trueSuccessor: v640 
falseSuccessor: v643 
=== Usages ===
=== Predecessor ===
v635 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v492 #trueSuccessor: v640 #falseSuccessor: v643  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = LEA [v103|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v13|DWORD, y: v107|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B108 -> B109 falseDestination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B99" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4577301169636469431
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 352]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
next: v482 
=== Usages ===
v500 
=== Predecessor ===
v644 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v482  <|@  <|@
f <@~|@floating>@ <|@
tid i143 <|@
result int[12|0xc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 308]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
rawvalue: 12
stableDimension: 0
stamp: i32 [12] ⇊000000000000000c ⇈000000000000000c
stampKind: i32
value: int[12|0xc]
=== Inputs ===
=== Succesors ===
=== Usages ===
i144 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i144 <|@
result v108|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 310]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: i32 [0 - 15] ⇈000000000000000f
=== Inputs ===
x: i463 
y: i143 
=== Succesors ===
=== Usages ===
i145 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i463 y: i143  <|@  <|@
f <@~|@floating>@ <|@
tid i142 <|@
result int[224|0xe0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 303]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
rawvalue: 224
stableDimension: 0
stamp: i32 [224] ⇊00000000000000e0 ⇈00000000000000e0
stampKind: i32
value: int[224|0xe0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i145 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i145 <|@
result v109|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 311]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: i32 [224 - 239] ⇊00000000000000e0 ⇈00000000000000ef
=== Inputs ===
x: i144 
y: i142 
=== Succesors ===
=== Usages ===
i146 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i144 y: i142  <|@  <|@
f <@~|@floating>@ <|@
tid i146 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 312]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
resultBits: 8
stamp: i8 [-32 - -17] ⇊00000000000000e0 ⇈00000000000000ef
=== Inputs ===
value: i145 
=== Succesors ===
=== Usages ===
v482 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i145  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v482 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 313]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v620 
address: v1653 
value: i146 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v491 
=== Usages ===
=== Predecessor ===
v640 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v620 address: v1653 value: i146 stateAfter: - lastLocationAccess: - #next: v491  <|@  <|@
f <@~|@floating>@ <|@
tid v1654 <|@
result [v84|QWORD[.] + v106|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a348 
index: i129 
=== Succesors ===
=== Usages ===
v491 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a348 index: i129  <|@  <|@
f <@~|@floating>@ <|@
tid i150 <|@
result int[6|0x6] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 326]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
rawvalue: 6
stableDimension: 0
stamp: i32 [6] ⇊0000000000000006 ⇈0000000000000006
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
i151 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i151 <|@
result v110|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 328]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: i32 [0 - 1023] ⇈00000000000003ff
=== Inputs ===
x: i463 
y: i150 
=== Succesors ===
=== Usages ===
i153 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i463 y: i150  <|@  <|@
f <@~|@floating>@ <|@
tid i153 <|@
result v111|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 331]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: i32 [0 - 63] ⇈000000000000003f
=== Inputs ===
x: i151 
y: i152 
=== Succesors ===
=== Usages ===
i154 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i151 y: i152  <|@  <|@
f <@~|@floating>@ <|@
tid i154 <|@
result v112|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 332]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: i32 [128 - 191] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
x: i153 
y: i89 
=== Succesors ===
=== Usages ===
i155 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i153 y: i89  <|@  <|@
f <@~|@floating>@ <|@
tid i155 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 333]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
resultBits: 8
stamp: i8 [-128 - -65] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
value: i154 
=== Succesors ===
=== Usages ===
v491 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i154  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v491 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 334]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v635 
address: v1654 
value: i155 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v500 
=== Usages ===
=== Predecessor ===
v482 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v635 address: v1654 value: i155 stateAfter: - lastLocationAccess: - #next: v500  <|@  <|@
f <@~|@floating>@ <|@
tid v1655 <|@
result [v84|QWORD[.] + v107|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a348 
index: i168 
=== Succesors ===
=== Usages ===
v500 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a348 index: i168  <|@  <|@
f <@~|@floating>@ <|@
tid i159 <|@
result v113|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 349]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: i32 [0 - 63] ⇈000000000000003f
=== Inputs ===
x: i463 
y: i152 
=== Succesors ===
=== Usages ===
i160 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i463 y: i152  <|@  <|@
f <@~|@floating>@ <|@
tid i160 <|@
result v114|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 350]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: i32 [128 - 191] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
x: i159 
y: i89 
=== Succesors ===
=== Usages ===
i161 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i159 y: i89  <|@  <|@
f <@~|@floating>@ <|@
tid i161 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 351]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
resultBits: 8
stamp: i8 [-128 - -65] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
value: i160 
=== Succesors ===
=== Usages ===
v500 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i160  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v500 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 352]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v640 
address: v1655 
value: i161 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v171 
=== Usages ===
=== Predecessor ===
v491 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v640 address: v1655 value: i161 stateAfter: - lastLocationAccess: - #next: v171  <|@  <|@
f <@~|@floating>@ <|@
tid i170 <|@
result v115|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 339]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: i32
=== Inputs ===
x: i115 
y: i169 
=== Succesors ===
=== Usages ===
i115 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i115 y: i169  <|@  <|@
f <@*|@fixed>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 1
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:742) [bci: 353]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
loopBegin: v113 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v500 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v113  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = SHR v104|DWORD y: 12 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = OR v108|DWORD y: 224 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v84|QWORD[.] + v103|DWORD * 1 + 16], y: v109|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = SHR v104|DWORD y: 6 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = AND v110|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = OR v111|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v84|QWORD[.] + v106|DWORD * 1 + 16], y: v112|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v113|DWORD = AND v104|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v114|DWORD = OR v113|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v84|QWORD[.] + v107|DWORD * 1 + 16], y: v114|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = LEA [v103|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v105|DWORD, v115|DWORD] destination: B109 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B121" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v643 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 352]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v113 
=== Succesors ===
next: v781 
=== Usages ===
=== Predecessor ===
v644 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v113 #next: v781  <|@  <|@
f <@~|@floating>@ <|@
tid i782 <|@
result int[-126235|0xfffffffffffe12e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -126235
stableDimension: 0
stamp: i32 [-126235] ⇊00000000fffe12e5 ⇈00000000fffe12e5
stampKind: i32
value: int[-126235|0xfffffffffffe12e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i766 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v781 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v763 
=== Predecessor ===
v643 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-126235|0xfffffffffffe12e5]] destination: B110 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B121" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 334]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v113 
=== Succesors ===
next: v779 
=== Usages ===
=== Predecessor ===
v639 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v113 #next: v779  <|@  <|@
f <@~|@floating>@ <|@
tid i780 <|@
result int[-123931|0xfffffffffffe1be5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -123931
stableDimension: 0
stamp: i32 [-123931] ⇊00000000fffe1be5 ⇈00000000fffe1be5
stampKind: i32
value: int[-123931|0xfffffffffffe1be5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i766 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v763 
=== Predecessor ===
v638 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-123931|0xfffffffffffe1be5]] destination: B111 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B121" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v633 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:721) [bci: 139]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v113 
=== Succesors ===
next: v777 
=== Usages ===
=== Predecessor ===
v634 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v113 #next: v777  <|@  <|@
f <@~|@floating>@ <|@
tid i778 <|@
result int[-121363|0xfffffffffffe25ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -121363
stableDimension: 0
stamp: i32 [-121363] ⇊00000000fffe25ed ⇈00000000fffe25ed
stampKind: i32
value: int[-121363|0xfffffffffffe25ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i766 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v777 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v763 
=== Predecessor ===
v633 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-121363|0xfffffffffffe25ed]] destination: B112 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B121" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v623 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 313]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v113 
=== Succesors ===
next: v773 
=== Usages ===
=== Predecessor ===
v624 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v113 #next: v773  <|@  <|@
f <@~|@floating>@ <|@
tid i774 <|@
result int[-135195|0xfffffffffffdefe5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -135195
stableDimension: 0
stamp: i32 [-135195] ⇊00000000fffdefe5 ⇈00000000fffdefe5
stampKind: i32
value: int[-135195|0xfffffffffffdefe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i766 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v773 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v763 
=== Predecessor ===
v623 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-135195|0xfffffffffffdefe5]] destination: B113 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B121" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v113 
=== Succesors ===
next: v771 
=== Usages ===
=== Predecessor ===
v619 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v113 #next: v771  <|@  <|@
f <@~|@floating>@ <|@
tid i772 <|@
result int[-116763|0xfffffffffffe37e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -116763
stableDimension: 0
stamp: i32 [-116763] ⇊00000000fffe37e5 ⇈00000000fffe37e5
stampKind: i32
value: int[-116763|0xfffffffffffe37e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i766 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v771 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v763 
=== Predecessor ===
v618 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-116763|0xfffffffffffe37e5]] destination: B114 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B116" "B117" 
    xhandlers
    flags 
    probability 4606819384206781406
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:743) [bci: 356]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v113 
=== Succesors ===
next: v648 
=== Usages ===
=== Predecessor ===
v122 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v113 #next: v648  <|@  <|@
f <@~|@floating>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.StringCoding.safeTrim(StringCoding.java:76) [bci: 3]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i115 
y: i399 
=== Succesors ===
=== Usages ===
v648 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i115 y: i399  <|@  <|@
f <@*|@fixed>@ <|@
tid v648 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.safeTrim(StringCoding.java:76) [bci: 3]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v64 
=== Succesors ===
trueSuccessor: v647 
falseSuccessor: v645 
=== Usages ===
=== Predecessor ===
v119 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v64 #trueSuccessor: v647 #falseSuccessor: v645  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v13|DWORD, y: v103|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B121" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v647 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.safeTrim(StringCoding.java:76) [bci: 3]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
next: v764 
=== Usages ===
=== Predecessor ===
v648 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v764  <|@  <|@
f <@~|@floating>@ <|@
tid i765 <|@
result int[-128275|0xfffffffffffe0aed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -128275
stableDimension: 0
stamp: i32 [-128275] ⇊00000000fffe0aed ⇈00000000fffe0aed
stampKind: i32
value: int[-128275|0xfffffffffffe0aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i766 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v764 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v763 
=== Predecessor ===
v647 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-128275|0xfffffffffffe0aed]] destination: B116 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" "B119" 
    xhandlers
    flags 
    probability 4606819384206781406
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v645 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.safeTrim(StringCoding.java:76) [bci: 3]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
next: v684 
=== Usages ===
=== Predecessor ===
v648 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v684  <|@  <|@
f <@~|@floating>@ <|@
tid v678 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 22]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:72) [bci: 3]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i115 
y: i18 
=== Succesors ===
=== Usages ===
v684 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i115 y: i18  <|@  <|@
f <@~|@floating>@ <|@
tid i784 <|@
result int[-176737|0xfffffffffffd4d9f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -176737
stableDimension: 0
stamp: i32 [-176737] ⇊00000000fffd4d9f ⇈00000000fffd4d9f
stampKind: i32
value: int[-176737|0xfffffffffffd4d9f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i766 i766 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v684 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 33]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:72) [bci: 3]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
stamp: void
trueSuccessorProbability: 9.999999999998899E-5
=== Inputs ===
condition: v678 
=== Succesors ===
trueSuccessor: v683 
falseSuccessor: v679 
=== Usages ===
=== Predecessor ===
v645 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v678 #trueSuccessor: v683 #falseSuccessor: v679  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v103|DWORD, y: v103|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 9.999999999998899E-5 condition: < trueDestination: B117 -> B118 falseDestination: B117 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B121" 
    xhandlers
    flags 
    probability 4546709724080164076
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v683 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:72) [bci: 3]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
next: v783 
=== Usages ===
=== Predecessor ===
v684 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v783  <|@  <|@
f <@*|@fixed>@ <|@
tid v783 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v763 
=== Predecessor ===
v683 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-176737|0xfffffffffffd4d9f]] destination: B118 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B120" "B122" 
    xhandlers
    flags 
    probability 4606818519790315256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v679 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 36]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:72) [bci: 3]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
next: v689 
=== Usages ===
=== Predecessor ===
v684 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v689  <|@  <|@
f <@~|@floating>@ <|@
tid v685 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 41]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:72) [bci: 3]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i399 
y: i18 
=== Succesors ===
=== Usages ===
v689 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i399 y: i18  <|@  <|@
f <@*|@fixed>@ <|@
tid v689 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:186) [bci: 52]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:72) [bci: 3]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
stamp: void
trueSuccessorProbability: 9.999999999998899E-5
=== Inputs ===
condition: v685 
=== Succesors ===
trueSuccessor: v688 
falseSuccessor: v686 
=== Usages ===
=== Predecessor ===
v679 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v685 #trueSuccessor: v688 #falseSuccessor: v686  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v13|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 9.999999999998899E-5 condition: < trueDestination: B119 -> B120 falseDestination: B119 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B121" 
    xhandlers
    flags 
    probability 4546709015950195006
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v688 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:72) [bci: 3]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
next: v799 
=== Usages ===
=== Predecessor ===
v689 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v799  <|@  <|@
f <@*|@fixed>@ <|@
tid v799 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:72) [bci: 3]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v763 
=== Predecessor ===
v688 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-176737|0xfffffffffffd4d9f]] destination: B120 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B116" "B114" "B113" "B105" "B112" "B111" "B110" "B118" "B120" 
    successors 
    xhandlers
    flags 
    probability 4551212969642550037
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i766 <|@
result v116|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-176737 - -116763] ⇊00000000fffc0085
valueDescription: i32
=== Inputs ===
merge: v763 
values: i765 i772 i774 i776 i778 i780 i782 i784 i784 
=== Succesors ===
=== Usages ===
v768 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v763 values: i765 i772 i774 i776 i778 i780 i782 i784 i784  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v764 v771 v773 v775 v777 v779 v781 v783 v799 
=== Succesors ===
next: v768 
=== Usages ===
i766 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v764 v771 v773 v775 v777 v779 v781 v783 v799 #next: v768  <|@  <|@
f <@*|@fixed>@ <|@
tid v768 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?116 
actionAndReason: i766 
speculation: a749 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v763 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?116 actionAndReason: i766 speculation: a749  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v116|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v116|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
locals: vobject:UTF_8$Encoder:0{averageBytesPerChar=float[1.1|0x3f8ccccd],maxBytesPerChar=float[3.0|0x40400000],state=int[0|0x0],charset=v0|QWORD[.],replacement=vobject:byte[]:1{0=int[63|0x3f]},malformedInputAction=Object[CodingErrorAction@561514572],unmappableCharacterAction=Object[CodingErrorAction@561514572],cachedDecoder=Object[null],repl=int[63|0x3f],sgp=Object[null]} v1|QWORD[.] v102|DWORD - v84|QWORD[.] v101|DWORD v103|DWORD - - - 
java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
locals: v0|QWORD[.] - - - - - v84|QWORD[.] int[0|0x0] - - - 
vobject:UTF_8$Encoder:0{averageBytesPerChar=float[1.1|0x3f8ccccd],maxBytesPerChar=float[3.0|0x40400000],state=int[0|0x0],charset=v0|QWORD[.],replacement=vobject:byte[]:1{0=int[63|0x3f]},malformedInputAction=Object[CodingErrorAction@561514572],unmappableCharacterAction=Object[CodingErrorAction@561514572],cachedDecoder=Object[null],repl=int[63|0x3f],sgp=Object[null]} Lsun/nio/cs/UTF_8$Encoder; float[1.1|0x3f8ccccd] float[3.0|0x40400000] int[0|0x0] v0|QWORD[.] vobject:byte[]:1{0=int[63|0x3f]} Object[CodingErrorAction@561514572] Object[CodingErrorAction@561514572] Object[null] int[63|0x3f] Object[null] 
vobject:byte[]:1{0=int[63|0x3f]} [B int[63|0x3f] 
>@ <|@ instruction DEOPT info [bci:54, 107] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B123" "B126" 
    xhandlers
    flags 
    probability 4606817655460290752
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v686 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:189) [bci: 64]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:72) [bci: 3]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
next: j920 
=== Usages ===
=== Predecessor ===
v689 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j920  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j920 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j956 
=== Usages ===
v1679 v1680 
=== Predecessor ===
v686 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j956  <|@  <|@
f <@~|@floating>@ <|@
tid v1679 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j920 
index: - 
=== Succesors ===
=== Usages ===
j956 v958 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j920 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j956 <|@
result v117|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1679 
=== Succesors ===
next: j957 
=== Usages ===
j924 v1681 v1682 a939 v1687 v1683 v1684 v1685 v1686 
=== Predecessor ===
j920 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1679 #next: j957  <|@  <|@
f <@~|@floating>@ <|@
tid v1680 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j920 
index: - 
=== Succesors ===
=== Usages ===
j957 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j920 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j957 <|@
result v118|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1680 
=== Succesors ===
next: v928 
=== Usages ===
v929 
=== Predecessor ===
j956 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1680 #next: v928  <|@  <|@
f <@~|@floating>@ <|@
tid v925 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i115 
y: i813 
=== Succesors ===
=== Usages ===
v928 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i115 y: i813  <|@  <|@
f <@*|@fixed>@ <|@
tid v928 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v925 
=== Succesors ===
trueSuccessor: v927 
falseSuccessor: v926 
=== Usages ===
=== Predecessor ===
j957 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v925 #trueSuccessor: v927 #falseSuccessor: v926  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v117|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v118|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v103|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B122 -> B123 falseDestination: B122 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B124" "B125" 
    xhandlers
    flags 
    probability 4605953411868789319
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v927 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
next: v935 
=== Usages ===
=== Predecessor ===
v928 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v935  <|@  <|@
f <@~|@floating>@ <|@
tid i947 <|@
result v119|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
stamp: i32
=== Inputs ===
x: i115 
y: i836 
=== Succesors ===
=== Usages ===
i919 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i115 y: i836  <|@  <|@
f <@~|@floating>@ <|@
tid i919 <|@
result v120|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i947 
y: i806 
=== Succesors ===
=== Usages ===
j923 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i947 y: i806  <|@  <|@
f <@~|@floating>@ <|@
tid j923 <|@
result v121|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i919 
=== Succesors ===
=== Usages ===
j924 v1683 v1684 v1685 v1686 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i919  <|@  <|@
f <@~|@floating>@ <|@
tid j924 <|@
result v122|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
stamp: i64
=== Inputs ===
x: j923 
y: j956 
=== Succesors ===
=== Usages ===
v929 v958 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j923 y: j956  <|@  <|@
f <@~|@floating>@ <|@
tid v929 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j957 
y: j924 
=== Succesors ===
=== Usages ===
v935 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j957 y: j924  <|@  <|@
f <@*|@fixed>@ <|@
tid v935 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v929 
=== Succesors ===
trueSuccessor: v934 
falseSuccessor: v933 
=== Usages ===
=== Predecessor ===
v927 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v929 #trueSuccessor: v934 #falseSuccessor: v933  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v119|DWORD = LEA [v103|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = AND v119|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v121|QWORD = MOVSXD v120|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v122|QWORD = ADD (x: v121|QWORD, y: v117|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v122|QWORD, y: v118|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B123 -> B124 falseDestination: B123 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B127" 
    xhandlers
    flags 
    probability 4576131664868101702
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v934 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
next: v932 
=== Usages ===
=== Predecessor ===
v935 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v932  <|@  <|@
f <@*|@fixed>@ <|@
tid v932 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v931 
=== Predecessor ===
v934 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B124 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B128" 
    xhandlers
    flags 
    probability 4605875629945554190
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v933 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
next: v958 
=== Usages ===
=== Predecessor ===
v935 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v958  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v958 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1679 
value: j924 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v949 
=== Usages ===
=== Predecessor ===
v933 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1679 value: j924 stateAfter: - lastLocationAccess: - #next: v949  <|@  <|@
f <@~|@floating>@ <|@
tid v1683 <|@
result [v121|QWORD + v117|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j923 
index: j956 
=== Succesors ===
=== Usages ===
v949 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j923 index: j956  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v949 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
stamp: void
=== Inputs ===
address: v1683 
=== Succesors ===
next: v951 
=== Usages ===
=== Predecessor ===
v958 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1683 #next: v951  <|@  <|@
f <@~|@floating>@ <|@
tid v1684 <|@
result [v121|QWORD + v117|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j923 
index: j956 
=== Succesors ===
=== Usages ===
v951 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j923 index: j956  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v951 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
stamp: void
=== Inputs ===
address: v1684 
=== Succesors ===
next: v953 
=== Usages ===
=== Predecessor ===
v949 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1684 #next: v953  <|@  <|@
f <@~|@floating>@ <|@
tid v1685 <|@
result [v121|QWORD + v117|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j923 
index: j956 
=== Succesors ===
=== Usages ===
v953 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j923 index: j956  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v953 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
stamp: void
=== Inputs ===
address: v1685 
=== Succesors ===
next: v955 
=== Usages ===
=== Predecessor ===
v951 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1685 #next: v955  <|@  <|@
f <@~|@floating>@ <|@
tid v1686 <|@
result [v121|QWORD + v117|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j923 
index: j956 
=== Succesors ===
=== Usages ===
v955 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j923 index: j956  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v955 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
stamp: void
=== Inputs ===
address: v1686 
=== Succesors ===
next: v959 
=== Usages ===
=== Predecessor ===
v953 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1686 #next: v959  <|@  <|@
f <@~|@floating>@ <|@
tid v1681 <|@
result [v117|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j956 
index: - 
=== Succesors ===
=== Usages ===
v959 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j956 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v959 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1681 
value: i115 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v960 
=== Usages ===
=== Predecessor ===
v955 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1681 value: i115 stateAfter: - lastLocationAccess: - #next: v960  <|@  <|@
f <@~|@floating>@ <|@
tid v1682 <|@
result [v117|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j956 
index: - 
=== Succesors ===
=== Usages ===
v960 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j956 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v960 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1682 
value: j805 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v963 
=== Usages ===
=== Predecessor ===
v959 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1682 value: j805 stateAfter: - lastLocationAccess: - #next: v963  <|@  <|@
f <@~|@floating>@ <|@
tid v1687 <|@
result [v117|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j956 
index: - 
=== Succesors ===
=== Usages ===
v963 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j956 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v963 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1687 
value: v973 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v938 
=== Usages ===
=== Predecessor ===
v960 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1687 value: v973 stateAfter: - lastLocationAccess: - #next: v938  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v938 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
next: a939 
=== Usages ===
=== Predecessor ===
v963 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a939  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a939 <|@
result v123|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j956 
=== Succesors ===
next: v941 
=== Usages ===
a944 
=== Predecessor ===
v938 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j956 #next: v941  <|@  <|@
f <@*|@fixed>@ <|@
tid v941 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v942 
=== Predecessor ===
a939 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v122|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v121|QWORD + v117|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v121|QWORD + v117|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v121|QWORD + v117|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v121|QWORD + v117|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v117|QWORD + 12], y: v103|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v117|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v117|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v123|QWORD[.] = MOVE v117|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v123|QWORD[.]] destination: B125 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B127" 
    xhandlers
    flags 
    probability 4591578369395176395
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v926 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
next: v930 
=== Usages ===
=== Predecessor ===
v928 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v930  <|@  <|@
f <@*|@fixed>@ <|@
tid v930 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v931 
=== Predecessor ===
v926 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B126 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B126" "B124" 
    successors "B128" 
    xhandlers
    flags 
    probability 4592200624781057428
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v931 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v930 v932 
=== Succesors ===
next: a940 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v930 v932 #next: a940  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a940 <|@
result v124|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?116 
arguments: v804 i115 i18 
=== Succesors ===
next: v943 
=== Usages ===
a944 
=== Predecessor ===
v931 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?116 arguments: v804 i115 i18 #next: v943  <|@  <|@
f <@*|@fixed>@ <|@
tid v943 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v942 
=== Predecessor ===
a940 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v19|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v103|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
locals: vobject:UTF_8$Encoder:0{averageBytesPerChar=float[1.1|0x3f8ccccd],maxBytesPerChar=float[3.0|0x40400000],state=int[0|0x0],charset=v0|QWORD[.],replacement=vobject:byte[]:1{0=int[63|0x3f]},malformedInputAction=Object[CodingErrorAction@561514572],unmappableCharacterAction=Object[CodingErrorAction@561514572],cachedDecoder=Object[null],repl=int[63|0x3f],sgp=Object[null]} v1|QWORD[.] v102|DWORD - v84|QWORD[.] v101|DWORD v103|DWORD - - - 
java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
locals: v0|QWORD[.] - - - - - v84|QWORD[.] int[0|0x0] - - - 
vobject:UTF_8$Encoder:0{averageBytesPerChar=float[1.1|0x3f8ccccd],maxBytesPerChar=float[3.0|0x40400000],state=int[0|0x0],charset=v0|QWORD[.],replacement=vobject:byte[]:1{0=int[63|0x3f]},malformedInputAction=Object[CodingErrorAction@561514572],unmappableCharacterAction=Object[CodingErrorAction@561514572],cachedDecoder=Object[null],repl=int[63|0x3f],sgp=Object[null]} Lsun/nio/cs/UTF_8$Encoder; float[1.1|0x3f8ccccd] float[3.0|0x40400000] int[0|0x0] v0|QWORD[.] vobject:byte[]:1{0=int[63|0x3f]} Object[CodingErrorAction@561514572] Object[CodingErrorAction@561514572] Object[null] int[63|0x3f] Object[null] 
vobject:byte[]:1{0=int[63|0x3f]} [B int[63|0x3f] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:54, 107] <|@ <|@
      nr   -1  <|@ instruction v124|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v124|QWORD[.]] destination: B127 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B125" "B127" 
    successors "B129" "B130" 
    xhandlers
    flags 
    probability 4606817655460290752
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a944 <|@
result v125|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v942 
values: a939 a940 
=== Succesors ===
=== Usages ===
v1688 a724 v1657 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v942 values: a939 a940  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v942 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v941 v943 
=== Succesors ===
next: v1403 
=== Usages ===
a944 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v941 v943 #next: v1403  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1403 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v1142 
=== Usages ===
j1404 j1406 
=== Predecessor ===
v942 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v1142  <|@  <|@
f <@~|@floating>@ <|@
tid v692 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:74) [bci: 9]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i399 
y: i115 
=== Succesors ===
=== Usages ===
i717 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i399 y: i115  <|@  <|@
f <@~|@floating>@ <|@
tid i717 <|@
result v126|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v692 
trueValue: i399 
falseValue: i115 
=== Succesors ===
=== Usages ===
j975 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v692 trueValue: i399 falseValue: i115  <|@  <|@
f <@~|@floating>@ <|@
tid j975 <|@
result v127|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i717 
=== Succesors ===
=== Usages ===
j1466 v1688 j979 v1139 v1289 j1452 j1457 j1460 j1463 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i717  <|@  <|@
f <@~|@floating>@ <|@
tid v1139 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j975 
y: j805 
=== Succesors ===
=== Usages ===
v1142 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j975 y: j805  <|@  <|@
f <@*|@fixed>@ <|@
tid v1142 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1139 
=== Succesors ===
trueSuccessor: v1140 
falseSuccessor: v1141 
=== Usages ===
=== Predecessor ===
v1403 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1139 #trueSuccessor: v1140 #falseSuccessor: v1141  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v125|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v103|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = CMOVE (falseValue: v103|DWORD, ~trueValue: v13|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v127|QWORD = MOVSXD v126|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v127|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B128 -> B129 falseDestination: B128 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B128" 
    successors "B151" 
    xhandlers
    flags 
    probability 4602314055832920256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1140 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1158 
=== Usages ===
=== Predecessor ===
v1142 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1158  <|@  <|@
f <@*|@fixed>@ <|@
tid v1158 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1159 
=== Predecessor ===
v1140 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B129 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B128" 
    successors "B131" "B132" 
    xhandlers
    flags 
    probability 4602314055832920256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1141 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1145 
=== Usages ===
=== Predecessor ===
v1142 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1145  <|@  <|@
f <@~|@floating>@ <|@
tid v1657 <|@
result [v125|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a944 
index: - 
=== Succesors ===
=== Usages ===
j1406 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a944 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1406 <|@
result v128|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1403 
address: v1657 
=== Succesors ===
=== Usages ===
v1703 v1705 v1707 v1709 v1711 v1713 v1715 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1403 address: v1657  <|@  <|@
f <@~|@floating>@ <|@
tid v1656 <|@
result [v84|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a348 
index: - 
=== Succesors ===
=== Usages ===
j1404 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a348 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1404 <|@
result v129|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1403 
address: v1656 
=== Succesors ===
=== Usages ===
v1704 v1706 v1708 v1710 v1712 v1714 v1716 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1403 address: v1656  <|@  <|@
f <@~|@floating>@ <|@
tid j1452 <|@
result v130|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483680 - 2147483615]
=== Inputs ===
x: j975 
y: j1328 
=== Succesors ===
=== Usages ===
v1453 v1455 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j975 y: j1328  <|@  <|@
f <@~|@floating>@ <|@
tid v1453 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1452 
y: j670 
=== Succesors ===
=== Usages ===
v1145 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1452 y: j670  <|@  <|@
f <@*|@fixed>@ <|@
tid v1145 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1453 
=== Succesors ===
trueSuccessor: v1143 
falseSuccessor: v1144 
=== Usages ===
=== Predecessor ===
v1141 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1453 #trueSuccessor: v1143 #falseSuccessor: v1144  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = LEA [v125|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = LEA [v84|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v130|QWORD = LEA [v127|QWORD - 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v130|QWORD, y: v130|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B130 -> B131 falseDestination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B135" 
    xhandlers
    flags 
    probability 4600153446854166672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1143 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1154 
=== Usages ===
=== Predecessor ===
v1145 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1154  <|@  <|@
f <@*|@fixed>@ <|@
tid v1154 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1155 
=== Predecessor ===
v1143 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B131 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B133" 
    xhandlers
    flags 
    probability 4593306856578179264
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1144 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1146 
=== Usages ===
=== Predecessor ===
v1145 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1146  <|@  <|@
f <@*|@fixed>@ <|@
tid v1146 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1147 
=== Predecessor ===
v1144 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B132 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" "B176" 
    successors "B134" "B176" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4602314055832920256
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1445 <|@
result v131|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1147 
values: j670 j1451 
=== Succesors ===
=== Usages ===
v1715 v1716 j1451 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1147 values: j670 j1451  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1147 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1146 
=== Succesors ===
next: v1638 
=== Usages ===
v1638 v1150 v1151 j1445 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1146 #next: v1638  <|@  <|@
f <@~|@floating>@ <|@
tid v1716 <|@
result [v129|QWORD[.] + v131|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1404 
index: j1445 
=== Succesors ===
=== Usages ===
v1638 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1404 index: j1445  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1638 <|@
result v132|V256_BYTE <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: byte
nullCheck: false
stamp: <i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8>
=== Inputs ===
stateBefore: - 
guard: v1147 
address: v1716 
=== Succesors ===
next: v1574 
=== Usages ===
v1574 
=== Predecessor ===
v1147 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1147 address: v1716 #next: v1574  <|@  <|@
f <@~|@floating>@ <|@
tid v1715 <|@
result [v128|QWORD[.] + v131|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1406 
index: j1445 
=== Succesors ===
=== Usages ===
v1574 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1406 index: j1445  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1574 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1715 
value: v1638 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1153 
=== Usages ===
=== Predecessor ===
v1638 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1715 value: v1638 stateAfter: - lastLocationAccess: - #next: v1153  <|@  <|@
f <@~|@floating>@ <|@
tid j1451 <|@
result v133|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1445 
y: j1326 
=== Succesors ===
=== Usages ===
j1438 j1445 v1455 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1445 y: j1326  <|@  <|@
f <@~|@floating>@ <|@
tid v1455 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1452 
y: j1451 
=== Succesors ===
=== Usages ===
v1153 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1452 y: j1451  <|@  <|@
f <@*|@fixed>@ <|@
tid v1153 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1455 
=== Succesors ===
trueSuccessor: v1150 
falseSuccessor: v1152 
=== Usages ===
=== Predecessor ===
v1574 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1455 #trueSuccessor: v1150 #falseSuccessor: v1152  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v131|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v132|V256_BYTE = H [v129|QWORD[.] + v131|QWORD * 1] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v128|QWORD[.] + v131|QWORD * 1], input: v132|V256_BYTE) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v133|QWORD = LEA [v131|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v133|QWORD, y: v130|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B133 -> B134 falseDestination: B133 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B133" 
    successors "B135" 
    xhandlers
    flags 
    probability 4593306856578179264
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1150 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1147 
=== Succesors ===
next: v1156 
=== Usages ===
=== Predecessor ===
v1153 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1147 #next: v1156  <|@  <|@
f <@*|@fixed>@ <|@
tid v1156 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1155 
=== Predecessor ===
v1150 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v133|QWORD] destination: B134 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B131" "B134" 
    successors "B136" "B137" 
    xhandlers
    flags 
    probability 4602314055832920256
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1438 <|@
result v134|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1155 
values: j670 j1451 
=== Succesors ===
=== Usages ===
v1713 v1714 j1444 j1431 v1458 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1155 values: j670 j1451  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1155 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1154 v1156 
=== Succesors ===
next: v1177 
=== Usages ===
j1438 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1154 v1156 #next: v1177  <|@  <|@
f <@~|@floating>@ <|@
tid j1457 <|@
result v135|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j975 
y: j1334 
=== Succesors ===
=== Usages ===
v1458 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j975 y: j1334  <|@  <|@
f <@~|@floating>@ <|@
tid v1458 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1457 
y: j1438 
=== Succesors ===
=== Usages ===
v1177 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1457 y: j1438  <|@  <|@
f <@*|@fixed>@ <|@
tid v1177 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1458 
=== Succesors ===
trueSuccessor: v1176 
falseSuccessor: v1175 
=== Usages ===
=== Predecessor ===
v1155 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1458 #trueSuccessor: v1176 #falseSuccessor: v1175  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v134|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v135|QWORD = LEA [v127|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v134|QWORD, y: v135|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B135 -> B136 falseDestination: B135 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B138" 
    xhandlers
    flags 
    probability 4593306856578179264
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1176 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1180 
=== Usages ===
=== Predecessor ===
v1177 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1180  <|@  <|@
f <@*|@fixed>@ <|@
tid v1180 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1166 
=== Predecessor ===
v1176 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v134|QWORD] destination: B136 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B138" 
    xhandlers
    flags 
    probability 4600153446854166672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1175 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1639 
=== Usages ===
v1639 
=== Predecessor ===
v1177 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1639  <|@  <|@
f <@~|@floating>@ <|@
tid v1714 <|@
result [v129|QWORD[.] + v134|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1404 
index: j1438 
=== Succesors ===
=== Usages ===
v1639 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1404 index: j1438  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1639 <|@
result v136|V128_BYTE <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: byte
nullCheck: false
stamp: <i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8>
=== Inputs ===
stateBefore: - 
guard: v1175 
address: v1714 
=== Succesors ===
next: v1572 
=== Usages ===
v1572 
=== Predecessor ===
v1175 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1175 address: v1714 #next: v1572  <|@  <|@
f <@~|@floating>@ <|@
tid v1713 <|@
result [v128|QWORD[.] + v134|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1406 
index: j1438 
=== Succesors ===
=== Usages ===
v1572 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1406 index: j1438  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1572 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1713 
value: v1639 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1165 
=== Usages ===
=== Predecessor ===
v1639 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1713 value: v1639 stateAfter: - lastLocationAccess: - #next: v1165  <|@  <|@
f <@~|@floating>@ <|@
tid j1444 <|@
result v137|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1438 
y: j427 
=== Succesors ===
=== Usages ===
j1431 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1438 y: j427  <|@  <|@
f <@*|@fixed>@ <|@
tid v1165 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1166 
=== Predecessor ===
v1572 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v136|V128_BYTE = H [v129|QWORD[.] + v134|QWORD * 1] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v128|QWORD[.] + v134|QWORD * 1], input: v136|V128_BYTE) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v137|QWORD = LEA [v134|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v137|QWORD] destination: B137 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B137" "B136" 
    successors "B139" "B140" 
    xhandlers
    flags 
    probability 4602314055832920256
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1431 <|@
result v138|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1166 
values: j1444 j1438 
=== Succesors ===
=== Usages ===
v1711 v1712 j1437 j1424 v1461 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1166 values: j1444 j1438  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1166 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1165 v1180 
=== Succesors ===
next: v1183 
=== Usages ===
j1431 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1165 v1180 #next: v1183  <|@  <|@
f <@~|@floating>@ <|@
tid j1460 <|@
result v139|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j975 
y: j1338 
=== Succesors ===
=== Usages ===
v1461 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j975 y: j1338  <|@  <|@
f <@~|@floating>@ <|@
tid v1461 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1460 
y: j1431 
=== Succesors ===
=== Usages ===
v1183 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1460 y: j1431  <|@  <|@
f <@*|@fixed>@ <|@
tid v1183 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1461 
=== Succesors ===
trueSuccessor: v1182 
falseSuccessor: v1181 
=== Usages ===
=== Predecessor ===
v1166 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1461 #trueSuccessor: v1182 #falseSuccessor: v1181  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v138|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v139|QWORD = LEA [v127|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v138|QWORD, y: v139|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B138 -> B139 falseDestination: B138 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B141" 
    xhandlers
    flags 
    probability 4593306856578179264
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1182 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1186 
=== Usages ===
=== Predecessor ===
v1183 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1186  <|@  <|@
f <@*|@fixed>@ <|@
tid v1186 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1169 
=== Predecessor ===
v1182 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v138|QWORD] destination: B139 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B141" 
    xhandlers
    flags 
    probability 4600153446854166672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1181 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1640 
=== Usages ===
v1640 
=== Predecessor ===
v1183 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1640  <|@  <|@
f <@~|@floating>@ <|@
tid v1712 <|@
result [v129|QWORD[.] + v138|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1404 
index: j1431 
=== Succesors ===
=== Usages ===
v1640 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1404 index: j1431  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1640 <|@
result v140|V64_BYTE <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: byte
nullCheck: false
stamp: <i8,i8,i8,i8,i8,i8,i8,i8>
=== Inputs ===
stateBefore: - 
guard: v1181 
address: v1712 
=== Succesors ===
next: v1570 
=== Usages ===
v1570 
=== Predecessor ===
v1181 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1181 address: v1712 #next: v1570  <|@  <|@
f <@~|@floating>@ <|@
tid v1711 <|@
result [v128|QWORD[.] + v138|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1406 
index: j1431 
=== Succesors ===
=== Usages ===
v1570 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1406 index: j1431  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1570 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1711 
value: v1640 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1168 
=== Usages ===
=== Predecessor ===
v1640 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1711 value: v1640 stateAfter: - lastLocationAccess: - #next: v1168  <|@  <|@
f <@~|@floating>@ <|@
tid j1437 <|@
result v141|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1431 
y: j800 
=== Succesors ===
=== Usages ===
j1424 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1431 y: j800  <|@  <|@
f <@*|@fixed>@ <|@
tid v1168 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1169 
=== Predecessor ===
v1570 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v140|V64_BYTE = H [v129|QWORD[.] + v138|QWORD * 1] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v128|QWORD[.] + v138|QWORD * 1], input: v140|V64_BYTE) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v141|QWORD = LEA [v138|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v141|QWORD] destination: B140 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" "B139" 
    successors "B142" "B143" 
    xhandlers
    flags 
    probability 4602314055832920256
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1424 <|@
result v142|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1169 
values: j1437 j1431 
=== Succesors ===
=== Usages ===
v1709 v1710 j1430 j1407 v1464 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1169 values: j1437 j1431  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1169 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1168 v1186 
=== Succesors ===
next: v1189 
=== Usages ===
j1424 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1168 v1186 #next: v1189  <|@  <|@
f <@~|@floating>@ <|@
tid j1463 <|@
result v143|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j975 
y: j1342 
=== Succesors ===
=== Usages ===
v1464 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j975 y: j1342  <|@  <|@
f <@~|@floating>@ <|@
tid v1464 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1463 
y: j1424 
=== Succesors ===
=== Usages ===
v1189 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1463 y: j1424  <|@  <|@
f <@*|@fixed>@ <|@
tid v1189 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1464 
=== Succesors ===
trueSuccessor: v1188 
falseSuccessor: v1187 
=== Usages ===
=== Predecessor ===
v1169 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1464 #trueSuccessor: v1188 #falseSuccessor: v1187  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v142|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v143|QWORD = LEA [v127|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v142|QWORD, y: v143|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B141 -> B142 falseDestination: B141 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B144" 
    xhandlers
    flags 
    probability 4593306856578179264
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1188 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1192 
=== Usages ===
=== Predecessor ===
v1189 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1192  <|@  <|@
f <@*|@fixed>@ <|@
tid v1192 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1172 
=== Predecessor ===
v1188 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v142|QWORD] destination: B142 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B144" 
    xhandlers
    flags 
    probability 4600153446854166672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1187 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1641 
=== Usages ===
v1641 
=== Predecessor ===
v1189 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1641  <|@  <|@
f <@~|@floating>@ <|@
tid v1710 <|@
result [v129|QWORD[.] + v142|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1404 
index: j1424 
=== Succesors ===
=== Usages ===
v1641 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1404 index: j1424  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1641 <|@
result v144|V32_BYTE <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: byte
nullCheck: false
stamp: <i8,i8,i8,i8>
=== Inputs ===
stateBefore: - 
guard: v1187 
address: v1710 
=== Succesors ===
next: v1568 
=== Usages ===
v1568 
=== Predecessor ===
v1187 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1187 address: v1710 #next: v1568  <|@  <|@
f <@~|@floating>@ <|@
tid v1709 <|@
result [v128|QWORD[.] + v142|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1406 
index: j1424 
=== Succesors ===
=== Usages ===
v1568 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1406 index: j1424  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1568 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1709 
value: v1641 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1171 
=== Usages ===
=== Predecessor ===
v1641 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1709 value: v1641 stateAfter: - lastLocationAccess: - #next: v1171  <|@  <|@
f <@~|@floating>@ <|@
tid j1430 <|@
result v145|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1424 
y: j1310 
=== Succesors ===
=== Usages ===
j1407 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1424 y: j1310  <|@  <|@
f <@*|@fixed>@ <|@
tid v1171 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1172 
=== Predecessor ===
v1568 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v144|V32_BYTE = H [v129|QWORD[.] + v142|QWORD * 1] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v128|QWORD[.] + v142|QWORD * 1], input: v144|V32_BYTE) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v145|QWORD = LEA [v142|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v145|QWORD] destination: B143 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B143" "B142" 
    successors "B145" "B146" 
    xhandlers
    flags 
    probability 4602314055832920256
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1407 <|@
result v146|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1172 
values: j1430 j1424 
=== Succesors ===
=== Usages ===
v1703 v1704 j1413 v1467 j1532 v1705 v1706 v1707 v1708 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1172 values: j1430 j1424  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1172 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1171 v1192 
=== Succesors ===
next: v1195 
=== Usages ===
j1407 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1171 v1192 #next: v1195  <|@  <|@
f <@~|@floating>@ <|@
tid j1466 <|@
result v147|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j975 
y: j541 
=== Succesors ===
=== Usages ===
v1467 v1469 v1471 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j975 y: j541  <|@  <|@
f <@~|@floating>@ <|@
tid v1467 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1466 
y: j1407 
=== Succesors ===
=== Usages ===
v1195 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1466 y: j1407  <|@  <|@
f <@*|@fixed>@ <|@
tid v1195 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1467 
=== Succesors ===
trueSuccessor: v1194 
falseSuccessor: v1193 
=== Usages ===
=== Predecessor ===
v1172 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1467 #trueSuccessor: v1194 #falseSuccessor: v1193  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v146|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v147|QWORD = DEC v127|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v146|QWORD, y: v147|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B144 -> B145 falseDestination: B144 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B151" 
    xhandlers
    flags 
    probability 4593306856578179264
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1194 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1198 
=== Usages ===
=== Predecessor ===
v1195 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1198  <|@  <|@
f <@*|@fixed>@ <|@
tid v1198 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1159 
=== Predecessor ===
v1194 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B145 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B147" "B148" 
    xhandlers
    flags 
    probability 4600153446854166672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1193 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i1642 
=== Usages ===
i1642 
=== Predecessor ===
v1195 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1642  <|@  <|@
f <@~|@floating>@ <|@
tid v1704 <|@
result [v129|QWORD[.] + v146|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1404 
index: j1407 
=== Succesors ===
=== Usages ===
i1642 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1404 index: j1407  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1642 <|@
result v148|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: byte
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: v1193 
address: v1704 
=== Succesors ===
next: v1562 
=== Usages ===
v1562 
=== Predecessor ===
v1193 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1193 address: v1704 #next: v1562  <|@  <|@
f <@~|@floating>@ <|@
tid v1703 <|@
result [v128|QWORD[.] + v146|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1406 
index: j1407 
=== Succesors ===
=== Usages ===
v1562 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1406 index: j1407  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1562 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1703 
value: i1642 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1201 
=== Usages ===
=== Predecessor ===
i1642 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1703 value: i1642 stateAfter: - lastLocationAccess: - #next: v1201  <|@  <|@
f <@~|@floating>@ <|@
tid j1413 <|@
result v149|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1407 
y: j805 
=== Succesors ===
=== Usages ===
v1469 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1407 y: j805  <|@  <|@
f <@~|@floating>@ <|@
tid v1469 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1466 
y: j1413 
=== Succesors ===
=== Usages ===
v1201 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1466 y: j1413  <|@  <|@
f <@*|@fixed>@ <|@
tid v1201 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1469 
=== Succesors ===
trueSuccessor: v1200 
falseSuccessor: v1199 
=== Usages ===
=== Predecessor ===
v1562 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1469 #trueSuccessor: v1200 #falseSuccessor: v1199  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v148|DWORD = MOVSXB [v129|QWORD[.] + v146|QWORD * 1] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v128|QWORD[.] + v146|QWORD * 1], y: v148|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v149|QWORD = INC v146|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v149|QWORD, y: v147|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B146 -> B147 falseDestination: B146 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B151" 
    xhandlers
    flags 
    probability 4591146247599425680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1200 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1204 
=== Usages ===
=== Predecessor ===
v1201 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1204  <|@  <|@
f <@*|@fixed>@ <|@
tid v1204 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1159 
=== Predecessor ===
v1200 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B147 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" "B150" 
    xhandlers
    flags 
    probability 4598532990120101484
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1199 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i1643 
=== Usages ===
i1643 
=== Predecessor ===
v1201 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1643  <|@  <|@
f <@~|@floating>@ <|@
tid v1706 <|@
result [v129|QWORD[.] + v146|QWORD * 1 + 1] <|@
d <@d|@=== Debug Properties ===
displacement: 1
scale: Times1
stamp: void*
=== Inputs ===
base: j1404 
index: j1407 
=== Succesors ===
=== Usages ===
i1643 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1404 index: j1407  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1643 <|@
result v150|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: byte
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: v1199 
address: v1706 
=== Succesors ===
next: v1564 
=== Usages ===
v1564 
=== Predecessor ===
v1199 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1199 address: v1706 #next: v1564  <|@  <|@
f <@~|@floating>@ <|@
tid v1705 <|@
result [v128|QWORD[.] + v146|QWORD * 1 + 1] <|@
d <@d|@=== Debug Properties ===
displacement: 1
scale: Times1
stamp: void*
=== Inputs ===
base: j1406 
index: j1407 
=== Succesors ===
=== Usages ===
v1564 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1406 index: j1407  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1564 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1705 
value: i1643 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1207 
=== Usages ===
=== Predecessor ===
i1643 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1705 value: i1643 stateAfter: - lastLocationAccess: - #next: v1207  <|@  <|@
f <@~|@floating>@ <|@
tid j1532 <|@
result v151|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1407 
y: j1529 
=== Succesors ===
=== Usages ===
v1471 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1407 y: j1529  <|@  <|@
f <@~|@floating>@ <|@
tid v1471 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1466 
y: j1532 
=== Succesors ===
=== Usages ===
v1207 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1466 y: j1532  <|@  <|@
f <@*|@fixed>@ <|@
tid v1207 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1471 
=== Succesors ===
trueSuccessor: v1206 
falseSuccessor: v1205 
=== Usages ===
=== Predecessor ===
v1564 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1471 #trueSuccessor: v1206 #falseSuccessor: v1205  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v150|DWORD = MOVSXB [v129|QWORD[.] + v146|QWORD * 1 + 1] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v128|QWORD[.] + v146|QWORD * 1 + 1], y: v150|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v151|QWORD = LEA [v146|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v151|QWORD, y: v147|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B148 -> B149 falseDestination: B148 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B151" 
    xhandlers
    flags 
    probability 4589525790865360492
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1206 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1210 
=== Usages ===
=== Predecessor ===
v1207 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1210  <|@  <|@
f <@*|@fixed>@ <|@
tid v1210 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1159 
=== Predecessor ===
v1206 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B149 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B151" 
    xhandlers
    flags 
    probability 4596460075593828770
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1205 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i1644 
=== Usages ===
i1644 
=== Predecessor ===
v1207 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1644  <|@  <|@
f <@~|@floating>@ <|@
tid v1708 <|@
result [v129|QWORD[.] + v146|QWORD * 1 + 2] <|@
d <@d|@=== Debug Properties ===
displacement: 2
scale: Times1
stamp: void*
=== Inputs ===
base: j1404 
index: j1407 
=== Succesors ===
=== Usages ===
i1644 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1404 index: j1407  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1644 <|@
result v152|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: byte
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: v1205 
address: v1708 
=== Succesors ===
next: v1566 
=== Usages ===
v1566 
=== Predecessor ===
v1205 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1205 address: v1708 #next: v1566  <|@  <|@
f <@~|@floating>@ <|@
tid v1707 <|@
result [v128|QWORD[.] + v146|QWORD * 1 + 2] <|@
d <@d|@=== Debug Properties ===
displacement: 2
scale: Times1
stamp: void*
=== Inputs ===
base: j1406 
index: j1407 
=== Succesors ===
=== Usages ===
v1566 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1406 index: j1407  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1566 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1707 
value: i1644 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1174 
=== Usages ===
=== Predecessor ===
i1644 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1707 value: i1644 stateAfter: - lastLocationAccess: - #next: v1174  <|@  <|@
f <@*|@fixed>@ <|@
tid v1174 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1159 
=== Predecessor ===
v1566 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v152|DWORD = MOVSXB [v129|QWORD[.] + v146|QWORD * 1 + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v128|QWORD[.] + v146|QWORD * 1 + 2], y: v152|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B150 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B129" "B150" "B145" "B147" "B149" 
    successors "B152" "B174" 
    xhandlers
    flags 
    probability 4606817655460290752
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1159 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1158 v1174 v1198 v1204 v1210 
=== Succesors ===
next: v1474 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1158 v1174 v1198 v1204 v1210 #next: v1474  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1474 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v1217 
=== Usages ===
j1476 
=== Predecessor ===
v1159 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v1217  <|@  <|@
f <@~|@floating>@ <|@
tid j974 <|@
result v153|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i115 
=== Succesors ===
=== Usages ===
j979 v1289 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i115  <|@  <|@
f <@~|@floating>@ <|@
tid v1289 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j975 
y: j974 
=== Succesors ===
=== Usages ===
v1217 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j975 y: j974  <|@  <|@
f <@*|@fixed>@ <|@
tid v1217 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1289 
=== Succesors ===
trueSuccessor: v1216 
falseSuccessor: v1215 
=== Usages ===
=== Predecessor ===
v1474 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1289 #trueSuccessor: v1216 #falseSuccessor: v1215  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v153|QWORD = MOVSXD v103|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v153|QWORD, y: v127|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B151 -> B152 falseDestination: B151 -> B174 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B153" "B154" 
    xhandlers
    flags 
    probability 4602314055832920256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1216 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1220 
=== Usages ===
=== Predecessor ===
v1217 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1220  <|@  <|@
f <@~|@floating>@ <|@
tid v1688 <|@
result [v125|QWORD[.] + v127|QWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a944 
index: j975 
=== Succesors ===
=== Usages ===
j1476 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a944 index: j975  <|@  <|@
f <@~|@floating>@ <|@
tid j1476 <|@
result v154|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1474 
address: v1688 
=== Succesors ===
=== Usages ===
v1717 v1718 v1719 v1720 v1721 v1722 v1723 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1474 address: v1688  <|@  <|@
f <@~|@floating>@ <|@
tid j979 <|@
result v155|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j974 
y: j975 
=== Succesors ===
=== Usages ===
j1522 j1508 j1513 j1516 j1519 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j974 y: j975  <|@  <|@
f <@~|@floating>@ <|@
tid j1508 <|@
result v156|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967327 - 4294967263]
=== Inputs ===
x: j979 
y: j1328 
=== Succesors ===
=== Usages ===
v1509 v1511 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j979 y: j1328  <|@  <|@
f <@~|@floating>@ <|@
tid v1509 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1508 
y: j670 
=== Succesors ===
=== Usages ===
v1220 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1508 y: j670  <|@  <|@
f <@*|@fixed>@ <|@
tid v1220 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1509 
=== Succesors ===
trueSuccessor: v1218 
falseSuccessor: v1219 
=== Usages ===
=== Predecessor ===
v1216 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1509 #trueSuccessor: v1218 #falseSuccessor: v1219  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v154|QWORD[.] = LEA [v125|QWORD[.] + v127|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v155|QWORD = SUB (x: v153|QWORD, ~y: v127|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v156|QWORD = LEA [v155|QWORD - 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v156|QWORD, y: v156|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B152 -> B153 falseDestination: B152 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B157" 
    xhandlers
    flags 
    probability 4600153446854166672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1218 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1229 
=== Usages ===
=== Predecessor ===
v1220 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1229  <|@  <|@
f <@*|@fixed>@ <|@
tid v1229 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1230 
=== Predecessor ===
v1218 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B153 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B155" 
    xhandlers
    flags 
    probability 4593306856578179264
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1219 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1221 
=== Usages ===
=== Predecessor ===
v1220 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1221  <|@  <|@
f <@*|@fixed>@ <|@
tid v1221 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1222 
=== Predecessor ===
v1219 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B154 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B154" "B173" 
    successors "B156" "B173" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4602314055832920256
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1503 <|@
result v157|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1222 
values: j670 j1507 
=== Succesors ===
=== Usages ===
v1723 j1507 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1222 values: j670 j1507  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1222 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1221 
=== Succesors ===
next: v1581 
=== Usages ===
j1503 v1225 v1226 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1221 #next: v1581  <|@  <|@
f <@~|@floating>@ <|@
tid v1723 <|@
result [v154|QWORD[.] + v157|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1476 
index: j1503 
=== Succesors ===
=== Usages ===
v1581 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1476 index: j1503  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1581 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1723 
value: v1582 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1228 
=== Usages ===
=== Predecessor ===
v1222 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1723 value: v1582 stateAfter: - lastLocationAccess: - #next: v1228  <|@  <|@
f <@~|@floating>@ <|@
tid j1507 <|@
result v158|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1503 
y: j1326 
=== Succesors ===
=== Usages ===
j1498 j1503 v1511 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1503 y: j1326  <|@  <|@
f <@~|@floating>@ <|@
tid v1511 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1508 
y: j1507 
=== Succesors ===
=== Usages ===
v1228 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1508 y: j1507  <|@  <|@
f <@*|@fixed>@ <|@
tid v1228 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1511 
=== Succesors ===
trueSuccessor: v1225 
falseSuccessor: v1227 
=== Usages ===
=== Predecessor ===
v1581 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1511 #trueSuccessor: v1225 #falseSuccessor: v1227  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v157|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v154|QWORD[.] + v157|QWORD * 1], input: v18|V256_BYTE) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v158|QWORD = LEA [v157|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v158|QWORD, y: v156|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B155 -> B156 falseDestination: B155 -> B173 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B157" 
    xhandlers
    flags 
    probability 4593306856578179264
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1225 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1222 
=== Succesors ===
next: v1231 
=== Usages ===
=== Predecessor ===
v1228 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1222 #next: v1231  <|@  <|@
f <@*|@fixed>@ <|@
tid v1231 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1230 
=== Predecessor ===
v1225 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v158|QWORD] destination: B156 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B153" "B156" 
    successors "B158" "B159" 
    xhandlers
    flags 
    probability 4602314055832920256
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1498 <|@
result v159|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1230 
values: j670 j1507 
=== Succesors ===
=== Usages ===
v1722 j1502 j1493 v1514 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1230 values: j670 j1507  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1230 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1229 v1231 
=== Succesors ===
next: v1252 
=== Usages ===
j1498 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1229 v1231 #next: v1252  <|@  <|@
f <@~|@floating>@ <|@
tid j1513 <|@
result v160|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j979 
y: j1334 
=== Succesors ===
=== Usages ===
v1514 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j979 y: j1334  <|@  <|@
f <@~|@floating>@ <|@
tid v1514 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1513 
y: j1498 
=== Succesors ===
=== Usages ===
v1252 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1513 y: j1498  <|@  <|@
f <@*|@fixed>@ <|@
tid v1252 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1514 
=== Succesors ===
trueSuccessor: v1251 
falseSuccessor: v1250 
=== Usages ===
=== Predecessor ===
v1230 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1514 #trueSuccessor: v1251 #falseSuccessor: v1250  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v159|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v160|QWORD = LEA [v155|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v159|QWORD, y: v160|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B157 -> B158 falseDestination: B157 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B157" 
    successors "B160" 
    xhandlers
    flags 
    probability 4593306856578179264
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1251 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1255 
=== Usages ===
=== Predecessor ===
v1252 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1255  <|@  <|@
f <@*|@fixed>@ <|@
tid v1255 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1241 
=== Predecessor ===
v1251 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v159|QWORD] destination: B158 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B157" 
    successors "B160" 
    xhandlers
    flags 
    probability 4600153446854166672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1250 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1580 
=== Usages ===
=== Predecessor ===
v1252 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1580  <|@  <|@
f <@~|@floating>@ <|@
tid v1722 <|@
result [v154|QWORD[.] + v159|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1476 
index: j1498 
=== Succesors ===
=== Usages ===
v1580 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1476 index: j1498  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1580 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1722 
value: v1586 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1240 
=== Usages ===
=== Predecessor ===
v1250 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1722 value: v1586 stateAfter: - lastLocationAccess: - #next: v1240  <|@  <|@
f <@~|@floating>@ <|@
tid j1502 <|@
result v161|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1498 
y: j427 
=== Succesors ===
=== Usages ===
j1493 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1498 y: j427  <|@  <|@
f <@*|@fixed>@ <|@
tid v1240 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1241 
=== Predecessor ===
v1580 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v154|QWORD[.] + v159|QWORD * 1], input: v17|V128_BYTE) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v161|QWORD = LEA [v159|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v161|QWORD] destination: B159 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B159" "B158" 
    successors "B161" "B162" 
    xhandlers
    flags 
    probability 4602314055832920256
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1493 <|@
result v162|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1241 
values: j1502 j1498 
=== Succesors ===
=== Usages ===
v1721 j1497 j1488 v1517 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1241 values: j1502 j1498  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1241 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1240 v1255 
=== Succesors ===
next: v1258 
=== Usages ===
j1493 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1240 v1255 #next: v1258  <|@  <|@
f <@~|@floating>@ <|@
tid j1516 <|@
result v163|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j979 
y: j1338 
=== Succesors ===
=== Usages ===
v1517 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j979 y: j1338  <|@  <|@
f <@~|@floating>@ <|@
tid v1517 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1516 
y: j1493 
=== Succesors ===
=== Usages ===
v1258 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1516 y: j1493  <|@  <|@
f <@*|@fixed>@ <|@
tid v1258 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1517 
=== Succesors ===
trueSuccessor: v1257 
falseSuccessor: v1256 
=== Usages ===
=== Predecessor ===
v1241 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1517 #trueSuccessor: v1257 #falseSuccessor: v1256  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v162|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v163|QWORD = LEA [v155|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v162|QWORD, y: v163|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B160 -> B161 falseDestination: B160 -> B162 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B163" 
    xhandlers
    flags 
    probability 4593306856578179264
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1257 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1261 
=== Usages ===
=== Predecessor ===
v1258 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1261  <|@  <|@
f <@*|@fixed>@ <|@
tid v1261 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1244 
=== Predecessor ===
v1257 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v162|QWORD] destination: B161 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B163" 
    xhandlers
    flags 
    probability 4600153446854166672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1256 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1579 
=== Usages ===
=== Predecessor ===
v1258 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1579  <|@  <|@
f <@~|@floating>@ <|@
tid v1721 <|@
result [v154|QWORD[.] + v162|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1476 
index: j1493 
=== Succesors ===
=== Usages ===
v1579 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1476 index: j1493  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1579 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1721 
value: v1585 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1243 
=== Usages ===
=== Predecessor ===
v1256 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1721 value: v1585 stateAfter: - lastLocationAccess: - #next: v1243  <|@  <|@
f <@~|@floating>@ <|@
tid j1497 <|@
result v164|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1493 
y: j800 
=== Succesors ===
=== Usages ===
j1488 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1493 y: j800  <|@  <|@
f <@*|@fixed>@ <|@
tid v1243 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1244 
=== Predecessor ===
v1579 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v154|QWORD[.] + v162|QWORD * 1], input: v16|V64_BYTE) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v164|QWORD = LEA [v162|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v164|QWORD] destination: B162 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B162" "B161" 
    successors "B164" "B165" 
    xhandlers
    flags 
    probability 4602314055832920256
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1488 <|@
result v165|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1244 
values: j1497 j1493 
=== Succesors ===
=== Usages ===
v1720 j1492 j1477 v1520 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1244 values: j1497 j1493  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1244 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1243 v1261 
=== Succesors ===
next: v1264 
=== Usages ===
j1488 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1243 v1261 #next: v1264  <|@  <|@
f <@~|@floating>@ <|@
tid j1519 <|@
result v166|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j979 
y: j1342 
=== Succesors ===
=== Usages ===
v1520 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j979 y: j1342  <|@  <|@
f <@~|@floating>@ <|@
tid v1520 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1519 
y: j1488 
=== Succesors ===
=== Usages ===
v1264 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1519 y: j1488  <|@  <|@
f <@*|@fixed>@ <|@
tid v1264 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1520 
=== Succesors ===
trueSuccessor: v1263 
falseSuccessor: v1262 
=== Usages ===
=== Predecessor ===
v1244 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1520 #trueSuccessor: v1263 #falseSuccessor: v1262  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v165|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v166|QWORD = LEA [v155|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v165|QWORD, y: v166|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B163 -> B164 falseDestination: B163 -> B165 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B163" 
    successors "B166" 
    xhandlers
    flags 
    probability 4593306856578179264
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1263 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1267 
=== Usages ===
=== Predecessor ===
v1264 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1267  <|@  <|@
f <@*|@fixed>@ <|@
tid v1267 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1247 
=== Predecessor ===
v1263 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v165|QWORD] destination: B164 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B163" 
    successors "B166" 
    xhandlers
    flags 
    probability 4600153446854166672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1262 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1578 
=== Usages ===
=== Predecessor ===
v1264 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1578  <|@  <|@
f <@~|@floating>@ <|@
tid v1720 <|@
result [v154|QWORD[.] + v165|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1476 
index: j1488 
=== Succesors ===
=== Usages ===
v1578 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1476 index: j1488  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1578 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1720 
value: v1584 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1246 
=== Usages ===
=== Predecessor ===
v1262 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1720 value: v1584 stateAfter: - lastLocationAccess: - #next: v1246  <|@  <|@
f <@~|@floating>@ <|@
tid j1492 <|@
result v167|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1488 
y: j1310 
=== Succesors ===
=== Usages ===
j1477 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1488 y: j1310  <|@  <|@
f <@*|@fixed>@ <|@
tid v1246 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1247 
=== Predecessor ===
v1578 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v154|QWORD[.] + v165|QWORD * 1], input: v15|V32_BYTE) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v167|QWORD = LEA [v165|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v167|QWORD] destination: B165 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B165" "B164" 
    successors "B167" "B168" 
    xhandlers
    flags 
    probability 4602314055832920256
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1477 <|@
result v168|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1247 
values: j1492 j1488 
=== Succesors ===
=== Usages ===
v1717 j1481 v1523 j1533 v1718 v1719 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1247 values: j1492 j1488  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1247 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1246 v1267 
=== Succesors ===
next: v1270 
=== Usages ===
j1477 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1246 v1267 #next: v1270  <|@  <|@
f <@~|@floating>@ <|@
tid j1522 <|@
result v169|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j979 
y: j541 
=== Succesors ===
=== Usages ===
v1523 v1525 v1527 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j979 y: j541  <|@  <|@
f <@~|@floating>@ <|@
tid v1523 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1522 
y: j1477 
=== Succesors ===
=== Usages ===
v1270 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1522 y: j1477  <|@  <|@
f <@*|@fixed>@ <|@
tid v1270 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1523 
=== Succesors ===
trueSuccessor: v1269 
falseSuccessor: v1268 
=== Usages ===
=== Predecessor ===
v1247 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1523 #trueSuccessor: v1269 #falseSuccessor: v1268  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v168|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v169|QWORD = DEC v155|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v168|QWORD, y: v169|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B166 -> B167 falseDestination: B166 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B175" 
    xhandlers
    flags 
    probability 4593306856578179264
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1269 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1273 
=== Usages ===
=== Predecessor ===
v1270 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1273  <|@  <|@
f <@*|@fixed>@ <|@
tid v1273 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1234 
=== Predecessor ===
v1269 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B167 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B169" "B170" 
    xhandlers
    flags 
    probability 4600153446854166672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1268 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1575 
=== Usages ===
=== Predecessor ===
v1270 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1575  <|@  <|@
f <@~|@floating>@ <|@
tid v1717 <|@
result [v154|QWORD[.] + v168|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1476 
index: j1477 
=== Succesors ===
=== Usages ===
v1575 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1476 index: j1477  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1575 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1717 
value: i1583 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1276 
=== Usages ===
=== Predecessor ===
v1268 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1717 value: i1583 stateAfter: - lastLocationAccess: - #next: v1276  <|@  <|@
f <@~|@floating>@ <|@
tid j1481 <|@
result v170|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1477 
y: j805 
=== Succesors ===
=== Usages ===
v1525 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1477 y: j805  <|@  <|@
f <@~|@floating>@ <|@
tid v1525 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1522 
y: j1481 
=== Succesors ===
=== Usages ===
v1276 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1522 y: j1481  <|@  <|@
f <@*|@fixed>@ <|@
tid v1276 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1525 
=== Succesors ===
trueSuccessor: v1275 
falseSuccessor: v1274 
=== Usages ===
=== Predecessor ===
v1575 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1525 #trueSuccessor: v1275 #falseSuccessor: v1274  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v154|QWORD[.] + v168|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v170|QWORD = INC v168|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v170|QWORD, y: v169|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B168 -> B169 falseDestination: B168 -> B170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B168" 
    successors "B175" 
    xhandlers
    flags 
    probability 4591146247599425680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1275 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1279 
=== Usages ===
=== Predecessor ===
v1276 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1279  <|@  <|@
f <@*|@fixed>@ <|@
tid v1279 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1234 
=== Predecessor ===
v1275 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B169 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B168" 
    successors "B171" "B172" 
    xhandlers
    flags 
    probability 4598532990120101484
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1274 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1576 
=== Usages ===
=== Predecessor ===
v1276 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1576  <|@  <|@
f <@~|@floating>@ <|@
tid v1718 <|@
result [v154|QWORD[.] + v168|QWORD * 1 + 1] <|@
d <@d|@=== Debug Properties ===
displacement: 1
scale: Times1
stamp: void*
=== Inputs ===
base: j1476 
index: j1477 
=== Succesors ===
=== Usages ===
v1576 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1476 index: j1477  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1576 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1718 
value: i1583 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1282 
=== Usages ===
=== Predecessor ===
v1274 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1718 value: i1583 stateAfter: - lastLocationAccess: - #next: v1282  <|@  <|@
f <@~|@floating>@ <|@
tid j1533 <|@
result v171|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1477 
y: j1529 
=== Succesors ===
=== Usages ===
v1527 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1477 y: j1529  <|@  <|@
f <@~|@floating>@ <|@
tid v1527 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1522 
y: j1533 
=== Succesors ===
=== Usages ===
v1282 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1522 y: j1533  <|@  <|@
f <@*|@fixed>@ <|@
tid v1282 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1527 
=== Succesors ===
trueSuccessor: v1281 
falseSuccessor: v1280 
=== Usages ===
=== Predecessor ===
v1576 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1527 #trueSuccessor: v1281 #falseSuccessor: v1280  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v154|QWORD[.] + v168|QWORD * 1 + 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v171|QWORD = LEA [v168|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v171|QWORD, y: v169|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B170 -> B171 falseDestination: B170 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B170" 
    successors "B175" 
    xhandlers
    flags 
    probability 4589525790865360492
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1281 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1285 
=== Usages ===
=== Predecessor ===
v1282 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1285  <|@  <|@
f <@*|@fixed>@ <|@
tid v1285 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1234 
=== Predecessor ===
v1281 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B171 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B170" 
    successors "B175" 
    xhandlers
    flags 
    probability 4596460075593828770
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1280 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1577 
=== Usages ===
=== Predecessor ===
v1282 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1577  <|@  <|@
f <@~|@floating>@ <|@
tid v1719 <|@
result [v154|QWORD[.] + v168|QWORD * 1 + 2] <|@
d <@d|@=== Debug Properties ===
displacement: 2
scale: Times1
stamp: void*
=== Inputs ===
base: j1476 
index: j1477 
=== Succesors ===
=== Usages ===
v1577 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1476 index: j1477  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1577 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1719 
value: i1583 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1249 
=== Usages ===
=== Predecessor ===
v1280 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1719 value: i1583 stateAfter: - lastLocationAccess: - #next: v1249  <|@  <|@
f <@*|@fixed>@ <|@
tid v1249 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1234 
=== Predecessor ===
v1577 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v154|QWORD[.] + v168|QWORD * 1 + 2], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B172 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B155" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4600153446854166672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1227 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1226 
=== Usages ===
=== Predecessor ===
v1228 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1226  <|@  <|@
f <@*|@fixed>@ <|@
tid v1226 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v1222 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1227 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1222  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v158|QWORD] destination: B173 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B175" 
    xhandlers
    flags 
    probability 4602314055832920256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1215 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1233 
=== Usages ===
=== Predecessor ===
v1217 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1233  <|@  <|@
f <@*|@fixed>@ <|@
tid v1233 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1234 
=== Predecessor ===
v1215 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B174 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B174" "B172" "B167" "B169" "B171" 
    successors 
    xhandlers
    flags 
    probability 4606817655460290752
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1234 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1233 v1249 v1273 v1279 v1285 
=== Succesors ===
next: a724 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1233 v1249 v1273 v1279 v1285 #next: a724  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a724 <|@
result v125|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.lang.StringCoding.safeTrim(StringCoding.java:79) [bci: 20]
at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 121]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a944 
=== Succesors ===
next: v48 
=== Usages ===
v48 
=== Predecessor ===
v1234 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a944 #next: v48  <|@  <|@
f <@*|@fixed>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.encode(StringCoding.java:365) [bci: 124]
stamp: void
=== Inputs ===
result: a724 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a724 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a724 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v125|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B133" 
    successors "B133" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4600153446854166672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1152 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1151 
=== Usages ===
=== Predecessor ===
v1153 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1151  <|@  <|@
f <@*|@fixed>@ <|@
tid v1151 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v1147 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1152 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1147  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v133|QWORD] destination: B176 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B181" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.encode(StringCoding.java:354) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: v797 
=== Usages ===
=== Predecessor ===
v609 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v797  <|@  <|@
f <@~|@floating>@ <|@
tid i798 <|@
result int[-106515|0xfffffffffffe5fed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -106515
stableDimension: 0
stamp: i32 [-106515] ⇊00000000fffe5fed ⇈00000000fffe5fed
stampKind: i32
value: int[-106515|0xfffffffffffe5fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i789 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v797 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v785 
=== Predecessor ===
v608 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-106515|0xfffffffffffe5fed], Object[null]] destination: B177 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B181" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1614 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
next: v795 
=== Usages ===
=== Predecessor ===
v1618 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v795  <|@  <|@
f <@*|@fixed>@ <|@
tid v795 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v785 
=== Predecessor ===
v1614 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-113435|0xfffffffffffe44e5], v89|QWORD[.]] destination: B178 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B181" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1599 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1726 
=== Usages ===
=== Predecessor ===
v1600 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1726  <|@  <|@
f <@*|@fixed>@ <|@
tid v1726 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v785 
=== Predecessor ===
v1599 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-108315|0xfffffffffffe58e5], v89|QWORD[.]] destination: B179 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B181" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1598 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
next: v792 
=== Usages ===
=== Predecessor ===
v1602 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v792  <|@  <|@
f <@*|@fixed>@ <|@
tid v792 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v785 
=== Predecessor ===
v1598 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-108315|0xfffffffffffe58e5], v89|QWORD[.]] destination: B180 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B79" "B180" "B178" "B177" "B179" "B89" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i789 <|@
result v172|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-113435 - -106515] ⇊00000000fffe40e5 ⇈00000000fffe5ffd
valueDescription: i32
=== Inputs ===
merge: v785 
values: i787 i793 i796 i798 i793 i796 
=== Succesors ===
=== Usages ===
v791 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v785 values: i787 i793 i796 i798 i793 i796  <|@  <|@
f <@~|@floating>@ <|@
tid a790 <|@
result v173|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v785 
values: a788 a794 a794 a749 a794 a794 
=== Succesors ===
=== Usages ===
v791 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v785 values: a788 a794 a794 a749 a794 a794  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v785 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v786 v792 v795 v797 v1726 v1727 
=== Succesors ===
next: v791 
=== Usages ===
i789 a790 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v786 v792 v795 v797 v1726 v1727 #next: v791  <|@  <|@
tid ?211 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<StringCoding.encode(Charset, char[], int, int)>
duringCall: true
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: StringCoding.java
sourceLine: 348
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 i4 - - - - - - - 
=== Succesors ===
=== Usages ===
?208 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 i4 - - - - - - -  <|@  <|@
tid ?208 <|@
d <@d|@=== Debug Properties ===
bci: 6
code: ResolvedJavaMethodBytecode<UTF_8.newEncoder()>
duringCall: true
localsSize: 1
locksSize: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 72
stackSize: 1
=== Inputs ===
outerFrameState: ?211 
values: a1 a325 
=== Succesors ===
=== Usages ===
?224 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?211 values: a1 a325  <|@  <|@
tid ?224 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.<init>(Charset, UTF_8$1)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 554
stackSize: 0
=== Inputs ===
outerFrameState: ?208 
values: - - - 
=== Succesors ===
=== Usages ===
?216 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?208 values: - - -  <|@  <|@
tid ?216 <|@
d <@d|@=== Debug Properties ===
bci: 6
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.<init>(Charset)>
duringCall: true
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 558
stackSize: 0
=== Inputs ===
outerFrameState: ?224 
values: a325 a1 
=== Succesors ===
=== Usages ===
?254 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?224 values: a325 a1  <|@  <|@
tid ?254 <|@
d <@d|@=== Debug Properties ===
bci: 12
code: ResolvedJavaMethodBytecode<CharsetEncoder.<init>(Charset, float, float)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: CharsetEncoder.java
sourceLine: 233
stackSize: 0
=== Inputs ===
outerFrameState: ?216 
values: - - - - 
=== Succesors ===
=== Usages ===
?345 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?216 values: - - - -  <|@  <|@
tid a326 <|@
d <@d|@=== Debug Properties ===
componentType: HotSpotResolvedPrimitiveType<byte>
hasIdentity: true
length: 1
objectId: -1
stamp: a!# [B
=== Inputs ===
=== Succesors ===
=== Usages ===
?345 ?328 
=== Predecessor ===
- >@ <|@
instruction <@VirtualArray|@org.graalvm.compiler.nodes.virtual.VirtualArrayNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a225 <|@
result Object[CodingErrorAction@250144264] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:144) [bci: 5]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
rawvalue: CodingErrorAction@250144264
stableDimension: 0
stamp: a!# Ljava/nio/charset/CodingErrorAction;
stampKind: a -
value: Object[CodingErrorAction@250144264]
=== Inputs ===
=== Succesors ===
=== Usages ===
?327 ?327 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?327 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a325 
values: - - - a1 - a225 a225 - - - 
=== Succesors ===
=== Usages ===
?345 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a325 values: - - - a1 - a225 a225 - - -  <|@  <|@
tid ?328 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a326 
values: i152 
=== Succesors ===
=== Usages ===
?345 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a326 values: i152  <|@  <|@
tid ?345 <|@
d <@d|@=== Debug Properties ===
bci: 70
code: ResolvedJavaMethodBytecode<CharsetEncoder.<init>(Charset, float, float, byte[])>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
rethrowException: false
sourceFile: CharsetEncoder.java
sourceLine: 198
stackSize: 1
=== Inputs ===
outerFrameState: ?254 
values: a325 - f212 f213 a326 i18 
virtualObjectMappings: ?327 ?328 
=== Succesors ===
=== Usages ===
v791 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?254 values: a325 - f212 f213 a326 i18 virtualObjectMappings: ?327 ?328  <|@  <|@
f <@*|@fixed>@ <|@
tid v791 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?345 
actionAndReason: i789 
speculation: a790 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v785 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?345 actionAndReason: i789 speculation: a790  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v172|DWORD, v173|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v172|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v173|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 70]
stack: int[0|0x0] 
locals: vobject:UTF_8$Encoder:0{averageBytesPerChar=float[0.0|0x0],maxBytesPerChar=float[0.0|0x0],state=int[0|0x0],charset=v0|QWORD[.],replacement=Object[null],malformedInputAction=Object[CodingErrorAction@250144264],unmappableCharacterAction=Object[CodingErrorAction@250144264],cachedDecoder=Object[null],repl=int[0|0x0],sgp=Object[null]} - float[1.1|0x3f8ccccd] float[3.0|0x40400000] vobject:byte[]:1{0=int[63|0x3f]} 
java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
locals: - - - - 
sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
locals: vobject:UTF_8$Encoder:0{averageBytesPerChar=float[0.0|0x0],maxBytesPerChar=float[0.0|0x0],state=int[0|0x0],charset=v0|QWORD[.],replacement=Object[null],malformedInputAction=Object[CodingErrorAction@250144264],unmappableCharacterAction=Object[CodingErrorAction@250144264],cachedDecoder=Object[null],repl=int[0|0x0],sgp=Object[null]} v0|QWORD[.] 
sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
locals: - - - 
sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
stack: vobject:UTF_8$Encoder:0{averageBytesPerChar=float[0.0|0x0],maxBytesPerChar=float[0.0|0x0],state=int[0|0x0],charset=v0|QWORD[.],replacement=Object[null],malformedInputAction=Object[CodingErrorAction@250144264],unmappableCharacterAction=Object[CodingErrorAction@250144264],cachedDecoder=Object[null],repl=int[0|0x0],sgp=Object[null]} 
locals: v0|QWORD[.] 
java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - - - - 
vobject:UTF_8$Encoder:0{averageBytesPerChar=float[0.0|0x0],maxBytesPerChar=float[0.0|0x0],state=int[0|0x0],charset=v0|QWORD[.],replacement=Object[null],malformedInputAction=Object[CodingErrorAction@250144264],unmappableCharacterAction=Object[CodingErrorAction@250144264],cachedDecoder=Object[null],repl=int[0|0x0],sgp=Object[null]} Lsun/nio/cs/UTF_8$Encoder; float[0.0|0x0] float[0.0|0x0] int[0|0x0] v0|QWORD[.] Object[null] Object[CodingErrorAction@250144264] Object[CodingErrorAction@250144264] Object[null] int[0|0x0] Object[null] 
vobject:byte[]:1{0=int[63|0x3f]} [B int[63|0x3f] 
>@ <|@ instruction DEOPT info [bci:70, 12, 6, 2, 6, 1] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4595923419731591168
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1077 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1076 
=== Usages ===
=== Predecessor ===
v1078 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1076  <|@  <|@
f <@*|@fixed>@ <|@
tid v1076 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v1072 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1077 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1072  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|QWORD] destination: B182 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lsun/nio/cs/UTF_8; target_method=newEncoder target_method_class=Lsun/nio/cs/UTF_8; position=at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v755 
=== Usages ===
=== Predecessor ===
v577 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v755  <|@  <|@
f <@~|@floating>@ <|@
tid i756 <|@
result int[-92723|0xfffffffffffe95cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -92723
stableDimension: 0
stamp: i32 [-92723] ⇊00000000fffe95cd ⇈00000000fffe95cd
stampKind: i32
value: int[-92723|0xfffffffffffe95cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i750 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v755 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v746 
=== Predecessor ===
v576 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-92723|0xfffffffffffe95cd]] destination: B183 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B183" "B2" "B45" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i750 <|@
result v174|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-103699 - -92427] ⇊00000000fffe00c5 ⇈00000000fffefffd
valueDescription: i32
=== Inputs ===
merge: v746 
values: i756 i758 i762 
=== Succesors ===
=== Usages ===
v752 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v746 values: i756 i758 i762  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v746 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v755 v757 v761 
=== Succesors ===
next: v752 
=== Usages ===
i750 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v755 v757 v761 #next: v752  <|@  <|@
f <@*|@fixed>@ <|@
tid v752 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?5 
actionAndReason: i750 
speculation: a749 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v746 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?5 actionAndReason: i750 speculation: a749  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v174|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v174|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringCoding.encode(StringCoding.java:348) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B183" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@b0dad63 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringCoding.encode(StringCoding.java:348) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - - - - 
>@ <|@ instruction CMP [v0|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/nio/cs/UTF_8;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B183 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.nio.charset.Charset] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[.] = MOV [v4|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringCoding.encode(StringCoding.java:348) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v5|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[String:"1.4"] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[.] = MOV [v5|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringCoding.encode(StringCoding.java:348) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v6|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v7|DOUBLE = VCVTSI2SD v3|DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DOUBLE = VMOVE input: double[3.0|0x4008000000000000] <|@ <|@
      nr   -1  <|@ instruction v8|DOUBLE = VMULSD (x: v7|DOUBLE, y: v9|DOUBLE) nZ: XMM <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = VCVTTSD2SI v8|DOUBLE nZ: XMM <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVSXD v10|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v10|DWORD y: -2147483648 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|DWORD, v11|QWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B6" "B9" "B7" 
    successors "B11" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|DWORD, v14|QWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v6|DWORD[.] * 8 + 12] y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B47" "B50" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v13|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B46 -> B47 falseDestination: B46 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = LEA [v13|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = AND v59|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOVSXD v60|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = ADD (x: v57|QWORD, y: v61|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v62|QWORD, y: v58|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 4601697034453880144
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v62|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v61|QWORD + v57|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v61|QWORD + v57|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v61|QWORD + v57|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v61|QWORD + v57|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v57|QWORD + 12], y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v57|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v57|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = MOVE v57|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v63|QWORD[.]] destination: B49 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B49" "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v65|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v13|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = LEA [v65|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = MOVSXD v13|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = LEA [v67|QWORD - 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v68|QWORD, y: v68|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B54 -> B55 falseDestination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B55" "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   -1  <|@ instruction [v71|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = LEA [v67|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v71|QWORD, y: v72|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v182|V128_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v66|QWORD[.] + v71|QWORD * 1], input: v182|V128_BYTE) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = LEA [v71|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v73|QWORD] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   -1  <|@ instruction [v74|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = LEA [v67|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v74|QWORD, y: v75|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B62 -> B63 falseDestination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v179|V64_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v66|QWORD[.] + v74|QWORD * 1], input: v179|V64_BYTE) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = LEA [v74|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v76|QWORD] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   -1  <|@ instruction [v77|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v78|QWORD = LEA [v67|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v77|QWORD, y: v78|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v176|V32_BYTE = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v66|QWORD[.] + v77|QWORD * 1], input: v176|V32_BYTE) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = LEA [v77|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v79|QWORD] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors "B69" "B70" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   -1  <|@ instruction [v80|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = DEC v67|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v80|QWORD, y: v81|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v66|QWORD[.] + v80|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = INC v80|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v82|QWORD, y: v81|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4594234569871327232
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v66|QWORD[.] + v80|QWORD * 1 + 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = LEA [v80|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v83|QWORD, y: v81|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" 
    xhandlers
    flags 
    probability 4592264245034352640
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v66|QWORD[.] + v80|QWORD * 1 + 2], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B53" "B74" "B69" "B71" "B73" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.04030493641460409 condition: = trueDestination: B75 -> B76 falseDestination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B78" 
    xhandlers
    flags 
    probability 4602315784579410907
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v65|QWORD[.]] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B43" "B77" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4606819384206781403
    begin_IR
      LIR
      nr   -1  <|@ instruction [v84|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4606819384206781403
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v13|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = MOVSXD v86|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v88|QWORD = DEC v87|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v86|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B180" 
    xhandlers
    flags 
    probability 4602315784579410907
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v91|QWORD = MOVSXD v2|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v92|QWORD = ADD (x: v91|QWORD, y: v88|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v93|QWORD = MOV v90|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v93|QWORD, y: v92|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B82 -> B83 falseDestination: B82 -> B180 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B84" "B179" 
    xhandlers
    flags 
    probability 4602315784579410907
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v90|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B83 -> B84 falseDestination: B83 -> B179 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" 
    xhandlers
    flags 
    probability 4602315784579410907
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B81" "B84" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4606819384206781403
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v86|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B85 -> B86 falseDestination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B178" 
    xhandlers
    flags 
    probability 4602315784579410907
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|QWORD, y: v88|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B87 -> B88 falseDestination: B87 -> B178 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4602315784579410907
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v13|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B88 -> B89 falseDestination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4602315784579410907
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B86" "B90" 
    successors "B92" "B177" 
    xhandlers
    flags 
    probability 4606819384206781403
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v94|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.lang.System] <|@ <|@
      nr   -1  <|@ instruction v95|DWORD[.] = MOV [v94|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v95|DWORD[.], y: v95|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B91 -> B92 falseDestination: B91 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B93" 
    xhandlers
    flags 
    probability 4606819384206781403
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v2|DWORD, int[0|0x0]] destination: B92 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4633239538722544628
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = MOVSX [v1|QWORD[.] + v96|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v98|DWORD y: 128 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9998902719253914 condition: |<| trueDestination: B94 -> B95 falseDestination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B93" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4633238656210209361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v84|QWORD[.] + v97|DWORD * 1 + 16], y: v98|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = INC v97|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = INC v96|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v100|DWORD, v99|DWORD] destination: B95 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" "B95" 
    successors "B94" "B97" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4633373721283045376
    begin_IR
      LIR
      nr   -1  <|@ instruction [v96|DWORD, v97|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v86|DWORD, y: v97|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9835900530402635 condition: > trueDestination: B93 -> B94 falseDestination: B93 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B98" 
    xhandlers
    flags 
    probability 4606762903417324314
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B97 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" "B96" 
    successors "B99" 
    xhandlers
    flags 
    probability 4606819384206781405
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = ADD (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v96|DWORD, v97|DWORD] destination: B98 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" "B103" "B109" 
    successors "B100" "B115" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4607837160947116637
    begin_IR
      LIR
      nr   -1  <|@ instruction [v102|DWORD, v103|DWORD] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v101|DWORD, y: v102|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.16211788211788214 condition: > trueDestination: B99 -> B100 falseDestination: B99 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B101" "B114" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4595858095840273263
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v102|DWORD, y: [v1|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B100 -> B101 falseDestination: B100 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" "B113" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4595858095840273263
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v13|DWORD, y: v103|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B101 -> B102 falseDestination: B101 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B103" "B104" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4595858095840273263
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = MOVZX [v1|QWORD[.] + v102|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = INC v102|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = INC v103|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v104|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.942568400295785 condition: |<| trueDestination: B102 -> B103 falseDestination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B99" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4595473874099309764
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v84|QWORD[.] + v103|DWORD * 1 + 16], y: v104|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v105|DWORD, v106|DWORD] destination: B103 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B105" "B106" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4577301169636469431
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v104|DWORD y: 2048 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B104 -> B105 falseDestination: B104 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B112" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4577301169636469431
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v104|DWORD y: 55296 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B106 -> B107 falseDestination: B106 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B108" "B111" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4577301169636469431
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v13|DWORD, y: v106|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B107 -> B108 falseDestination: B107 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4577301169636469431
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = LEA [v103|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v13|DWORD, y: v107|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B108 -> B109 falseDestination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B99" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4577301169636469431
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = SHR v104|DWORD y: 12 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = OR v108|DWORD y: 224 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v84|QWORD[.] + v103|DWORD * 1 + 16], y: v109|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = SHR v104|DWORD y: 6 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = AND v110|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = OR v111|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v84|QWORD[.] + v106|DWORD * 1 + 16], y: v112|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v113|DWORD = AND v104|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v114|DWORD = OR v113|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v84|QWORD[.] + v107|DWORD * 1 + 16], y: v114|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = LEA [v103|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v105|DWORD, v115|DWORD] destination: B109 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B116" "B117" 
    xhandlers
    flags 
    probability 4606819384206781406
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v13|DWORD, y: v103|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" "B119" 
    xhandlers
    flags 
    probability 4606819384206781406
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v103|DWORD, y: v103|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 9.999999999998899E-5 condition: < trueDestination: B117 -> B118 falseDestination: B117 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B120" "B122" 
    xhandlers
    flags 
    probability 4606818519790315256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v13|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 9.999999999998899E-5 condition: < trueDestination: B119 -> B120 falseDestination: B119 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B123" "B126" 
    xhandlers
    flags 
    probability 4606817655460290752
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v117|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v118|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v103|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B122 -> B123 falseDestination: B122 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B124" "B125" 
    xhandlers
    flags 
    probability 4605953411868789319
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v119|DWORD = LEA [v103|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = AND v119|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v121|QWORD = MOVSXD v120|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v122|QWORD = ADD (x: v121|QWORD, y: v117|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v122|QWORD, y: v118|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B123 -> B124 falseDestination: B123 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B128" 
    xhandlers
    flags 
    probability 4605875629945554190
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v122|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v121|QWORD + v117|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v121|QWORD + v117|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v121|QWORD + v117|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v121|QWORD + v117|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v117|QWORD + 12], y: v103|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v117|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v117|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v123|QWORD[.] = MOVE v117|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v123|QWORD[.]] destination: B125 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B125" "B127" 
    successors "B129" "B130" 
    xhandlers
    flags 
    probability 4606817655460290752
    begin_IR
      LIR
      nr   -1  <|@ instruction [v125|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v103|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = CMOVE (falseValue: v103|DWORD, ~trueValue: v13|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v127|QWORD = MOVSXD v126|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v127|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B128 -> B129 falseDestination: B128 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B128" 
    successors "B131" "B132" 
    xhandlers
    flags 
    probability 4602314055832920256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = LEA [v125|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = LEA [v84|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v130|QWORD = LEA [v127|QWORD - 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v130|QWORD, y: v130|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B130 -> B131 falseDestination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B135" 
    xhandlers
    flags 
    probability 4600153446854166672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B131 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B131" "B134" 
    successors "B136" "B137" 
    xhandlers
    flags 
    probability 4602314055832920256
    begin_IR
      LIR
      nr   -1  <|@ instruction [v134|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v135|QWORD = LEA [v127|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v134|QWORD, y: v135|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B135 -> B136 falseDestination: B135 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B138" 
    xhandlers
    flags 
    probability 4600153446854166672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v136|V128_BYTE = H [v129|QWORD[.] + v134|QWORD * 1] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v128|QWORD[.] + v134|QWORD * 1], input: v136|V128_BYTE) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v137|QWORD = LEA [v134|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v137|QWORD] destination: B137 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B137" "B136" 
    successors "B139" "B140" 
    xhandlers
    flags 
    probability 4602314055832920256
    begin_IR
      LIR
      nr   -1  <|@ instruction [v138|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v139|QWORD = LEA [v127|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v138|QWORD, y: v139|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B138 -> B139 falseDestination: B138 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B141" 
    xhandlers
    flags 
    probability 4600153446854166672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v140|V64_BYTE = H [v129|QWORD[.] + v138|QWORD * 1] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v128|QWORD[.] + v138|QWORD * 1], input: v140|V64_BYTE) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v141|QWORD = LEA [v138|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v141|QWORD] destination: B140 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" "B139" 
    successors "B142" "B143" 
    xhandlers
    flags 
    probability 4602314055832920256
    begin_IR
      LIR
      nr   -1  <|@ instruction [v142|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v143|QWORD = LEA [v127|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v142|QWORD, y: v143|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B141 -> B142 falseDestination: B141 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B144" 
    xhandlers
    flags 
    probability 4600153446854166672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v144|V32_BYTE = H [v129|QWORD[.] + v142|QWORD * 1] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v128|QWORD[.] + v142|QWORD * 1], input: v144|V32_BYTE) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v145|QWORD = LEA [v142|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v145|QWORD] destination: B143 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B143" "B142" 
    successors "B145" "B146" 
    xhandlers
    flags 
    probability 4602314055832920256
    begin_IR
      LIR
      nr   -1  <|@ instruction [v146|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v147|QWORD = DEC v127|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v146|QWORD, y: v147|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B144 -> B145 falseDestination: B144 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B147" "B148" 
    xhandlers
    flags 
    probability 4600153446854166672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v148|DWORD = MOVSXB [v129|QWORD[.] + v146|QWORD * 1] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v128|QWORD[.] + v146|QWORD * 1], y: v148|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v149|QWORD = INC v146|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v149|QWORD, y: v147|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B146 -> B147 falseDestination: B146 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" "B150" 
    xhandlers
    flags 
    probability 4598532990120101484
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v150|DWORD = MOVSXB [v129|QWORD[.] + v146|QWORD * 1 + 1] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v128|QWORD[.] + v146|QWORD * 1 + 1], y: v150|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v151|QWORD = LEA [v146|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v151|QWORD, y: v147|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B148 -> B149 falseDestination: B148 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B151" 
    xhandlers
    flags 
    probability 4596460075593828770
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v152|DWORD = MOVSXB [v129|QWORD[.] + v146|QWORD * 1 + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v128|QWORD[.] + v146|QWORD * 1 + 2], y: v152|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B150 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B129" "B150" "B145" "B147" "B149" 
    successors "B152" "B174" 
    xhandlers
    flags 
    probability 4606817655460290752
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v153|QWORD = MOVSXD v103|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v153|QWORD, y: v127|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B151 -> B152 falseDestination: B151 -> B174 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B175" 
    xhandlers
    flags 
    probability 4602314055832920256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B174 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B174" "B172" "B167" "B169" "B171" 
    successors 
    xhandlers
    flags 
    probability 4606817655460290752
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v125|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B45" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@644bd6a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[3]{1, ., 4}] <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = ARRAY_EQUALS (~array1Value: v20|QWORD[.], ~array2Value: v21|QWORD[.], ~lengthValue: v23|DWORD) {temp1: v24|QWORD[*], temp2: v25|QWORD[*], temp3: v26|QWORD, temp4: v27|QWORD, temp5: -, tempXMM: -, vectorTemp1: v28|DOUBLE, vectorTemp2: v29|DOUBLE} arrayBaseOffset: 16 arrayIndexScale: 2 kind: char <|@ <|@
      nr   -1  <|@ instruction TEST (x: v22|DWORD, y: v22|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B16" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v13|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B12 -> B13 falseDestination: B12 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = LEA [v13|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = AND v32|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOVSXD v33|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = ADD (x: v34|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v35|QWORD, y: v31|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4601697034453880144
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v35|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v34|QWORD + v30|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v34|QWORD + v30|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v34|QWORD + v30|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v34|QWORD + v30|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v30|QWORD + 12], y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v30|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v30|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE v30|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|QWORD[.]] destination: B15 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v13|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = LEA [v38|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOVSXD v13|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = LEA [v40|QWORD - 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v41|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = LEA [v40|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v44|QWORD, y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v183|V128_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v39|QWORD[.] + v44|QWORD * 1], input: v183|V128_BYTE) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA [v44|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v46|QWORD] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = LEA [v40|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v47|QWORD, y: v48|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v180|V64_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v39|QWORD[.] + v47|QWORD * 1], input: v180|V64_BYTE) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = LEA [v47|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|QWORD] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = LEA [v40|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v50|QWORD, y: v51|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v177|V32_BYTE = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v39|QWORD[.] + v50|QWORD * 1], input: v177|V32_BYTE) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = LEA [v50|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v52|QWORD] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   -1  <|@ instruction [v53|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = DEC v40|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v53|QWORD, y: v54|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v39|QWORD[.] + v53|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = INC v53|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v55|QWORD, y: v54|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4594234569871327232
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v39|QWORD[.] + v53|QWORD * 1 + 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = LEA [v53|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v56|QWORD, y: v54|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4592264245034352640
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v39|QWORD[.] + v53|QWORD * 1 + 2], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B19" "B40" "B35" "B37" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.04030493641460409 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B78" 
    xhandlers
    flags 
    probability 4602315784579410907
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v38|QWORD[.]] destination: B43 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B85" 
    xhandlers
    flags 
    probability 4602315784579410907
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B81 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B91" 
    xhandlers
    flags 
    probability 4602315784579410907
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B86 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B153" "B154" 
    xhandlers
    flags 
    probability 4602314055832920256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v154|QWORD[.] = LEA [v125|QWORD[.] + v127|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v155|QWORD = SUB (x: v153|QWORD, ~y: v127|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v156|QWORD = LEA [v155|QWORD - 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v156|QWORD, y: v156|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B152 -> B153 falseDestination: B152 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B157" 
    xhandlers
    flags 
    probability 4600153446854166672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B153 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B153" "B156" 
    successors "B158" "B159" 
    xhandlers
    flags 
    probability 4602314055832920256
    begin_IR
      LIR
      nr   -1  <|@ instruction [v159|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v160|QWORD = LEA [v155|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v159|QWORD, y: v160|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B157 -> B158 falseDestination: B157 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B157" 
    successors "B160" 
    xhandlers
    flags 
    probability 4600153446854166672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v181|V128_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v154|QWORD[.] + v159|QWORD * 1], input: v181|V128_BYTE) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v161|QWORD = LEA [v159|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v161|QWORD] destination: B159 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B159" "B158" 
    successors "B161" "B162" 
    xhandlers
    flags 
    probability 4602314055832920256
    begin_IR
      LIR
      nr   -1  <|@ instruction [v162|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v163|QWORD = LEA [v155|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v162|QWORD, y: v163|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B160 -> B161 falseDestination: B160 -> B162 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B163" 
    xhandlers
    flags 
    probability 4600153446854166672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v178|V64_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v154|QWORD[.] + v162|QWORD * 1], input: v178|V64_BYTE) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v164|QWORD = LEA [v162|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v164|QWORD] destination: B162 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B162" "B161" 
    successors "B164" "B165" 
    xhandlers
    flags 
    probability 4602314055832920256
    begin_IR
      LIR
      nr   -1  <|@ instruction [v165|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v166|QWORD = LEA [v155|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v165|QWORD, y: v166|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B163 -> B164 falseDestination: B163 -> B165 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B163" 
    successors "B166" 
    xhandlers
    flags 
    probability 4600153446854166672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v175|V32_BYTE = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v154|QWORD[.] + v165|QWORD * 1], input: v175|V32_BYTE) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v167|QWORD = LEA [v165|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v167|QWORD] destination: B165 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B165" "B164" 
    successors "B167" "B168" 
    xhandlers
    flags 
    probability 4602314055832920256
    begin_IR
      LIR
      nr   -1  <|@ instruction [v168|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v169|QWORD = DEC v155|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v168|QWORD, y: v169|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B166 -> B167 falseDestination: B166 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B169" "B170" 
    xhandlers
    flags 
    probability 4600153446854166672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v154|QWORD[.] + v168|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v170|QWORD = INC v168|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v170|QWORD, y: v169|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B168 -> B169 falseDestination: B168 -> B170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B168" 
    successors "B171" "B172" 
    xhandlers
    flags 
    probability 4598532990120101484
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v154|QWORD[.] + v168|QWORD * 1 + 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v171|QWORD = LEA [v168|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v171|QWORD, y: v169|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B170 -> B171 falseDestination: B170 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B170" 
    successors "B175" 
    xhandlers
    flags 
    probability 4596460075593828770
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v154|QWORD[.] + v168|QWORD * 1 + 2], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B172 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B128" 
    successors "B151" 
    xhandlers
    flags 
    probability 4602314055832920256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B129 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B75" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B53 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B41" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B163" 
    successors "B166" 
    xhandlers
    flags 
    probability 4593306856578179264
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v165|QWORD] destination: B164 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B175" 
    xhandlers
    flags 
    probability 4593306856578179264
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B167 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B155" 
    xhandlers
    flags 
    probability 4593306856578179264
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v184|V256_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B154 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B155" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4600153446854166672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v158|QWORD] destination: B173 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B154" "B173" 
    successors "B156" "B173" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4602314055832920256
    begin_IR
      LIR
      nr   -1  <|@ instruction [v157|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v154|QWORD[.] + v157|QWORD * 1], input: v184|V256_BYTE) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v158|QWORD = LEA [v157|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v158|QWORD, y: v156|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B155 -> B156 falseDestination: B155 -> B173 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B157" 
    successors "B160" 
    xhandlers
    flags 
    probability 4593306856578179264
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v159|QWORD] destination: B158 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B163" 
    xhandlers
    flags 
    probability 4593306856578179264
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v162|QWORD] destination: B161 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B157" 
    xhandlers
    flags 
    probability 4593306856578179264
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v158|QWORD] destination: B156 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B144" 
    xhandlers
    flags 
    probability 4593306856578179264
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v142|QWORD] destination: B142 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B151" 
    xhandlers
    flags 
    probability 4593306856578179264
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B145 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B133" 
    xhandlers
    flags 
    probability 4593306856578179264
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B132 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B133" 
    successors "B133" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4600153446854166672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v133|QWORD] destination: B176 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" "B176" 
    successors "B134" "B176" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4602314055832920256
    begin_IR
      LIR
      nr   -1  <|@ instruction [v131|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v132|V256_BYTE = H [v129|QWORD[.] + v131|QWORD * 1] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v128|QWORD[.] + v131|QWORD * 1], input: v132|V256_BYTE) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v133|QWORD = LEA [v131|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v133|QWORD, y: v130|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B133 -> B134 falseDestination: B133 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B138" 
    xhandlers
    flags 
    probability 4593306856578179264
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v134|QWORD] destination: B136 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B133" 
    successors "B135" 
    xhandlers
    flags 
    probability 4593306856578179264
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v133|QWORD] destination: B134 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B141" 
    xhandlers
    flags 
    probability 4593306856578179264
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v138|QWORD] destination: B139 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B127" 
    xhandlers
    flags 
    probability 4591578369395176395
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B126 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B126" "B124" 
    successors "B128" 
    xhandlers
    flags 
    probability 4592200624781057428
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v187|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v187|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v103|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
locals: vobject:UTF_8$Encoder:0{averageBytesPerChar=float[1.1|0x3f8ccccd],maxBytesPerChar=float[3.0|0x40400000],state=int[0|0x0],charset=v0|QWORD[.],replacement=vobject:byte[]:1{0=int[63|0x3f]},malformedInputAction=Object[CodingErrorAction@561514572],unmappableCharacterAction=Object[CodingErrorAction@561514572],cachedDecoder=Object[null],repl=int[63|0x3f],sgp=Object[null]} v1|QWORD[.] v102|DWORD - v84|QWORD[.] v101|DWORD v103|DWORD - - - 
java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
locals: v0|QWORD[.] - - - - - v84|QWORD[.] int[0|0x0] - - - 
vobject:UTF_8$Encoder:0{averageBytesPerChar=float[1.1|0x3f8ccccd],maxBytesPerChar=float[3.0|0x40400000],state=int[0|0x0],charset=v0|QWORD[.],replacement=vobject:byte[]:1{0=int[63|0x3f]},malformedInputAction=Object[CodingErrorAction@561514572],unmappableCharacterAction=Object[CodingErrorAction@561514572],cachedDecoder=Object[null],repl=int[63|0x3f],sgp=Object[null]} Lsun/nio/cs/UTF_8$Encoder; float[1.1|0x3f8ccccd] float[3.0|0x40400000] int[0|0x0] v0|QWORD[.] vobject:byte[]:1{0=int[63|0x3f]} Object[CodingErrorAction@561514572] Object[CodingErrorAction@561514572] Object[null] int[63|0x3f] Object[null] 
vobject:byte[]:1{0=int[63|0x3f]} [B int[63|0x3f] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:54, 107] <|@ <|@
      nr   -1  <|@ instruction v124|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v124|QWORD[.]] destination: B127 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B168" 
    successors "B175" 
    xhandlers
    flags 
    probability 4591146247599425680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B169 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B151" 
    xhandlers
    flags 
    probability 4591146247599425680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B147 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B170" 
    successors "B175" 
    xhandlers
    flags 
    probability 4589525790865360492
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B171 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B151" 
    xhandlers
    flags 
    probability 4589525790865360492
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B149 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B41" 
    xhandlers
    flags 
    probability 4589168020290535424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589168020290535424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|QWORD] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B75" 
    xhandlers
    flags 
    probability 4589168020290535424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B69 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4589168020290535424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v47|QWORD] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4589168020290535424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v186|V256_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4595923419731591168
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v43|QWORD] destination: B44 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B44" 
    successors "B24" "B44" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4598175219545276416
    begin_IR
      LIR
      nr   -1  <|@ instruction [v42|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v39|QWORD[.] + v42|QWORD * 1], input: v186|V256_BYTE) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = LEA [v42|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v43|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4589168020290535424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|QWORD] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    probability 4589168020290535424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v74|QWORD] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589168020290535424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v50|QWORD] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4589168020290535424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v43|QWORD] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4589168020290535424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v185|V256_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4595923419731591168
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|QWORD] destination: B182 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B182" 
    successors "B58" "B182" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4598175219545276416
    begin_IR
      LIR
      nr   -1  <|@ instruction [v69|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v66|QWORD[.] + v69|QWORD * 1], input: v185|V256_BYTE) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = LEA [v69|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v70|QWORD, y: v68|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B182 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4589168020290535424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v71|QWORD] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" 
    xhandlers
    flags 
    probability 4589168020290535424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|QWORD] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4587366580439587224
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B14" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588015098785928576
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v189|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v189|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringCoding.encode(StringCoding.java:348) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v37|QWORD[.]] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B51" 
    xhandlers
    flags 
    probability 4587366580439587224
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B48" 
    successors "B52" 
    xhandlers
    flags 
    probability 4588015098785928576
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v188|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v188|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringCoding.encode(StringCoding.java:348) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v64|QWORD[.]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B75" 
    xhandlers
    flags 
    probability 4586916220476850176
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B71 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    probability 4586916220476850176
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" 
    xhandlers
    flags 
    probability 4585227370616586240
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4585227370616586240
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors 
    xhandlers
    flags 
    probability 4581465774900200016
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v65|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors 
    xhandlers
    flags 
    probability 4581465774900200016
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction VUCOMISD (x: v8|DOUBLE, y: v8|DOUBLE) <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B8 unorderedIsTrue: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4572414629676717184
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], long[0|0x0]] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B127" 
    xhandlers
    flags 
    probability 4576131664868101702
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B124 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B98" 
    xhandlers
    flags 
    probability 4573879563204190531
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B96 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4572414629676717184
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DOUBLE = VMOVE input: double[0.0|0x0] <|@ <|@
      nr   -1  <|@ instruction VUCOMISD (x: v8|DOUBLE, y: v12|DOUBLE) <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 unorderedIsTrue: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4567911030049346688
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|DWORD, v11|QWORD] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B51" 
    xhandlers
    flags 
    probability 4571838168924413760
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4571838168924413760
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4567911030049346688
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[2147483647|0x7fffffff], long[2147483647|0x7fffffff]] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B121" 
    xhandlers
    flags 
    probability 4546709724080164076
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-176737|0xfffffffffffd4d9f]] destination: B118 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B116" "B114" "B113" "B105" "B112" "B111" "B110" "B118" "B120" 
    successors 
    xhandlers
    flags 
    probability 4551212969642550037
    begin_IR
      LIR
      nr   -1  <|@ instruction [v116|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v116|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
locals: vobject:UTF_8$Encoder:0{averageBytesPerChar=float[1.1|0x3f8ccccd],maxBytesPerChar=float[3.0|0x40400000],state=int[0|0x0],charset=v0|QWORD[.],replacement=vobject:byte[]:1{0=int[63|0x3f]},malformedInputAction=Object[CodingErrorAction@561514572],unmappableCharacterAction=Object[CodingErrorAction@561514572],cachedDecoder=Object[null],repl=int[63|0x3f],sgp=Object[null]} v1|QWORD[.] v102|DWORD - v84|QWORD[.] v101|DWORD v103|DWORD - - - 
java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
locals: v0|QWORD[.] - - - - - v84|QWORD[.] int[0|0x0] - - - 
vobject:UTF_8$Encoder:0{averageBytesPerChar=float[1.1|0x3f8ccccd],maxBytesPerChar=float[3.0|0x40400000],state=int[0|0x0],charset=v0|QWORD[.],replacement=vobject:byte[]:1{0=int[63|0x3f]},malformedInputAction=Object[CodingErrorAction@561514572],unmappableCharacterAction=Object[CodingErrorAction@561514572],cachedDecoder=Object[null],repl=int[63|0x3f],sgp=Object[null]} Lsun/nio/cs/UTF_8$Encoder; float[1.1|0x3f8ccccd] float[3.0|0x40400000] int[0|0x0] v0|QWORD[.] vobject:byte[]:1{0=int[63|0x3f]} Object[CodingErrorAction@561514572] Object[CodingErrorAction@561514572] Object[null] int[63|0x3f] Object[null] 
vobject:byte[]:1{0=int[63|0x3f]} [B int[63|0x3f] 
>@ <|@ instruction DEOPT info [bci:54, 107] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B121" 
    xhandlers
    flags 
    probability 4546709015950195006
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-176737|0xfffffffffffd4d9f]] destination: B120 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B121" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-123931|0xfffffffffffe1be5]] destination: B111 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B181" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v191|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@455242270] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-113435|0xfffffffffffe44e5], v191|QWORD[.]] destination: B89 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B79" "B180" "B178" "B177" "B179" "B89" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr   -1  <|@ instruction [v172|DWORD, v173|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v172|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v173|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 70]
stack: int[0|0x0] 
locals: vobject:UTF_8$Encoder:0{averageBytesPerChar=float[0.0|0x0],maxBytesPerChar=float[0.0|0x0],state=int[0|0x0],charset=v0|QWORD[.],replacement=Object[null],malformedInputAction=Object[CodingErrorAction@250144264],unmappableCharacterAction=Object[CodingErrorAction@250144264],cachedDecoder=Object[null],repl=int[0|0x0],sgp=Object[null]} - float[1.1|0x3f8ccccd] float[3.0|0x40400000] vobject:byte[]:1{0=int[63|0x3f]} 
java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
locals: - - - - 
sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
locals: vobject:UTF_8$Encoder:0{averageBytesPerChar=float[0.0|0x0],maxBytesPerChar=float[0.0|0x0],state=int[0|0x0],charset=v0|QWORD[.],replacement=Object[null],malformedInputAction=Object[CodingErrorAction@250144264],unmappableCharacterAction=Object[CodingErrorAction@250144264],cachedDecoder=Object[null],repl=int[0|0x0],sgp=Object[null]} v0|QWORD[.] 
sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
locals: - - - 
sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
stack: vobject:UTF_8$Encoder:0{averageBytesPerChar=float[0.0|0x0],maxBytesPerChar=float[0.0|0x0],state=int[0|0x0],charset=v0|QWORD[.],replacement=Object[null],malformedInputAction=Object[CodingErrorAction@250144264],unmappableCharacterAction=Object[CodingErrorAction@250144264],cachedDecoder=Object[null],repl=int[0|0x0],sgp=Object[null]} 
locals: v0|QWORD[.] 
java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - - - - 
vobject:UTF_8$Encoder:0{averageBytesPerChar=float[0.0|0x0],maxBytesPerChar=float[0.0|0x0],state=int[0|0x0],charset=v0|QWORD[.],replacement=Object[null],malformedInputAction=Object[CodingErrorAction@250144264],unmappableCharacterAction=Object[CodingErrorAction@250144264],cachedDecoder=Object[null],repl=int[0|0x0],sgp=Object[null]} Lsun/nio/cs/UTF_8$Encoder; float[0.0|0x0] float[0.0|0x0] int[0|0x0] v0|QWORD[.] Object[null] Object[CodingErrorAction@250144264] Object[CodingErrorAction@250144264] Object[null] int[0|0x0] Object[null] 
vobject:byte[]:1{0=int[63|0x3f]} [B int[63|0x3f] 
>@ <|@ instruction DEOPT info [bci:70, 12, 6, 2, 6, 1] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B121" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-121363|0xfffffffffffe25ed]] destination: B112 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B121" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-128275|0xfffffffffffe0aed]] destination: B116 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B181" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v193|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@455242270] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-108315|0xfffffffffffe58e5], v193|QWORD[.]] destination: B179 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B181" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1621998909] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-107019|0xfffffffffffe5df5], v85|QWORD[.]] destination: B79 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B121" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-121107|0xfffffffffffe26ed]] destination: B105 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B181" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v190|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@455242270] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-113435|0xfffffffffffe44e5], v190|QWORD[.]] destination: B178 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B181" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v192|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@455242270] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-108315|0xfffffffffffe58e5], v192|QWORD[.]] destination: B180 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B181" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-106515|0xfffffffffffe5fed], Object[null]] destination: B177 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B121" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-116763|0xfffffffffffe37e5]] destination: B114 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B121" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-135195|0xfffffffffffdefe5]] destination: B113 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-94995|0xfffffffffffe8ced]] destination: B2 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B183" "B2" "B45" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v174|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v174|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringCoding.encode(StringCoding.java:348) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-92723|0xfffffffffffe95cd]] destination: B183 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-103699|0xfffffffffffe6aed]] destination: B45 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B121" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-126235|0xfffffffffffe12e5]] destination: B110 -> B121 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #57         // java.nio.charset.Charset.newEncoder:()java.nio.charset.CharsetEncoder
     4: astore        4
     6: iload_3       
     7: aload         4
     9: invokevirtual #58         // java.nio.charset.CharsetEncoder.maxBytesPerChar:()float
    12: invokestatic  #2          // scale:(int, float)int
    15: istore        5
    17: iload         5
    19: newarray      byte
    21: astore        6
    23: iload_3       
    24: ifne          30
    27: aload         6
    29: areturn       
    30: iconst_0      
    31: istore        7
    33: invokestatic  #8          // java.lang.System.getSecurityManager:()java.lang.SecurityManager
    36: ifnull        71
    39: aload_0       
    40: invokevirtual #31         // java.lang.Object.getClass:()java.lang.Class
    43: invokevirtual #32         // java.lang.Class.getClassLoader0:()java.lang.ClassLoader
    46: ifnonnull     53
    49: iconst_1      
    50: goto          54
    53: iconst_0      
    54: dup           
    55: istore        7
    57: ifne          71
    60: aload_1       
    61: iload_2       
    62: iload_2       
    63: iload_3       
    64: iadd          
    65: invokestatic  #59         // java.util.Arrays.copyOfRange:(char[], int, int)char[]
    68: astore_1      
    69: iconst_0      
    70: istore_2      
    71: aload         4
    73: getstatic     #34         // java.nio.charset.CodingErrorAction.REPLACE:java.nio.charset.CodingErrorAction
    76: invokevirtual #60         // java.nio.charset.CharsetEncoder.onMalformedInput:(java.nio.charset.CodingErrorAction)java.nio.charset.CharsetEncoder
    79: getstatic     #34         // java.nio.charset.CodingErrorAction.REPLACE:java.nio.charset.CodingErrorAction
    82: invokevirtual #61         // java.nio.charset.CharsetEncoder.onUnmappableCharacter:(java.nio.charset.CodingErrorAction)java.nio.charset.CharsetEncoder
    85: invokevirtual #62         // java.nio.charset.CharsetEncoder.reset:()java.nio.charset.CharsetEncoder
    88: pop           
    89: aload         4
    91: instanceof    #78         // sun.nio.cs.ArrayEncoder
    94: ifeq          125
    97: aload         4
    99: checkcast     #78         // sun.nio.cs.ArrayEncoder
   102: aload_1       
   103: iload_2       
   104: iload_3       
   105: aload         6
   107: invokeinterface#63, 5      // sun.nio.cs.ArrayEncoder.encode:(char[], int, int, byte[])int
   112: istore        8
   114: aload         6
   116: iload         8
   118: aload_0       
   119: iload         7
   121: invokestatic  #0          // safeTrim:(byte[], int, java.nio.charset.Charset, boolean)byte[]
   124: areturn       
   125: aload         6
   127: invokestatic  #64         // java.nio.ByteBuffer.wrap:(byte[])java.nio.ByteBuffer
   130: astore        8
   132: aload_1       
   133: iload_2       
   134: iload_3       
   135: invokestatic  #65         // java.nio.CharBuffer.wrap:(char[], int, int)java.nio.CharBuffer
   138: astore        9
   140: aload         4
   142: aload         9
   144: aload         8
   146: iconst_1      
   147: invokevirtual #66         // java.nio.charset.CharsetEncoder.encode:(java.nio.CharBuffer, java.nio.ByteBuffer, boolean)java.nio.charset.CoderResult
   150: astore        10
   152: aload         10
   154: invokevirtual #42         // java.nio.charset.CoderResult.isUnderflow:()boolean
   157: ifne          165
   160: aload         10
   162: invokevirtual #43         // java.nio.charset.CoderResult.throwException:()void
   165: aload         4
   167: aload         8
   169: invokevirtual #67         // java.nio.charset.CharsetEncoder.flush:(java.nio.ByteBuffer)java.nio.charset.CoderResult
   172: astore        10
   174: aload         10
   176: invokevirtual #42         // java.nio.charset.CoderResult.isUnderflow:()boolean
   179: ifne          187
   182: aload         10
   184: invokevirtual #43         // java.nio.charset.CoderResult.throwException:()void
   187: goto          202
   190: astore        10
   192: new           #16         // java.lang.Error
   195: dup           
   196: aload         10
   198: invokespecial #13         // java.lang.Error.<init>:(java.lang.Throwable)void
   201: athrow        
   202: aload         6
   204: aload         8
   206: invokevirtual #68         // java.nio.Buffer.position:()int
   209: aload_0       
   210: iload         7
   212: invokestatic  #0          // safeTrim:(byte[], int, java.nio.charset.Charset, boolean)byte[]
   215: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B183" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@b0dad63 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:48]
live-base-pointers: []
java.lang.StringCoding.encode(StringCoding.java:348) [bci: 0]
locals: r13|QWORD[.] r14|QWORD[.] rcx|DWORD r8|DWORD - - - - - - - 
>@ <|@ instruction CMP [r13|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/nio/cs/UTF_8;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B183 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.nio.charset.Charset] <|@ <|@
      nr   20  <|@ instruction rsi|DWORD[.] = MOV [rsi|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   22  <|@ st <@st|@reference-map: [rsi:0, r13:0, r14:0, stack:48]
live-base-pointers: []
java.lang.StringCoding.encode(StringCoding.java:348) [bci: 0]
locals: r13|QWORD[.] r14|QWORD[.] rcx|DWORD r8|DWORD - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   24  <|@ instruction CMP rsi|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[String:"1.4"] <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction r10|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@reference-map: [r10:0, r13:0, r14:0, stack:48]
live-base-pointers: []
java.lang.StringCoding.encode(StringCoding.java:348) [bci: 0]
locals: r13|QWORD[.] r14|QWORD[.] rcx|DWORD r8|DWORD - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   46  <|@ instruction xmm0|DOUBLE = VCVTSI2SD r8|DWORD <|@ <|@
      nr   48  <|@ instruction xmm1|DOUBLE = VMOVE input: double[3.0|0x4008000000000000] <|@ <|@
      nr   50  <|@ instruction xmm0|DOUBLE = VMULSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM <|@ <|@
      nr   52  <|@ instruction r11|DWORD = VCVTTSD2SI xmm0|DOUBLE nZ: XMM <|@ <|@
      nr   54  <|@ instruction r9|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr   56  <|@ instruction CMP r11|DWORD y: -2147483648 size: DWORD <|@ <|@
      nr   58  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  128  <|@ instruction stack:56|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B6" "B9" "B7" 
    successors "B11" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  134  <|@ instruction CMP [r10|DWORD[.] * 8 + 12] y: 3 size: DWORD <|@ <|@
      nr  136  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B47" "B50" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  440  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  442  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  444  <|@ instruction CMP r11|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  446  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B46 -> B47 falseDestination: B46 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  450  <|@ instruction r10|DWORD = LEA [r11|DWORD + 23] size: DWORD <|@ <|@
      nr  452  <|@ instruction r10|DWORD = AND r10|DWORD y: -8 size: DWORD <|@ <|@
      nr  454  <|@ instruction r10|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  456  <|@ instruction rbx|QWORD = ADD (x: rsi|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  458  <|@ instruction CMP (x: rbx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  460  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 4601697034453880144
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  474  <|@ instruction MOV (x: [r15|QWORD + 96], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  476  <|@ instruction AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  478  <|@ instruction AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  480  <|@ instruction AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  482  <|@ instruction AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  484  <|@ instruction MOV (x: [rsi|QWORD + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  486  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  488  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  490  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  496  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  498  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  500  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B49 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B49" "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  530  <|@ instruction CMP r14|DWORD y: 1 size: DWORD <|@ <|@
      nr  532  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  540  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  542  <|@ instruction rdx|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  544  <|@ instruction rcx|QWORD = LEA [rdx|QWORD - 32] size: QWORD <|@ <|@
      nr  546  <|@ instruction TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  548  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B54 -> B55 falseDestination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  552  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  554  <|@ instruction JUMP ~[] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B55" "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  580  <|@ instruction rcx|QWORD = LEA [rdx|QWORD - 16] size: QWORD <|@ <|@
      nr  582  <|@ instruction CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  584  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  592  <|@ instruction xmm0|V128_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  594  <|@ instruction J (address: [rsi|QWORD[.] + r10|QWORD * 1], input: xmm0|V128_BYTE) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  596  <|@ instruction rcx|QWORD = LEA [r10|QWORD + 16] size: QWORD <|@ <|@
      nr  598  <|@ instruction r10|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  600  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  604  <|@ instruction rcx|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  606  <|@ instruction CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  608  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B62 -> B63 falseDestination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  616  <|@ instruction xmm0|V64_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  618  <|@ instruction J (address: [rsi|QWORD[.] + r10|QWORD * 1], input: xmm0|V64_BYTE) nZ: XMM oh: VMOVQ <|@ <|@
      nr  620  <|@ instruction rcx|QWORD = LEA [r10|QWORD + 8] size: QWORD <|@ <|@
      nr  622  <|@ instruction r10|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  628  <|@ instruction rcx|QWORD = LEA [rdx|QWORD - 4] size: QWORD <|@ <|@
      nr  630  <|@ instruction CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  632  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  640  <|@ instruction xmm0|V32_BYTE = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  642  <|@ instruction J (address: [rsi|QWORD[.] + r10|QWORD * 1], input: xmm0|V32_BYTE) nZ: XMM oh: VMOVD <|@ <|@
      nr  644  <|@ instruction rcx|QWORD = LEA [r10|QWORD + 4] size: QWORD <|@ <|@
      nr  646  <|@ instruction r10|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  648  <|@ instruction JUMP ~[] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors "B69" "B70" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  652  <|@ instruction rdx|QWORD = DEC rdx|QWORD size: QWORD <|@ <|@
      nr  654  <|@ instruction CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  656  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  664  <|@ instruction MOVB (x: [rsi|QWORD[.] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  666  <|@ instruction rcx|QWORD = INC r10|QWORD size: QWORD <|@ <|@
      nr  668  <|@ instruction CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  670  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4594234569871327232
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  678  <|@ instruction MOVB (x: [rsi|QWORD[.] + r10|QWORD * 1 + 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  680  <|@ instruction rcx|QWORD = LEA [r10|QWORD + 2] size: QWORD <|@ <|@
      nr  682  <|@ instruction CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  684  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" 
    xhandlers
    flags 
    probability 4592264245034352640
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  692  <|@ instruction MOVB (x: [rsi|QWORD[.] + r10|QWORD * 1 + 2], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  694  <|@ instruction JUMP ~[] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B53" "B74" "B69" "B71" "B73" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  698  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  700  <|@ instruction BRANCH trueDestinationProbability: 0.04030493641460409 condition: = trueDestination: B75 -> B76 falseDestination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B78" 
    xhandlers
    flags 
    probability 4602315784579410907
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  708  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  710  <|@ instruction JUMP ~[] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B43" "B77" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4606819384206781403
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  714  <|@ instruction TEST (x: r10|QWORD[.], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr  716  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4606819384206781403
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  732  <|@ instruction CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  734  <|@ instruction r8|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr  736  <|@ instruction rsi|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  738  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  740  <|@ instruction CMP r8|DWORD y: 1 size: DWORD <|@ <|@
      nr  742  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B180" 
    xhandlers
    flags 
    probability 4602315784579410907
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  750  <|@ instruction rdx|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  752  <|@ instruction rcx|QWORD = MOVSXD stack:36|DWORD size: QWORD <|@ <|@
      nr  754  <|@ instruction rcx|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  756  <|@ instruction r11|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  758  <|@ instruction CMP (x: r11|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  760  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B82 -> B83 falseDestination: B82 -> B180 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B84" "B179" 
    xhandlers
    flags 
    probability 4602315784579410907
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  764  <|@ instruction CMP (x: rdx|DWORD, y: stack:36|DWORD) size: DWORD <|@ <|@
      nr  766  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B83 -> B84 falseDestination: B83 -> B179 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" 
    xhandlers
    flags 
    probability 4602315784579410907
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  770  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B81" "B84" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4606819384206781403
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  774  <|@ instruction CMP r8|DWORD y: 1 size: DWORD <|@ <|@
      nr  776  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B85 -> B86 falseDestination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B178" 
    xhandlers
    flags 
    probability 4602315784579410907
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  784  <|@ instruction r11|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  788  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B87 -> B88 falseDestination: B87 -> B178 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4602315784579410907
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  792  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  794  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B88 -> B89 falseDestination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4602315784579410907
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  810  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B86" "B90" 
    successors "B92" "B177" 
    xhandlers
    flags 
    probability 4606819384206781403
    begin_IR
      LIR
      nr  812  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  814  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.lang.System] <|@ <|@
      nr  816  <|@ instruction rsi|DWORD[.] = MOV [rsi|QWORD[.] + 116] size: DWORD <|@ <|@
      nr  818  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  820  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B91 -> B92 falseDestination: B91 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B93" 
    xhandlers
    flags 
    probability 4606819384206781403
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  824  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  826  <|@ instruction rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  828  <|@ instruction JUMP ~[] destination: B92 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4633239538722544628
    begin_IR
      LIR
      nr  836  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  838  <|@ instruction rsi|DWORD = MOVSX [r10|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  840  <|@ instruction CMP rsi|DWORD y: 128 size: WORD <|@ <|@
      nr  842  <|@ instruction BRANCH trueDestinationProbability: 0.9998902719253914 condition: |<| trueDestination: B94 -> B95 falseDestination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B93" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4633238656210209361
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  846  <|@ instruction MOVB (x: [rax|QWORD[.] + r11|DWORD * 1 + 16], y: rsi|DWORD) size: BYTE <|@ <|@
      nr  848  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  850  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  852  <|@ instruction JUMP ~[] destination: B95 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" "B95" 
    successors "B94" "B97" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4633373721283045376
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  832  <|@ instruction CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  834  <|@ instruction BRANCH trueDestinationProbability: 0.9835900530402635 condition: > trueDestination: B93 -> B94 falseDestination: B93 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B98" 
    xhandlers
    flags 
    probability 4606762903417324314
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  860  <|@ instruction JUMP ~[] destination: B97 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" "B96" 
    successors "B99" 
    xhandlers
    flags 
    probability 4606819384206781405
    begin_IR
      LIR
      nr  862  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  864  <|@ instruction r13|DWORD = ADD (x: stack:36|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  866  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  868  <|@ instruction r11|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction JUMP ~[] destination: B98 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" "B103" "B109" 
    successors "B100" "B115" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4607837160947116637
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr  874  <|@ instruction CMP (x: r13|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  876  <|@ instruction BRANCH trueDestinationProbability: 0.16211788211788214 condition: > trueDestination: B99 -> B100 falseDestination: B99 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B101" "B114" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4595858095840273263
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  880  <|@ instruction CMP (x: r11|DWORD, y: [r10|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  882  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B100 -> B101 falseDestination: B100 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" "B113" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4595858095840273263
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  886  <|@ instruction CMP (x: r14|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  888  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B101 -> B102 falseDestination: B101 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B103" "B104" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4595858095840273263
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  892  <|@ instruction rsi|DWORD = MOVZX [r10|QWORD[.] + r11|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  894  <|@ instruction rdx|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  896  <|@ instruction rcx|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  898  <|@ instruction CMP rsi|DWORD y: 128 size: DWORD <|@ <|@
      nr  900  <|@ instruction BRANCH trueDestinationProbability: 0.942568400295785 condition: |<| trueDestination: B102 -> B103 falseDestination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B99" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4595473874099309764
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  904  <|@ instruction MOVB (x: [rax|QWORD[.] + r8|DWORD * 1 + 16], y: rsi|DWORD) size: BYTE <|@ <|@
      nr  906  <|@ instruction r8|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  908  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  910  <|@ instruction JUMP ~[] destination: B103 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B105" "B106" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4577301169636469431
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  914  <|@ instruction CMP rsi|DWORD y: 2048 size: DWORD <|@ <|@
      nr  916  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B104 -> B105 falseDestination: B104 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B112" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4577301169636469431
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  934  <|@ instruction CMP rsi|DWORD y: 55296 size: DWORD <|@ <|@
      nr  936  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B106 -> B107 falseDestination: B106 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B108" "B111" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4577301169636469431
    begin_IR
      LIR
      nr  938  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  940  <|@ instruction CMP (x: r14|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  942  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B107 -> B108 falseDestination: B107 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4577301169636469431
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  946  <|@ instruction r9|DWORD = LEA [r8|DWORD + 2] size: DWORD <|@ <|@
      nr  948  <|@ instruction CMP (x: r14|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  950  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B108 -> B109 falseDestination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B99" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4577301169636469431
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  954  <|@ instruction r11|DWORD = SHR rsi|DWORD y: 12 size: DWORD <|@ <|@
      nr  956  <|@ instruction r11|DWORD = OR r11|DWORD y: 224 size: DWORD <|@ <|@
      nr  958  <|@ instruction MOVB (x: [rax|QWORD[.] + r8|DWORD * 1 + 16], y: r11|DWORD) size: BYTE <|@ <|@
      nr  960  <|@ instruction r11|DWORD = SHR rsi|DWORD y: 6 size: DWORD <|@ <|@
      nr  962  <|@ instruction r11|DWORD = AND r11|DWORD y: 63 size: DWORD <|@ <|@
      nr  964  <|@ instruction r11|DWORD = OR r11|DWORD y: 128 size: DWORD <|@ <|@
      nr  966  <|@ instruction MOVB (x: [rax|QWORD[.] + rcx|DWORD * 1 + 16], y: r11|DWORD) size: BYTE <|@ <|@
      nr  968  <|@ instruction rsi|DWORD = AND rsi|DWORD y: 63 size: DWORD <|@ <|@
      nr  970  <|@ instruction rsi|DWORD = OR rsi|DWORD y: 128 size: DWORD <|@ <|@
      nr  972  <|@ instruction MOVB (x: [rax|QWORD[.] + r9|DWORD * 1 + 16], y: rsi|DWORD) size: BYTE <|@ <|@
      nr  974  <|@ instruction r8|DWORD = LEA [r8|DWORD + 3] size: DWORD <|@ <|@
      nr  976  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  978  <|@ instruction JUMP ~[] destination: B109 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B116" "B117" 
    xhandlers
    flags 
    probability 4606819384206781406
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1052  <|@ instruction CMP (x: r14|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 1054  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" "B119" 
    xhandlers
    flags 
    probability 4606819384206781406
    begin_IR
      LIR
      nr 1070  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1072  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 1074  <|@ instruction BRANCH trueDestinationProbability: 9.999999999998899E-5 condition: < trueDestination: B117 -> B118 falseDestination: B117 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B120" "B122" 
    xhandlers
    flags 
    probability 4606818519790315256
    begin_IR
      LIR
      nr 1090  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1092  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr 1094  <|@ instruction BRANCH trueDestinationProbability: 9.999999999998899E-5 condition: < trueDestination: B119 -> B120 falseDestination: B119 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B123" "B126" 
    xhandlers
    flags 
    probability 4606817655460290752
    begin_IR
      LIR
      nr 1118  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1120  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 1122  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr 1124  <|@ instruction CMP r8|DWORD y: 16777215 size: DWORD <|@ <|@
      nr 1126  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B122 -> B123 falseDestination: B122 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B124" "B125" 
    xhandlers
    flags 
    probability 4605953411868789319
    begin_IR
      LIR
      nr 1128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1130  <|@ instruction rcx|DWORD = LEA [r8|DWORD + 23] size: DWORD <|@ <|@
      nr 1132  <|@ instruction rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD <|@ <|@
      nr 1134  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr 1136  <|@ instruction r9|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1138  <|@ instruction CMP (x: r9|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1140  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B123 -> B124 falseDestination: B123 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B128" 
    xhandlers
    flags 
    probability 4605875629945554190
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1154  <|@ instruction MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1156  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr 1158  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1160  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1162  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1164  <|@ instruction MOV (x: [rsi|QWORD + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1166  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1168  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr 1170  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1172  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1174  <|@ instruction stack:72|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1176  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1178  <|@ instruction JUMP ~[] destination: B125 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B125" "B127" 
    successors "B129" "B130" 
    xhandlers
    flags 
    probability 4606817655460290752
    begin_IR
      LIR
      nr 1204  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1206  <|@ instruction CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr 1208  <|@ instruction r8|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr 1210  <|@ instruction r10|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr 1212  <|@ instruction CMP r10|QWORD y: 1 size: QWORD <|@ <|@
      nr 1214  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B128 -> B129 falseDestination: B128 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B128" 
    successors "B131" "B132" 
    xhandlers
    flags 
    probability 4602314055832920256
    begin_IR
      LIR
      nr 1220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1222  <|@ instruction r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1224  <|@ instruction r11|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 1226  <|@ instruction r8|QWORD[.] = LEA [r8|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 1228  <|@ instruction r9|QWORD = LEA [r10|QWORD - 32] size: QWORD <|@ <|@
      nr 1230  <|@ instruction TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr 1232  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B130 -> B131 falseDestination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B135" 
    xhandlers
    flags 
    probability 4600153446854166672
    begin_IR
      LIR
      nr 1234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1236  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1238  <|@ instruction JUMP ~[] destination: B131 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B131" "B134" 
    successors "B136" "B137" 
    xhandlers
    flags 
    probability 4602314055832920256
    begin_IR
      LIR
      nr 1262  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1264  <|@ instruction r9|QWORD = LEA [r10|QWORD - 16] size: QWORD <|@ <|@
      nr 1266  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr 1268  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B135 -> B136 falseDestination: B135 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B138" 
    xhandlers
    flags 
    probability 4600153446854166672
    begin_IR
      LIR
      nr 1274  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1276  <|@ instruction xmm0|V128_BYTE = H [r8|QWORD[.] + rcx|QWORD * 1] nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1278  <|@ instruction J (address: [r11|QWORD[.] + rcx|QWORD * 1], input: xmm0|V128_BYTE) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1280  <|@ instruction r9|QWORD = LEA [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr 1282  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr 1284  <|@ instruction JUMP ~[] destination: B137 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B137" "B136" 
    successors "B139" "B140" 
    xhandlers
    flags 
    probability 4602314055832920256
    begin_IR
      LIR
      nr 1286  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1288  <|@ instruction r9|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr 1290  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr 1292  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B138 -> B139 falseDestination: B138 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B141" 
    xhandlers
    flags 
    probability 4600153446854166672
    begin_IR
      LIR
      nr 1298  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1300  <|@ instruction xmm0|V64_BYTE = H [r8|QWORD[.] + rcx|QWORD * 1] nZ: XMM oh: VMOVQ <|@ <|@
      nr 1302  <|@ instruction J (address: [r11|QWORD[.] + rcx|QWORD * 1], input: xmm0|V64_BYTE) nZ: XMM oh: VMOVQ <|@ <|@
      nr 1304  <|@ instruction r9|QWORD = LEA [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr 1306  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr 1308  <|@ instruction JUMP ~[] destination: B140 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" "B139" 
    successors "B142" "B143" 
    xhandlers
    flags 
    probability 4602314055832920256
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1312  <|@ instruction r9|QWORD = LEA [r10|QWORD - 4] size: QWORD <|@ <|@
      nr 1314  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr 1316  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B141 -> B142 falseDestination: B141 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B144" 
    xhandlers
    flags 
    probability 4600153446854166672
    begin_IR
      LIR
      nr 1322  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1324  <|@ instruction xmm0|V32_BYTE = H [r8|QWORD[.] + rcx|QWORD * 1] nZ: XMM oh: VMOVD <|@ <|@
      nr 1326  <|@ instruction J (address: [r11|QWORD[.] + rcx|QWORD * 1], input: xmm0|V32_BYTE) nZ: XMM oh: VMOVD <|@ <|@
      nr 1328  <|@ instruction r9|QWORD = LEA [rcx|QWORD + 4] size: QWORD <|@ <|@
      nr 1330  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr 1332  <|@ instruction JUMP ~[] destination: B143 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B143" "B142" 
    successors "B145" "B146" 
    xhandlers
    flags 
    probability 4602314055832920256
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1336  <|@ instruction r9|QWORD = DEC r10|QWORD size: QWORD <|@ <|@
      nr 1338  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr 1340  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B144 -> B145 falseDestination: B144 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B147" "B148" 
    xhandlers
    flags 
    probability 4600153446854166672
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1348  <|@ instruction rbx|DWORD = MOVSXB [r8|QWORD[.] + rcx|QWORD * 1] size: DWORD <|@ <|@
      nr 1350  <|@ instruction MOVB (x: [r11|QWORD[.] + rcx|QWORD * 1], y: rbx|DWORD) size: BYTE <|@ <|@
      nr 1352  <|@ instruction rbx|QWORD = INC rcx|QWORD size: QWORD <|@ <|@
      nr 1354  <|@ instruction CMP (x: rbx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr 1356  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B146 -> B147 falseDestination: B146 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" "B150" 
    xhandlers
    flags 
    probability 4598532990120101484
    begin_IR
      LIR
      nr 1362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1364  <|@ instruction rbx|DWORD = MOVSXB [r8|QWORD[.] + rcx|QWORD * 1 + 1] size: DWORD <|@ <|@
      nr 1366  <|@ instruction MOVB (x: [r11|QWORD[.] + rcx|QWORD * 1 + 1], y: rbx|DWORD) size: BYTE <|@ <|@
      nr 1368  <|@ instruction rbx|QWORD = LEA [rcx|QWORD + 2] size: QWORD <|@ <|@
      nr 1370  <|@ instruction CMP (x: rbx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr 1372  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B148 -> B149 falseDestination: B148 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B151" 
    xhandlers
    flags 
    probability 4596460075593828770
    begin_IR
      LIR
      nr 1378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1380  <|@ instruction r8|DWORD = MOVSXB [r8|QWORD[.] + rcx|QWORD * 1 + 2] size: DWORD <|@ <|@
      nr 1382  <|@ instruction MOVB (x: [r11|QWORD[.] + rcx|QWORD * 1 + 2], y: r8|DWORD) size: BYTE <|@ <|@
      nr 1384  <|@ instruction JUMP ~[] destination: B150 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B129" "B150" "B145" "B147" "B149" 
    successors "B152" "B174" 
    xhandlers
    flags 
    probability 4606817655460290752
    begin_IR
      LIR
      nr 1386  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1388  <|@ instruction r11|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr 1390  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1392  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B151 -> B152 falseDestination: B151 -> B174 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B175" 
    xhandlers
    flags 
    probability 4602314055832920256
    begin_IR
      LIR
      nr 1556  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1558  <|@ instruction JUMP ~[] destination: B174 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B174" "B172" "B167" "B169" "B171" 
    successors 
    xhandlers
    flags 
    probability 4606817655460290752
    begin_IR
      LIR
      nr 1560  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1562  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B45" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  140  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@644bd6a encoding: base: 0 shift: 3 <|@ <|@
      nr  144  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[3]{1, ., 4}] <|@ <|@
      nr  146  <|@ instruction rdx|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr  148  <|@ instruction rbx|DWORD = ARRAY_EQUALS (~array1Value: r10|QWORD[.], ~array2Value: rsi|QWORD[.], ~lengthValue: rdx|DWORD) {temp1: rdi|QWORD[*], temp2: rax|QWORD[*], temp3: rbp|QWORD, temp4: r13|QWORD, temp5: -, tempXMM: -, vectorTemp1: xmm0|DOUBLE, vectorTemp2: xmm1|DOUBLE} arrayBaseOffset: 16 arrayIndexScale: 2 kind: char <|@ <|@
      nr  150  <|@ instruction TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  152  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B16" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  156  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  158  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  160  <|@ instruction CMP r11|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  162  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B12 -> B13 falseDestination: B12 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  166  <|@ instruction r10|DWORD = LEA [r11|DWORD + 23] size: DWORD <|@ <|@
      nr  168  <|@ instruction r10|DWORD = AND r10|DWORD y: -8 size: DWORD <|@ <|@
      nr  170  <|@ instruction r10|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  172  <|@ instruction rbx|QWORD = ADD (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  174  <|@ instruction CMP (x: rbx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4601697034453880144
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction MOV (x: [r15|QWORD + 96], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  192  <|@ instruction AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  194  <|@ instruction AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  196  <|@ instruction AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  198  <|@ instruction AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  200  <|@ instruction MOV (x: [rsi|QWORD + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  202  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  204  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  206  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  208  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  210  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  214  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  216  <|@ instruction JUMP ~[] destination: B15 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  242  <|@ instruction CMP r14|DWORD y: 1 size: DWORD <|@ <|@
      nr  244  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  252  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  254  <|@ instruction rdx|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  256  <|@ instruction rcx|QWORD = LEA [rdx|QWORD - 32] size: QWORD <|@ <|@
      nr  258  <|@ instruction TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  260  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  264  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  266  <|@ instruction JUMP ~[] destination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  292  <|@ instruction rcx|QWORD = LEA [rdx|QWORD - 16] size: QWORD <|@ <|@
      nr  294  <|@ instruction CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  296  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  304  <|@ instruction xmm0|V128_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  306  <|@ instruction J (address: [rsi|QWORD[.] + r10|QWORD * 1], input: xmm0|V128_BYTE) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  308  <|@ instruction rcx|QWORD = LEA [r10|QWORD + 16] size: QWORD <|@ <|@
      nr  310  <|@ instruction r10|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  316  <|@ instruction rcx|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  318  <|@ instruction CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  320  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  328  <|@ instruction xmm0|V64_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  330  <|@ instruction J (address: [rsi|QWORD[.] + r10|QWORD * 1], input: xmm0|V64_BYTE) nZ: XMM oh: VMOVQ <|@ <|@
      nr  332  <|@ instruction rcx|QWORD = LEA [r10|QWORD + 8] size: QWORD <|@ <|@
      nr  334  <|@ instruction r10|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  340  <|@ instruction rcx|QWORD = LEA [rdx|QWORD - 4] size: QWORD <|@ <|@
      nr  342  <|@ instruction CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  344  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  352  <|@ instruction xmm0|V32_BYTE = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  354  <|@ instruction J (address: [rsi|QWORD[.] + r10|QWORD * 1], input: xmm0|V32_BYTE) nZ: XMM oh: VMOVD <|@ <|@
      nr  356  <|@ instruction rcx|QWORD = LEA [r10|QWORD + 4] size: QWORD <|@ <|@
      nr  358  <|@ instruction r10|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  364  <|@ instruction rdx|QWORD = DEC rdx|QWORD size: QWORD <|@ <|@
      nr  366  <|@ instruction CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  368  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  376  <|@ instruction MOVB (x: [rsi|QWORD[.] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  378  <|@ instruction rcx|QWORD = INC r10|QWORD size: QWORD <|@ <|@
      nr  380  <|@ instruction CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  382  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4594234569871327232
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  390  <|@ instruction MOVB (x: [rsi|QWORD[.] + r10|QWORD * 1 + 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  392  <|@ instruction rcx|QWORD = LEA [r10|QWORD + 2] size: QWORD <|@ <|@
      nr  394  <|@ instruction CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  396  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4592264245034352640
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  404  <|@ instruction MOVB (x: [rsi|QWORD[.] + r10|QWORD * 1 + 2], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B19" "B40" "B35" "B37" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  412  <|@ instruction BRANCH trueDestinationProbability: 0.04030493641460409 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B78" 
    xhandlers
    flags 
    probability 4602315784579410907
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  420  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  422  <|@ instruction JUMP ~[] destination: B43 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B85" 
    xhandlers
    flags 
    probability 4602315784579410907
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  746  <|@ instruction JUMP ~[] destination: B81 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B91" 
    xhandlers
    flags 
    probability 4602315784579410907
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  780  <|@ instruction JUMP ~[] destination: B86 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B153" "B154" 
    xhandlers
    flags 
    probability 4602314055832920256
    begin_IR
      LIR
      nr 1394  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1396  <|@ instruction r8|QWORD[.] = LEA [rax|QWORD[.] + r10|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1398  <|@ instruction r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD <|@ <|@
      nr 1400  <|@ instruction r10|QWORD = LEA [r11|QWORD - 32] size: QWORD <|@ <|@
      nr 1402  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1404  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B152 -> B153 falseDestination: B152 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B157" 
    xhandlers
    flags 
    probability 4600153446854166672
    begin_IR
      LIR
      nr 1406  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1408  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1410  <|@ instruction JUMP ~[] destination: B153 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B153" "B156" 
    successors "B158" "B159" 
    xhandlers
    flags 
    probability 4602314055832920256
    begin_IR
      LIR
      nr 1434  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1436  <|@ instruction r10|QWORD = LEA [r11|QWORD - 16] size: QWORD <|@ <|@
      nr 1438  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1440  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B157 -> B158 falseDestination: B157 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B157" 
    successors "B160" 
    xhandlers
    flags 
    probability 4600153446854166672
    begin_IR
      LIR
      nr 1446  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1448  <|@ instruction xmm0|V128_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr 1450  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 1], input: xmm0|V128_BYTE) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1452  <|@ instruction r10|QWORD = LEA [r9|QWORD + 16] size: QWORD <|@ <|@
      nr 1454  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1456  <|@ instruction JUMP ~[] destination: B159 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B159" "B158" 
    successors "B161" "B162" 
    xhandlers
    flags 
    probability 4602314055832920256
    begin_IR
      LIR
      nr 1458  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1460  <|@ instruction r10|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr 1462  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1464  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B160 -> B161 falseDestination: B160 -> B162 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B163" 
    xhandlers
    flags 
    probability 4600153446854166672
    begin_IR
      LIR
      nr 1470  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1472  <|@ instruction xmm0|V64_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr 1474  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 1], input: xmm0|V64_BYTE) nZ: XMM oh: VMOVQ <|@ <|@
      nr 1476  <|@ instruction r10|QWORD = LEA [r9|QWORD + 8] size: QWORD <|@ <|@
      nr 1478  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1480  <|@ instruction JUMP ~[] destination: B162 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B162" "B161" 
    successors "B164" "B165" 
    xhandlers
    flags 
    probability 4602314055832920256
    begin_IR
      LIR
      nr 1482  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1484  <|@ instruction r10|QWORD = LEA [r11|QWORD - 4] size: QWORD <|@ <|@
      nr 1486  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1488  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B163 -> B164 falseDestination: B163 -> B165 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B163" 
    successors "B166" 
    xhandlers
    flags 
    probability 4600153446854166672
    begin_IR
      LIR
      nr 1494  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1496  <|@ instruction xmm0|V32_BYTE = L oc: SIMD<0,0,0,0> <|@ <|@
      nr 1498  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 1], input: xmm0|V32_BYTE) nZ: XMM oh: VMOVD <|@ <|@
      nr 1500  <|@ instruction r10|QWORD = LEA [r9|QWORD + 4] size: QWORD <|@ <|@
      nr 1502  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1504  <|@ instruction JUMP ~[] destination: B165 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B165" "B164" 
    successors "B167" "B168" 
    xhandlers
    flags 
    probability 4602314055832920256
    begin_IR
      LIR
      nr 1506  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1508  <|@ instruction r11|QWORD = DEC r11|QWORD size: QWORD <|@ <|@
      nr 1510  <|@ instruction CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1512  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B166 -> B167 falseDestination: B166 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B169" "B170" 
    xhandlers
    flags 
    probability 4600153446854166672
    begin_IR
      LIR
      nr 1518  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1520  <|@ instruction MOVB (x: [r8|QWORD[.] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1522  <|@ instruction r10|QWORD = INC r9|QWORD size: QWORD <|@ <|@
      nr 1524  <|@ instruction CMP (x: r10|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1526  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B168 -> B169 falseDestination: B168 -> B170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B168" 
    successors "B171" "B172" 
    xhandlers
    flags 
    probability 4598532990120101484
    begin_IR
      LIR
      nr 1532  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1534  <|@ instruction MOVB (x: [r8|QWORD[.] + r9|QWORD * 1 + 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1536  <|@ instruction r10|QWORD = LEA [r9|QWORD + 2] size: QWORD <|@ <|@
      nr 1538  <|@ instruction CMP (x: r10|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1540  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B170 -> B171 falseDestination: B170 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B170" 
    successors "B175" 
    xhandlers
    flags 
    probability 4596460075593828770
    begin_IR
      LIR
      nr 1546  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1548  <|@ instruction MOVB (x: [r8|QWORD[.] + r9|QWORD * 1 + 2], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1550  <|@ instruction JUMP ~[] destination: B172 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B128" 
    successors "B151" 
    xhandlers
    flags 
    probability 4602314055832920256
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1218  <|@ instruction JUMP ~[] destination: B129 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B75" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  536  <|@ instruction JUMP ~[] destination: B53 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B41" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  248  <|@ instruction JUMP ~[] destination: B19 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B163" 
    successors "B166" 
    xhandlers
    flags 
    probability 4593306856578179264
    begin_IR
      LIR
      nr 1490  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1492  <|@ instruction JUMP ~[] destination: B164 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B175" 
    xhandlers
    flags 
    probability 4593306856578179264
    begin_IR
      LIR
      nr 1514  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1516  <|@ instruction JUMP ~[] destination: B167 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B155" 
    xhandlers
    flags 
    probability 4593306856578179264
    begin_IR
      LIR
      nr 1412  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1414  <|@ instruction xmm0|V256_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr 1416  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1418  <|@ instruction JUMP ~[] destination: B154 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B155" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4600153446854166672
    begin_IR
      LIR
      nr 1552  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1554  <|@ instruction JUMP ~[] destination: B173 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B154" "B173" 
    successors "B156" "B173" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4602314055832920256
    begin_IR
      LIR
      nr 1420  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1422  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 1], input: xmm0|V256_BYTE) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1424  <|@ instruction r9|QWORD = LEA [r9|QWORD + 32] size: QWORD <|@ <|@
      nr 1426  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1428  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B155 -> B156 falseDestination: B155 -> B173 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B157" 
    successors "B160" 
    xhandlers
    flags 
    probability 4593306856578179264
    begin_IR
      LIR
      nr 1442  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1444  <|@ instruction JUMP ~[] destination: B158 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B163" 
    xhandlers
    flags 
    probability 4593306856578179264
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1468  <|@ instruction JUMP ~[] destination: B161 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B157" 
    xhandlers
    flags 
    probability 4593306856578179264
    begin_IR
      LIR
      nr 1430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1432  <|@ instruction JUMP ~[] destination: B156 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B144" 
    xhandlers
    flags 
    probability 4593306856578179264
    begin_IR
      LIR
      nr 1318  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1320  <|@ instruction JUMP ~[] destination: B142 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B151" 
    xhandlers
    flags 
    probability 4593306856578179264
    begin_IR
      LIR
      nr 1342  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1344  <|@ instruction JUMP ~[] destination: B145 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B133" 
    xhandlers
    flags 
    probability 4593306856578179264
    begin_IR
      LIR
      nr 1240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1242  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1244  <|@ instruction JUMP ~[] destination: B132 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B133" 
    successors "B133" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4600153446854166672
    begin_IR
      LIR
      nr 1564  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1566  <|@ instruction JUMP ~[] destination: B176 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" "B176" 
    successors "B134" "B176" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4602314055832920256
    begin_IR
      LIR
      nr 1246  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1248  <|@ instruction xmm0|V256_BYTE = H [r8|QWORD[.] + rcx|QWORD * 1] nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1250  <|@ instruction J (address: [r11|QWORD[.] + rcx|QWORD * 1], input: xmm0|V256_BYTE) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1252  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 32] size: QWORD <|@ <|@
      nr 1254  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr 1256  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B133 -> B134 falseDestination: B133 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B138" 
    xhandlers
    flags 
    probability 4593306856578179264
    begin_IR
      LIR
      nr 1270  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1272  <|@ instruction JUMP ~[] destination: B136 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B133" 
    successors "B135" 
    xhandlers
    flags 
    probability 4593306856578179264
    begin_IR
      LIR
      nr 1258  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1260  <|@ instruction JUMP ~[] destination: B134 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B141" 
    xhandlers
    flags 
    probability 4593306856578179264
    begin_IR
      LIR
      nr 1294  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1296  <|@ instruction JUMP ~[] destination: B139 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B127" 
    xhandlers
    flags 
    probability 4591578369395176395
    begin_IR
      LIR
      nr 1180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1182  <|@ instruction stack:60|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1184  <|@ instruction stack:64|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1186  <|@ instruction stack:72|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1188  <|@ instruction JUMP ~[] destination: B126 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B126" "B124" 
    successors "B128" 
    xhandlers
    flags 
    probability 4592200624781057428
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1192  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1194  <|@ instruction rdx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1196  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1198  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1200  <|@ st <@st|@reference-map: [stack:8, stack:32, stack:48]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
locals: vobject:UTF_8$Encoder:0{averageBytesPerChar=float[1.1|0x3f8ccccd],maxBytesPerChar=float[3.0|0x40400000],state=int[0|0x0],charset=stack:48|QWORD[.],replacement=vobject:byte[]:1{0=int[63|0x3f]},malformedInputAction=Object[CodingErrorAction@561514572],unmappableCharacterAction=Object[CodingErrorAction@561514572],cachedDecoder=Object[null],repl=int[63|0x3f],sgp=Object[null]} stack:32|QWORD[.] stack:60|DWORD - stack:72|QWORD[.] stack:64|DWORD r13|DWORD - - - 
java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
locals: stack:48|QWORD[.] - - - - - stack:72|QWORD[.] int[0|0x0] - - - 
vobject:UTF_8$Encoder:0{averageBytesPerChar=float[1.1|0x3f8ccccd],maxBytesPerChar=float[3.0|0x40400000],state=int[0|0x0],charset=stack:48|QWORD[.],replacement=vobject:byte[]:1{0=int[63|0x3f]},malformedInputAction=Object[CodingErrorAction@561514572],unmappableCharacterAction=Object[CodingErrorAction@561514572],cachedDecoder=Object[null],repl=int[63|0x3f],sgp=Object[null]} Lsun/nio/cs/UTF_8$Encoder; float[1.1|0x3f8ccccd] float[3.0|0x40400000] int[0|0x0] stack:48|QWORD[.] vobject:byte[]:1{0=int[63|0x3f]} Object[CodingErrorAction@561514572] Object[CodingErrorAction@561514572] Object[null] int[63|0x3f] Object[null] 
vobject:byte[]:1{0=int[63|0x3f]} [B int[63|0x3f] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:54, 107] <|@ <|@
      nr 1202  <|@ instruction JUMP ~[] destination: B127 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B168" 
    successors "B175" 
    xhandlers
    flags 
    probability 4591146247599425680
    begin_IR
      LIR
      nr 1528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1530  <|@ instruction JUMP ~[] destination: B169 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B151" 
    xhandlers
    flags 
    probability 4591146247599425680
    begin_IR
      LIR
      nr 1358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1360  <|@ instruction JUMP ~[] destination: B147 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B170" 
    successors "B175" 
    xhandlers
    flags 
    probability 4589525790865360492
    begin_IR
      LIR
      nr 1542  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1544  <|@ instruction JUMP ~[] destination: B171 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B151" 
    xhandlers
    flags 
    probability 4589525790865360492
    begin_IR
      LIR
      nr 1374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1376  <|@ instruction JUMP ~[] destination: B149 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B41" 
    xhandlers
    flags 
    probability 4589168020290535424
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ instruction JUMP ~[] destination: B35 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589168020290535424
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  300  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B75" 
    xhandlers
    flags 
    probability 4589168020290535424
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  660  <|@ instruction JUMP ~[] destination: B69 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4589168020290535424
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4589168020290535424
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ instruction xmm0|V256_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  272  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  274  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4595923419731591168
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  426  <|@ instruction JUMP ~[] destination: B44 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B44" 
    successors "B24" "B44" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4598175219545276416
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  278  <|@ instruction J (address: [rsi|QWORD[.] + r10|QWORD * 1], input: xmm0|V256_BYTE) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  280  <|@ instruction r10|QWORD = LEA [r10|QWORD + 32] size: QWORD <|@ <|@
      nr  282  <|@ instruction CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  284  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4589168020290535424
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  636  <|@ instruction JUMP ~[] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    probability 4589168020290535424
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  612  <|@ instruction JUMP ~[] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589168020290535424
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  348  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4589168020290535424
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  288  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4589168020290535424
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  558  <|@ instruction xmm0|V256_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  560  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  562  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4595923419731591168
    begin_IR
      LIR
      nr 1622  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1624  <|@ instruction JUMP ~[] destination: B182 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B182" 
    successors "B58" "B182" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4598175219545276416
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  566  <|@ instruction J (address: [rsi|QWORD[.] + r10|QWORD * 1], input: xmm0|V256_BYTE) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  568  <|@ instruction r10|QWORD = LEA [r10|QWORD + 32] size: QWORD <|@ <|@
      nr  570  <|@ instruction CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  572  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B182 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4589168020290535424
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  588  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" 
    xhandlers
    flags 
    probability 4589168020290535424
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  576  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4587366580439587224
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  220  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ instruction stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B14" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588015098785928576
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  230  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  232  <|@ instruction rdx|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  236  <|@ st <@st|@reference-map: [stack:32, stack:48]
live-base-pointers: []
java.lang.StringCoding.encode(StringCoding.java:348) [bci: 0]
locals: stack:48|QWORD[.] stack:32|QWORD[.] stack:36|DWORD r13|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B51" 
    xhandlers
    flags 
    probability 4587366580439587224
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  506  <|@ instruction stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  508  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  510  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B48" 
    successors "B52" 
    xhandlers
    flags 
    probability 4588015098785928576
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  516  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  518  <|@ instruction rdx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  520  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  522  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  524  <|@ st <@st|@reference-map: [stack:32, stack:48]
live-base-pointers: []
java.lang.StringCoding.encode(StringCoding.java:348) [bci: 0]
locals: stack:48|QWORD[.] stack:32|QWORD[.] stack:36|DWORD r13|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B75" 
    xhandlers
    flags 
    probability 4586916220476850176
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  674  <|@ instruction JUMP ~[] destination: B71 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    probability 4586916220476850176
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  386  <|@ instruction JUMP ~[] destination: B37 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" 
    xhandlers
    flags 
    probability 4585227370616586240
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  688  <|@ instruction JUMP ~[] destination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4585227370616586240
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors 
    xhandlers
    flags 
    probability 4581465774900200016
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  704  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors 
    xhandlers
    flags 
    probability 4581465774900200016
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  416  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ instruction stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction VUCOMISD (x: xmm0|DOUBLE, y: xmm0|DOUBLE) <|@ <|@
      nr   70  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B8 unorderedIsTrue: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4572414629676717184
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  112  <|@ instruction stack:56|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  114  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  116  <|@ instruction r8|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  120  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction r13|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction JUMP ~[] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B127" 
    xhandlers
    flags 
    probability 4576131664868101702
    begin_IR
      LIR
      nr 1142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1144  <|@ instruction stack:60|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1146  <|@ instruction stack:64|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1148  <|@ instruction stack:72|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1150  <|@ instruction JUMP ~[] destination: B124 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B98" 
    xhandlers
    flags 
    probability 4573879563204190531
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  856  <|@ instruction JUMP ~[] destination: B96 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4572414629676717184
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction xmm1|DOUBLE = VMOVE input: double[0.0|0x0] <|@ <|@
      nr   76  <|@ instruction VUCOMISD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) <|@ <|@
      nr   78  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 unorderedIsTrue: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4567911030049346688
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   98  <|@ instruction stack:56|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction r8|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction r13|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B51" 
    xhandlers
    flags 
    probability 4571838168924413760
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  464  <|@ instruction stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  466  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  470  <|@ instruction JUMP ~[] destination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4571838168924413760
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  180  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  186  <|@ instruction JUMP ~[] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4567911030049346688
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ instruction stack:56|QWORD = MOVE input: long[2147483647|0x7fffffff] <|@ <|@
      nr   84  <|@ instruction r11|DWORD = MOVE input: int[2147483647|0x7fffffff] <|@ <|@
      nr   86  <|@ instruction r8|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction r13|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   94  <|@ instruction JUMP ~[] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B121" 
    xhandlers
    flags 
    probability 4546709724080164076
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1078  <|@ instruction stack:60|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1080  <|@ instruction stack:64|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1082  <|@ instruction r10|DWORD = MOVE input: int[-176737|0xfffffffffffd4d9f] <|@ <|@
      nr 1084  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1086  <|@ instruction r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1088  <|@ instruction JUMP ~[] destination: B118 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B116" "B114" "B113" "B105" "B112" "B111" "B110" "B118" "B120" 
    successors 
    xhandlers
    flags 
    probability 4551212969642550037
    begin_IR
      LIR
      nr 1110  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1112  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1114  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1116  <|@ st <@st|@reference-map: [r8:0, stack:32, stack:48]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
locals: vobject:UTF_8$Encoder:0{averageBytesPerChar=float[1.1|0x3f8ccccd],maxBytesPerChar=float[3.0|0x40400000],state=int[0|0x0],charset=stack:48|QWORD[.],replacement=vobject:byte[]:1{0=int[63|0x3f]},malformedInputAction=Object[CodingErrorAction@561514572],unmappableCharacterAction=Object[CodingErrorAction@561514572],cachedDecoder=Object[null],repl=int[63|0x3f],sgp=Object[null]} stack:32|QWORD[.] stack:60|DWORD - r8|QWORD[.] stack:64|DWORD r13|DWORD - - - 
java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
locals: stack:48|QWORD[.] - - - - - r8|QWORD[.] int[0|0x0] - - - 
vobject:UTF_8$Encoder:0{averageBytesPerChar=float[1.1|0x3f8ccccd],maxBytesPerChar=float[3.0|0x40400000],state=int[0|0x0],charset=stack:48|QWORD[.],replacement=vobject:byte[]:1{0=int[63|0x3f]},malformedInputAction=Object[CodingErrorAction@561514572],unmappableCharacterAction=Object[CodingErrorAction@561514572],cachedDecoder=Object[null],repl=int[63|0x3f],sgp=Object[null]} Lsun/nio/cs/UTF_8$Encoder; float[1.1|0x3f8ccccd] float[3.0|0x40400000] int[0|0x0] stack:48|QWORD[.] vobject:byte[]:1{0=int[63|0x3f]} Object[CodingErrorAction@561514572] Object[CodingErrorAction@561514572] Object[null] int[63|0x3f] Object[null] 
vobject:byte[]:1{0=int[63|0x3f]} [B int[63|0x3f] 
>@ <|@ instruction DEOPT info [bci:54, 107] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B121" 
    xhandlers
    flags 
    probability 4546709015950195006
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1098  <|@ instruction stack:60|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1100  <|@ instruction stack:64|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1102  <|@ instruction r10|DWORD = MOVE input: int[-176737|0xfffffffffffd4d9f] <|@ <|@
      nr 1104  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1106  <|@ instruction r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1108  <|@ instruction JUMP ~[] destination: B120 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B121" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  996  <|@ instruction stack:60|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  998  <|@ instruction stack:64|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1000  <|@ instruction r10|DWORD = MOVE input: int[-123931|0xfffffffffffe1be5] <|@ <|@
      nr 1002  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1004  <|@ instruction r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1006  <|@ instruction JUMP ~[] destination: B111 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B181" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  798  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@455242270] <|@ <|@
      nr  800  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  802  <|@ instruction r10|DWORD = MOVE input: int[-113435|0xfffffffffffe44e5] <|@ <|@
      nr  804  <|@ instruction rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  806  <|@ instruction JUMP ~[] destination: B89 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B79" "B180" "B178" "B177" "B179" "B89" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr 1614  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1616  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1618  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr 1620  <|@ st <@st|@reference-map: [stack:32, stack:48]
live-base-pointers: []
java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 70]
stack: int[0|0x0] 
locals: vobject:UTF_8$Encoder:0{averageBytesPerChar=float[0.0|0x0],maxBytesPerChar=float[0.0|0x0],state=int[0|0x0],charset=stack:48|QWORD[.],replacement=Object[null],malformedInputAction=Object[CodingErrorAction@250144264],unmappableCharacterAction=Object[CodingErrorAction@250144264],cachedDecoder=Object[null],repl=int[0|0x0],sgp=Object[null]} - float[1.1|0x3f8ccccd] float[3.0|0x40400000] vobject:byte[]:1{0=int[63|0x3f]} 
java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
locals: - - - - 
sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
locals: vobject:UTF_8$Encoder:0{averageBytesPerChar=float[0.0|0x0],maxBytesPerChar=float[0.0|0x0],state=int[0|0x0],charset=stack:48|QWORD[.],replacement=Object[null],malformedInputAction=Object[CodingErrorAction@250144264],unmappableCharacterAction=Object[CodingErrorAction@250144264],cachedDecoder=Object[null],repl=int[0|0x0],sgp=Object[null]} stack:48|QWORD[.] 
sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
locals: - - - 
sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
stack: vobject:UTF_8$Encoder:0{averageBytesPerChar=float[0.0|0x0],maxBytesPerChar=float[0.0|0x0],state=int[0|0x0],charset=stack:48|QWORD[.],replacement=Object[null],malformedInputAction=Object[CodingErrorAction@250144264],unmappableCharacterAction=Object[CodingErrorAction@250144264],cachedDecoder=Object[null],repl=int[0|0x0],sgp=Object[null]} 
locals: stack:48|QWORD[.] 
java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
locals: stack:48|QWORD[.] stack:32|QWORD[.] rcx|DWORD r13|DWORD - - - - - - - 
vobject:UTF_8$Encoder:0{averageBytesPerChar=float[0.0|0x0],maxBytesPerChar=float[0.0|0x0],state=int[0|0x0],charset=stack:48|QWORD[.],replacement=Object[null],malformedInputAction=Object[CodingErrorAction@250144264],unmappableCharacterAction=Object[CodingErrorAction@250144264],cachedDecoder=Object[null],repl=int[0|0x0],sgp=Object[null]} Lsun/nio/cs/UTF_8$Encoder; float[0.0|0x0] float[0.0|0x0] int[0|0x0] stack:48|QWORD[.] Object[null] Object[CodingErrorAction@250144264] Object[CodingErrorAction@250144264] Object[null] int[0|0x0] Object[null] 
vobject:byte[]:1{0=int[63|0x3f]} [B int[63|0x3f] 
>@ <|@ instruction DEOPT info [bci:70, 12, 6, 2, 6, 1] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B121" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1010  <|@ instruction stack:60|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1012  <|@ instruction stack:64|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1014  <|@ instruction r10|DWORD = MOVE input: int[-121363|0xfffffffffffe25ed] <|@ <|@
      nr 1016  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1018  <|@ instruction r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction JUMP ~[] destination: B112 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B121" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1056  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1058  <|@ instruction stack:60|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1060  <|@ instruction stack:64|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1062  <|@ instruction r10|DWORD = MOVE input: int[-128275|0xfffffffffffe0aed] <|@ <|@
      nr 1064  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1066  <|@ instruction r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1068  <|@ instruction JUMP ~[] destination: B116 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B181" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1590  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1592  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@455242270] <|@ <|@
      nr 1594  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1596  <|@ instruction r10|DWORD = MOVE input: int[-108315|0xfffffffffffe58e5] <|@ <|@
      nr 1598  <|@ instruction rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1600  <|@ instruction JUMP ~[] destination: B179 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B181" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  720  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1621998909] <|@ <|@
      nr  722  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  724  <|@ instruction r10|DWORD = MOVE input: int[-107019|0xfffffffffffe5df5] <|@ <|@
      nr  726  <|@ instruction rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  728  <|@ instruction JUMP ~[] destination: B79 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B121" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  918  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  920  <|@ instruction stack:60|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  922  <|@ instruction stack:64|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  924  <|@ instruction r10|DWORD = MOVE input: int[-121107|0xfffffffffffe26ed] <|@ <|@
      nr  926  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  928  <|@ instruction r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  930  <|@ instruction JUMP ~[] destination: B105 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B181" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1578  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1580  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@455242270] <|@ <|@
      nr 1582  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1584  <|@ instruction r10|DWORD = MOVE input: int[-113435|0xfffffffffffe44e5] <|@ <|@
      nr 1586  <|@ instruction rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1588  <|@ instruction JUMP ~[] destination: B178 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B181" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1602  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1604  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@455242270] <|@ <|@
      nr 1606  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1608  <|@ instruction r10|DWORD = MOVE input: int[-108315|0xfffffffffffe58e5] <|@ <|@
      nr 1610  <|@ instruction rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1612  <|@ instruction JUMP ~[] destination: B180 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B181" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1568  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1570  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1572  <|@ instruction rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1574  <|@ instruction r10|DWORD = MOVE input: int[-106515|0xfffffffffffe5fed] <|@ <|@
      nr 1576  <|@ instruction JUMP ~[] destination: B177 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B121" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1038  <|@ instruction stack:60|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1040  <|@ instruction stack:64|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1042  <|@ instruction r10|DWORD = MOVE input: int[-116763|0xfffffffffffe37e5] <|@ <|@
      nr 1044  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1046  <|@ instruction r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ instruction JUMP ~[] destination: B114 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B121" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1024  <|@ instruction stack:60|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1026  <|@ instruction stack:64|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1028  <|@ instruction r10|DWORD = MOVE input: int[-135195|0xfffffffffffdefe5] <|@ <|@
      nr 1030  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1032  <|@ instruction r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1034  <|@ instruction JUMP ~[] destination: B113 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction r10|DWORD = MOVE input: int[-94995|0xfffffffffffe8ced] <|@ <|@
      nr   32  <|@ instruction stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction JUMP ~[] destination: B2 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B183" "B2" "B45" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1638  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1640  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1642  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1644  <|@ st <@st|@reference-map: [stack:32, stack:48]
live-base-pointers: []
java.lang.StringCoding.encode(StringCoding.java:348) [bci: 0]
locals: stack:48|QWORD[.] stack:32|QWORD[.] stack:36|DWORD r13|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1626  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1628  <|@ instruction r10|DWORD = MOVE input: int[-92723|0xfffffffffffe95cd] <|@ <|@
      nr 1630  <|@ instruction stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1632  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1634  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1636  <|@ instruction JUMP ~[] destination: B183 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  430  <|@ instruction r10|DWORD = MOVE input: int[-103699|0xfffffffffffe6aed] <|@ <|@
      nr  432  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  434  <|@ instruction stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B45 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B121" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  982  <|@ instruction stack:60|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  984  <|@ instruction stack:64|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  986  <|@ instruction r10|DWORD = MOVE input: int[-126235|0xfffffffffffe12e5] <|@ <|@
      nr  988  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  990  <|@ instruction r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  992  <|@ instruction JUMP ~[] destination: B110 -> B121 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #57         // java.nio.charset.Charset.newEncoder:()java.nio.charset.CharsetEncoder
     4: astore        4
     6: iload_3       
     7: aload         4
     9: invokevirtual #58         // java.nio.charset.CharsetEncoder.maxBytesPerChar:()float
    12: invokestatic  #2          // scale:(int, float)int
    15: istore        5
    17: iload         5
    19: newarray      byte
    21: astore        6
    23: iload_3       
    24: ifne          30
    27: aload         6
    29: areturn       
    30: iconst_0      
    31: istore        7
    33: invokestatic  #8          // java.lang.System.getSecurityManager:()java.lang.SecurityManager
    36: ifnull        71
    39: aload_0       
    40: invokevirtual #31         // java.lang.Object.getClass:()java.lang.Class
    43: invokevirtual #32         // java.lang.Class.getClassLoader0:()java.lang.ClassLoader
    46: ifnonnull     53
    49: iconst_1      
    50: goto          54
    53: iconst_0      
    54: dup           
    55: istore        7
    57: ifne          71
    60: aload_1       
    61: iload_2       
    62: iload_2       
    63: iload_3       
    64: iadd          
    65: invokestatic  #59         // java.util.Arrays.copyOfRange:(char[], int, int)char[]
    68: astore_1      
    69: iconst_0      
    70: istore_2      
    71: aload         4
    73: getstatic     #34         // java.nio.charset.CodingErrorAction.REPLACE:java.nio.charset.CodingErrorAction
    76: invokevirtual #60         // java.nio.charset.CharsetEncoder.onMalformedInput:(java.nio.charset.CodingErrorAction)java.nio.charset.CharsetEncoder
    79: getstatic     #34         // java.nio.charset.CodingErrorAction.REPLACE:java.nio.charset.CodingErrorAction
    82: invokevirtual #61         // java.nio.charset.CharsetEncoder.onUnmappableCharacter:(java.nio.charset.CodingErrorAction)java.nio.charset.CharsetEncoder
    85: invokevirtual #62         // java.nio.charset.CharsetEncoder.reset:()java.nio.charset.CharsetEncoder
    88: pop           
    89: aload         4
    91: instanceof    #78         // sun.nio.cs.ArrayEncoder
    94: ifeq          125
    97: aload         4
    99: checkcast     #78         // sun.nio.cs.ArrayEncoder
   102: aload_1       
   103: iload_2       
   104: iload_3       
   105: aload         6
   107: invokeinterface#63, 5      // sun.nio.cs.ArrayEncoder.encode:(char[], int, int, byte[])int
   112: istore        8
   114: aload         6
   116: iload         8
   118: aload_0       
   119: iload         7
   121: invokestatic  #0          // safeTrim:(byte[], int, java.nio.charset.Charset, boolean)byte[]
   124: areturn       
   125: aload         6
   127: invokestatic  #64         // java.nio.ByteBuffer.wrap:(byte[])java.nio.ByteBuffer
   130: astore        8
   132: aload_1       
   133: iload_2       
   134: iload_3       
   135: invokestatic  #65         // java.nio.CharBuffer.wrap:(char[], int, int)java.nio.CharBuffer
   138: astore        9
   140: aload         4
   142: aload         9
   144: aload         8
   146: iconst_1      
   147: invokevirtual #66         // java.nio.charset.CharsetEncoder.encode:(java.nio.CharBuffer, java.nio.ByteBuffer, boolean)java.nio.charset.CoderResult
   150: astore        10
   152: aload         10
   154: invokevirtual #42         // java.nio.charset.CoderResult.isUnderflow:()boolean
   157: ifne          165
   160: aload         10
   162: invokevirtual #43         // java.nio.charset.CoderResult.throwException:()void
   165: aload         4
   167: aload         8
   169: invokevirtual #67         // java.nio.charset.CharsetEncoder.flush:(java.nio.ByteBuffer)java.nio.charset.CoderResult
   172: astore        10
   174: aload         10
   176: invokevirtual #42         // java.nio.charset.CoderResult.isUnderflow:()boolean
   179: ifne          187
   182: aload         10
   184: invokevirtual #43         // java.nio.charset.CoderResult.throwException:()void
   187: goto          202
   190: astore        10
   192: new           #16         // java.lang.Error
   195: dup           
   196: aload         10
   198: invokespecial #13         // java.lang.Error.<init>:(java.lang.Throwable)void
   201: athrow        
   202: aload         6
   204: aload         8
   206: invokevirtual #68         // java.nio.Buffer.position:()int
   209: aload_0       
   210: iload         7
   212: invokestatic  #0          // safeTrim:(byte[], int, java.nio.charset.Charset, boolean)byte[]
   215: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B183" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@b0dad63 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:48]
live-base-pointers: []
java.lang.StringCoding.encode(StringCoding.java:348) [bci: 0]
locals: r13|QWORD[.] r14|QWORD[.] rcx|DWORD r8|DWORD - - - - - - - 
>@ <|@ instruction CMP [r13|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/nio/cs/UTF_8;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B183 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.nio.charset.Charset] <|@ <|@
      nr   20  <|@ instruction rsi|DWORD[.] = MOV [rsi|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   22  <|@ st <@st|@reference-map: [rsi:0, r13:0, r14:0, stack:48]
live-base-pointers: []
java.lang.StringCoding.encode(StringCoding.java:348) [bci: 0]
locals: r13|QWORD[.] r14|QWORD[.] rcx|DWORD r8|DWORD - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   24  <|@ instruction CMP rsi|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[String:"1.4"] <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction r10|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@reference-map: [r10:0, r13:0, r14:0, stack:48]
live-base-pointers: []
java.lang.StringCoding.encode(StringCoding.java:348) [bci: 0]
locals: r13|QWORD[.] r14|QWORD[.] rcx|DWORD r8|DWORD - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   46  <|@ instruction xmm0|DOUBLE = VCVTSI2SD r8|DWORD <|@ <|@
      nr   48  <|@ instruction xmm1|DOUBLE = VMOVE input: double[3.0|0x4008000000000000] <|@ <|@
      nr   50  <|@ instruction xmm0|DOUBLE = VMULSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM <|@ <|@
      nr   52  <|@ instruction r11|DWORD = VCVTTSD2SI xmm0|DOUBLE nZ: XMM <|@ <|@
      nr   54  <|@ instruction r9|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr   56  <|@ instruction CMP r11|DWORD y: -2147483648 size: DWORD <|@ <|@
      nr   58  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  128  <|@ instruction stack:56|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B6" "B9" "B7" 
    successors "B11" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  134  <|@ instruction CMP [r10|DWORD[.] * 8 + 12] y: 3 size: DWORD <|@ <|@
      nr  136  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B47" "B51" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  440  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  442  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  444  <|@ instruction CMP r11|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  446  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B46 -> B47 falseDestination: B46 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B51" "B49" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  450  <|@ instruction r10|DWORD = LEA [r11|DWORD + 23] size: DWORD <|@ <|@
      nr  452  <|@ instruction r10|DWORD = AND r10|DWORD y: -8 size: DWORD <|@ <|@
      nr  454  <|@ instruction r10|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  456  <|@ instruction rbx|QWORD = ADD (x: rsi|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  458  <|@ instruction CMP (x: rbx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  460  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B47 -> B51 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 4601697034453880144
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  474  <|@ instruction MOV (x: [r15|QWORD + 96], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  476  <|@ instruction AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  478  <|@ instruction AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  480  <|@ instruction AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  482  <|@ instruction AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  484  <|@ instruction MOV (x: [rsi|QWORD + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  486  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  488  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  490  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  496  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  498  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  500  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B49 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B49" "B51" 
    successors "B75" "B54" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  530  <|@ instruction CMP r14|DWORD y: 1 size: DWORD <|@ <|@
      nr  532  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B52 -> B75 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  540  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  542  <|@ instruction rdx|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  544  <|@ instruction rcx|QWORD = LEA [rdx|QWORD - 32] size: QWORD <|@ <|@
      nr  546  <|@ instruction TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  548  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B54 -> B55 falseDestination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  552  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  554  <|@ instruction JUMP ~[] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B55" "B57" 
    successors "B62" "B61" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  580  <|@ instruction rcx|QWORD = LEA [rdx|QWORD - 16] size: QWORD <|@ <|@
      nr  582  <|@ instruction CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  584  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B62 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  592  <|@ instruction xmm0|V128_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  594  <|@ instruction J (address: [rsi|QWORD[.] + r10|QWORD * 1], input: xmm0|V128_BYTE) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  596  <|@ instruction rcx|QWORD = LEA [r10|QWORD + 16] size: QWORD <|@ <|@
      nr  598  <|@ instruction r10|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  600  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B59" 
    successors "B65" "B64" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  604  <|@ instruction rcx|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  606  <|@ instruction CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  608  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B62 -> B65 falseDestination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  616  <|@ instruction xmm0|V64_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  618  <|@ instruction J (address: [rsi|QWORD[.] + r10|QWORD * 1], input: xmm0|V64_BYTE) nZ: XMM oh: VMOVQ <|@ <|@
      nr  620  <|@ instruction rcx|QWORD = LEA [r10|QWORD + 8] size: QWORD <|@ <|@
      nr  622  <|@ instruction r10|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B62" 
    successors "B68" "B67" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  628  <|@ instruction rcx|QWORD = LEA [rdx|QWORD - 4] size: QWORD <|@ <|@
      nr  630  <|@ instruction CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  632  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B65 -> B68 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  640  <|@ instruction xmm0|V32_BYTE = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  642  <|@ instruction J (address: [rsi|QWORD[.] + r10|QWORD * 1], input: xmm0|V32_BYTE) nZ: XMM oh: VMOVD <|@ <|@
      nr  644  <|@ instruction rcx|QWORD = LEA [r10|QWORD + 4] size: QWORD <|@ <|@
      nr  646  <|@ instruction r10|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  648  <|@ instruction JUMP ~[] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B65" 
    successors "B75" "B70" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  652  <|@ instruction rdx|QWORD = DEC rdx|QWORD size: QWORD <|@ <|@
      nr  654  <|@ instruction CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  656  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B68 -> B75 falseDestination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B75" "B72" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  664  <|@ instruction MOVB (x: [rsi|QWORD[.] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  666  <|@ instruction rcx|QWORD = INC r10|QWORD size: QWORD <|@ <|@
      nr  668  <|@ instruction CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  670  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B70 -> B75 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B75" "B74" 
    xhandlers
    flags 
    probability 4594234569871327232
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  678  <|@ instruction MOVB (x: [rsi|QWORD[.] + r10|QWORD * 1 + 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  680  <|@ instruction rcx|QWORD = LEA [r10|QWORD + 2] size: QWORD <|@ <|@
      nr  682  <|@ instruction CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  684  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B72 -> B75 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" 
    xhandlers
    flags 
    probability 4592264245034352640
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  692  <|@ instruction MOVB (x: [rsi|QWORD[.] + r10|QWORD * 1 + 2], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  694  <|@ instruction JUMP ~[] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B52" "B74" "B68" "B70" "B72" 
    successors "B76" "B78" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  698  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  700  <|@ instruction BRANCH trueDestinationProbability: 0.04030493641460409 condition: = trueDestination: B75 -> B76 falseDestination: B75 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B41" "B75" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4606819384206781403
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  420  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  714  <|@ instruction TEST (x: r10|QWORD[.], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr  716  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B85" "B82" 
    xhandlers
    flags 
    probability 4606819384206781403
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  732  <|@ instruction CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  734  <|@ instruction r8|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr  736  <|@ instruction rsi|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  738  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  740  <|@ instruction CMP r8|DWORD y: 1 size: DWORD <|@ <|@
      nr  742  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B80 -> B85 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B180" 
    xhandlers
    flags 
    probability 4602315784579410907
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  750  <|@ instruction rdx|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  752  <|@ instruction rcx|QWORD = MOVSXD stack:36|DWORD size: QWORD <|@ <|@
      nr  754  <|@ instruction rcx|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  756  <|@ instruction r11|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  758  <|@ instruction CMP (x: r11|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  760  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B82 -> B83 falseDestination: B82 -> B180 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B179" 
    xhandlers
    flags 
    probability 4602315784579410907
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  764  <|@ instruction CMP (x: rdx|DWORD, y: stack:36|DWORD) size: DWORD <|@ <|@
      nr  766  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B83 -> B85 falseDestination: B83 -> B179 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B80" "B83" 
    successors "B91" "B87" 
    xhandlers
    flags 
    probability 4606819384206781403
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  774  <|@ instruction CMP r8|DWORD y: 1 size: DWORD <|@ <|@
      nr  776  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B85 -> B91 falseDestination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B178" 
    xhandlers
    flags 
    probability 4602315784579410907
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  784  <|@ instruction r11|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  788  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B87 -> B88 falseDestination: B87 -> B178 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B89" "B91" 
    xhandlers
    flags 
    probability 4602315784579410907
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  792  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  794  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B88 -> B89 falseDestination: B88 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B85" "B88" 
    successors "B92" "B177" 
    xhandlers
    flags 
    probability 4606819384206781403
    begin_IR
      LIR
      nr  812  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  814  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.lang.System] <|@ <|@
      nr  816  <|@ instruction rsi|DWORD[.] = MOV [rsi|QWORD[.] + 116] size: DWORD <|@ <|@
      nr  818  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  820  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B91 -> B92 falseDestination: B91 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B93" 
    xhandlers
    flags 
    probability 4606819384206781403
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  824  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  826  <|@ instruction rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  828  <|@ instruction JUMP ~[] destination: B92 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B98" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4633239538722544628
    begin_IR
      LIR
      nr  836  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  838  <|@ instruction rsi|DWORD = MOVSX [r10|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  840  <|@ instruction CMP rsi|DWORD y: 128 size: WORD <|@ <|@
      nr  842  <|@ instruction BRANCH trueDestinationProbability: 0.9998902719253914 condition: |<| trueDestination: B94 -> B95 falseDestination: B94 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B93" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4633238656210209361
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  846  <|@ instruction MOVB (x: [rax|QWORD[.] + r11|DWORD * 1 + 16], y: rsi|DWORD) size: BYTE <|@ <|@
      nr  848  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  850  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  852  <|@ instruction JUMP ~[] destination: B95 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" "B95" 
    successors "B94" "B98" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4633373721283045376
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  832  <|@ instruction CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  834  <|@ instruction BRANCH trueDestinationProbability: 0.9835900530402635 condition: > trueDestination: B93 -> B94 falseDestination: B93 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B93" "B94" 
    successors "B99" 
    xhandlers
    flags 
    probability 4606819384206781405
    begin_IR
      LIR
      nr  862  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  864  <|@ instruction r13|DWORD = ADD (x: stack:36|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  866  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  868  <|@ instruction r11|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction JUMP ~[] destination: B98 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" "B103" "B109" 
    successors "B100" "B115" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4607837160947116637
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr  874  <|@ instruction CMP (x: r13|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  876  <|@ instruction BRANCH trueDestinationProbability: 0.16211788211788214 condition: > trueDestination: B99 -> B100 falseDestination: B99 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B101" "B114" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4595858095840273263
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  880  <|@ instruction CMP (x: r11|DWORD, y: [r10|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  882  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B100 -> B101 falseDestination: B100 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" "B113" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4595858095840273263
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  886  <|@ instruction CMP (x: r14|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  888  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B101 -> B102 falseDestination: B101 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B103" "B104" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4595858095840273263
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  892  <|@ instruction rsi|DWORD = MOVZX [r10|QWORD[.] + r11|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  894  <|@ instruction rdx|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  896  <|@ instruction rcx|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  898  <|@ instruction CMP rsi|DWORD y: 128 size: DWORD <|@ <|@
      nr  900  <|@ instruction BRANCH trueDestinationProbability: 0.942568400295785 condition: |<| trueDestination: B102 -> B103 falseDestination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B99" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4595473874099309764
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  904  <|@ instruction MOVB (x: [rax|QWORD[.] + r8|DWORD * 1 + 16], y: rsi|DWORD) size: BYTE <|@ <|@
      nr  906  <|@ instruction r8|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  908  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  910  <|@ instruction JUMP ~[] destination: B103 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B105" "B106" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4577301169636469431
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  914  <|@ instruction CMP rsi|DWORD y: 2048 size: DWORD <|@ <|@
      nr  916  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B104 -> B105 falseDestination: B104 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B112" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4577301169636469431
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  934  <|@ instruction CMP rsi|DWORD y: 55296 size: DWORD <|@ <|@
      nr  936  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B106 -> B107 falseDestination: B106 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B108" "B111" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4577301169636469431
    begin_IR
      LIR
      nr  938  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  940  <|@ instruction CMP (x: r14|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  942  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B107 -> B108 falseDestination: B107 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4577301169636469431
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  946  <|@ instruction r9|DWORD = LEA [r8|DWORD + 2] size: DWORD <|@ <|@
      nr  948  <|@ instruction CMP (x: r14|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  950  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B108 -> B109 falseDestination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B99" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4577301169636469431
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  954  <|@ instruction r11|DWORD = SHR rsi|DWORD y: 12 size: DWORD <|@ <|@
      nr  956  <|@ instruction r11|DWORD = OR r11|DWORD y: 224 size: DWORD <|@ <|@
      nr  958  <|@ instruction MOVB (x: [rax|QWORD[.] + r8|DWORD * 1 + 16], y: r11|DWORD) size: BYTE <|@ <|@
      nr  960  <|@ instruction r11|DWORD = SHR rsi|DWORD y: 6 size: DWORD <|@ <|@
      nr  962  <|@ instruction r11|DWORD = AND r11|DWORD y: 63 size: DWORD <|@ <|@
      nr  964  <|@ instruction r11|DWORD = OR r11|DWORD y: 128 size: DWORD <|@ <|@
      nr  966  <|@ instruction MOVB (x: [rax|QWORD[.] + rcx|DWORD * 1 + 16], y: r11|DWORD) size: BYTE <|@ <|@
      nr  968  <|@ instruction rsi|DWORD = AND rsi|DWORD y: 63 size: DWORD <|@ <|@
      nr  970  <|@ instruction rsi|DWORD = OR rsi|DWORD y: 128 size: DWORD <|@ <|@
      nr  972  <|@ instruction MOVB (x: [rax|QWORD[.] + r9|DWORD * 1 + 16], y: rsi|DWORD) size: BYTE <|@ <|@
      nr  974  <|@ instruction r8|DWORD = LEA [r8|DWORD + 3] size: DWORD <|@ <|@
      nr  976  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  978  <|@ instruction JUMP ~[] destination: B109 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B116" "B117" 
    xhandlers
    flags 
    probability 4606819384206781406
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1052  <|@ instruction CMP (x: r14|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 1054  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" "B119" 
    xhandlers
    flags 
    probability 4606819384206781406
    begin_IR
      LIR
      nr 1070  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1072  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 1074  <|@ instruction BRANCH trueDestinationProbability: 9.999999999998899E-5 condition: < trueDestination: B117 -> B118 falseDestination: B117 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B120" "B122" 
    xhandlers
    flags 
    probability 4606818519790315256
    begin_IR
      LIR
      nr 1090  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1092  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr 1094  <|@ instruction BRANCH trueDestinationProbability: 9.999999999998899E-5 condition: < trueDestination: B119 -> B120 falseDestination: B119 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B123" "B127" 
    xhandlers
    flags 
    probability 4606817655460290752
    begin_IR
      LIR
      nr 1118  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1120  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 1122  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr 1124  <|@ instruction CMP r8|DWORD y: 16777215 size: DWORD <|@ <|@
      nr 1126  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B122 -> B123 falseDestination: B122 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B127" "B125" 
    xhandlers
    flags 
    probability 4605953411868789319
    begin_IR
      LIR
      nr 1128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1130  <|@ instruction rcx|DWORD = LEA [r8|DWORD + 23] size: DWORD <|@ <|@
      nr 1132  <|@ instruction rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD <|@ <|@
      nr 1134  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr 1136  <|@ instruction r9|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1138  <|@ instruction CMP (x: r9|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1140  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B123 -> B127 falseDestination: B123 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B128" 
    xhandlers
    flags 
    probability 4605875629945554190
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1154  <|@ instruction MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1156  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr 1158  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1160  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1162  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1164  <|@ instruction MOV (x: [rsi|QWORD + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1166  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1168  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr 1170  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1172  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1174  <|@ instruction stack:72|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1176  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1178  <|@ instruction JUMP ~[] destination: B125 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B125" "B127" 
    successors "B151" "B130" 
    xhandlers
    flags 
    probability 4606817655460290752
    begin_IR
      LIR
      nr 1204  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1206  <|@ instruction CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr 1208  <|@ instruction r8|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr 1210  <|@ instruction r10|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr 1212  <|@ instruction CMP r10|QWORD y: 1 size: QWORD <|@ <|@
      nr 1214  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B128 -> B151 falseDestination: B128 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B128" 
    successors "B135" "B133" 
    xhandlers
    flags 
    probability 4602314055832920256
    begin_IR
      LIR
      nr 1220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1222  <|@ instruction r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1224  <|@ instruction r11|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 1226  <|@ instruction r8|QWORD[.] = LEA [r8|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 1228  <|@ instruction r9|QWORD = LEA [r10|QWORD - 32] size: QWORD <|@ <|@
      nr 1230  <|@ instruction TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr 1236  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1232  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B130 -> B135 falseDestination: B130 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B130" "B133" 
    successors "B138" "B137" 
    xhandlers
    flags 
    probability 4602314055832920256
    begin_IR
      LIR
      nr 1262  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1264  <|@ instruction r9|QWORD = LEA [r10|QWORD - 16] size: QWORD <|@ <|@
      nr 1266  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr 1268  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B135 -> B138 falseDestination: B135 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B138" 
    xhandlers
    flags 
    probability 4600153446854166672
    begin_IR
      LIR
      nr 1274  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1276  <|@ instruction xmm0|V128_BYTE = H [r8|QWORD[.] + rcx|QWORD * 1] nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1278  <|@ instruction J (address: [r11|QWORD[.] + rcx|QWORD * 1], input: xmm0|V128_BYTE) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1280  <|@ instruction r9|QWORD = LEA [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr 1282  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr 1284  <|@ instruction JUMP ~[] destination: B137 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B137" "B135" 
    successors "B141" "B140" 
    xhandlers
    flags 
    probability 4602314055832920256
    begin_IR
      LIR
      nr 1286  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1288  <|@ instruction r9|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr 1290  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr 1292  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B138 -> B141 falseDestination: B138 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B141" 
    xhandlers
    flags 
    probability 4600153446854166672
    begin_IR
      LIR
      nr 1298  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1300  <|@ instruction xmm0|V64_BYTE = H [r8|QWORD[.] + rcx|QWORD * 1] nZ: XMM oh: VMOVQ <|@ <|@
      nr 1302  <|@ instruction J (address: [r11|QWORD[.] + rcx|QWORD * 1], input: xmm0|V64_BYTE) nZ: XMM oh: VMOVQ <|@ <|@
      nr 1304  <|@ instruction r9|QWORD = LEA [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr 1306  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr 1308  <|@ instruction JUMP ~[] destination: B140 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" "B138" 
    successors "B144" "B143" 
    xhandlers
    flags 
    probability 4602314055832920256
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1312  <|@ instruction r9|QWORD = LEA [r10|QWORD - 4] size: QWORD <|@ <|@
      nr 1314  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr 1316  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B141 -> B144 falseDestination: B141 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B144" 
    xhandlers
    flags 
    probability 4600153446854166672
    begin_IR
      LIR
      nr 1322  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1324  <|@ instruction xmm0|V32_BYTE = H [r8|QWORD[.] + rcx|QWORD * 1] nZ: XMM oh: VMOVD <|@ <|@
      nr 1326  <|@ instruction J (address: [r11|QWORD[.] + rcx|QWORD * 1], input: xmm0|V32_BYTE) nZ: XMM oh: VMOVD <|@ <|@
      nr 1328  <|@ instruction r9|QWORD = LEA [rcx|QWORD + 4] size: QWORD <|@ <|@
      nr 1330  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr 1332  <|@ instruction JUMP ~[] destination: B143 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B143" "B141" 
    successors "B151" "B146" 
    xhandlers
    flags 
    probability 4602314055832920256
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1336  <|@ instruction r9|QWORD = DEC r10|QWORD size: QWORD <|@ <|@
      nr 1338  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr 1340  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B144 -> B151 falseDestination: B144 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B151" "B148" 
    xhandlers
    flags 
    probability 4600153446854166672
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1348  <|@ instruction rbx|DWORD = MOVSXB [r8|QWORD[.] + rcx|QWORD * 1] size: DWORD <|@ <|@
      nr 1350  <|@ instruction MOVB (x: [r11|QWORD[.] + rcx|QWORD * 1], y: rbx|DWORD) size: BYTE <|@ <|@
      nr 1352  <|@ instruction rbx|QWORD = INC rcx|QWORD size: QWORD <|@ <|@
      nr 1354  <|@ instruction CMP (x: rbx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr 1356  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B146 -> B151 falseDestination: B146 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B151" "B150" 
    xhandlers
    flags 
    probability 4598532990120101484
    begin_IR
      LIR
      nr 1362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1364  <|@ instruction rbx|DWORD = MOVSXB [r8|QWORD[.] + rcx|QWORD * 1 + 1] size: DWORD <|@ <|@
      nr 1366  <|@ instruction MOVB (x: [r11|QWORD[.] + rcx|QWORD * 1 + 1], y: rbx|DWORD) size: BYTE <|@ <|@
      nr 1368  <|@ instruction rbx|QWORD = LEA [rcx|QWORD + 2] size: QWORD <|@ <|@
      nr 1370  <|@ instruction CMP (x: rbx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr 1372  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B148 -> B151 falseDestination: B148 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B151" 
    xhandlers
    flags 
    probability 4596460075593828770
    begin_IR
      LIR
      nr 1378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1380  <|@ instruction r8|DWORD = MOVSXB [r8|QWORD[.] + rcx|QWORD * 1 + 2] size: DWORD <|@ <|@
      nr 1382  <|@ instruction MOVB (x: [r11|QWORD[.] + rcx|QWORD * 1 + 2], y: r8|DWORD) size: BYTE <|@ <|@
      nr 1384  <|@ instruction JUMP ~[] destination: B150 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B128" "B150" "B144" "B146" "B148" 
    successors "B152" "B175" 
    xhandlers
    flags 
    probability 4606817655460290752
    begin_IR
      LIR
      nr 1386  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1388  <|@ instruction r11|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr 1390  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1392  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B151 -> B152 falseDestination: B151 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B151" "B172" "B166" "B168" "B170" 
    successors 
    xhandlers
    flags 
    probability 4606817655460290752
    begin_IR
      LIR
      nr 1560  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1562  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B45" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  140  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@644bd6a encoding: base: 0 shift: 3 <|@ <|@
      nr  144  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[3]{1, ., 4}] <|@ <|@
      nr  146  <|@ instruction rdx|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr  148  <|@ instruction rbx|DWORD = ARRAY_EQUALS (~array1Value: r10|QWORD[.], ~array2Value: rsi|QWORD[.], ~lengthValue: rdx|DWORD) {temp1: rdi|QWORD[*], temp2: rax|QWORD[*], temp3: rbp|QWORD, temp4: r13|QWORD, temp5: -, tempXMM: -, vectorTemp1: xmm0|DOUBLE, vectorTemp2: xmm1|DOUBLE} arrayBaseOffset: 16 arrayIndexScale: 2 kind: char <|@ <|@
      nr  150  <|@ instruction TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  152  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B17" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  156  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  158  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  160  <|@ instruction CMP r11|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  162  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B12 -> B13 falseDestination: B12 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" "B15" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  166  <|@ instruction r10|DWORD = LEA [r11|DWORD + 23] size: DWORD <|@ <|@
      nr  168  <|@ instruction r10|DWORD = AND r10|DWORD y: -8 size: DWORD <|@ <|@
      nr  170  <|@ instruction r10|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  172  <|@ instruction rbx|QWORD = ADD (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  174  <|@ instruction CMP (x: rbx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B17 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4601697034453880144
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction MOV (x: [r15|QWORD + 96], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  192  <|@ instruction AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  194  <|@ instruction AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  196  <|@ instruction AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  198  <|@ instruction AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  200  <|@ instruction MOV (x: [rsi|QWORD + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  202  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  204  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  206  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  208  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  210  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  214  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  216  <|@ instruction JUMP ~[] destination: B15 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" 
    successors "B41" "B20" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  242  <|@ instruction CMP r14|DWORD y: 1 size: DWORD <|@ <|@
      nr  244  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B18 -> B41 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  252  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  254  <|@ instruction rdx|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  256  <|@ instruction rcx|QWORD = LEA [rdx|QWORD - 32] size: QWORD <|@ <|@
      nr  258  <|@ instruction TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  260  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  264  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  266  <|@ instruction JUMP ~[] destination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B21" "B23" 
    successors "B28" "B27" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  292  <|@ instruction rcx|QWORD = LEA [rdx|QWORD - 16] size: QWORD <|@ <|@
      nr  294  <|@ instruction CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  296  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B25 -> B28 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  304  <|@ instruction xmm0|V128_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  306  <|@ instruction J (address: [rsi|QWORD[.] + r10|QWORD * 1], input: xmm0|V128_BYTE) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  308  <|@ instruction rcx|QWORD = LEA [r10|QWORD + 16] size: QWORD <|@ <|@
      nr  310  <|@ instruction r10|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B25" 
    successors "B31" "B30" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  316  <|@ instruction rcx|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  318  <|@ instruction CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  320  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B28 -> B31 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  328  <|@ instruction xmm0|V64_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  330  <|@ instruction J (address: [rsi|QWORD[.] + r10|QWORD * 1], input: xmm0|V64_BYTE) nZ: XMM oh: VMOVQ <|@ <|@
      nr  332  <|@ instruction rcx|QWORD = LEA [r10|QWORD + 8] size: QWORD <|@ <|@
      nr  334  <|@ instruction r10|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" 
    successors "B34" "B33" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  340  <|@ instruction rcx|QWORD = LEA [rdx|QWORD - 4] size: QWORD <|@ <|@
      nr  342  <|@ instruction CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  344  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B31 -> B34 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  352  <|@ instruction xmm0|V32_BYTE = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  354  <|@ instruction J (address: [rsi|QWORD[.] + r10|QWORD * 1], input: xmm0|V32_BYTE) nZ: XMM oh: VMOVD <|@ <|@
      nr  356  <|@ instruction rcx|QWORD = LEA [r10|QWORD + 4] size: QWORD <|@ <|@
      nr  358  <|@ instruction r10|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B31" 
    successors "B41" "B36" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  364  <|@ instruction rdx|QWORD = DEC rdx|QWORD size: QWORD <|@ <|@
      nr  366  <|@ instruction CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  368  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B34 -> B41 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B41" "B38" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  376  <|@ instruction MOVB (x: [rsi|QWORD[.] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  378  <|@ instruction rcx|QWORD = INC r10|QWORD size: QWORD <|@ <|@
      nr  380  <|@ instruction CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  382  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B41 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" "B40" 
    xhandlers
    flags 
    probability 4594234569871327232
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  390  <|@ instruction MOVB (x: [rsi|QWORD[.] + r10|QWORD * 1 + 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  392  <|@ instruction rcx|QWORD = LEA [r10|QWORD + 2] size: QWORD <|@ <|@
      nr  394  <|@ instruction CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  396  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B41 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4592264245034352640
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  404  <|@ instruction MOVB (x: [rsi|QWORD[.] + r10|QWORD * 1 + 2], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B18" "B40" "B34" "B36" "B38" 
    successors "B42" "B78" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  412  <|@ instruction BRANCH trueDestinationProbability: 0.04030493641460409 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B153" "B154" 
    xhandlers
    flags 
    probability 4602314055832920256
    begin_IR
      LIR
      nr 1394  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1396  <|@ instruction r8|QWORD[.] = LEA [rax|QWORD[.] + r10|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1398  <|@ instruction r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD <|@ <|@
      nr 1400  <|@ instruction r10|QWORD = LEA [r11|QWORD - 32] size: QWORD <|@ <|@
      nr 1402  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1404  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B152 -> B153 falseDestination: B152 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B157" 
    xhandlers
    flags 
    probability 4600153446854166672
    begin_IR
      LIR
      nr 1406  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1408  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1410  <|@ instruction JUMP ~[] destination: B153 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B153" "B155" 
    successors "B160" "B159" 
    xhandlers
    flags 
    probability 4602314055832920256
    begin_IR
      LIR
      nr 1434  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1436  <|@ instruction r10|QWORD = LEA [r11|QWORD - 16] size: QWORD <|@ <|@
      nr 1438  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1440  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B157 -> B160 falseDestination: B157 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B157" 
    successors "B160" 
    xhandlers
    flags 
    probability 4600153446854166672
    begin_IR
      LIR
      nr 1446  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1448  <|@ instruction xmm0|V128_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr 1450  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 1], input: xmm0|V128_BYTE) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1452  <|@ instruction r10|QWORD = LEA [r9|QWORD + 16] size: QWORD <|@ <|@
      nr 1454  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1456  <|@ instruction JUMP ~[] destination: B159 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B159" "B157" 
    successors "B163" "B162" 
    xhandlers
    flags 
    probability 4602314055832920256
    begin_IR
      LIR
      nr 1458  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1460  <|@ instruction r10|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr 1462  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1464  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B160 -> B163 falseDestination: B160 -> B162 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B163" 
    xhandlers
    flags 
    probability 4600153446854166672
    begin_IR
      LIR
      nr 1470  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1472  <|@ instruction xmm0|V64_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr 1474  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 1], input: xmm0|V64_BYTE) nZ: XMM oh: VMOVQ <|@ <|@
      nr 1476  <|@ instruction r10|QWORD = LEA [r9|QWORD + 8] size: QWORD <|@ <|@
      nr 1478  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1480  <|@ instruction JUMP ~[] destination: B162 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B162" "B160" 
    successors "B166" "B165" 
    xhandlers
    flags 
    probability 4602314055832920256
    begin_IR
      LIR
      nr 1482  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1484  <|@ instruction r10|QWORD = LEA [r11|QWORD - 4] size: QWORD <|@ <|@
      nr 1486  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1488  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B163 -> B166 falseDestination: B163 -> B165 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B163" 
    successors "B166" 
    xhandlers
    flags 
    probability 4600153446854166672
    begin_IR
      LIR
      nr 1494  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1496  <|@ instruction xmm0|V32_BYTE = L oc: SIMD<0,0,0,0> <|@ <|@
      nr 1498  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 1], input: xmm0|V32_BYTE) nZ: XMM oh: VMOVD <|@ <|@
      nr 1500  <|@ instruction r10|QWORD = LEA [r9|QWORD + 4] size: QWORD <|@ <|@
      nr 1502  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1504  <|@ instruction JUMP ~[] destination: B165 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B165" "B163" 
    successors "B175" "B168" 
    xhandlers
    flags 
    probability 4602314055832920256
    begin_IR
      LIR
      nr 1506  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1508  <|@ instruction r11|QWORD = DEC r11|QWORD size: QWORD <|@ <|@
      nr 1510  <|@ instruction CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1512  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B166 -> B175 falseDestination: B166 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B175" "B170" 
    xhandlers
    flags 
    probability 4600153446854166672
    begin_IR
      LIR
      nr 1518  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1520  <|@ instruction MOVB (x: [r8|QWORD[.] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1522  <|@ instruction r10|QWORD = INC r9|QWORD size: QWORD <|@ <|@
      nr 1524  <|@ instruction CMP (x: r10|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1526  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B168 -> B175 falseDestination: B168 -> B170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B168" 
    successors "B175" "B172" 
    xhandlers
    flags 
    probability 4598532990120101484
    begin_IR
      LIR
      nr 1532  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1534  <|@ instruction MOVB (x: [r8|QWORD[.] + r9|QWORD * 1 + 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1536  <|@ instruction r10|QWORD = LEA [r9|QWORD + 2] size: QWORD <|@ <|@
      nr 1538  <|@ instruction CMP (x: r10|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1540  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B170 -> B175 falseDestination: B170 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B170" 
    successors "B175" 
    xhandlers
    flags 
    probability 4596460075593828770
    begin_IR
      LIR
      nr 1546  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1548  <|@ instruction MOVB (x: [r8|QWORD[.] + r9|QWORD * 1 + 2], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1550  <|@ instruction JUMP ~[] destination: B172 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B155" 
    xhandlers
    flags 
    probability 4593306856578179264
    begin_IR
      LIR
      nr 1412  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1414  <|@ instruction xmm0|V256_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr 1416  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1418  <|@ instruction JUMP ~[] destination: B154 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B154" "B155" 
    successors "B157" "B155" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4602314055832920256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1422  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 1], input: xmm0|V256_BYTE) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1424  <|@ instruction r9|QWORD = LEA [r9|QWORD + 32] size: QWORD <|@ <|@
      nr 1426  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1428  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B155 -> B157 falseDestination: B155 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B130" "B133" 
    successors "B135" "B133" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4602314055832920256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1248  <|@ instruction xmm0|V256_BYTE = H [r8|QWORD[.] + rcx|QWORD * 1] nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1250  <|@ instruction J (address: [r11|QWORD[.] + rcx|QWORD * 1], input: xmm0|V256_BYTE) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1252  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 32] size: QWORD <|@ <|@
      nr 1254  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr 1256  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B133 -> B135 falseDestination: B133 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B122" "B123" 
    successors "B128" 
    xhandlers
    flags 
    probability 4592200624781057428
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1182  <|@ instruction stack:60|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1184  <|@ instruction stack:64|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1186  <|@ instruction stack:72|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1192  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1194  <|@ instruction rdx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1196  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1198  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1200  <|@ st <@st|@reference-map: [stack:8, stack:32, stack:48]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
locals: vobject:UTF_8$Encoder:0{averageBytesPerChar=float[1.1|0x3f8ccccd],maxBytesPerChar=float[3.0|0x40400000],state=int[0|0x0],charset=stack:48|QWORD[.],replacement=vobject:byte[]:1{0=int[63|0x3f]},malformedInputAction=Object[CodingErrorAction@561514572],unmappableCharacterAction=Object[CodingErrorAction@561514572],cachedDecoder=Object[null],repl=int[63|0x3f],sgp=Object[null]} stack:32|QWORD[.] stack:60|DWORD - stack:72|QWORD[.] stack:64|DWORD r13|DWORD - - - 
java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
locals: stack:48|QWORD[.] - - - - - stack:72|QWORD[.] int[0|0x0] - - - 
vobject:UTF_8$Encoder:0{averageBytesPerChar=float[1.1|0x3f8ccccd],maxBytesPerChar=float[3.0|0x40400000],state=int[0|0x0],charset=stack:48|QWORD[.],replacement=vobject:byte[]:1{0=int[63|0x3f]},malformedInputAction=Object[CodingErrorAction@561514572],unmappableCharacterAction=Object[CodingErrorAction@561514572],cachedDecoder=Object[null],repl=int[63|0x3f],sgp=Object[null]} Lsun/nio/cs/UTF_8$Encoder; float[1.1|0x3f8ccccd] float[3.0|0x40400000] int[0|0x0] stack:48|QWORD[.] vobject:byte[]:1{0=int[63|0x3f]} Object[CodingErrorAction@561514572] Object[CodingErrorAction@561514572] Object[null] int[63|0x3f] Object[null] 
vobject:byte[]:1{0=int[63|0x3f]} [B int[63|0x3f] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:54, 107] <|@ <|@
      nr 1202  <|@ instruction JUMP ~[] destination: B127 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4589168020290535424
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ instruction xmm0|V256_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  272  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  274  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B23" 
    successors "B25" "B23" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4598175219545276416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  278  <|@ instruction J (address: [rsi|QWORD[.] + r10|QWORD * 1], input: xmm0|V256_BYTE) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  280  <|@ instruction r10|QWORD = LEA [r10|QWORD + 32] size: QWORD <|@ <|@
      nr  282  <|@ instruction CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  284  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B23 -> B25 falseDestination: B23 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4589168020290535424
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  558  <|@ instruction xmm0|V256_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  560  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  562  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B57" 
    successors "B59" "B57" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4598175219545276416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  566  <|@ instruction J (address: [rsi|QWORD[.] + r10|QWORD * 1], input: xmm0|V256_BYTE) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  568  <|@ instruction r10|QWORD = LEA [r10|QWORD + 32] size: QWORD <|@ <|@
      nr  570  <|@ instruction CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  572  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B57 -> B59 falseDestination: B57 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B12" "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588015098785928576
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  220  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ instruction stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  232  <|@ instruction rdx|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  236  <|@ st <@st|@reference-map: [stack:32, stack:48]
live-base-pointers: []
java.lang.StringCoding.encode(StringCoding.java:348) [bci: 0]
locals: stack:48|QWORD[.] stack:32|QWORD[.] stack:36|DWORD r13|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B46" "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 4588015098785928576
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  506  <|@ instruction stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  508  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  510  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  516  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  518  <|@ instruction rdx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  520  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  522  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  524  <|@ st <@st|@reference-map: [stack:32, stack:48]
live-base-pointers: []
java.lang.StringCoding.encode(StringCoding.java:348) [bci: 0]
locals: stack:48|QWORD[.] stack:32|QWORD[.] stack:36|DWORD r13|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors 
    xhandlers
    flags 
    probability 4581465774900200016
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  704  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors 
    xhandlers
    flags 
    probability 4581465774900200016
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  416  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ instruction stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction VUCOMISD (x: xmm0|DOUBLE, y: xmm0|DOUBLE) <|@ <|@
      nr   70  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B8 unorderedIsTrue: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4572414629676717184
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  112  <|@ instruction stack:56|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  114  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  120  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction r13|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction JUMP ~[] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4572414629676717184
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction xmm1|DOUBLE = VMOVE input: double[0.0|0x0] <|@ <|@
      nr   76  <|@ instruction VUCOMISD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) <|@ <|@
      nr   78  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 unorderedIsTrue: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4567911030049346688
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   98  <|@ instruction stack:56|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction r13|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4567911030049346688
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ instruction stack:56|QWORD = MOVE input: long[2147483647|0x7fffffff] <|@ <|@
      nr   84  <|@ instruction r11|DWORD = MOVE input: int[2147483647|0x7fffffff] <|@ <|@
      nr   90  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction r13|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   94  <|@ instruction JUMP ~[] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B121" 
    xhandlers
    flags 
    probability 4546709724080164076
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1078  <|@ instruction stack:60|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1080  <|@ instruction stack:64|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1082  <|@ instruction r10|DWORD = MOVE input: int[-176737|0xfffffffffffd4d9f] <|@ <|@
      nr 1088  <|@ instruction JUMP ~[] destination: B118 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B116" "B114" "B113" "B105" "B112" "B111" "B110" "B118" "B120" 
    successors 
    xhandlers
    flags 
    probability 4551212969642550037
    begin_IR
      LIR
      nr 1110  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1064  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1066  <|@ instruction r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1112  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1114  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1116  <|@ st <@st|@reference-map: [r8:0, stack:32, stack:48]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
locals: vobject:UTF_8$Encoder:0{averageBytesPerChar=float[1.1|0x3f8ccccd],maxBytesPerChar=float[3.0|0x40400000],state=int[0|0x0],charset=stack:48|QWORD[.],replacement=vobject:byte[]:1{0=int[63|0x3f]},malformedInputAction=Object[CodingErrorAction@561514572],unmappableCharacterAction=Object[CodingErrorAction@561514572],cachedDecoder=Object[null],repl=int[63|0x3f],sgp=Object[null]} stack:32|QWORD[.] stack:60|DWORD - r8|QWORD[.] stack:64|DWORD r13|DWORD - - - 
java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107]
locals: stack:48|QWORD[.] - - - - - r8|QWORD[.] int[0|0x0] - - - 
vobject:UTF_8$Encoder:0{averageBytesPerChar=float[1.1|0x3f8ccccd],maxBytesPerChar=float[3.0|0x40400000],state=int[0|0x0],charset=stack:48|QWORD[.],replacement=vobject:byte[]:1{0=int[63|0x3f]},malformedInputAction=Object[CodingErrorAction@561514572],unmappableCharacterAction=Object[CodingErrorAction@561514572],cachedDecoder=Object[null],repl=int[63|0x3f],sgp=Object[null]} Lsun/nio/cs/UTF_8$Encoder; float[1.1|0x3f8ccccd] float[3.0|0x40400000] int[0|0x0] stack:48|QWORD[.] vobject:byte[]:1{0=int[63|0x3f]} Object[CodingErrorAction@561514572] Object[CodingErrorAction@561514572] Object[null] int[63|0x3f] Object[null] 
vobject:byte[]:1{0=int[63|0x3f]} [B int[63|0x3f] 
>@ <|@ instruction DEOPT info [bci:54, 107] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B121" 
    xhandlers
    flags 
    probability 4546709015950195006
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1098  <|@ instruction stack:60|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1100  <|@ instruction stack:64|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1102  <|@ instruction r10|DWORD = MOVE input: int[-176737|0xfffffffffffd4d9f] <|@ <|@
      nr 1108  <|@ instruction JUMP ~[] destination: B120 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B121" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  996  <|@ instruction stack:60|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  998  <|@ instruction stack:64|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1000  <|@ instruction r10|DWORD = MOVE input: int[-123931|0xfffffffffffe1be5] <|@ <|@
      nr 1006  <|@ instruction JUMP ~[] destination: B111 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B181" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  798  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@455242270] <|@ <|@
      nr  800  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  802  <|@ instruction r10|DWORD = MOVE input: int[-113435|0xfffffffffffe44e5] <|@ <|@
      nr  804  <|@ instruction rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  806  <|@ instruction JUMP ~[] destination: B89 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B79" "B180" "B178" "B177" "B179" "B89" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr 1614  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1616  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1618  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr 1620  <|@ st <@st|@reference-map: [stack:32, stack:48]
live-base-pointers: []
java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 70]
stack: int[0|0x0] 
locals: vobject:UTF_8$Encoder:0{averageBytesPerChar=float[0.0|0x0],maxBytesPerChar=float[0.0|0x0],state=int[0|0x0],charset=stack:48|QWORD[.],replacement=Object[null],malformedInputAction=Object[CodingErrorAction@250144264],unmappableCharacterAction=Object[CodingErrorAction@250144264],cachedDecoder=Object[null],repl=int[0|0x0],sgp=Object[null]} - float[1.1|0x3f8ccccd] float[3.0|0x40400000] vobject:byte[]:1{0=int[63|0x3f]} 
java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
locals: - - - - 
sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
locals: vobject:UTF_8$Encoder:0{averageBytesPerChar=float[0.0|0x0],maxBytesPerChar=float[0.0|0x0],state=int[0|0x0],charset=stack:48|QWORD[.],replacement=Object[null],malformedInputAction=Object[CodingErrorAction@250144264],unmappableCharacterAction=Object[CodingErrorAction@250144264],cachedDecoder=Object[null],repl=int[0|0x0],sgp=Object[null]} stack:48|QWORD[.] 
sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
locals: - - - 
sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
stack: vobject:UTF_8$Encoder:0{averageBytesPerChar=float[0.0|0x0],maxBytesPerChar=float[0.0|0x0],state=int[0|0x0],charset=stack:48|QWORD[.],replacement=Object[null],malformedInputAction=Object[CodingErrorAction@250144264],unmappableCharacterAction=Object[CodingErrorAction@250144264],cachedDecoder=Object[null],repl=int[0|0x0],sgp=Object[null]} 
locals: stack:48|QWORD[.] 
java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1]
locals: stack:48|QWORD[.] stack:32|QWORD[.] rcx|DWORD r13|DWORD - - - - - - - 
vobject:UTF_8$Encoder:0{averageBytesPerChar=float[0.0|0x0],maxBytesPerChar=float[0.0|0x0],state=int[0|0x0],charset=stack:48|QWORD[.],replacement=Object[null],malformedInputAction=Object[CodingErrorAction@250144264],unmappableCharacterAction=Object[CodingErrorAction@250144264],cachedDecoder=Object[null],repl=int[0|0x0],sgp=Object[null]} Lsun/nio/cs/UTF_8$Encoder; float[0.0|0x0] float[0.0|0x0] int[0|0x0] stack:48|QWORD[.] Object[null] Object[CodingErrorAction@250144264] Object[CodingErrorAction@250144264] Object[null] int[0|0x0] Object[null] 
vobject:byte[]:1{0=int[63|0x3f]} [B int[63|0x3f] 
>@ <|@ instruction DEOPT info [bci:70, 12, 6, 2, 6, 1] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B121" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1010  <|@ instruction stack:60|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1012  <|@ instruction stack:64|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1014  <|@ instruction r10|DWORD = MOVE input: int[-121363|0xfffffffffffe25ed] <|@ <|@
      nr 1020  <|@ instruction JUMP ~[] destination: B112 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B121" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1056  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1058  <|@ instruction stack:60|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1060  <|@ instruction stack:64|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1062  <|@ instruction r10|DWORD = MOVE input: int[-128275|0xfffffffffffe0aed] <|@ <|@
      nr 1068  <|@ instruction JUMP ~[] destination: B116 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B181" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1590  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1592  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@455242270] <|@ <|@
      nr 1594  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1596  <|@ instruction r10|DWORD = MOVE input: int[-108315|0xfffffffffffe58e5] <|@ <|@
      nr 1598  <|@ instruction rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1600  <|@ instruction JUMP ~[] destination: B179 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B181" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  720  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1621998909] <|@ <|@
      nr  722  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  724  <|@ instruction r10|DWORD = MOVE input: int[-107019|0xfffffffffffe5df5] <|@ <|@
      nr  726  <|@ instruction rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  728  <|@ instruction JUMP ~[] destination: B79 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B121" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  918  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  920  <|@ instruction stack:60|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  922  <|@ instruction stack:64|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  924  <|@ instruction r10|DWORD = MOVE input: int[-121107|0xfffffffffffe26ed] <|@ <|@
      nr  930  <|@ instruction JUMP ~[] destination: B105 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B181" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1578  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1580  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@455242270] <|@ <|@
      nr 1582  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1584  <|@ instruction r10|DWORD = MOVE input: int[-113435|0xfffffffffffe44e5] <|@ <|@
      nr 1586  <|@ instruction rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1588  <|@ instruction JUMP ~[] destination: B178 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B181" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1602  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1604  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@455242270] <|@ <|@
      nr 1606  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1608  <|@ instruction r10|DWORD = MOVE input: int[-108315|0xfffffffffffe58e5] <|@ <|@
      nr 1610  <|@ instruction rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1612  <|@ instruction JUMP ~[] destination: B180 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B181" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1568  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1570  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1572  <|@ instruction rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1574  <|@ instruction r10|DWORD = MOVE input: int[-106515|0xfffffffffffe5fed] <|@ <|@
      nr 1576  <|@ instruction JUMP ~[] destination: B177 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B121" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1038  <|@ instruction stack:60|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1040  <|@ instruction stack:64|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1042  <|@ instruction r10|DWORD = MOVE input: int[-116763|0xfffffffffffe37e5] <|@ <|@
      nr 1048  <|@ instruction JUMP ~[] destination: B114 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B121" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1024  <|@ instruction stack:60|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1026  <|@ instruction stack:64|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1028  <|@ instruction r10|DWORD = MOVE input: int[-135195|0xfffffffffffdefe5] <|@ <|@
      nr 1034  <|@ instruction JUMP ~[] destination: B113 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction r10|DWORD = MOVE input: int[-94995|0xfffffffffffe8ced] <|@ <|@
      nr   32  <|@ instruction stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction JUMP ~[] destination: B2 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B183" "B2" "B45" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1638  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1640  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1642  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1644  <|@ st <@st|@reference-map: [stack:32, stack:48]
live-base-pointers: []
java.lang.StringCoding.encode(StringCoding.java:348) [bci: 0]
locals: stack:48|QWORD[.] stack:32|QWORD[.] stack:36|DWORD r13|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1626  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1628  <|@ instruction r10|DWORD = MOVE input: int[-92723|0xfffffffffffe95cd] <|@ <|@
      nr 1630  <|@ instruction stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1632  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1634  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1636  <|@ instruction JUMP ~[] destination: B183 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  430  <|@ instruction r10|DWORD = MOVE input: int[-103699|0xfffffffffffe6aed] <|@ <|@
      nr  432  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  434  <|@ instruction stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B45 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B121" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  982  <|@ instruction stack:60|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  984  <|@ instruction stack:64|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  986  <|@ instruction r10|DWORD = MOVE input: int[-126235|0xfffffffffffe12e5] <|@ <|@
      nr  992  <|@ instruction JUMP ~[] destination: B110 -> B121 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #57         // java.nio.charset.Charset.newEncoder:()java.nio.charset.CharsetEncoder
     4: astore        4
     6: iload_3       
     7: aload         4
     9: invokevirtual #58         // java.nio.charset.CharsetEncoder.maxBytesPerChar:()float
    12: invokestatic  #2          // scale:(int, float)int
    15: istore        5
    17: iload         5
    19: newarray      byte
    21: astore        6
    23: iload_3       
    24: ifne          30
    27: aload         6
    29: areturn       
    30: iconst_0      
    31: istore        7
    33: invokestatic  #8          // java.lang.System.getSecurityManager:()java.lang.SecurityManager
    36: ifnull        71
    39: aload_0       
    40: invokevirtual #31         // java.lang.Object.getClass:()java.lang.Class
    43: invokevirtual #32         // java.lang.Class.getClassLoader0:()java.lang.ClassLoader
    46: ifnonnull     53
    49: iconst_1      
    50: goto          54
    53: iconst_0      
    54: dup           
    55: istore        7
    57: ifne          71
    60: aload_1       
    61: iload_2       
    62: iload_2       
    63: iload_3       
    64: iadd          
    65: invokestatic  #59         // java.util.Arrays.copyOfRange:(char[], int, int)char[]
    68: astore_1      
    69: iconst_0      
    70: istore_2      
    71: aload         4
    73: getstatic     #34         // java.nio.charset.CodingErrorAction.REPLACE:java.nio.charset.CodingErrorAction
    76: invokevirtual #60         // java.nio.charset.CharsetEncoder.onMalformedInput:(java.nio.charset.CodingErrorAction)java.nio.charset.CharsetEncoder
    79: getstatic     #34         // java.nio.charset.CodingErrorAction.REPLACE:java.nio.charset.CodingErrorAction
    82: invokevirtual #61         // java.nio.charset.CharsetEncoder.onUnmappableCharacter:(java.nio.charset.CodingErrorAction)java.nio.charset.CharsetEncoder
    85: invokevirtual #62         // java.nio.charset.CharsetEncoder.reset:()java.nio.charset.CharsetEncoder
    88: pop           
    89: aload         4
    91: instanceof    #78         // sun.nio.cs.ArrayEncoder
    94: ifeq          125
    97: aload         4
    99: checkcast     #78         // sun.nio.cs.ArrayEncoder
   102: aload_1       
   103: iload_2       
   104: iload_3       
   105: aload         6
   107: invokeinterface#63, 5      // sun.nio.cs.ArrayEncoder.encode:(char[], int, int, byte[])int
   112: istore        8
   114: aload         6
   116: iload         8
   118: aload_0       
   119: iload         7
   121: invokestatic  #0          // safeTrim:(byte[], int, java.nio.charset.Charset, boolean)byte[]
   124: areturn       
   125: aload         6
   127: invokestatic  #64         // java.nio.ByteBuffer.wrap:(byte[])java.nio.ByteBuffer
   130: astore        8
   132: aload_1       
   133: iload_2       
   134: iload_3       
   135: invokestatic  #65         // java.nio.CharBuffer.wrap:(char[], int, int)java.nio.CharBuffer
   138: astore        9
   140: aload         4
   142: aload         9
   144: aload         8
   146: iconst_1      
   147: invokevirtual #66         // java.nio.charset.CharsetEncoder.encode:(java.nio.CharBuffer, java.nio.ByteBuffer, boolean)java.nio.charset.CoderResult
   150: astore        10
   152: aload         10
   154: invokevirtual #42         // java.nio.charset.CoderResult.isUnderflow:()boolean
   157: ifne          165
   160: aload         10
   162: invokevirtual #43         // java.nio.charset.CoderResult.throwException:()void
   165: aload         4
   167: aload         8
   169: invokevirtual #67         // java.nio.charset.CharsetEncoder.flush:(java.nio.ByteBuffer)java.nio.charset.CoderResult
   172: astore        10
   174: aload         10
   176: invokevirtual #42         // java.nio.charset.CoderResult.isUnderflow:()boolean
   179: ifne          187
   182: aload         10
   184: invokevirtual #43         // java.nio.charset.CoderResult.throwException:()void
   187: goto          202
   190: astore        10
   192: new           #16         // java.lang.Error
   195: dup           
   196: aload         10
   198: invokespecial #13         // java.lang.Error.<init>:(java.lang.Throwable)void
   201: athrow        
   202: aload         6
   204: aload         8
   206: invokevirtual #68         // java.nio.Buffer.position:()int
   209: aload_0       
   210: iload         7
   212: invokestatic  #0          // safeTrim:(byte[], int, java.nio.charset.Charset, boolean)byte[]
   215: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 89842400c0feff4883ec4848896c24404c8bee4c8bf24c8974243041817d08addeadde0f85d20a000048beaddeaddeaddeadde8b7668418504f481feaddeadde0f848f0a0000448b14f50c000000438504d4c5f957c0c4c17b2ac0c4c17b100d00000000c5fb59c1c57b2cd84d63cb4181fb000000800f84810800004c894c241842833cd50c000000030f8442040000498b7760498b57704181fbffffff000f8306080000458d53174183e2f84d63d2488bde4903da483bda0f87ec07000049895f60410f188432c0000000410f18843200010000410f18843240010000410f1884328001000044895e0c48c70601000000c74608addeadde488bc6894c242c4c896c2420458bf3458be84183fe010f8cab000000488d70104963d6488d4ae04885c90f8d3b07000049c7c200000000488d4af04c3bd10f8f11000000c5f9efc0c4a17a7f0416498d4a104c8bd1488d4af84c3bd10f8f11000000c5f9efc0c4a1f97e0416498d4a084c8bd1488d4afc4c3bd10f8f11000000c5f9efc0c4a1797e0416498d4a044c8bd148ffca4c3bd20f8f2a00000046882416498bca48ffc1483bca0f8f170000004688641601498d4a02483bca0f8f0500000046886416024585ed0f840e0700004c8b5424304d85d20f8455080000453bee458bc5450f4fc64963f048ffce4183f8010f8c22000000418b520c48634c242c4803ce448bda4c3bd90f866d0800003b54242c0f86000800004183f8010f8c170000004c8b5c24184c3bde0f862f0800004585f60f848d07000048beaddeaddeaddeadde8b767485f60f854908000041bb000000008b4c242ce9230000000f1f840000000000410fbf744a106681fe80000f830f000000428874181041ffc3ffc1453bc37fe044036c242c458bc3448bd90f1f440000453beb0f8eae000000453b5a0c0f8308080000453bf00f8614080000430fb7745a10418bd3ffc2418bc8ffc181fe800000000f830d0000004288740010448bc1448bdaebbb81fe000800000f826407000081fe00d800000f83ff060000443bf10f86b9060000458d4802453bf10f861b080000448bde41c1eb0c4181cbe000000046885c0010448bde41c1eb064183e33f4181cb8000000044885c081083e63f81ce800000004288740810458d4003448bdae949ffffff453bf00f84ae0600004585c00f8c1a0600004585f60f8c3b060000498b7760498b57704181f8ffffff000f8393040000418d481783e1f84863c94c8bc94c03ce4c3bca0f877a0400004d894f600f188431c00000000f188431000100000f188431400100000f188431800100004489460c48c70601000000c74608addeadde458be84889442408488bc6453bee458bc5450f4fc64d63d04983fa010f8ccb0000004c8b4424084c8d58104d8d40104d8d4ae04d85c948c7c1000000000f8de70300004d8d4af0493bc90f8f13000000c4c17a6f0408c4c17a7f040b4c8d4910498bc94d8d4af8493bc90f8f13000000c4c1f96e0408c4c1f97e040b4c8d4908498bc94d8d4afc493bc90f8f13000000c4c1796e0408c4c1797e040b4c8d4904498bc94d8bca49ffc9493bc90f8f3b000000410fbe1c0841881c0b488bd948ffc3493bd90f8f23000000410fbe5c080141885c0b01488d5902493bd90f8f0b000000450fbe4408024588440b024d63dd4d3bda0f8f53020000488b6c24404883c448850500000000c5f877c34c896c242049c1e20348beaddeaddeaddeaddeba03000000498d7a10488d46108bead1e58bdd83e31f83e5e00f8453000000488d3c2f488d042848f7dd90c5fe6f042fc5fe6f0c28c5fdefc1c4e27d17c00f85a60000004883c52075e185db0f8491000000c5fe6f441fe0c5fe6f4c18e0c5fdefc1c4e27d17c00f857d000000e9710000008beb83e30783e5f80f8435000000488d3c2f488d042848f7dd4c8b2c2f4c3b2c280f85510000004883c50875ec85db0f843c0000004c8b6c1ff84c3b6c18f87537eb2e8bebf7c3040000007410448b2f443b287523488d7f04488d4004f7c302000000740c440fb72f0fb728443bed7507bb01000000eb0233db85db0f8536050000498b7760498b57704181fbffffff000f8396020000458d53174183e2f84d63d2498bda4803de483bda0f877c02000049895f60410f188432c0000000410f18843200010000410f18843240010000410f1884328001000044895e0c48c70601000000c74608addeadde488bc6458be8894c242c458bf34183fe010f8cab000000488d70104963d6488d4ae04885c90f8dcc01000049c7c200000000488d4af04c3bd10f8f11000000c5f9efc0c4a17a7f0416498d4a104c8bd1488d4af84c3bd10f8f11000000c5f9efc0c4a1f97e0416498d4a084c8bd1488d4afc4c3bd10f8f11000000c5f9efc0c4a1797e0416498d4a044c8bd148ffca4c3bd20f8f2a00000046882416498bca48ffc1483bca0f8f170000004688641601498d4a02483bca0f8f0500000046886416024585ed0f85bcfaffffe9d80100004e8d4410104d2bda4d8d53e04d85d20f8d9c00000049c7c1000000004d8d53f04d3bca0f8f11000000c5f9efc0c4817a7f04084d8d51104d8bca4d8d53f84d3bca0f8f11000000c5f9efc0c481f97e04084d8d51084d8bca4d8d53fc4d3bca0f8f11000000c5f9efc0c481797e04084d8d51044d8bca49ffcb4d3bcb0f8f2bfdffff478824084d8bd149ffc24d3bd30f8f18fdffff47886408014d8d51024d3bd30f8f06fdffff4788640802e9fcfcffffc5f9efc049c7c1000000006690c4817e7f04084d8d49204d3bca7ef1e94affffff660f1f440000660f1f440000c4c17e6f0408c4c17e7f040b488d4920493bc97eebe9fffbffff44895c241444896c2410488944240848beaddeaddeaddeadde418bd0b900000000458be8e80000000090e998fbffffc5f9efc049c7c200000000660f1f440000660f1f440000c4a17e7f04164d8d52204c3bd17ef1e910feffffc5f9efc049c7c20000000090c4a17e7f04164d8d52204c3bd17ef1e9acf8ffff458be8894c242c458bf348beaddeaddeaddeadde418bd6b900000000e80000000090e9a4fdffff894c242c4c896c2420458be848beaddeaddeaddeadde418bd3b900000000458bf3e80000000090e934f8ffff488b6c24404883c448850500000000c5f877c3488b6c24404883c448850500000000c5f877c3894c242c4c896c2420458be8c5f92ec07a060f841e00000048c74424180000000041bb000000004c8b7424304c8b6c2420e94ef7ffffc5f157c9c5f92ec10f87140000004c894c24184c8b7424304c8b6c2420e92cf7ffff48c7442418ffffff7f41bbffffff7f4c8b7424304c8b6c2420e90ef7ffff44895c241444896c241041ba9f4dfdff458be84c8bc04589979c0200004d89a7a8020000e8000000009044895c241444896c241041ba9f4dfdffebd444895c241444896c241041bae51bfeffebc249baaddeaddeaddeadde4d8bda41bae544feff8b4c242c4589979c0200004d899fa8020000e8000000009044895c241444896c241041baed25feffeb8544895c241444896c241041baed0afeffe970ffffff49baaddeaddeaddeadde4d8bda41bae558feff8b4c242cebac49baaddeaddeaddeadde4d8bda41baf55dfeff8b4c242ceb9344895c241444896c241041baed26feffe929ffffff49baaddeaddeaddeadde4d8bda41bae544feff8b4c242ce962ffffff49baaddeaddeaddeadde4d8bda41bae558feff8b4c242ce946ffffff49bb00000000000000008b4c242c41baed5ffeffe92dffffff44895c241444896c241041bae537feffe9c3feffff44895c241444896c241041bae5effdffe9aefeffff41baed8cfeff894c242c4c896c2420458be84589979c0200004d89a7a8020000e8000000009041bacd95feff894c242c4c896c2420458be8ebd841baed6afeff458be8894c242cebc944895c241444896c241041bae512feffe950feffffe80000000090e80000000090  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 3  <||@
  Comment 0 1  <||@
  Comment 11 block B0 null  <||@
  Comment 11 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 11 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 16 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@b0dad63 slotKind: QWORD  <||@
  Comment 16 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 19 8 r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 22 10 stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 27 12 CMP [r13|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/nio/cs/UTF_8;, resolved>;compressed} state [bci:0]  <||@
  Comment 27 [r13:0, r14:0, stack:48]at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4  |5  |6  |7  |8  |9  |10 
     locals:  |r13|QWORD[.]  |r14|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-  |-  |-  |-  |-  |-  |-    <||@
  Comment 27 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 27 {meta{HotSpotType<Lsun/nio/cs/UTF_8;, resolved>;compressed}}  <||@
  Comment 35 14 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B183  <||@
  Comment 41 block B1 null  <||@
  Comment 41 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 41 18 rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.nio.charset.Charset]  <||@
  Comment 41 {Object[Class:java.nio.charset.Charset]}  <||@
  Comment 51 20 rsi|DWORD[.] = MOV [rsi|QWORD[.] + 104] size: DWORD  <||@
  Comment 54 22 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:0]  <||@
  Comment 54 [rsi:0, r13:0, r14:0, stack:48]at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4  |5  |6  |7  |8  |9  |10 
     locals:  |r13|QWORD[.]  |r14|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-  |-  |-  |-  |-  |-  |-    <||@
  Comment 54 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 58 24 CMP rsi|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[String:"1.4"]  <||@
  Comment 58 {NarrowOop[String:"1.4"]}  <||@
  Comment 64 26 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 70 block B3 null  <||@
  Comment 70 40 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 70 42 r10|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 78 44 NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:0]  <||@
  Comment 78 [r10:0, r13:0, r14:0, stack:48]at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4  |5  |6  |7  |8  |9  |10 
     locals:  |r13|QWORD[.]  |r14|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-  |-  |-  |-  |-  |-  |-    <||@
  Comment 78 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 82 46 xmm0|DOUBLE = VCVTSI2SD r8|DWORD  <||@
  Comment 91 48 xmm1|DOUBLE = VMOVE input: double[3.0|0x4008000000000000]  <||@
  Comment 91 {DataSection[0x0]}  <||@
  Comment 100 50 xmm0|DOUBLE = VMULSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM  <||@
  Comment 104 52 r11|DWORD = VCVTTSD2SI xmm0|DOUBLE nZ: XMM  <||@
  Comment 108 54 r9|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 111 56 CMP r11|DWORD y: -2147483648 size: DWORD  <||@
  Comment 118 58 BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B9  <||@
  Comment 124 block B9 null  <||@
  Comment 124 126 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 124 128 stack:56|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 129 130 JUMP ~[] destination: B9 -> B10  <||@
  Comment 129 block B10 null  <||@
  Comment 129 132 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 129 134 CMP [r10|DWORD[.] * 8 + 12] y: 3 size: DWORD  <||@
  Comment 138 136 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B46  <||@
  Comment 144 block B46 null  <||@
  Comment 144 438 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 144 440 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 148 442 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 152 444 CMP r11|DWORD y: 16777215 size: DWORD  <||@
  Comment 159 446 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B46 -> B47 falseDestination: B46 -> B51  <||@
  Comment 165 block B47 null  <||@
  Comment 165 448 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 165 450 r10|DWORD = LEA [r11|DWORD + 23] size: DWORD  <||@
  Comment 169 452 r10|DWORD = AND r10|DWORD y: -8 size: DWORD  <||@
  Comment 173 454 r10|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 176 456 rbx|QWORD = ADD (x: rsi|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 182 458 CMP (x: rbx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 185 460 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B47 -> B51 falseDestination: B47 -> B49  <||@
  Comment 191 block B49 null  <||@
  Comment 191 472 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 191 474 MOV (x: [r15|QWORD + 96], y: rbx|QWORD) size: QWORD  <||@
  Comment 195 476 AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 192] instr: 0  <||@
  Comment 204 478 AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 213 480 AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 222 482 AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 231 484 MOV (x: [rsi|QWORD + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 235 486 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 242 488 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 242 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 249 490 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 249 492 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 252 494 stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 256 496 stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 261 498 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 264 500 r13|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 267 502 JUMP ~[] destination: B49 -> B52  <||@
  Comment 267 block B52 null  <||@
  Comment 267 528 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 267 530 CMP r14|DWORD y: 1 size: DWORD  <||@
  Comment 271 532 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B52 -> B75 falseDestination: B52 -> B54  <||@
  Comment 277 block B54 null  <||@
  Comment 277 538 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 277 540 rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 281 542 rdx|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 284 544 rcx|QWORD = LEA [rdx|QWORD - 32] size: QWORD  <||@
  Comment 288 546 TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 291 548 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B54 -> B55 falseDestination: B54 -> B56  <||@
  Comment 297 block B55 null  <||@
  Comment 297 550 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 297 552 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 304 554 JUMP ~[] destination: B55 -> B59  <||@
  Comment 304 block B59 null  <||@
  Comment 304 578 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 304 580 rcx|QWORD = LEA [rdx|QWORD - 16] size: QWORD  <||@
  Comment 308 582 CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 311 584 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B62 falseDestination: B59 -> B61  <||@
  Comment 317 block B61 null  <||@
  Comment 317 590 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 317 592 xmm0|V128_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 321 594 J (address: [rsi|QWORD[.] + r10|QWORD * 1], input: xmm0|V128_BYTE) nZ: XMM oh: VMOVDQU  <||@
  Comment 327 596 rcx|QWORD = LEA [r10|QWORD + 16] size: QWORD  <||@
  Comment 331 598 r10|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 334 600 JUMP ~[] destination: B61 -> B62  <||@
  Comment 334 block B62 null  <||@
  Comment 334 602 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 334 604 rcx|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 338 606 CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 341 608 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B62 -> B65 falseDestination: B62 -> B64  <||@
  Comment 347 block B64 null  <||@
  Comment 347 614 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 347 616 xmm0|V64_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 351 618 J (address: [rsi|QWORD[.] + r10|QWORD * 1], input: xmm0|V64_BYTE) nZ: XMM oh: VMOVQ  <||@
  Comment 357 620 rcx|QWORD = LEA [r10|QWORD + 8] size: QWORD  <||@
  Comment 361 622 r10|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 364 624 JUMP ~[] destination: B64 -> B65  <||@
  Comment 364 block B65 null  <||@
  Comment 364 626 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 364 628 rcx|QWORD = LEA [rdx|QWORD - 4] size: QWORD  <||@
  Comment 368 630 CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 371 632 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B65 -> B68 falseDestination: B65 -> B67  <||@
  Comment 377 block B67 null  <||@
  Comment 377 638 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 377 640 xmm0|V32_BYTE = L oc: SIMD<0,0,0,0>  <||@
  Comment 381 642 J (address: [rsi|QWORD[.] + r10|QWORD * 1], input: xmm0|V32_BYTE) nZ: XMM oh: VMOVD  <||@
  Comment 387 644 rcx|QWORD = LEA [r10|QWORD + 4] size: QWORD  <||@
  Comment 391 646 r10|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 394 648 JUMP ~[] destination: B67 -> B68  <||@
  Comment 394 block B68 null  <||@
  Comment 394 650 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 394 652 rdx|QWORD = DEC rdx|QWORD size: QWORD  <||@
  Comment 397 654 CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 400 656 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B68 -> B75 falseDestination: B68 -> B70  <||@
  Comment 406 block B70 null  <||@
  Comment 406 662 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 406 664 MOVB (x: [rsi|QWORD[.] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 410 666 rcx|QWORD = INC r10|QWORD size: QWORD  <||@
  Comment 416 668 CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 419 670 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B70 -> B75 falseDestination: B70 -> B72  <||@
  Comment 425 block B72 null  <||@
  Comment 425 676 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 425 678 MOVB (x: [rsi|QWORD[.] + r10|QWORD * 1 + 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 430 680 rcx|QWORD = LEA [r10|QWORD + 2] size: QWORD  <||@
  Comment 434 682 CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 437 684 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B72 -> B75 falseDestination: B72 -> B74  <||@
  Comment 443 block B74 null  <||@
  Comment 443 690 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 443 692 MOVB (x: [rsi|QWORD[.] + r10|QWORD * 1 + 2], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 448 694 JUMP ~[] destination: B74 -> B75  <||@
  Comment 448 block B75 null  <||@
  Comment 448 696 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 448 698 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 451 700 BRANCH trueDestinationProbability: 0.04030493641460409 condition: = trueDestination: B75 -> B76 falseDestination: B75 -> B78  <||@
  Comment 457 block B78 null  <||@
  Comment 457 712 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 457 420 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 462 714 TEST (x: r10|QWORD[.], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 465 716 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80  <||@
  Comment 471 block B80 null  <||@
  Comment 471 730 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 471 732 CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 474 734 r8|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r14|DWORD) condition: >  <||@
  Comment 481 736 rsi|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 484 738 rsi|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 487 740 CMP r8|DWORD y: 1 size: DWORD  <||@
  Comment 491 742 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B80 -> B85 falseDestination: B80 -> B82  <||@
  Comment 497 block B82 null  <||@
  Comment 497 748 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 497 750 rdx|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 501 752 rcx|QWORD = MOVSXD stack:36|DWORD size: QWORD  <||@
  Comment 506 754 rcx|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 509 756 r11|QWORD = MOV rdx|DWORD size: DWORD  <||@
  Comment 512 758 CMP (x: r11|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 515 760 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B82 -> B83 falseDestination: B82 -> B180  <||@
  Comment 521 block B83 null  <||@
  Comment 521 762 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 521 764 CMP (x: rdx|DWORD, y: stack:36|DWORD) size: DWORD  <||@
  Comment 525 766 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B83 -> B85 falseDestination: B83 -> B179  <||@
  Comment 531 block B85 null  <||@
  Comment 531 772 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 531 774 CMP r8|DWORD y: 1 size: DWORD  <||@
  Comment 535 776 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B85 -> B91 falseDestination: B85 -> B87  <||@
  Comment 541 block B87 null  <||@
  Comment 541 782 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 541 784 r11|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 546 786 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 549 788 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B87 -> B88 falseDestination: B87 -> B178  <||@
  Comment 555 block B88 null  <||@
  Comment 555 790 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 555 792 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 558 794 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B88 -> B89 falseDestination: B88 -> B91  <||@
  Comment 564 block B91 null  <||@
  Comment 564 812 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 564 814 rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.lang.System]  <||@
  Comment 564 {Object[Class:java.lang.System]}  <||@
  Comment 574 816 rsi|DWORD[.] = MOV [rsi|QWORD[.] + 116] size: DWORD  <||@
  Comment 577 818 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 579 820 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B91 -> B92 falseDestination: B91 -> B177  <||@
  Comment 585 block B92 null  <||@
  Comment 585 822 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 585 824 r11|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 591 826 rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 595 828 JUMP ~[] destination: B92 -> B93  <||@
  Comment 600 block B94 loop 2 depth 1 header:77|LoopBegin  <||@
  Comment 600 836 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 608 838 rsi|DWORD = MOVSX [r10|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 614 840 CMP rsi|DWORD y: 128 size: WORD  <||@
  Comment 619 842 BRANCH trueDestinationProbability: 0.9998902719253914 condition: |<| trueDestination: B94 -> B95 falseDestination: B94 -> B98  <||@
  Comment 625 block B95 loop 2 depth 1 header:77|LoopBegin  <||@
  Comment 625 844 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 625 846 MOVB (x: [rax|QWORD[.] + r11|DWORD * 1 + 16], y: rsi|DWORD) size: BYTE  <||@
  Comment 630 848 r11|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 633 850 rcx|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 635 852 JUMP ~[] destination: B95 -> B93  <||@
  Comment 635 block B93 loop 2 depth 1 header:77|LoopBegin  <||@
  Comment 635 830 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 635 832 CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 638 834 BRANCH trueDestinationProbability: 0.9835900530402635 condition: > trueDestination: B93 -> B94 falseDestination: B93 -> B98  <||@
  Comment 640 block B98 null  <||@
  Comment 640 862 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 640 864 r13|DWORD = ADD (x: stack:36|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 645 866 r8|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 648 868 r11|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 651 870 JUMP ~[] destination: B98 -> B99  <||@
  Comment 651 block B99 loop 3 depth 1 header:113|LoopBegin  <||@
  Comment 651 872 [] = LABEL numbPhis: 2 align: true label: ?  <||@
  Comment 656 874 CMP (x: r13|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 659 876 BRANCH trueDestinationProbability: 0.16211788211788214 condition: > trueDestination: B99 -> B100 falseDestination: B99 -> B115  <||@
  Comment 665 block B100 loop 3 depth 1 header:113|LoopBegin  <||@
  Comment 665 878 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 665 880 CMP (x: r11|DWORD, y: [r10|QWORD[.] + 12]) size: DWORD  <||@
  Comment 669 882 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B100 -> B101 falseDestination: B100 -> B114  <||@
  Comment 675 block B101 loop 3 depth 1 header:113|LoopBegin  <||@
  Comment 675 884 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 675 886 CMP (x: r14|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 678 888 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B101 -> B102 falseDestination: B101 -> B113  <||@
  Comment 684 block B102 loop 3 depth 1 header:113|LoopBegin  <||@
  Comment 684 890 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 684 892 rsi|DWORD = MOVZX [r10|QWORD[.] + r11|DWORD * 2 + 16] size: DWORD  <||@
  Comment 690 894 rdx|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 695 896 rcx|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 700 898 CMP rsi|DWORD y: 128 size: DWORD  <||@
  Comment 706 900 BRANCH trueDestinationProbability: 0.942568400295785 condition: |<| trueDestination: B102 -> B103 falseDestination: B102 -> B104  <||@
  Comment 712 block B103 loop 3 depth 1 header:113|LoopBegin  <||@
  Comment 712 902 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 712 904 MOVB (x: [rax|QWORD[.] + r8|DWORD * 1 + 16], y: rsi|DWORD) size: BYTE  <||@
  Comment 717 906 r8|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 720 908 r11|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 723 910 JUMP ~[] destination: B103 -> B99  <||@
  Comment 725 block B104 loop 3 depth 1 header:113|LoopBegin  <||@
  Comment 725 912 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 725 914 CMP rsi|DWORD y: 2048 size: DWORD  <||@
  Comment 731 916 BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B104 -> B105 falseDestination: B104 -> B106  <||@
  Comment 737 block B106 loop 3 depth 1 header:113|LoopBegin  <||@
  Comment 737 932 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 737 934 CMP rsi|DWORD y: 55296 size: DWORD  <||@
  Comment 743 936 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B106 -> B107 falseDestination: B106 -> B112  <||@
  Comment 749 block B107 loop 3 depth 1 header:113|LoopBegin  <||@
  Comment 749 938 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 749 940 CMP (x: r14|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 752 942 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B107 -> B108 falseDestination: B107 -> B111  <||@
  Comment 758 block B108 loop 3 depth 1 header:113|LoopBegin  <||@
  Comment 758 944 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 758 946 r9|DWORD = LEA [r8|DWORD + 2] size: DWORD  <||@
  Comment 762 948 CMP (x: r14|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 765 950 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B108 -> B109 falseDestination: B108 -> B110  <||@
  Comment 771 block B109 loop 3 depth 1 header:113|LoopBegin  <||@
  Comment 771 952 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 771 954 r11|DWORD = SHR rsi|DWORD y: 12 size: DWORD  <||@
  Comment 778 956 r11|DWORD = OR r11|DWORD y: 224 size: DWORD  <||@
  Comment 785 958 MOVB (x: [rax|QWORD[.] + r8|DWORD * 1 + 16], y: r11|DWORD) size: BYTE  <||@
  Comment 790 960 r11|DWORD = SHR rsi|DWORD y: 6 size: DWORD  <||@
  Comment 797 962 r11|DWORD = AND r11|DWORD y: 63 size: DWORD  <||@
  Comment 801 964 r11|DWORD = OR r11|DWORD y: 128 size: DWORD  <||@
  Comment 808 966 MOVB (x: [rax|QWORD[.] + rcx|DWORD * 1 + 16], y: r11|DWORD) size: BYTE  <||@
  Comment 813 968 rsi|DWORD = AND rsi|DWORD y: 63 size: DWORD  <||@
  Comment 816 970 rsi|DWORD = OR rsi|DWORD y: 128 size: DWORD  <||@
  Comment 822 972 MOVB (x: [rax|QWORD[.] + r9|DWORD * 1 + 16], y: rsi|DWORD) size: BYTE  <||@
  Comment 827 974 r8|DWORD = LEA [r8|DWORD + 3] size: DWORD  <||@
  Comment 831 976 r11|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 834 978 JUMP ~[] destination: B109 -> B99  <||@
  Comment 839 block B115 null  <||@
  Comment 839 1050 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 839 1052 CMP (x: r14|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 842 1054 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117  <||@
  Comment 848 block B117 null  <||@
  Comment 848 1070 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 848 1072 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 851 1074 BRANCH trueDestinationProbability: 9.999999999998899E-5 condition: < trueDestination: B117 -> B118 falseDestination: B117 -> B119  <||@
  Comment 857 block B119 null  <||@
  Comment 857 1090 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 857 1092 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 860 1094 BRANCH trueDestinationProbability: 9.999999999998899E-5 condition: < trueDestination: B119 -> B120 falseDestination: B119 -> B122  <||@
  Comment 866 block B122 null  <||@
  Comment 866 1118 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 866 1120 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 870 1122 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 874 1124 CMP r8|DWORD y: 16777215 size: DWORD  <||@
  Comment 881 1126 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B122 -> B123 falseDestination: B122 -> B127  <||@
  Comment 887 block B123 null  <||@
  Comment 887 1128 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 887 1130 rcx|DWORD = LEA [r8|DWORD + 23] size: DWORD  <||@
  Comment 891 1132 rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD  <||@
  Comment 894 1134 rcx|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 897 1136 r9|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 903 1138 CMP (x: r9|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 906 1140 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B123 -> B127 falseDestination: B123 -> B125  <||@
  Comment 912 block B125 null  <||@
  Comment 912 1152 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 912 1154 MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD  <||@
  Comment 916 1156 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 192] instr: 0  <||@
  Comment 924 1158 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 932 1160 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 940 1162 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 948 1164 MOV (x: [rsi|QWORD + 12], y: r8|DWORD) size: DWORD  <||@
  Comment 952 1166 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 959 1168 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 959 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 966 1170 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 966 1172 r13|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 969 1174 stack:72|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 974 1176 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 977 1178 JUMP ~[] destination: B125 -> B128  <||@
  Comment 977 block B128 null  <||@
  Comment 977 1204 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 977 1206 CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 980 1208 r8|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r14|DWORD) condition: >  <||@
  Comment 987 1210 r10|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 990 1212 CMP r10|QWORD y: 1 size: QWORD  <||@
  Comment 994 1214 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B128 -> B151 falseDestination: B128 -> B130  <||@
  Comment 1000 block B130 null  <||@
  Comment 1000 1220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1000 1222 r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1005 1224 r11|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 1009 1226 r8|QWORD[.] = LEA [r8|QWORD[.] + 16] size: QWORD  <||@
  Comment 1013 1228 r9|QWORD = LEA [r10|QWORD - 32] size: QWORD  <||@
  Comment 1017 1230 TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 1020 1236 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1027 1232 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B130 -> B135 falseDestination: B130 -> B133  <||@
  Comment 1033 block B135 null  <||@
  Comment 1033 1262 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1033 1264 r9|QWORD = LEA [r10|QWORD - 16] size: QWORD  <||@
  Comment 1037 1266 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 1040 1268 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B135 -> B138 falseDestination: B135 -> B137  <||@
  Comment 1046 block B137 null  <||@
  Comment 1046 1274 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1046 1276 xmm0|V128_BYTE = H [r8|QWORD[.] + rcx|QWORD * 1] nZ: XMM oh: VMOVDQU  <||@
  Comment 1052 1278 J (address: [r11|QWORD[.] + rcx|QWORD * 1], input: xmm0|V128_BYTE) nZ: XMM oh: VMOVDQU  <||@
  Comment 1058 1280 r9|QWORD = LEA [rcx|QWORD + 16] size: QWORD  <||@
  Comment 1062 1282 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 1065 1284 JUMP ~[] destination: B137 -> B138  <||@
  Comment 1065 block B138 null  <||@
  Comment 1065 1286 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1065 1288 r9|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 1069 1290 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 1072 1292 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B138 -> B141 falseDestination: B138 -> B140  <||@
  Comment 1078 block B140 null  <||@
  Comment 1078 1298 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1078 1300 xmm0|V64_BYTE = H [r8|QWORD[.] + rcx|QWORD * 1] nZ: XMM oh: VMOVQ  <||@
  Comment 1084 1302 J (address: [r11|QWORD[.] + rcx|QWORD * 1], input: xmm0|V64_BYTE) nZ: XMM oh: VMOVQ  <||@
  Comment 1090 1304 r9|QWORD = LEA [rcx|QWORD + 8] size: QWORD  <||@
  Comment 1094 1306 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 1097 1308 JUMP ~[] destination: B140 -> B141  <||@
  Comment 1097 block B141 null  <||@
  Comment 1097 1310 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1097 1312 r9|QWORD = LEA [r10|QWORD - 4] size: QWORD  <||@
  Comment 1101 1314 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 1104 1316 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B141 -> B144 falseDestination: B141 -> B143  <||@
  Comment 1110 block B143 null  <||@
  Comment 1110 1322 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1110 1324 xmm0|V32_BYTE = H [r8|QWORD[.] + rcx|QWORD * 1] nZ: XMM oh: VMOVD  <||@
  Comment 1116 1326 J (address: [r11|QWORD[.] + rcx|QWORD * 1], input: xmm0|V32_BYTE) nZ: XMM oh: VMOVD  <||@
  Comment 1122 1328 r9|QWORD = LEA [rcx|QWORD + 4] size: QWORD  <||@
  Comment 1126 1330 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 1129 1332 JUMP ~[] destination: B143 -> B144  <||@
  Comment 1129 block B144 null  <||@
  Comment 1129 1334 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1129 1336 r9|QWORD = DEC r10|QWORD size: QWORD  <||@
  Comment 1135 1338 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 1138 1340 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B144 -> B151 falseDestination: B144 -> B146  <||@
  Comment 1144 block B146 null  <||@
  Comment 1144 1346 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1144 1348 rbx|DWORD = MOVSXB [r8|QWORD[.] + rcx|QWORD * 1] size: DWORD  <||@
  Comment 1149 1350 MOVB (x: [r11|QWORD[.] + rcx|QWORD * 1], y: rbx|DWORD) size: BYTE  <||@
  Comment 1153 1352 rbx|QWORD = INC rcx|QWORD size: QWORD  <||@
  Comment 1159 1354 CMP (x: rbx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 1162 1356 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B146 -> B151 falseDestination: B146 -> B148  <||@
  Comment 1168 block B148 null  <||@
  Comment 1168 1362 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1168 1364 rbx|DWORD = MOVSXB [r8|QWORD[.] + rcx|QWORD * 1 + 1] size: DWORD  <||@
  Comment 1174 1366 MOVB (x: [r11|QWORD[.] + rcx|QWORD * 1 + 1], y: rbx|DWORD) size: BYTE  <||@
  Comment 1179 1368 rbx|QWORD = LEA [rcx|QWORD + 2] size: QWORD  <||@
  Comment 1183 1370 CMP (x: rbx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 1186 1372 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B148 -> B151 falseDestination: B148 -> B150  <||@
  Comment 1192 block B150 null  <||@
  Comment 1192 1378 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1192 1380 r8|DWORD = MOVSXB [r8|QWORD[.] + rcx|QWORD * 1 + 2] size: DWORD  <||@
  Comment 1198 1382 MOVB (x: [r11|QWORD[.] + rcx|QWORD * 1 + 2], y: r8|DWORD) size: BYTE  <||@
  Comment 1203 1384 JUMP ~[] destination: B150 -> B151  <||@
  Comment 1203 block B151 null  <||@
  Comment 1203 1386 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1203 1388 r11|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 1206 1390 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1209 1392 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B151 -> B152 falseDestination: B151 -> B175  <||@
  Comment 1215 block B175 null  <||@
  Comment 1215 1560 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1215 1562 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1224 12  <||@
  Comment 1234 block B11 null  <||@
  Comment 1234 138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1234 140 stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1239 142 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@644bd6a encoding: base: 0 shift: 3  <||@
  Comment 1243 144 rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[3]{1, ., 4}]  <||@
  Comment 1243 {Object[char[3]{1, ., 4}]}  <||@
  Comment 1253 146 rdx|DWORD = MOVE input: int[3|0x3]  <||@
  Comment 1258 148 rbx|DWORD = ARRAY_EQUALS (~array1Value: r10|QWORD[.], ~array2Value: rsi|QWORD[.], ~lengthValue: rdx|DWORD) {temp1: rdi|QWORD[*], temp2: rax|QWORD[*], temp3: rbp|QWORD, temp4: r13|QWORD, temp5: -, tempXMM: -, vectorTemp1: xmm0|DOUBLE, vectorTemp2: xmm1|DOUBLE} arrayBaseOffset: 16 arrayIndexScale: 2 kind: char  <||@
  Comment 1489 150 TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 1491 152 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B45  <||@
  Comment 1497 block B12 null  <||@
  Comment 1497 154 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1497 156 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1501 158 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 1505 160 CMP r11|DWORD y: 16777215 size: DWORD  <||@
  Comment 1512 162 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B12 -> B13 falseDestination: B12 -> B17  <||@
  Comment 1518 block B13 null  <||@
  Comment 1518 164 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1518 166 r10|DWORD = LEA [r11|DWORD + 23] size: DWORD  <||@
  Comment 1522 168 r10|DWORD = AND r10|DWORD y: -8 size: DWORD  <||@
  Comment 1526 170 r10|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 1529 172 rbx|QWORD = ADD (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1535 174 CMP (x: rbx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1538 176 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B17 falseDestination: B13 -> B15  <||@
  Comment 1544 block B15 null  <||@
  Comment 1544 188 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1544 190 MOV (x: [r15|QWORD + 96], y: rbx|QWORD) size: QWORD  <||@
  Comment 1548 192 AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 192] instr: 0  <||@
  Comment 1557 194 AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 1566 196 AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 1575 198 AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 1584 200 MOV (x: [rsi|QWORD + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 1588 202 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 1595 204 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 1595 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 1602 206 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1602 208 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1605 210 r13|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1608 212 stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1612 214 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1615 216 JUMP ~[] destination: B15 -> B18  <||@
  Comment 1615 block B18 null  <||@
  Comment 1615 240 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1615 242 CMP r14|DWORD y: 1 size: DWORD  <||@
  Comment 1619 244 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B18 -> B41 falseDestination: B18 -> B20  <||@
  Comment 1625 block B20 null  <||@
  Comment 1625 250 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1625 252 rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 1629 254 rdx|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 1632 256 rcx|QWORD = LEA [rdx|QWORD - 32] size: QWORD  <||@
  Comment 1636 258 TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1639 260 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22  <||@
  Comment 1645 block B21 null  <||@
  Comment 1645 262 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1645 264 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1652 266 JUMP ~[] destination: B21 -> B25  <||@
  Comment 1652 block B25 null  <||@
  Comment 1652 290 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1652 292 rcx|QWORD = LEA [rdx|QWORD - 16] size: QWORD  <||@
  Comment 1656 294 CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1659 296 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B25 -> B28 falseDestination: B25 -> B27  <||@
  Comment 1665 block B27 null  <||@
  Comment 1665 302 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1665 304 xmm0|V128_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 1669 306 J (address: [rsi|QWORD[.] + r10|QWORD * 1], input: xmm0|V128_BYTE) nZ: XMM oh: VMOVDQU  <||@
  Comment 1675 308 rcx|QWORD = LEA [r10|QWORD + 16] size: QWORD  <||@
  Comment 1679 310 r10|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 1682 312 JUMP ~[] destination: B27 -> B28  <||@
  Comment 1682 block B28 null  <||@
  Comment 1682 314 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1682 316 rcx|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 1686 318 CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1689 320 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B28 -> B31 falseDestination: B28 -> B30  <||@
  Comment 1695 block B30 null  <||@
  Comment 1695 326 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1695 328 xmm0|V64_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 1699 330 J (address: [rsi|QWORD[.] + r10|QWORD * 1], input: xmm0|V64_BYTE) nZ: XMM oh: VMOVQ  <||@
  Comment 1705 332 rcx|QWORD = LEA [r10|QWORD + 8] size: QWORD  <||@
  Comment 1709 334 r10|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 1712 336 JUMP ~[] destination: B30 -> B31  <||@
  Comment 1712 block B31 null  <||@
  Comment 1712 338 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1712 340 rcx|QWORD = LEA [rdx|QWORD - 4] size: QWORD  <||@
  Comment 1716 342 CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1719 344 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B31 -> B34 falseDestination: B31 -> B33  <||@
  Comment 1725 block B33 null  <||@
  Comment 1725 350 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1725 352 xmm0|V32_BYTE = L oc: SIMD<0,0,0,0>  <||@
  Comment 1729 354 J (address: [rsi|QWORD[.] + r10|QWORD * 1], input: xmm0|V32_BYTE) nZ: XMM oh: VMOVD  <||@
  Comment 1735 356 rcx|QWORD = LEA [r10|QWORD + 4] size: QWORD  <||@
  Comment 1739 358 r10|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 1742 360 JUMP ~[] destination: B33 -> B34  <||@
  Comment 1742 block B34 null  <||@
  Comment 1742 362 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1742 364 rdx|QWORD = DEC rdx|QWORD size: QWORD  <||@
  Comment 1745 366 CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1748 368 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B34 -> B41 falseDestination: B34 -> B36  <||@
  Comment 1754 block B36 null  <||@
  Comment 1754 374 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1754 376 MOVB (x: [rsi|QWORD[.] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1758 378 rcx|QWORD = INC r10|QWORD size: QWORD  <||@
  Comment 1764 380 CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1767 382 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B41 falseDestination: B36 -> B38  <||@
  Comment 1773 block B38 null  <||@
  Comment 1773 388 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1773 390 MOVB (x: [rsi|QWORD[.] + r10|QWORD * 1 + 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1778 392 rcx|QWORD = LEA [r10|QWORD + 2] size: QWORD  <||@
  Comment 1782 394 CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1785 396 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B41 falseDestination: B38 -> B40  <||@
  Comment 1791 block B40 null  <||@
  Comment 1791 402 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1791 404 MOVB (x: [rsi|QWORD[.] + r10|QWORD * 1 + 2], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1796 406 JUMP ~[] destination: B40 -> B41  <||@
  Comment 1796 block B41 null  <||@
  Comment 1796 408 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1796 410 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 1799 412 BRANCH trueDestinationProbability: 0.04030493641460409 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B78  <||@
  Comment 1810 block B152 null  <||@
  Comment 1810 1394 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1810 1396 r8|QWORD[.] = LEA [rax|QWORD[.] + r10|QWORD * 1 + 16] size: QWORD  <||@
  Comment 1815 1398 r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD  <||@
  Comment 1818 1400 r10|QWORD = LEA [r11|QWORD - 32] size: QWORD  <||@
  Comment 1822 1402 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1825 1404 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B152 -> B153 falseDestination: B152 -> B154  <||@
  Comment 1831 block B153 null  <||@
  Comment 1831 1406 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1831 1408 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1838 1410 JUMP ~[] destination: B153 -> B157  <||@
  Comment 1838 block B157 null  <||@
  Comment 1838 1434 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1838 1436 r10|QWORD = LEA [r11|QWORD - 16] size: QWORD  <||@
  Comment 1842 1438 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1845 1440 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B157 -> B160 falseDestination: B157 -> B159  <||@
  Comment 1851 block B159 null  <||@
  Comment 1851 1446 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1851 1448 xmm0|V128_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 1855 1450 J (address: [r8|QWORD[.] + r9|QWORD * 1], input: xmm0|V128_BYTE) nZ: XMM oh: VMOVDQU  <||@
  Comment 1861 1452 r10|QWORD = LEA [r9|QWORD + 16] size: QWORD  <||@
  Comment 1865 1454 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1868 1456 JUMP ~[] destination: B159 -> B160  <||@
  Comment 1868 block B160 null  <||@
  Comment 1868 1458 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1868 1460 r10|QWORD = LEA [r11|QWORD - 8] size: QWORD  <||@
  Comment 1872 1462 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1875 1464 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B160 -> B163 falseDestination: B160 -> B162  <||@
  Comment 1881 block B162 null  <||@
  Comment 1881 1470 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1881 1472 xmm0|V64_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 1885 1474 J (address: [r8|QWORD[.] + r9|QWORD * 1], input: xmm0|V64_BYTE) nZ: XMM oh: VMOVQ  <||@
  Comment 1891 1476 r10|QWORD = LEA [r9|QWORD + 8] size: QWORD  <||@
  Comment 1895 1478 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1898 1480 JUMP ~[] destination: B162 -> B163  <||@
  Comment 1898 block B163 null  <||@
  Comment 1898 1482 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1898 1484 r10|QWORD = LEA [r11|QWORD - 4] size: QWORD  <||@
  Comment 1902 1486 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1905 1488 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B163 -> B166 falseDestination: B163 -> B165  <||@
  Comment 1911 block B165 null  <||@
  Comment 1911 1494 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1911 1496 xmm0|V32_BYTE = L oc: SIMD<0,0,0,0>  <||@
  Comment 1915 1498 J (address: [r8|QWORD[.] + r9|QWORD * 1], input: xmm0|V32_BYTE) nZ: XMM oh: VMOVD  <||@
  Comment 1921 1500 r10|QWORD = LEA [r9|QWORD + 4] size: QWORD  <||@
  Comment 1925 1502 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1928 1504 JUMP ~[] destination: B165 -> B166  <||@
  Comment 1928 block B166 null  <||@
  Comment 1928 1506 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1928 1508 r11|QWORD = DEC r11|QWORD size: QWORD  <||@
  Comment 1931 1510 CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1934 1512 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B166 -> B175 falseDestination: B166 -> B168  <||@
  Comment 1940 block B168 null  <||@
  Comment 1940 1518 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1940 1520 MOVB (x: [r8|QWORD[.] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1944 1522 r10|QWORD = INC r9|QWORD size: QWORD  <||@
  Comment 1950 1524 CMP (x: r10|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1953 1526 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B168 -> B175 falseDestination: B168 -> B170  <||@
  Comment 1959 block B170 null  <||@
  Comment 1959 1532 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1959 1534 MOVB (x: [r8|QWORD[.] + r9|QWORD * 1 + 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1964 1536 r10|QWORD = LEA [r9|QWORD + 2] size: QWORD  <||@
  Comment 1968 1538 CMP (x: r10|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1971 1540 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B170 -> B175 falseDestination: B170 -> B172  <||@
  Comment 1977 block B172 null  <||@
  Comment 1977 1546 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1977 1548 MOVB (x: [r8|QWORD[.] + r9|QWORD * 1 + 2], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1982 1550 JUMP ~[] destination: B172 -> B175  <||@
  Comment 1987 block B154 null  <||@
  Comment 1987 1412 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1987 1414 xmm0|V256_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 1991 1416 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1998 1418 JUMP ~[] destination: B154 -> B155  <||@
  Comment 1998 block B155 loop 5 depth 1 header:1222|LoopBegin  <||@
  Comment 1998 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 2000 1422 J (address: [r8|QWORD[.] + r9|QWORD * 1], input: xmm0|V256_BYTE) nZ: YMM oh: VMOVDQU  <||@
  Comment 2006 1424 r9|QWORD = LEA [r9|QWORD + 32] size: QWORD  <||@
  Comment 2010 1426 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 2013 1428 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B155 -> B157 falseDestination: B155 -> B155  <||@
  Comment 2020 block B133 loop 4 depth 1 header:1147|LoopBegin  <||@
  Comment 2020 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 2032 1248 xmm0|V256_BYTE = H [r8|QWORD[.] + rcx|QWORD * 1] nZ: YMM oh: VMOVDQU  <||@
  Comment 2038 1250 J (address: [r11|QWORD[.] + rcx|QWORD * 1], input: xmm0|V256_BYTE) nZ: YMM oh: VMOVDQU  <||@
  Comment 2044 1252 rcx|QWORD = LEA [rcx|QWORD + 32] size: QWORD  <||@
  Comment 2048 1254 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 2051 1256 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B133 -> B135 falseDestination: B133 -> B133  <||@
  Comment 2058 block B127 null  <||@
  Comment 2058 1190 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2058 1182 stack:60|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2063 1184 stack:64|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2068 1186 stack:72|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2073 1192 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>}  <||@
  Comment 2073 {meta{HotSpotType<[B, resolved>}}  <||@
  Comment 2083 1194 rdx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 2086 1196 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2091 1198 r13|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 2094 1200 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:54, 107]  <||@
  Comment 2094 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2099 [stack:8, stack:32, stack:48]at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54, duringCall: false, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                                                      |1                  |2               |3  |4                  |5               |6          |7  |8  |9 
     locals:  |vobject:UTF_8$Encoder:0{averageBytesPerChar=float[1.1|0x3f8ccccd],maxBytesPerChar=float[3.0|0x40400000],state=int[0|0x0],charset=stack:48|QWORD[.],replacement=vobject:byte[]:1{0=int[63|0x3f]},malformedInputAction=Object[CodingErrorAction@561514572],unmappableCharacterAction=Object[CodingErrorAction@561514572],cachedDecoder=Object[null],repl=int[63|0x3f],sgp=Object[null]}  |stack:32|QWORD[.]  |stack:60|DWORD  |-  |stack:72|QWORD[.]  |stack:64|DWORD  |r13|DWORD  |-  |-  |- 
  at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6                  |7           |8  |9  |10 
     locals:  |stack:48|QWORD[.]  |-  |-  |-  |-  |-  |stack:72|QWORD[.]  |int[0|0x0]  |-  |-  |-    <||@
  Comment 2100 1202 JUMP ~[] destination: B127 -> B128  <||@
  Comment 2105 block B22 null  <||@
  Comment 2105 268 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2105 270 xmm0|V256_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 2109 272 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2116 274 JUMP ~[] destination: B22 -> B23  <||@
  Comment 2116 block B23 loop 0 depth 1 header:994|LoopBegin  <||@
  Comment 2116 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 2128 278 J (address: [rsi|QWORD[.] + r10|QWORD * 1], input: xmm0|V256_BYTE) nZ: YMM oh: VMOVDQU  <||@
  Comment 2134 280 r10|QWORD = LEA [r10|QWORD + 32] size: QWORD  <||@
  Comment 2138 282 CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 2141 284 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B23 -> B25 falseDestination: B23 -> B23  <||@
  Comment 2148 block B56 null  <||@
  Comment 2148 556 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2148 558 xmm0|V256_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 2152 560 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2159 562 JUMP ~[] destination: B56 -> B57  <||@
  Comment 2159 block B57 loop 1 depth 1 header:1072|LoopBegin  <||@
  Comment 2159 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 2160 566 J (address: [rsi|QWORD[.] + r10|QWORD * 1], input: xmm0|V256_BYTE) nZ: YMM oh: VMOVDQU  <||@
  Comment 2166 568 r10|QWORD = LEA [r10|QWORD + 32] size: QWORD  <||@
  Comment 2170 570 CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 2173 572 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B57 -> B59 falseDestination: B57 -> B57  <||@
  Comment 2180 block B17 null  <||@
  Comment 2180 228 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2180 220 r13|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 2183 222 stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2187 224 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2190 230 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>}  <||@
  Comment 2190 {meta{HotSpotType<[B, resolved>}}  <||@
  Comment 2200 232 rdx|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 2203 234 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2208 236 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 2208 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2213 [stack:32, stack:48]at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2               |3          |4  |5  |6  |7  |8  |9  |10 
     locals:  |stack:48|QWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |r13|DWORD  |-  |-  |-  |-  |-  |-  |-    <||@
  Comment 2214 238 JUMP ~[] destination: B17 -> B18  <||@
  Comment 2219 block B51 null  <||@
  Comment 2219 514 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2219 506 stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2223 508 stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2228 510 r13|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 2231 516 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>}  <||@
  Comment 2231 {meta{HotSpotType<[B, resolved>}}  <||@
  Comment 2241 518 rdx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2244 520 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2249 522 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2252 524 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 2252 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2257 [stack:32, stack:48]at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2               |3          |4  |5  |6  |7  |8  |9  |10 
     locals:  |stack:48|QWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |r13|DWORD  |-  |-  |-  |-  |-  |-  |-    <||@
  Comment 2258 526 JUMP ~[] destination: B51 -> B52  <||@
  Comment 2263 block B76 null  <||@
  Comment 2263 702 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2263 704 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 2272 12  <||@
  Comment 2282 block B42 null  <||@
  Comment 2282 414 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2282 416 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 2291 12  <||@
  Comment 2301 block B4 null  <||@
  Comment 2301 60 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2301 62 stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2305 64 stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2310 66 r13|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 2313 68 VUCOMISD (x: xmm0|DOUBLE, y: xmm0|DOUBLE)  <||@
  Comment 2317 70 FLOATBRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B8 unorderedIsTrue: false  <||@
  Comment 2325 block B8 null  <||@
  Comment 2325 110 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2325 112 stack:56|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2334 114 r11|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2340 120 r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2345 122 r13|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2350 124 JUMP ~[] destination: B8 -> B10  <||@
  Comment 2355 block B5 null  <||@
  Comment 2355 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2355 74 xmm1|DOUBLE = VMOVE input: double[0.0|0x0]  <||@
  Comment 2359 76 VUCOMISD (x: xmm0|DOUBLE, y: xmm1|DOUBLE)  <||@
  Comment 2363 78 FLOATBRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 unorderedIsTrue: false  <||@
  Comment 2369 block B7 null  <||@
  Comment 2369 96 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2369 98 stack:56|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 2374 104 r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2379 106 r13|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2384 108 JUMP ~[] destination: B7 -> B10  <||@
  Comment 2389 block B6 null  <||@
  Comment 2389 80 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2389 82 stack:56|QWORD = MOVE input: long[2147483647|0x7fffffff]  <||@
  Comment 2398 84 r11|DWORD = MOVE input: int[2147483647|0x7fffffff]  <||@
  Comment 2404 90 r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2409 92 r13|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2414 94 JUMP ~[] destination: B6 -> B10  <||@
  Comment 2419 block B118 null  <||@
  Comment 2419 1076 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2419 1078 stack:60|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2424 1080 stack:64|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2429 1082 r10|DWORD = MOVE input: int[-176737|0xfffffffffffd4d9f]  <||@
  Comment 2435 1088 JUMP ~[] destination: B118 -> B121  <||@
  Comment 2435 block B121 null  <||@
  Comment 2435 1110 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2435 1064 r13|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 2438 1066 r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2441 1112 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2448 1114 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2455 1116 DEOPT info [bci:54, 107]  <||@
  Comment 2455 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2460 [r8:0, stack:32, stack:48]at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54, duringCall: false, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                                                      |1                  |2               |3  |4            |5               |6          |7  |8  |9 
     locals:  |vobject:UTF_8$Encoder:0{averageBytesPerChar=float[1.1|0x3f8ccccd],maxBytesPerChar=float[3.0|0x40400000],state=int[0|0x0],charset=stack:48|QWORD[.],replacement=vobject:byte[]:1{0=int[63|0x3f]},malformedInputAction=Object[CodingErrorAction@561514572],unmappableCharacterAction=Object[CodingErrorAction@561514572],cachedDecoder=Object[null],repl=int[63|0x3f],sgp=Object[null]}  |stack:32|QWORD[.]  |stack:60|DWORD  |-  |r8|QWORD[.]  |stack:64|DWORD  |r13|DWORD  |-  |-  |- 
  at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6            |7           |8  |9  |10 
     locals:  |stack:48|QWORD[.]  |-  |-  |-  |-  |-  |r8|QWORD[.]  |int[0|0x0]  |-  |-  |-    <||@
  Comment 2461 block B120 null  <||@
  Comment 2461 1096 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2461 1098 stack:60|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2466 1100 stack:64|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2471 1102 r10|DWORD = MOVE input: int[-176737|0xfffffffffffd4d9f]  <||@
  Comment 2477 1108 JUMP ~[] destination: B120 -> B121  <||@
  Comment 2479 block B111 null  <||@
  Comment 2479 994 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2479 996 stack:60|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2484 998 stack:64|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2489 1000 r10|DWORD = MOVE input: int[-123931|0xfffffffffffe1be5]  <||@
  Comment 2495 1006 JUMP ~[] destination: B111 -> B121  <||@
  Comment 2497 block B89 null  <||@
  Comment 2497 796 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2497 798 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@455242270]  <||@
  Comment 2497 {Object[d.a@455242270]}  <||@
  Comment 2507 800 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2510 802 r10|DWORD = MOVE input: int[-113435|0xfffffffffffe44e5]  <||@
  Comment 2516 804 rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2520 806 JUMP ~[] destination: B89 -> B181  <||@
  Comment 2520 block B181 null  <||@
  Comment 2520 1614 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 2520 1616 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2527 1618 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 2534 1620 DEOPT info [bci:70, 12, 6, 2, 6, 1]  <||@
  Comment 2534 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2539 [stack:32, stack:48]at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 70, duringCall: false, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                  |1  |2                      |3                      |4                                
     locals:  |vobject:UTF_8$Encoder:0{averageBytesPerChar=float[0.0|0x0],maxBytesPerChar=float[0.0|0x0],state=int[0|0x0],charset=stack:48|QWORD[.],replacement=Object[null],malformedInputAction=Object[CodingErrorAction@250144264],unmappableCharacterAction=Object[CodingErrorAction@250144264],cachedDecoder=Object[null],repl=int[0|0x0],sgp=Object[null]}  |-  |float[1.1|0x3f8ccccd]  |float[3.0|0x40400000]  |vobject:byte[]:1{0=int[63|0x3f]} 
     stack:   |int[0|0x0]                                                                                                                                                                                                                                                                                                                                         |   |                       |                       |                                 
  at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6, duringCall: true, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                  |1                 
     locals:  |vobject:UTF_8$Encoder:0{averageBytesPerChar=float[0.0|0x0],maxBytesPerChar=float[0.0|0x0],state=int[0|0x0],charset=stack:48|QWORD[.],replacement=Object[null],malformedInputAction=Object[CodingErrorAction@250144264],unmappableCharacterAction=Object[CodingErrorAction@250144264],cachedDecoder=Object[null],repl=int[0|0x0],sgp=Object[null]}  |stack:48|QWORD[.] 
  at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6, duringCall: true, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                 
     locals:  |stack:48|QWORD[.]                                                                                                                                                                                                                                                                                                                                 
     stack:   |vobject:UTF_8$Encoder:0{averageBytesPerChar=float[0.0|0x0],maxBytesPerChar=float[0.0|0x0],state=int[0|0x0],charset=stack:48|QWORD[.],replacement=Object[null],malformedInputAction=Object[CodingErrorAction@250144264],unmappableCharacterAction=Object[CodingErrorAction@250144264],cachedDecoder=Object[null],repl=int[0|0x0],sgp=Object[null]} 
  at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1, duringCall: true, rethrow: false]
              |0                  |1                  |2          |3          |4  |5  |6  |7  |8  |9  |10 
     locals:  |stack:48|QWORD[.]  |stack:32|QWORD[.]  |rcx|DWORD  |r13|DWORD  |-  |-  |-  |-  |-  |-  |-    <||@
  Comment 2540 block B112 null  <||@
  Comment 2540 1008 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2540 1010 stack:60|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2545 1012 stack:64|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2550 1014 r10|DWORD = MOVE input: int[-121363|0xfffffffffffe25ed]  <||@
  Comment 2556 1020 JUMP ~[] destination: B112 -> B121  <||@
  Comment 2558 block B116 null  <||@
  Comment 2558 1056 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2558 1058 stack:60|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2563 1060 stack:64|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2568 1062 r10|DWORD = MOVE input: int[-128275|0xfffffffffffe0aed]  <||@
  Comment 2574 1068 JUMP ~[] destination: B116 -> B121  <||@
  Comment 2579 block B179 null  <||@
  Comment 2579 1590 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2579 1592 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@455242270]  <||@
  Comment 2579 {Object[d.a@455242270]}  <||@
  Comment 2589 1594 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2592 1596 r10|DWORD = MOVE input: int[-108315|0xfffffffffffe58e5]  <||@
  Comment 2598 1598 rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2602 1600 JUMP ~[] destination: B179 -> B181  <||@
  Comment 2604 block B79 null  <||@
  Comment 2604 718 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2604 720 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1621998909]  <||@
  Comment 2604 {Object[d.a@1621998909]}  <||@
  Comment 2614 722 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2617 724 r10|DWORD = MOVE input: int[-107019|0xfffffffffffe5df5]  <||@
  Comment 2623 726 rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2627 728 JUMP ~[] destination: B79 -> B181  <||@
  Comment 2629 block B105 null  <||@
  Comment 2629 918 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2629 920 stack:60|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2634 922 stack:64|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2639 924 r10|DWORD = MOVE input: int[-121107|0xfffffffffffe26ed]  <||@
  Comment 2645 930 JUMP ~[] destination: B105 -> B121  <||@
  Comment 2650 block B178 null  <||@
  Comment 2650 1578 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2650 1580 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@455242270]  <||@
  Comment 2650 {Object[d.a@455242270]}  <||@
  Comment 2660 1582 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2663 1584 r10|DWORD = MOVE input: int[-113435|0xfffffffffffe44e5]  <||@
  Comment 2669 1586 rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2673 1588 JUMP ~[] destination: B178 -> B181  <||@
  Comment 2678 block B180 null  <||@
  Comment 2678 1602 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2678 1604 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@455242270]  <||@
  Comment 2678 {Object[d.a@455242270]}  <||@
  Comment 2688 1606 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2691 1608 r10|DWORD = MOVE input: int[-108315|0xfffffffffffe58e5]  <||@
  Comment 2697 1610 rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2701 1612 JUMP ~[] destination: B180 -> B181  <||@
  Comment 2706 block B177 null  <||@
  Comment 2706 1568 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2706 1570 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2716 1572 rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2720 1574 r10|DWORD = MOVE input: int[-106515|0xfffffffffffe5fed]  <||@
  Comment 2726 1576 JUMP ~[] destination: B177 -> B181  <||@
  Comment 2731 block B114 null  <||@
  Comment 2731 1036 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2731 1038 stack:60|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2736 1040 stack:64|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2741 1042 r10|DWORD = MOVE input: int[-116763|0xfffffffffffe37e5]  <||@
  Comment 2747 1048 JUMP ~[] destination: B114 -> B121  <||@
  Comment 2752 block B113 null  <||@
  Comment 2752 1022 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2752 1024 stack:60|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2757 1026 stack:64|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2762 1028 r10|DWORD = MOVE input: int[-135195|0xfffffffffffdefe5]  <||@
  Comment 2768 1034 JUMP ~[] destination: B113 -> B121  <||@
  Comment 2773 block B2 null  <||@
  Comment 2773 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2773 30 r10|DWORD = MOVE input: int[-94995|0xfffffffffffe8ced]  <||@
  Comment 2779 32 stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2783 34 stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2788 36 r13|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 2791 38 JUMP ~[] destination: B2 -> B184  <||@
  Comment 2791 block B184 null  <||@
  Comment 2791 1638 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2791 1640 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2798 1642 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2805 1644 DEOPT info [bci:0]  <||@
  Comment 2805 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2810 [stack:32, stack:48]at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2               |3          |4  |5  |6  |7  |8  |9  |10 
     locals:  |stack:48|QWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |r13|DWORD  |-  |-  |-  |-  |-  |-  |-    <||@
  Comment 2811 block B183 null  <||@
  Comment 2811 1626 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2811 1628 r10|DWORD = MOVE input: int[-92723|0xfffffffffffe95cd]  <||@
  Comment 2817 1630 stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2821 1632 stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2826 1634 r13|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 2829 1636 JUMP ~[] destination: B183 -> B184  <||@
  Comment 2831 block B45 null  <||@
  Comment 2831 428 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2831 430 r10|DWORD = MOVE input: int[-103699|0xfffffffffffe6aed]  <||@
  Comment 2837 432 r13|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 2840 434 stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2844 436 JUMP ~[] destination: B45 -> B184  <||@
  Comment 2846 block B110 null  <||@
  Comment 2846 980 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2846 982 stack:60|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2851 984 stack:64|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2856 986 r10|DWORD = MOVE input: int[-126235|0xfffffffffffe12e5]  <||@
  Comment 2862 992 JUMP ~[] destination: B110 -> B121  <||@
  Comment 2867 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2867 4  <||@
  Comment 2873 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 2873 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-8747[java.lang.StringCoding.encode(Charset, char[], int, int)]"
  method "HotSpotCompilation-8747[java.lang.StringCoding.encode(Charset, char[], int, int)]"
  date 1527005197789
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 106d12940 89842400c0feff4883ec4848896c24404c8bee4c8bf24c8974243041817d084e4300f80f85d20a000048be10f215c0060000008b7668418504f481fed40400d80f848f0a0000448b14f50c000000438504d4c5f957c0c4c17b2ac0c4c17b100d7cffffffc5fb59c1c57b2cd84d63cb4181fb000000800f84810800004c894c241842833cd50c000000030f8442040000498b7760498b57704181fbffffff000f8306080000458d53174183e2f84d63d2488bde4903da483bda0f87ec07000049895f60410f188432c0000000410f18843200010000410f18843240010000410f1884328001000044895e0c48c70601000000c74608f50000f8488bc6894c242c4c896c2420458bf3458be84183fe010f8cab000000488d70104963d6488d4ae04885c90f8d3b07000049c7c200000000488d4af04c3bd10f8f11000000c5f9efc0c4a17a7f0416498d4a104c8bd1488d4af84c3bd10f8f11000000c5f9efc0c4a1f97e0416498d4a084c8bd1488d4afc4c3bd10f8f11000000c5f9efc0c4a1797e0416498d4a044c8bd148ffca4c3bd20f8f2a00000046882416498bca48ffc1483bca0f8f170000004688641601498d4a02483bca0f8f0500000046886416024585ed0f840e0700004c8b5424304d85d20f8455080000453bee458bc5450f4fc64963f048ffce4183f8010f8c22000000418b520c48634c242c4803ce448bda4c3bd90f866d0800003b54242c0f86000800004183f8010f8c170000004c8b5c24184c3bde0f862f0800004585f60f848d07000048be28cd03c0060000008b767485f60f854908000041bb000000008b4c242ce9230000000f1f840000000000410fbf744a106681fe80000f830f000000428874181041ffc3ffc1453bc37fe044036c242c458bc3448bd90f1f440000453beb0f8eae000000453b5a0c0f8308080000453bf00f8614080000430fb7745a10418bd3ffc2418bc8ffc181fe800000000f830d0000004288740010448bc1448bdaebbb81fe000800000f826407000081fe00d800000f83ff060000443bf10f86b9060000458d4802453bf10f861b080000448bde41c1eb0c4181cbe000000046885c0010448bde41c1eb064183e33f4181cb8000000044885c081083e63f81ce800000004288740810458d4003448bdae949ffffff453bf00f84ae0600004585c00f8c1a0600004585f60f8c3b060000498b7760498b57704181f8ffffff000f8393040000418d481783e1f84863c94c8bc94c03ce4c3bca0f877a0400004d894f600f188431c00000000f188431000100000f188431400100000f188431800100004489460c48c70601000000c74608f50000f8458be84889442408488bc6453bee458bc5450f4fc64d63d04983fa010f8ccb0000004c8b4424084c8d58104d8d40104d8d4ae04d85c948c7c1000000000f8de70300004d8d4af0493bc90f8f13000000c4c17a6f0408c4c17a7f040b4c8d4910498bc94d8d4af8493bc90f8f13000000c4c1f96e0408c4c1f97e040b4c8d4908498bc94d8d4afc493bc90f8f13000000c4c1796e0408c4c1797e040b4c8d4904498bc94d8bca49ffc9493bc90f8f3b000000410fbe1c0841881c0b488bd948ffc3493bd90f8f23000000410fbe5c080141885c0b01488d5902493bd90f8f0b000000450fbe4408024588440b024d63dd4d3bda0f8f53020000488b6c24404883c4488505f8c1b7fdc5f877c34c896c242049c1e20348be383e07c006000000ba03000000498d7a10488d46108bead1e58bdd83e31f83e5e00f8453000000488d3c2f488d042848f7dd90c5fe6f042fc5fe6f0c28c5fdefc1c4e27d17c00f85a60000004883c52075e185db0f8491000000c5fe6f441fe0c5fe6f4c18e0c5fdefc1c4e27d17c00f857d000000e9710000008beb83e30783e5f80f8435000000488d3c2f488d042848f7dd4c8b2c2f4c3b2c280f85510000004883c50875ec85db0f843c0000004c8b6c1ff84c3b6c18f87537eb2e8bebf7c3040000007410448b2f443b287523488d7f04488d4004f7c302000000740c440fb72f0fb728443bed7507bb01000000eb0233db85db0f8536050000498b7760498b57704181fbffffff000f8396020000458d53174183e2f84d63d2498bda4803de483bda0f877c02000049895f60410f188432c0000000410f18843200010000410f18843240010000410f1884328001000044895e0c48c70601000000c74608f50000f8488bc6458be8894c242c458bf34183fe010f8cab000000488d70104963d6488d4ae04885c90f8dcc01000049c7c200000000488d4af04c3bd10f8f11000000c5f9efc0c4a17a7f0416498d4a104c8bd1488d4af84c3bd10f8f11000000c5f9efc0c4a1f97e0416498d4a084c8bd1488d4afc4c3bd10f8f11000000c5f9efc0c4a1797e0416498d4a044c8bd148ffca4c3bd20f8f2a00000046882416498bca48ffc1483bca0f8f170000004688641601498d4a02483bca0f8f0500000046886416024585ed0f85bcfaffffe9d80100004e8d4410104d2bda4d8d53e04d85d20f8d9c00000049c7c1000000004d8d53f04d3bca0f8f11000000c5f9efc0c4817a7f04084d8d51104d8bca4d8d53f84d3bca0f8f11000000c5f9efc0c481f97e04084d8d51084d8bca4d8d53fc4d3bca0f8f11000000c5f9efc0c481797e04084d8d51044d8bca49ffcb4d3bcb0f8f2bfdffff478824084d8bd149ffc24d3bd30f8f18fdffff47886408014d8d51024d3bd30f8f06fdffff4788640802e9fcfcffffc5f9efc049c7c1000000006690c4817e7f04084d8d49204d3bca7ef1e94affffff660f1f440000660f1f440000c4c17e6f0408c4c17e7f040b488d4920493bc97eebe9fffbffff44895c241444896c2410488944240848bea80700c007000000418bd0b900000000458be8e86d3c280090e998fbffffc5f9efc049c7c200000000660f1f440000660f1f440000c4a17e7f04164d8d52204c3bd17ef1e910feffffc5f9efc049c7c20000000090c4a17e7f04164d8d52204c3bd17ef1e9acf8ffff458be8894c242c458bf348bea80700c007000000418bd6b900000000e8fb3b280090e9a4fdffff894c242c4c896c2420458be848bea80700c007000000418bd3b900000000458bf3e8cf3b280090e934f8ffff488b6c24404883c4488505e0bdb7fdc5f877c3488b6c24404883c4488505cdbdb7fdc5f877c3894c242c4c896c2420458be8c5f92ec07a060f841e00000048c74424180000000041bb000000004c8b7424304c8b6c2420e94ef7ffffc5f157c9c5f92ec10f87140000004c894c24184c8b7424304c8b6c2420e92cf7ffff48c7442418ffffff7f41bbffffff7f4c8b7424304c8b6c2420e90ef7ffff44895c241444896c241041ba9f4dfdff458be84c8bc04589979c0200004d89a7a8020000e82243afff9044895c241444896c241041ba9f4dfdffebd444895c241444896c241041bae51bfeffebc249ba087373bc070000004d8bda41bae544feff8b4c242c4589979c0200004d899fa8020000e8d342afff9044895c241444896c241041baed25feffeb8544895c241444896c241041baed0afeffe970ffffff49ba087373bc070000004d8bda41bae558feff8b4c242cebac49bad87273bc070000004d8bda41baf55dfeff8b4c242ceb9344895c241444896c241041baed26feffe929ffffff49ba087373bc070000004d8bda41bae544feff8b4c242ce962ffffff49ba087373bc070000004d8bda41bae558feff8b4c242ce946ffffff49bb00000000000000008b4c242c41baed5ffeffe92dffffff44895c241444896c241041bae537feffe9c3feffff44895c241444896c241041bae5effdffe9aefeffff41baed8cfeff894c242c4c896c2420458be84589979c0200004d89a7a8020000e8c441afff9041bacd95feff894c242c4c896c2420458be8ebd841baed6afeff458be8894c242cebc944895c241444896c241041bae512feffe950feffffe8a871f3ff90e88240afff90f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 3  <||@
  Comment 0 1  <||@
  Comment 11 block B0 null  <||@
  Comment 11 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 11 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 16 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@b0dad63 slotKind: QWORD  <||@
  Comment 16 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 19 8 r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 22 10 stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 27 12 CMP [r13|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/nio/cs/UTF_8;, resolved>;compressed} state [bci:0]  <||@
  Comment 27 [r13:0, r14:0, stack:48]at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4  |5  |6  |7  |8  |9  |10 
     locals:  |r13|QWORD[.]  |r14|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-  |-  |-  |-  |-  |-  |-    <||@
  Comment 27 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 27 {meta{HotSpotType<Lsun/nio/cs/UTF_8;, resolved>;compressed}}  <||@
  Comment 35 14 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B183  <||@
  Comment 41 block B1 null  <||@
  Comment 41 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 41 18 rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.nio.charset.Charset]  <||@
  Comment 41 {Object[Class:java.nio.charset.Charset]}  <||@
  Comment 51 20 rsi|DWORD[.] = MOV [rsi|QWORD[.] + 104] size: DWORD  <||@
  Comment 54 22 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:0]  <||@
  Comment 54 [rsi:0, r13:0, r14:0, stack:48]at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4  |5  |6  |7  |8  |9  |10 
     locals:  |r13|QWORD[.]  |r14|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-  |-  |-  |-  |-  |-  |-    <||@
  Comment 54 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 58 24 CMP rsi|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[String:"1.4"]  <||@
  Comment 58 {NarrowOop[String:"1.4"]}  <||@
  Comment 64 26 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 70 block B3 null  <||@
  Comment 70 40 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 70 42 r10|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 78 44 NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:0]  <||@
  Comment 78 [r10:0, r13:0, r14:0, stack:48]at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4  |5  |6  |7  |8  |9  |10 
     locals:  |r13|QWORD[.]  |r14|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-  |-  |-  |-  |-  |-  |-    <||@
  Comment 78 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 82 46 xmm0|DOUBLE = VCVTSI2SD r8|DWORD  <||@
  Comment 91 48 xmm1|DOUBLE = VMOVE input: double[3.0|0x4008000000000000]  <||@
  Comment 91 {DataSection[0x0]}  <||@
  Comment 100 50 xmm0|DOUBLE = VMULSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM  <||@
  Comment 104 52 r11|DWORD = VCVTTSD2SI xmm0|DOUBLE nZ: XMM  <||@
  Comment 108 54 r9|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 111 56 CMP r11|DWORD y: -2147483648 size: DWORD  <||@
  Comment 118 58 BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B9  <||@
  Comment 124 block B9 null  <||@
  Comment 124 126 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 124 128 stack:56|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 129 130 JUMP ~[] destination: B9 -> B10  <||@
  Comment 129 block B10 null  <||@
  Comment 129 132 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 129 134 CMP [r10|DWORD[.] * 8 + 12] y: 3 size: DWORD  <||@
  Comment 138 136 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B46  <||@
  Comment 144 block B46 null  <||@
  Comment 144 438 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 144 440 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 148 442 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 152 444 CMP r11|DWORD y: 16777215 size: DWORD  <||@
  Comment 159 446 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B46 -> B47 falseDestination: B46 -> B51  <||@
  Comment 165 block B47 null  <||@
  Comment 165 448 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 165 450 r10|DWORD = LEA [r11|DWORD + 23] size: DWORD  <||@
  Comment 169 452 r10|DWORD = AND r10|DWORD y: -8 size: DWORD  <||@
  Comment 173 454 r10|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 176 456 rbx|QWORD = ADD (x: rsi|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 182 458 CMP (x: rbx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 185 460 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B47 -> B51 falseDestination: B47 -> B49  <||@
  Comment 191 block B49 null  <||@
  Comment 191 472 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 191 474 MOV (x: [r15|QWORD + 96], y: rbx|QWORD) size: QWORD  <||@
  Comment 195 476 AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 192] instr: 0  <||@
  Comment 204 478 AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 213 480 AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 222 482 AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 231 484 MOV (x: [rsi|QWORD + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 235 486 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 242 488 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 242 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 249 490 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 249 492 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 252 494 stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 256 496 stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 261 498 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 264 500 r13|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 267 502 JUMP ~[] destination: B49 -> B52  <||@
  Comment 267 block B52 null  <||@
  Comment 267 528 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 267 530 CMP r14|DWORD y: 1 size: DWORD  <||@
  Comment 271 532 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B52 -> B75 falseDestination: B52 -> B54  <||@
  Comment 277 block B54 null  <||@
  Comment 277 538 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 277 540 rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 281 542 rdx|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 284 544 rcx|QWORD = LEA [rdx|QWORD - 32] size: QWORD  <||@
  Comment 288 546 TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 291 548 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B54 -> B55 falseDestination: B54 -> B56  <||@
  Comment 297 block B55 null  <||@
  Comment 297 550 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 297 552 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 304 554 JUMP ~[] destination: B55 -> B59  <||@
  Comment 304 block B59 null  <||@
  Comment 304 578 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 304 580 rcx|QWORD = LEA [rdx|QWORD - 16] size: QWORD  <||@
  Comment 308 582 CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 311 584 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B62 falseDestination: B59 -> B61  <||@
  Comment 317 block B61 null  <||@
  Comment 317 590 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 317 592 xmm0|V128_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 321 594 J (address: [rsi|QWORD[.] + r10|QWORD * 1], input: xmm0|V128_BYTE) nZ: XMM oh: VMOVDQU  <||@
  Comment 327 596 rcx|QWORD = LEA [r10|QWORD + 16] size: QWORD  <||@
  Comment 331 598 r10|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 334 600 JUMP ~[] destination: B61 -> B62  <||@
  Comment 334 block B62 null  <||@
  Comment 334 602 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 334 604 rcx|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 338 606 CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 341 608 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B62 -> B65 falseDestination: B62 -> B64  <||@
  Comment 347 block B64 null  <||@
  Comment 347 614 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 347 616 xmm0|V64_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 351 618 J (address: [rsi|QWORD[.] + r10|QWORD * 1], input: xmm0|V64_BYTE) nZ: XMM oh: VMOVQ  <||@
  Comment 357 620 rcx|QWORD = LEA [r10|QWORD + 8] size: QWORD  <||@
  Comment 361 622 r10|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 364 624 JUMP ~[] destination: B64 -> B65  <||@
  Comment 364 block B65 null  <||@
  Comment 364 626 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 364 628 rcx|QWORD = LEA [rdx|QWORD - 4] size: QWORD  <||@
  Comment 368 630 CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 371 632 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B65 -> B68 falseDestination: B65 -> B67  <||@
  Comment 377 block B67 null  <||@
  Comment 377 638 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 377 640 xmm0|V32_BYTE = L oc: SIMD<0,0,0,0>  <||@
  Comment 381 642 J (address: [rsi|QWORD[.] + r10|QWORD * 1], input: xmm0|V32_BYTE) nZ: XMM oh: VMOVD  <||@
  Comment 387 644 rcx|QWORD = LEA [r10|QWORD + 4] size: QWORD  <||@
  Comment 391 646 r10|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 394 648 JUMP ~[] destination: B67 -> B68  <||@
  Comment 394 block B68 null  <||@
  Comment 394 650 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 394 652 rdx|QWORD = DEC rdx|QWORD size: QWORD  <||@
  Comment 397 654 CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 400 656 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B68 -> B75 falseDestination: B68 -> B70  <||@
  Comment 406 block B70 null  <||@
  Comment 406 662 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 406 664 MOVB (x: [rsi|QWORD[.] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 410 666 rcx|QWORD = INC r10|QWORD size: QWORD  <||@
  Comment 416 668 CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 419 670 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B70 -> B75 falseDestination: B70 -> B72  <||@
  Comment 425 block B72 null  <||@
  Comment 425 676 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 425 678 MOVB (x: [rsi|QWORD[.] + r10|QWORD * 1 + 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 430 680 rcx|QWORD = LEA [r10|QWORD + 2] size: QWORD  <||@
  Comment 434 682 CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 437 684 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B72 -> B75 falseDestination: B72 -> B74  <||@
  Comment 443 block B74 null  <||@
  Comment 443 690 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 443 692 MOVB (x: [rsi|QWORD[.] + r10|QWORD * 1 + 2], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 448 694 JUMP ~[] destination: B74 -> B75  <||@
  Comment 448 block B75 null  <||@
  Comment 448 696 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 448 698 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 451 700 BRANCH trueDestinationProbability: 0.04030493641460409 condition: = trueDestination: B75 -> B76 falseDestination: B75 -> B78  <||@
  Comment 457 block B78 null  <||@
  Comment 457 712 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 457 420 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 462 714 TEST (x: r10|QWORD[.], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 465 716 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80  <||@
  Comment 471 block B80 null  <||@
  Comment 471 730 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 471 732 CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 474 734 r8|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r14|DWORD) condition: >  <||@
  Comment 481 736 rsi|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 484 738 rsi|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 487 740 CMP r8|DWORD y: 1 size: DWORD  <||@
  Comment 491 742 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B80 -> B85 falseDestination: B80 -> B82  <||@
  Comment 497 block B82 null  <||@
  Comment 497 748 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 497 750 rdx|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 501 752 rcx|QWORD = MOVSXD stack:36|DWORD size: QWORD  <||@
  Comment 506 754 rcx|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 509 756 r11|QWORD = MOV rdx|DWORD size: DWORD  <||@
  Comment 512 758 CMP (x: r11|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 515 760 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B82 -> B83 falseDestination: B82 -> B180  <||@
  Comment 521 block B83 null  <||@
  Comment 521 762 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 521 764 CMP (x: rdx|DWORD, y: stack:36|DWORD) size: DWORD  <||@
  Comment 525 766 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B83 -> B85 falseDestination: B83 -> B179  <||@
  Comment 531 block B85 null  <||@
  Comment 531 772 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 531 774 CMP r8|DWORD y: 1 size: DWORD  <||@
  Comment 535 776 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B85 -> B91 falseDestination: B85 -> B87  <||@
  Comment 541 block B87 null  <||@
  Comment 541 782 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 541 784 r11|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 546 786 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 549 788 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B87 -> B88 falseDestination: B87 -> B178  <||@
  Comment 555 block B88 null  <||@
  Comment 555 790 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 555 792 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 558 794 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B88 -> B89 falseDestination: B88 -> B91  <||@
  Comment 564 block B91 null  <||@
  Comment 564 812 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 564 814 rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.lang.System]  <||@
  Comment 564 {Object[Class:java.lang.System]}  <||@
  Comment 574 816 rsi|DWORD[.] = MOV [rsi|QWORD[.] + 116] size: DWORD  <||@
  Comment 577 818 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 579 820 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B91 -> B92 falseDestination: B91 -> B177  <||@
  Comment 585 block B92 null  <||@
  Comment 585 822 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 585 824 r11|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 591 826 rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 595 828 JUMP ~[] destination: B92 -> B93  <||@
  Comment 600 block B94 loop 2 depth 1 header:77|LoopBegin  <||@
  Comment 600 836 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 608 838 rsi|DWORD = MOVSX [r10|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 614 840 CMP rsi|DWORD y: 128 size: WORD  <||@
  Comment 619 842 BRANCH trueDestinationProbability: 0.9998902719253914 condition: |<| trueDestination: B94 -> B95 falseDestination: B94 -> B98  <||@
  Comment 625 block B95 loop 2 depth 1 header:77|LoopBegin  <||@
  Comment 625 844 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 625 846 MOVB (x: [rax|QWORD[.] + r11|DWORD * 1 + 16], y: rsi|DWORD) size: BYTE  <||@
  Comment 630 848 r11|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 633 850 rcx|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 635 852 JUMP ~[] destination: B95 -> B93  <||@
  Comment 635 block B93 loop 2 depth 1 header:77|LoopBegin  <||@
  Comment 635 830 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 635 832 CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 638 834 BRANCH trueDestinationProbability: 0.9835900530402635 condition: > trueDestination: B93 -> B94 falseDestination: B93 -> B98  <||@
  Comment 640 block B98 null  <||@
  Comment 640 862 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 640 864 r13|DWORD = ADD (x: stack:36|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 645 866 r8|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 648 868 r11|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 651 870 JUMP ~[] destination: B98 -> B99  <||@
  Comment 651 block B99 loop 3 depth 1 header:113|LoopBegin  <||@
  Comment 651 872 [] = LABEL numbPhis: 2 align: true label: ?  <||@
  Comment 656 874 CMP (x: r13|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 659 876 BRANCH trueDestinationProbability: 0.16211788211788214 condition: > trueDestination: B99 -> B100 falseDestination: B99 -> B115  <||@
  Comment 665 block B100 loop 3 depth 1 header:113|LoopBegin  <||@
  Comment 665 878 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 665 880 CMP (x: r11|DWORD, y: [r10|QWORD[.] + 12]) size: DWORD  <||@
  Comment 669 882 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B100 -> B101 falseDestination: B100 -> B114  <||@
  Comment 675 block B101 loop 3 depth 1 header:113|LoopBegin  <||@
  Comment 675 884 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 675 886 CMP (x: r14|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 678 888 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B101 -> B102 falseDestination: B101 -> B113  <||@
  Comment 684 block B102 loop 3 depth 1 header:113|LoopBegin  <||@
  Comment 684 890 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 684 892 rsi|DWORD = MOVZX [r10|QWORD[.] + r11|DWORD * 2 + 16] size: DWORD  <||@
  Comment 690 894 rdx|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 695 896 rcx|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 700 898 CMP rsi|DWORD y: 128 size: DWORD  <||@
  Comment 706 900 BRANCH trueDestinationProbability: 0.942568400295785 condition: |<| trueDestination: B102 -> B103 falseDestination: B102 -> B104  <||@
  Comment 712 block B103 loop 3 depth 1 header:113|LoopBegin  <||@
  Comment 712 902 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 712 904 MOVB (x: [rax|QWORD[.] + r8|DWORD * 1 + 16], y: rsi|DWORD) size: BYTE  <||@
  Comment 717 906 r8|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 720 908 r11|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 723 910 JUMP ~[] destination: B103 -> B99  <||@
  Comment 725 block B104 loop 3 depth 1 header:113|LoopBegin  <||@
  Comment 725 912 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 725 914 CMP rsi|DWORD y: 2048 size: DWORD  <||@
  Comment 731 916 BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B104 -> B105 falseDestination: B104 -> B106  <||@
  Comment 737 block B106 loop 3 depth 1 header:113|LoopBegin  <||@
  Comment 737 932 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 737 934 CMP rsi|DWORD y: 55296 size: DWORD  <||@
  Comment 743 936 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B106 -> B107 falseDestination: B106 -> B112  <||@
  Comment 749 block B107 loop 3 depth 1 header:113|LoopBegin  <||@
  Comment 749 938 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 749 940 CMP (x: r14|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 752 942 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B107 -> B108 falseDestination: B107 -> B111  <||@
  Comment 758 block B108 loop 3 depth 1 header:113|LoopBegin  <||@
  Comment 758 944 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 758 946 r9|DWORD = LEA [r8|DWORD + 2] size: DWORD  <||@
  Comment 762 948 CMP (x: r14|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 765 950 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B108 -> B109 falseDestination: B108 -> B110  <||@
  Comment 771 block B109 loop 3 depth 1 header:113|LoopBegin  <||@
  Comment 771 952 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 771 954 r11|DWORD = SHR rsi|DWORD y: 12 size: DWORD  <||@
  Comment 778 956 r11|DWORD = OR r11|DWORD y: 224 size: DWORD  <||@
  Comment 785 958 MOVB (x: [rax|QWORD[.] + r8|DWORD * 1 + 16], y: r11|DWORD) size: BYTE  <||@
  Comment 790 960 r11|DWORD = SHR rsi|DWORD y: 6 size: DWORD  <||@
  Comment 797 962 r11|DWORD = AND r11|DWORD y: 63 size: DWORD  <||@
  Comment 801 964 r11|DWORD = OR r11|DWORD y: 128 size: DWORD  <||@
  Comment 808 966 MOVB (x: [rax|QWORD[.] + rcx|DWORD * 1 + 16], y: r11|DWORD) size: BYTE  <||@
  Comment 813 968 rsi|DWORD = AND rsi|DWORD y: 63 size: DWORD  <||@
  Comment 816 970 rsi|DWORD = OR rsi|DWORD y: 128 size: DWORD  <||@
  Comment 822 972 MOVB (x: [rax|QWORD[.] + r9|DWORD * 1 + 16], y: rsi|DWORD) size: BYTE  <||@
  Comment 827 974 r8|DWORD = LEA [r8|DWORD + 3] size: DWORD  <||@
  Comment 831 976 r11|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 834 978 JUMP ~[] destination: B109 -> B99  <||@
  Comment 839 block B115 null  <||@
  Comment 839 1050 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 839 1052 CMP (x: r14|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 842 1054 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117  <||@
  Comment 848 block B117 null  <||@
  Comment 848 1070 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 848 1072 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 851 1074 BRANCH trueDestinationProbability: 9.999999999998899E-5 condition: < trueDestination: B117 -> B118 falseDestination: B117 -> B119  <||@
  Comment 857 block B119 null  <||@
  Comment 857 1090 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 857 1092 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 860 1094 BRANCH trueDestinationProbability: 9.999999999998899E-5 condition: < trueDestination: B119 -> B120 falseDestination: B119 -> B122  <||@
  Comment 866 block B122 null  <||@
  Comment 866 1118 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 866 1120 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 870 1122 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 874 1124 CMP r8|DWORD y: 16777215 size: DWORD  <||@
  Comment 881 1126 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B122 -> B123 falseDestination: B122 -> B127  <||@
  Comment 887 block B123 null  <||@
  Comment 887 1128 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 887 1130 rcx|DWORD = LEA [r8|DWORD + 23] size: DWORD  <||@
  Comment 891 1132 rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD  <||@
  Comment 894 1134 rcx|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 897 1136 r9|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 903 1138 CMP (x: r9|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 906 1140 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B123 -> B127 falseDestination: B123 -> B125  <||@
  Comment 912 block B125 null  <||@
  Comment 912 1152 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 912 1154 MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD  <||@
  Comment 916 1156 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 192] instr: 0  <||@
  Comment 924 1158 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 932 1160 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 940 1162 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 948 1164 MOV (x: [rsi|QWORD + 12], y: r8|DWORD) size: DWORD  <||@
  Comment 952 1166 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 959 1168 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 959 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 966 1170 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 966 1172 r13|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 969 1174 stack:72|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 974 1176 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 977 1178 JUMP ~[] destination: B125 -> B128  <||@
  Comment 977 block B128 null  <||@
  Comment 977 1204 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 977 1206 CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 980 1208 r8|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r14|DWORD) condition: >  <||@
  Comment 987 1210 r10|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 990 1212 CMP r10|QWORD y: 1 size: QWORD  <||@
  Comment 994 1214 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B128 -> B151 falseDestination: B128 -> B130  <||@
  Comment 1000 block B130 null  <||@
  Comment 1000 1220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1000 1222 r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1005 1224 r11|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 1009 1226 r8|QWORD[.] = LEA [r8|QWORD[.] + 16] size: QWORD  <||@
  Comment 1013 1228 r9|QWORD = LEA [r10|QWORD - 32] size: QWORD  <||@
  Comment 1017 1230 TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 1020 1236 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1027 1232 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B130 -> B135 falseDestination: B130 -> B133  <||@
  Comment 1033 block B135 null  <||@
  Comment 1033 1262 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1033 1264 r9|QWORD = LEA [r10|QWORD - 16] size: QWORD  <||@
  Comment 1037 1266 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 1040 1268 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B135 -> B138 falseDestination: B135 -> B137  <||@
  Comment 1046 block B137 null  <||@
  Comment 1046 1274 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1046 1276 xmm0|V128_BYTE = H [r8|QWORD[.] + rcx|QWORD * 1] nZ: XMM oh: VMOVDQU  <||@
  Comment 1052 1278 J (address: [r11|QWORD[.] + rcx|QWORD * 1], input: xmm0|V128_BYTE) nZ: XMM oh: VMOVDQU  <||@
  Comment 1058 1280 r9|QWORD = LEA [rcx|QWORD + 16] size: QWORD  <||@
  Comment 1062 1282 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 1065 1284 JUMP ~[] destination: B137 -> B138  <||@
  Comment 1065 block B138 null  <||@
  Comment 1065 1286 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1065 1288 r9|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 1069 1290 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 1072 1292 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B138 -> B141 falseDestination: B138 -> B140  <||@
  Comment 1078 block B140 null  <||@
  Comment 1078 1298 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1078 1300 xmm0|V64_BYTE = H [r8|QWORD[.] + rcx|QWORD * 1] nZ: XMM oh: VMOVQ  <||@
  Comment 1084 1302 J (address: [r11|QWORD[.] + rcx|QWORD * 1], input: xmm0|V64_BYTE) nZ: XMM oh: VMOVQ  <||@
  Comment 1090 1304 r9|QWORD = LEA [rcx|QWORD + 8] size: QWORD  <||@
  Comment 1094 1306 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 1097 1308 JUMP ~[] destination: B140 -> B141  <||@
  Comment 1097 block B141 null  <||@
  Comment 1097 1310 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1097 1312 r9|QWORD = LEA [r10|QWORD - 4] size: QWORD  <||@
  Comment 1101 1314 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 1104 1316 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B141 -> B144 falseDestination: B141 -> B143  <||@
  Comment 1110 block B143 null  <||@
  Comment 1110 1322 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1110 1324 xmm0|V32_BYTE = H [r8|QWORD[.] + rcx|QWORD * 1] nZ: XMM oh: VMOVD  <||@
  Comment 1116 1326 J (address: [r11|QWORD[.] + rcx|QWORD * 1], input: xmm0|V32_BYTE) nZ: XMM oh: VMOVD  <||@
  Comment 1122 1328 r9|QWORD = LEA [rcx|QWORD + 4] size: QWORD  <||@
  Comment 1126 1330 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 1129 1332 JUMP ~[] destination: B143 -> B144  <||@
  Comment 1129 block B144 null  <||@
  Comment 1129 1334 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1129 1336 r9|QWORD = DEC r10|QWORD size: QWORD  <||@
  Comment 1135 1338 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 1138 1340 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B144 -> B151 falseDestination: B144 -> B146  <||@
  Comment 1144 block B146 null  <||@
  Comment 1144 1346 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1144 1348 rbx|DWORD = MOVSXB [r8|QWORD[.] + rcx|QWORD * 1] size: DWORD  <||@
  Comment 1149 1350 MOVB (x: [r11|QWORD[.] + rcx|QWORD * 1], y: rbx|DWORD) size: BYTE  <||@
  Comment 1153 1352 rbx|QWORD = INC rcx|QWORD size: QWORD  <||@
  Comment 1159 1354 CMP (x: rbx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 1162 1356 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B146 -> B151 falseDestination: B146 -> B148  <||@
  Comment 1168 block B148 null  <||@
  Comment 1168 1362 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1168 1364 rbx|DWORD = MOVSXB [r8|QWORD[.] + rcx|QWORD * 1 + 1] size: DWORD  <||@
  Comment 1174 1366 MOVB (x: [r11|QWORD[.] + rcx|QWORD * 1 + 1], y: rbx|DWORD) size: BYTE  <||@
  Comment 1179 1368 rbx|QWORD = LEA [rcx|QWORD + 2] size: QWORD  <||@
  Comment 1183 1370 CMP (x: rbx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 1186 1372 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B148 -> B151 falseDestination: B148 -> B150  <||@
  Comment 1192 block B150 null  <||@
  Comment 1192 1378 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1192 1380 r8|DWORD = MOVSXB [r8|QWORD[.] + rcx|QWORD * 1 + 2] size: DWORD  <||@
  Comment 1198 1382 MOVB (x: [r11|QWORD[.] + rcx|QWORD * 1 + 2], y: r8|DWORD) size: BYTE  <||@
  Comment 1203 1384 JUMP ~[] destination: B150 -> B151  <||@
  Comment 1203 block B151 null  <||@
  Comment 1203 1386 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1203 1388 r11|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 1206 1390 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1209 1392 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B151 -> B152 falseDestination: B151 -> B175  <||@
  Comment 1215 block B175 null  <||@
  Comment 1215 1560 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1215 1562 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1224 12  <||@
  Comment 1234 block B11 null  <||@
  Comment 1234 138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1234 140 stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1239 142 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@644bd6a encoding: base: 0 shift: 3  <||@
  Comment 1243 144 rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[3]{1, ., 4}]  <||@
  Comment 1243 {Object[char[3]{1, ., 4}]}  <||@
  Comment 1253 146 rdx|DWORD = MOVE input: int[3|0x3]  <||@
  Comment 1258 148 rbx|DWORD = ARRAY_EQUALS (~array1Value: r10|QWORD[.], ~array2Value: rsi|QWORD[.], ~lengthValue: rdx|DWORD) {temp1: rdi|QWORD[*], temp2: rax|QWORD[*], temp3: rbp|QWORD, temp4: r13|QWORD, temp5: -, tempXMM: -, vectorTemp1: xmm0|DOUBLE, vectorTemp2: xmm1|DOUBLE} arrayBaseOffset: 16 arrayIndexScale: 2 kind: char  <||@
  Comment 1489 150 TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 1491 152 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B45  <||@
  Comment 1497 block B12 null  <||@
  Comment 1497 154 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1497 156 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1501 158 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 1505 160 CMP r11|DWORD y: 16777215 size: DWORD  <||@
  Comment 1512 162 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B12 -> B13 falseDestination: B12 -> B17  <||@
  Comment 1518 block B13 null  <||@
  Comment 1518 164 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1518 166 r10|DWORD = LEA [r11|DWORD + 23] size: DWORD  <||@
  Comment 1522 168 r10|DWORD = AND r10|DWORD y: -8 size: DWORD  <||@
  Comment 1526 170 r10|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 1529 172 rbx|QWORD = ADD (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1535 174 CMP (x: rbx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1538 176 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B17 falseDestination: B13 -> B15  <||@
  Comment 1544 block B15 null  <||@
  Comment 1544 188 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1544 190 MOV (x: [r15|QWORD + 96], y: rbx|QWORD) size: QWORD  <||@
  Comment 1548 192 AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 192] instr: 0  <||@
  Comment 1557 194 AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 1566 196 AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 1575 198 AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 1584 200 MOV (x: [rsi|QWORD + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 1588 202 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 1595 204 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 1595 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 1602 206 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1602 208 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1605 210 r13|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1608 212 stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1612 214 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1615 216 JUMP ~[] destination: B15 -> B18  <||@
  Comment 1615 block B18 null  <||@
  Comment 1615 240 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1615 242 CMP r14|DWORD y: 1 size: DWORD  <||@
  Comment 1619 244 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B18 -> B41 falseDestination: B18 -> B20  <||@
  Comment 1625 block B20 null  <||@
  Comment 1625 250 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1625 252 rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 1629 254 rdx|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 1632 256 rcx|QWORD = LEA [rdx|QWORD - 32] size: QWORD  <||@
  Comment 1636 258 TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1639 260 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22  <||@
  Comment 1645 block B21 null  <||@
  Comment 1645 262 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1645 264 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1652 266 JUMP ~[] destination: B21 -> B25  <||@
  Comment 1652 block B25 null  <||@
  Comment 1652 290 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1652 292 rcx|QWORD = LEA [rdx|QWORD - 16] size: QWORD  <||@
  Comment 1656 294 CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1659 296 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B25 -> B28 falseDestination: B25 -> B27  <||@
  Comment 1665 block B27 null  <||@
  Comment 1665 302 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1665 304 xmm0|V128_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 1669 306 J (address: [rsi|QWORD[.] + r10|QWORD * 1], input: xmm0|V128_BYTE) nZ: XMM oh: VMOVDQU  <||@
  Comment 1675 308 rcx|QWORD = LEA [r10|QWORD + 16] size: QWORD  <||@
  Comment 1679 310 r10|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 1682 312 JUMP ~[] destination: B27 -> B28  <||@
  Comment 1682 block B28 null  <||@
  Comment 1682 314 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1682 316 rcx|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 1686 318 CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1689 320 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B28 -> B31 falseDestination: B28 -> B30  <||@
  Comment 1695 block B30 null  <||@
  Comment 1695 326 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1695 328 xmm0|V64_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 1699 330 J (address: [rsi|QWORD[.] + r10|QWORD * 1], input: xmm0|V64_BYTE) nZ: XMM oh: VMOVQ  <||@
  Comment 1705 332 rcx|QWORD = LEA [r10|QWORD + 8] size: QWORD  <||@
  Comment 1709 334 r10|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 1712 336 JUMP ~[] destination: B30 -> B31  <||@
  Comment 1712 block B31 null  <||@
  Comment 1712 338 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1712 340 rcx|QWORD = LEA [rdx|QWORD - 4] size: QWORD  <||@
  Comment 1716 342 CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1719 344 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B31 -> B34 falseDestination: B31 -> B33  <||@
  Comment 1725 block B33 null  <||@
  Comment 1725 350 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1725 352 xmm0|V32_BYTE = L oc: SIMD<0,0,0,0>  <||@
  Comment 1729 354 J (address: [rsi|QWORD[.] + r10|QWORD * 1], input: xmm0|V32_BYTE) nZ: XMM oh: VMOVD  <||@
  Comment 1735 356 rcx|QWORD = LEA [r10|QWORD + 4] size: QWORD  <||@
  Comment 1739 358 r10|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 1742 360 JUMP ~[] destination: B33 -> B34  <||@
  Comment 1742 block B34 null  <||@
  Comment 1742 362 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1742 364 rdx|QWORD = DEC rdx|QWORD size: QWORD  <||@
  Comment 1745 366 CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1748 368 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B34 -> B41 falseDestination: B34 -> B36  <||@
  Comment 1754 block B36 null  <||@
  Comment 1754 374 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1754 376 MOVB (x: [rsi|QWORD[.] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1758 378 rcx|QWORD = INC r10|QWORD size: QWORD  <||@
  Comment 1764 380 CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1767 382 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B41 falseDestination: B36 -> B38  <||@
  Comment 1773 block B38 null  <||@
  Comment 1773 388 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1773 390 MOVB (x: [rsi|QWORD[.] + r10|QWORD * 1 + 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1778 392 rcx|QWORD = LEA [r10|QWORD + 2] size: QWORD  <||@
  Comment 1782 394 CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1785 396 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B41 falseDestination: B38 -> B40  <||@
  Comment 1791 block B40 null  <||@
  Comment 1791 402 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1791 404 MOVB (x: [rsi|QWORD[.] + r10|QWORD * 1 + 2], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1796 406 JUMP ~[] destination: B40 -> B41  <||@
  Comment 1796 block B41 null  <||@
  Comment 1796 408 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1796 410 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 1799 412 BRANCH trueDestinationProbability: 0.04030493641460409 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B78  <||@
  Comment 1810 block B152 null  <||@
  Comment 1810 1394 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1810 1396 r8|QWORD[.] = LEA [rax|QWORD[.] + r10|QWORD * 1 + 16] size: QWORD  <||@
  Comment 1815 1398 r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD  <||@
  Comment 1818 1400 r10|QWORD = LEA [r11|QWORD - 32] size: QWORD  <||@
  Comment 1822 1402 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1825 1404 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B152 -> B153 falseDestination: B152 -> B154  <||@
  Comment 1831 block B153 null  <||@
  Comment 1831 1406 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1831 1408 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1838 1410 JUMP ~[] destination: B153 -> B157  <||@
  Comment 1838 block B157 null  <||@
  Comment 1838 1434 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1838 1436 r10|QWORD = LEA [r11|QWORD - 16] size: QWORD  <||@
  Comment 1842 1438 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1845 1440 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B157 -> B160 falseDestination: B157 -> B159  <||@
  Comment 1851 block B159 null  <||@
  Comment 1851 1446 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1851 1448 xmm0|V128_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 1855 1450 J (address: [r8|QWORD[.] + r9|QWORD * 1], input: xmm0|V128_BYTE) nZ: XMM oh: VMOVDQU  <||@
  Comment 1861 1452 r10|QWORD = LEA [r9|QWORD + 16] size: QWORD  <||@
  Comment 1865 1454 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1868 1456 JUMP ~[] destination: B159 -> B160  <||@
  Comment 1868 block B160 null  <||@
  Comment 1868 1458 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1868 1460 r10|QWORD = LEA [r11|QWORD - 8] size: QWORD  <||@
  Comment 1872 1462 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1875 1464 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B160 -> B163 falseDestination: B160 -> B162  <||@
  Comment 1881 block B162 null  <||@
  Comment 1881 1470 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1881 1472 xmm0|V64_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 1885 1474 J (address: [r8|QWORD[.] + r9|QWORD * 1], input: xmm0|V64_BYTE) nZ: XMM oh: VMOVQ  <||@
  Comment 1891 1476 r10|QWORD = LEA [r9|QWORD + 8] size: QWORD  <||@
  Comment 1895 1478 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1898 1480 JUMP ~[] destination: B162 -> B163  <||@
  Comment 1898 block B163 null  <||@
  Comment 1898 1482 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1898 1484 r10|QWORD = LEA [r11|QWORD - 4] size: QWORD  <||@
  Comment 1902 1486 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1905 1488 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B163 -> B166 falseDestination: B163 -> B165  <||@
  Comment 1911 block B165 null  <||@
  Comment 1911 1494 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1911 1496 xmm0|V32_BYTE = L oc: SIMD<0,0,0,0>  <||@
  Comment 1915 1498 J (address: [r8|QWORD[.] + r9|QWORD * 1], input: xmm0|V32_BYTE) nZ: XMM oh: VMOVD  <||@
  Comment 1921 1500 r10|QWORD = LEA [r9|QWORD + 4] size: QWORD  <||@
  Comment 1925 1502 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1928 1504 JUMP ~[] destination: B165 -> B166  <||@
  Comment 1928 block B166 null  <||@
  Comment 1928 1506 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1928 1508 r11|QWORD = DEC r11|QWORD size: QWORD  <||@
  Comment 1931 1510 CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1934 1512 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B166 -> B175 falseDestination: B166 -> B168  <||@
  Comment 1940 block B168 null  <||@
  Comment 1940 1518 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1940 1520 MOVB (x: [r8|QWORD[.] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1944 1522 r10|QWORD = INC r9|QWORD size: QWORD  <||@
  Comment 1950 1524 CMP (x: r10|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1953 1526 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B168 -> B175 falseDestination: B168 -> B170  <||@
  Comment 1959 block B170 null  <||@
  Comment 1959 1532 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1959 1534 MOVB (x: [r8|QWORD[.] + r9|QWORD * 1 + 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1964 1536 r10|QWORD = LEA [r9|QWORD + 2] size: QWORD  <||@
  Comment 1968 1538 CMP (x: r10|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1971 1540 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B170 -> B175 falseDestination: B170 -> B172  <||@
  Comment 1977 block B172 null  <||@
  Comment 1977 1546 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1977 1548 MOVB (x: [r8|QWORD[.] + r9|QWORD * 1 + 2], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1982 1550 JUMP ~[] destination: B172 -> B175  <||@
  Comment 1987 block B154 null  <||@
  Comment 1987 1412 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1987 1414 xmm0|V256_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 1991 1416 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1998 1418 JUMP ~[] destination: B154 -> B155  <||@
  Comment 1998 block B155 loop 5 depth 1 header:1222|LoopBegin  <||@
  Comment 1998 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 2000 1422 J (address: [r8|QWORD[.] + r9|QWORD * 1], input: xmm0|V256_BYTE) nZ: YMM oh: VMOVDQU  <||@
  Comment 2006 1424 r9|QWORD = LEA [r9|QWORD + 32] size: QWORD  <||@
  Comment 2010 1426 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 2013 1428 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B155 -> B157 falseDestination: B155 -> B155  <||@
  Comment 2020 block B133 loop 4 depth 1 header:1147|LoopBegin  <||@
  Comment 2020 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 2032 1248 xmm0|V256_BYTE = H [r8|QWORD[.] + rcx|QWORD * 1] nZ: YMM oh: VMOVDQU  <||@
  Comment 2038 1250 J (address: [r11|QWORD[.] + rcx|QWORD * 1], input: xmm0|V256_BYTE) nZ: YMM oh: VMOVDQU  <||@
  Comment 2044 1252 rcx|QWORD = LEA [rcx|QWORD + 32] size: QWORD  <||@
  Comment 2048 1254 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 2051 1256 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B133 -> B135 falseDestination: B133 -> B133  <||@
  Comment 2058 block B127 null  <||@
  Comment 2058 1190 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2058 1182 stack:60|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2063 1184 stack:64|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2068 1186 stack:72|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2073 1192 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>}  <||@
  Comment 2073 {meta{HotSpotType<[B, resolved>}}  <||@
  Comment 2083 1194 rdx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 2086 1196 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2091 1198 r13|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 2094 1200 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:54, 107]  <||@
  Comment 2094 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2099 [stack:8, stack:32, stack:48]at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54, duringCall: false, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                                                      |1                  |2               |3  |4                  |5               |6          |7  |8  |9 
     locals:  |vobject:UTF_8$Encoder:0{averageBytesPerChar=float[1.1|0x3f8ccccd],maxBytesPerChar=float[3.0|0x40400000],state=int[0|0x0],charset=stack:48|QWORD[.],replacement=vobject:byte[]:1{0=int[63|0x3f]},malformedInputAction=Object[CodingErrorAction@561514572],unmappableCharacterAction=Object[CodingErrorAction@561514572],cachedDecoder=Object[null],repl=int[63|0x3f],sgp=Object[null]}  |stack:32|QWORD[.]  |stack:60|DWORD  |-  |stack:72|QWORD[.]  |stack:64|DWORD  |r13|DWORD  |-  |-  |- 
  at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6                  |7           |8  |9  |10 
     locals:  |stack:48|QWORD[.]  |-  |-  |-  |-  |-  |stack:72|QWORD[.]  |int[0|0x0]  |-  |-  |-    <||@
  Comment 2100 1202 JUMP ~[] destination: B127 -> B128  <||@
  Comment 2105 block B22 null  <||@
  Comment 2105 268 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2105 270 xmm0|V256_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 2109 272 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2116 274 JUMP ~[] destination: B22 -> B23  <||@
  Comment 2116 block B23 loop 0 depth 1 header:994|LoopBegin  <||@
  Comment 2116 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 2128 278 J (address: [rsi|QWORD[.] + r10|QWORD * 1], input: xmm0|V256_BYTE) nZ: YMM oh: VMOVDQU  <||@
  Comment 2134 280 r10|QWORD = LEA [r10|QWORD + 32] size: QWORD  <||@
  Comment 2138 282 CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 2141 284 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B23 -> B25 falseDestination: B23 -> B23  <||@
  Comment 2148 block B56 null  <||@
  Comment 2148 556 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2148 558 xmm0|V256_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 2152 560 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2159 562 JUMP ~[] destination: B56 -> B57  <||@
  Comment 2159 block B57 loop 1 depth 1 header:1072|LoopBegin  <||@
  Comment 2159 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 2160 566 J (address: [rsi|QWORD[.] + r10|QWORD * 1], input: xmm0|V256_BYTE) nZ: YMM oh: VMOVDQU  <||@
  Comment 2166 568 r10|QWORD = LEA [r10|QWORD + 32] size: QWORD  <||@
  Comment 2170 570 CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 2173 572 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B57 -> B59 falseDestination: B57 -> B57  <||@
  Comment 2180 block B17 null  <||@
  Comment 2180 228 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2180 220 r13|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 2183 222 stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2187 224 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2190 230 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>}  <||@
  Comment 2190 {meta{HotSpotType<[B, resolved>}}  <||@
  Comment 2200 232 rdx|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 2203 234 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2208 236 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 2208 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2213 [stack:32, stack:48]at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2               |3          |4  |5  |6  |7  |8  |9  |10 
     locals:  |stack:48|QWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |r13|DWORD  |-  |-  |-  |-  |-  |-  |-    <||@
  Comment 2214 238 JUMP ~[] destination: B17 -> B18  <||@
  Comment 2219 block B51 null  <||@
  Comment 2219 514 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2219 506 stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2223 508 stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2228 510 r13|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 2231 516 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>}  <||@
  Comment 2231 {meta{HotSpotType<[B, resolved>}}  <||@
  Comment 2241 518 rdx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2244 520 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2249 522 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2252 524 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 2252 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2257 [stack:32, stack:48]at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2               |3          |4  |5  |6  |7  |8  |9  |10 
     locals:  |stack:48|QWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |r13|DWORD  |-  |-  |-  |-  |-  |-  |-    <||@
  Comment 2258 526 JUMP ~[] destination: B51 -> B52  <||@
  Comment 2263 block B76 null  <||@
  Comment 2263 702 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2263 704 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 2272 12  <||@
  Comment 2282 block B42 null  <||@
  Comment 2282 414 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2282 416 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 2291 12  <||@
  Comment 2301 block B4 null  <||@
  Comment 2301 60 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2301 62 stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2305 64 stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2310 66 r13|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 2313 68 VUCOMISD (x: xmm0|DOUBLE, y: xmm0|DOUBLE)  <||@
  Comment 2317 70 FLOATBRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B8 unorderedIsTrue: false  <||@
  Comment 2325 block B8 null  <||@
  Comment 2325 110 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2325 112 stack:56|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2334 114 r11|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2340 120 r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2345 122 r13|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2350 124 JUMP ~[] destination: B8 -> B10  <||@
  Comment 2355 block B5 null  <||@
  Comment 2355 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2355 74 xmm1|DOUBLE = VMOVE input: double[0.0|0x0]  <||@
  Comment 2359 76 VUCOMISD (x: xmm0|DOUBLE, y: xmm1|DOUBLE)  <||@
  Comment 2363 78 FLOATBRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 unorderedIsTrue: false  <||@
  Comment 2369 block B7 null  <||@
  Comment 2369 96 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2369 98 stack:56|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 2374 104 r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2379 106 r13|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2384 108 JUMP ~[] destination: B7 -> B10  <||@
  Comment 2389 block B6 null  <||@
  Comment 2389 80 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2389 82 stack:56|QWORD = MOVE input: long[2147483647|0x7fffffff]  <||@
  Comment 2398 84 r11|DWORD = MOVE input: int[2147483647|0x7fffffff]  <||@
  Comment 2404 90 r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2409 92 r13|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2414 94 JUMP ~[] destination: B6 -> B10  <||@
  Comment 2419 block B118 null  <||@
  Comment 2419 1076 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2419 1078 stack:60|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2424 1080 stack:64|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2429 1082 r10|DWORD = MOVE input: int[-176737|0xfffffffffffd4d9f]  <||@
  Comment 2435 1088 JUMP ~[] destination: B118 -> B121  <||@
  Comment 2435 block B121 null  <||@
  Comment 2435 1110 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2435 1064 r13|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 2438 1066 r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2441 1112 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2448 1114 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2455 1116 DEOPT info [bci:54, 107]  <||@
  Comment 2455 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2460 [r8:0, stack:32, stack:48]at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54, duringCall: false, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                                                      |1                  |2               |3  |4            |5               |6          |7  |8  |9 
     locals:  |vobject:UTF_8$Encoder:0{averageBytesPerChar=float[1.1|0x3f8ccccd],maxBytesPerChar=float[3.0|0x40400000],state=int[0|0x0],charset=stack:48|QWORD[.],replacement=vobject:byte[]:1{0=int[63|0x3f]},malformedInputAction=Object[CodingErrorAction@561514572],unmappableCharacterAction=Object[CodingErrorAction@561514572],cachedDecoder=Object[null],repl=int[63|0x3f],sgp=Object[null]}  |stack:32|QWORD[.]  |stack:60|DWORD  |-  |r8|QWORD[.]  |stack:64|DWORD  |r13|DWORD  |-  |-  |- 
  at java.lang.StringCoding.encode(StringCoding.java:364) [bci: 107, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6            |7           |8  |9  |10 
     locals:  |stack:48|QWORD[.]  |-  |-  |-  |-  |-  |r8|QWORD[.]  |int[0|0x0]  |-  |-  |-    <||@
  Comment 2461 block B120 null  <||@
  Comment 2461 1096 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2461 1098 stack:60|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2466 1100 stack:64|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2471 1102 r10|DWORD = MOVE input: int[-176737|0xfffffffffffd4d9f]  <||@
  Comment 2477 1108 JUMP ~[] destination: B120 -> B121  <||@
  Comment 2479 block B111 null  <||@
  Comment 2479 994 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2479 996 stack:60|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2484 998 stack:64|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2489 1000 r10|DWORD = MOVE input: int[-123931|0xfffffffffffe1be5]  <||@
  Comment 2495 1006 JUMP ~[] destination: B111 -> B121  <||@
  Comment 2497 block B89 null  <||@
  Comment 2497 796 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2497 798 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@455242270]  <||@
  Comment 2497 {Object[d.a@455242270]}  <||@
  Comment 2507 800 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2510 802 r10|DWORD = MOVE input: int[-113435|0xfffffffffffe44e5]  <||@
  Comment 2516 804 rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2520 806 JUMP ~[] destination: B89 -> B181  <||@
  Comment 2520 block B181 null  <||@
  Comment 2520 1614 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 2520 1616 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2527 1618 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 2534 1620 DEOPT info [bci:70, 12, 6, 2, 6, 1]  <||@
  Comment 2534 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2539 [stack:32, stack:48]at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 70, duringCall: false, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                  |1  |2                      |3                      |4                                
     locals:  |vobject:UTF_8$Encoder:0{averageBytesPerChar=float[0.0|0x0],maxBytesPerChar=float[0.0|0x0],state=int[0|0x0],charset=stack:48|QWORD[.],replacement=Object[null],malformedInputAction=Object[CodingErrorAction@250144264],unmappableCharacterAction=Object[CodingErrorAction@250144264],cachedDecoder=Object[null],repl=int[0|0x0],sgp=Object[null]}  |-  |float[1.1|0x3f8ccccd]  |float[3.0|0x40400000]  |vobject:byte[]:1{0=int[63|0x3f]} 
     stack:   |int[0|0x0]                                                                                                                                                                                                                                                                                                                                         |   |                       |                       |                                 
  at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6, duringCall: true, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                  |1                 
     locals:  |vobject:UTF_8$Encoder:0{averageBytesPerChar=float[0.0|0x0],maxBytesPerChar=float[0.0|0x0],state=int[0|0x0],charset=stack:48|QWORD[.],replacement=Object[null],malformedInputAction=Object[CodingErrorAction@250144264],unmappableCharacterAction=Object[CodingErrorAction@250144264],cachedDecoder=Object[null],repl=int[0|0x0],sgp=Object[null]}  |stack:48|QWORD[.] 
  at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6, duringCall: true, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                 
     locals:  |stack:48|QWORD[.]                                                                                                                                                                                                                                                                                                                                 
     stack:   |vobject:UTF_8$Encoder:0{averageBytesPerChar=float[0.0|0x0],maxBytesPerChar=float[0.0|0x0],state=int[0|0x0],charset=stack:48|QWORD[.],replacement=Object[null],malformedInputAction=Object[CodingErrorAction@250144264],unmappableCharacterAction=Object[CodingErrorAction@250144264],cachedDecoder=Object[null],repl=int[0|0x0],sgp=Object[null]} 
  at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 1, duringCall: true, rethrow: false]
              |0                  |1                  |2          |3          |4  |5  |6  |7  |8  |9  |10 
     locals:  |stack:48|QWORD[.]  |stack:32|QWORD[.]  |rcx|DWORD  |r13|DWORD  |-  |-  |-  |-  |-  |-  |-    <||@
  Comment 2540 block B112 null  <||@
  Comment 2540 1008 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2540 1010 stack:60|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2545 1012 stack:64|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2550 1014 r10|DWORD = MOVE input: int[-121363|0xfffffffffffe25ed]  <||@
  Comment 2556 1020 JUMP ~[] destination: B112 -> B121  <||@
  Comment 2558 block B116 null  <||@
  Comment 2558 1056 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2558 1058 stack:60|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2563 1060 stack:64|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2568 1062 r10|DWORD = MOVE input: int[-128275|0xfffffffffffe0aed]  <||@
  Comment 2574 1068 JUMP ~[] destination: B116 -> B121  <||@
  Comment 2579 block B179 null  <||@
  Comment 2579 1590 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2579 1592 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@455242270]  <||@
  Comment 2579 {Object[d.a@455242270]}  <||@
  Comment 2589 1594 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2592 1596 r10|DWORD = MOVE input: int[-108315|0xfffffffffffe58e5]  <||@
  Comment 2598 1598 rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2602 1600 JUMP ~[] destination: B179 -> B181  <||@
  Comment 2604 block B79 null  <||@
  Comment 2604 718 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2604 720 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1621998909]  <||@
  Comment 2604 {Object[d.a@1621998909]}  <||@
  Comment 2614 722 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2617 724 r10|DWORD = MOVE input: int[-107019|0xfffffffffffe5df5]  <||@
  Comment 2623 726 rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2627 728 JUMP ~[] destination: B79 -> B181  <||@
  Comment 2629 block B105 null  <||@
  Comment 2629 918 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2629 920 stack:60|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2634 922 stack:64|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2639 924 r10|DWORD = MOVE input: int[-121107|0xfffffffffffe26ed]  <||@
  Comment 2645 930 JUMP ~[] destination: B105 -> B121  <||@
  Comment 2650 block B178 null  <||@
  Comment 2650 1578 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2650 1580 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@455242270]  <||@
  Comment 2650 {Object[d.a@455242270]}  <||@
  Comment 2660 1582 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2663 1584 r10|DWORD = MOVE input: int[-113435|0xfffffffffffe44e5]  <||@
  Comment 2669 1586 rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2673 1588 JUMP ~[] destination: B178 -> B181  <||@
  Comment 2678 block B180 null  <||@
  Comment 2678 1602 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2678 1604 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@455242270]  <||@
  Comment 2678 {Object[d.a@455242270]}  <||@
  Comment 2688 1606 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2691 1608 r10|DWORD = MOVE input: int[-108315|0xfffffffffffe58e5]  <||@
  Comment 2697 1610 rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2701 1612 JUMP ~[] destination: B180 -> B181  <||@
  Comment 2706 block B177 null  <||@
  Comment 2706 1568 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2706 1570 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2716 1572 rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2720 1574 r10|DWORD = MOVE input: int[-106515|0xfffffffffffe5fed]  <||@
  Comment 2726 1576 JUMP ~[] destination: B177 -> B181  <||@
  Comment 2731 block B114 null  <||@
  Comment 2731 1036 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2731 1038 stack:60|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2736 1040 stack:64|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2741 1042 r10|DWORD = MOVE input: int[-116763|0xfffffffffffe37e5]  <||@
  Comment 2747 1048 JUMP ~[] destination: B114 -> B121  <||@
  Comment 2752 block B113 null  <||@
  Comment 2752 1022 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2752 1024 stack:60|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2757 1026 stack:64|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2762 1028 r10|DWORD = MOVE input: int[-135195|0xfffffffffffdefe5]  <||@
  Comment 2768 1034 JUMP ~[] destination: B113 -> B121  <||@
  Comment 2773 block B2 null  <||@
  Comment 2773 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2773 30 r10|DWORD = MOVE input: int[-94995|0xfffffffffffe8ced]  <||@
  Comment 2779 32 stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2783 34 stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2788 36 r13|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 2791 38 JUMP ~[] destination: B2 -> B184  <||@
  Comment 2791 block B184 null  <||@
  Comment 2791 1638 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2791 1640 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2798 1642 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2805 1644 DEOPT info [bci:0]  <||@
  Comment 2805 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2810 [stack:32, stack:48]at java.lang.StringCoding.encode(StringCoding.java:348) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2               |3          |4  |5  |6  |7  |8  |9  |10 
     locals:  |stack:48|QWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |r13|DWORD  |-  |-  |-  |-  |-  |-  |-    <||@
  Comment 2811 block B183 null  <||@
  Comment 2811 1626 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2811 1628 r10|DWORD = MOVE input: int[-92723|0xfffffffffffe95cd]  <||@
  Comment 2817 1630 stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2821 1632 stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2826 1634 r13|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 2829 1636 JUMP ~[] destination: B183 -> B184  <||@
  Comment 2831 block B45 null  <||@
  Comment 2831 428 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2831 430 r10|DWORD = MOVE input: int[-103699|0xfffffffffffe6aed]  <||@
  Comment 2837 432 r13|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 2840 434 stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2844 436 JUMP ~[] destination: B45 -> B184  <||@
  Comment 2846 block B110 null  <||@
  Comment 2846 980 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2846 982 stack:60|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2851 984 stack:64|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2856 986 r10|DWORD = MOVE input: int[-126235|0xfffffffffffe12e5]  <||@
  Comment 2862 992 JUMP ~[] destination: B110 -> B121  <||@
  Comment 2867 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2867 4  <||@
  Comment 2873 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 2873 5  <||@
  HexCodeFile>>> <|@
end_nmethod
