begin_compilation
  name " HotSpotCompilation-9647[sun.misc.FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)]"
  method "HotSpotCompilation-9647[sun.misc.FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)]"
  date 1527005214422
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v398 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v398  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lsun/misc/FDBigInteger;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 ?127 v385 v386 ?70 v395 v248 ?323 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Lsun/misc/FDBigInteger;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v398 a134 v381 v382 a132 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a# Lsun/misc/FDBigInteger;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v399 a134 v383 v384 a132 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)>
duringCall: false
localsSize: 14
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 1029
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 a3 - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v331 v398 v399 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a3 - - - - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
object: a2 
=== Succesors ===
next: v399 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?4 object: a2 #next: v399  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
object: a3 
=== Succesors ===
next: i364 
=== Usages ===
=== Predecessor ===
v398 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?4 object: a3 #next: i364  <|@  <|@
f <@~|@floating>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i364 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i364 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.nWords
nodeSourcePosition: at sun.misc.FDBigInteger.size(FDBigInteger.java:534) [bci: 1]
at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1029) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v381 
=== Succesors ===
next: i365 
=== Usages ===
i10 
=== Predecessor ===
v399 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v381 #next: i365  <|@  <|@
f <@~|@floating>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i365 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i365 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.offset
nodeSourcePosition: at sun.misc.FDBigInteger.size(FDBigInteger.java:534) [bci: 5]
at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1029) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v382 
=== Succesors ===
next: v282 
=== Usages ===
i10 
=== Predecessor ===
i364 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v382 #next: v282  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.size(FDBigInteger.java:534) [bci: 8]
at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1029) [bci: 1]
stamp: i32
=== Inputs ===
x: i364 
y: i365 
=== Succesors ===
=== Usages ===
v17 i136 i138 v36 v147 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i364 y: i365  <|@  <|@
f <@~|@floating>@ <|@
tid i33 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1045) [bci: 56]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v34 v36 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1048) [bci: 72]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i10 
y: i33 
=== Succesors ===
=== Usages ===
v282 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i10 y: i33  <|@  <|@
f <@~|@floating>@ <|@
tid a328 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v331 v353 v343 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1045) [bci: 56]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v36 
=== Succesors ===
trueSuccessor: v281 
falseSuccessor: v279 
=== Usages ===
=== Predecessor ===
i365 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v36 #trueSuccessor: v281 #falseSuccessor: v279  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1045) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: v334 
=== Usages ===
=== Predecessor ===
v282 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v334  <|@  <|@
f <@~|@floating>@ <|@
tid i335 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -68883
stableDimension: 0
stamp: i32 [-68883] ⇊00000000fffef2ed ⇈00000000fffef2ed
stampKind: i32
value: int[-68883|0xfffffffffffef2ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i329 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v325 
=== Predecessor ===
v281 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1045) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: i366 
=== Usages ===
=== Predecessor ===
v282 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i366  <|@  <|@
f <@~|@floating>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i366 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i366 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.nWords
nodeSourcePosition: at sun.misc.FDBigInteger.size(FDBigInteger.java:534) [bci: 1]
at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1030) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v383 
=== Succesors ===
next: i367 
=== Usages ===
i16 
=== Predecessor ===
v279 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v383 #next: i367  <|@  <|@
f <@~|@floating>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i367 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i367 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.offset
nodeSourcePosition: at sun.misc.FDBigInteger.size(FDBigInteger.java:534) [bci: 5]
at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1030) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v384 
=== Succesors ===
next: v286 
=== Usages ===
i16 
=== Predecessor ===
i366 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v384 #next: v286  <|@  <|@
f <@~|@floating>@ <|@
tid i16 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.size(FDBigInteger.java:534) [bci: 8]
at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1030) [bci: 7]
stamp: i32
=== Inputs ===
x: i366 
y: i367 
=== Succesors ===
=== Usages ===
v17 i136 i138 v38 v34 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i366 y: i367  <|@  <|@
f <@~|@floating>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1045) [bci: 56]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i16 
y: i33 
=== Succesors ===
=== Usages ===
v286 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i16 y: i33  <|@  <|@
f <@*|@fixed>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1048) [bci: 72]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v34 
=== Succesors ===
trueSuccessor: v285 
falseSuccessor: v283 
=== Usages ===
=== Predecessor ===
i367 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v34 #trueSuccessor: v285 #falseSuccessor: v283  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1048) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v336 
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v336  <|@  <|@
f <@~|@floating>@ <|@
tid i337 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -69139
stableDimension: 0
stamp: i32 [-69139] ⇊00000000fffef1ed ⇈00000000fffef1ed
stampKind: i32
value: int[-69139|0xfffffffffffef1ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i329 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v325 
=== Predecessor ===
v285 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i329 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-69139 - -43531] ⇊00000000fffe40e5 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v325 
values: i335 i337 
=== Succesors ===
=== Usages ===
v331 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v325 values: i335 i337  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v334 v336 
=== Succesors ===
next: v331 
=== Usages ===
i329 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v334 v336 #next: v331  <|@  <|@
f <@*|@fixed>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
actionAndReason: i329 
speculation: a328 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v325 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?4 actionAndReason: i329 speculation: a328  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1048) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: i368 
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i368  <|@  <|@
f <@~|@floating>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i368 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i368 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.nWords
nodeSourcePosition: at sun.misc.FDBigInteger.size(FDBigInteger.java:534) [bci: 1]
at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1044) [bci: 49]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v385 
=== Succesors ===
next: i369 
=== Usages ===
i93 i142 
=== Predecessor ===
v283 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v385 #next: i369  <|@  <|@
f <@~|@floating>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i369 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i369 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.offset
nodeSourcePosition: at sun.misc.FDBigInteger.size(FDBigInteger.java:534) [bci: 5]
at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1044) [bci: 49]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v386 
=== Succesors ===
next: v20 
=== Usages ===
i142 
=== Predecessor ===
i368 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v386 #next: v20  <|@  <|@
f <@~|@floating>@ <|@
tid i142 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.size(FDBigInteger.java:534) [bci: 8]
at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1044) [bci: 49]
stamp: i32
=== Inputs ===
x: i368 
y: i369 
=== Succesors ===
=== Usages ===
v147 v110 v38 v86 v46 ?70 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i368 y: i369  <|@  <|@
f <@~|@floating>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1033) [bci: 16]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i10 
y: i16 
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i10 y: i16  <|@  <|@
f <@~|@floating>@ <|@
tid i42 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1052) [bci: 88]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v152 i50 i61 i93 v102 v112 v151 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1033) [bci: 16]
stamp: void
trueSuccessorProbability: 4.48019946627189E-4
=== Inputs ===
condition: v17 
=== Succesors ===
trueSuccessor: v18 
falseSuccessor: v19 
=== Usages ===
=== Predecessor ===
i369 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v17 #trueSuccessor: v18 #falseSuccessor: v19  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4556900132939549728
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1039) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v41 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v41  <|@  <|@
f <@~|@floating>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1051) [bci: 85]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i142 
y: i16 
=== Succesors ===
=== Usages ===
v41 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i142 y: i16  <|@  <|@
f <@*|@fixed>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1051) [bci: 85]
stamp: void
trueSuccessorProbability: 4.4801994662724276E-4
=== Inputs ===
condition: v38 
=== Succesors ===
trueSuccessor: v39 
falseSuccessor: v40 
=== Usages ===
=== Predecessor ===
v18 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v38 #trueSuccessor: v39 #falseSuccessor: v40  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4506679085690573838
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1052) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
next: v151 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v151  <|@  <|@
f <@*|@fixed>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: i42 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i42 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4556896430274536325
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1054) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v126 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v126  <|@  <|@
f <@*|@fixed>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v125 
=== Predecessor ===
v40 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607178383395088038
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1034) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v150 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v150  <|@  <|@
f <@~|@floating>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1051) [bci: 85]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i142 
y: i10 
=== Succesors ===
=== Usages ===
v150 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i142 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1051) [bci: 85]
stamp: void
trueSuccessorProbability: 4.4801994662724276E-4
=== Inputs ===
condition: v147 
=== Succesors ===
trueSuccessor: v148 
falseSuccessor: v149 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v147 #trueSuccessor: v148 #falseSuccessor: v149  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 4556896430274537317
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1052) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
next: v152 
=== Usages ===
=== Predecessor ===
v150 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v152  <|@  <|@
f <@*|@fixed>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: i42 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v148 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i42 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607174349798100569
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1054) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v128 
=== Usages ===
=== Predecessor ===
v150 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v128  <|@  <|@
f <@*|@fixed>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v125 
=== Predecessor ===
v149 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607178383395088037
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i138 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v125 
values: i10 i16 
=== Succesors ===
=== Usages ===
v55 ?127 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v125 values: i10 i16  <|@  <|@
f <@~|@floating>@ <|@
tid i136 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v125 
values: i16 i10 
=== Succesors ===
=== Usages ===
i45 v55 ?70 v86 ?127 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v125 values: i16 i10  <|@  <|@
f <@~|@floating>@ <|@
tid a132 <|@
d <@d|@=== Debug Properties ===
stamp: a!# Lsun/misc/FDBigInteger;
valueDescription: a -
=== Inputs ===
merge: v125 
values: a3 a2 
=== Succesors ===
=== Usages ===
v387 v388 ?70 v247 ?127 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v125 values: a3 a2  <|@  <|@
f <@~|@floating>@ <|@
tid a134 <|@
d <@d|@=== Debug Properties ===
stamp: a!# Lsun/misc/FDBigInteger;
valueDescription: a -
=== Inputs ===
merge: v125 
values: a2 a3 
=== Succesors ===
=== Usages ===
v391 v392 ?70 v247 ?127 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v125 values: a2 a3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v126 v128 
=== Succesors ===
next: v290 
=== Usages ===
i138 i136 a132 a134 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v126 v128 #next: v290  <|@  <|@
tid ?127 <|@
d <@d|@=== Debug Properties ===
bci: 48
code: ResolvedJavaMethodBytecode<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)>
duringCall: false
localsSize: 14
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 1044
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - a132 a134 - - i136 i138 - - - - - 
=== Succesors ===
=== Usages ===
v353 i371 i375 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - a132 a134 - - i136 i138 - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid i44 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1054) [bci: 92]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i45 v90 v108 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i45 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1054) [bci: 93]
stamp: i32
=== Inputs ===
x: i136 
y: i44 
=== Succesors ===
=== Usages ===
v46 v110 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i136 y: i44  <|@  <|@
f <@~|@floating>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1054) [bci: 96]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i45 
y: i142 
=== Succesors ===
=== Usages ===
v290 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i45 y: i142  <|@  <|@
f <@*|@fixed>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1054) [bci: 96]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v46 
=== Succesors ===
trueSuccessor: v289 
falseSuccessor: v287 
=== Usages ===
=== Predecessor ===
v125 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v46 #trueSuccessor: v289 #falseSuccessor: v287  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1054) [bci: 96]
stamp: void
=== Inputs ===
=== Succesors ===
next: v349 
=== Usages ===
=== Predecessor ===
v290 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v349  <|@  <|@
f <@~|@floating>@ <|@
tid i350 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -48659
stableDimension: 0
stamp: i32 [-48659] ⇊00000000ffff41ed ⇈00000000ffff41ed
stampKind: i32
value: int[-48659|0xffffffffffff41ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i351 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v348 
=== Predecessor ===
v289 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B36" 
    xhandlers
    flags 
    probability 4607178383395088037
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1054) [bci: 96]
stamp: void
=== Inputs ===
=== Succesors ===
next: a370 
=== Usages ===
=== Predecessor ===
v290 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a370  <|@  <|@
f <@~|@floating>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a132 
index: - 
=== Succesors ===
=== Usages ===
a370 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a132 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a370 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.data
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1057) [bci: 102]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v387 
=== Succesors ===
next: i371 
=== Usages ===
a194 v389 
=== Predecessor ===
v287 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v387 #next: i371  <|@  <|@
f <@~|@floating>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a370 
=== Succesors ===
=== Usages ===
i371 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a370  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i371 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1057) [bci: 111]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?127 
guard: - 
address: v389 
=== Succesors ===
next: i372 
=== Usages ===
v202 
=== Predecessor ===
a370 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?127 guard: - address: v389 #next: i372  <|@  <|@
f <@~|@floating>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a132 
index: - 
=== Succesors ===
=== Usages ===
i372 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a132 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i372 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.nWords
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1057) [bci: 106]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v388 
=== Succesors ===
next: v298 
=== Usages ===
i50 
=== Predecessor ===
i371 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v388 #next: v298  <|@  <|@
f <@~|@floating>@ <|@
tid i50 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1057) [bci: 110]
stamp: i32
=== Inputs ===
x: i372 
y: i42 
=== Succesors ===
=== Usages ===
v390 v202 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i372 y: i42  <|@  <|@
f <@~|@floating>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1057) [bci: 111]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i50 
y: i371 
=== Succesors ===
=== Usages ===
v298 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i50 y: i371  <|@  <|@
f <@*|@fixed>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1057) [bci: 111]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v202 
=== Succesors ===
trueSuccessor: v295 
falseSuccessor: v297 
=== Usages ===
=== Predecessor ===
i372 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v202 #trueSuccessor: v295 #falseSuccessor: v297  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B23" 
    xhandlers
    flags 
    probability 4607178383395088037
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1057) [bci: 111]
stamp: void
=== Inputs ===
=== Succesors ===
next: i373 
=== Usages ===
i373 
=== Predecessor ===
v298 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i373  <|@  <|@
f <@~|@floating>@ <|@
tid a194 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1057) [bci: 102]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a370 
=== Succesors ===
=== Usages ===
v390 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a370  <|@  <|@
f <@~|@floating>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a194 
index: i50 
=== Succesors ===
=== Usages ===
i373 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a194 index: i50  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i373 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1057) [bci: 111]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v295 
address: v390 
=== Succesors ===
next: v58 
=== Usages ===
j54 
=== Predecessor ===
v295 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v295 address: v390 #next: v58  <|@  <|@
f <@~|@floating>@ <|@
tid j54 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 32
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1057) [bci: 116]
resultBits: 64
stamp: i64 [0 - 4294967295] ⇈00000000ffffffff
=== Inputs ===
value: i373 
=== Succesors ===
=== Usages ===
j65 j160 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i373  <|@  <|@
f <@~|@floating>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1058) [bci: 123]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i136 
y: i138 
=== Succesors ===
=== Usages ===
v58 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i136 y: i138  <|@  <|@
f <@~|@floating>@ <|@
tid j75 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1061) [bci: 156]
rawvalue: -4294967296
stableDimension: 0
stamp: i64 [-4294967296] ⇊ffffffff00000000 ⇈ffffffff00000000
stampKind: i64
value: long[-4294967296|0xffffffff00000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v163 v84 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1058) [bci: 123]
stamp: void
trueSuccessorProbability: 0.8196203765054371
=== Inputs ===
condition: v55 
=== Succesors ===
trueSuccessor: v56 
falseSuccessor: v57 
=== Usages ===
=== Predecessor ===
i373 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v55 #trueSuccessor: v56 #falseSuccessor: v57  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B22" 
    xhandlers
    flags 
    probability 4605554396089599157
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1059) [bci: 126]
stamp: void
=== Inputs ===
=== Succesors ===
next: a374 
=== Usages ===
=== Predecessor ===
v58 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a374  <|@  <|@
f <@~|@floating>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a134 
index: - 
=== Succesors ===
=== Usages ===
a374 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a134 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a374 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.data
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1059) [bci: 130]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v391 
=== Succesors ===
next: i375 
=== Usages ===
a213 v393 
=== Predecessor ===
v56 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v391 #next: i375  <|@  <|@
f <@~|@floating>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a374 
=== Succesors ===
=== Usages ===
i375 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a374  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i375 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1059) [bci: 140]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?127 
guard: - 
address: v393 
=== Succesors ===
next: i376 
=== Usages ===
v221 
=== Predecessor ===
a374 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?127 guard: - address: v393 #next: i376  <|@  <|@
f <@~|@floating>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a134 
index: - 
=== Succesors ===
=== Usages ===
i376 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a134 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i376 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.nWords
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1059) [bci: 135]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v392 
=== Succesors ===
next: v306 
=== Usages ===
i61 
=== Predecessor ===
i375 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v392 #next: v306  <|@  <|@
f <@~|@floating>@ <|@
tid i61 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1059) [bci: 139]
stamp: i32
=== Inputs ===
x: i376 
y: i42 
=== Succesors ===
=== Usages ===
v394 v221 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i376 y: i42  <|@  <|@
f <@~|@floating>@ <|@
tid v221 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1059) [bci: 140]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i61 
y: i375 
=== Succesors ===
=== Usages ===
v306 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i61 y: i375  <|@  <|@
f <@*|@fixed>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1059) [bci: 140]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v221 
=== Succesors ===
trueSuccessor: v303 
falseSuccessor: v305 
=== Usages ===
=== Predecessor ===
i376 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v221 #trueSuccessor: v303 #falseSuccessor: v305  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4605554396089599157
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1059) [bci: 140]
stamp: void
=== Inputs ===
=== Succesors ===
next: i377 
=== Usages ===
i377 
=== Predecessor ===
v306 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i377  <|@  <|@
f <@~|@floating>@ <|@
tid a213 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1059) [bci: 130]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a374 
=== Succesors ===
=== Usages ===
v394 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a374  <|@  <|@
f <@~|@floating>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a213 
index: i61 
=== Succesors ===
=== Usages ===
i377 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a213 index: i61  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i377 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1059) [bci: 140]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v303 
address: v394 
=== Succesors ===
next: v166 
=== Usages ===
j64 
=== Predecessor ===
v303 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v303 address: v394 #next: v166  <|@  <|@
f <@~|@floating>@ <|@
tid j64 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 32
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1059) [bci: 145]
resultBits: 64
stamp: i64 [0 - 4294967295] ⇈00000000ffffffff
=== Inputs ===
value: i377 
=== Succesors ===
=== Usages ===
j65 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i377  <|@  <|@
f <@~|@floating>@ <|@
tid j65 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1059) [bci: 146]
stamp: i64 [0 - 8589934590] ⇈00000001ffffffff
=== Inputs ===
x: j54 
y: j64 
=== Succesors ===
=== Usages ===
j160 v163 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j54 y: j64  <|@  <|@
f <@~|@floating>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1061) [bci: 156]
stamp: void
=== Inputs ===
x: j65 
y: j75 
=== Succesors ===
=== Usages ===
v166 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j65 y: j75  <|@  <|@
f <@*|@fixed>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1061) [bci: 156]
stamp: void
trueSuccessorProbability: 0.9997661456912343
=== Inputs ===
condition: v163 
=== Succesors ===
trueSuccessor: v164 
falseSuccessor: v165 
=== Usages ===
=== Predecessor ===
i377 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v163 #trueSuccessor: v164 #falseSuccessor: v165  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    probability 4605552670437369125
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1062) [bci: 159]
stamp: void
=== Inputs ===
=== Succesors ===
next: v155 
=== Usages ===
=== Predecessor ===
v166 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v155  <|@  <|@
f <@*|@fixed>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v153 
=== Predecessor ===
v164 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4551200295551042960
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1077) [bci: 223]
stamp: void
=== Inputs ===
=== Succesors ===
next: v310 
=== Usages ===
=== Predecessor ===
v166 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v310  <|@  <|@
f <@~|@floating>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1077) [bci: 229]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i142 
y: i45 
=== Succesors ===
=== Usages ===
v310 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i142 y: i45  <|@  <|@
f <@*|@fixed>@ <|@
tid v310 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1077) [bci: 229]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v110 
=== Succesors ===
trueSuccessor: v307 
falseSuccessor: v309 
=== Usages ===
=== Predecessor ===
v165 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v110 #trueSuccessor: v307 #falseSuccessor: v309  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 4551200295551042960
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1077) [bci: 229]
stamp: void
=== Inputs ===
=== Succesors ===
next: v112 
=== Usages ===
=== Predecessor ===
v310 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v112  <|@  <|@
f <@*|@fixed>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1078) [bci: 233]
stamp: void
=== Inputs ===
result: i42 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v307 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i42 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1077) [bci: 229]
stamp: void
=== Inputs ===
=== Succesors ===
next: v362 
=== Usages ===
=== Predecessor ===
v310 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v362  <|@  <|@
f <@~|@floating>@ <|@
tid i363 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -58643
stableDimension: 0
stamp: i32 [-58643] ⇊00000000ffff1aed ⇈00000000ffff1aed
stampKind: i32
value: int[-58643|0xffffffffffff1aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i351 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v348 
=== Predecessor ===
v309 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1059) [bci: 140]
stamp: void
=== Inputs ===
=== Succesors ===
next: v360 
=== Usages ===
=== Predecessor ===
v306 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v360  <|@  <|@
f <@~|@floating>@ <|@
tid i361 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -56859
stableDimension: 0
stamp: i32 [-56859] ⇊00000000ffff21e5 ⇈00000000ffff21e5
stampKind: i32
value: int[-56859|0xffffffffffff21e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i351 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v348 
=== Predecessor ===
v305 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B24" 
    xhandlers
    flags 
    probability 4595663969512490944
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1061) [bci: 149]
stamp: void
=== Inputs ===
=== Succesors ===
next: v154 
=== Usages ===
=== Predecessor ===
v58 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v154  <|@  <|@
f <@*|@fixed>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v153 
=== Predecessor ===
v57 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B18" 
    successors "B25" "B34" 
    xhandlers
    flags 
    probability 4607176657742858005
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j160 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [0 - 8589934590] ⇈00000001ffffffff
valueDescription: i64
=== Inputs ===
merge: v153 
values: j54 j65 
=== Succesors ===
=== Usages ===
?70 v98 j81 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v153 values: j54 j65  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v154 v155 
=== Succesors ===
next: v314 
=== Usages ===
j160 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v154 v155 #next: v314  <|@  <|@
tid ?70 <|@
d <@d|@=== Debug Properties ===
bci: 149
code: ResolvedJavaMethodBytecode<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)>
duringCall: false
localsSize: 14
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 1061
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - a132 a134 - - i136 - i142 j160 - - - 
=== Succesors ===
=== Usages ===
v343 i379 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - a132 a134 - - i136 - i142 j160 - - -  <|@  <|@
f <@~|@floating>@ <|@
tid j80 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1062) [bci: 161]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j81 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j81 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1062) [bci: 162]
stamp: i64 [1 - 8589934591] ⇈00000001ffffffff
=== Inputs ===
x: j160 
y: j80 
=== Succesors ===
=== Usages ===
v104 v84 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j160 y: j80  <|@  <|@
f <@~|@floating>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1062) [bci: 168]
stamp: void
=== Inputs ===
x: j81 
y: j75 
=== Succesors ===
=== Usages ===
v314 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j81 y: j75  <|@  <|@
f <@*|@fixed>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1062) [bci: 168]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v84 
=== Succesors ===
trueSuccessor: v311 
falseSuccessor: v313 
=== Usages ===
=== Predecessor ===
v153 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v84 #trueSuccessor: v311 #falseSuccessor: v313  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607176657742858005
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1062) [bci: 168]
stamp: void
=== Inputs ===
=== Succesors ===
next: v89 
=== Usages ===
=== Predecessor ===
v314 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v89  <|@  <|@
f <@~|@floating>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1064) [bci: 175]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i136 
y: i142 
=== Succesors ===
=== Usages ===
v89 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i136 y: i142  <|@  <|@
f <@*|@fixed>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1064) [bci: 175]
stamp: void
trueSuccessorProbability: 0.24069237066781024
=== Inputs ===
condition: v86 
=== Succesors ===
trueSuccessor: v87 
falseSuccessor: v88 
=== Usages ===
=== Predecessor ===
v311 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v86 #trueSuccessor: v87 #falseSuccessor: v88  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors 
    xhandlers
    flags 
    probability 4597834330287318198
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1065) [bci: 178]
stamp: void
=== Inputs ===
=== Succesors ===
next: v90 
=== Usages ===
=== Predecessor ===
v89 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v90  <|@  <|@
f <@*|@fixed>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1065) [bci: 179]
stamp: void
=== Inputs ===
result: i44 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i44 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B33" 
    xhandlers
    flags 
    probability 4605010080243662311
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1068) [bci: 180]
stamp: void
=== Inputs ===
=== Succesors ===
next: a378 
=== Usages ===
=== Predecessor ===
v89 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a378  <|@  <|@
f <@~|@floating>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a378 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a378 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.data
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1068) [bci: 181]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v395 
=== Succesors ===
next: i379 
=== Usages ===
a233 v396 
=== Predecessor ===
v88 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v395 #next: i379  <|@  <|@
f <@~|@floating>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a378 
=== Succesors ===
=== Usages ===
i379 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a378  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i379 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1068) [bci: 190]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?70 
guard: - 
address: v396 
=== Succesors ===
next: v322 
=== Usages ===
v239 
=== Predecessor ===
a378 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?70 guard: - address: v396 #next: v322  <|@  <|@
f <@~|@floating>@ <|@
tid i93 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1068) [bci: 189]
stamp: i32
=== Inputs ===
x: i368 
y: i42 
=== Succesors ===
=== Usages ===
v397 v239 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i368 y: i42  <|@  <|@
f <@~|@floating>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1068) [bci: 190]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i93 
y: i379 
=== Succesors ===
=== Usages ===
v322 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i93 y: i379  <|@  <|@
f <@*|@fixed>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1068) [bci: 190]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v239 
=== Succesors ===
trueSuccessor: v319 
falseSuccessor: v321 
=== Usages ===
=== Predecessor ===
i379 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v239 #trueSuccessor: v319 #falseSuccessor: v321  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4605010080243662311
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1068) [bci: 190]
stamp: void
=== Inputs ===
=== Succesors ===
next: i380 
=== Usages ===
i380 
=== Predecessor ===
v322 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i380  <|@  <|@
f <@~|@floating>@ <|@
tid a233 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1068) [bci: 181]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a378 
=== Succesors ===
=== Usages ===
v397 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a378  <|@  <|@
f <@~|@floating>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a233 
index: i93 
=== Succesors ===
=== Usages ===
i380 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a233 index: i93  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i380 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1068) [bci: 190]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v319 
address: v397 
=== Succesors ===
next: v101 
=== Usages ===
j96 
=== Predecessor ===
v319 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v319 address: v397 #next: v101  <|@  <|@
f <@~|@floating>@ <|@
tid j96 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 32
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1068) [bci: 195]
resultBits: 64
stamp: i64 [0 - 4294967295] ⇈00000000ffffffff
=== Inputs ===
value: i380 
=== Succesors ===
=== Usages ===
v104 v98 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i380  <|@  <|@
f <@~|@floating>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1069) [bci: 203]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j96 
y: j160 
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j96 y: j160  <|@  <|@
f <@*|@fixed>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1069) [bci: 203]
stamp: void
trueSuccessorProbability: 0.073727986856292
=== Inputs ===
condition: v98 
=== Succesors ===
trueSuccessor: v99 
falseSuccessor: v100 
=== Usages ===
=== Predecessor ===
i380 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v98 #trueSuccessor: v99 #falseSuccessor: v100  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 4588223549351557345
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1070) [bci: 206]
stamp: void
=== Inputs ===
=== Succesors ===
next: v102 
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v102  <|@  <|@
f <@*|@fixed>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1070) [bci: 207]
stamp: void
=== Inputs ===
result: i42 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v99 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i42 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4604506159723927129
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1072) [bci: 208]
stamp: void
=== Inputs ===
=== Succesors ===
next: v107 
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v107  <|@  <|@
f <@~|@floating>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1072) [bci: 215]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j81 
y: j96 
=== Succesors ===
=== Usages ===
v107 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j81 y: j96  <|@  <|@
f <@*|@fixed>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1072) [bci: 215]
stamp: void
trueSuccessorProbability: 0.9731167895349482
=== Inputs ===
condition: v104 
=== Succesors ===
trueSuccessor: v105 
falseSuccessor: v106 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v104 #trueSuccessor: v105 #falseSuccessor: v106  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors 
    xhandlers
    flags 
    probability 4604335963726662809
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1073) [bci: 218]
stamp: void
=== Inputs ===
=== Succesors ===
next: v108 
=== Usages ===
=== Predecessor ===
v107 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v108  <|@  <|@
f <@*|@fixed>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1073) [bci: 219]
stamp: void
=== Inputs ===
result: i44 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i44 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors 
    xhandlers
    flags 
    probability 4581103493320882173
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1075) [bci: 220]
stamp: void
=== Inputs ===
=== Succesors ===
next: a114 
=== Usages ===
=== Predecessor ===
v107 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a114  <|@  <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1090) [bci: 285]
returnStamp: a# Lsun/misc/FDBigInteger;
signature: [Ljdk.vm.ci.meta.JavaType;@7642e5ba
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.add(FDBigInteger)>
=== Inputs ===
arguments: a132 a134 
=== Succesors ===
=== Usages ===
a114 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a132 a134  <|@  <|@
tid ?323 <|@
d <@d|@=== Debug Properties ===
bci: 285
code: ResolvedJavaMethodBytecode<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)>
duringCall: true
localsSize: 14
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 1090
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - - - - - - - - - - - - - a1 
=== Succesors ===
=== Usages ===
a114 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - - - - - - - - - a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a114 <|@
d <@d|@=== Debug Properties ===
bci: 285
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1090) [bci: 285]
polymorphic: false
stamp: a# Lsun/misc/FDBigInteger;
targetMethod: Direct#FDBigInteger.add
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v247 
stateDuring: ?323 
=== Succesors ===
next: i117 
=== Usages ===
v248 
=== Predecessor ===
v106 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v247 stateDuring: ?323 #next: i117  <|@  <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1090) [bci: 288]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@61c4272e
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)>
=== Inputs ===
arguments: a1 a114 
=== Succesors ===
=== Usages ===
i117 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a114  <|@  <|@
tid ?324 <|@
d <@d|@=== Debug Properties ===
bci: 288
code: ResolvedJavaMethodBytecode<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)>
duringCall: true
localsSize: 14
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 1090
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
i117 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i117 <|@
d <@d|@=== Debug Properties ===
bci: 288
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1090) [bci: 288]
polymorphic: false
stamp: i32
targetMethod: Direct#FDBigInteger.cmp
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v248 
stateDuring: ?324 
=== Succesors ===
next: v119 
=== Usages ===
v119 
=== Predecessor ===
a114 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v248 stateDuring: ?324 #next: v119  <|@  <|@
f <@*|@fixed>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1090) [bci: 291]
stamp: void
=== Inputs ===
result: i117 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i117 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i117 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1068) [bci: 190]
stamp: void
=== Inputs ===
=== Succesors ===
next: v346 
=== Usages ===
=== Predecessor ===
v322 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v346  <|@  <|@
f <@~|@floating>@ <|@
tid i347 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -61467
stableDimension: 0
stamp: i32 [-61467] ⇊00000000ffff0fe5 ⇈00000000ffff0fe5
stampKind: i32
value: int[-61467|0xffffffffffff0fe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i341 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v338 
=== Predecessor ===
v321 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1062) [bci: 168]
stamp: void
=== Inputs ===
=== Succesors ===
next: v339 
=== Usages ===
=== Predecessor ===
v314 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v339  <|@  <|@
f <@~|@floating>@ <|@
tid i340 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -58899
stableDimension: 0
stamp: i32 [-58899] ⇊00000000ffff19ed ⇈00000000ffff19ed
stampKind: i32
value: int[-58899|0xffffffffffff19ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i341 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v338 
=== Predecessor ===
v313 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i341 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-61467 - -58899] ⇊00000000ffff00e5 ⇈00000000ffff1ffd
valueDescription: i32
=== Inputs ===
merge: v338 
values: i340 i347 
=== Succesors ===
=== Usages ===
v343 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v338 values: i340 i347  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v339 v346 
=== Succesors ===
next: v343 
=== Usages ===
i341 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v339 v346 #next: v343  <|@  <|@
f <@*|@fixed>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?70 
actionAndReason: i341 
speculation: a328 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v338 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?70 actionAndReason: i341 speculation: a328  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1057) [bci: 111]
stamp: void
=== Inputs ===
=== Succesors ===
next: v358 
=== Usages ===
=== Predecessor ===
v298 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v358  <|@  <|@
f <@~|@floating>@ <|@
tid i359 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -51995
stableDimension: 0
stamp: i32 [-51995] ⇊00000000ffff34e5 ⇈00000000ffff34e5
stampKind: i32
value: int[-51995|0xffffffffffff34e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i351 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v348 
=== Predecessor ===
v297 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B13" "B36" "B22" "B21" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i351 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-58643 - -48659] ⇊00000000ffff00e5 ⇈00000000ffff7ffd
valueDescription: i32
=== Inputs ===
merge: v348 
values: i350 i359 i361 i363 
=== Succesors ===
=== Usages ===
v353 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v348 values: i350 i359 i361 i363  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v349 v358 v360 v362 
=== Succesors ===
next: v353 
=== Usages ===
i351 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v349 v358 v360 v362 #next: v353  <|@  <|@
f <@*|@fixed>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?127 
actionAndReason: i351 
speculation: a328 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v348 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?127 actionAndReason: i351 speculation: a328  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v398 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v398  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lsun/misc/FDBigInteger;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 ?127 v385 v386 ?70 v395 v248 ?323 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Lsun/misc/FDBigInteger;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v398 a134 v381 v382 a132 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
result v2|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a# Lsun/misc/FDBigInteger;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v399 a134 v383 v384 a132 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)>
duringCall: false
localsSize: 14
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 1029
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 a3 - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v331 v398 v399 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a3 - - - - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
object: a2 
=== Succesors ===
next: v399 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?4 object: a2 #next: v399  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
object: a3 
=== Succesors ===
next: i364 
=== Usages ===
=== Predecessor ===
v398 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?4 object: a3 #next: i364  <|@  <|@
f <@~|@floating>@ <|@
tid v381 <|@
result [v1|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i364 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i364 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.nWords
nodeSourcePosition: at sun.misc.FDBigInteger.size(FDBigInteger.java:534) [bci: 1]
at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1029) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v381 
=== Succesors ===
next: i365 
=== Usages ===
i10 
=== Predecessor ===
v399 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v381 #next: i365  <|@  <|@
f <@~|@floating>@ <|@
tid v382 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i365 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i365 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.offset
nodeSourcePosition: at sun.misc.FDBigInteger.size(FDBigInteger.java:534) [bci: 5]
at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1029) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v382 
=== Succesors ===
next: v282 
=== Usages ===
i10 
=== Predecessor ===
i364 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v382 #next: v282  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.size(FDBigInteger.java:534) [bci: 8]
at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1029) [bci: 1]
stamp: i32
=== Inputs ===
x: i364 
y: i365 
=== Succesors ===
=== Usages ===
v17 i136 i138 v36 v147 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i364 y: i365  <|@  <|@
f <@~|@floating>@ <|@
tid i33 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1045) [bci: 56]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v34 v36 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1048) [bci: 72]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i10 
y: i33 
=== Succesors ===
=== Usages ===
v282 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i10 y: i33  <|@  <|@
f <@~|@floating>@ <|@
tid a328 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v331 v353 v343 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1045) [bci: 56]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v36 
=== Succesors ===
trueSuccessor: v281 
falseSuccessor: v279 
=== Usages ===
=== Predecessor ===
i365 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v36 #trueSuccessor: v281 #falseSuccessor: v279  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@79cef656 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1029) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - - - - - 
>@ <|@ instruction NULLCHECK [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1029) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - - - - - 
>@ <|@ instruction NULLCHECK [v2|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = ADD (x: v3|DWORD, ~y: [v1|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1045) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: v334 
=== Usages ===
=== Predecessor ===
v282 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v334  <|@  <|@
f <@~|@floating>@ <|@
tid i335 <|@
result int[-68883|0xfffffffffffef2ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -68883
stableDimension: 0
stamp: i32 [-68883] ⇊00000000fffef2ed ⇈00000000fffef2ed
stampKind: i32
value: int[-68883|0xfffffffffffef2ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i329 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v325 
=== Predecessor ===
v281 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-68883|0xfffffffffffef2ed]] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1045) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: i366 
=== Usages ===
=== Predecessor ===
v282 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i366  <|@  <|@
f <@~|@floating>@ <|@
tid v383 <|@
result [v2|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i366 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i366 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.nWords
nodeSourcePosition: at sun.misc.FDBigInteger.size(FDBigInteger.java:534) [bci: 1]
at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1030) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v383 
=== Succesors ===
next: i367 
=== Usages ===
i16 
=== Predecessor ===
v279 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v383 #next: i367  <|@  <|@
f <@~|@floating>@ <|@
tid v384 <|@
result [v2|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i367 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i367 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.offset
nodeSourcePosition: at sun.misc.FDBigInteger.size(FDBigInteger.java:534) [bci: 5]
at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1030) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v384 
=== Succesors ===
next: v286 
=== Usages ===
i16 
=== Predecessor ===
i366 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v384 #next: v286  <|@  <|@
f <@~|@floating>@ <|@
tid i16 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.size(FDBigInteger.java:534) [bci: 8]
at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1030) [bci: 7]
stamp: i32
=== Inputs ===
x: i366 
y: i367 
=== Succesors ===
=== Usages ===
v17 i136 i138 v38 v34 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i366 y: i367  <|@  <|@
f <@~|@floating>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1045) [bci: 56]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i16 
y: i33 
=== Succesors ===
=== Usages ===
v286 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i16 y: i33  <|@  <|@
f <@*|@fixed>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1048) [bci: 72]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v34 
=== Succesors ===
trueSuccessor: v285 
falseSuccessor: v283 
=== Usages ===
=== Predecessor ===
i367 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v34 #trueSuccessor: v285 #falseSuccessor: v283  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = ADD (x: v5|DWORD, ~y: [v2|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v6|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1048) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v336 
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v336  <|@  <|@
f <@~|@floating>@ <|@
tid i337 <|@
result int[-69139|0xfffffffffffef1ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -69139
stableDimension: 0
stamp: i32 [-69139] ⇊00000000fffef1ed ⇈00000000fffef1ed
stampKind: i32
value: int[-69139|0xfffffffffffef1ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i329 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v325 
=== Predecessor ===
v285 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-69139|0xfffffffffffef1ed]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i329 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-69139 - -43531] ⇊00000000fffe40e5 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v325 
values: i335 i337 
=== Succesors ===
=== Usages ===
v331 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v325 values: i335 i337  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v334 v336 
=== Succesors ===
next: v331 
=== Usages ===
i329 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v334 v336 #next: v331  <|@  <|@
f <@*|@fixed>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
actionAndReason: i329 
speculation: a328 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v325 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?4 actionAndReason: i329 speculation: a328  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1029) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1048) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: i368 
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i368  <|@  <|@
f <@~|@floating>@ <|@
tid v385 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i368 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i368 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.nWords
nodeSourcePosition: at sun.misc.FDBigInteger.size(FDBigInteger.java:534) [bci: 1]
at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1044) [bci: 49]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v385 
=== Succesors ===
next: i369 
=== Usages ===
i93 i142 
=== Predecessor ===
v283 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v385 #next: i369  <|@  <|@
f <@~|@floating>@ <|@
tid v386 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i369 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i369 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.offset
nodeSourcePosition: at sun.misc.FDBigInteger.size(FDBigInteger.java:534) [bci: 5]
at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1044) [bci: 49]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v386 
=== Succesors ===
next: v20 
=== Usages ===
i142 
=== Predecessor ===
i368 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v386 #next: v20  <|@  <|@
f <@~|@floating>@ <|@
tid i142 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.size(FDBigInteger.java:534) [bci: 8]
at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1044) [bci: 49]
stamp: i32
=== Inputs ===
x: i368 
y: i369 
=== Succesors ===
=== Usages ===
v147 v110 v38 v86 v46 ?70 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i368 y: i369  <|@  <|@
f <@~|@floating>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1033) [bci: 16]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i10 
y: i16 
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i10 y: i16  <|@  <|@
f <@~|@floating>@ <|@
tid i42 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1052) [bci: 88]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v152 i50 i61 i93 v102 v112 v151 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1033) [bci: 16]
stamp: void
trueSuccessorProbability: 4.48019946627189E-4
=== Inputs ===
condition: v17 
=== Succesors ===
trueSuccessor: v18 
falseSuccessor: v19 
=== Usages ===
=== Predecessor ===
i369 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v17 #trueSuccessor: v18 #falseSuccessor: v19  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = ADD (x: v8|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 4.48019946627189E-4 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4556900132939549728
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1039) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v41 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v41  <|@  <|@
f <@~|@floating>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1051) [bci: 85]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i142 
y: i16 
=== Succesors ===
=== Usages ===
v41 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i142 y: i16  <|@  <|@
f <@*|@fixed>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1051) [bci: 85]
stamp: void
trueSuccessorProbability: 4.4801994662724276E-4
=== Inputs ===
condition: v38 
=== Succesors ===
trueSuccessor: v39 
falseSuccessor: v40 
=== Usages ===
=== Predecessor ===
v18 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v38 #trueSuccessor: v39 #falseSuccessor: v40  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 4.4801994662724276E-4 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4506679085690573838
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1052) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
next: v151 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v151  <|@  <|@
f <@*|@fixed>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: i42 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i42 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4556896430274536325
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1054) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v126 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v126  <|@  <|@
f <@*|@fixed>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v125 
=== Predecessor ===
v40 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v4|DWORD, v6|DWORD, v2|QWORD[.], v1|QWORD[.]] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607178383395088038
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1034) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v150 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v150  <|@  <|@
f <@~|@floating>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1051) [bci: 85]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i142 
y: i10 
=== Succesors ===
=== Usages ===
v150 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i142 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1051) [bci: 85]
stamp: void
trueSuccessorProbability: 4.4801994662724276E-4
=== Inputs ===
condition: v147 
=== Succesors ===
trueSuccessor: v148 
falseSuccessor: v149 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v147 #trueSuccessor: v148 #falseSuccessor: v149  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 4.4801994662724276E-4 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 4556896430274537317
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1052) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
next: v152 
=== Usages ===
=== Predecessor ===
v150 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v152  <|@  <|@
f <@*|@fixed>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: i42 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v148 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i42 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607174349798100569
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1054) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v128 
=== Usages ===
=== Predecessor ===
v150 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v128  <|@  <|@
f <@*|@fixed>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v125 
=== Predecessor ===
v149 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v6|DWORD, v4|DWORD, v1|QWORD[.], v2|QWORD[.]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607178383395088037
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i138 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v125 
values: i10 i16 
=== Succesors ===
=== Usages ===
v55 ?127 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v125 values: i10 i16  <|@  <|@
f <@~|@floating>@ <|@
tid i136 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v125 
values: i16 i10 
=== Succesors ===
=== Usages ===
i45 v55 ?70 v86 ?127 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v125 values: i16 i10  <|@  <|@
f <@~|@floating>@ <|@
tid a132 <|@
result v12|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# Lsun/misc/FDBigInteger;
valueDescription: a -
=== Inputs ===
merge: v125 
values: a3 a2 
=== Succesors ===
=== Usages ===
v387 v388 ?70 v247 ?127 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v125 values: a3 a2  <|@  <|@
f <@~|@floating>@ <|@
tid a134 <|@
result v13|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# Lsun/misc/FDBigInteger;
valueDescription: a -
=== Inputs ===
merge: v125 
values: a2 a3 
=== Succesors ===
=== Usages ===
v391 v392 ?70 v247 ?127 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v125 values: a2 a3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v126 v128 
=== Succesors ===
next: v290 
=== Usages ===
i138 i136 a132 a134 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v126 v128 #next: v290  <|@  <|@
tid ?127 <|@
d <@d|@=== Debug Properties ===
bci: 48
code: ResolvedJavaMethodBytecode<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)>
duringCall: false
localsSize: 14
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 1044
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - a132 a134 - - i136 i138 - - - - - 
=== Succesors ===
=== Usages ===
v353 i371 i375 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - a132 a134 - - i136 i138 - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid i44 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1054) [bci: 92]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i45 v90 v108 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i45 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1054) [bci: 93]
stamp: i32
=== Inputs ===
x: i136 
y: i44 
=== Succesors ===
=== Usages ===
v46 v110 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i136 y: i44  <|@  <|@
f <@~|@floating>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1054) [bci: 96]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i45 
y: i142 
=== Succesors ===
=== Usages ===
v290 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i45 y: i142  <|@  <|@
f <@*|@fixed>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1054) [bci: 96]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v46 
=== Succesors ===
trueSuccessor: v289 
falseSuccessor: v287 
=== Usages ===
=== Predecessor ===
v125 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v46 #trueSuccessor: v289 #falseSuccessor: v287  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|DWORD, v11|DWORD, v12|QWORD[.], v13|QWORD[.]] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = INC v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v9|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1054) [bci: 96]
stamp: void
=== Inputs ===
=== Succesors ===
next: v349 
=== Usages ===
=== Predecessor ===
v290 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v349  <|@  <|@
f <@~|@floating>@ <|@
tid i350 <|@
result int[-48659|0xffffffffffff41ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -48659
stableDimension: 0
stamp: i32 [-48659] ⇊00000000ffff41ed ⇈00000000ffff41ed
stampKind: i32
value: int[-48659|0xffffffffffff41ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i351 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v348 
=== Predecessor ===
v289 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-48659|0xffffffffffff41ed]] destination: B13 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B36" 
    xhandlers
    flags 
    probability 4607178383395088037
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1054) [bci: 96]
stamp: void
=== Inputs ===
=== Succesors ===
next: a370 
=== Usages ===
=== Predecessor ===
v290 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a370  <|@  <|@
f <@~|@floating>@ <|@
tid v387 <|@
result [v12|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a132 
index: - 
=== Succesors ===
=== Usages ===
a370 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a132 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a370 <|@
result v15|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.data
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1057) [bci: 102]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v387 
=== Succesors ===
next: i371 
=== Usages ===
a194 v389 
=== Predecessor ===
v287 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v387 #next: i371  <|@  <|@
f <@~|@floating>@ <|@
tid v389 <|@
result [v15|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a370 
=== Succesors ===
=== Usages ===
i371 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a370  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i371 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1057) [bci: 111]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?127 
guard: - 
address: v389 
=== Succesors ===
next: i372 
=== Usages ===
v202 
=== Predecessor ===
a370 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?127 guard: - address: v389 #next: i372  <|@  <|@
f <@~|@floating>@ <|@
tid v388 <|@
result [v12|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a132 
index: - 
=== Succesors ===
=== Usages ===
i372 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a132 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i372 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.nWords
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1057) [bci: 106]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v388 
=== Succesors ===
next: v298 
=== Usages ===
i50 
=== Predecessor ===
i371 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v388 #next: v298  <|@  <|@
f <@~|@floating>@ <|@
tid i50 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1057) [bci: 110]
stamp: i32
=== Inputs ===
x: i372 
y: i42 
=== Succesors ===
=== Usages ===
v390 v202 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i372 y: i42  <|@  <|@
f <@~|@floating>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1057) [bci: 111]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i50 
y: i371 
=== Succesors ===
=== Usages ===
v298 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i50 y: i371  <|@  <|@
f <@*|@fixed>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1057) [bci: 111]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v202 
=== Succesors ===
trueSuccessor: v295 
falseSuccessor: v297 
=== Usages ===
=== Predecessor ===
i372 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v202 #trueSuccessor: v295 #falseSuccessor: v297  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[.] = MOV [v12|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1044) [bci: 48]
locals: v0|QWORD[.] - - v12|QWORD[.] v13|QWORD[.] - - v11|DWORD v10|DWORD - - - - - 
>@ <|@ instruction v16|DWORD = MOV [v15|DWORD[.] * 8 + 12] size: DWORD state [bci:48] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = ADD (x: v17|DWORD, ~y: [v12|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v16|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B23" 
    xhandlers
    flags 
    probability 4607178383395088037
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1057) [bci: 111]
stamp: void
=== Inputs ===
=== Succesors ===
next: i373 
=== Usages ===
i373 
=== Predecessor ===
v298 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i373  <|@  <|@
f <@~|@floating>@ <|@
tid a194 <|@
result v19|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1057) [bci: 102]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a370 
=== Succesors ===
=== Usages ===
v390 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a370  <|@  <|@
f <@~|@floating>@ <|@
tid v390 <|@
result [v19|QWORD[.] + v18|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a194 
index: i50 
=== Succesors ===
=== Usages ===
i373 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a194 index: i50  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i373 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1057) [bci: 111]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v295 
address: v390 
=== Succesors ===
next: v58 
=== Usages ===
j54 
=== Predecessor ===
v295 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v295 address: v390 #next: v58  <|@  <|@
f <@~|@floating>@ <|@
tid j54 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 32
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1057) [bci: 116]
resultBits: 64
stamp: i64 [0 - 4294967295] ⇈00000000ffffffff
=== Inputs ===
value: i373 
=== Succesors ===
=== Usages ===
j65 j160 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i373  <|@  <|@
f <@~|@floating>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1058) [bci: 123]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i136 
y: i138 
=== Succesors ===
=== Usages ===
v58 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i136 y: i138  <|@  <|@
f <@~|@floating>@ <|@
tid j75 <|@
result v21|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1061) [bci: 156]
rawvalue: -4294967296
stableDimension: 0
stamp: i64 [-4294967296] ⇊ffffffff00000000 ⇈ffffffff00000000
stampKind: i64
value: long[-4294967296|0xffffffff00000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v163 v84 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1058) [bci: 123]
stamp: void
trueSuccessorProbability: 0.8196203765054371
=== Inputs ===
condition: v55 
=== Succesors ===
trueSuccessor: v56 
falseSuccessor: v57 
=== Usages ===
=== Predecessor ===
i373 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v55 #trueSuccessor: v56 #falseSuccessor: v57  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4658e3fd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV [v19|QWORD[.] + v18|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOVE input: long[-4294967296|0xffffffff00000000] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8196203765054371 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B22" 
    xhandlers
    flags 
    probability 4605554396089599157
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1059) [bci: 126]
stamp: void
=== Inputs ===
=== Succesors ===
next: a374 
=== Usages ===
=== Predecessor ===
v58 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a374  <|@  <|@
f <@~|@floating>@ <|@
tid v391 <|@
result [v13|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a134 
index: - 
=== Succesors ===
=== Usages ===
a374 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a134 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a374 <|@
result v22|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.data
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1059) [bci: 130]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v391 
=== Succesors ===
next: i375 
=== Usages ===
a213 v393 
=== Predecessor ===
v56 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v391 #next: i375  <|@  <|@
f <@~|@floating>@ <|@
tid v393 <|@
result [v22|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a374 
=== Succesors ===
=== Usages ===
i375 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a374  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i375 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1059) [bci: 140]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?127 
guard: - 
address: v393 
=== Succesors ===
next: i376 
=== Usages ===
v221 
=== Predecessor ===
a374 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?127 guard: - address: v393 #next: i376  <|@  <|@
f <@~|@floating>@ <|@
tid v392 <|@
result [v13|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a134 
index: - 
=== Succesors ===
=== Usages ===
i376 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a134 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i376 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.nWords
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1059) [bci: 135]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v392 
=== Succesors ===
next: v306 
=== Usages ===
i61 
=== Predecessor ===
i375 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v392 #next: v306  <|@  <|@
f <@~|@floating>@ <|@
tid i61 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1059) [bci: 139]
stamp: i32
=== Inputs ===
x: i376 
y: i42 
=== Succesors ===
=== Usages ===
v394 v221 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i376 y: i42  <|@  <|@
f <@~|@floating>@ <|@
tid v221 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1059) [bci: 140]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i61 
y: i375 
=== Succesors ===
=== Usages ===
v306 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i61 y: i375  <|@  <|@
f <@*|@fixed>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1059) [bci: 140]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v221 
=== Succesors ===
trueSuccessor: v303 
falseSuccessor: v305 
=== Usages ===
=== Predecessor ===
i376 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v221 #trueSuccessor: v303 #falseSuccessor: v305  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[.] = MOV [v13|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1044) [bci: 48]
locals: v0|QWORD[.] - - v12|QWORD[.] v13|QWORD[.] - - v11|DWORD v10|DWORD - - - - - 
>@ <|@ instruction v23|DWORD = MOV [v22|DWORD[.] * 8 + 12] size: DWORD state [bci:48] <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = ADD (x: v24|DWORD, ~y: [v13|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v23|DWORD, y: v25|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4605554396089599157
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1059) [bci: 140]
stamp: void
=== Inputs ===
=== Succesors ===
next: i377 
=== Usages ===
i377 
=== Predecessor ===
v306 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i377  <|@  <|@
f <@~|@floating>@ <|@
tid a213 <|@
result v26|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1059) [bci: 130]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a374 
=== Succesors ===
=== Usages ===
v394 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a374  <|@  <|@
f <@~|@floating>@ <|@
tid v394 <|@
result [v26|QWORD[.] + v25|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a213 
index: i61 
=== Succesors ===
=== Usages ===
i377 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a213 index: i61  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i377 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1059) [bci: 140]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v303 
address: v394 
=== Succesors ===
next: v166 
=== Usages ===
j64 
=== Predecessor ===
v303 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v303 address: v394 #next: v166  <|@  <|@
f <@~|@floating>@ <|@
tid j64 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 32
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1059) [bci: 145]
resultBits: 64
stamp: i64 [0 - 4294967295] ⇈00000000ffffffff
=== Inputs ===
value: i377 
=== Succesors ===
=== Usages ===
j65 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i377  <|@  <|@
f <@~|@floating>@ <|@
tid j65 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1059) [bci: 146]
stamp: i64 [0 - 8589934590] ⇈00000001ffffffff
=== Inputs ===
x: j54 
y: j64 
=== Succesors ===
=== Usages ===
j160 v163 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j54 y: j64  <|@  <|@
f <@~|@floating>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1061) [bci: 156]
stamp: void
=== Inputs ===
x: j65 
y: j75 
=== Succesors ===
=== Usages ===
v166 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j65 y: j75  <|@  <|@
f <@*|@fixed>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1061) [bci: 156]
stamp: void
trueSuccessorProbability: 0.9997661456912343
=== Inputs ===
condition: v163 
=== Succesors ===
trueSuccessor: v164 
falseSuccessor: v165 
=== Usages ===
=== Predecessor ===
i377 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v163 #trueSuccessor: v164 #falseSuccessor: v165  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4658e3fd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOV [v26|QWORD[.] + v25|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = ADD (x: v20|QWORD, y: v27|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v21|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9997661456912343 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    probability 4605552670437369125
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1062) [bci: 159]
stamp: void
=== Inputs ===
=== Succesors ===
next: v155 
=== Usages ===
=== Predecessor ===
v166 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v155  <|@  <|@
f <@*|@fixed>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v153 
=== Predecessor ===
v164 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|QWORD] destination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4551200295551042960
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1077) [bci: 223]
stamp: void
=== Inputs ===
=== Succesors ===
next: v310 
=== Usages ===
=== Predecessor ===
v166 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v310  <|@  <|@
f <@~|@floating>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1077) [bci: 229]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i142 
y: i45 
=== Succesors ===
=== Usages ===
v310 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i142 y: i45  <|@  <|@
f <@*|@fixed>@ <|@
tid v310 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1077) [bci: 229]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v110 
=== Succesors ===
trueSuccessor: v307 
falseSuccessor: v309 
=== Usages ===
=== Predecessor ===
v165 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v110 #trueSuccessor: v307 #falseSuccessor: v309  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 4551200295551042960
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1077) [bci: 229]
stamp: void
=== Inputs ===
=== Succesors ===
next: v112 
=== Usages ===
=== Predecessor ===
v310 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v112  <|@  <|@
f <@*|@fixed>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1078) [bci: 233]
stamp: void
=== Inputs ===
result: i42 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v307 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i42 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1077) [bci: 229]
stamp: void
=== Inputs ===
=== Succesors ===
next: v362 
=== Usages ===
=== Predecessor ===
v310 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v362  <|@  <|@
f <@~|@floating>@ <|@
tid i363 <|@
result int[-58643|0xffffffffffff1aed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -58643
stableDimension: 0
stamp: i32 [-58643] ⇊00000000ffff1aed ⇈00000000ffff1aed
stampKind: i32
value: int[-58643|0xffffffffffff1aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i351 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v348 
=== Predecessor ===
v309 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-58643|0xffffffffffff1aed]] destination: B21 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1059) [bci: 140]
stamp: void
=== Inputs ===
=== Succesors ===
next: v360 
=== Usages ===
=== Predecessor ===
v306 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v360  <|@  <|@
f <@~|@floating>@ <|@
tid i361 <|@
result int[-56859|0xffffffffffff21e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -56859
stableDimension: 0
stamp: i32 [-56859] ⇊00000000ffff21e5 ⇈00000000ffff21e5
stampKind: i32
value: int[-56859|0xffffffffffff21e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i351 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v348 
=== Predecessor ===
v305 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-56859|0xffffffffffff21e5]] destination: B22 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B24" 
    xhandlers
    flags 
    probability 4595663969512490944
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1061) [bci: 149]
stamp: void
=== Inputs ===
=== Succesors ===
next: v154 
=== Usages ===
=== Predecessor ===
v58 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v154  <|@  <|@
f <@*|@fixed>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v153 
=== Predecessor ===
v57 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|QWORD] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B18" 
    successors "B25" "B34" 
    xhandlers
    flags 
    probability 4607176657742858005
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j160 <|@
result v29|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [0 - 8589934590] ⇈00000001ffffffff
valueDescription: i64
=== Inputs ===
merge: v153 
values: j54 j65 
=== Succesors ===
=== Usages ===
?70 v98 j81 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v153 values: j54 j65  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v154 v155 
=== Succesors ===
next: v314 
=== Usages ===
j160 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v154 v155 #next: v314  <|@  <|@
tid ?70 <|@
d <@d|@=== Debug Properties ===
bci: 149
code: ResolvedJavaMethodBytecode<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)>
duringCall: false
localsSize: 14
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 1061
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - a132 a134 - - i136 - i142 j160 - - - 
=== Succesors ===
=== Usages ===
v343 i379 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - a132 a134 - - i136 - i142 j160 - - -  <|@  <|@
f <@~|@floating>@ <|@
tid j80 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1062) [bci: 161]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j81 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j81 <|@
result v30|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1062) [bci: 162]
stamp: i64 [1 - 8589934591] ⇈00000001ffffffff
=== Inputs ===
x: j160 
y: j80 
=== Succesors ===
=== Usages ===
v104 v84 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j160 y: j80  <|@  <|@
f <@~|@floating>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1062) [bci: 168]
stamp: void
=== Inputs ===
x: j81 
y: j75 
=== Succesors ===
=== Usages ===
v314 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j81 y: j75  <|@  <|@
f <@*|@fixed>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1062) [bci: 168]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v84 
=== Succesors ===
trueSuccessor: v311 
falseSuccessor: v313 
=== Usages ===
=== Predecessor ===
v153 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v84 #trueSuccessor: v311 #falseSuccessor: v313  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = INC v29|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v21|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607176657742858005
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1062) [bci: 168]
stamp: void
=== Inputs ===
=== Succesors ===
next: v89 
=== Usages ===
=== Predecessor ===
v314 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v89  <|@  <|@
f <@~|@floating>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1064) [bci: 175]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i136 
y: i142 
=== Succesors ===
=== Usages ===
v89 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i136 y: i142  <|@  <|@
f <@*|@fixed>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1064) [bci: 175]
stamp: void
trueSuccessorProbability: 0.24069237066781024
=== Inputs ===
condition: v86 
=== Succesors ===
trueSuccessor: v87 
falseSuccessor: v88 
=== Usages ===
=== Predecessor ===
v311 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v86 #trueSuccessor: v87 #falseSuccessor: v88  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v9|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.24069237066781024 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors 
    xhandlers
    flags 
    probability 4597834330287318198
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1065) [bci: 178]
stamp: void
=== Inputs ===
=== Succesors ===
next: v90 
=== Usages ===
=== Predecessor ===
v89 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v90  <|@  <|@
f <@*|@fixed>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1065) [bci: 179]
stamp: void
=== Inputs ===
result: i44 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i44 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B33" 
    xhandlers
    flags 
    probability 4605010080243662311
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1068) [bci: 180]
stamp: void
=== Inputs ===
=== Succesors ===
next: a378 
=== Usages ===
=== Predecessor ===
v89 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a378  <|@  <|@
f <@~|@floating>@ <|@
tid v395 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a378 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a378 <|@
result v31|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.data
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1068) [bci: 181]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v395 
=== Succesors ===
next: i379 
=== Usages ===
a233 v396 
=== Predecessor ===
v88 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v395 #next: i379  <|@  <|@
f <@~|@floating>@ <|@
tid v396 <|@
result [v31|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a378 
=== Succesors ===
=== Usages ===
i379 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a378  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i379 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1068) [bci: 190]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?70 
guard: - 
address: v396 
=== Succesors ===
next: v322 
=== Usages ===
v239 
=== Predecessor ===
a378 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?70 guard: - address: v396 #next: v322  <|@  <|@
f <@~|@floating>@ <|@
tid i93 <|@
result v32|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1068) [bci: 189]
stamp: i32
=== Inputs ===
x: i368 
y: i42 
=== Succesors ===
=== Usages ===
v397 v239 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i368 y: i42  <|@  <|@
f <@~|@floating>@ <|@
tid v239 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1068) [bci: 190]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i93 
y: i379 
=== Succesors ===
=== Usages ===
v322 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i93 y: i379  <|@  <|@
f <@*|@fixed>@ <|@
tid v322 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1068) [bci: 190]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v239 
=== Succesors ===
trueSuccessor: v319 
falseSuccessor: v321 
=== Usages ===
=== Predecessor ===
i379 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v239 #trueSuccessor: v319 #falseSuccessor: v321  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = DEC v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1061) [bci: 149]
locals: v0|QWORD[.] - - v12|QWORD[.] v13|QWORD[.] - - v11|DWORD - v9|DWORD v29|QWORD - - - 
>@ <|@ instruction CMP (x: v32|DWORD, y: [v31|DWORD[.] * 8 + 12]) size: DWORD state [bci:149] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4605010080243662311
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1068) [bci: 190]
stamp: void
=== Inputs ===
=== Succesors ===
next: i380 
=== Usages ===
i380 
=== Predecessor ===
v322 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i380  <|@  <|@
f <@~|@floating>@ <|@
tid a233 <|@
result v33|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1068) [bci: 181]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a378 
=== Succesors ===
=== Usages ===
v397 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a378  <|@  <|@
f <@~|@floating>@ <|@
tid v397 <|@
result [v33|QWORD[.] + v32|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a233 
index: i93 
=== Succesors ===
=== Usages ===
i380 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a233 index: i93  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i380 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1068) [bci: 190]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v319 
address: v397 
=== Succesors ===
next: v101 
=== Usages ===
j96 
=== Predecessor ===
v319 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v319 address: v397 #next: v101  <|@  <|@
f <@~|@floating>@ <|@
tid j96 <|@
result v34|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 32
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1068) [bci: 195]
resultBits: 64
stamp: i64 [0 - 4294967295] ⇈00000000ffffffff
=== Inputs ===
value: i380 
=== Succesors ===
=== Usages ===
v104 v98 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i380  <|@  <|@
f <@~|@floating>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1069) [bci: 203]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j96 
y: j160 
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j96 y: j160  <|@  <|@
f <@*|@fixed>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1069) [bci: 203]
stamp: void
trueSuccessorProbability: 0.073727986856292
=== Inputs ===
condition: v98 
=== Succesors ===
trueSuccessor: v99 
falseSuccessor: v100 
=== Usages ===
=== Predecessor ===
i380 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v98 #trueSuccessor: v99 #falseSuccessor: v100  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v31|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4658e3fd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOV [v33|QWORD[.] + v32|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v29|QWORD, y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.073727986856292 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 4588223549351557345
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1070) [bci: 206]
stamp: void
=== Inputs ===
=== Succesors ===
next: v102 
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v102  <|@  <|@
f <@*|@fixed>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1070) [bci: 207]
stamp: void
=== Inputs ===
result: i42 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v99 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i42 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4604506159723927129
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1072) [bci: 208]
stamp: void
=== Inputs ===
=== Succesors ===
next: v107 
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v107  <|@  <|@
f <@~|@floating>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1072) [bci: 215]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j81 
y: j96 
=== Succesors ===
=== Usages ===
v107 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j81 y: j96  <|@  <|@
f <@*|@fixed>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1072) [bci: 215]
stamp: void
trueSuccessorProbability: 0.9731167895349482
=== Inputs ===
condition: v104 
=== Succesors ===
trueSuccessor: v105 
falseSuccessor: v106 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v104 #trueSuccessor: v105 #falseSuccessor: v106  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v34|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9731167895349482 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors 
    xhandlers
    flags 
    probability 4604335963726662809
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1073) [bci: 218]
stamp: void
=== Inputs ===
=== Succesors ===
next: v108 
=== Usages ===
=== Predecessor ===
v107 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v108  <|@  <|@
f <@*|@fixed>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1073) [bci: 219]
stamp: void
=== Inputs ===
result: i44 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i44 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors 
    xhandlers
    flags 
    probability 4581103493320882173
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1075) [bci: 220]
stamp: void
=== Inputs ===
=== Succesors ===
next: a114 
=== Usages ===
=== Predecessor ===
v107 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a114  <|@  <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1090) [bci: 285]
returnStamp: a# Lsun/misc/FDBigInteger;
signature: [Ljdk.vm.ci.meta.JavaType;@7642e5ba
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.add(FDBigInteger)>
=== Inputs ===
arguments: a132 a134 
=== Succesors ===
=== Usages ===
a114 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a132 a134  <|@  <|@
tid ?323 <|@
d <@d|@=== Debug Properties ===
bci: 285
code: ResolvedJavaMethodBytecode<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)>
duringCall: true
localsSize: 14
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 1090
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - - - - - - - - - - - - - a1 
=== Succesors ===
=== Usages ===
a114 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - - - - - - - - - a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a114 <|@
result v35|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 285
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1090) [bci: 285]
polymorphic: false
stamp: a# Lsun/misc/FDBigInteger;
targetMethod: Direct#FDBigInteger.add
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v247 
stateDuring: ?323 
=== Succesors ===
next: i117 
=== Usages ===
v248 
=== Predecessor ===
v106 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v247 stateDuring: ?323 #next: i117  <|@  <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1090) [bci: 288]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@61c4272e
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)>
=== Inputs ===
arguments: a1 a114 
=== Succesors ===
=== Usages ===
i117 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a114  <|@  <|@
tid ?324 <|@
d <@d|@=== Debug Properties ===
bci: 288
code: ResolvedJavaMethodBytecode<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)>
duringCall: true
localsSize: 14
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 1090
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
i117 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i117 <|@
result v36|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 288
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1090) [bci: 288]
polymorphic: false
stamp: i32
targetMethod: Direct#FDBigInteger.cmp
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v248 
stateDuring: ?324 
=== Succesors ===
next: v119 
=== Usages ===
v119 
=== Predecessor ===
a114 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v248 stateDuring: ?324 #next: v119  <|@  <|@
f <@*|@fixed>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1090) [bci: 291]
stamp: void
=== Inputs ===
result: i117 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i117 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i117 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1090) [bci: 285]
stack: v0|QWORD[.] 
locals: - - - - - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.add(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:285] <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1090) [bci: 288]
locals: - - - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:288] <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v36|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1068) [bci: 190]
stamp: void
=== Inputs ===
=== Succesors ===
next: v346 
=== Usages ===
=== Predecessor ===
v322 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v346  <|@  <|@
f <@~|@floating>@ <|@
tid i347 <|@
result int[-61467|0xffffffffffff0fe5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -61467
stableDimension: 0
stamp: i32 [-61467] ⇊00000000ffff0fe5 ⇈00000000ffff0fe5
stampKind: i32
value: int[-61467|0xffffffffffff0fe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i341 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v338 
=== Predecessor ===
v321 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-61467|0xffffffffffff0fe5]] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1062) [bci: 168]
stamp: void
=== Inputs ===
=== Succesors ===
next: v339 
=== Usages ===
=== Predecessor ===
v314 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v339  <|@  <|@
f <@~|@floating>@ <|@
tid i340 <|@
result int[-58899|0xffffffffffff19ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -58899
stableDimension: 0
stamp: i32 [-58899] ⇊00000000ffff19ed ⇈00000000ffff19ed
stampKind: i32
value: int[-58899|0xffffffffffff19ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i341 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v338 
=== Predecessor ===
v313 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-58899|0xffffffffffff19ed]] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i341 <|@
result v37|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-61467 - -58899] ⇊00000000ffff00e5 ⇈00000000ffff1ffd
valueDescription: i32
=== Inputs ===
merge: v338 
values: i340 i347 
=== Succesors ===
=== Usages ===
v343 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v338 values: i340 i347  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v339 v346 
=== Succesors ===
next: v343 
=== Usages ===
i341 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v339 v346 #next: v343  <|@  <|@
f <@*|@fixed>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?70 
actionAndReason: i341 
speculation: a328 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v338 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?70 actionAndReason: i341 speculation: a328  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1061) [bci: 149]
locals: v0|QWORD[.] - - v12|QWORD[.] v13|QWORD[.] - - v11|DWORD - v9|DWORD v29|QWORD - - - 
>@ <|@ instruction DEOPT info [bci:149] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1057) [bci: 111]
stamp: void
=== Inputs ===
=== Succesors ===
next: v358 
=== Usages ===
=== Predecessor ===
v298 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v358  <|@  <|@
f <@~|@floating>@ <|@
tid i359 <|@
result int[-51995|0xffffffffffff34e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -51995
stableDimension: 0
stamp: i32 [-51995] ⇊00000000ffff34e5 ⇈00000000ffff34e5
stampKind: i32
value: int[-51995|0xffffffffffff34e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i351 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v348 
=== Predecessor ===
v297 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-51995|0xffffffffffff34e5]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B13" "B36" "B22" "B21" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i351 <|@
result v38|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-58643 - -48659] ⇊00000000ffff00e5 ⇈00000000ffff7ffd
valueDescription: i32
=== Inputs ===
merge: v348 
values: i350 i359 i361 i363 
=== Succesors ===
=== Usages ===
v353 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v348 values: i350 i359 i361 i363  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v349 v358 v360 v362 
=== Succesors ===
next: v353 
=== Usages ===
i351 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v349 v358 v360 v362 #next: v353  <|@  <|@
f <@*|@fixed>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?127 
actionAndReason: i351 
speculation: a328 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v348 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?127 actionAndReason: i351 speculation: a328  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1044) [bci: 48]
locals: v0|QWORD[.] - - v12|QWORD[.] v13|QWORD[.] - - v11|DWORD v10|DWORD - - - - - 
>@ <|@ instruction DEOPT info [bci:48] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@79cef656 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1029) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - - - - - 
>@ <|@ instruction NULLCHECK [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1029) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - - - - - 
>@ <|@ instruction NULLCHECK [v2|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = ADD (x: v3|DWORD, ~y: [v1|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = ADD (x: v5|DWORD, ~y: [v2|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v6|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = ADD (x: v8|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 4.48019946627189E-4 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607178383395088038
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 4.4801994662724276E-4 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607174349798100569
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v6|DWORD, v4|DWORD, v1|QWORD[.], v2|QWORD[.]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607178383395088037
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|DWORD, v11|DWORD, v12|QWORD[.], v13|QWORD[.]] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = INC v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v9|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B36" 
    xhandlers
    flags 
    probability 4607178383395088037
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[.] = MOV [v12|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1044) [bci: 48]
locals: v0|QWORD[.] - - v12|QWORD[.] v13|QWORD[.] - - v11|DWORD v10|DWORD - - - - - 
>@ <|@ instruction v16|DWORD = MOV [v15|DWORD[.] * 8 + 12] size: DWORD state [bci:48] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = ADD (x: v17|DWORD, ~y: [v12|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v16|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B23" 
    xhandlers
    flags 
    probability 4607178383395088037
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4658e3fd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV [v19|QWORD[.] + v18|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOVE input: long[-4294967296|0xffffffff00000000] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8196203765054371 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B22" 
    xhandlers
    flags 
    probability 4605554396089599157
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[.] = MOV [v13|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1044) [bci: 48]
locals: v0|QWORD[.] - - v12|QWORD[.] v13|QWORD[.] - - v11|DWORD v10|DWORD - - - - - 
>@ <|@ instruction v23|DWORD = MOV [v22|DWORD[.] * 8 + 12] size: DWORD state [bci:48] <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = ADD (x: v24|DWORD, ~y: [v13|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v23|DWORD, y: v25|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4605554396089599157
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4658e3fd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOV [v26|QWORD[.] + v25|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = ADD (x: v20|QWORD, y: v27|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v21|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9997661456912343 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    probability 4605552670437369125
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|QWORD] destination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B18" 
    successors "B25" "B34" 
    xhandlers
    flags 
    probability 4607176657742858005
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = INC v29|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v21|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607176657742858005
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v9|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.24069237066781024 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B33" 
    xhandlers
    flags 
    probability 4605010080243662311
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = DEC v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1061) [bci: 149]
locals: v0|QWORD[.] - - v12|QWORD[.] v13|QWORD[.] - - v11|DWORD - v9|DWORD v29|QWORD - - - 
>@ <|@ instruction CMP (x: v32|DWORD, y: [v31|DWORD[.] * 8 + 12]) size: DWORD state [bci:149] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4605010080243662311
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v31|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4658e3fd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOV [v33|QWORD[.] + v32|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v29|QWORD, y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.073727986856292 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4604506159723927129
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v34|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9731167895349482 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors 
    xhandlers
    flags 
    probability 4604335963726662809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors 
    xhandlers
    flags 
    probability 4597834330287318198
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B24" 
    xhandlers
    flags 
    probability 4595663969512490944
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|QWORD] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 4588223549351557345
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors 
    xhandlers
    flags 
    probability 4581103493320882173
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1090) [bci: 285]
stack: v0|QWORD[.] 
locals: - - - - - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.add(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:285] <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1090) [bci: 288]
locals: - - - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:288] <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v36|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4556900132939549728
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 4.4801994662724276E-4 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4556896430274536325
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v4|DWORD, v6|DWORD, v2|QWORD[.], v1|QWORD[.]] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 4556896430274537317
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4551200295551042960
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 4551200295551042960
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4506679085690573838
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-51995|0xffffffffffff34e5]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B13" "B36" "B22" "B21" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1044) [bci: 48]
locals: v0|QWORD[.] - - v12|QWORD[.] v13|QWORD[.] - - v11|DWORD v10|DWORD - - - - - 
>@ <|@ instruction DEOPT info [bci:48] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-68883|0xfffffffffffef2ed]] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1029) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-58643|0xffffffffffff1aed]] destination: B21 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-61467|0xffffffffffff0fe5]] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1061) [bci: 149]
locals: v0|QWORD[.] - - v12|QWORD[.] v13|QWORD[.] - - v11|DWORD - v9|DWORD v29|QWORD - - - 
>@ <|@ instruction DEOPT info [bci:149] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-56859|0xffffffffffff21e5]] destination: B22 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-58899|0xffffffffffff19ed]] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-48659|0xffffffffffff41ed]] destination: B13 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-69139|0xfffffffffffef1ed]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokespecial #22         // size:()int
     4: istore        5
     6: aload_2       
     7: invokespecial #22         // size:()int
    10: istore        6
    12: iload         5
    14: iload         6
    16: if_icmplt     35
    19: aload_1       
    20: astore_3      
    21: aload_2       
    22: astore        4
    24: iload         5
    26: istore        7
    28: iload         6
    30: istore        8
    32: goto          48
    35: aload_2       
    36: astore_3      
    37: aload_1       
    38: astore        4
    40: iload         6
    42: istore        7
    44: iload         5
    46: istore        8
    48: aload_0       
    49: invokespecial #22         // size:()int
    52: istore        9
    54: iload         7
    56: ifne          70
    59: iload         9
    61: ifne          68
    64: iconst_0      
    65: goto          69
    68: iconst_1      
    69: ireturn       
    70: iload         8
    72: ifne          81
    75: aload_0       
    76: aload_3       
    77: invokevirtual #32         // cmp:(sun.misc.FDBigInteger)int
    80: ireturn       
    81: iload         7
    83: iload         9
    85: if_icmple     90
    88: iconst_m1     
    89: ireturn       
    90: iload         7
    92: iconst_1      
    93: iadd          
    94: iload         9
    96: if_icmpge     101
    99: iconst_1      
   100: ireturn       
   101: aload_3       
   102: getfield      #2          // data:int[]
   105: aload_3       
   106: getfield      #4          // nWords:int
   109: iconst_1      
   110: isub          
   111: iaload        
   112: i2l           
   113: ldc2_w        #19         // 4294967295
   116: land          
   117: lstore        10
   119: iload         8
   121: iload         7
   123: if_icmpne     149
   126: lload         10
   128: aload         4
   130: getfield      #2          // data:int[]
   133: aload         4
   135: getfield      #4          // nWords:int
   138: iconst_1      
   139: isub          
   140: iaload        
   141: i2l           
   142: ldc2_w        #19         // 4294967295
   145: land          
   146: ladd          
   147: lstore        10
   149: lload         10
   151: bipush        32
   153: lushr         
   154: lconst_0      
   155: lcmp          
   156: ifne          223
   159: lload         10
   161: lconst_1      
   162: ladd          
   163: bipush        32
   165: lushr         
   166: lconst_0      
   167: lcmp          
   168: ifne          281
   171: iload         7
   173: iload         9
   175: if_icmpge     180
   178: iconst_1      
   179: ireturn       
   180: aload_0       
   181: getfield      #2          // data:int[]
   184: aload_0       
   185: getfield      #4          // nWords:int
   188: iconst_1      
   189: isub          
   190: iaload        
   191: i2l           
   192: ldc2_w        #19         // 4294967295
   195: land          
   196: lstore        12
   198: lload         12
   200: lload         10
   202: lcmp          
   203: ifge          208
   206: iconst_m1     
   207: ireturn       
   208: lload         12
   210: lload         10
   212: lconst_1      
   213: ladd          
   214: lcmp          
   215: ifle          220
   218: iconst_1      
   219: ireturn       
   220: goto          281
   223: iload         7
   225: iconst_1      
   226: iadd          
   227: iload         9
   229: if_icmple     234
   232: iconst_m1     
   233: ireturn       
   234: lload         10
   236: bipush        32
   238: lushr         
   239: lstore        10
   241: aload_0       
   242: getfield      #2          // data:int[]
   245: aload_0       
   246: getfield      #4          // nWords:int
   249: iconst_1      
   250: isub          
   251: iaload        
   252: i2l           
   253: ldc2_w        #19         // 4294967295
   256: land          
   257: lstore        12
   259: lload         12
   261: lload         10
   263: lcmp          
   264: ifge          269
   267: iconst_m1     
   268: ireturn       
   269: lload         12
   271: lload         10
   273: lconst_1      
   274: ladd          
   275: lcmp          
   276: ifle          281
   279: iconst_1      
   280: ireturn       
   281: aload_0       
   282: aload_3       
   283: aload         4
   285: invokespecial #33         // add:(sun.misc.FDBigInteger)sun.misc.FDBigInteger
   288: invokevirtual #32         // cmp:(sun.misc.FDBigInteger)int
   291: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@79cef656 slotKind: QWORD <|@ <|@
      nr    6  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0]
live-base-pointers: []
sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1029) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - - - - - - - - 
>@ <|@ instruction NULLCHECK [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0]
live-base-pointers: []
sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1029) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - - - - - - - - 
>@ <|@ instruction NULLCHECK [rcx|QWORD[.]] state [bci:0] <|@ <|@
      nr   10  <|@ instruction rax|DWORD = MOV [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   12  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, ~y: [rdx|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   14  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction r10|DWORD = MOV [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   30  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, ~y: [rcx|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   32  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   56  <|@ instruction r8|DWORD = ADD (x: r11|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   58  <|@ instruction CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   60  <|@ instruction BRANCH trueDestinationProbability: 4.48019946627189E-4 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607178383395088038
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction CMP (x: rax|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction BRANCH trueDestinationProbability: 4.4801994662724276E-4 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607174349798100569
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607178383395088037
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr  112  <|@ instruction r9|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  114  <|@ instruction CMP (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B36" 
    xhandlers
    flags 
    probability 4607178383395088037
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  128  <|@ instruction rbx|DWORD[.] = MOV [rdx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  130  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rbx:0, rsi:0]
live-base-pointers: []
sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1044) [bci: 48]
locals: rsi|QWORD[.] - - rdx|QWORD[.] rcx|QWORD[.] - - rax|DWORD r10|DWORD - - - - - 
>@ <|@ instruction rdi|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD state [bci:48] <|@ <|@
      nr  132  <|@ instruction rbp|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  134  <|@ instruction rbp|DWORD = ADD (x: rbp|DWORD, ~y: [rdx|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr  136  <|@ instruction CMP (x: rdi|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B23" 
    xhandlers
    flags 
    probability 4607178383395088037
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  142  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4658e3fd encoding: base: 0 shift: 3 <|@ <|@
      nr  144  <|@ instruction rbx|QWORD = MOV [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  146  <|@ instruction rdi|QWORD = MOVE input: long[-4294967296|0xffffffff00000000] <|@ <|@
      nr  148  <|@ instruction CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  150  <|@ instruction BRANCH trueDestinationProbability: 0.8196203765054371 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B22" 
    xhandlers
    flags 
    probability 4605554396089599157
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  154  <|@ instruction rbp|DWORD[.] = MOV [rcx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  156  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rbp:0, rsi:0]
live-base-pointers: []
sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1044) [bci: 48]
locals: rsi|QWORD[.] - - rdx|QWORD[.] rcx|QWORD[.] - - rax|DWORD r10|DWORD - - - - - 
>@ <|@ instruction r13|DWORD = MOV [rbp|DWORD[.] * 8 + 12] size: DWORD state [bci:48] <|@ <|@
      nr  158  <|@ instruction r14|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  160  <|@ instruction r14|DWORD = ADD (x: r14|DWORD, ~y: [rcx|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr  162  <|@ instruction CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4605554396089599157
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  168  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4658e3fd encoding: base: 0 shift: 3 <|@ <|@
      nr  170  <|@ instruction rbp|QWORD = MOV [rbp|QWORD[.] + r14|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  172  <|@ instruction rbx|QWORD = ADD (x: rbx|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  174  <|@ instruction TEST (x: rdi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ instruction BRANCH trueDestinationProbability: 0.9997661456912343 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    probability 4605552670437369125
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B18" 
    successors "B25" "B34" 
    xhandlers
    flags 
    probability 4607176657742858005
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  216  <|@ instruction r10|QWORD = INC rbx|QWORD size: QWORD <|@ <|@
      nr  218  <|@ instruction TEST (x: rdi|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  220  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607176657742858005
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  224  <|@ instruction CMP (x: r8|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  226  <|@ instruction BRANCH trueDestinationProbability: 0.24069237066781024 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B33" 
    xhandlers
    flags 
    probability 4605010080243662311
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  236  <|@ instruction r9|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  238  <|@ instruction r11|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr  240  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, r9:0]
live-base-pointers: []
sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1061) [bci: 149]
locals: rsi|QWORD[.] - - rdx|QWORD[.] rcx|QWORD[.] - - rax|DWORD - r8|DWORD rbx|QWORD - - - 
>@ <|@ instruction CMP (x: r11|DWORD, y: [r9|DWORD[.] * 8 + 12]) size: DWORD state [bci:149] <|@ <|@
      nr  242  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4605010080243662311
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  246  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4658e3fd encoding: base: 0 shift: 3 <|@ <|@
      nr  248  <|@ instruction rax|QWORD = MOV [r9|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  250  <|@ instruction CMP (x: rbx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  252  <|@ instruction BRANCH trueDestinationProbability: 0.073727986856292 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4604506159723927129
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  262  <|@ instruction CMP (x: rax|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  264  <|@ instruction BRANCH trueDestinationProbability: 0.9731167895349482 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors 
    xhandlers
    flags 
    probability 4604335963726662809
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  268  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  270  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors 
    xhandlers
    flags 
    probability 4597834330287318198
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  230  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  232  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B24" 
    xhandlers
    flags 
    probability 4595663969512490944
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 4588223549351557345
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  256  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  258  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors 
    xhandlers
    flags 
    probability 4581103493320882173
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  274  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction rdx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ st <@st|@reference-map: [stack:16]
live-base-pointers: []
sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1090) [bci: 285]
stack: stack:32|QWORD[.] 
locals: - - - - - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.add(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:285] <|@ <|@
      nr  282  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ st <@st|@reference-map: []
live-base-pointers: []
sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1090) [bci: 288]
locals: - - - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:288] <|@ <|@
      nr  288  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4556900132939549728
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   66  <|@ instruction CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction BRANCH trueDestinationProbability: 4.4801994662724276E-4 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4556896430274536325
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction stack:36|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction rax|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr   86  <|@ instruction stack:48|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction rcx|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 4556896430274537317
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  102  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  104  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4551200295551042960
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  184  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction CMP (x: r9|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  188  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 4551200295551042960
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  194  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4506679085690573838
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   74  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  312  <|@ instruction r11|DWORD = MOVE input: int[-51995|0xffffffffffff34e5] <|@ <|@
      nr  314  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B13" "B36" "B22" "B21" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  320  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  322  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  324  <|@ st <@st|@reference-map: [rcx:0, rdx:0, stack:16]
live-base-pointers: []
sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1044) [bci: 48]
locals: stack:32|QWORD[.] - - rdx|QWORD[.] rcx|QWORD[.] - - rax|DWORD r10|DWORD - - - - - 
>@ <|@ instruction DEOPT info [bci:48] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction r10|DWORD = MOVE input: int[-68883|0xfffffffffffef2ed] <|@ <|@
      nr   22  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction JUMP ~[] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   46  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   50  <|@ st <@st|@reference-map: [rcx:0, rdx:0, stack:16]
live-base-pointers: []
sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1029) [bci: 0]
locals: stack:32|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  198  <|@ instruction r11|DWORD = MOVE input: int[-58643|0xffffffffffff1aed] <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B21 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  292  <|@ instruction r10|DWORD = MOVE input: int[-61467|0xffffffffffff0fe5] <|@ <|@
      nr  294  <|@ instruction JUMP ~[] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  304  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  306  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  308  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0]
live-base-pointers: []
sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1061) [bci: 149]
locals: rsi|QWORD[.] - - rdx|QWORD[.] rcx|QWORD[.] - - rax|DWORD - r8|DWORD rbx|QWORD - - - 
>@ <|@ instruction DEOPT info [bci:149] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction r11|DWORD = MOVE input: int[-56859|0xffffffffffff21e5] <|@ <|@
      nr  206  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  208  <|@ instruction JUMP ~[] destination: B22 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  298  <|@ instruction r10|DWORD = MOVE input: int[-58899|0xffffffffffff19ed] <|@ <|@
      nr  300  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  120  <|@ instruction r11|DWORD = MOVE input: int[-48659|0xffffffffffff41ed] <|@ <|@
      nr  122  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction JUMP ~[] destination: B13 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction r10|DWORD = MOVE input: int[-69139|0xfffffffffffef1ed] <|@ <|@
      nr   40  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokespecial #22         // size:()int
     4: istore        5
     6: aload_2       
     7: invokespecial #22         // size:()int
    10: istore        6
    12: iload         5
    14: iload         6
    16: if_icmplt     35
    19: aload_1       
    20: astore_3      
    21: aload_2       
    22: astore        4
    24: iload         5
    26: istore        7
    28: iload         6
    30: istore        8
    32: goto          48
    35: aload_2       
    36: astore_3      
    37: aload_1       
    38: astore        4
    40: iload         6
    42: istore        7
    44: iload         5
    46: istore        8
    48: aload_0       
    49: invokespecial #22         // size:()int
    52: istore        9
    54: iload         7
    56: ifne          70
    59: iload         9
    61: ifne          68
    64: iconst_0      
    65: goto          69
    68: iconst_1      
    69: ireturn       
    70: iload         8
    72: ifne          81
    75: aload_0       
    76: aload_3       
    77: invokevirtual #32         // cmp:(sun.misc.FDBigInteger)int
    80: ireturn       
    81: iload         7
    83: iload         9
    85: if_icmple     90
    88: iconst_m1     
    89: ireturn       
    90: iload         7
    92: iconst_1      
    93: iadd          
    94: iload         9
    96: if_icmpge     101
    99: iconst_1      
   100: ireturn       
   101: aload_3       
   102: getfield      #2          // data:int[]
   105: aload_3       
   106: getfield      #4          // nWords:int
   109: iconst_1      
   110: isub          
   111: iaload        
   112: i2l           
   113: ldc2_w        #19         // 4294967295
   116: land          
   117: lstore        10
   119: iload         8
   121: iload         7
   123: if_icmpne     149
   126: lload         10
   128: aload         4
   130: getfield      #2          // data:int[]
   133: aload         4
   135: getfield      #4          // nWords:int
   138: iconst_1      
   139: isub          
   140: iaload        
   141: i2l           
   142: ldc2_w        #19         // 4294967295
   145: land          
   146: ladd          
   147: lstore        10
   149: lload         10
   151: bipush        32
   153: lushr         
   154: lconst_0      
   155: lcmp          
   156: ifne          223
   159: lload         10
   161: lconst_1      
   162: ladd          
   163: bipush        32
   165: lushr         
   166: lconst_0      
   167: lcmp          
   168: ifne          281
   171: iload         7
   173: iload         9
   175: if_icmpge     180
   178: iconst_1      
   179: ireturn       
   180: aload_0       
   181: getfield      #2          // data:int[]
   184: aload_0       
   185: getfield      #4          // nWords:int
   188: iconst_1      
   189: isub          
   190: iaload        
   191: i2l           
   192: ldc2_w        #19         // 4294967295
   195: land          
   196: lstore        12
   198: lload         12
   200: lload         10
   202: lcmp          
   203: ifge          208
   206: iconst_m1     
   207: ireturn       
   208: lload         12
   210: lload         10
   212: lconst_1      
   213: ladd          
   214: lcmp          
   215: ifle          220
   218: iconst_1      
   219: ireturn       
   220: goto          281
   223: iload         7
   225: iconst_1      
   226: iadd          
   227: iload         9
   229: if_icmple     234
   232: iconst_m1     
   233: ireturn       
   234: lload         10
   236: bipush        32
   238: lushr         
   239: lstore        10
   241: aload_0       
   242: getfield      #2          // data:int[]
   245: aload_0       
   246: getfield      #4          // nWords:int
   249: iconst_1      
   250: isub          
   251: iaload        
   252: i2l           
   253: ldc2_w        #19         // 4294967295
   256: land          
   257: lstore        12
   259: lload         12
   261: lload         10
   263: lcmp          
   264: ifge          269
   267: iconst_m1     
   268: ireturn       
   269: lload         12
   271: lload         10
   273: lconst_1      
   274: ladd          
   275: lcmp          
   276: ifle          281
   279: iconst_1      
   280: ireturn       
   281: aload_0       
   282: aload_3       
   283: aload         4
   285: invokespecial #33         // add:(sun.misc.FDBigInteger)sun.misc.FDBigInteger
   288: invokevirtual #32         // cmp:(sun.misc.FDBigInteger)int
   291: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@79cef656 slotKind: QWORD <|@ <|@
      nr    6  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0]
live-base-pointers: []
sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1029) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - - - - - - - - 
>@ <|@ instruction NULLCHECK [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0]
live-base-pointers: []
sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1029) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - - - - - - - - 
>@ <|@ instruction NULLCHECK [rcx|QWORD[.]] state [bci:0] <|@ <|@
      nr   10  <|@ instruction rax|DWORD = MOV [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   12  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, ~y: [rdx|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   14  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction r10|DWORD = MOV [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   30  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, ~y: [rcx|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   32  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   56  <|@ instruction r8|DWORD = ADD (x: r11|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   58  <|@ instruction CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   60  <|@ instruction BRANCH trueDestinationProbability: 4.48019946627189E-4 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" "B12" 
    xhandlers
    flags 
    probability 4607178383395088038
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction CMP (x: rax|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction BRANCH trueDestinationProbability: 4.4801994662724276E-4 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B9" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607178383395088037
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr  112  <|@ instruction r9|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  114  <|@ instruction CMP (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B36" 
    xhandlers
    flags 
    probability 4607178383395088037
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  128  <|@ instruction rbx|DWORD[.] = MOV [rdx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  130  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rbx:0, rsi:0]
live-base-pointers: []
sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1044) [bci: 48]
locals: rsi|QWORD[.] - - rdx|QWORD[.] rcx|QWORD[.] - - rax|DWORD r10|DWORD - - - - - 
>@ <|@ instruction rdi|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD state [bci:48] <|@ <|@
      nr  132  <|@ instruction rbp|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  134  <|@ instruction rbp|DWORD = ADD (x: rbp|DWORD, ~y: [rdx|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr  136  <|@ instruction CMP (x: rdi|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B24" 
    xhandlers
    flags 
    probability 4607178383395088037
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  142  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4658e3fd encoding: base: 0 shift: 3 <|@ <|@
      nr  144  <|@ instruction rbx|QWORD = MOV [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  146  <|@ instruction rdi|QWORD = MOVE input: long[-4294967296|0xffffffff00000000] <|@ <|@
      nr  148  <|@ instruction CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  150  <|@ instruction BRANCH trueDestinationProbability: 0.8196203765054371 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B22" 
    xhandlers
    flags 
    probability 4605554396089599157
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  154  <|@ instruction rbp|DWORD[.] = MOV [rcx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  156  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rbp:0, rsi:0]
live-base-pointers: []
sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1044) [bci: 48]
locals: rsi|QWORD[.] - - rdx|QWORD[.] rcx|QWORD[.] - - rax|DWORD r10|DWORD - - - - - 
>@ <|@ instruction r13|DWORD = MOV [rbp|DWORD[.] * 8 + 12] size: DWORD state [bci:48] <|@ <|@
      nr  158  <|@ instruction r14|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  160  <|@ instruction r14|DWORD = ADD (x: r14|DWORD, ~y: [rcx|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr  162  <|@ instruction CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B24" "B19" 
    xhandlers
    flags 
    probability 4605554396089599157
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  168  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4658e3fd encoding: base: 0 shift: 3 <|@ <|@
      nr  170  <|@ instruction rbp|QWORD = MOV [rbp|QWORD[.] + r14|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  172  <|@ instruction rbx|QWORD = ADD (x: rbx|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  174  <|@ instruction TEST (x: rdi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ instruction BRANCH trueDestinationProbability: 0.9997661456912343 condition: = trueDestination: B17 -> B24 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" 
    successors "B25" "B34" 
    xhandlers
    flags 
    probability 4607176657742858005
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  216  <|@ instruction r10|QWORD = INC rbx|QWORD size: QWORD <|@ <|@
      nr  218  <|@ instruction TEST (x: rdi|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  220  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607176657742858005
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  224  <|@ instruction CMP (x: r8|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  226  <|@ instruction BRANCH trueDestinationProbability: 0.24069237066781024 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B33" 
    xhandlers
    flags 
    probability 4605010080243662311
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  236  <|@ instruction r9|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  238  <|@ instruction r11|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr  240  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, r9:0]
live-base-pointers: []
sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1061) [bci: 149]
locals: rsi|QWORD[.] - - rdx|QWORD[.] rcx|QWORD[.] - - rax|DWORD - r8|DWORD rbx|QWORD - - - 
>@ <|@ instruction CMP (x: r11|DWORD, y: [r9|DWORD[.] * 8 + 12]) size: DWORD state [bci:149] <|@ <|@
      nr  242  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4605010080243662311
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  246  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4658e3fd encoding: base: 0 shift: 3 <|@ <|@
      nr  248  <|@ instruction rax|QWORD = MOV [r9|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  250  <|@ instruction CMP (x: rbx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  252  <|@ instruction BRANCH trueDestinationProbability: 0.073727986856292 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4604506159723927129
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  262  <|@ instruction CMP (x: rax|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  264  <|@ instruction BRANCH trueDestinationProbability: 0.9731167895349482 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors 
    xhandlers
    flags 
    probability 4604335963726662809
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  268  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  270  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors 
    xhandlers
    flags 
    probability 4597834330287318198
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  230  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  232  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 4588223549351557345
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  256  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  258  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors 
    xhandlers
    flags 
    probability 4581103493320882173
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  274  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction rdx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ st <@st|@reference-map: [stack:16]
live-base-pointers: []
sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1090) [bci: 285]
stack: stack:32|QWORD[.] 
locals: - - - - - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.add(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:285] <|@ <|@
      nr  282  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ st <@st|@reference-map: []
live-base-pointers: []
sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1090) [bci: 288]
locals: - - - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:288] <|@ <|@
      nr  288  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4556900132939549728
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   66  <|@ instruction CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction BRANCH trueDestinationProbability: 4.4801994662724276E-4 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4556896430274536325
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction stack:36|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction rax|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr   86  <|@ instruction stack:48|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction rcx|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 4556896430274537317
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  102  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  104  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4551200295551042960
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  184  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction CMP (x: r9|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  188  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 4551200295551042960
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  194  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4506679085690573838
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   74  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  312  <|@ instruction r11|DWORD = MOVE input: int[-51995|0xffffffffffff34e5] <|@ <|@
      nr  314  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B13" "B36" "B22" "B21" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  320  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  322  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  324  <|@ st <@st|@reference-map: [rcx:0, rdx:0, stack:16]
live-base-pointers: []
sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1044) [bci: 48]
locals: stack:32|QWORD[.] - - rdx|QWORD[.] rcx|QWORD[.] - - rax|DWORD r10|DWORD - - - - - 
>@ <|@ instruction DEOPT info [bci:48] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction r10|DWORD = MOVE input: int[-68883|0xfffffffffffef2ed] <|@ <|@
      nr   24  <|@ instruction JUMP ~[] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   22  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   50  <|@ st <@st|@reference-map: [rcx:0, rdx:0, stack:16]
live-base-pointers: []
sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1029) [bci: 0]
locals: stack:32|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  198  <|@ instruction r11|DWORD = MOVE input: int[-58643|0xffffffffffff1aed] <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B21 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  292  <|@ instruction r10|DWORD = MOVE input: int[-61467|0xffffffffffff0fe5] <|@ <|@
      nr  294  <|@ instruction JUMP ~[] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  304  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  306  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  308  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0]
live-base-pointers: []
sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1061) [bci: 149]
locals: rsi|QWORD[.] - - rdx|QWORD[.] rcx|QWORD[.] - - rax|DWORD - r8|DWORD rbx|QWORD - - - 
>@ <|@ instruction DEOPT info [bci:149] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction r11|DWORD = MOVE input: int[-56859|0xffffffffffff21e5] <|@ <|@
      nr  206  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  208  <|@ instruction JUMP ~[] destination: B22 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  298  <|@ instruction r10|DWORD = MOVE input: int[-58899|0xffffffffffff19ed] <|@ <|@
      nr  300  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  120  <|@ instruction r11|DWORD = MOVE input: int[-48659|0xffffffffffff41ed] <|@ <|@
      nr  122  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction JUMP ~[] destination: B13 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction r10|DWORD = MOVE input: int[-69139|0xfffffffffffef1ed] <|@ <|@
      nr   42  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokespecial #22         // size:()int
     4: istore        5
     6: aload_2       
     7: invokespecial #22         // size:()int
    10: istore        6
    12: iload         5
    14: iload         6
    16: if_icmplt     35
    19: aload_1       
    20: astore_3      
    21: aload_2       
    22: astore        4
    24: iload         5
    26: istore        7
    28: iload         6
    30: istore        8
    32: goto          48
    35: aload_2       
    36: astore_3      
    37: aload_1       
    38: astore        4
    40: iload         6
    42: istore        7
    44: iload         5
    46: istore        8
    48: aload_0       
    49: invokespecial #22         // size:()int
    52: istore        9
    54: iload         7
    56: ifne          70
    59: iload         9
    61: ifne          68
    64: iconst_0      
    65: goto          69
    68: iconst_1      
    69: ireturn       
    70: iload         8
    72: ifne          81
    75: aload_0       
    76: aload_3       
    77: invokevirtual #32         // cmp:(sun.misc.FDBigInteger)int
    80: ireturn       
    81: iload         7
    83: iload         9
    85: if_icmple     90
    88: iconst_m1     
    89: ireturn       
    90: iload         7
    92: iconst_1      
    93: iadd          
    94: iload         9
    96: if_icmpge     101
    99: iconst_1      
   100: ireturn       
   101: aload_3       
   102: getfield      #2          // data:int[]
   105: aload_3       
   106: getfield      #4          // nWords:int
   109: iconst_1      
   110: isub          
   111: iaload        
   112: i2l           
   113: ldc2_w        #19         // 4294967295
   116: land          
   117: lstore        10
   119: iload         8
   121: iload         7
   123: if_icmpne     149
   126: lload         10
   128: aload         4
   130: getfield      #2          // data:int[]
   133: aload         4
   135: getfield      #4          // nWords:int
   138: iconst_1      
   139: isub          
   140: iaload        
   141: i2l           
   142: ldc2_w        #19         // 4294967295
   145: land          
   146: ladd          
   147: lstore        10
   149: lload         10
   151: bipush        32
   153: lushr         
   154: lconst_0      
   155: lcmp          
   156: ifne          223
   159: lload         10
   161: lconst_1      
   162: ladd          
   163: bipush        32
   165: lushr         
   166: lconst_0      
   167: lcmp          
   168: ifne          281
   171: iload         7
   173: iload         9
   175: if_icmpge     180
   178: iconst_1      
   179: ireturn       
   180: aload_0       
   181: getfield      #2          // data:int[]
   184: aload_0       
   185: getfield      #4          // nWords:int
   188: iconst_1      
   189: isub          
   190: iaload        
   191: i2l           
   192: ldc2_w        #19         // 4294967295
   195: land          
   196: lstore        12
   198: lload         12
   200: lload         10
   202: lcmp          
   203: ifge          208
   206: iconst_m1     
   207: ireturn       
   208: lload         12
   210: lload         10
   212: lconst_1      
   213: ladd          
   214: lcmp          
   215: ifle          220
   218: iconst_1      
   219: ireturn       
   220: goto          281
   223: iload         7
   225: iconst_1      
   226: iadd          
   227: iload         9
   229: if_icmple     234
   232: iconst_m1     
   233: ireturn       
   234: lload         10
   236: bipush        32
   238: lushr         
   239: lstore        10
   241: aload_0       
   242: getfield      #2          // data:int[]
   245: aload_0       
   246: getfield      #4          // nWords:int
   249: iconst_1      
   250: isub          
   251: iaload        
   252: i2l           
   253: ldc2_w        #19         // 4294967295
   256: land          
   257: lstore        12
   259: lload         12
   261: lload         10
   263: lcmp          
   264: ifge          269
   267: iconst_m1     
   268: ireturn       
   269: lload         12
   271: lload         10
   273: lconst_1      
   274: ladd          
   275: lcmp          
   276: ifle          281
   279: iconst_1      
   280: ireturn       
   281: aload_0       
   282: aload_3       
   283: aload         4
   285: invokespecial #33         // add:(sun.misc.FDBigInteger)sun.misc.FDBigInteger
   288: invokevirtual #32         // cmp:(sun.misc.FDBigInteger)int
   291: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec2848896c2420850285018b421003420c85c00f840d020000448b51104403510c4585d20f845f020000448b5e10458bc34403460c443bd00f8f49010000413bc00f8f6a010000448bc841ffc1453bc10f8f260200008b5a188b3cdd0c000000bdffffffff036a103bfd0f869701000048c1e3038b5cab1048bf00000000ffffffff443bd00f85330000008b6918448b2ced0c00000041beffffffff44037110453bee0f86be01000048c1e503428b6cb5104803dd4885fb0f850b0100004c8bd349ffc24985fa0f85a7010000443bc00f8f48000000448b4e1841ffcb463b1ccd0c0000000f836201000049c1e103438b449910483bd80f8739000000493bc20f8648000000b801000000488b6c24204883c428850500000000c5f877c3b801000000488b6c24204883c428850500000000c5f877c3b8ffffffff488b6c24204883c428850500000000c5f877c34889742410488bf2488bd10f1f440000e80000000090488b742410488bd06690e80000000090488b6c24204883c428850500000000c5f877c34889742410453bd00f8f5a0000008944240c418bc2448b54240c48890c24488bca488b1424e996feffffb8ffffffff488b6c24204883c428850500000000c5f877c34889742410453bc80f8e6e000000b8ffffffff488b6c24204883c428850500000000c5f877c3b8ffffffff488b6c24204883c428850500000000c5f877c341bbe534ffff488974241045899f9c0200004d89a7a8020000e8000000009041baedf2feff48897424104589979c0200004d89a7a8020000e8000000009041bbed1affffebc541bae50fffff4589979c0200004d89a7a8020000e8000000009041bbe521ffff4889742410eb9e41baed19ffffebd741bbed41ffff4889742410eb8941baedf1feffeb9be80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@79cef656 slotKind: QWORD  <||@
  Comment 48 6 NULLCHECK [rdx|QWORD[.]] state [bci:0]  <||@
  Comment 48 [rcx:0, rdx:0, rsi:0]at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1029) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5  |6  |7  |8  |9  |10  |11  |12  |13 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-    <||@
  Comment 48 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 50 8 NULLCHECK [rcx|QWORD[.]] state [bci:0]  <||@
  Comment 50 [rcx:0, rdx:0, rsi:0]at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1029) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5  |6  |7  |8  |9  |10  |11  |12  |13 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-    <||@
  Comment 50 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 52 10 rax|DWORD = MOV [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 55 12 rax|DWORD = ADD (x: rax|DWORD, ~y: [rdx|QWORD[.] + 12]) size: DWORD  <||@
  Comment 58 14 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 60 16 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 66 block B2 null  <||@
  Comment 66 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 66 28 r10|DWORD = MOV [rcx|QWORD[.] + 16] size: DWORD  <||@
  Comment 70 30 r10|DWORD = ADD (x: r10|DWORD, ~y: [rcx|QWORD[.] + 12]) size: DWORD  <||@
  Comment 74 32 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 77 34 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B5  <||@
  Comment 83 block B5 null  <||@
  Comment 83 52 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 83 54 r11|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 87 56 r8|DWORD = ADD (x: r11|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD  <||@
  Comment 94 58 CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 97 60 BRANCH trueDestinationProbability: 4.48019946627189E-4 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B9  <||@
  Comment 103 block B9 null  <||@
  Comment 103 94 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 103 96 CMP (x: rax|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 106 98 BRANCH trueDestinationProbability: 4.4801994662724276E-4 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B12  <||@
  Comment 112 block B12 null  <||@
  Comment 112 110 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 112 112 r9|DWORD = INC rax|DWORD size: DWORD  <||@
  Comment 118 114 CMP (x: r8|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 121 116 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14  <||@
  Comment 127 block B14 null  <||@
  Comment 127 126 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 127 128 rbx|DWORD[.] = MOV [rdx|QWORD[.] + 24] size: DWORD  <||@
  Comment 130 130 rdi|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD state [bci:48]  <||@
  Comment 130 [rcx:0, rdx:0, rbx:0, rsi:0]at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1044) [bci: 48, duringCall: false, rethrow: false]
              |0             |1  |2  |3             |4             |5  |6  |7          |8          |9  |10  |11  |12  |13 
     locals:  |rsi|QWORD[.]  |-  |-  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |rax|DWORD  |r10|DWORD  |-  |-   |-   |-   |-    <||@
  Comment 130 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 137 132 rbp|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 142 134 rbp|DWORD = ADD (x: rbp|DWORD, ~y: [rdx|QWORD[.] + 16]) size: DWORD  <||@
  Comment 145 136 CMP (x: rdi|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 147 138 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B36  <||@
  Comment 153 block B15 null  <||@
  Comment 153 140 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 153 142 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4658e3fd encoding: base: 0 shift: 3  <||@
  Comment 157 144 rbx|QWORD = MOV [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD  <||@
  Comment 161 146 rdi|QWORD = MOVE input: long[-4294967296|0xffffffff00000000]  <||@
  Comment 171 148 CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 174 150 BRANCH trueDestinationProbability: 0.8196203765054371 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B24  <||@
  Comment 180 block B16 null  <||@
  Comment 180 152 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 180 154 rbp|DWORD[.] = MOV [rcx|QWORD[.] + 24] size: DWORD  <||@
  Comment 183 156 r13|DWORD = MOV [rbp|DWORD[.] * 8 + 12] size: DWORD state [bci:48]  <||@
  Comment 183 [rcx:0, rdx:0, rbp:0, rsi:0]at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1044) [bci: 48, duringCall: false, rethrow: false]
              |0             |1  |2  |3             |4             |5  |6  |7          |8          |9  |10  |11  |12  |13 
     locals:  |rsi|QWORD[.]  |-  |-  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |rax|DWORD  |r10|DWORD  |-  |-   |-   |-   |-    <||@
  Comment 183 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 191 158 r14|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 197 160 r14|DWORD = ADD (x: r14|DWORD, ~y: [rcx|QWORD[.] + 16]) size: DWORD  <||@
  Comment 201 162 CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 204 164 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B22  <||@
  Comment 210 block B17 null  <||@
  Comment 210 166 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 210 168 rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4658e3fd encoding: base: 0 shift: 3  <||@
  Comment 214 170 rbp|QWORD = MOV [rbp|QWORD[.] + r14|DWORD * 4 + 16] size: DWORD  <||@
  Comment 219 172 rbx|QWORD = ADD (x: rbx|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 222 174 TEST (x: rdi|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 225 176 BRANCH trueDestinationProbability: 0.9997661456912343 condition: = trueDestination: B17 -> B24 falseDestination: B17 -> B19  <||@
  Comment 231 block B24 null  <||@
  Comment 231 214 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 231 216 r10|QWORD = INC rbx|QWORD size: QWORD  <||@
  Comment 237 218 TEST (x: rdi|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 240 220 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B34  <||@
  Comment 246 block B25 null  <||@
  Comment 246 222 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 246 224 CMP (x: r8|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 249 226 BRANCH trueDestinationProbability: 0.24069237066781024 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27  <||@
  Comment 255 block B27 null  <||@
  Comment 255 234 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 255 236 r9|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 259 238 r11|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 262 240 CMP (x: r11|DWORD, y: [r9|DWORD[.] * 8 + 12]) size: DWORD state [bci:149]  <||@
  Comment 262 [rcx:0, rdx:0, rsi:0, r9:0]at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1061) [bci: 149, duringCall: false, rethrow: false]
              |0             |1  |2  |3             |4             |5  |6  |7          |8  |9         |10         |11  |12  |13 
     locals:  |rsi|QWORD[.]  |-  |-  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |rax|DWORD  |-  |r8|DWORD  |rbx|QWORD  |-   |-   |-    <||@
  Comment 262 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 270 242 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B33  <||@
  Comment 276 block B28 null  <||@
  Comment 276 244 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 276 246 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4658e3fd encoding: base: 0 shift: 3  <||@
  Comment 280 248 rax|QWORD = MOV [r9|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD  <||@
  Comment 285 250 CMP (x: rbx|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 288 252 BRANCH trueDestinationProbability: 0.073727986856292 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B30  <||@
  Comment 294 block B30 null  <||@
  Comment 294 260 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 294 262 CMP (x: rax|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 297 264 BRANCH trueDestinationProbability: 0.9731167895349482 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32  <||@
  Comment 303 block B31 null  <||@
  Comment 303 266 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 303 268 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 308 270 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 317 12  <||@
  Comment 327 block B26 null  <||@
  Comment 327 228 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 327 230 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 332 232 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 341 12  <||@
  Comment 351 block B29 null  <||@
  Comment 351 254 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 351 256 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 356 258 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 365 12  <||@
  Comment 375 block B32 null  <||@
  Comment 375 272 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 375 274 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 380 276 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 383 278 rdx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 386 280 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.add(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:285]  <||@
  Comment 386 9  <||@
  Comment 391 {HotSpotMethod<FDBigInteger.add(FDBigInteger)>}  <||@
  Comment 396 [stack:16]at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1090) [bci: 285, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12  |13 
     locals:  |-                  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-  
     stack:   |stack:32|QWORD[.]  |   |   |   |   |   |   |   |   |   |    |    |    |     <||@
  Comment 397 282 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 402 284 rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 405 286 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:288]  <||@
  Comment 405 9  <||@
  Comment 407 {HotSpotMethod<FDBigInteger.cmp(FDBigInteger)>}  <||@
  Comment 412 []at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1090) [bci: 288, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12  |13 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-    <||@
  Comment 413 288 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 422 12  <||@
  Comment 432 block B6 null  <||@
  Comment 432 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 432 64 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 437 66 CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 440 68 BRANCH trueDestinationProbability: 4.4801994662724276E-4 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 446 block B8 null  <||@
  Comment 446 76 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 446 80 stack:36|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 450 82 rax|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 453 84 r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 458 86 stack:48|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 462 88 rcx|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 465 90 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 469 92 JUMP ~[] destination: B8 -> B12  <||@
  Comment 474 block B10 null  <||@
  Comment 474 100 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 474 102 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 479 104 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 488 12  <||@
  Comment 498 block B19 null  <||@
  Comment 498 182 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 498 184 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 503 186 CMP (x: r9|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 506 188 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B21  <||@
  Comment 512 block B20 null  <||@
  Comment 512 190 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 512 192 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 517 194 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 526 12  <||@
  Comment 536 block B7 null  <||@
  Comment 536 70 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 536 72 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 541 74 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 550 12  <||@
  Comment 560 block B36 null  <||@
  Comment 560 310 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 560 312 r11|DWORD = MOVE input: int[-51995|0xffffffffffff34e5]  <||@
  Comment 566 314 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 571 316 JUMP ~[] destination: B36 -> B37  <||@
  Comment 571 block B37 null  <||@
  Comment 571 318 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 571 320 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 578 322 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 585 324 DEOPT info [bci:48]  <||@
  Comment 585 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 590 [rcx:0, rdx:0, stack:16]at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1044) [bci: 48, duringCall: false, rethrow: false]
              |0                  |1  |2  |3             |4             |5  |6  |7          |8          |9  |10  |11  |12  |13 
     locals:  |stack:32|QWORD[.]  |-  |-  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |rax|DWORD  |r10|DWORD  |-  |-   |-   |-   |-    <||@
  Comment 591 block B1 null  <||@
  Comment 591 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 591 20 r10|DWORD = MOVE input: int[-68883|0xfffffffffffef2ed]  <||@
  Comment 597 24 JUMP ~[] destination: B1 -> B4  <||@
  Comment 597 block B4 null  <||@
  Comment 597 44 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 597 22 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 602 46 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 609 48 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 616 50 DEOPT info [bci:0]  <||@
  Comment 616 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 621 [rcx:0, rdx:0, stack:16]at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1029) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1             |2             |3  |4  |5  |6  |7  |8  |9  |10  |11  |12  |13 
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-    <||@
  Comment 622 block B21 null  <||@
  Comment 622 196 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 622 198 r11|DWORD = MOVE input: int[-58643|0xffffffffffff1aed]  <||@
  Comment 628 200 JUMP ~[] destination: B21 -> B37  <||@
  Comment 630 block B33 null  <||@
  Comment 630 290 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 630 292 r10|DWORD = MOVE input: int[-61467|0xffffffffffff0fe5]  <||@
  Comment 636 294 JUMP ~[] destination: B33 -> B35  <||@
  Comment 636 block B35 null  <||@
  Comment 636 302 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 636 304 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 643 306 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 650 308 DEOPT info [bci:149]  <||@
  Comment 650 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 655 [rcx:0, rdx:0, rsi:0]at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1061) [bci: 149, duringCall: false, rethrow: false]
              |0             |1  |2  |3             |4             |5  |6  |7          |8  |9         |10         |11  |12  |13 
     locals:  |rsi|QWORD[.]  |-  |-  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |rax|DWORD  |-  |r8|DWORD  |rbx|QWORD  |-   |-   |-    <||@
  Comment 656 block B22 null  <||@
  Comment 656 202 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 656 204 r11|DWORD = MOVE input: int[-56859|0xffffffffffff21e5]  <||@
  Comment 662 206 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 667 208 JUMP ~[] destination: B22 -> B37  <||@
  Comment 669 block B34 null  <||@
  Comment 669 296 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 669 298 r10|DWORD = MOVE input: int[-58899|0xffffffffffff19ed]  <||@
  Comment 675 300 JUMP ~[] destination: B34 -> B35  <||@
  Comment 677 block B13 null  <||@
  Comment 677 118 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 677 120 r11|DWORD = MOVE input: int[-48659|0xffffffffffff41ed]  <||@
  Comment 683 122 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 688 124 JUMP ~[] destination: B13 -> B37  <||@
  Comment 690 block B3 null  <||@
  Comment 690 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 690 38 r10|DWORD = MOVE input: int[-69139|0xfffffffffffef1ed]  <||@
  Comment 696 42 JUMP ~[] destination: B3 -> B4  <||@
  Comment 698 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 698 4  <||@
  Comment 704 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 704 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9647[sun.misc.FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)]"
  method "HotSpotCompilation-9647[sun.misc.FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)]"
  date 1527005214580
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107be0940 448b560849c1e203493bc20f850f55c2fe900f1f80000000000f1f800000000089842400c0feff4883ec2848896c2420850285018b421003420c85c00f840d020000448b51104403510c4585d20f845f020000448b5e10458bc34403460c443bd00f8f49010000413bc00f8f6a010000448bc841ffc1453bc10f8f260200008b5a188b3cdd0c000000bdffffffff036a103bfd0f869701000048c1e3038b5cab1048bf00000000ffffffff443bd00f85330000008b6918448b2ced0c00000041beffffffff44037110453bee0f86be01000048c1e503428b6cb5104803dd4885fb0f850b0100004c8bd349ffc24985fa0f85a7010000443bc00f8f48000000448b4e1841ffcb463b1ccd0c0000000f836201000049c1e103438b449910483bd80f8739000000493bc20f8648000000b801000000488b6c24204883c428850583e5cafcc5f877c3b801000000488b6c24204883c42885056be5cafcc5f877c3b8ffffffff488b6c24204883c428850553e5cafcc5f877c34889742410488bf2488bd10f1f440000e8d455c2fe90488b742410488bd06690e8c455c2fe90488b6c24204883c42885051ae5cafcc5f877c34889742410453bd00f8f5a0000008944240c418bc2448b54240c48890c24488bca488b1424e996feffffb8ffffffff488b6c24204883c4288505d8e4cafcc5f877c34889742410453bc80f8e6e000000b8ffffffff488b6c24204883c4288505b2e4cafcc5f877c3b8ffffffff488b6c24204883c42885059ae4cafcc5f877c341bbe534ffff488974241045899f9c0200004d89a7a8020000e8706ac2fe9041baedf2feff48897424104589979c0200004d89a7a8020000e8516ac2fe9041bbed1affffebc541bae50fffff4589979c0200004d89a7a8020000e82f6ac2fe9041bbe521ffff4889742410eb9e41baed19ffffebd741bbed41ffff4889742410eb8941baedf1feffeb9be8219a06ff90e8fb68c2fe90f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f448bb0000000000000000e9fbffffff48bb0000000000000000e9fbfffffff4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@79cef656 slotKind: QWORD  <||@
  Comment 48 6 NULLCHECK [rdx|QWORD[.]] state [bci:0]  <||@
  Comment 48 [rcx:0, rdx:0, rsi:0]at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1029) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5  |6  |7  |8  |9  |10  |11  |12  |13 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-    <||@
  Comment 48 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 50 8 NULLCHECK [rcx|QWORD[.]] state [bci:0]  <||@
  Comment 50 [rcx:0, rdx:0, rsi:0]at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1029) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5  |6  |7  |8  |9  |10  |11  |12  |13 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-    <||@
  Comment 50 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 52 10 rax|DWORD = MOV [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 55 12 rax|DWORD = ADD (x: rax|DWORD, ~y: [rdx|QWORD[.] + 12]) size: DWORD  <||@
  Comment 58 14 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 60 16 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 66 block B2 null  <||@
  Comment 66 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 66 28 r10|DWORD = MOV [rcx|QWORD[.] + 16] size: DWORD  <||@
  Comment 70 30 r10|DWORD = ADD (x: r10|DWORD, ~y: [rcx|QWORD[.] + 12]) size: DWORD  <||@
  Comment 74 32 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 77 34 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B5  <||@
  Comment 83 block B5 null  <||@
  Comment 83 52 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 83 54 r11|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 87 56 r8|DWORD = ADD (x: r11|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD  <||@
  Comment 94 58 CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 97 60 BRANCH trueDestinationProbability: 4.48019946627189E-4 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B9  <||@
  Comment 103 block B9 null  <||@
  Comment 103 94 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 103 96 CMP (x: rax|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 106 98 BRANCH trueDestinationProbability: 4.4801994662724276E-4 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B12  <||@
  Comment 112 block B12 null  <||@
  Comment 112 110 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 112 112 r9|DWORD = INC rax|DWORD size: DWORD  <||@
  Comment 118 114 CMP (x: r8|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 121 116 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14  <||@
  Comment 127 block B14 null  <||@
  Comment 127 126 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 127 128 rbx|DWORD[.] = MOV [rdx|QWORD[.] + 24] size: DWORD  <||@
  Comment 130 130 rdi|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD state [bci:48]  <||@
  Comment 130 [rcx:0, rdx:0, rbx:0, rsi:0]at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1044) [bci: 48, duringCall: false, rethrow: false]
              |0             |1  |2  |3             |4             |5  |6  |7          |8          |9  |10  |11  |12  |13 
     locals:  |rsi|QWORD[.]  |-  |-  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |rax|DWORD  |r10|DWORD  |-  |-   |-   |-   |-    <||@
  Comment 130 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 137 132 rbp|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 142 134 rbp|DWORD = ADD (x: rbp|DWORD, ~y: [rdx|QWORD[.] + 16]) size: DWORD  <||@
  Comment 145 136 CMP (x: rdi|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 147 138 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B36  <||@
  Comment 153 block B15 null  <||@
  Comment 153 140 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 153 142 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4658e3fd encoding: base: 0 shift: 3  <||@
  Comment 157 144 rbx|QWORD = MOV [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD  <||@
  Comment 161 146 rdi|QWORD = MOVE input: long[-4294967296|0xffffffff00000000]  <||@
  Comment 171 148 CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 174 150 BRANCH trueDestinationProbability: 0.8196203765054371 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B24  <||@
  Comment 180 block B16 null  <||@
  Comment 180 152 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 180 154 rbp|DWORD[.] = MOV [rcx|QWORD[.] + 24] size: DWORD  <||@
  Comment 183 156 r13|DWORD = MOV [rbp|DWORD[.] * 8 + 12] size: DWORD state [bci:48]  <||@
  Comment 183 [rcx:0, rdx:0, rbp:0, rsi:0]at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1044) [bci: 48, duringCall: false, rethrow: false]
              |0             |1  |2  |3             |4             |5  |6  |7          |8          |9  |10  |11  |12  |13 
     locals:  |rsi|QWORD[.]  |-  |-  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |rax|DWORD  |r10|DWORD  |-  |-   |-   |-   |-    <||@
  Comment 183 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 191 158 r14|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 197 160 r14|DWORD = ADD (x: r14|DWORD, ~y: [rcx|QWORD[.] + 16]) size: DWORD  <||@
  Comment 201 162 CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 204 164 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B22  <||@
  Comment 210 block B17 null  <||@
  Comment 210 166 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 210 168 rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4658e3fd encoding: base: 0 shift: 3  <||@
  Comment 214 170 rbp|QWORD = MOV [rbp|QWORD[.] + r14|DWORD * 4 + 16] size: DWORD  <||@
  Comment 219 172 rbx|QWORD = ADD (x: rbx|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 222 174 TEST (x: rdi|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 225 176 BRANCH trueDestinationProbability: 0.9997661456912343 condition: = trueDestination: B17 -> B24 falseDestination: B17 -> B19  <||@
  Comment 231 block B24 null  <||@
  Comment 231 214 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 231 216 r10|QWORD = INC rbx|QWORD size: QWORD  <||@
  Comment 237 218 TEST (x: rdi|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 240 220 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B34  <||@
  Comment 246 block B25 null  <||@
  Comment 246 222 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 246 224 CMP (x: r8|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 249 226 BRANCH trueDestinationProbability: 0.24069237066781024 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27  <||@
  Comment 255 block B27 null  <||@
  Comment 255 234 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 255 236 r9|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 259 238 r11|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 262 240 CMP (x: r11|DWORD, y: [r9|DWORD[.] * 8 + 12]) size: DWORD state [bci:149]  <||@
  Comment 262 [rcx:0, rdx:0, rsi:0, r9:0]at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1061) [bci: 149, duringCall: false, rethrow: false]
              |0             |1  |2  |3             |4             |5  |6  |7          |8  |9         |10         |11  |12  |13 
     locals:  |rsi|QWORD[.]  |-  |-  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |rax|DWORD  |-  |r8|DWORD  |rbx|QWORD  |-   |-   |-    <||@
  Comment 262 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 270 242 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B33  <||@
  Comment 276 block B28 null  <||@
  Comment 276 244 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 276 246 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4658e3fd encoding: base: 0 shift: 3  <||@
  Comment 280 248 rax|QWORD = MOV [r9|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD  <||@
  Comment 285 250 CMP (x: rbx|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 288 252 BRANCH trueDestinationProbability: 0.073727986856292 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B30  <||@
  Comment 294 block B30 null  <||@
  Comment 294 260 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 294 262 CMP (x: rax|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 297 264 BRANCH trueDestinationProbability: 0.9731167895349482 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32  <||@
  Comment 303 block B31 null  <||@
  Comment 303 266 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 303 268 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 308 270 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 317 12  <||@
  Comment 327 block B26 null  <||@
  Comment 327 228 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 327 230 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 332 232 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 341 12  <||@
  Comment 351 block B29 null  <||@
  Comment 351 254 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 351 256 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 356 258 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 365 12  <||@
  Comment 375 block B32 null  <||@
  Comment 375 272 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 375 274 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 380 276 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 383 278 rdx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 386 280 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.add(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:285]  <||@
  Comment 386 9  <||@
  Comment 391 {HotSpotMethod<FDBigInteger.add(FDBigInteger)>}  <||@
  Comment 396 [stack:16]at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1090) [bci: 285, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12  |13 
     locals:  |-                  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-  
     stack:   |stack:32|QWORD[.]  |   |   |   |   |   |   |   |   |   |    |    |    |     <||@
  Comment 397 282 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 402 284 rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 405 286 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:288]  <||@
  Comment 405 9  <||@
  Comment 407 {HotSpotMethod<FDBigInteger.cmp(FDBigInteger)>}  <||@
  Comment 412 []at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1090) [bci: 288, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12  |13 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-    <||@
  Comment 413 288 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 422 12  <||@
  Comment 432 block B6 null  <||@
  Comment 432 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 432 64 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 437 66 CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 440 68 BRANCH trueDestinationProbability: 4.4801994662724276E-4 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 446 block B8 null  <||@
  Comment 446 76 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 446 80 stack:36|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 450 82 rax|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 453 84 r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 458 86 stack:48|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 462 88 rcx|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 465 90 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 469 92 JUMP ~[] destination: B8 -> B12  <||@
  Comment 474 block B10 null  <||@
  Comment 474 100 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 474 102 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 479 104 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 488 12  <||@
  Comment 498 block B19 null  <||@
  Comment 498 182 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 498 184 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 503 186 CMP (x: r9|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 506 188 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B21  <||@
  Comment 512 block B20 null  <||@
  Comment 512 190 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 512 192 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 517 194 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 526 12  <||@
  Comment 536 block B7 null  <||@
  Comment 536 70 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 536 72 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 541 74 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 550 12  <||@
  Comment 560 block B36 null  <||@
  Comment 560 310 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 560 312 r11|DWORD = MOVE input: int[-51995|0xffffffffffff34e5]  <||@
  Comment 566 314 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 571 316 JUMP ~[] destination: B36 -> B37  <||@
  Comment 571 block B37 null  <||@
  Comment 571 318 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 571 320 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 578 322 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 585 324 DEOPT info [bci:48]  <||@
  Comment 585 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 590 [rcx:0, rdx:0, stack:16]at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1044) [bci: 48, duringCall: false, rethrow: false]
              |0                  |1  |2  |3             |4             |5  |6  |7          |8          |9  |10  |11  |12  |13 
     locals:  |stack:32|QWORD[.]  |-  |-  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |rax|DWORD  |r10|DWORD  |-  |-   |-   |-   |-    <||@
  Comment 591 block B1 null  <||@
  Comment 591 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 591 20 r10|DWORD = MOVE input: int[-68883|0xfffffffffffef2ed]  <||@
  Comment 597 24 JUMP ~[] destination: B1 -> B4  <||@
  Comment 597 block B4 null  <||@
  Comment 597 44 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 597 22 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 602 46 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 609 48 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 616 50 DEOPT info [bci:0]  <||@
  Comment 616 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 621 [rcx:0, rdx:0, stack:16]at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1029) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1             |2             |3  |4  |5  |6  |7  |8  |9  |10  |11  |12  |13 
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-    <||@
  Comment 622 block B21 null  <||@
  Comment 622 196 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 622 198 r11|DWORD = MOVE input: int[-58643|0xffffffffffff1aed]  <||@
  Comment 628 200 JUMP ~[] destination: B21 -> B37  <||@
  Comment 630 block B33 null  <||@
  Comment 630 290 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 630 292 r10|DWORD = MOVE input: int[-61467|0xffffffffffff0fe5]  <||@
  Comment 636 294 JUMP ~[] destination: B33 -> B35  <||@
  Comment 636 block B35 null  <||@
  Comment 636 302 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 636 304 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 643 306 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 650 308 DEOPT info [bci:149]  <||@
  Comment 650 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 655 [rcx:0, rdx:0, rsi:0]at sun.misc.FDBigInteger.addAndCmp(FDBigInteger.java:1061) [bci: 149, duringCall: false, rethrow: false]
              |0             |1  |2  |3             |4             |5  |6  |7          |8  |9         |10         |11  |12  |13 
     locals:  |rsi|QWORD[.]  |-  |-  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |rax|DWORD  |-  |r8|DWORD  |rbx|QWORD  |-   |-   |-    <||@
  Comment 656 block B22 null  <||@
  Comment 656 202 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 656 204 r11|DWORD = MOVE input: int[-56859|0xffffffffffff21e5]  <||@
  Comment 662 206 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 667 208 JUMP ~[] destination: B22 -> B37  <||@
  Comment 669 block B34 null  <||@
  Comment 669 296 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 669 298 r10|DWORD = MOVE input: int[-58899|0xffffffffffff19ed]  <||@
  Comment 675 300 JUMP ~[] destination: B34 -> B35  <||@
  Comment 677 block B13 null  <||@
  Comment 677 118 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 677 120 r11|DWORD = MOVE input: int[-48659|0xffffffffffff41ed]  <||@
  Comment 683 122 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 688 124 JUMP ~[] destination: B13 -> B37  <||@
  Comment 690 block B3 null  <||@
  Comment 690 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 690 38 r10|DWORD = MOVE input: int[-69139|0xfffffffffffef1ed]  <||@
  Comment 696 42 JUMP ~[] destination: B3 -> B4  <||@
  Comment 698 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 698 4  <||@
  Comment 704 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 704 5  <||@
  HexCodeFile>>> <|@
end_nmethod
