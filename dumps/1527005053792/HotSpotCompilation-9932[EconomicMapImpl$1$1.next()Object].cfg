begin_compilation
  name " HotSpotCompilation-9932[org.graalvm.collections.EconomicMapImpl$1$1.next()]"
  method "HotSpotCompilation-9932[org.graalvm.collections.EconomicMapImpl$1$1.next()]"
  date 1527005231215
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a200 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a200  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lorg/graalvm/collections/EconomicMapImpl$1$1;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v210 v208 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a200 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a200 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$1$1.this$1
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 1]
nullCheck: false
stamp: n# Lorg/graalvm/collections/EconomicMapImpl$1;
=== Inputs ===
stateBefore: - 
guard: - 
address: v208 
=== Succesors ===
next: a201 
=== Usages ===
v209 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v208 #next: a201  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<EconomicMapImpl$1$1.next()>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 693
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - 
=== Succesors ===
=== Usages ===
v173 a201 a202 i203 v206 v216 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 -  <|@  <|@
f <@~|@floating>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a200 
=== Succesors ===
=== Usages ===
a201 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a200  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a201 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$1.this$0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 4]
nullCheck: true
stamp: n# Lorg/graalvm/collections/EconomicMapImpl;
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v209 
=== Succesors ===
next: a202 
=== Usages ===
v211 
=== Predecessor ===
a200 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v209 #next: a202  <|@  <|@
f <@~|@floating>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a201 
=== Succesors ===
=== Usages ===
a202 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a201  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a202 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.access$600(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 11]
nullCheck: true
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v211 
=== Succesors ===
next: i203 
=== Usages ===
a83 v212 
=== Predecessor ===
a201 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v211 #next: i203  <|@  <|@
f <@~|@floating>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a202 
=== Succesors ===
=== Usages ===
i203 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a202  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i203 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.access$600(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 11]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v212 
=== Succesors ===
next: i204 
=== Usages ===
v89 
=== Predecessor ===
a202 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v212 #next: i204  <|@  <|@
f <@~|@floating>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i204 v107 v109 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i204 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$SparseMapIterator.current
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 8]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v210 
=== Succesors ===
next: v136 
=== Usages ===
i50 i23 
=== Predecessor ===
i203 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v210 #next: v136  <|@  <|@
f <@~|@floating>@ <|@
tid i22 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:698) [bci: 54]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i23 i50 i51 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i50 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.access$600(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 11]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i204 
y: i22 
=== Succesors ===
=== Usages ===
i51 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i204 y: i22  <|@  <|@
f <@~|@floating>@ <|@
tid i51 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.access$600(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 11]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i50 
y: i22 
=== Succesors ===
=== Usages ===
v213 v89 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i50 y: i22  <|@  <|@
f <@~|@floating>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.access$600(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 11]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i51 
y: i203 
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i51 y: i203  <|@  <|@
f <@*|@fixed>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.access$600(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 11]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v89 
=== Succesors ===
trueSuccessor: v133 
falseSuccessor: v135 
=== Usages ===
=== Predecessor ===
i204 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v89 #trueSuccessor: v133 #falseSuccessor: v135  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.access$600(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: a205 
=== Usages ===
a205 
=== Predecessor ===
v136 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a205  <|@  <|@
f <@~|@floating>@ <|@
tid a83 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.access$600(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 11]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a202 
=== Succesors ===
=== Usages ===
v213 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a202  <|@  <|@
f <@~|@floating>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a83 
index: i51 
=== Succesors ===
=== Usages ===
a205 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a83 index: i51  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a205 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.access$600(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 11]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v133 
address: v213 
=== Succesors ===
next: v206 
=== Usages ===
a99 v215 v214 
=== Predecessor ===
v133 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v133 address: v213 #next: v206  <|@  <|@
f <@~|@floating>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a205 
=== Succesors ===
=== Usages ===
v206 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a205  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$600(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 11]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v215 
=== Succesors ===
next: v189 
=== Usages ===
v199 
=== Predecessor ===
a205 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v215 #next: v189  <|@  <|@
f <@~|@floating>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$600(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 11]
rawvalue: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v199 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$600(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 11]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v206 
y: v198 
=== Succesors ===
=== Usages ===
v189 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v206 y: v198  <|@  <|@
f <@~|@floating>@ <|@
tid i23 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:698) [bci: 55]
stamp: i32
=== Inputs ===
x: i204 
y: i22 
=== Succesors ===
=== Usages ===
v107 v109 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i204 y: i22  <|@  <|@
f <@*|@fixed>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$600(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 11]
stamp: void
trueSuccessorProbability: 0.07793799260168521
=== Inputs ===
condition: v199 
=== Succesors ===
trueSuccessor: v187 
falseSuccessor: v186 
=== Usages ===
=== Predecessor ===
v206 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v199 #trueSuccessor: v187 #falseSuccessor: v186  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4590280444894188192
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$600(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: a207 
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a207  <|@  <|@
f <@~|@floating>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a205 
=== Succesors ===
=== Usages ===
a207 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a205  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a207 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$CollisionLink.value
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:801) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.access$600(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 11]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v214 
=== Succesors ===
next: v216 
=== Usages ===
a105 v216 
=== Predecessor ===
v187 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v214 #next: v216  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
object: a207 
=== Succesors ===
next: v107 
=== Usages ===
=== Predecessor ===
a207 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?2 object: a207 #next: v107  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: EconomicMapImpl$SparseMapIterator.current
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:698) [bci: 56]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v210 
value: i23 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v64 
=== Usages ===
=== Predecessor ===
v216 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v210 value: i23 stateAfter: - lastLocationAccess: - #next: v64  <|@  <|@
f <@~|@floating>@ <|@
tid a105 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:801) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.access$600(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 11]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a207 
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a207  <|@  <|@
f <@*|@fixed>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a105 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v107 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a105 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4606480415771139500
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$600(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v109 
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v109  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: EconomicMapImpl$SparseMapIterator.current
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:698) [bci: 56]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v210 
value: i23 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v65 
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v210 value: i23 stateAfter: - lastLocationAccess: - #next: v65  <|@  <|@
f <@~|@floating>@ <|@
tid a99 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.access$600(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 11]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a205 
=== Succesors ===
=== Usages ===
v65 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a205  <|@  <|@
f <@*|@fixed>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a99 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v109 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a99 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.access$600(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v173 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v173  <|@  <|@
f <@~|@floating>@ <|@
tid a170 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v173 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i181 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -23067
stableDimension: 0
stamp: i32 [-23067] ⇊00000000ffffa5e5 ⇈00000000ffffa5e5
stampKind: i32
value: int[-23067|0xffffffffffffa5e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v173 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i181 
speculation: a170 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v135 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i181 speculation: a170  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a200 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a200  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lorg/graalvm/collections/EconomicMapImpl$1$1;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v210 v208 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v208 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a200 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a200 <|@
result v1|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$1$1.this$1
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 1]
nullCheck: false
stamp: n# Lorg/graalvm/collections/EconomicMapImpl$1;
=== Inputs ===
stateBefore: - 
guard: - 
address: v208 
=== Succesors ===
next: a201 
=== Usages ===
v209 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v208 #next: a201  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<EconomicMapImpl$1$1.next()>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 693
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - 
=== Succesors ===
=== Usages ===
v173 a201 a202 i203 v206 v216 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 -  <|@  <|@
f <@~|@floating>@ <|@
tid v209 <|@
result [v1|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a200 
=== Succesors ===
=== Usages ===
a201 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a200  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a201 <|@
result v2|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$1.this$0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 4]
nullCheck: true
stamp: n# Lorg/graalvm/collections/EconomicMapImpl;
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v209 
=== Succesors ===
next: a202 
=== Usages ===
v211 
=== Predecessor ===
a200 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v209 #next: a202  <|@  <|@
f <@~|@floating>@ <|@
tid v211 <|@
result [v2|DWORD[.] * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a201 
=== Succesors ===
=== Usages ===
a202 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a201  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a202 <|@
result v3|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.access$600(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 11]
nullCheck: true
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v211 
=== Succesors ===
next: i203 
=== Usages ===
a83 v212 
=== Predecessor ===
a201 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v211 #next: i203  <|@  <|@
f <@~|@floating>@ <|@
tid v212 <|@
result [v3|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a202 
=== Succesors ===
=== Usages ===
i203 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a202  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i203 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.access$600(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 11]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v212 
=== Succesors ===
next: i204 
=== Usages ===
v89 
=== Predecessor ===
a202 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v212 #next: i204  <|@  <|@
f <@~|@floating>@ <|@
tid v210 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i204 v107 v109 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i204 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$SparseMapIterator.current
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 8]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v210 
=== Succesors ===
next: v136 
=== Usages ===
i50 i23 
=== Predecessor ===
i203 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v210 #next: v136  <|@  <|@
f <@~|@floating>@ <|@
tid i22 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:698) [bci: 54]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i23 i50 i51 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i50 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.access$600(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 11]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i204 
y: i22 
=== Succesors ===
=== Usages ===
i51 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i204 y: i22  <|@  <|@
f <@~|@floating>@ <|@
tid i51 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.access$600(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 11]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i50 
y: i22 
=== Succesors ===
=== Usages ===
v213 v89 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i50 y: i22  <|@  <|@
f <@~|@floating>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.access$600(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 11]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i51 
y: i203 
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i51 y: i203  <|@  <|@
f <@*|@fixed>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.access$600(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 11]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v89 
=== Succesors ===
trueSuccessor: v133 
falseSuccessor: v135 
=== Usages ===
=== Predecessor ===
i204 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v89 #trueSuccessor: v133 #falseSuccessor: v135  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@182d7ea9 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v2|DWORD[.] = MOV [v1|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v3|DWORD[.] = MOV [v2|DWORD[.] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v4|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = SHL v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = INC v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.access$600(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: a205 
=== Usages ===
a205 
=== Predecessor ===
v136 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a205  <|@  <|@
f <@~|@floating>@ <|@
tid a83 <|@
result v8|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.access$600(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 11]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a202 
=== Succesors ===
=== Usages ===
v213 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a202  <|@  <|@
f <@~|@floating>@ <|@
tid v213 <|@
result [v8|QWORD[.] + v7|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a83 
index: i51 
=== Succesors ===
=== Usages ===
a205 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a83 index: i51  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a205 <|@
result v9|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.access$600(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 11]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v133 
address: v213 
=== Succesors ===
next: v206 
=== Usages ===
a99 v215 v214 
=== Predecessor ===
v133 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v133 address: v213 #next: v206  <|@  <|@
f <@~|@floating>@ <|@
tid v215 <|@
result [v9|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a205 
=== Succesors ===
=== Usages ===
v206 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a205  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v206 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$600(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 11]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v215 
=== Succesors ===
next: v189 
=== Usages ===
v199 
=== Predecessor ===
a205 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v215 #next: v189  <|@  <|@
f <@~|@floating>@ <|@
tid v198 <|@
result meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$600(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 11]
rawvalue: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v199 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v199 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$600(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 11]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v206 
y: v198 
=== Succesors ===
=== Usages ===
v189 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v206 y: v198  <|@  <|@
f <@~|@floating>@ <|@
tid i23 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:698) [bci: 55]
stamp: i32
=== Inputs ===
x: i204 
y: i22 
=== Succesors ===
=== Usages ===
v107 v109 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i204 y: i22  <|@  <|@
f <@*|@fixed>@ <|@
tid v189 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$600(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 11]
stamp: void
trueSuccessorProbability: 0.07793799260168521
=== Inputs ===
condition: v199 
=== Succesors ===
trueSuccessor: v187 
falseSuccessor: v186 
=== Usages ===
=== Predecessor ===
v206 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v199 #trueSuccessor: v187 #falseSuccessor: v186  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5bc18501 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[.] = MOV [v8|QWORD[.] + v7|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = INC v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction CMP [v9|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.07793799260168521 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4590280444894188192
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$600(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: a207 
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a207  <|@  <|@
f <@~|@floating>@ <|@
tid v214 <|@
result [v9|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a205 
=== Succesors ===
=== Usages ===
a207 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a205  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a207 <|@
result v11|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$CollisionLink.value
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:801) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.access$600(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 11]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v214 
=== Succesors ===
next: v216 
=== Usages ===
a105 v216 
=== Predecessor ===
v187 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v214 #next: v216  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
object: a207 
=== Succesors ===
next: v107 
=== Usages ===
=== Predecessor ===
a207 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?2 object: a207 #next: v107  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: EconomicMapImpl$SparseMapIterator.current
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:698) [bci: 56]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v210 
value: i23 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v64 
=== Usages ===
=== Predecessor ===
v216 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v210 value: i23 stateAfter: - lastLocationAccess: - #next: v64  <|@  <|@
f <@~|@floating>@ <|@
tid a105 <|@
result v12|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:801) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.access$600(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 11]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a207 
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a207  <|@  <|@
f <@*|@fixed>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a105 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v107 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a105 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[.] = MOV [v9|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v11|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5bc18501 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4606480415771139500
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$600(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v109 
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v109  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: EconomicMapImpl$SparseMapIterator.current
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:698) [bci: 56]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v210 
value: i23 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v65 
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v210 value: i23 stateAfter: - lastLocationAccess: - #next: v65  <|@  <|@
f <@~|@floating>@ <|@
tid a99 <|@
result v13|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.access$600(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 11]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a205 
=== Succesors ===
=== Usages ===
v65 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a205  <|@  <|@
f <@*|@fixed>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a99 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v109 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a99 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5bc18501 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.access$600(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v173 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v173  <|@  <|@
f <@~|@floating>@ <|@
tid a170 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v173 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i181 <|@
result int[-23067|0xffffffffffffa5e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -23067
stableDimension: 0
stamp: i32 [-23067] ⇊00000000ffffa5e5 ⇈00000000ffffa5e5
stampKind: i32
value: int[-23067|0xffffffffffffa5e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v173 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i181 
speculation: a170 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v135 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i181 speculation: a170  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -23067 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@182d7ea9 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v2|DWORD[.] = MOV [v1|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v3|DWORD[.] = MOV [v2|DWORD[.] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v4|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = SHL v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = INC v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5bc18501 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[.] = MOV [v8|QWORD[.] + v7|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = INC v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction CMP [v9|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.07793799260168521 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4606480415771139500
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5bc18501 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4590280444894188192
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[.] = MOV [v9|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v11|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5bc18501 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -23067 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #0          // this$1:org.graalvm.collections.EconomicMapImpl$1
     4: getfield      #1          // org.graalvm.collections.EconomicMapImpl$1.this$0:org.graalvm.collections.EconomicMapImpl
     7: aload_0       
     8: getfield      #3          // org.graalvm.collections.EconomicMapImpl$SparseMapIterator.current:int
    11: invokestatic  #4          // org.graalvm.collections.EconomicMapImpl.access$600:(org.graalvm.collections.EconomicMapImpl, int)java.lang.Object
    14: astore_1      
    15: aload_1       
    16: ifnonnull     49
    19: aload_0       
    20: getfield      #0          // this$1:org.graalvm.collections.EconomicMapImpl$1
    23: getfield      #1          // org.graalvm.collections.EconomicMapImpl$1.this$0:org.graalvm.collections.EconomicMapImpl
    26: aload_0       
    27: getfield      #3          // org.graalvm.collections.EconomicMapImpl$SparseMapIterator.current:int
    30: invokestatic  #5          // org.graalvm.collections.EconomicMapImpl.access$200:(org.graalvm.collections.EconomicMapImpl, int)java.lang.Object
    33: ifnonnull     49
    36: aload_0       
    37: dup           
    38: getfield      #3          // org.graalvm.collections.EconomicMapImpl$SparseMapIterator.current:int
    41: iconst_1      
    42: iadd          
    43: putfield      #3          // org.graalvm.collections.EconomicMapImpl$SparseMapIterator.current:int
    46: goto          0
    49: aload_0       
    50: dup           
    51: getfield      #3          // org.graalvm.collections.EconomicMapImpl$SparseMapIterator.current:int
    54: iconst_1      
    55: iadd          
    56: putfield      #3          // org.graalvm.collections.EconomicMapImpl$SparseMapIterator.current:int
    59: goto          62
    62: aload_1       
    63: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@182d7ea9 slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD[.] = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD[.] = MOV [rax|DWORD[.] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   14  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   16  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   18  <|@ instruction r8|DWORD = SHL r11|DWORD size: DWORD <|@ <|@
      nr   20  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr   22  <|@ instruction CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5bc18501 encoding: base: 0 shift: 3 <|@ <|@
      nr   30  <|@ instruction r10|DWORD[.] = MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   32  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@reference-map: [rsi:0, r10:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction CMP [r10|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   36  <|@ instruction BRANCH trueDestinationProbability: 0.07793799260168521 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4606480415771139500
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5bc18501 encoding: base: 0 shift: 3 <|@ <|@
      nr   44  <|@ instruction rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4590280444894188192
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction rax|DWORD[.] = MOV [r10|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   52  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   54  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr   56  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5bc18501 encoding: base: 0 shift: 3 <|@ <|@
      nr   60  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction MOV [r15|QWORD + 668] y: -23067 size: DWORD <|@ <|@
      nr   66  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   68  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #0          // this$1:org.graalvm.collections.EconomicMapImpl$1
     4: getfield      #1          // org.graalvm.collections.EconomicMapImpl$1.this$0:org.graalvm.collections.EconomicMapImpl
     7: aload_0       
     8: getfield      #3          // org.graalvm.collections.EconomicMapImpl$SparseMapIterator.current:int
    11: invokestatic  #4          // org.graalvm.collections.EconomicMapImpl.access$600:(org.graalvm.collections.EconomicMapImpl, int)java.lang.Object
    14: astore_1      
    15: aload_1       
    16: ifnonnull     49
    19: aload_0       
    20: getfield      #0          // this$1:org.graalvm.collections.EconomicMapImpl$1
    23: getfield      #1          // org.graalvm.collections.EconomicMapImpl$1.this$0:org.graalvm.collections.EconomicMapImpl
    26: aload_0       
    27: getfield      #3          // org.graalvm.collections.EconomicMapImpl$SparseMapIterator.current:int
    30: invokestatic  #5          // org.graalvm.collections.EconomicMapImpl.access$200:(org.graalvm.collections.EconomicMapImpl, int)java.lang.Object
    33: ifnonnull     49
    36: aload_0       
    37: dup           
    38: getfield      #3          // org.graalvm.collections.EconomicMapImpl$SparseMapIterator.current:int
    41: iconst_1      
    42: iadd          
    43: putfield      #3          // org.graalvm.collections.EconomicMapImpl$SparseMapIterator.current:int
    46: goto          0
    49: aload_0       
    50: dup           
    51: getfield      #3          // org.graalvm.collections.EconomicMapImpl$SparseMapIterator.current:int
    54: iconst_1      
    55: iadd          
    56: putfield      #3          // org.graalvm.collections.EconomicMapImpl$SparseMapIterator.current:int
    59: goto          62
    62: aload_1       
    63: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@182d7ea9 slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD[.] = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD[.] = MOV [rax|DWORD[.] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   14  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   16  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   18  <|@ instruction r8|DWORD = SHL r11|DWORD size: DWORD <|@ <|@
      nr   20  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr   22  <|@ instruction CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5bc18501 encoding: base: 0 shift: 3 <|@ <|@
      nr   30  <|@ instruction r10|DWORD[.] = MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   32  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@reference-map: [rsi:0, r10:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction CMP [r10|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   36  <|@ instruction BRANCH trueDestinationProbability: 0.07793799260168521 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4606480415771139500
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5bc18501 encoding: base: 0 shift: 3 <|@ <|@
      nr   44  <|@ instruction rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4590280444894188192
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction rax|DWORD[.] = MOV [r10|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   52  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   54  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr   56  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5bc18501 encoding: base: 0 shift: 3 <|@ <|@
      nr   60  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction MOV [r15|QWORD + 668] y: -23067 size: DWORD <|@ <|@
      nr   66  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   68  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #0          // this$1:org.graalvm.collections.EconomicMapImpl$1
     4: getfield      #1          // org.graalvm.collections.EconomicMapImpl$1.this$0:org.graalvm.collections.EconomicMapImpl
     7: aload_0       
     8: getfield      #3          // org.graalvm.collections.EconomicMapImpl$SparseMapIterator.current:int
    11: invokestatic  #4          // org.graalvm.collections.EconomicMapImpl.access$600:(org.graalvm.collections.EconomicMapImpl, int)java.lang.Object
    14: astore_1      
    15: aload_1       
    16: ifnonnull     49
    19: aload_0       
    20: getfield      #0          // this$1:org.graalvm.collections.EconomicMapImpl$1
    23: getfield      #1          // org.graalvm.collections.EconomicMapImpl$1.this$0:org.graalvm.collections.EconomicMapImpl
    26: aload_0       
    27: getfield      #3          // org.graalvm.collections.EconomicMapImpl$SparseMapIterator.current:int
    30: invokestatic  #5          // org.graalvm.collections.EconomicMapImpl.access$200:(org.graalvm.collections.EconomicMapImpl, int)java.lang.Object
    33: ifnonnull     49
    36: aload_0       
    37: dup           
    38: getfield      #3          // org.graalvm.collections.EconomicMapImpl$SparseMapIterator.current:int
    41: iconst_1      
    42: iadd          
    43: putfield      #3          // org.graalvm.collections.EconomicMapImpl$SparseMapIterator.current:int
    46: goto          0
    49: aload_0       
    50: dup           
    51: getfield      #3          // org.graalvm.collections.EconomicMapImpl$SparseMapIterator.current:int
    54: iconst_1      
    55: iadd          
    56: putfield      #3          // org.graalvm.collections.EconomicMapImpl$SparseMapIterator.current:int
    59: goto          62
    62: aload_1       
    63: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24108b46148b04c50c0000008b04c518000000448b14c50c000000448b5e0c458bc341d1e041ffc0453bd00f866300000048c1e003468b54801041ffc342813cd508000000addeadde0f841e00000044895e0c49c1e203498bc2488b6c24104883c418850500000000c5f877c3428b04d510000000418504c444895e0c48c1e003488b6c24104883c418850500000000c5f877c341c7879c020000e5a5ffff4d89a7a8020000e80000000090e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@182d7ea9 slotKind: QWORD  <||@
  Comment 48 8 rax|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 51 10 rax|DWORD[.] = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 51 [rsi:0]at org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 51 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 58 12 rax|DWORD[.] = MOV [rax|DWORD[.] * 8 + 24] size: DWORD state [bci:0]  <||@
  Comment 58 [rsi:0]at org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 58 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 65 14 r10|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 65 [rax:0, rsi:0]at org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 65 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 73 16 r11|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 77 18 r8|DWORD = SHL r11|DWORD size: DWORD  <||@
  Comment 83 20 r8|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 86 22 CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 89 24 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4  <||@
  Comment 95 block B1 null  <||@
  Comment 95 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 95 28 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5bc18501 encoding: base: 0 shift: 3  <||@
  Comment 99 30 r10|DWORD[.] = MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD  <||@
  Comment 104 32 r11|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 107 34 CMP [r10|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} state [bci:0]  <||@
  Comment 107 [rsi:0, r10:0]at org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 107 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 107 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 119 36 BRANCH trueDestinationProbability: 0.07793799260168521 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 125 block B3 null  <||@
  Comment 125 38 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 125 40 MOV (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 129 42 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5bc18501 encoding: base: 0 shift: 3  <||@
  Comment 133 44 rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 136 46 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 145 12  <||@
  Comment 155 block B2 null  <||@
  Comment 155 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 155 50 rax|DWORD[.] = MOV [r10|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 163 52 NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:0]  <||@
  Comment 163 [rax:0, rsi:0]at org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 163 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 167 54 MOV (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 171 56 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5bc18501 encoding: base: 0 shift: 3  <||@
  Comment 175 60 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 184 12  <||@
  Comment 194 block B4 null  <||@
  Comment 194 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 194 64 MOV [r15|QWORD + 668] y: -23067 size: DWORD  <||@
  Comment 205 66 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 212 68 DEOPT info [bci:0]  <||@
  Comment 212 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 217 [rsi:0]at org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 218 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 218 4  <||@
  Comment 224 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 224 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9932[org.graalvm.collections.EconomicMapImpl$1$1.next()]"
  method "HotSpotCompilation-9932[org.graalvm.collections.EconomicMapImpl$1$1.next()]"
  date 1527005231252
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107c89860 448b560849c1e203493bc20f85efc5b7fe900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24108b46148b04c50c0000008b04c518000000448b14c50c000000448b5e0c458bc341d1e041ffc0453bd00f866300000048c1e003468b54801041ffc342813cd508000000bc3e01f80f841e00000044895e0c49c1e203498bc2488b6c24104883c41885050f57c0fcc5f877c3428b04d510000000418504c444895e0c48c1e003488b6c24104883c4188505e856c0fcc5f877c341c7879c020000e5a5ffff4d89a7a8020000e8c5dcb7fe90e8e10cfcfe90e8bbdbb7fe90f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@182d7ea9 slotKind: QWORD  <||@
  Comment 48 8 rax|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 51 10 rax|DWORD[.] = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 51 [rsi:0]at org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 51 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 58 12 rax|DWORD[.] = MOV [rax|DWORD[.] * 8 + 24] size: DWORD state [bci:0]  <||@
  Comment 58 [rsi:0]at org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 58 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 65 14 r10|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 65 [rax:0, rsi:0]at org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 65 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 73 16 r11|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 77 18 r8|DWORD = SHL r11|DWORD size: DWORD  <||@
  Comment 83 20 r8|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 86 22 CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 89 24 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B4  <||@
  Comment 95 block B1 null  <||@
  Comment 95 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 95 28 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5bc18501 encoding: base: 0 shift: 3  <||@
  Comment 99 30 r10|DWORD[.] = MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD  <||@
  Comment 104 32 r11|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 107 34 CMP [r10|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} state [bci:0]  <||@
  Comment 107 [rsi:0, r10:0]at org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 107 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 107 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 119 36 BRANCH trueDestinationProbability: 0.07793799260168521 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 125 block B3 null  <||@
  Comment 125 38 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 125 40 MOV (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 129 42 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5bc18501 encoding: base: 0 shift: 3  <||@
  Comment 133 44 rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 136 46 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 145 12  <||@
  Comment 155 block B2 null  <||@
  Comment 155 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 155 50 rax|DWORD[.] = MOV [r10|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 163 52 NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:0]  <||@
  Comment 163 [rax:0, rsi:0]at org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 163 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 167 54 MOV (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 171 56 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5bc18501 encoding: base: 0 shift: 3  <||@
  Comment 175 60 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 184 12  <||@
  Comment 194 block B4 null  <||@
  Comment 194 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 194 64 MOV [r15|QWORD + 668] y: -23067 size: DWORD  <||@
  Comment 205 66 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 212 68 DEOPT info [bci:0]  <||@
  Comment 212 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 217 [rsi:0]at org.graalvm.collections.EconomicMapImpl$1$1.next(EconomicMapImpl.java:693) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 218 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 218 4  <||@
  Comment 224 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 224 5  <||@
  HexCodeFile>>> <|@
end_nmethod
