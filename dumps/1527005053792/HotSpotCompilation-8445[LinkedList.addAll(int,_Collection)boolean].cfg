begin_compilation
  name " HotSpotCompilation-8445[java.util.LinkedList.addAll(int, Collection)]"
  method "HotSpotCompilation-8445[java.util.LinkedList.addAll(int, Collection)]"
  date 1527005160577
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B85" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v1132 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v1132  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/LinkedList;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 ?45 v1150 v1163 ?203 v1154 v1156 ?39 j811 j839 v1214 v1215 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v121 v124 v169 v16 v155 v166 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a -
uncheckedStamp: a Ljava/util/Collection;
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v1152 v1166 v1151 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<LinkedList.addAll(int, Collection)>
duringCall: false
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: LinkedList.java
sourceLine: 406
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v573 a724 a636 v1132 v1213 a1145 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3 - - - - - - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v1166 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
v1132 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1132 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v1166 
=== Succesors ===
next: v415 
=== Usages ===
v847 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v1166 #next: v415  <|@  <|@
f <@~|@floating>@ <|@
tid v846 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
rawvalue: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v847 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v847 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1132 
y: v846 
=== Succesors ===
=== Usages ===
v415 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1132 y: v846  <|@  <|@
f <@~|@floating>@ <|@
tid a20 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:415) [bci: 31]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a226 v573 ?45 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList; target_method=toArray target_method_class=Ljava/util/ArrayList; position=at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v847 
=== Succesors ===
trueSuccessor: v412 
falseSuccessor: v414 
=== Usages ===
=== Predecessor ===
v1132 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v847 #trueSuccessor: v412 #falseSuccessor: v414  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList; target_method=toArray target_method_class=Ljava/util/ArrayList; position=at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v419 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v419  <|@  <|@
f <@~|@floating>@ <|@
tid i12 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:410) [bci: 18]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v13 v121 v506 v800 a636 v756 v701 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 1]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.addAll(LinkedList.java:406) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i12 
=== Succesors ===
=== Usages ===
v419 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 1]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.addAll(LinkedList.java:406) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v121 
=== Succesors ===
trueSuccessor: v418 
falseSuccessor: v416 
=== Usages ===
=== Predecessor ===
v412 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v121 #trueSuccessor: v418 #falseSuccessor: v416  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B86" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 1]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.addAll(LinkedList.java:406) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v574 
=== Usages ===
=== Predecessor ===
v419 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v574  <|@  <|@
f <@~|@floating>@ <|@
tid i575 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -69651
stableDimension: 0
stamp: i32 [-69651] ⇊00000000fffeefed ⇈00000000fffeefed
stampKind: i32
value: int[-69651|0xfffffffffffeefed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i571 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v568 
=== Predecessor ===
v418 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 1]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.addAll(LinkedList.java:406) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1133 
=== Usages ===
=== Predecessor ===
v419 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1133  <|@  <|@
f <@~|@floating>@ <|@
tid v1150 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1133 v349 v355 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1133 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList.size
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 6]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.addAll(LinkedList.java:406) [bci: 2]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1150 
=== Succesors ===
next: v423 
=== Usages ===
v124 v16 i154 i165 i88 i1124 
=== Predecessor ===
v416 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1150 #next: v423  <|@  <|@
f <@~|@floating>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.addAll(LinkedList.java:406) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1133 
y: i2 
=== Succesors ===
=== Usages ===
v423 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1133 y: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.addAll(LinkedList.java:406) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v124 
=== Succesors ===
trueSuccessor: v422 
falseSuccessor: v420 
=== Usages ===
=== Predecessor ===
i1133 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v124 #trueSuccessor: v422 #falseSuccessor: v420  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B86" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.addAll(LinkedList.java:406) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v578 
=== Usages ===
=== Predecessor ===
v423 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v578  <|@  <|@
f <@~|@floating>@ <|@
tid i579 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -70675
stableDimension: 0
stamp: i32 [-70675] ⇊00000000fffeebed ⇈00000000fffeebed
stampKind: i32
value: int[-70675|0xfffffffffffeebed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i571 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v568 
=== Predecessor ===
v422 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.addAll(LinkedList.java:406) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1134 
=== Usages ===
=== Predecessor ===
v423 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1134  <|@  <|@
f <@~|@floating>@ <|@
tid v1151 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
a1134 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1134 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.elementData
nodeSourcePosition: at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 1]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1151 
=== Succesors ===
next: v1213 
=== Usages ===
v1167 v1213 v1153 v1164 
=== Predecessor ===
v420 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1151 #next: v1213  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1213 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
object: a1134 
=== Succesors ===
next: i1135 
=== Usages ===
=== Predecessor ===
a1134 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?4 object: a1134 #next: i1135  <|@  <|@
f <@~|@floating>@ <|@
tid v1152 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i1135 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1135 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.size
nodeSourcePosition: at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 5]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1152 
=== Succesors ===
next: v431 
=== Usages ===
j864 v13 i620 i548 ?39 ?45 ?203 ?39 v401 v213 i1124 v405 v40 ?203 i88 i387 v506 v522 v664 a636 i1125 
=== Predecessor ===
v1213 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1152 #next: v431  <|@  <|@
f <@~|@floating>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:410) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1135 
y: i12 
=== Succesors ===
=== Usages ===
v431 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1135 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:410) [bci: 18]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v13 
=== Succesors ===
trueSuccessor: v430 
falseSuccessor: v428 
=== Usages ===
=== Predecessor ===
i1135 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v13 #trueSuccessor: v430 #falseSuccessor: v428  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B86" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:410) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v582 
=== Usages ===
=== Predecessor ===
v431 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v582  <|@  <|@
f <@~|@floating>@ <|@
tid i583 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -75027
stableDimension: 0
stamp: i32 [-75027] ⇊00000000fffedaed ⇈00000000fffedaed
stampKind: i32
value: int[-75027|0xfffffffffffedaed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i571 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v582 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v568 
=== Predecessor ===
v430 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:410) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v512 
=== Usages ===
a1146 
=== Predecessor ===
v431 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v512  <|@  <|@
f <@~|@floating>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 22]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1135 
y: i12 
=== Succesors ===
=== Usages ===
v512 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1135 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 33]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v506 
=== Succesors ===
trueSuccessor: v511 
falseSuccessor: v507 
=== Usages ===
=== Predecessor ===
v428 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v506 #trueSuccessor: v511 #falseSuccessor: v507  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B86" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v588 
=== Usages ===
=== Predecessor ===
v512 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v588  <|@  <|@
f <@~|@floating>@ <|@
tid i589 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -132705
stableDimension: 0
stamp: i32 [-132705] ⇊00000000fffdf99f ⇈00000000fffdf99f
stampKind: i32
value: int[-132705|0xfffffffffffdf99f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i571 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v568 
=== Predecessor ===
v511 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 36]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: j623 
=== Usages ===
=== Predecessor ===
v512 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j623  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j623 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j661 
=== Usages ===
v1168 v1169 
=== Predecessor ===
v507 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j661  <|@  <|@
f <@~|@floating>@ <|@
tid v1168 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j623 
index: - 
=== Succesors ===
=== Usages ===
j661 v663 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j623 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j661 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1168 
=== Succesors ===
next: j662 
=== Usages ===
j627 v1170 v1171 a635 v1176 v1172 v1173 v1174 v1175 
=== Predecessor ===
j623 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1168 #next: j662  <|@  <|@
f <@~|@floating>@ <|@
tid v1169 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j623 
index: - 
=== Succesors ===
=== Usages ===
j662 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j623 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j662 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1169 
=== Succesors ===
next: v1136 
=== Usages ===
v628 
=== Predecessor ===
j661 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1169 #next: v1136  <|@  <|@
f <@~|@floating>@ <|@
tid v1167 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1134 
=== Succesors ===
=== Usages ===
v1136 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1134  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1136 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 6]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1167 
=== Succesors ===
next: v631 
=== Usages ===
v605 v668 
=== Predecessor ===
j662 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1167 #next: v631  <|@  <|@
f <@~|@floating>@ <|@
tid i314 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 79]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
a724 a770 v405 i620 i685 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i620 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i1135 
y: i314 
=== Succesors ===
=== Usages ===
i644 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1135 y: i314  <|@  <|@
f <@~|@floating>@ <|@
tid i643 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i644 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i644 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: i32 [-2147483645 - 2147483647] ⇊0000000000000003
=== Inputs ===
x: i620 
y: i643 
=== Succesors ===
=== Usages ===
i622 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i620 y: i643  <|@  <|@
f <@~|@floating>@ <|@
tid i621 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i622 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i622 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i644 
y: i621 
=== Succesors ===
=== Usages ===
j626 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i644 y: i621  <|@  <|@
f <@~|@floating>@ <|@
tid j626 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i622 
=== Succesors ===
=== Usages ===
j627 v1172 v1173 v1174 v1175 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i622  <|@  <|@
f <@~|@floating>@ <|@
tid j627 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: i64
=== Inputs ===
x: j626 
y: j661 
=== Succesors ===
=== Usages ===
v628 v663 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j626 y: j661  <|@  <|@
f <@~|@floating>@ <|@
tid v628 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j662 
y: j627 
=== Succesors ===
=== Usages ===
v631 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j662 y: j627  <|@  <|@
f <@~|@floating>@ <|@
tid j607 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v665 j690 v696 v875 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v631 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v628 
=== Succesors ===
trueSuccessor: v629 
falseSuccessor: v630 
=== Usages ===
=== Predecessor ===
v1136 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v628 #trueSuccessor: v629 #falseSuccessor: v630  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: a636 
=== Usages ===
=== Predecessor ===
v631 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a636  <|@  <|@
f <@~|@floating>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 6]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v1136 
=== Succesors ===
=== Usages ===
a636 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v1136  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a636 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?4 
arguments: v605 i1135 i12 
=== Succesors ===
next: v639 
=== Usages ===
a640 
=== Predecessor ===
v629 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?4 arguments: v605 i1135 i12 #next: v639  <|@  <|@
f <@*|@fixed>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v638 
=== Predecessor ===
a636 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v663 
=== Usages ===
=== Predecessor ===
v631 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v663  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v663 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1168 
value: j627 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v648 
=== Usages ===
=== Predecessor ===
v630 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1168 value: j627 stateAfter: - lastLocationAccess: - #next: v648  <|@  <|@
f <@~|@floating>@ <|@
tid v1172 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j626 
index: j661 
=== Succesors ===
=== Usages ===
v648 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j626 index: j661  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v648 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
address: v1172 
=== Succesors ===
next: v651 
=== Usages ===
=== Predecessor ===
v663 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1172 #next: v651  <|@  <|@
f <@~|@floating>@ <|@
tid v1173 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j626 
index: j661 
=== Succesors ===
=== Usages ===
v651 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j626 index: j661  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v651 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
address: v1173 
=== Succesors ===
next: v654 
=== Usages ===
=== Predecessor ===
v648 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1173 #next: v654  <|@  <|@
f <@~|@floating>@ <|@
tid v1174 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j626 
index: j661 
=== Succesors ===
=== Usages ===
v654 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j626 index: j661  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v654 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
address: v1174 
=== Succesors ===
next: v657 
=== Usages ===
=== Predecessor ===
v651 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1174 #next: v657  <|@  <|@
f <@~|@floating>@ <|@
tid v1175 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j626 
index: j661 
=== Succesors ===
=== Usages ===
v657 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j626 index: j661  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
address: v1175 
=== Succesors ===
next: v664 
=== Usages ===
=== Predecessor ===
v654 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1175 #next: v664  <|@  <|@
f <@~|@floating>@ <|@
tid v1170 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j661 
index: - 
=== Succesors ===
=== Usages ===
v664 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j661 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v664 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1170 
value: i1135 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v665 
=== Usages ===
=== Predecessor ===
v657 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1170 value: i1135 stateAfter: - lastLocationAccess: - #next: v665  <|@  <|@
f <@~|@floating>@ <|@
tid v1171 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j661 
index: - 
=== Succesors ===
=== Usages ===
v665 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j661 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v665 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1171 
value: j607 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v668 
=== Usages ===
=== Predecessor ===
v664 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1171 value: j607 stateAfter: - lastLocationAccess: - #next: v668  <|@  <|@
f <@~|@floating>@ <|@
tid v1176 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j661 
index: - 
=== Succesors ===
=== Usages ===
v668 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j661 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v668 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1176 
value: v1136 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v634 
=== Usages ===
=== Predecessor ===
v665 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1176 value: v1136 stateAfter: - lastLocationAccess: - #next: v634  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v634 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: a635 
=== Usages ===
=== Predecessor ===
v668 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a635  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a635 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j661 
=== Succesors ===
next: v637 
=== Usages ===
a640 
=== Predecessor ===
v634 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j661 #next: v637  <|@  <|@
f <@*|@fixed>@ <|@
tid v637 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v638 
=== Predecessor ===
a635 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a640 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v638 
values: a635 a636 
=== Succesors ===
=== Usages ===
v1200 a554 v1165 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v638 values: a635 a636  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v637 v639 
=== Succesors ===
next: v986 
=== Usages ===
a640 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v637 v639 #next: v986  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v986 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: i1137 
=== Usages ===
j987 j989 
=== Predecessor ===
v638 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: i1137  <|@  <|@
f <@~|@floating>@ <|@
tid v1153 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1134 
=== Succesors ===
=== Usages ===
i1137 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1134  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1137 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 2]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1153 
=== Succesors ===
next: v878 
=== Usages ===
i548 v522 
=== Predecessor ===
v986 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1153 #next: v878  <|@  <|@
f <@~|@floating>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:174) [bci: 19]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1137 
y: i1135 
=== Succesors ===
=== Usages ===
i548 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1137 y: i1135  <|@  <|@
f <@~|@floating>@ <|@
tid i548 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v522 
trueValue: i1137 
falseValue: i1135 
=== Succesors ===
=== Usages ===
j865 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v522 trueValue: i1137 falseValue: i1135  <|@  <|@
f <@~|@floating>@ <|@
tid j865 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i548 
=== Succesors ===
=== Usages ===
j1038 v1200 j869 v875 v983 j1025 j1031 j1035 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i548  <|@  <|@
f <@~|@floating>@ <|@
tid v875 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j865 
y: j607 
=== Succesors ===
=== Usages ===
v878 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j865 y: j607  <|@  <|@
f <@~|@floating>@ <|@
tid v1165 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a640 
index: - 
=== Succesors ===
=== Usages ===
j989 j683 j681 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a640 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j694 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j695 j1038 j1080 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1006 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1007 j1056 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1034 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1035 j1077 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j992 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1015 j1062 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1030 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1031 j1074 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j599 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1068 j1023 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1024 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1025 j1069 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j471 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1063 v1026 j1057 v1070 j1008 j1016 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v878 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v875 
=== Succesors ===
trueSuccessor: v876 
falseSuccessor: v877 
=== Usages ===
=== Predecessor ===
i1137 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v875 #trueSuccessor: v876 #falseSuccessor: v877  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B28" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v876 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v895 
=== Usages ===
=== Predecessor ===
v878 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v895  <|@  <|@
f <@*|@fixed>@ <|@
tid v895 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v896 
=== Predecessor ===
v876 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v877 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v881 
=== Usages ===
=== Predecessor ===
v878 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v881  <|@  <|@
f <@~|@floating>@ <|@
tid j1025 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j865 
y: j1024 
=== Succesors ===
=== Usages ===
v1026 v1028 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j865 y: j1024  <|@  <|@
f <@~|@floating>@ <|@
tid v1026 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1025 
y: j471 
=== Succesors ===
=== Usages ===
v881 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1025 y: j471  <|@  <|@
f <@~|@floating>@ <|@
tid j989 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v986 
address: v1165 
=== Succesors ===
=== Usages ===
v1201 v1203 v1205 v1207 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v986 address: v1165  <|@  <|@
f <@~|@floating>@ <|@
tid v1164 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1134 
=== Succesors ===
=== Usages ===
j987 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1134  <|@  <|@
f <@~|@floating>@ <|@
tid j987 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v986 
address: v1164 
=== Succesors ===
=== Usages ===
v1202 v1204 v1206 v1208 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v986 address: v1164  <|@  <|@
f <@*|@fixed>@ <|@
tid v881 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1026 
=== Succesors ===
trueSuccessor: v879 
falseSuccessor: v880 
=== Usages ===
=== Predecessor ===
v877 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1026 #trueSuccessor: v879 #falseSuccessor: v880  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v879 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v891 
=== Usages ===
=== Predecessor ===
v881 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v891  <|@  <|@
f <@*|@fixed>@ <|@
tid v891 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v892 
=== Predecessor ===
v879 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v880 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v882 
=== Usages ===
=== Predecessor ===
v881 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v882  <|@  <|@
f <@*|@fixed>@ <|@
tid v882 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v883 
=== Predecessor ===
v880 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B84" 
    successors "B18" "B84" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1016 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v883 
values: j471 j1023 
=== Succesors ===
=== Usages ===
v1208 j1023 v1207 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v883 values: j471 j1023  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v883 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v882 
=== Succesors ===
next: v1138 
=== Usages ===
v1138 v887 v888 j1016 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v882 #next: v1138  <|@  <|@
f <@~|@floating>@ <|@
tid v1208 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j987 
index: j1016 
=== Succesors ===
=== Usages ===
v1138 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j987 index: j1016  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1138 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v883 
address: v1208 
=== Succesors ===
next: v1095 
=== Usages ===
v1095 
=== Predecessor ===
v883 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v883 address: v1208 #next: v1095  <|@  <|@
f <@~|@floating>@ <|@
tid v1207 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j989 
index: j1016 
=== Succesors ===
=== Usages ===
v1095 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j989 index: j1016  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1095 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1207 
value: v1138 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v890 
=== Usages ===
=== Predecessor ===
v1138 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1207 value: v1138 stateAfter: - lastLocationAccess: - #next: v890  <|@  <|@
f <@~|@floating>@ <|@
tid j1023 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1016 
y: j599 
=== Succesors ===
=== Usages ===
j1008 j1016 v1028 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1016 y: j599  <|@  <|@
f <@~|@floating>@ <|@
tid v1028 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1025 
y: j1023 
=== Succesors ===
=== Usages ===
v890 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1025 y: j1023  <|@  <|@
f <@*|@fixed>@ <|@
tid v890 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1028 
=== Succesors ===
trueSuccessor: v887 
falseSuccessor: v889 
=== Usages ===
=== Predecessor ===
v1095 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1028 #trueSuccessor: v887 #falseSuccessor: v889  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v887 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v883 
=== Succesors ===
next: v893 
=== Usages ===
=== Predecessor ===
v890 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v883 #next: v893  <|@  <|@
f <@*|@fixed>@ <|@
tid v893 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v892 
=== Predecessor ===
v887 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1008 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v892 
values: j471 j1023 
=== Succesors ===
=== Usages ===
v1206 j1015 j999 v1032 v1205 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v892 values: j471 j1023  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v892 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v891 v893 
=== Succesors ===
next: v911 
=== Usages ===
j1008 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v891 v893 #next: v911  <|@  <|@
f <@~|@floating>@ <|@
tid j1031 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j865 
y: j1030 
=== Succesors ===
=== Usages ===
v1032 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j865 y: j1030  <|@  <|@
f <@~|@floating>@ <|@
tid v1032 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1031 
y: j1008 
=== Succesors ===
=== Usages ===
v911 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1031 y: j1008  <|@  <|@
f <@*|@fixed>@ <|@
tid v911 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1032 
=== Succesors ===
trueSuccessor: v910 
falseSuccessor: v909 
=== Usages ===
=== Predecessor ===
v892 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1032 #trueSuccessor: v910 #falseSuccessor: v909  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v910 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v914 
=== Usages ===
=== Predecessor ===
v911 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v914  <|@  <|@
f <@*|@fixed>@ <|@
tid v914 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v903 
=== Predecessor ===
v910 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v909 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1139 
=== Usages ===
v1139 
=== Predecessor ===
v911 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1139  <|@  <|@
f <@~|@floating>@ <|@
tid v1206 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j987 
index: j1008 
=== Succesors ===
=== Usages ===
v1139 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j987 index: j1008  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1139 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v909 
address: v1206 
=== Succesors ===
next: v1093 
=== Usages ===
v1093 
=== Predecessor ===
v909 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v909 address: v1206 #next: v1093  <|@  <|@
f <@~|@floating>@ <|@
tid v1205 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j989 
index: j1008 
=== Succesors ===
=== Usages ===
v1093 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j989 index: j1008  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1093 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1205 
value: v1139 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v902 
=== Usages ===
=== Predecessor ===
v1139 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1205 value: v1139 stateAfter: - lastLocationAccess: - #next: v902  <|@  <|@
f <@~|@floating>@ <|@
tid j1015 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1008 
y: j992 
=== Succesors ===
=== Usages ===
j999 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1008 y: j992  <|@  <|@
f <@*|@fixed>@ <|@
tid v902 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v903 
=== Predecessor ===
v1093 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j999 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v903 
values: j1015 j1008 
=== Succesors ===
=== Usages ===
v1204 j1007 j990 v1036 v1203 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v903 values: j1015 j1008  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v903 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v902 v914 
=== Succesors ===
next: v917 
=== Usages ===
j999 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v902 v914 #next: v917  <|@  <|@
f <@~|@floating>@ <|@
tid j1035 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j865 
y: j1034 
=== Succesors ===
=== Usages ===
v1036 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j865 y: j1034  <|@  <|@
f <@~|@floating>@ <|@
tid v1036 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1035 
y: j999 
=== Succesors ===
=== Usages ===
v917 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1035 y: j999  <|@  <|@
f <@*|@fixed>@ <|@
tid v917 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1036 
=== Succesors ===
trueSuccessor: v916 
falseSuccessor: v915 
=== Usages ===
=== Predecessor ===
v903 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1036 #trueSuccessor: v916 #falseSuccessor: v915  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v916 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v920 
=== Usages ===
=== Predecessor ===
v917 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v920  <|@  <|@
f <@*|@fixed>@ <|@
tid v920 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v906 
=== Predecessor ===
v916 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v915 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1140 
=== Usages ===
v1140 
=== Predecessor ===
v917 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1140  <|@  <|@
f <@~|@floating>@ <|@
tid v1204 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j987 
index: j999 
=== Succesors ===
=== Usages ===
v1140 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j987 index: j999  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1140 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v915 
address: v1204 
=== Succesors ===
next: v1091 
=== Usages ===
v1091 
=== Predecessor ===
v915 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v915 address: v1204 #next: v1091  <|@  <|@
f <@~|@floating>@ <|@
tid v1203 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j989 
index: j999 
=== Succesors ===
=== Usages ===
v1091 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j989 index: j999  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1091 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1203 
value: v1140 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v905 
=== Usages ===
=== Predecessor ===
v1140 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1203 value: v1140 stateAfter: - lastLocationAccess: - #next: v905  <|@  <|@
f <@~|@floating>@ <|@
tid j1007 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j999 
y: j1006 
=== Succesors ===
=== Usages ===
j990 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j999 y: j1006  <|@  <|@
f <@*|@fixed>@ <|@
tid v905 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v906 
=== Predecessor ===
v1091 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j990 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v906 
values: j1007 j999 
=== Succesors ===
=== Usages ===
v1202 v1039 v1201 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v906 values: j1007 j999  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v906 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v905 v920 
=== Succesors ===
next: v923 
=== Usages ===
j990 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v905 v920 #next: v923  <|@  <|@
f <@~|@floating>@ <|@
tid j1038 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j865 
y: j694 
=== Succesors ===
=== Usages ===
v1039 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j865 y: j694  <|@  <|@
f <@~|@floating>@ <|@
tid v1039 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1038 
y: j990 
=== Succesors ===
=== Usages ===
v923 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1038 y: j990  <|@  <|@
f <@*|@fixed>@ <|@
tid v923 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1039 
=== Succesors ===
trueSuccessor: v922 
falseSuccessor: v921 
=== Usages ===
=== Predecessor ===
v906 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1039 #trueSuccessor: v922 #falseSuccessor: v921  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v922 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v926 
=== Usages ===
=== Predecessor ===
v923 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v926  <|@  <|@
f <@*|@fixed>@ <|@
tid v926 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v896 
=== Predecessor ===
v922 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v921 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1141 
=== Usages ===
a1141 
=== Predecessor ===
v923 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1141  <|@  <|@
f <@~|@floating>@ <|@
tid v1202 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j987 
index: j990 
=== Succesors ===
=== Usages ===
a1141 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j987 index: j990  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1141 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v921 
address: v1202 
=== Succesors ===
next: v1089 
=== Usages ===
v1089 
=== Predecessor ===
v921 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v921 address: v1202 #next: v1089  <|@  <|@
f <@~|@floating>@ <|@
tid v1201 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j989 
index: j990 
=== Succesors ===
=== Usages ===
v1089 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j989 index: j990  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1089 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1201 
value: a1141 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v908 
=== Usages ===
=== Predecessor ===
a1141 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1201 value: a1141 stateAfter: - lastLocationAccess: - #next: v908  <|@  <|@
f <@*|@fixed>@ <|@
tid v908 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v896 
=== Predecessor ===
v1089 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B13" "B27" "B26" 
    successors "B29" "B44" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v896 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v895 v908 v926 
=== Succesors ===
next: v1042 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v895 v908 v926 #next: v1042  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1042 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v933 
=== Usages ===
j1044 
=== Predecessor ===
v896 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v933  <|@  <|@
f <@~|@floating>@ <|@
tid j864 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1135 
=== Succesors ===
=== Usages ===
j869 v983 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1135  <|@  <|@
f <@~|@floating>@ <|@
tid v983 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j865 
y: j864 
=== Succesors ===
=== Usages ===
v933 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j865 y: j864  <|@  <|@
f <@*|@fixed>@ <|@
tid v933 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v983 
=== Succesors ===
trueSuccessor: v932 
falseSuccessor: v931 
=== Usages ===
=== Predecessor ===
v1042 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v983 #trueSuccessor: v932 #falseSuccessor: v931  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v932 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v936 
=== Usages ===
=== Predecessor ===
v933 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v936  <|@  <|@
f <@~|@floating>@ <|@
tid v1200 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a640 
index: j865 
=== Succesors ===
=== Usages ===
j1044 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a640 index: j865  <|@  <|@
f <@~|@floating>@ <|@
tid j1044 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1042 
address: v1200 
=== Succesors ===
=== Usages ===
v1209 v1210 v1211 v1212 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1042 address: v1200  <|@  <|@
f <@~|@floating>@ <|@
tid j869 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j864 
y: j865 
=== Succesors ===
=== Usages ===
j1080 j1069 j1074 j1077 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j864 y: j865  <|@  <|@
f <@~|@floating>@ <|@
tid j1069 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j869 
y: j1024 
=== Succesors ===
=== Usages ===
v1070 v1072 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j869 y: j1024  <|@  <|@
f <@~|@floating>@ <|@
tid v1070 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1069 
y: j471 
=== Succesors ===
=== Usages ===
v936 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1069 y: j471  <|@  <|@
f <@*|@fixed>@ <|@
tid v936 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1070 
=== Succesors ===
trueSuccessor: v934 
falseSuccessor: v935 
=== Usages ===
=== Predecessor ===
v932 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1070 #trueSuccessor: v934 #falseSuccessor: v935  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v934 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v945 
=== Usages ===
=== Predecessor ===
v936 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v945  <|@  <|@
f <@*|@fixed>@ <|@
tid v945 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v946 
=== Predecessor ===
v934 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v935 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v937 
=== Usages ===
=== Predecessor ===
v936 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v937  <|@  <|@
f <@~|@floating>@ <|@
tid v1104 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null,null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n -,n -,n -,n -,n ->
value: SIMD<null,null,null,null,null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1103 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v937 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v938 
=== Predecessor ===
v935 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B43" 
    successors "B33" "B43" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1063 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v938 
values: j471 j1068 
=== Succesors ===
=== Usages ===
v1212 j1068 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v938 values: j471 j1068  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v938 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v937 
=== Succesors ===
next: v1103 
=== Usages ===
j1063 v941 v942 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v937 #next: v1103  <|@  <|@
f <@~|@floating>@ <|@
tid v1212 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j1044 
index: j1063 
=== Succesors ===
=== Usages ===
v1103 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1044 index: j1063  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1103 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1212 
value: v1104 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v944 
=== Usages ===
=== Predecessor ===
v938 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1212 value: v1104 stateAfter: - lastLocationAccess: - #next: v944  <|@  <|@
f <@~|@floating>@ <|@
tid j1068 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1063 
y: j599 
=== Succesors ===
=== Usages ===
j1057 j1063 v1072 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1063 y: j599  <|@  <|@
f <@~|@floating>@ <|@
tid v1072 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1069 
y: j1068 
=== Succesors ===
=== Usages ===
v944 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1069 y: j1068  <|@  <|@
f <@*|@fixed>@ <|@
tid v944 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1072 
=== Succesors ===
trueSuccessor: v941 
falseSuccessor: v943 
=== Usages ===
=== Predecessor ===
v1103 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1072 #trueSuccessor: v941 #falseSuccessor: v943  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v941 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v938 
=== Succesors ===
next: v947 
=== Usages ===
=== Predecessor ===
v944 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v938 #next: v947  <|@  <|@
f <@*|@fixed>@ <|@
tid v947 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v946 
=== Predecessor ===
v941 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1057 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v946 
values: j471 j1068 
=== Succesors ===
=== Usages ===
v1211 j1062 j1051 v1075 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v946 values: j471 j1068  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v946 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v945 v947 
=== Succesors ===
next: v965 
=== Usages ===
j1057 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v945 v947 #next: v965  <|@  <|@
f <@~|@floating>@ <|@
tid j1074 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j869 
y: j1030 
=== Succesors ===
=== Usages ===
v1075 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j869 y: j1030  <|@  <|@
f <@~|@floating>@ <|@
tid v1075 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1074 
y: j1057 
=== Succesors ===
=== Usages ===
v965 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1074 y: j1057  <|@  <|@
f <@*|@fixed>@ <|@
tid v965 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1075 
=== Succesors ===
trueSuccessor: v964 
falseSuccessor: v963 
=== Usages ===
=== Predecessor ===
v946 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1075 #trueSuccessor: v964 #falseSuccessor: v963  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v964 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v968 
=== Usages ===
=== Predecessor ===
v965 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v968  <|@  <|@
f <@*|@fixed>@ <|@
tid v968 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v957 
=== Predecessor ===
v964 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v963 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1102 
=== Usages ===
=== Predecessor ===
v965 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1102  <|@  <|@
f <@~|@floating>@ <|@
tid v1211 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j1044 
index: j1057 
=== Succesors ===
=== Usages ===
v1102 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1044 index: j1057  <|@  <|@
f <@~|@floating>@ <|@
tid v1107 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n ->
value: SIMD<null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1102 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1102 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1211 
value: v1107 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v956 
=== Usages ===
=== Predecessor ===
v963 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1211 value: v1107 stateAfter: - lastLocationAccess: - #next: v956  <|@  <|@
f <@~|@floating>@ <|@
tid j1062 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1057 
y: j992 
=== Succesors ===
=== Usages ===
j1051 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1057 y: j992  <|@  <|@
f <@*|@fixed>@ <|@
tid v956 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v957 
=== Predecessor ===
v1102 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1051 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v957 
values: j1062 j1057 
=== Succesors ===
=== Usages ===
v1210 j1056 j1045 v1078 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v957 values: j1062 j1057  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v957 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v956 v968 
=== Succesors ===
next: v971 
=== Usages ===
j1051 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v956 v968 #next: v971  <|@  <|@
f <@~|@floating>@ <|@
tid j1077 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j869 
y: j1034 
=== Succesors ===
=== Usages ===
v1078 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j869 y: j1034  <|@  <|@
f <@~|@floating>@ <|@
tid v1078 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1077 
y: j1051 
=== Succesors ===
=== Usages ===
v971 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1077 y: j1051  <|@  <|@
f <@*|@fixed>@ <|@
tid v971 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1078 
=== Succesors ===
trueSuccessor: v970 
falseSuccessor: v969 
=== Usages ===
=== Predecessor ===
v957 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1078 #trueSuccessor: v970 #falseSuccessor: v969  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v970 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v974 
=== Usages ===
=== Predecessor ===
v971 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v974  <|@  <|@
f <@*|@fixed>@ <|@
tid v974 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v960 
=== Predecessor ===
v970 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v969 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1100 
=== Usages ===
=== Predecessor ===
v971 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1100  <|@  <|@
f <@~|@floating>@ <|@
tid v1210 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j1044 
index: j1051 
=== Succesors ===
=== Usages ===
v1100 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1044 index: j1051  <|@  <|@
f <@~|@floating>@ <|@
tid v1106 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL>
stampKind: <n -,n ->
value: SIMD<null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1100 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1100 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1210 
value: v1106 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v959 
=== Usages ===
=== Predecessor ===
v969 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1210 value: v1106 stateAfter: - lastLocationAccess: - #next: v959  <|@  <|@
f <@~|@floating>@ <|@
tid j1056 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1051 
y: j1006 
=== Succesors ===
=== Usages ===
j1045 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1051 y: j1006  <|@  <|@
f <@*|@fixed>@ <|@
tid v959 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v960 
=== Predecessor ===
v1100 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1045 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v960 
values: j1056 j1051 
=== Succesors ===
=== Usages ===
v1209 v1081 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v960 values: j1056 j1051  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v960 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v959 v974 
=== Succesors ===
next: v977 
=== Usages ===
j1045 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v959 v974 #next: v977  <|@  <|@
f <@~|@floating>@ <|@
tid j1080 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j869 
y: j694 
=== Succesors ===
=== Usages ===
v1081 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j869 y: j694  <|@  <|@
f <@~|@floating>@ <|@
tid v1081 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1080 
y: j1045 
=== Succesors ===
=== Usages ===
v977 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1080 y: j1045  <|@  <|@
f <@*|@fixed>@ <|@
tid v977 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1081 
=== Succesors ===
trueSuccessor: v976 
falseSuccessor: v975 
=== Usages ===
=== Predecessor ===
v960 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1081 #trueSuccessor: v976 #falseSuccessor: v975  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v976 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v980 
=== Usages ===
=== Predecessor ===
v977 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v980  <|@  <|@
f <@*|@fixed>@ <|@
tid v980 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v950 
=== Predecessor ===
v976 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v975 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1098 
=== Usages ===
=== Predecessor ===
v977 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1098  <|@  <|@
f <@~|@floating>@ <|@
tid v1209 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j1044 
index: j1045 
=== Succesors ===
=== Usages ===
v1098 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1044 index: j1045  <|@  <|@
f <@~|@floating>@ <|@
tid a1105 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1098 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1098 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1209 
value: a1105 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v962 
=== Usages ===
=== Predecessor ===
v975 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1209 value: a1105 stateAfter: - lastLocationAccess: - #next: v962  <|@  <|@
f <@*|@fixed>@ <|@
tid v962 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v950 
=== Predecessor ===
v1098 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B32" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v943 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v942 
=== Usages ===
=== Predecessor ===
v944 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v942  <|@  <|@
f <@*|@fixed>@ <|@
tid v942 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v938 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v943 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v938  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B45" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v931 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v949 
=== Usages ===
=== Predecessor ===
v933 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v949  <|@  <|@
f <@*|@fixed>@ <|@
tid v949 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v950 
=== Predecessor ===
v931 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B42" "B41" 
    successors "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v950 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v949 v962 v980 
=== Succesors ===
next: j681 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v949 v962 v980 #next: j681  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j681 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToFirstArrayElement(WriteBarrierSnippets.java:376) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 20]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1165 
=== Succesors ===
next: j683 
=== Usages ===
j682 
=== Predecessor ===
v950 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1165 #next: j683  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j683 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:385) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1165 
=== Succesors ===
next: v691 
=== Usages ===
j687 
=== Predecessor ===
j681 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1165 #next: v691  <|@  <|@
f <@~|@floating>@ <|@
tid i164 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 45]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i165 i387 i1125 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1125 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i32
=== Inputs ===
x: i1135 
y: i164 
=== Succesors ===
=== Usages ===
i685 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1135 y: i164  <|@  <|@
f <@~|@floating>@ <|@
tid i685 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i1125 
y: i314 
=== Succesors ===
=== Usages ===
j686 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1125 y: i314  <|@  <|@
f <@~|@floating>@ <|@
tid j686 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 26]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
resultBits: 64
stamp: i64 [-2147483648 - 2147483644] ⇈fffffffffffffffc
=== Inputs ===
value: i685 
=== Succesors ===
=== Usages ===
j687 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i685  <|@  <|@
f <@~|@floating>@ <|@
tid j687 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 27]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: i64
=== Inputs ===
x: j683 
y: j686 
=== Succesors ===
=== Usages ===
j688 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j683 y: j686  <|@  <|@
f <@~|@floating>@ <|@
tid i680 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:157) [bci: 8]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j682 j688 j804 j812 j819 j826 j833 j840 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j688 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 34]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j687 
y: i680 
=== Succesors ===
=== Usages ===
j689 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j687 y: i680  <|@  <|@
f <@~|@floating>@ <|@
tid j682 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 24]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j681 
y: i680 
=== Succesors ===
=== Usages ===
j689 j704 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j681 y: i680  <|@  <|@
f <@~|@floating>@ <|@
tid j689 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 41]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: i64 [-36028797018963967 - 36028797018963967]
=== Inputs ===
x: j688 
y: j682 
=== Succesors ===
=== Usages ===
j690 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j688 y: j682  <|@  <|@
f <@~|@floating>@ <|@
tid j690 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 43]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: i64 [-36028797018963966 - 36028797018963968]
=== Inputs ===
x: j689 
y: j607 
=== Succesors ===
=== Usages ===
j693 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j689 y: j607  <|@  <|@
f <@~|@floating>@ <|@
tid j703 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:158) [bci: 12]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j704 v1186 v1187 v1188 v1189 v1190 v1191 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v691 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v692 
=== Predecessor ===
j683 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B83" 
    successors "B47" "B83" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4611686018427387904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j693 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v692 
values: j690 j695 
=== Succesors ===
=== Usages ===
j695 v696 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v692 values: j690 j695  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v692 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v691 
=== Succesors ===
next: v699 
=== Usages ===
j693 v697 v702 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v691 #next: v699  <|@  <|@
f <@~|@floating>@ <|@
tid v696 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j693 
y: j607 
=== Succesors ===
=== Usages ===
v699 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j693 y: j607  <|@  <|@
f <@*|@fixed>@ <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v696 
=== Succesors ===
trueSuccessor: v697 
falseSuccessor: v698 
=== Usages ===
=== Predecessor ===
v692 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v696 #trueSuccessor: v697 #falseSuccessor: v698  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v697 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:165) [bci: 76]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v692 
=== Succesors ===
next: a554 
=== Usages ===
=== Predecessor ===
v699 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v692 #next: a554  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a554 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a640 
=== Succesors ===
next: v19 
=== Usages ===
?203 ?39 v1157 v1158 
=== Predecessor ===
v697 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a640 #next: v19  <|@  <|@
f <@~|@floating>@ <|@
tid i69 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 125]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i70 i92 v95 i154 v169 ?203 v213 i212 v242 a724 a770 i1126 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 72]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1135 
y: i69 
=== Succesors ===
=== Usages ===
v185 v235 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1135 y: i69  <|@  <|@
f <@~|@floating>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:414) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i1133 
=== Succesors ===
=== Usages ===
v19 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2 y: i1133  <|@  <|@
f <@~|@floating>@ <|@
tid i808 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 118]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v807 v815 v822 v829 v836 v843 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1154 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1144 v354 a1142 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:414) [bci: 28]
stamp: void
trueSuccessorProbability: 0.8910276052257723
=== Inputs ===
condition: v16 
=== Succesors ===
trueSuccessor: v17 
falseSuccessor: v18 
=== Usages ===
=== Predecessor ===
a554 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v16 #trueSuccessor: v17 #falseSuccessor: v18  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4606200882727019643
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:415) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1142 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1142  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1142 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList.last
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:416) [bci: 35]
nullCheck: false
stamp: n# Ljava/util/LinkedList$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1154 
=== Succesors ===
next: v235 
=== Usages ===
a498 a1130 a499 
=== Predecessor ===
v17 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1154 #next: v235  <|@  <|@
f <@*|@fixed>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 72]
stamp: void
trueSuccessorProbability: 0.1668076129583852
=== Inputs ===
condition: v213 
=== Succesors ===
trueSuccessor: v234 
falseSuccessor: v233 
=== Usages ===
=== Predecessor ===
a1142 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v213 #trueSuccessor: v234 #falseSuccessor: v233  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B80" 
    xhandlers
    flags 
    probability 4594522987161553770
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:432) [bci: 131]
stamp: void
=== Inputs ===
=== Succesors ===
next: v257 
=== Usages ===
=== Predecessor ===
v235 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v257  <|@  <|@
f <@*|@fixed>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v254 
=== Predecessor ===
v234 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B61" 
    xhandlers
    flags 
    probability 4604862141009265057
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 75]
stamp: void
=== Inputs ===
=== Succesors ===
next: v222 
=== Usages ===
=== Predecessor ===
v235 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v222  <|@  <|@
f <@~|@floating>@ <|@
tid a1130 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:575) [bci: 36]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
op: Uncompress
stamp: a# Ljava/util/LinkedList$Node;
=== Inputs ===
value: a1142 
=== Succesors ===
=== Usages ===
a224 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1142  <|@  <|@
f <@*|@fixed>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v219 
=== Predecessor ===
v233 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" "B55" 
    xhandlers
    flags 
    probability 4592516709247147048
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v158 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v158  <|@  <|@
f <@~|@floating>@ <|@
tid i154 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:569) [bci: 6]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
stamp: i32 [-1073741824 - 1073741823]
=== Inputs ===
x: i1133 
y: i69 
=== Succesors ===
=== Usages ===
v155 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i1133 y: i69  <|@  <|@
f <@~|@floating>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:569) [bci: 7]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i154 
=== Succesors ===
=== Usages ===
v158 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i154  <|@  <|@
f <@*|@fixed>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:569) [bci: 7]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
stamp: void
trueSuccessorProbability: 0.6958208146579323
=== Inputs ===
condition: v155 
=== Succesors ===
trueSuccessor: v156 
falseSuccessor: v157 
=== Usages ===
=== Predecessor ===
v18 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v155 #trueSuccessor: v156 #falseSuccessor: v157  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4590128206502600549
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:570) [bci: 10]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
stamp: void
=== Inputs ===
=== Succesors ===
next: v435 
=== Usages ===
=== Predecessor ===
v158 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v435  <|@  <|@
f <@~|@floating>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:571) [bci: 19]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i69 
=== Succesors ===
=== Usages ===
v435 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i69  <|@  <|@
f <@*|@fixed>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:571) [bci: 19]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v169 
=== Succesors ===
trueSuccessor: v432 
falseSuccessor: v434 
=== Usages ===
=== Predecessor ===
v156 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v169 #trueSuccessor: v432 #falseSuccessor: v434  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590128206502600549
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:571) [bci: 19]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1143 
=== Usages ===
=== Predecessor ===
v435 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1143  <|@  <|@
f <@~|@floating>@ <|@
tid v1156 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1143 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1143 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList.first
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:570) [bci: 11]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
nullCheck: false
stamp: n# Ljava/util/LinkedList$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1156 
=== Succesors ===
next: v171 
=== Usages ===
a306 
=== Predecessor ===
v432 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1156 #next: v171  <|@  <|@
f <@~|@floating>@ <|@
tid a306 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:570) [bci: 11]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
op: Uncompress
stamp: a# Ljava/util/LinkedList$Node;
=== Inputs ===
value: a1143 
=== Succesors ===
=== Usages ===
a172 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1143  <|@  <|@
f <@*|@fixed>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v170 
=== Predecessor ===
a1143 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B86" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:571) [bci: 19]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
stamp: void
=== Inputs ===
=== Succesors ===
next: v586 
=== Usages ===
=== Predecessor ===
v435 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v586  <|@  <|@
f <@~|@floating>@ <|@
tid i587 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -78611
stableDimension: 0
stamp: i32 [-78611] ⇊00000000fffecced ⇈00000000fffecced
stampKind: i32
value: int[-78611|0xfffffffffffecced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i571 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v568 
=== Predecessor ===
v434 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4584937826524887431
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:575) [bci: 35]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
stamp: void
=== Inputs ===
=== Succesors ===
next: v439 
=== Usages ===
=== Predecessor ===
v158 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v439  <|@  <|@
f <@~|@floating>@ <|@
tid i165 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 45]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
stamp: i32
=== Inputs ===
x: i1133 
y: i164 
=== Succesors ===
=== Usages ===
v166 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1133 y: i164  <|@  <|@
f <@~|@floating>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 49]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i165 
=== Succesors ===
=== Usages ===
v439 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i165  <|@  <|@
f <@*|@fixed>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 49]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v166 
=== Succesors ===
trueSuccessor: v438 
falseSuccessor: v436 
=== Usages ===
=== Predecessor ===
v157 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v166 #trueSuccessor: v438 #falseSuccessor: v436  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B86" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 49]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
stamp: void
=== Inputs ===
=== Succesors ===
next: v584 
=== Usages ===
=== Predecessor ===
v439 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v584  <|@  <|@
f <@~|@floating>@ <|@
tid i585 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -79379
stableDimension: 0
stamp: i32 [-79379] ⇊00000000fffec9ed ⇈00000000fffec9ed
stampKind: i32
value: int[-79379|0xfffffffffffec9ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i571 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v584 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v568 
=== Predecessor ===
v438 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4584937826524887431
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 49]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1144 
=== Usages ===
=== Predecessor ===
v439 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1144  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1144 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList.last
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:416) [bci: 35]
nullCheck: false
stamp: n# Ljava/util/LinkedList$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1154 
=== Succesors ===
next: v173 
=== Usages ===
a309 
=== Predecessor ===
v436 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1154 #next: v173  <|@  <|@
f <@~|@floating>@ <|@
tid a309 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:575) [bci: 36]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
op: Uncompress
stamp: a# Ljava/util/LinkedList$Node;
=== Inputs ===
value: a1144 
=== Succesors ===
=== Usages ===
a172 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1144  <|@  <|@
f <@*|@fixed>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v170 
=== Predecessor ===
a1144 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" "B57" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4592516709247147048
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a172 <|@
d <@d|@=== Debug Properties ===
stamp: a# Ljava/util/LinkedList$Node;
valueDescription: a -
=== Inputs ===
merge: v170 
values: a306 a309 
=== Succesors ===
=== Usages ===
a227 v1155 a226 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v170 values: a306 a309  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v171 v173 
=== Succesors ===
next: a1145 
=== Usages ===
a172 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v171 v173 #next: a1145  <|@  <|@
f <@~|@floating>@ <|@
tid v1155 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a172 
index: - 
=== Succesors ===
=== Usages ===
a1145 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a172 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1145 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList$Node.prev
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:419) [bci: 52]
nullCheck: true
stamp: n# Ljava/util/LinkedList$Node;
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v1155 
=== Succesors ===
next: v185 
=== Usages ===
a303 a498 a501 
=== Predecessor ===
v170 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v1155 #next: v185  <|@  <|@
f <@~|@floating>@ <|@
tid a303 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:419) [bci: 52]
op: Uncompress
stamp: a# Ljava/util/LinkedList$Node;
=== Inputs ===
value: a1145 
=== Succesors ===
=== Usages ===
a224 a210 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1145  <|@  <|@
f <@*|@fixed>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 72]
stamp: void
trueSuccessorProbability: 0.1668076129583852
=== Inputs ===
condition: v213 
=== Succesors ===
trueSuccessor: v184 
falseSuccessor: v183 
=== Usages ===
=== Predecessor ===
a1145 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v213 #trueSuccessor: v184 #falseSuccessor: v183  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B78" 
    xhandlers
    flags 
    probability 4580896507468241680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:432) [bci: 131]
stamp: void
=== Inputs ===
=== Succesors ===
next: v208 
=== Usages ===
=== Predecessor ===
v185 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v208  <|@  <|@
f <@*|@fixed>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v206 
=== Predecessor ===
v184 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4591206887732192612
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 75]
stamp: void
=== Inputs ===
=== Succesors ===
next: v220 
=== Usages ===
=== Predecessor ===
v185 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v220  <|@  <|@
f <@*|@fixed>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v219 
=== Predecessor ===
v183 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B50" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4605679949392893518
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a224 <|@
d <@d|@=== Debug Properties ===
stamp: a# Ljava/util/LinkedList$Node;
valueDescription: a -
=== Inputs ===
merge: v219 
values: a303 a1130 
=== Succesors ===
=== Usages ===
v187 j818 v1160 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v219 values: a303 a1130  <|@  <|@
f <@~|@floating>@ <|@
tid a226 <|@
d <@d|@=== Debug Properties ===
stamp: a# Ljava/util/LinkedList$Node;
valueDescription: a -
=== Inputs ===
merge: v219 
values: a172 a20 
=== Succesors ===
=== Usages ===
?39 a227 ?203 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v219 values: a172 a20  <|@  <|@
f <@~|@floating>@ <|@
tid a498 <|@
d <@d|@=== Debug Properties ===
stamp: n# Ljava/util/LinkedList$Node;
valueDescription: n -
=== Inputs ===
merge: v219 
values: a1145 a1142 
=== Succesors ===
=== Usages ===
v758 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v219 values: a1145 a1142  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v220 v222 
=== Succesors ===
next: j712 
=== Usages ===
a224 a226 a498 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v220 v222 #next: j712  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j712 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j728 
=== Usages ===
v1177 v1178 
=== Predecessor ===
v219 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j728  <|@  <|@
f <@~|@floating>@ <|@
tid v1177 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j712 
index: - 
=== Succesors ===
=== Usages ===
j728 v730 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j712 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j728 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1177 
=== Succesors ===
next: j729 
=== Usages ===
j848 j734 v1192 
=== Predecessor ===
j712 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1177 #next: j729  <|@  <|@
f <@~|@floating>@ <|@
tid v1178 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j712 
index: - 
=== Succesors ===
=== Usages ===
j729 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j712 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j729 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1178 
=== Succesors ===
next: v720 
=== Usages ===
v717 
=== Predecessor ===
j728 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1178 #next: v720  <|@  <|@
f <@~|@floating>@ <|@
tid j294 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:416) [bci: 35]
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j856 j848 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j848 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j728 
y: j294 
=== Succesors ===
=== Usages ===
v717 v730 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j728 y: j294  <|@  <|@
f <@~|@floating>@ <|@
tid v717 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j729 
y: j848 
=== Succesors ===
=== Usages ===
v720 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j729 y: j848  <|@  <|@
f <@~|@floating>@ <|@
tid v710 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a724 a770 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v720 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v717 
=== Succesors ===
trueSuccessor: v718 
falseSuccessor: v719 
=== Usages ===
=== Predecessor ===
j729 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v717 #trueSuccessor: v718 #falseSuccessor: v719  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    probability 4575956648883528390
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v718 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a724 
=== Usages ===
=== Predecessor ===
v720 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a724  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a724 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?4 
arguments: v710 i314 i69 
=== Succesors ===
next: j725 
=== Usages ===
j725 
=== Predecessor ===
v718 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?4 arguments: v710 i314 i69 #next: j725  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j725 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a724 
=== Succesors ===
next: v735 
=== Usages ===
j734 
=== Predecessor ===
a724 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a724 #next: v735  <|@  <|@
f <@*|@fixed>@ <|@
tid v735 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v732 
=== Predecessor ===
j725 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    probability 4605604902094417347
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v719 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v730 
=== Usages ===
=== Predecessor ===
v720 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v730  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v730 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1177 
value: j848 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v727 
=== Usages ===
=== Predecessor ===
v719 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1177 value: j848 stateAfter: - lastLocationAccess: - #next: v727  <|@  <|@
f <@~|@floating>@ <|@
tid v1192 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j728 
index: - 
=== Succesors ===
=== Usages ===
v727 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j728 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v727 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1192 
=== Succesors ===
next: v733 
=== Usages ===
=== Predecessor ===
v730 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1192 #next: v733  <|@  <|@
f <@*|@fixed>@ <|@
tid v733 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v732 
=== Predecessor ===
v727 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B62" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4605679949392893518
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j734 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v732 
values: j728 j725 
=== Succesors ===
=== Usages ===
v1180 v1179 a473 v1193 v1194 v1195 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v732 values: j728 j725  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v732 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v733 v735 
=== Succesors ===
next: a473 
=== Usages ===
j734 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v733 v735 #next: a473  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a473 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j734 
=== Succesors ===
next: j746 
=== Usages ===
a481 
=== Predecessor ===
v732 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j734 #next: j746  <|@  <|@
f <@~|@floating>@ <|@
tid v740 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j786 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j786 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v740 
=== Succesors ===
=== Usages ===
v1183 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v740  <|@  <|@
f <@~|@floating>@ <|@
tid v1183 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j786 
index: - 
=== Succesors ===
=== Usages ===
j790 j746 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j786 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j746 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1183 
=== Succesors ===
next: v747 
=== Usages ===
v747 
=== Predecessor ===
a473 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1183 #next: v747  <|@  <|@
f <@~|@floating>@ <|@
tid v1179 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j734 
index: - 
=== Succesors ===
=== Usages ===
v747 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j734 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v747 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1179 
value: j746 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v750 
=== Usages ===
=== Predecessor ===
j746 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1179 value: j746 stateAfter: - lastLocationAccess: - #next: v750  <|@  <|@
f <@~|@floating>@ <|@
tid v1180 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j734 
index: - 
=== Succesors ===
=== Usages ===
v750 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j734 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v852 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v750 v794 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1180 
value: v852 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1146 
=== Usages ===
=== Predecessor ===
v747 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1180 value: v852 stateAfter: - lastLocationAccess: - #next: a1146  <|@  <|@
f <@~|@floating>@ <|@
tid v1157 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a554 
index: - 
=== Succesors ===
=== Usages ===
a1146 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a554 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1146 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 79]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v428 
address: v1157 
=== Succesors ===
next: v754 
=== Usages ===
v754 
=== Predecessor ===
v750 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v428 address: v1157 #next: v754  <|@  <|@
f <@~|@floating>@ <|@
tid v1193 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j734 
index: - 
=== Succesors ===
=== Usages ===
v754 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j734 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v754 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1193 
value: a1146 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v756 
=== Usages ===
=== Predecessor ===
a1146 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1193 value: a1146 stateAfter: - lastLocationAccess: - #next: v756  <|@  <|@
f <@~|@floating>@ <|@
tid v1194 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j734 
index: - 
=== Succesors ===
=== Usages ===
v756 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j734 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v756 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1194 
value: i12 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v758 
=== Usages ===
=== Predecessor ===
v754 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1194 value: i12 stateAfter: - lastLocationAccess: - #next: v758  <|@  <|@
f <@~|@floating>@ <|@
tid v1195 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j734 
index: - 
=== Succesors ===
=== Usages ===
v758 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j734 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v758 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1195 
value: a498 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a481 
=== Usages ===
=== Predecessor ===
v756 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1195 value: a498 stateAfter: - lastLocationAccess: - #next: a481  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a481 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a473 
=== Succesors ===
next: v482 
=== Usages ===
a332 ?248 a211 
=== Predecessor ===
v758 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a473 #next: v482  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v190 
=== Usages ===
=== Predecessor ===
a481 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v190  <|@  <|@
f <@~|@floating>@ <|@
tid a332 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:426) [bci: 108]
op: Compress
stamp: n -
=== Inputs ===
value: a481 
=== Succesors ===
=== Usages ===
v333 v337 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a481  <|@  <|@
f <@~|@floating>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:425) [bci: 102]
stamp: void
=== Inputs ===
value: a224 
=== Succesors ===
=== Usages ===
v190 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a224  <|@  <|@
f <@*|@fixed>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:425) [bci: 102]
stamp: void
trueSuccessorProbability: 0.20020299699408295
=== Inputs ===
condition: v187 
=== Succesors ===
trueSuccessor: v188 
falseSuccessor: v189 
=== Usages ===
=== Predecessor ===
v482 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v187 #trueSuccessor: v188 #falseSuccessor: v189  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4595177897919030989
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:426) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
next: v333 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v333  <|@  <|@
f <@~|@floating>@ <|@
tid v1215 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v333 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: LinkedList.first
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:426) [bci: 108]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1215 
value: a332 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j811 
=== Usages ===
=== Predecessor ===
v188 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1215 value: a332 stateAfter: - lastLocationAccess: - #next: j811  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j811 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.LinkedList.addAll(LinkedList.java:426) [bci: 108]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v815 
=== Usages ===
j812 
=== Predecessor ===
v333 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v815  <|@  <|@
f <@~|@floating>@ <|@
tid j812 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.addAll(LinkedList.java:426) [bci: 108]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j811 
y: i680 
=== Succesors ===
=== Usages ===
v1187 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j811 y: i680  <|@  <|@
f <@~|@floating>@ <|@
tid v1187 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j812 
index: j703 
=== Succesors ===
=== Usages ===
v815 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j812 index: j703  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v815 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.addAll(LinkedList.java:426) [bci: 108]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1187 
value: i808 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v196 
=== Usages ===
=== Predecessor ===
j811 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1187 value: i808 stateAfter: - lastLocationAccess: - #next: v196  <|@  <|@
f <@*|@fixed>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
v815 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4604177479985769627
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: v337 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v337  <|@  <|@
f <@~|@floating>@ <|@
tid v1160 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a224 
index: - 
=== Succesors ===
=== Usages ===
v337 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a224 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: LinkedList$Node.next
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 118]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1160 
value: a332 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j818 
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1160 value: a332 stateAfter: - lastLocationAccess: - #next: j818  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j818 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 118]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a224 
=== Succesors ===
next: v822 
=== Usages ===
j819 
=== Predecessor ===
v337 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a224 #next: v822  <|@  <|@
f <@~|@floating>@ <|@
tid j819 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 118]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j818 
y: i680 
=== Succesors ===
=== Usages ===
v1188 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j818 y: i680  <|@  <|@
f <@~|@floating>@ <|@
tid v1188 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j819 
index: j703 
=== Succesors ===
=== Usages ===
v822 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j819 index: j703  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v822 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 118]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1188 
value: i808 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v197 
=== Usages ===
=== Predecessor ===
j818 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1188 value: i808 stateAfter: - lastLocationAccess: - #next: v197  <|@  <|@
f <@*|@fixed>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:429) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
v822 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4605679949392893518
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v196 v197 
=== Succesors ===
next: v1115 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v196 v197 #next: v1115  <|@  <|@
f <@~|@floating>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1135 
y: i314 
=== Succesors ===
=== Usages ===
v1115 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1135 y: i314  <|@  <|@
f <@*|@fixed>@ <|@
tid v1115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 79]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v405 
=== Succesors ===
trueSuccessor: v1111 
falseSuccessor: v1114 
=== Usages ===
=== Predecessor ===
v202 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v405 #trueSuccessor: v1111 #falseSuccessor: v1114  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" 
    xhandlers
    flags 
    probability 4601176349765523022
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1109 
=== Usages ===
=== Predecessor ===
v1115 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1109  <|@  <|@
f <@*|@fixed>@ <|@
tid v1109 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1108 
=== Predecessor ===
v1111 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B82" 
    xhandlers
    flags 
    probability 4601176349765523022
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1123 
=== Usages ===
=== Predecessor ===
v1115 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1123  <|@  <|@
f <@~|@floating>@ <|@
tid i387 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i32
=== Inputs ===
x: i1135 
y: i164 
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1135 y: i164  <|@  <|@
f <@~|@floating>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i387 
y: i1135 
=== Succesors ===
=== Usages ===
v1123 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i387 y: i1135  <|@  <|@
f <@*|@fixed>@ <|@
tid v1123 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 79]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v401 
=== Succesors ===
trueSuccessor: v1122 
falseSuccessor: v1119 
=== Usages ===
=== Predecessor ===
v1114 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v401 #trueSuccessor: v1122 #falseSuccessor: v1119  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" 
    xhandlers
    flags 
    probability 4601176349765523022
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1122 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1110 
=== Usages ===
=== Predecessor ===
v1123 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1110  <|@  <|@
f <@*|@fixed>@ <|@
tid v1110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1108 
=== Predecessor ===
v1122 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B68" "B70" 
    successors "B72" 
    xhandlers
    flags 
    probability 4605679949392893518
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 79]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1109 v1110 
=== Succesors ===
next: v35 
=== Usages ===
v399 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1109 v1110 #next: v35  <|@  <|@
f <@*|@fixed>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v36 
=== Predecessor ===
v1108 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B76" 
    successors "B73" "B77" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4616371718666829691
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i212 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v36 
values: i69 i70 
=== Succesors ===
=== Usages ===
?39 v40 v1158 i70 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v36 values: i69 i70  <|@  <|@
f <@~|@floating>@ <|@
tid a211 <|@
d <@d|@=== Debug Properties ===
stamp: a!# Ljava/util/LinkedList$Node;
valueDescription: a -
=== Inputs ===
merge: v36 
values: a481 a492 
=== Succesors ===
=== Usages ===
?39 a210 a500 v1159 j803 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v36 values: a481 a492  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.994930220897519
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 68]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v35 
=== Succesors ===
next: v46 
=== Usages ===
i212 a211 v43 v96 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v35 #next: v46  <|@  <|@
f <@~|@floating>@ <|@
tid a500 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:436) [bci: 156]
op: Compress
stamp: n!# Ljava/util/LinkedList$Node;
=== Inputs ===
value: a211 
=== Succesors ===
=== Usages ===
a501 v802 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a211  <|@  <|@
f <@~|@floating>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 72]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i212 
y: i1135 
=== Succesors ===
=== Usages ===
v46 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i212 y: i1135  <|@  <|@
f <@*|@fixed>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 72]
stamp: void
trueSuccessorProbability: 0.8331923870416148
=== Inputs ===
condition: v40 
=== Succesors ===
trueSuccessor: v41 
falseSuccessor: v43 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v40 #trueSuccessor: v41 #falseSuccessor: v43  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4614990598334941345
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 75]
stamp: void
=== Inputs ===
=== Succesors ===
next: j759 
=== Usages ===
v399 
=== Predecessor ===
v46 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j759  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j759 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j774 
=== Usages ===
v1181 v1182 
=== Predecessor ===
v41 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j774  <|@  <|@
f <@~|@floating>@ <|@
tid v1181 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j759 
index: - 
=== Succesors ===
=== Usages ===
j774 v776 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j759 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j774 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1181 
=== Succesors ===
next: j775 
=== Usages ===
j856 j780 v1196 
=== Predecessor ===
j759 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1181 #next: j775  <|@  <|@
f <@~|@floating>@ <|@
tid v1182 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j759 
index: - 
=== Succesors ===
=== Usages ===
j775 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j759 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j775 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1182 
=== Succesors ===
next: v767 
=== Usages ===
v764 
=== Predecessor ===
j774 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1182 #next: v767  <|@  <|@
f <@~|@floating>@ <|@
tid j856 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j774 
y: j294 
=== Succesors ===
=== Usages ===
v764 v776 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j774 y: j294  <|@  <|@
f <@~|@floating>@ <|@
tid v764 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j775 
y: j856 
=== Succesors ===
=== Usages ===
v767 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j775 y: j856  <|@  <|@
f <@*|@fixed>@ <|@
tid v767 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v764 
=== Succesors ===
trueSuccessor: v765 
falseSuccessor: v766 
=== Usages ===
=== Predecessor ===
j775 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v764 #trueSuccessor: v765 #falseSuccessor: v766  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4585158055938145756
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v765 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a770 
=== Usages ===
=== Predecessor ===
v767 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a770  <|@  <|@
tid ?39 <|@
d <@d|@=== Debug Properties ===
bci: 68
code: ResolvedJavaMethodBytecode<LinkedList.addAll(int, Collection)>
duringCall: false
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: LinkedList.java
sourceLine: 422
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - i1135 a211 a226 a554 i1135 i212 - - - 
=== Succesors ===
=== Usages ===
a770 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - i1135 a211 a226 a554 i1135 i212 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a770 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?39 
arguments: v710 i314 i69 
=== Succesors ===
next: j771 
=== Usages ===
j771 
=== Predecessor ===
v765 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?39 arguments: v710 i314 i69 #next: j771  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j771 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a770 
=== Succesors ===
next: v781 
=== Usages ===
j780 
=== Predecessor ===
a770 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a770 #next: v781  <|@  <|@
f <@*|@fixed>@ <|@
tid v781 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v778 
=== Predecessor ===
j771 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4614912516539592106
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v766 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v776 
=== Usages ===
=== Predecessor ===
v767 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v776  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v776 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1181 
value: j856 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v773 
=== Usages ===
=== Predecessor ===
v766 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1181 value: j856 stateAfter: - lastLocationAccess: - #next: v773  <|@  <|@
f <@~|@floating>@ <|@
tid v1196 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j774 
index: - 
=== Succesors ===
=== Usages ===
v773 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j774 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v773 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1196 
=== Succesors ===
next: v779 
=== Usages ===
=== Predecessor ===
v776 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1196 #next: v779  <|@  <|@
f <@*|@fixed>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v778 
=== Predecessor ===
v773 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B74" 
    successors "B72" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4614990598334941345
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j780 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v778 
values: j774 j771 
=== Succesors ===
=== Usages ===
v1185 v1184 a485 v1197 v1198 v1199 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v778 values: j774 j771  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v778 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v779 v781 
=== Succesors ===
next: a485 
=== Usages ===
j780 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v779 v781 #next: a485  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a485 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j780 
=== Succesors ===
next: j790 
=== Usages ===
a492 
=== Predecessor ===
v778 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j780 #next: j790  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j790 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1183 
=== Succesors ===
next: v791 
=== Usages ===
v791 
=== Predecessor ===
a485 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1183 #next: v791  <|@  <|@
f <@~|@floating>@ <|@
tid v1184 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j780 
index: - 
=== Succesors ===
=== Usages ===
v791 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j780 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v791 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1184 
value: j790 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v794 
=== Usages ===
=== Predecessor ===
j790 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1184 value: j790 stateAfter: - lastLocationAccess: - #next: v794  <|@  <|@
f <@~|@floating>@ <|@
tid v1185 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j780 
index: - 
=== Succesors ===
=== Usages ===
v794 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j780 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v794 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1185 
value: v852 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1147 
=== Usages ===
=== Predecessor ===
v791 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1185 value: v852 stateAfter: - lastLocationAccess: - #next: a1147  <|@  <|@
f <@~|@floating>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1108 v41 
=== Succesors ===
=== Usages ===
a1147 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1108 v41  <|@  <|@
f <@~|@floating>@ <|@
tid v1158 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a554 
index: i212 
=== Succesors ===
=== Usages ===
a1147 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a554 index: i212  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1147 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 79]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v399 
address: v1158 
=== Succesors ===
next: v798 
=== Usages ===
v798 
=== Predecessor ===
v794 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v399 address: v1158 #next: v798  <|@  <|@
f <@~|@floating>@ <|@
tid v1197 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j780 
index: - 
=== Succesors ===
=== Usages ===
v798 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j780 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v798 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1197 
value: a1147 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v800 
=== Usages ===
=== Predecessor ===
a1147 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1197 value: a1147 stateAfter: - lastLocationAccess: - #next: v800  <|@  <|@
f <@~|@floating>@ <|@
tid v1198 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j780 
index: - 
=== Succesors ===
=== Usages ===
v800 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j780 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v800 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1198 
value: i12 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v802 
=== Usages ===
=== Predecessor ===
v798 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1198 value: i12 stateAfter: - lastLocationAccess: - #next: v802  <|@  <|@
f <@~|@floating>@ <|@
tid v1199 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j780 
index: - 
=== Succesors ===
=== Usages ===
v802 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j780 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v802 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1199 
value: a500 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a492 
=== Usages ===
=== Predecessor ===
v800 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1199 value: a500 stateAfter: - lastLocationAccess: - #next: a492  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a492 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a485 
=== Succesors ===
next: v493 
=== Usages ===
a329 a211 
=== Predecessor ===
v802 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a485 #next: v493  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v493 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v331 
=== Usages ===
=== Predecessor ===
a492 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v331  <|@  <|@
f <@~|@floating>@ <|@
tid v1159 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a211 
index: - 
=== Succesors ===
=== Usages ===
v331 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a211 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a329 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 118]
op: Compress
stamp: n -
=== Inputs ===
value: a492 
=== Succesors ===
=== Usages ===
v331 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a492  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: LinkedList$Node.next
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 118]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1159 
value: a329 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j803 
=== Usages ===
=== Predecessor ===
v493 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1159 value: a329 stateAfter: - lastLocationAccess: - #next: j803  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j803 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 118]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a211 
=== Succesors ===
next: v807 
=== Usages ===
j804 
=== Predecessor ===
v331 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a211 #next: v807  <|@  <|@
f <@~|@floating>@ <|@
tid j804 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 118]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j803 
y: i680 
=== Succesors ===
=== Usages ===
v1186 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j803 y: i680  <|@  <|@
f <@~|@floating>@ <|@
tid v1186 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j804 
index: j703 
=== Succesors ===
=== Usages ===
v807 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j804 index: j703  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v807 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 118]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1186 
value: i808 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v96 
=== Usages ===
=== Predecessor ===
j803 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1186 value: i808 stateAfter: - lastLocationAccess: - #next: v96  <|@  <|@
f <@~|@floating>@ <|@
tid i70 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 125]
stamp: i32
=== Inputs ===
x: i212 
y: i69 
=== Succesors ===
=== Usages ===
i212 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i212 y: i69  <|@  <|@
f <@*|@fixed>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:429) [bci: 121]
stamp: void
=== Inputs ===
loopBegin: v36 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v807 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v36  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B78" 
    xhandlers
    flags 
    probability 4604428103321114964
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:432) [bci: 131]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v36 
=== Succesors ===
next: v207 
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v36 #next: v207  <|@  <|@
f <@*|@fixed>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v206 
=== Predecessor ===
v43 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B59" 
    successors "B79" "B81" 
    xhandlers
    flags 
    probability 4604591831010484268
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a210 <|@
d <@d|@=== Debug Properties ===
stamp: a# Ljava/util/LinkedList$Node;
valueDescription: a -
=== Inputs ===
merge: v206 
values: a211 a303 
=== Succesors ===
=== Usages ===
v1161 j825 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v206 values: a211 a303  <|@  <|@
f <@~|@floating>@ <|@
tid a227 <|@
d <@d|@=== Debug Properties ===
stamp: a# Ljava/util/LinkedList$Node;
valueDescription: a -
=== Inputs ===
merge: v206 
values: a226 a172 
=== Succesors ===
=== Usages ===
?45 a341 j832 v72 v1162 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v206 values: a226 a172  <|@  <|@
f <@~|@floating>@ <|@
tid a501 <|@
d <@d|@=== Debug Properties ===
stamp: n# Ljava/util/LinkedList$Node;
valueDescription: n -
=== Inputs ===
merge: v206 
values: a500 a1145 
=== Succesors ===
=== Usages ===
v348 a499 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v206 values: a500 a1145  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v207 v208 
=== Succesors ===
next: v75 
=== Usages ===
a210 a227 a501 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v207 v208 #next: v75  <|@  <|@
f <@~|@floating>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:432) [bci: 133]
stamp: void
=== Inputs ===
value: a227 
=== Succesors ===
=== Usages ===
v75 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a227  <|@  <|@
f <@*|@fixed>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:432) [bci: 133]
stamp: void
trueSuccessorProbability: 0.8910276052257723
=== Inputs ===
condition: v72 
=== Succesors ===
trueSuccessor: v73 
falseSuccessor: v74 
=== Usages ===
=== Predecessor ===
v206 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v72 #trueSuccessor: v73 #falseSuccessor: v74  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" 
    xhandlers
    flags 
    probability 4603892597492784802
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:433) [bci: 136]
stamp: void
=== Inputs ===
=== Succesors ===
next: v255 
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v255  <|@  <|@
f <@*|@fixed>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v254 
=== Predecessor ===
v73 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" "B49" 
    successors 
    xhandlers
    flags 
    probability 4605231339210539388
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a499 <|@
d <@d|@=== Debug Properties ===
stamp: n# Ljava/util/LinkedList$Node;
valueDescription: n -
=== Inputs ===
merge: v254 
values: a501 a1142 
=== Succesors ===
=== Usages ===
v354 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v254 values: a501 a1142  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v255 v257 
=== Succesors ===
next: v354 
=== Usages ===
a499 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v255 v257 #next: v354  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: LinkedList.last
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:433) [bci: 139]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1154 
value: a499 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j839 
=== Usages ===
=== Predecessor ===
v254 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1154 value: a499 stateAfter: - lastLocationAccess: - #next: j839  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j839 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.LinkedList.addAll(LinkedList.java:433) [bci: 139]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v843 
=== Usages ===
j840 
=== Predecessor ===
v354 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v843  <|@  <|@
f <@~|@floating>@ <|@
tid j840 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.addAll(LinkedList.java:433) [bci: 139]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j839 
y: i680 
=== Succesors ===
=== Usages ===
v1191 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j839 y: i680  <|@  <|@
f <@~|@floating>@ <|@
tid v1191 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j840 
index: j703 
=== Succesors ===
=== Usages ===
v843 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j840 index: j703  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v843 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.addAll(LinkedList.java:433) [bci: 139]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1191 
value: i808 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v355 
=== Usages ===
=== Predecessor ===
j839 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1191 value: i808 stateAfter: - lastLocationAccess: - #next: v355  <|@  <|@
f <@~|@floating>@ <|@
tid i1124 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:439) [bci: 166]
stamp: i32
=== Inputs ===
x: i1133 
y: i1135 
=== Succesors ===
=== Usages ===
v355 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1133 y: i1135  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: LinkedList.size
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:439) [bci: 167]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1150 
value: i1124 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i1148 
=== Usages ===
=== Predecessor ===
v843 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1150 value: i1124 stateAfter: - lastLocationAccess: - #next: i1148  <|@  <|@
f <@~|@floating>@ <|@
tid v1163 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v357 i1148 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1148 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:440) [bci: 172]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1163 
=== Succesors ===
next: v357 
=== Usages ===
i1126 
=== Predecessor ===
v355 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1163 #next: v357  <|@  <|@
f <@~|@floating>@ <|@
tid i1126 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:440) [bci: 176]
stamp: i32
=== Inputs ===
x: i1148 
y: i69 
=== Succesors ===
=== Usages ===
v357 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1148 y: i69  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList.modCount
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:440) [bci: 177]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1163 
value: i1126 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v242 
=== Usages ===
=== Predecessor ===
i1148 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1163 value: i1126 stateAfter: - lastLocationAccess: - #next: v242  <|@  <|@
f <@*|@fixed>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:441) [bci: 181]
stamp: void
=== Inputs ===
result: i69 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v357 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i69 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors 
    xhandlers
    flags 
    probability 4590258288804760654
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:435) [bci: 145]
stamp: void
=== Inputs ===
=== Succesors ===
next: v343 
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v343  <|@  <|@
tid ?45 <|@
d <@d|@=== Debug Properties ===
bci: 131
code: ResolvedJavaMethodBytecode<LinkedList.addAll(int, Collection)>
duringCall: false
localsSize: 13
locksSize: 0
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:432) [bci: 131]
rethrowException: false
sourceFile: LinkedList.java
sourceLine: 432
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - i1135 a20 a227 - - - - - - 
=== Succesors ===
=== Usages ===
v343 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - i1135 a20 a227 - - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v1161 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a210 
index: - 
=== Succesors ===
=== Usages ===
v343 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a210 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a341 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:435) [bci: 149]
op: Compress
stamp: n# Ljava/util/LinkedList$Node;
=== Inputs ===
value: a227 
=== Succesors ===
=== Usages ===
v343 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a227  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: LinkedList$Node.next
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:435) [bci: 149]
nullCheck: true
stamp: void
=== Inputs ===
stateBefore: ?45 
guard: - 
address: v1161 
value: a341 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j825 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: ?45 guard: - address: v1161 value: a341 stateAfter: - lastLocationAccess: - #next: j825  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j825 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.LinkedList.addAll(LinkedList.java:435) [bci: 149]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a210 
=== Succesors ===
next: v829 
=== Usages ===
j826 
=== Predecessor ===
v343 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a210 #next: v829  <|@  <|@
f <@~|@floating>@ <|@
tid j826 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.addAll(LinkedList.java:435) [bci: 149]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j825 
y: i680 
=== Succesors ===
=== Usages ===
v1189 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j825 y: i680  <|@  <|@
f <@~|@floating>@ <|@
tid v1189 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j826 
index: j703 
=== Succesors ===
=== Usages ===
v829 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j826 index: j703  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v829 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.addAll(LinkedList.java:435) [bci: 149]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1189 
value: i808 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v348 
=== Usages ===
=== Predecessor ===
j825 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1189 value: i808 stateAfter: - lastLocationAccess: - #next: v348  <|@  <|@
f <@~|@floating>@ <|@
tid v1162 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a227 
index: - 
=== Succesors ===
=== Usages ===
v348 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a227 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: LinkedList$Node.prev
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:436) [bci: 156]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1162 
value: a501 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j832 
=== Usages ===
=== Predecessor ===
v829 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1162 value: a501 stateAfter: - lastLocationAccess: - #next: j832  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j832 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.LinkedList.addAll(LinkedList.java:436) [bci: 156]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a227 
=== Succesors ===
next: v836 
=== Usages ===
j833 
=== Predecessor ===
v348 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a227 #next: v836  <|@  <|@
f <@~|@floating>@ <|@
tid j833 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.addAll(LinkedList.java:436) [bci: 156]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j832 
y: i680 
=== Succesors ===
=== Usages ===
v1190 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j832 y: i680  <|@  <|@
f <@~|@floating>@ <|@
tid v1190 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j833 
index: j703 
=== Succesors ===
=== Usages ===
v836 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j833 index: j703  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v836 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.addAll(LinkedList.java:436) [bci: 156]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1190 
value: i808 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v349 
=== Usages ===
=== Predecessor ===
j832 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1190 value: i808 stateAfter: - lastLocationAccess: - #next: v349  <|@  <|@
f <@~|@floating>@ <|@
tid i88 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:439) [bci: 166]
stamp: i32
=== Inputs ===
x: i1133 
y: i1135 
=== Succesors ===
=== Usages ===
v349 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1133 y: i1135  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: LinkedList.size
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:439) [bci: 167]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1150 
value: i88 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i1149 
=== Usages ===
=== Predecessor ===
v836 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1150 value: i88 stateAfter: - lastLocationAccess: - #next: i1149  <|@  <|@
f <@~|@floating>@ <|@
tid v1214 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v352 i1149 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1149 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:440) [bci: 172]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1214 
=== Succesors ===
next: v352 
=== Usages ===
i92 
=== Predecessor ===
v349 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1214 #next: v352  <|@  <|@
f <@~|@floating>@ <|@
tid i92 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:440) [bci: 176]
stamp: i32
=== Inputs ===
x: i1149 
y: i69 
=== Succesors ===
=== Usages ===
v352 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1149 y: i69  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList.modCount
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:440) [bci: 177]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1214 
value: i92 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v95 
=== Usages ===
=== Predecessor ===
i1149 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1214 value: i92 stateAfter: - lastLocationAccess: - #next: v95  <|@  <|@
f <@*|@fixed>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:441) [bci: 181]
stamp: void
=== Inputs ===
result: i69 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v352 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i69 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
next: v445 
=== Usages ===
=== Predecessor ===
v1123 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v445  <|@  <|@
tid a198 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@29eb65ba
hasIdentity: true
objectId: 0
stamp: a!# Ljava/util/LinkedList$Node;
type: HotSpotType<Ljava/util/LinkedList$Node;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?248 ?203 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?248 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a198 
materializedValue: a481 
=== Succesors ===
=== Usages ===
?203 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a198 materializedValue: a481  <|@  <|@
tid ?203 <|@
d <@d|@=== Debug Properties ===
bci: 68
code: ResolvedJavaMethodBytecode<LinkedList.addAll(int, Collection)>
duringCall: false
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: LinkedList.java
sourceLine: 422
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - i1135 a198 a226 a554 i1135 i69 - - - 
virtualObjectMappings: ?248 
=== Succesors ===
=== Usages ===
v445 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - i1135 a198 a226 a554 i1135 i69 - - - virtualObjectMappings: ?248  <|@  <|@
f <@*|@fixed>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 321
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 79]
reason: BoundsCheckException
speculation: Object[d.a@198780052]
stamp: void
=== Inputs ===
stateBefore: ?203 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1119 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?203  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B46" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 58]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v701 
=== Usages ===
=== Predecessor ===
v699 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v701  <|@  <|@
f <@~|@floating>@ <|@
tid j695 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: i64
=== Inputs ===
x: j693 
y: j694 
=== Succesors ===
=== Usages ===
j693 j700 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j693 y: j694  <|@  <|@
f <@~|@floating>@ <|@
tid j704 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 62]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: i64 [4682670080 - 36028801701634047] ⇈00ffffffffffffff
=== Inputs ===
x: j682 
y: j703 
=== Succesors ===
=== Usages ===
j700 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j682 y: j703  <|@  <|@
f <@~|@floating>@ <|@
tid j700 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 65]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: i64
=== Inputs ===
x: j695 
y: j704 
=== Succesors ===
=== Usages ===
v701 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j695 y: j704  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
kind: boolean
nodeSourcePosition: at org.graalvm.compiler.replacements.nodes.DirectStoreNode.storeBoolean(long, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 70]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
address: j700 
value: i12 
=== Succesors ===
next: v702 
=== Usages ===
=== Predecessor ===
v698 >@ <|@
instruction <@DirectStore|@org.graalvm.compiler.replacements.nodes.DirectStoreNode>@ address: j700 value: i12 #next: v702  <|@  <|@
f <@*|@fixed>@ <|@
tid v702 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
loopBegin: v692 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v701 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v692  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v889 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v888 
=== Usages ===
=== Predecessor ===
v890 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v888  <|@  <|@
f <@*|@fixed>@ <|@
tid v888 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v883 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v889 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v883  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B86" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList; target_method=toArray target_method_class=Ljava/util/ArrayList; position=at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v576 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v576  <|@  <|@
f <@~|@floating>@ <|@
tid i577 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -71219
stableDimension: 0
stamp: i32 [-71219] ⇊00000000fffee9cd ⇈00000000fffee9cd
stampKind: i32
value: int[-71219|0xfffffffffffee9cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i571 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v568 
=== Predecessor ===
v414 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B2" "B85" "B4" "B6" "B56" "B54" "B8" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i571 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-132705 - -69651] ⇊00000000fffcc085
valueDescription: i32
=== Inputs ===
merge: v568 
values: i575 i577 i579 i583 i585 i587 i589 
=== Succesors ===
=== Usages ===
v573 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v568 values: i575 i577 i579 i583 i585 i587 i589  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v574 v576 v578 v582 v584 v586 v588 
=== Succesors ===
next: v573 
=== Usages ===
i571 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v574 v576 v578 v582 v584 v586 v588 #next: v573  <|@  <|@
f <@*|@fixed>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
actionAndReason: i571 
speculation: a20 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v568 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?4 actionAndReason: i571 speculation: a20  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B85" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v1132 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v1132  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/LinkedList;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 ?45 v1150 v1163 ?203 v1154 v1156 ?39 j811 j839 v1214 v1215 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v121 v124 v169 v16 v155 v166 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
result v2|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a -
uncheckedStamp: a Ljava/util/Collection;
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v1152 v1166 v1151 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<LinkedList.addAll(int, Collection)>
duringCall: false
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: LinkedList.java
sourceLine: 406
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v573 a724 a636 v1132 v1213 a1145 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3 - - - - - - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v1166 <|@
result [v2|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
v1132 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1132 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v1166 
=== Succesors ===
next: v415 
=== Usages ===
v847 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v1166 #next: v415  <|@  <|@
f <@~|@floating>@ <|@
tid v846 <|@
result meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
rawvalue: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v847 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v847 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1132 
y: v846 
=== Succesors ===
=== Usages ===
v415 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1132 y: v846  <|@  <|@
f <@~|@floating>@ <|@
tid a20 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:415) [bci: 31]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a226 v573 ?45 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v415 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList; target_method=toArray target_method_class=Ljava/util/ArrayList; position=at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v847 
=== Succesors ===
trueSuccessor: v412 
falseSuccessor: v414 
=== Usages ===
=== Predecessor ===
v1132 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v847 #trueSuccessor: v412 #falseSuccessor: v414  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@368fbfea slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] - - - - - - - - - - 
>@ <|@ instruction CMP [v2|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList; target_method=toArray target_method_class=Ljava/util/ArrayList; position=at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v419 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v419  <|@  <|@
f <@~|@floating>@ <|@
tid i12 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:410) [bci: 18]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v13 v121 v506 v800 a636 v756 v701 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 1]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.addAll(LinkedList.java:406) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i12 
=== Succesors ===
=== Usages ===
v419 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 1]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.addAll(LinkedList.java:406) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v121 
=== Succesors ===
trueSuccessor: v418 
falseSuccessor: v416 
=== Usages ===
=== Predecessor ===
v412 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v121 #trueSuccessor: v418 #falseSuccessor: v416  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B86" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 1]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.addAll(LinkedList.java:406) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v574 
=== Usages ===
=== Predecessor ===
v419 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v574  <|@  <|@
f <@~|@floating>@ <|@
tid i575 <|@
result int[-69651|0xfffffffffffeefed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -69651
stableDimension: 0
stamp: i32 [-69651] ⇊00000000fffeefed ⇈00000000fffeefed
stampKind: i32
value: int[-69651|0xfffffffffffeefed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i571 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v568 
=== Predecessor ===
v418 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-69651|0xfffffffffffeefed]] destination: B2 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 1]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.addAll(LinkedList.java:406) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1133 
=== Usages ===
=== Predecessor ===
v419 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1133  <|@  <|@
f <@~|@floating>@ <|@
tid v1150 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1133 v349 v355 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1133 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList.size
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 6]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.addAll(LinkedList.java:406) [bci: 2]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1150 
=== Succesors ===
next: v423 
=== Usages ===
v124 v16 i154 i165 i88 i1124 
=== Predecessor ===
v416 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1150 #next: v423  <|@  <|@
f <@~|@floating>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.addAll(LinkedList.java:406) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1133 
y: i2 
=== Succesors ===
=== Usages ===
v423 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1133 y: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.addAll(LinkedList.java:406) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v124 
=== Succesors ===
trueSuccessor: v422 
falseSuccessor: v420 
=== Usages ===
=== Predecessor ===
i1133 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v124 #trueSuccessor: v422 #falseSuccessor: v420  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B86" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.addAll(LinkedList.java:406) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v578 
=== Usages ===
=== Predecessor ===
v423 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v578  <|@  <|@
f <@~|@floating>@ <|@
tid i579 <|@
result int[-70675|0xfffffffffffeebed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -70675
stableDimension: 0
stamp: i32 [-70675] ⇊00000000fffeebed ⇈00000000fffeebed
stampKind: i32
value: int[-70675|0xfffffffffffeebed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i571 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v568 
=== Predecessor ===
v422 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-70675|0xfffffffffffeebed]] destination: B4 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.addAll(LinkedList.java:406) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1134 
=== Usages ===
=== Predecessor ===
v423 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1134  <|@  <|@
f <@~|@floating>@ <|@
tid v1151 <|@
result [v2|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
a1134 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1134 <|@
result v4|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.elementData
nodeSourcePosition: at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 1]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1151 
=== Succesors ===
next: v1213 
=== Usages ===
v1167 v1213 v1153 v1164 
=== Predecessor ===
v420 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1151 #next: v1213  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1213 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
object: a1134 
=== Succesors ===
next: i1135 
=== Usages ===
=== Predecessor ===
a1134 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?4 object: a1134 #next: i1135  <|@  <|@
f <@~|@floating>@ <|@
tid v1152 <|@
result [v2|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i1135 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1135 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.size
nodeSourcePosition: at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 5]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1152 
=== Succesors ===
next: v431 
=== Usages ===
j864 v13 i620 i548 ?39 ?45 ?203 ?39 v401 v213 i1124 v405 v40 ?203 i88 i387 v506 v522 v664 a636 i1125 
=== Predecessor ===
v1213 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1152 #next: v431  <|@  <|@
f <@~|@floating>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:410) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1135 
y: i12 
=== Succesors ===
=== Usages ===
v431 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1135 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:410) [bci: 18]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v13 
=== Succesors ===
trueSuccessor: v430 
falseSuccessor: v428 
=== Usages ===
=== Predecessor ===
i1135 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v13 #trueSuccessor: v430 #falseSuccessor: v428  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] - - - - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v4|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B86" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:410) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v582 
=== Usages ===
=== Predecessor ===
v431 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v582  <|@  <|@
f <@~|@floating>@ <|@
tid i583 <|@
result int[-75027|0xfffffffffffedaed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -75027
stableDimension: 0
stamp: i32 [-75027] ⇊00000000fffedaed ⇈00000000fffedaed
stampKind: i32
value: int[-75027|0xfffffffffffedaed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i571 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v582 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v568 
=== Predecessor ===
v430 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-75027|0xfffffffffffedaed]] destination: B6 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:410) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v512 
=== Usages ===
a1146 
=== Predecessor ===
v431 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v512  <|@  <|@
f <@~|@floating>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 22]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1135 
y: i12 
=== Succesors ===
=== Usages ===
v512 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1135 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 33]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v506 
=== Succesors ===
trueSuccessor: v511 
falseSuccessor: v507 
=== Usages ===
=== Predecessor ===
v428 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v506 #trueSuccessor: v511 #falseSuccessor: v507  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B86" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v588 
=== Usages ===
=== Predecessor ===
v512 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v588  <|@  <|@
f <@~|@floating>@ <|@
tid i589 <|@
result int[-132705|0xfffffffffffdf99f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -132705
stableDimension: 0
stamp: i32 [-132705] ⇊00000000fffdf99f ⇈00000000fffdf99f
stampKind: i32
value: int[-132705|0xfffffffffffdf99f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i571 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v568 
=== Predecessor ===
v511 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-132705|0xfffffffffffdf99f]] destination: B8 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 36]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: j623 
=== Usages ===
=== Predecessor ===
v512 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j623  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j623 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j661 
=== Usages ===
v1168 v1169 
=== Predecessor ===
v507 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j661  <|@  <|@
f <@~|@floating>@ <|@
tid v1168 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j623 
index: - 
=== Succesors ===
=== Usages ===
j661 v663 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j623 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j661 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1168 
=== Succesors ===
next: j662 
=== Usages ===
j627 v1170 v1171 a635 v1176 v1172 v1173 v1174 v1175 
=== Predecessor ===
j623 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1168 #next: j662  <|@  <|@
f <@~|@floating>@ <|@
tid v1169 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j623 
index: - 
=== Succesors ===
=== Usages ===
j662 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j623 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j662 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1169 
=== Succesors ===
next: v1136 
=== Usages ===
v628 
=== Predecessor ===
j661 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1169 #next: v1136  <|@  <|@
f <@~|@floating>@ <|@
tid v1167 <|@
result [v4|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1134 
=== Succesors ===
=== Usages ===
v1136 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1134  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1136 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 6]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1167 
=== Succesors ===
next: v631 
=== Usages ===
v605 v668 
=== Predecessor ===
j662 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1167 #next: v631  <|@  <|@
f <@~|@floating>@ <|@
tid i314 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 79]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
a724 a770 v405 i620 i685 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i620 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i1135 
y: i314 
=== Succesors ===
=== Usages ===
i644 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1135 y: i314  <|@  <|@
f <@~|@floating>@ <|@
tid i643 <|@
result int[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i644 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i644 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: i32 [-2147483645 - 2147483647] ⇊0000000000000003
=== Inputs ===
x: i620 
y: i643 
=== Succesors ===
=== Usages ===
i622 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i620 y: i643  <|@  <|@
f <@~|@floating>@ <|@
tid i621 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i622 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i622 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i644 
y: i621 
=== Succesors ===
=== Usages ===
j626 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i644 y: i621  <|@  <|@
f <@~|@floating>@ <|@
tid j626 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i622 
=== Succesors ===
=== Usages ===
j627 v1172 v1173 v1174 v1175 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i622  <|@  <|@
f <@~|@floating>@ <|@
tid j627 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: i64
=== Inputs ===
x: j626 
y: j661 
=== Succesors ===
=== Usages ===
v628 v663 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j626 y: j661  <|@  <|@
f <@~|@floating>@ <|@
tid v628 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j662 
y: j627 
=== Succesors ===
=== Usages ===
v631 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j662 y: j627  <|@  <|@
f <@~|@floating>@ <|@
tid j607 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v665 j690 v696 v875 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v631 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v628 
=== Succesors ===
trueSuccessor: v629 
falseSuccessor: v630 
=== Usages ===
=== Predecessor ===
v1136 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v628 #trueSuccessor: v629 #falseSuccessor: v630  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV [v4|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SHL v5|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = LEA [v9|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = AND v10|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVSXD v11|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = ADD (x: v12|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v13|QWORD, y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: a636 
=== Usages ===
=== Predecessor ===
v631 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a636  <|@  <|@
f <@~|@floating>@ <|@
tid v605 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 6]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v1136 
=== Succesors ===
=== Usages ===
a636 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v1136  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a636 <|@
result v15|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?4 
arguments: v605 i1135 i12 
=== Succesors ===
next: v639 
=== Usages ===
a640 
=== Predecessor ===
v629 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?4 arguments: v605 i1135 i12 #next: v639  <|@  <|@
f <@*|@fixed>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v638 
=== Predecessor ===
a636 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = UNCOMPRESSPOINTER (input: v8|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@74b0c02b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v15|QWORD[.]] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v663 
=== Usages ===
=== Predecessor ===
v631 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v663  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v663 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1168 
value: j627 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v648 
=== Usages ===
=== Predecessor ===
v630 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1168 value: j627 stateAfter: - lastLocationAccess: - #next: v648  <|@  <|@
f <@~|@floating>@ <|@
tid v1172 <|@
result [v12|QWORD + v6|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j626 
index: j661 
=== Succesors ===
=== Usages ===
v648 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j626 index: j661  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v648 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
address: v1172 
=== Succesors ===
next: v651 
=== Usages ===
=== Predecessor ===
v663 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1172 #next: v651  <|@  <|@
f <@~|@floating>@ <|@
tid v1173 <|@
result [v12|QWORD + v6|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j626 
index: j661 
=== Succesors ===
=== Usages ===
v651 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j626 index: j661  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v651 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
address: v1173 
=== Succesors ===
next: v654 
=== Usages ===
=== Predecessor ===
v648 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1173 #next: v654  <|@  <|@
f <@~|@floating>@ <|@
tid v1174 <|@
result [v12|QWORD + v6|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j626 
index: j661 
=== Succesors ===
=== Usages ===
v654 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j626 index: j661  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v654 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
address: v1174 
=== Succesors ===
next: v657 
=== Usages ===
=== Predecessor ===
v651 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1174 #next: v657  <|@  <|@
f <@~|@floating>@ <|@
tid v1175 <|@
result [v12|QWORD + v6|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j626 
index: j661 
=== Succesors ===
=== Usages ===
v657 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j626 index: j661  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
address: v1175 
=== Succesors ===
next: v664 
=== Usages ===
=== Predecessor ===
v654 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1175 #next: v664  <|@  <|@
f <@~|@floating>@ <|@
tid v1170 <|@
result [v6|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j661 
index: - 
=== Succesors ===
=== Usages ===
v664 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j661 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v664 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1170 
value: i1135 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v665 
=== Usages ===
=== Predecessor ===
v657 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1170 value: i1135 stateAfter: - lastLocationAccess: - #next: v665  <|@  <|@
f <@~|@floating>@ <|@
tid v1171 <|@
result [v6|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j661 
index: - 
=== Succesors ===
=== Usages ===
v665 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j661 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v665 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1171 
value: j607 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v668 
=== Usages ===
=== Predecessor ===
v664 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1171 value: j607 stateAfter: - lastLocationAccess: - #next: v668  <|@  <|@
f <@~|@floating>@ <|@
tid v1176 <|@
result [v6|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j661 
index: - 
=== Succesors ===
=== Usages ===
v668 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j661 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v668 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1176 
value: v1136 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v634 
=== Usages ===
=== Predecessor ===
v665 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1176 value: v1136 stateAfter: - lastLocationAccess: - #next: v634  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v634 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: a635 
=== Usages ===
=== Predecessor ===
v668 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a635  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a635 <|@
result v16|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j661 
=== Succesors ===
next: v637 
=== Usages ===
a640 
=== Predecessor ===
v634 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j661 #next: v637  <|@  <|@
f <@*|@fixed>@ <|@
tid v637 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v638 
=== Predecessor ===
a635 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v12|QWORD + v6|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v12|QWORD + v6|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v12|QWORD + v6|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v12|QWORD + v6|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD + 8], y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = MOVE v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v16|QWORD[.]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a640 <|@
result v17|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v638 
values: a635 a636 
=== Succesors ===
=== Usages ===
v1200 a554 v1165 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v638 values: a635 a636  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v637 v639 
=== Succesors ===
next: v986 
=== Usages ===
a640 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v637 v639 #next: v986  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v986 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: i1137 
=== Usages ===
j987 j989 
=== Predecessor ===
v638 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: i1137  <|@  <|@
f <@~|@floating>@ <|@
tid v1153 <|@
result [v4|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1134 
=== Succesors ===
=== Usages ===
i1137 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1134  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1137 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 2]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1153 
=== Succesors ===
next: v878 
=== Usages ===
i548 v522 
=== Predecessor ===
v986 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1153 #next: v878  <|@  <|@
f <@~|@floating>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:174) [bci: 19]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1137 
y: i1135 
=== Succesors ===
=== Usages ===
i548 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1137 y: i1135  <|@  <|@
f <@~|@floating>@ <|@
tid i548 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v522 
trueValue: i1137 
falseValue: i1135 
=== Succesors ===
=== Usages ===
j865 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v522 trueValue: i1137 falseValue: i1135  <|@  <|@
f <@~|@floating>@ <|@
tid j865 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i548 
=== Succesors ===
=== Usages ===
j1038 v1200 j869 v875 v983 j1025 j1031 j1035 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i548  <|@  <|@
f <@~|@floating>@ <|@
tid v875 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j865 
y: j607 
=== Succesors ===
=== Usages ===
v878 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j865 y: j607  <|@  <|@
f <@~|@floating>@ <|@
tid v1165 <|@
result [v17|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a640 
index: - 
=== Succesors ===
=== Usages ===
j989 j683 j681 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a640 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j694 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j695 j1038 j1080 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1006 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1007 j1056 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1034 <|@
result long[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1035 j1077 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j992 <|@
result long[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1015 j1062 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1030 <|@
result long[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1031 j1074 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j599 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1068 j1023 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1024 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1025 j1069 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j471 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1063 v1026 j1057 v1070 j1008 j1016 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v878 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v875 
=== Succesors ===
trueSuccessor: v876 
falseSuccessor: v877 
=== Usages ===
=== Predecessor ===
i1137 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v875 #trueSuccessor: v876 #falseSuccessor: v877  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v17|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOV [v4|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = CMOVE (falseValue: v5|DWORD, ~trueValue: v18|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOVSXD v19|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v20|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B28" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v876 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v895 
=== Usages ===
=== Predecessor ===
v878 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v895  <|@  <|@
f <@*|@fixed>@ <|@
tid v895 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v896 
=== Predecessor ===
v876 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v877 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v881 
=== Usages ===
=== Predecessor ===
v878 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v881  <|@  <|@
f <@~|@floating>@ <|@
tid j1025 <|@
result v21|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j865 
y: j1024 
=== Succesors ===
=== Usages ===
v1026 v1028 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j865 y: j1024  <|@  <|@
f <@~|@floating>@ <|@
tid v1026 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1025 
y: j471 
=== Succesors ===
=== Usages ===
v881 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1025 y: j471  <|@  <|@
f <@~|@floating>@ <|@
tid j989 <|@
result v22|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v986 
address: v1165 
=== Succesors ===
=== Usages ===
v1201 v1203 v1205 v1207 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v986 address: v1165  <|@  <|@
f <@~|@floating>@ <|@
tid v1164 <|@
result [v4|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1134 
=== Succesors ===
=== Usages ===
j987 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1134  <|@  <|@
f <@~|@floating>@ <|@
tid j987 <|@
result v23|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v986 
address: v1164 
=== Succesors ===
=== Usages ===
v1202 v1204 v1206 v1208 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v986 address: v1164  <|@  <|@
f <@*|@fixed>@ <|@
tid v881 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1026 
=== Succesors ===
trueSuccessor: v879 
falseSuccessor: v880 
=== Usages ===
=== Predecessor ===
v877 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1026 #trueSuccessor: v879 #falseSuccessor: v880  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = LEA [v20|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = LEA [v17|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[*] = LEA [v4|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v21|QWORD, y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v879 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v891 
=== Usages ===
=== Predecessor ===
v881 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v891  <|@  <|@
f <@*|@fixed>@ <|@
tid v891 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v892 
=== Predecessor ===
v879 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v880 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v882 
=== Usages ===
=== Predecessor ===
v881 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v882  <|@  <|@
f <@*|@fixed>@ <|@
tid v882 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v883 
=== Predecessor ===
v880 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B84" 
    successors "B18" "B84" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1016 <|@
result v24|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v883 
values: j471 j1023 
=== Succesors ===
=== Usages ===
v1208 j1023 v1207 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v883 values: j471 j1023  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v883 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v882 
=== Succesors ===
next: v1138 
=== Usages ===
v1138 v887 v888 j1016 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v882 #next: v1138  <|@  <|@
f <@~|@floating>@ <|@
tid v1208 <|@
result [v23|QWORD[*] + v24|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j987 
index: j1016 
=== Succesors ===
=== Usages ===
v1138 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j987 index: j1016  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1138 <|@
result v25|V256_DWORD[........] <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v883 
address: v1208 
=== Succesors ===
next: v1095 
=== Usages ===
v1095 
=== Predecessor ===
v883 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v883 address: v1208 #next: v1095  <|@  <|@
f <@~|@floating>@ <|@
tid v1207 <|@
result [v22|QWORD[.] + v24|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j989 
index: j1016 
=== Succesors ===
=== Usages ===
v1095 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j989 index: j1016  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1095 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1207 
value: v1138 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v890 
=== Usages ===
=== Predecessor ===
v1138 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1207 value: v1138 stateAfter: - lastLocationAccess: - #next: v890  <|@  <|@
f <@~|@floating>@ <|@
tid j1023 <|@
result v26|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1016 
y: j599 
=== Succesors ===
=== Usages ===
j1008 j1016 v1028 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1016 y: j599  <|@  <|@
f <@~|@floating>@ <|@
tid v1028 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1025 
y: j1023 
=== Succesors ===
=== Usages ===
v890 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1025 y: j1023  <|@  <|@
f <@*|@fixed>@ <|@
tid v890 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1028 
=== Succesors ===
trueSuccessor: v887 
falseSuccessor: v889 
=== Usages ===
=== Predecessor ===
v1095 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1028 #trueSuccessor: v887 #falseSuccessor: v889  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|V256_DWORD[........] = H [v23|QWORD[*] + v24|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v22|QWORD[.] + v24|QWORD * 4], input: v25|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = LEA [v24|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v26|QWORD, y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v887 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v883 
=== Succesors ===
next: v893 
=== Usages ===
=== Predecessor ===
v890 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v883 #next: v893  <|@  <|@
f <@*|@fixed>@ <|@
tid v893 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v892 
=== Predecessor ===
v887 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|QWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1008 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v892 
values: j471 j1023 
=== Succesors ===
=== Usages ===
v1206 j1015 j999 v1032 v1205 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v892 values: j471 j1023  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v892 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v891 v893 
=== Succesors ===
next: v911 
=== Usages ===
j1008 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v891 v893 #next: v911  <|@  <|@
f <@~|@floating>@ <|@
tid j1031 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j865 
y: j1030 
=== Succesors ===
=== Usages ===
v1032 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j865 y: j1030  <|@  <|@
f <@~|@floating>@ <|@
tid v1032 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1031 
y: j1008 
=== Succesors ===
=== Usages ===
v911 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1031 y: j1008  <|@  <|@
f <@*|@fixed>@ <|@
tid v911 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1032 
=== Succesors ===
trueSuccessor: v910 
falseSuccessor: v909 
=== Usages ===
=== Predecessor ===
v892 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1032 #trueSuccessor: v910 #falseSuccessor: v909  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = LEA [v20|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v27|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v910 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v914 
=== Usages ===
=== Predecessor ===
v911 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v914  <|@  <|@
f <@*|@fixed>@ <|@
tid v914 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v903 
=== Predecessor ===
v910 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|QWORD] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v909 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1139 
=== Usages ===
v1139 
=== Predecessor ===
v911 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1139  <|@  <|@
f <@~|@floating>@ <|@
tid v1206 <|@
result [v23|QWORD[*] + v27|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j987 
index: j1008 
=== Succesors ===
=== Usages ===
v1139 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j987 index: j1008  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1139 <|@
result v29|V128_DWORD[....] <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v909 
address: v1206 
=== Succesors ===
next: v1093 
=== Usages ===
v1093 
=== Predecessor ===
v909 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v909 address: v1206 #next: v1093  <|@  <|@
f <@~|@floating>@ <|@
tid v1205 <|@
result [v22|QWORD[.] + v27|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j989 
index: j1008 
=== Succesors ===
=== Usages ===
v1093 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j989 index: j1008  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1093 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1205 
value: v1139 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v902 
=== Usages ===
=== Predecessor ===
v1139 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1205 value: v1139 stateAfter: - lastLocationAccess: - #next: v902  <|@  <|@
f <@~|@floating>@ <|@
tid j1015 <|@
result v30|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1008 
y: j992 
=== Succesors ===
=== Usages ===
j999 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1008 y: j992  <|@  <|@
f <@*|@fixed>@ <|@
tid v902 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v903 
=== Predecessor ===
v1093 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|V128_DWORD[....] = H [v23|QWORD[*] + v27|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v22|QWORD[.] + v27|QWORD * 4], input: v29|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = LEA [v27|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|QWORD] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j999 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v903 
values: j1015 j1008 
=== Succesors ===
=== Usages ===
v1204 j1007 j990 v1036 v1203 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v903 values: j1015 j1008  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v903 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v902 v914 
=== Succesors ===
next: v917 
=== Usages ===
j999 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v902 v914 #next: v917  <|@  <|@
f <@~|@floating>@ <|@
tid j1035 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j865 
y: j1034 
=== Succesors ===
=== Usages ===
v1036 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j865 y: j1034  <|@  <|@
f <@~|@floating>@ <|@
tid v1036 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1035 
y: j999 
=== Succesors ===
=== Usages ===
v917 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1035 y: j999  <|@  <|@
f <@*|@fixed>@ <|@
tid v917 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1036 
=== Succesors ===
trueSuccessor: v916 
falseSuccessor: v915 
=== Usages ===
=== Predecessor ===
v903 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1036 #trueSuccessor: v916 #falseSuccessor: v915  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA [v20|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v31|QWORD, y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v916 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v920 
=== Usages ===
=== Predecessor ===
v917 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v920  <|@  <|@
f <@*|@fixed>@ <|@
tid v920 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v906 
=== Predecessor ===
v916 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v31|QWORD] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v915 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1140 
=== Usages ===
v1140 
=== Predecessor ===
v917 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1140  <|@  <|@
f <@~|@floating>@ <|@
tid v1204 <|@
result [v23|QWORD[*] + v31|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j987 
index: j999 
=== Succesors ===
=== Usages ===
v1140 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j987 index: j999  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1140 <|@
result v33|V64_DWORD[..] <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v915 
address: v1204 
=== Succesors ===
next: v1091 
=== Usages ===
v1091 
=== Predecessor ===
v915 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v915 address: v1204 #next: v1091  <|@  <|@
f <@~|@floating>@ <|@
tid v1203 <|@
result [v22|QWORD[.] + v31|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j989 
index: j999 
=== Succesors ===
=== Usages ===
v1091 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j989 index: j999  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1091 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1203 
value: v1140 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v905 
=== Usages ===
=== Predecessor ===
v1140 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1203 value: v1140 stateAfter: - lastLocationAccess: - #next: v905  <|@  <|@
f <@~|@floating>@ <|@
tid j1007 <|@
result v34|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j999 
y: j1006 
=== Succesors ===
=== Usages ===
j990 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j999 y: j1006  <|@  <|@
f <@*|@fixed>@ <|@
tid v905 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v906 
=== Predecessor ===
v1091 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|V64_DWORD[..] = H [v23|QWORD[*] + v31|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v22|QWORD[.] + v31|QWORD * 4], input: v33|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = LEA [v31|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|QWORD] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j990 <|@
result v35|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v906 
values: j1007 j999 
=== Succesors ===
=== Usages ===
v1202 v1039 v1201 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v906 values: j1007 j999  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v906 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v905 v920 
=== Succesors ===
next: v923 
=== Usages ===
j990 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v905 v920 #next: v923  <|@  <|@
f <@~|@floating>@ <|@
tid j1038 <|@
result v36|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j865 
y: j694 
=== Succesors ===
=== Usages ===
v1039 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j865 y: j694  <|@  <|@
f <@~|@floating>@ <|@
tid v1039 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1038 
y: j990 
=== Succesors ===
=== Usages ===
v923 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1038 y: j990  <|@  <|@
f <@*|@fixed>@ <|@
tid v923 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1039 
=== Succesors ===
trueSuccessor: v922 
falseSuccessor: v921 
=== Usages ===
=== Predecessor ===
v906 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1039 #trueSuccessor: v922 #falseSuccessor: v921  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = DEC v20|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v35|QWORD, y: v36|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v922 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v926 
=== Usages ===
=== Predecessor ===
v923 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v926  <|@  <|@
f <@*|@fixed>@ <|@
tid v926 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v896 
=== Predecessor ===
v922 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v921 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1141 
=== Usages ===
a1141 
=== Predecessor ===
v923 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1141  <|@  <|@
f <@~|@floating>@ <|@
tid v1202 <|@
result [v23|QWORD[*] + v35|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j987 
index: j990 
=== Succesors ===
=== Usages ===
a1141 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j987 index: j990  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1141 <|@
result v37|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v921 
address: v1202 
=== Succesors ===
next: v1089 
=== Usages ===
v1089 
=== Predecessor ===
v921 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v921 address: v1202 #next: v1089  <|@  <|@
f <@~|@floating>@ <|@
tid v1201 <|@
result [v22|QWORD[.] + v35|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j989 
index: j990 
=== Succesors ===
=== Usages ===
v1089 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j989 index: j990  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1089 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1201 
value: a1141 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v908 
=== Usages ===
=== Predecessor ===
a1141 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1201 value: a1141 stateAfter: - lastLocationAccess: - #next: v908  <|@  <|@
f <@*|@fixed>@ <|@
tid v908 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v896 
=== Predecessor ===
v1089 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|DWORD[.] = MOV [v23|QWORD[*] + v35|QWORD * 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v22|QWORD[.] + v35|QWORD * 4], y: v37|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B13" "B27" "B26" 
    successors "B29" "B44" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v896 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v895 v908 v926 
=== Succesors ===
next: v1042 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v895 v908 v926 #next: v1042  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1042 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v933 
=== Usages ===
j1044 
=== Predecessor ===
v896 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v933  <|@  <|@
f <@~|@floating>@ <|@
tid j864 <|@
result v38|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1135 
=== Succesors ===
=== Usages ===
j869 v983 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1135  <|@  <|@
f <@~|@floating>@ <|@
tid v983 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j865 
y: j864 
=== Succesors ===
=== Usages ===
v933 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j865 y: j864  <|@  <|@
f <@*|@fixed>@ <|@
tid v933 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v983 
=== Succesors ===
trueSuccessor: v932 
falseSuccessor: v931 
=== Usages ===
=== Predecessor ===
v1042 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v983 #trueSuccessor: v932 #falseSuccessor: v931  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVSXD v5|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v38|QWORD, y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v932 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v936 
=== Usages ===
=== Predecessor ===
v933 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v936  <|@  <|@
f <@~|@floating>@ <|@
tid v1200 <|@
result [v17|QWORD[.] + v20|QWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a640 
index: j865 
=== Succesors ===
=== Usages ===
j1044 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a640 index: j865  <|@  <|@
f <@~|@floating>@ <|@
tid j1044 <|@
result v39|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1042 
address: v1200 
=== Succesors ===
=== Usages ===
v1209 v1210 v1211 v1212 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1042 address: v1200  <|@  <|@
f <@~|@floating>@ <|@
tid j869 <|@
result v40|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j864 
y: j865 
=== Succesors ===
=== Usages ===
j1080 j1069 j1074 j1077 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j864 y: j865  <|@  <|@
f <@~|@floating>@ <|@
tid j1069 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j869 
y: j1024 
=== Succesors ===
=== Usages ===
v1070 v1072 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j869 y: j1024  <|@  <|@
f <@~|@floating>@ <|@
tid v1070 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1069 
y: j471 
=== Succesors ===
=== Usages ===
v936 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1069 y: j471  <|@  <|@
f <@*|@fixed>@ <|@
tid v936 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1070 
=== Succesors ===
trueSuccessor: v934 
falseSuccessor: v935 
=== Usages ===
=== Predecessor ===
v932 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1070 #trueSuccessor: v934 #falseSuccessor: v935  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = LEA [v17|QWORD[.] + v20|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = SUB (x: v38|QWORD, ~y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = LEA [v40|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v41|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v934 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v945 
=== Usages ===
=== Predecessor ===
v936 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v945  <|@  <|@
f <@*|@fixed>@ <|@
tid v945 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v946 
=== Predecessor ===
v934 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v935 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v937 
=== Usages ===
=== Predecessor ===
v936 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v937  <|@  <|@
f <@~|@floating>@ <|@
tid v1104 <|@
result v42|V256_DWORD[........] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null,null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n -,n -,n -,n -,n ->
value: SIMD<null,null,null,null,null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1103 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v937 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v938 
=== Predecessor ===
v935 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B43" 
    successors "B33" "B43" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1063 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v938 
values: j471 j1068 
=== Succesors ===
=== Usages ===
v1212 j1068 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v938 values: j471 j1068  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v938 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v937 
=== Succesors ===
next: v1103 
=== Usages ===
j1063 v941 v942 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v937 #next: v1103  <|@  <|@
f <@~|@floating>@ <|@
tid v1212 <|@
result [v39|QWORD[.] + v43|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j1044 
index: j1063 
=== Succesors ===
=== Usages ===
v1103 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1044 index: j1063  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1103 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1212 
value: v1104 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v944 
=== Usages ===
=== Predecessor ===
v938 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1212 value: v1104 stateAfter: - lastLocationAccess: - #next: v944  <|@  <|@
f <@~|@floating>@ <|@
tid j1068 <|@
result v44|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1063 
y: j599 
=== Succesors ===
=== Usages ===
j1057 j1063 v1072 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1063 y: j599  <|@  <|@
f <@~|@floating>@ <|@
tid v1072 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1069 
y: j1068 
=== Succesors ===
=== Usages ===
v944 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1069 y: j1068  <|@  <|@
f <@*|@fixed>@ <|@
tid v944 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1072 
=== Succesors ===
trueSuccessor: v941 
falseSuccessor: v943 
=== Usages ===
=== Predecessor ===
v1103 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1072 #trueSuccessor: v941 #falseSuccessor: v943  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v43|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v39|QWORD[.] + v43|QWORD * 4], input: v42|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = LEA [v43|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v44|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v941 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v938 
=== Succesors ===
next: v947 
=== Usages ===
=== Predecessor ===
v944 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v938 #next: v947  <|@  <|@
f <@*|@fixed>@ <|@
tid v947 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v946 
=== Predecessor ===
v941 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|QWORD] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1057 <|@
result v45|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v946 
values: j471 j1068 
=== Succesors ===
=== Usages ===
v1211 j1062 j1051 v1075 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v946 values: j471 j1068  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v946 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v945 v947 
=== Succesors ===
next: v965 
=== Usages ===
j1057 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v945 v947 #next: v965  <|@  <|@
f <@~|@floating>@ <|@
tid j1074 <|@
result v46|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j869 
y: j1030 
=== Succesors ===
=== Usages ===
v1075 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j869 y: j1030  <|@  <|@
f <@~|@floating>@ <|@
tid v1075 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1074 
y: j1057 
=== Succesors ===
=== Usages ===
v965 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1074 y: j1057  <|@  <|@
f <@*|@fixed>@ <|@
tid v965 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1075 
=== Succesors ===
trueSuccessor: v964 
falseSuccessor: v963 
=== Usages ===
=== Predecessor ===
v946 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1075 #trueSuccessor: v964 #falseSuccessor: v963  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA [v40|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v45|QWORD, y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v964 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v968 
=== Usages ===
=== Predecessor ===
v965 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v968  <|@  <|@
f <@*|@fixed>@ <|@
tid v968 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v957 
=== Predecessor ===
v964 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v45|QWORD] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v963 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1102 
=== Usages ===
=== Predecessor ===
v965 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1102  <|@  <|@
f <@~|@floating>@ <|@
tid v1211 <|@
result [v39|QWORD[.] + v45|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j1044 
index: j1057 
=== Succesors ===
=== Usages ===
v1102 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1044 index: j1057  <|@  <|@
f <@~|@floating>@ <|@
tid v1107 <|@
result v47|V128_DWORD[....] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n ->
value: SIMD<null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1102 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1102 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1211 
value: v1107 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v956 
=== Usages ===
=== Predecessor ===
v963 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1211 value: v1107 stateAfter: - lastLocationAccess: - #next: v956  <|@  <|@
f <@~|@floating>@ <|@
tid j1062 <|@
result v48|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1057 
y: j992 
=== Succesors ===
=== Usages ===
j1051 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1057 y: j992  <|@  <|@
f <@*|@fixed>@ <|@
tid v956 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v957 
=== Predecessor ===
v1102 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction J (address: [v39|QWORD[.] + v45|QWORD * 4], input: v47|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = LEA [v45|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|QWORD] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1051 <|@
result v49|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v957 
values: j1062 j1057 
=== Succesors ===
=== Usages ===
v1210 j1056 j1045 v1078 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v957 values: j1062 j1057  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v957 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v956 v968 
=== Succesors ===
next: v971 
=== Usages ===
j1051 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v956 v968 #next: v971  <|@  <|@
f <@~|@floating>@ <|@
tid j1077 <|@
result v50|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j869 
y: j1034 
=== Succesors ===
=== Usages ===
v1078 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j869 y: j1034  <|@  <|@
f <@~|@floating>@ <|@
tid v1078 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1077 
y: j1051 
=== Succesors ===
=== Usages ===
v971 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1077 y: j1051  <|@  <|@
f <@*|@fixed>@ <|@
tid v971 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1078 
=== Succesors ===
trueSuccessor: v970 
falseSuccessor: v969 
=== Usages ===
=== Predecessor ===
v957 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1078 #trueSuccessor: v970 #falseSuccessor: v969  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = LEA [v40|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v49|QWORD, y: v50|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v970 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v974 
=== Usages ===
=== Predecessor ===
v971 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v974  <|@  <|@
f <@*|@fixed>@ <|@
tid v974 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v960 
=== Predecessor ===
v970 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|QWORD] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v969 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1100 
=== Usages ===
=== Predecessor ===
v971 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1100  <|@  <|@
f <@~|@floating>@ <|@
tid v1210 <|@
result [v39|QWORD[.] + v49|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j1044 
index: j1051 
=== Succesors ===
=== Usages ===
v1100 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1044 index: j1051  <|@  <|@
f <@~|@floating>@ <|@
tid v1106 <|@
result v51|V64_DWORD[..] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL>
stampKind: <n -,n ->
value: SIMD<null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1100 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1100 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1210 
value: v1106 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v959 
=== Usages ===
=== Predecessor ===
v969 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1210 value: v1106 stateAfter: - lastLocationAccess: - #next: v959  <|@  <|@
f <@~|@floating>@ <|@
tid j1056 <|@
result v52|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1051 
y: j1006 
=== Succesors ===
=== Usages ===
j1045 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1051 y: j1006  <|@  <|@
f <@*|@fixed>@ <|@
tid v959 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v960 
=== Predecessor ===
v1100 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr   -1  <|@ instruction J (address: [v39|QWORD[.] + v49|QWORD * 4], input: v51|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = LEA [v49|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v52|QWORD] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1045 <|@
result v53|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v960 
values: j1056 j1051 
=== Succesors ===
=== Usages ===
v1209 v1081 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v960 values: j1056 j1051  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v960 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v959 v974 
=== Succesors ===
next: v977 
=== Usages ===
j1045 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v959 v974 #next: v977  <|@  <|@
f <@~|@floating>@ <|@
tid j1080 <|@
result v54|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j869 
y: j694 
=== Succesors ===
=== Usages ===
v1081 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j869 y: j694  <|@  <|@
f <@~|@floating>@ <|@
tid v1081 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1080 
y: j1045 
=== Succesors ===
=== Usages ===
v977 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1080 y: j1045  <|@  <|@
f <@*|@fixed>@ <|@
tid v977 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1081 
=== Succesors ===
trueSuccessor: v976 
falseSuccessor: v975 
=== Usages ===
=== Predecessor ===
v960 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1081 #trueSuccessor: v976 #falseSuccessor: v975  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v53|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = DEC v40|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v53|QWORD, y: v54|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v976 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v980 
=== Usages ===
=== Predecessor ===
v977 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v980  <|@  <|@
f <@*|@fixed>@ <|@
tid v980 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v950 
=== Predecessor ===
v976 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v975 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1098 
=== Usages ===
=== Predecessor ===
v977 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1098  <|@  <|@
f <@~|@floating>@ <|@
tid v1209 <|@
result [v39|QWORD[.] + v53|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j1044 
index: j1045 
=== Succesors ===
=== Usages ===
v1098 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1044 index: j1045  <|@  <|@
f <@~|@floating>@ <|@
tid a1105 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1098 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1098 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1209 
value: a1105 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v962 
=== Usages ===
=== Predecessor ===
v975 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1209 value: a1105 stateAfter: - lastLocationAccess: - #next: v962  <|@  <|@
f <@*|@fixed>@ <|@
tid v962 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v950 
=== Predecessor ===
v1098 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v39|QWORD[.] + v53|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B32" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v943 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v942 
=== Usages ===
=== Predecessor ===
v944 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v942  <|@  <|@
f <@*|@fixed>@ <|@
tid v942 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v938 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v943 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v938  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|QWORD] destination: B43 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B45" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v931 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v949 
=== Usages ===
=== Predecessor ===
v933 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v949  <|@  <|@
f <@*|@fixed>@ <|@
tid v949 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v950 
=== Predecessor ===
v931 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B42" "B41" 
    successors "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v950 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v949 v962 v980 
=== Succesors ===
next: j681 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v949 v962 v980 #next: j681  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j681 <|@
result [v17|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToFirstArrayElement(WriteBarrierSnippets.java:376) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 20]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1165 
=== Succesors ===
next: j683 
=== Usages ===
j682 
=== Predecessor ===
v950 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1165 #next: j683  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j683 <|@
result [v17|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:385) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1165 
=== Succesors ===
next: v691 
=== Usages ===
j687 
=== Predecessor ===
j681 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1165 #next: v691  <|@  <|@
f <@~|@floating>@ <|@
tid i164 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 45]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i165 i387 i1125 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1125 <|@
result v55|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i32
=== Inputs ===
x: i1135 
y: i164 
=== Succesors ===
=== Usages ===
i685 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1135 y: i164  <|@  <|@
f <@~|@floating>@ <|@
tid i685 <|@
result v56|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i1125 
y: i314 
=== Succesors ===
=== Usages ===
j686 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1125 y: i314  <|@  <|@
f <@~|@floating>@ <|@
tid j686 <|@
result v57|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 26]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
resultBits: 64
stamp: i64 [-2147483648 - 2147483644] ⇈fffffffffffffffc
=== Inputs ===
value: i685 
=== Succesors ===
=== Usages ===
j687 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i685  <|@  <|@
f <@~|@floating>@ <|@
tid j687 <|@
result v59|QWORD[.] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 27]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: i64
=== Inputs ===
x: j683 
y: j686 
=== Succesors ===
=== Usages ===
j688 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j683 y: j686  <|@  <|@
f <@~|@floating>@ <|@
tid i680 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:157) [bci: 8]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j682 j688 j804 j812 j819 j826 j833 j840 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j688 <|@
result v60|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 34]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j687 
y: i680 
=== Succesors ===
=== Usages ===
j689 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j687 y: i680  <|@  <|@
f <@~|@floating>@ <|@
tid j682 <|@
result v61|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 24]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j681 
y: i680 
=== Succesors ===
=== Usages ===
j689 j704 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j681 y: i680  <|@  <|@
f <@~|@floating>@ <|@
tid j689 <|@
result v63|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 41]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: i64 [-36028797018963967 - 36028797018963967]
=== Inputs ===
x: j688 
y: j682 
=== Succesors ===
=== Usages ===
j690 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j688 y: j682  <|@  <|@
f <@~|@floating>@ <|@
tid j690 <|@
result v64|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 43]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: i64 [-36028797018963966 - 36028797018963968]
=== Inputs ===
x: j689 
y: j607 
=== Succesors ===
=== Usages ===
j693 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j689 y: j607  <|@  <|@
f <@~|@floating>@ <|@
tid j703 <|@
result v65|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:158) [bci: 12]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j704 v1186 v1187 v1188 v1189 v1190 v1191 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v691 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v692 
=== Predecessor ===
j683 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = DEC v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = SHL v55|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOVSXD v56|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = LEA [v17|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = ADD (x: v58|QWORD[.], y: v57|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[*] = SHR v59|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = LEA [v17|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[*] = SHR v62|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[*] = SUB (x: v60|QWORD[*], ~y: v61|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[*] = INC v63|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v64|QWORD[*]] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B83" 
    successors "B47" "B83" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4611686018427387904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j693 <|@
result v66|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v692 
values: j690 j695 
=== Succesors ===
=== Usages ===
j695 v696 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v692 values: j690 j695  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v692 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v691 
=== Succesors ===
next: v699 
=== Usages ===
j693 v697 v702 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v691 #next: v699  <|@  <|@
f <@~|@floating>@ <|@
tid v696 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j693 
y: j607 
=== Succesors ===
=== Usages ===
v699 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j693 y: j607  <|@  <|@
f <@*|@fixed>@ <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v696 
=== Succesors ===
trueSuccessor: v697 
falseSuccessor: v698 
=== Usages ===
=== Predecessor ===
v692 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v696 #trueSuccessor: v697 #falseSuccessor: v698  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v66|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v66|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B46 -> B47 falseDestination: B46 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v697 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:165) [bci: 76]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v692 
=== Succesors ===
next: a554 
=== Usages ===
=== Predecessor ===
v699 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v692 #next: a554  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a554 <|@
result v17|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a640 
=== Succesors ===
next: v19 
=== Usages ===
?203 ?39 v1157 v1158 
=== Predecessor ===
v697 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a640 #next: v19  <|@  <|@
f <@~|@floating>@ <|@
tid i69 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 125]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i70 i92 v95 i154 v169 ?203 v213 i212 v242 a724 a770 i1126 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 72]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1135 
y: i69 
=== Succesors ===
=== Usages ===
v185 v235 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1135 y: i69  <|@  <|@
f <@~|@floating>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:414) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i1133 
=== Succesors ===
=== Usages ===
v19 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2 y: i1133  <|@  <|@
f <@~|@floating>@ <|@
tid i808 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 118]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v807 v815 v822 v829 v836 v843 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1154 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1144 v354 a1142 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:414) [bci: 28]
stamp: void
trueSuccessorProbability: 0.8910276052257723
=== Inputs ===
condition: v16 
=== Succesors ===
trueSuccessor: v17 
falseSuccessor: v18 
=== Usages ===
=== Predecessor ===
a554 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v16 #trueSuccessor: v17 #falseSuccessor: v18  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8910276052257723 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4606200882727019643
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:415) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1142 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1142  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1142 <|@
result v67|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList.last
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:416) [bci: 35]
nullCheck: false
stamp: n# Ljava/util/LinkedList$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1154 
=== Succesors ===
next: v235 
=== Usages ===
a498 a1130 a499 
=== Predecessor ===
v17 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1154 #next: v235  <|@  <|@
f <@*|@fixed>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 72]
stamp: void
trueSuccessorProbability: 0.1668076129583852
=== Inputs ===
condition: v213 
=== Succesors ===
trueSuccessor: v234 
falseSuccessor: v233 
=== Usages ===
=== Predecessor ===
a1142 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v213 #trueSuccessor: v234 #falseSuccessor: v233  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v67|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.1668076129583852 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B80" 
    xhandlers
    flags 
    probability 4594522987161553770
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:432) [bci: 131]
stamp: void
=== Inputs ===
=== Succesors ===
next: v257 
=== Usages ===
=== Predecessor ===
v235 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v257  <|@  <|@
f <@*|@fixed>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v254 
=== Predecessor ===
v234 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v67|DWORD[.]] destination: B49 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B61" 
    xhandlers
    flags 
    probability 4604862141009265057
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 75]
stamp: void
=== Inputs ===
=== Succesors ===
next: v222 
=== Usages ===
=== Predecessor ===
v235 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v222  <|@  <|@
f <@~|@floating>@ <|@
tid a1130 <|@
result v68|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:575) [bci: 36]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
op: Uncompress
stamp: a# Ljava/util/LinkedList$Node;
=== Inputs ===
value: a1142 
=== Succesors ===
=== Usages ===
a224 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1142  <|@  <|@
f <@*|@fixed>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v219 
=== Predecessor ===
v233 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = UNCOMPRESSPOINTER (input: v67|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@74b0c02b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v68|QWORD[.], Object[null], v67|DWORD[.]] destination: B50 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" "B55" 
    xhandlers
    flags 
    probability 4592516709247147048
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v158 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v158  <|@  <|@
f <@~|@floating>@ <|@
tid i154 <|@
result v69|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:569) [bci: 6]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
stamp: i32 [-1073741824 - 1073741823]
=== Inputs ===
x: i1133 
y: i69 
=== Succesors ===
=== Usages ===
v155 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i1133 y: i69  <|@  <|@
f <@~|@floating>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:569) [bci: 7]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i154 
=== Succesors ===
=== Usages ===
v158 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i154  <|@  <|@
f <@*|@fixed>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:569) [bci: 7]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
stamp: void
trueSuccessorProbability: 0.6958208146579323
=== Inputs ===
condition: v155 
=== Succesors ===
trueSuccessor: v156 
falseSuccessor: v157 
=== Usages ===
=== Predecessor ===
v18 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v155 #trueSuccessor: v156 #falseSuccessor: v157  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = SAR v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v69|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6958208146579323 condition: > trueDestination: B51 -> B52 falseDestination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4590128206502600549
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:570) [bci: 10]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
stamp: void
=== Inputs ===
=== Succesors ===
next: v435 
=== Usages ===
=== Predecessor ===
v158 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v435  <|@  <|@
f <@~|@floating>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:571) [bci: 19]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i69 
=== Succesors ===
=== Usages ===
v435 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i69  <|@  <|@
f <@*|@fixed>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:571) [bci: 19]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v169 
=== Succesors ===
trueSuccessor: v432 
falseSuccessor: v434 
=== Usages ===
=== Predecessor ===
v156 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v169 #trueSuccessor: v432 #falseSuccessor: v434  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v1|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590128206502600549
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:571) [bci: 19]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1143 
=== Usages ===
=== Predecessor ===
v435 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1143  <|@  <|@
f <@~|@floating>@ <|@
tid v1156 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1143 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1143 <|@
result v70|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList.first
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:570) [bci: 11]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
nullCheck: false
stamp: n# Ljava/util/LinkedList$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1156 
=== Succesors ===
next: v171 
=== Usages ===
a306 
=== Predecessor ===
v432 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1156 #next: v171  <|@  <|@
f <@~|@floating>@ <|@
tid a306 <|@
result v71|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:570) [bci: 11]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
op: Uncompress
stamp: a# Ljava/util/LinkedList$Node;
=== Inputs ===
value: a1143 
=== Succesors ===
=== Usages ===
a172 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1143  <|@  <|@
f <@*|@fixed>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v170 
=== Predecessor ===
a1143 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = UNCOMPRESSPOINTER (input: v70|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@74b0c02b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v71|QWORD[.]] destination: B53 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B86" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:571) [bci: 19]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
stamp: void
=== Inputs ===
=== Succesors ===
next: v586 
=== Usages ===
=== Predecessor ===
v435 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v586  <|@  <|@
f <@~|@floating>@ <|@
tid i587 <|@
result int[-78611|0xfffffffffffecced] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -78611
stableDimension: 0
stamp: i32 [-78611] ⇊00000000fffecced ⇈00000000fffecced
stampKind: i32
value: int[-78611|0xfffffffffffecced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i571 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v568 
=== Predecessor ===
v434 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-78611|0xfffffffffffecced]] destination: B54 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4584937826524887431
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:575) [bci: 35]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
stamp: void
=== Inputs ===
=== Succesors ===
next: v439 
=== Usages ===
=== Predecessor ===
v158 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v439  <|@  <|@
f <@~|@floating>@ <|@
tid i165 <|@
result v72|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 45]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
stamp: i32
=== Inputs ===
x: i1133 
y: i164 
=== Succesors ===
=== Usages ===
v166 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1133 y: i164  <|@  <|@
f <@~|@floating>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 49]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i165 
=== Succesors ===
=== Usages ===
v439 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i165  <|@  <|@
f <@*|@fixed>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 49]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v166 
=== Succesors ===
trueSuccessor: v438 
falseSuccessor: v436 
=== Usages ===
=== Predecessor ===
v157 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v166 #trueSuccessor: v438 #falseSuccessor: v436  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = DEC v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v72|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B86" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 49]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
stamp: void
=== Inputs ===
=== Succesors ===
next: v584 
=== Usages ===
=== Predecessor ===
v439 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v584  <|@  <|@
f <@~|@floating>@ <|@
tid i585 <|@
result int[-79379|0xfffffffffffec9ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -79379
stableDimension: 0
stamp: i32 [-79379] ⇊00000000fffec9ed ⇈00000000fffec9ed
stampKind: i32
value: int[-79379|0xfffffffffffec9ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i571 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v584 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v568 
=== Predecessor ===
v438 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-79379|0xfffffffffffec9ed]] destination: B56 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4584937826524887431
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 49]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1144 
=== Usages ===
=== Predecessor ===
v439 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1144  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1144 <|@
result v73|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList.last
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:416) [bci: 35]
nullCheck: false
stamp: n# Ljava/util/LinkedList$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1154 
=== Succesors ===
next: v173 
=== Usages ===
a309 
=== Predecessor ===
v436 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1154 #next: v173  <|@  <|@
f <@~|@floating>@ <|@
tid a309 <|@
result v74|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:575) [bci: 36]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
op: Uncompress
stamp: a# Ljava/util/LinkedList$Node;
=== Inputs ===
value: a1144 
=== Succesors ===
=== Usages ===
a172 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1144  <|@  <|@
f <@*|@fixed>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v170 
=== Predecessor ===
a1144 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = UNCOMPRESSPOINTER (input: v73|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@74b0c02b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v74|QWORD[.]] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" "B57" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4592516709247147048
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a172 <|@
result v75|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Ljava/util/LinkedList$Node;
valueDescription: a -
=== Inputs ===
merge: v170 
values: a306 a309 
=== Succesors ===
=== Usages ===
a227 v1155 a226 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v170 values: a306 a309  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v171 v173 
=== Succesors ===
next: a1145 
=== Usages ===
a172 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v171 v173 #next: a1145  <|@  <|@
f <@~|@floating>@ <|@
tid v1155 <|@
result [v75|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a172 
index: - 
=== Succesors ===
=== Usages ===
a1145 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a172 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1145 <|@
result v76|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList$Node.prev
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:419) [bci: 52]
nullCheck: true
stamp: n# Ljava/util/LinkedList$Node;
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v1155 
=== Succesors ===
next: v185 
=== Usages ===
a303 a498 a501 
=== Predecessor ===
v170 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v1155 #next: v185  <|@  <|@
f <@~|@floating>@ <|@
tid a303 <|@
result v77|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:419) [bci: 52]
op: Uncompress
stamp: a# Ljava/util/LinkedList$Node;
=== Inputs ===
value: a1145 
=== Succesors ===
=== Usages ===
a224 a210 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1145  <|@  <|@
f <@*|@fixed>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 72]
stamp: void
trueSuccessorProbability: 0.1668076129583852
=== Inputs ===
condition: v213 
=== Succesors ===
trueSuccessor: v184 
falseSuccessor: v183 
=== Usages ===
=== Predecessor ===
a1145 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v213 #trueSuccessor: v184 #falseSuccessor: v183  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v75|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] - - - - - - - - - - 
>@ <|@ instruction v76|DWORD[.] = MOV [v75|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = UNCOMPRESSPOINTER (input: v76|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@74b0c02b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.1668076129583852 condition: < trueDestination: B58 -> B59 falseDestination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B78" 
    xhandlers
    flags 
    probability 4580896507468241680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:432) [bci: 131]
stamp: void
=== Inputs ===
=== Succesors ===
next: v208 
=== Usages ===
=== Predecessor ===
v185 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v208  <|@  <|@
f <@*|@fixed>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v206 
=== Predecessor ===
v184 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|QWORD[.], v75|QWORD[.], v76|DWORD[.]] destination: B59 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4591206887732192612
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 75]
stamp: void
=== Inputs ===
=== Succesors ===
next: v220 
=== Usages ===
=== Predecessor ===
v185 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v220  <|@  <|@
f <@*|@fixed>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v219 
=== Predecessor ===
v183 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|QWORD[.], v75|QWORD[.], v76|DWORD[.]] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B50" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4605679949392893518
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a224 <|@
result v78|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Ljava/util/LinkedList$Node;
valueDescription: a -
=== Inputs ===
merge: v219 
values: a303 a1130 
=== Succesors ===
=== Usages ===
v187 j818 v1160 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v219 values: a303 a1130  <|@  <|@
f <@~|@floating>@ <|@
tid a226 <|@
result v79|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Ljava/util/LinkedList$Node;
valueDescription: a -
=== Inputs ===
merge: v219 
values: a172 a20 
=== Succesors ===
=== Usages ===
?39 a227 ?203 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v219 values: a172 a20  <|@  <|@
f <@~|@floating>@ <|@
tid a498 <|@
result v80|DWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: n# Ljava/util/LinkedList$Node;
valueDescription: n -
=== Inputs ===
merge: v219 
values: a1145 a1142 
=== Succesors ===
=== Usages ===
v758 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v219 values: a1145 a1142  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v220 v222 
=== Succesors ===
next: j712 
=== Usages ===
a224 a226 a498 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v220 v222 #next: j712  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j712 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j728 
=== Usages ===
v1177 v1178 
=== Predecessor ===
v219 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j728  <|@  <|@
f <@~|@floating>@ <|@
tid v1177 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j712 
index: - 
=== Succesors ===
=== Usages ===
j728 v730 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j712 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j728 <|@
result v81|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1177 
=== Succesors ===
next: j729 
=== Usages ===
j848 j734 v1192 
=== Predecessor ===
j712 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1177 #next: j729  <|@  <|@
f <@~|@floating>@ <|@
tid v1178 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j712 
index: - 
=== Succesors ===
=== Usages ===
j729 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j712 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j729 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1178 
=== Succesors ===
next: v720 
=== Usages ===
v717 
=== Predecessor ===
j728 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1178 #next: v720  <|@  <|@
f <@~|@floating>@ <|@
tid j294 <|@
result long[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:416) [bci: 35]
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j856 j848 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j848 <|@
result v82|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j728 
y: j294 
=== Succesors ===
=== Usages ===
v717 v730 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j728 y: j294  <|@  <|@
f <@~|@floating>@ <|@
tid v717 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j729 
y: j848 
=== Succesors ===
=== Usages ===
v720 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j729 y: j848  <|@  <|@
f <@~|@floating>@ <|@
tid v710 <|@
result v83|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a724 a770 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v720 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v717 
=== Succesors ===
trueSuccessor: v718 
falseSuccessor: v719 
=== Usages ===
=== Predecessor ===
j729 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v717 #trueSuccessor: v718 #falseSuccessor: v719  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|QWORD[.], v79|QWORD[.], v80|DWORD[.]] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = LEA [v81|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v82|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    probability 4575956648883528390
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v718 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a724 
=== Usages ===
=== Predecessor ===
v720 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a724  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a724 <|@
result v84|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?4 
arguments: v710 i314 i69 
=== Succesors ===
next: j725 
=== Usages ===
j725 
=== Predecessor ===
v718 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?4 arguments: v710 i314 i69 #next: j725  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j725 <|@
result v84|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a724 
=== Succesors ===
next: v735 
=== Usages ===
j734 
=== Predecessor ===
a724 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a724 #next: v735  <|@  <|@
f <@*|@fixed>@ <|@
tid v735 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v732 
=== Predecessor ===
j725 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v83|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v84|QWORD[.]] destination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    probability 4605604902094417347
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v719 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v730 
=== Usages ===
=== Predecessor ===
v720 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v730  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v730 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1177 
value: j848 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v727 
=== Usages ===
=== Predecessor ===
v719 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1177 value: j848 stateAfter: - lastLocationAccess: - #next: v727  <|@  <|@
f <@~|@floating>@ <|@
tid v1192 <|@
result [v81|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j728 
index: - 
=== Succesors ===
=== Usages ===
v727 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j728 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v727 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1192 
=== Succesors ===
next: v733 
=== Usages ===
=== Predecessor ===
v730 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1192 #next: v733  <|@  <|@
f <@*|@fixed>@ <|@
tid v733 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v732 
=== Predecessor ===
v727 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v82|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v81|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v81|QWORD] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B62" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4605679949392893518
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j734 <|@
result v85|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v732 
values: j728 j725 
=== Succesors ===
=== Usages ===
v1180 v1179 a473 v1193 v1194 v1195 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v732 values: j728 j725  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v732 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v733 v735 
=== Succesors ===
next: a473 
=== Usages ===
j734 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v733 v735 #next: a473  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a473 <|@
result v86|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j734 
=== Succesors ===
next: j746 
=== Usages ===
a481 
=== Predecessor ===
v732 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j734 #next: j746  <|@  <|@
f <@~|@floating>@ <|@
tid v740 <|@
result v87|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j786 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j786 <|@
result v87|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v740 
=== Succesors ===
=== Usages ===
v1183 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v740  <|@  <|@
f <@~|@floating>@ <|@
tid v1183 <|@
result [v87|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j786 
index: - 
=== Succesors ===
=== Usages ===
j790 j746 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j786 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j746 <|@
result v88|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1183 
=== Succesors ===
next: v747 
=== Usages ===
v747 
=== Predecessor ===
a473 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1183 #next: v747  <|@  <|@
f <@~|@floating>@ <|@
tid v1179 <|@
result [v85|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j734 
index: - 
=== Succesors ===
=== Usages ===
v747 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j734 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v747 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1179 
value: j746 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v750 
=== Usages ===
=== Predecessor ===
j746 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1179 value: j746 stateAfter: - lastLocationAccess: - #next: v750  <|@  <|@
f <@~|@floating>@ <|@
tid v1180 <|@
result [v85|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j734 
index: - 
=== Succesors ===
=== Usages ===
v750 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j734 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v852 <|@
result meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v750 v794 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1180 
value: v852 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1146 
=== Usages ===
=== Predecessor ===
v747 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1180 value: v852 stateAfter: - lastLocationAccess: - #next: a1146  <|@  <|@
f <@~|@floating>@ <|@
tid v1157 <|@
result [v17|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a554 
index: - 
=== Succesors ===
=== Usages ===
a1146 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a554 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1146 <|@
result v89|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 79]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v428 
address: v1157 
=== Succesors ===
next: v754 
=== Usages ===
v754 
=== Predecessor ===
v750 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v428 address: v1157 #next: v754  <|@  <|@
f <@~|@floating>@ <|@
tid v1193 <|@
result [v85|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j734 
index: - 
=== Succesors ===
=== Usages ===
v754 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j734 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v754 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1193 
value: a1146 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v756 
=== Usages ===
=== Predecessor ===
a1146 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1193 value: a1146 stateAfter: - lastLocationAccess: - #next: v756  <|@  <|@
f <@~|@floating>@ <|@
tid v1194 <|@
result [v85|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j734 
index: - 
=== Succesors ===
=== Usages ===
v756 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j734 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v756 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1194 
value: i12 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v758 
=== Usages ===
=== Predecessor ===
v754 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1194 value: i12 stateAfter: - lastLocationAccess: - #next: v758  <|@  <|@
f <@~|@floating>@ <|@
tid v1195 <|@
result [v85|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j734 
index: - 
=== Succesors ===
=== Usages ===
v758 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j734 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v758 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1195 
value: a498 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a481 
=== Usages ===
=== Predecessor ===
v756 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1195 value: a498 stateAfter: - lastLocationAccess: - #next: a481  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a481 <|@
result v86|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a473 
=== Succesors ===
next: v482 
=== Usages ===
a332 ?248 a211 
=== Predecessor ===
v758 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a473 #next: v482  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v190 
=== Usages ===
=== Predecessor ===
a481 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v190  <|@  <|@
f <@~|@floating>@ <|@
tid a332 <|@
result v90|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:426) [bci: 108]
op: Compress
stamp: n -
=== Inputs ===
value: a481 
=== Succesors ===
=== Usages ===
v333 v337 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a481  <|@  <|@
f <@~|@floating>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:425) [bci: 102]
stamp: void
=== Inputs ===
value: a224 
=== Succesors ===
=== Usages ===
v190 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a224  <|@  <|@
f <@*|@fixed>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:425) [bci: 102]
stamp: void
trueSuccessorProbability: 0.20020299699408295
=== Inputs ===
condition: v187 
=== Succesors ===
trueSuccessor: v188 
falseSuccessor: v189 
=== Usages ===
=== Predecessor ===
v482 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v187 #trueSuccessor: v188 #falseSuccessor: v189  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v85|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE v85|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v88|QWORD = MOV [v87|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v85|QWORD[*]], y: v88|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v85|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v89|DWORD[.] = MOV [v17|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v85|QWORD[*] + 12], y: v89|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v85|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v85|QWORD[*] + 20], y: v80|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|DWORD[.] = COMPRESSPOINTER (input: v86|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@74b0c02b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v78|QWORD[.], y: v78|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.20020299699408295 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4595177897919030989
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:426) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
next: v333 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v333  <|@  <|@
f <@~|@floating>@ <|@
tid v1215 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v333 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: LinkedList.first
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:426) [bci: 108]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1215 
value: a332 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j811 
=== Usages ===
=== Predecessor ===
v188 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1215 value: a332 stateAfter: - lastLocationAccess: - #next: j811  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j811 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.LinkedList.addAll(LinkedList.java:426) [bci: 108]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v815 
=== Usages ===
j812 
=== Predecessor ===
v333 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v815  <|@  <|@
f <@~|@floating>@ <|@
tid j812 <|@
result v91|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.addAll(LinkedList.java:426) [bci: 108]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j811 
y: i680 
=== Succesors ===
=== Usages ===
v1187 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j811 y: i680  <|@  <|@
f <@~|@floating>@ <|@
tid v1187 <|@
result [v91|QWORD[*] + v65|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j812 
index: j703 
=== Succesors ===
=== Usages ===
v815 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j812 index: j703  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v815 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.addAll(LinkedList.java:426) [bci: 108]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1187 
value: i808 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v196 
=== Usages ===
=== Predecessor ===
j811 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1187 value: i808 stateAfter: - lastLocationAccess: - #next: v196  <|@  <|@
f <@*|@fixed>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
v815 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v90|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v91|QWORD[*] + v65|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4604177479985769627
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: v337 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v337  <|@  <|@
f <@~|@floating>@ <|@
tid v1160 <|@
result [v78|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a224 
index: - 
=== Succesors ===
=== Usages ===
v337 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a224 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: LinkedList$Node.next
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 118]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1160 
value: a332 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j818 
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1160 value: a332 stateAfter: - lastLocationAccess: - #next: j818  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j818 <|@
result v78|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 118]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a224 
=== Succesors ===
next: v822 
=== Usages ===
j819 
=== Predecessor ===
v337 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a224 #next: v822  <|@  <|@
f <@~|@floating>@ <|@
tid j819 <|@
result v92|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 118]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j818 
y: i680 
=== Succesors ===
=== Usages ===
v1188 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j818 y: i680  <|@  <|@
f <@~|@floating>@ <|@
tid v1188 <|@
result [v92|QWORD[*] + v65|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j819 
index: j703 
=== Succesors ===
=== Usages ===
v822 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j819 index: j703  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v822 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 118]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1188 
value: i808 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v197 
=== Usages ===
=== Predecessor ===
j818 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1188 value: i808 stateAfter: - lastLocationAccess: - #next: v197  <|@  <|@
f <@*|@fixed>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:429) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
v822 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v78|QWORD[.] + 16], y: v90|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[*] = SHR v78|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v92|QWORD[*] + v65|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4605679949392893518
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v196 v197 
=== Succesors ===
next: v1115 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v196 v197 #next: v1115  <|@  <|@
f <@~|@floating>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1135 
y: i314 
=== Succesors ===
=== Usages ===
v1115 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1135 y: i314  <|@  <|@
f <@*|@fixed>@ <|@
tid v1115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 79]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v405 
=== Succesors ===
trueSuccessor: v1111 
falseSuccessor: v1114 
=== Usages ===
=== Predecessor ===
v202 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v405 #trueSuccessor: v1111 #falseSuccessor: v1114  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" 
    xhandlers
    flags 
    probability 4601176349765523022
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1109 
=== Usages ===
=== Predecessor ===
v1115 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1109  <|@  <|@
f <@*|@fixed>@ <|@
tid v1109 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1108 
=== Predecessor ===
v1111 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B82" 
    xhandlers
    flags 
    probability 4601176349765523022
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1123 
=== Usages ===
=== Predecessor ===
v1115 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1123  <|@  <|@
f <@~|@floating>@ <|@
tid i387 <|@
result v93|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i32
=== Inputs ===
x: i1135 
y: i164 
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1135 y: i164  <|@  <|@
f <@~|@floating>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i387 
y: i1135 
=== Succesors ===
=== Usages ===
v1123 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i387 y: i1135  <|@  <|@
f <@*|@fixed>@ <|@
tid v1123 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 79]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v401 
=== Succesors ===
trueSuccessor: v1122 
falseSuccessor: v1119 
=== Usages ===
=== Predecessor ===
v1114 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v401 #trueSuccessor: v1122 #falseSuccessor: v1119  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = DEC v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v93|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B69 -> B70 falseDestination: B69 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" 
    xhandlers
    flags 
    probability 4601176349765523022
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1122 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1110 
=== Usages ===
=== Predecessor ===
v1123 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1110  <|@  <|@
f <@*|@fixed>@ <|@
tid v1110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1108 
=== Predecessor ===
v1122 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B68" "B70" 
    successors "B72" 
    xhandlers
    flags 
    probability 4605679949392893518
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 79]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1109 v1110 
=== Succesors ===
next: v35 
=== Usages ===
v399 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1109 v1110 #next: v35  <|@  <|@
f <@*|@fixed>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v36 
=== Predecessor ===
v1108 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1], v86|QWORD[.]] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B76" 
    successors "B73" "B77" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4616371718666829691
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i212 <|@
result v94|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v36 
values: i69 i70 
=== Succesors ===
=== Usages ===
?39 v40 v1158 i70 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v36 values: i69 i70  <|@  <|@
f <@~|@floating>@ <|@
tid a211 <|@
result v95|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# Ljava/util/LinkedList$Node;
valueDescription: a -
=== Inputs ===
merge: v36 
values: a481 a492 
=== Succesors ===
=== Usages ===
?39 a210 a500 v1159 j803 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v36 values: a481 a492  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.994930220897519
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 68]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v35 
=== Succesors ===
next: v46 
=== Usages ===
i212 a211 v43 v96 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v35 #next: v46  <|@  <|@
f <@~|@floating>@ <|@
tid a500 <|@
result v96|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:436) [bci: 156]
op: Compress
stamp: n!# Ljava/util/LinkedList$Node;
=== Inputs ===
value: a211 
=== Succesors ===
=== Usages ===
a501 v802 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a211  <|@  <|@
f <@~|@floating>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 72]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i212 
y: i1135 
=== Succesors ===
=== Usages ===
v46 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i212 y: i1135  <|@  <|@
f <@*|@fixed>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 72]
stamp: void
trueSuccessorProbability: 0.8331923870416148
=== Inputs ===
condition: v40 
=== Succesors ===
trueSuccessor: v41 
falseSuccessor: v43 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v40 #trueSuccessor: v41 #falseSuccessor: v43  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v94|DWORD, v95|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v96|DWORD[.] = COMPRESSPOINTER (input: v95|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@74b0c02b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v94|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8331923870416148 condition: > trueDestination: B72 -> B73 falseDestination: B72 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4614990598334941345
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 75]
stamp: void
=== Inputs ===
=== Succesors ===
next: j759 
=== Usages ===
v399 
=== Predecessor ===
v46 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j759  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j759 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j774 
=== Usages ===
v1181 v1182 
=== Predecessor ===
v41 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j774  <|@  <|@
f <@~|@floating>@ <|@
tid v1181 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j759 
index: - 
=== Succesors ===
=== Usages ===
j774 v776 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j759 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j774 <|@
result v97|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1181 
=== Succesors ===
next: j775 
=== Usages ===
j856 j780 v1196 
=== Predecessor ===
j759 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1181 #next: j775  <|@  <|@
f <@~|@floating>@ <|@
tid v1182 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j759 
index: - 
=== Succesors ===
=== Usages ===
j775 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j759 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j775 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1182 
=== Succesors ===
next: v767 
=== Usages ===
v764 
=== Predecessor ===
j774 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1182 #next: v767  <|@  <|@
f <@~|@floating>@ <|@
tid j856 <|@
result v98|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j774 
y: j294 
=== Succesors ===
=== Usages ===
v764 v776 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j774 y: j294  <|@  <|@
f <@~|@floating>@ <|@
tid v764 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j775 
y: j856 
=== Succesors ===
=== Usages ===
v767 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j775 y: j856  <|@  <|@
f <@*|@fixed>@ <|@
tid v767 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v764 
=== Succesors ===
trueSuccessor: v765 
falseSuccessor: v766 
=== Usages ===
=== Predecessor ===
j775 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v764 #trueSuccessor: v765 #falseSuccessor: v766  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v97|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v98|QWORD = LEA [v97|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v98|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4585158055938145756
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v765 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a770 
=== Usages ===
=== Predecessor ===
v767 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a770  <|@  <|@
tid ?39 <|@
d <@d|@=== Debug Properties ===
bci: 68
code: ResolvedJavaMethodBytecode<LinkedList.addAll(int, Collection)>
duringCall: false
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: LinkedList.java
sourceLine: 422
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - i1135 a211 a226 a554 i1135 i212 - - - 
=== Succesors ===
=== Usages ===
a770 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - i1135 a211 a226 a554 i1135 i212 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a770 <|@
result v99|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?39 
arguments: v710 i314 i69 
=== Succesors ===
next: j771 
=== Usages ===
j771 
=== Predecessor ===
v765 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?39 arguments: v710 i314 i69 #next: j771  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j771 <|@
result v99|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a770 
=== Succesors ===
next: v781 
=== Usages ===
j780 
=== Predecessor ===
a770 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a770 #next: v781  <|@  <|@
f <@*|@fixed>@ <|@
tid v781 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v778 
=== Predecessor ===
j771 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v83|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList.addAll(LinkedList.java:422) [bci: 68]
locals: v0|QWORD[.] - - - v5|DWORD v95|QWORD[.] v79|QWORD[.] v17|QWORD[.] v5|DWORD v94|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:68] <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v99|QWORD[.]] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4614912516539592106
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v766 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v776 
=== Usages ===
=== Predecessor ===
v767 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v776  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v776 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1181 
value: j856 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v773 
=== Usages ===
=== Predecessor ===
v766 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1181 value: j856 stateAfter: - lastLocationAccess: - #next: v773  <|@  <|@
f <@~|@floating>@ <|@
tid v1196 <|@
result [v97|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j774 
index: - 
=== Succesors ===
=== Usages ===
v773 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j774 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v773 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1196 
=== Succesors ===
next: v779 
=== Usages ===
=== Predecessor ===
v776 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1196 #next: v779  <|@  <|@
f <@*|@fixed>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v778 
=== Predecessor ===
v773 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v98|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v97|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v97|QWORD] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B74" 
    successors "B72" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4614990598334941345
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j780 <|@
result v100|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v778 
values: j774 j771 
=== Succesors ===
=== Usages ===
v1185 v1184 a485 v1197 v1198 v1199 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v778 values: j774 j771  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v778 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v779 v781 
=== Succesors ===
next: a485 
=== Usages ===
j780 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v779 v781 #next: a485  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a485 <|@
result v101|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j780 
=== Succesors ===
next: j790 
=== Usages ===
a492 
=== Predecessor ===
v778 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j780 #next: j790  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j790 <|@
result v102|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1183 
=== Succesors ===
next: v791 
=== Usages ===
v791 
=== Predecessor ===
a485 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1183 #next: v791  <|@  <|@
f <@~|@floating>@ <|@
tid v1184 <|@
result [v100|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j780 
index: - 
=== Succesors ===
=== Usages ===
v791 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j780 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v791 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1184 
value: j790 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v794 
=== Usages ===
=== Predecessor ===
j790 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1184 value: j790 stateAfter: - lastLocationAccess: - #next: v794  <|@  <|@
f <@~|@floating>@ <|@
tid v1185 <|@
result [v100|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j780 
index: - 
=== Succesors ===
=== Usages ===
v794 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j780 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v794 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1185 
value: v852 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1147 
=== Usages ===
=== Predecessor ===
v791 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1185 value: v852 stateAfter: - lastLocationAccess: - #next: a1147  <|@  <|@
f <@~|@floating>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1108 v41 
=== Succesors ===
=== Usages ===
a1147 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1108 v41  <|@  <|@
f <@~|@floating>@ <|@
tid v1158 <|@
result [v17|QWORD[.] + v94|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a554 
index: i212 
=== Succesors ===
=== Usages ===
a1147 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a554 index: i212  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1147 <|@
result v103|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 79]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v399 
address: v1158 
=== Succesors ===
next: v798 
=== Usages ===
v798 
=== Predecessor ===
v794 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v399 address: v1158 #next: v798  <|@  <|@
f <@~|@floating>@ <|@
tid v1197 <|@
result [v100|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j780 
index: - 
=== Succesors ===
=== Usages ===
v798 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j780 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v798 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1197 
value: a1147 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v800 
=== Usages ===
=== Predecessor ===
a1147 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1197 value: a1147 stateAfter: - lastLocationAccess: - #next: v800  <|@  <|@
f <@~|@floating>@ <|@
tid v1198 <|@
result [v100|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j780 
index: - 
=== Succesors ===
=== Usages ===
v800 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j780 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v800 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1198 
value: i12 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v802 
=== Usages ===
=== Predecessor ===
v798 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1198 value: i12 stateAfter: - lastLocationAccess: - #next: v802  <|@  <|@
f <@~|@floating>@ <|@
tid v1199 <|@
result [v100|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j780 
index: - 
=== Succesors ===
=== Usages ===
v802 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j780 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v802 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1199 
value: a500 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a492 
=== Usages ===
=== Predecessor ===
v800 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1199 value: a500 stateAfter: - lastLocationAccess: - #next: a492  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a492 <|@
result v101|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a485 
=== Succesors ===
next: v493 
=== Usages ===
a329 a211 
=== Predecessor ===
v802 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a485 #next: v493  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v493 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v331 
=== Usages ===
=== Predecessor ===
a492 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v331  <|@  <|@
f <@~|@floating>@ <|@
tid v1159 <|@
result [v95|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a211 
index: - 
=== Succesors ===
=== Usages ===
v331 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a211 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a329 <|@
result v104|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 118]
op: Compress
stamp: n -
=== Inputs ===
value: a492 
=== Succesors ===
=== Usages ===
v331 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a492  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: LinkedList$Node.next
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 118]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1159 
value: a329 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j803 
=== Usages ===
=== Predecessor ===
v493 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1159 value: a329 stateAfter: - lastLocationAccess: - #next: j803  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j803 <|@
result v95|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 118]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a211 
=== Succesors ===
next: v807 
=== Usages ===
j804 
=== Predecessor ===
v331 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a211 #next: v807  <|@  <|@
f <@~|@floating>@ <|@
tid j804 <|@
result v105|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 118]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j803 
y: i680 
=== Succesors ===
=== Usages ===
v1186 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j803 y: i680  <|@  <|@
f <@~|@floating>@ <|@
tid v1186 <|@
result [v105|QWORD[*] + v65|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j804 
index: j703 
=== Succesors ===
=== Usages ===
v807 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j804 index: j703  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v807 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 118]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1186 
value: i808 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v96 
=== Usages ===
=== Predecessor ===
j803 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1186 value: i808 stateAfter: - lastLocationAccess: - #next: v96  <|@  <|@
f <@~|@floating>@ <|@
tid i70 <|@
result v106|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 125]
stamp: i32
=== Inputs ===
x: i212 
y: i69 
=== Succesors ===
=== Usages ===
i212 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i212 y: i69  <|@  <|@
f <@*|@fixed>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:429) [bci: 121]
stamp: void
=== Inputs ===
loopBegin: v36 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v807 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v36  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v100|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v101|QWORD[.] = MOVE v100|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v102|QWORD = MOV [v87|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v100|QWORD[*]], y: v102|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v100|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v103|DWORD[.] = MOV [v17|QWORD[.] + v94|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v100|QWORD[*] + 12], y: v103|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v100|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v100|QWORD[*] + 20], y: v96|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|DWORD[.] = COMPRESSPOINTER (input: v101|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@74b0c02b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v95|QWORD[.] + 16], y: v104|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[*] = SHR v95|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v105|QWORD[*] + v65|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = INC v94|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v106|DWORD, v101|QWORD[.]] destination: B76 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B78" 
    xhandlers
    flags 
    probability 4604428103321114964
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:432) [bci: 131]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v36 
=== Succesors ===
next: v207 
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v36 #next: v207  <|@  <|@
f <@*|@fixed>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v206 
=== Predecessor ===
v43 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v95|QWORD[.], v79|QWORD[.], v96|DWORD[.]] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B59" 
    successors "B79" "B81" 
    xhandlers
    flags 
    probability 4604591831010484268
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a210 <|@
result v107|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Ljava/util/LinkedList$Node;
valueDescription: a -
=== Inputs ===
merge: v206 
values: a211 a303 
=== Succesors ===
=== Usages ===
v1161 j825 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v206 values: a211 a303  <|@  <|@
f <@~|@floating>@ <|@
tid a227 <|@
result v108|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Ljava/util/LinkedList$Node;
valueDescription: a -
=== Inputs ===
merge: v206 
values: a226 a172 
=== Succesors ===
=== Usages ===
?45 a341 j832 v72 v1162 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v206 values: a226 a172  <|@  <|@
f <@~|@floating>@ <|@
tid a501 <|@
result v109|DWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: n# Ljava/util/LinkedList$Node;
valueDescription: n -
=== Inputs ===
merge: v206 
values: a500 a1145 
=== Succesors ===
=== Usages ===
v348 a499 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v206 values: a500 a1145  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v207 v208 
=== Succesors ===
next: v75 
=== Usages ===
a210 a227 a501 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v207 v208 #next: v75  <|@  <|@
f <@~|@floating>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:432) [bci: 133]
stamp: void
=== Inputs ===
value: a227 
=== Succesors ===
=== Usages ===
v75 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a227  <|@  <|@
f <@*|@fixed>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:432) [bci: 133]
stamp: void
trueSuccessorProbability: 0.8910276052257723
=== Inputs ===
condition: v72 
=== Succesors ===
trueSuccessor: v73 
falseSuccessor: v74 
=== Usages ===
=== Predecessor ===
v206 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v72 #trueSuccessor: v73 #falseSuccessor: v74  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v107|QWORD[.], v108|QWORD[.], v109|DWORD[.]] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v108|QWORD[.], y: v108|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8910276052257723 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" 
    xhandlers
    flags 
    probability 4603892597492784802
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:433) [bci: 136]
stamp: void
=== Inputs ===
=== Succesors ===
next: v255 
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v255  <|@  <|@
f <@*|@fixed>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v254 
=== Predecessor ===
v73 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v109|DWORD[.]] destination: B79 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" "B49" 
    successors 
    xhandlers
    flags 
    probability 4605231339210539388
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a499 <|@
result v110|DWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: n# Ljava/util/LinkedList$Node;
valueDescription: n -
=== Inputs ===
merge: v254 
values: a501 a1142 
=== Succesors ===
=== Usages ===
v354 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v254 values: a501 a1142  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v255 v257 
=== Succesors ===
next: v354 
=== Usages ===
a499 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v255 v257 #next: v354  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: LinkedList.last
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:433) [bci: 139]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1154 
value: a499 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j839 
=== Usages ===
=== Predecessor ===
v254 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1154 value: a499 stateAfter: - lastLocationAccess: - #next: j839  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j839 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.LinkedList.addAll(LinkedList.java:433) [bci: 139]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v843 
=== Usages ===
j840 
=== Predecessor ===
v354 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v843  <|@  <|@
f <@~|@floating>@ <|@
tid j840 <|@
result v111|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.addAll(LinkedList.java:433) [bci: 139]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j839 
y: i680 
=== Succesors ===
=== Usages ===
v1191 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j839 y: i680  <|@  <|@
f <@~|@floating>@ <|@
tid v1191 <|@
result [v111|QWORD[*] + v65|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j840 
index: j703 
=== Succesors ===
=== Usages ===
v843 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j840 index: j703  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v843 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.addAll(LinkedList.java:433) [bci: 139]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1191 
value: i808 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v355 
=== Usages ===
=== Predecessor ===
j839 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1191 value: i808 stateAfter: - lastLocationAccess: - #next: v355  <|@  <|@
f <@~|@floating>@ <|@
tid i1124 <|@
result v112|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:439) [bci: 166]
stamp: i32
=== Inputs ===
x: i1133 
y: i1135 
=== Succesors ===
=== Usages ===
v355 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1133 y: i1135  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: LinkedList.size
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:439) [bci: 167]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1150 
value: i1124 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i1148 
=== Usages ===
=== Predecessor ===
v843 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1150 value: i1124 stateAfter: - lastLocationAccess: - #next: i1148  <|@  <|@
f <@~|@floating>@ <|@
tid v1163 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v357 i1148 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1148 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:440) [bci: 172]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1163 
=== Succesors ===
next: v357 
=== Usages ===
i1126 
=== Predecessor ===
v355 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1163 #next: v357  <|@  <|@
f <@~|@floating>@ <|@
tid i1126 <|@
result v114|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:440) [bci: 176]
stamp: i32
=== Inputs ===
x: i1148 
y: i69 
=== Succesors ===
=== Usages ===
v357 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1148 y: i69  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList.modCount
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:440) [bci: 177]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1163 
value: i1126 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v242 
=== Usages ===
=== Predecessor ===
i1148 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1163 value: i1126 stateAfter: - lastLocationAccess: - #next: v242  <|@  <|@
f <@*|@fixed>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:441) [bci: 181]
stamp: void
=== Inputs ===
result: i69 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v357 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i69 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v110|DWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v110|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v111|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v111|QWORD[*] + v65|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = ADD (x: v3|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v112|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v113|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v114|DWORD = ADD (x: v113|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v114|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors 
    xhandlers
    flags 
    probability 4590258288804760654
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:435) [bci: 145]
stamp: void
=== Inputs ===
=== Succesors ===
next: v343 
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v343  <|@  <|@
tid ?45 <|@
d <@d|@=== Debug Properties ===
bci: 131
code: ResolvedJavaMethodBytecode<LinkedList.addAll(int, Collection)>
duringCall: false
localsSize: 13
locksSize: 0
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:432) [bci: 131]
rethrowException: false
sourceFile: LinkedList.java
sourceLine: 432
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - i1135 a20 a227 - - - - - - 
=== Succesors ===
=== Usages ===
v343 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - i1135 a20 a227 - - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v1161 <|@
result [v107|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a210 
index: - 
=== Succesors ===
=== Usages ===
v343 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a210 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a341 <|@
result v115|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:435) [bci: 149]
op: Compress
stamp: n# Ljava/util/LinkedList$Node;
=== Inputs ===
value: a227 
=== Succesors ===
=== Usages ===
v343 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a227  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: LinkedList$Node.next
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:435) [bci: 149]
nullCheck: true
stamp: void
=== Inputs ===
stateBefore: ?45 
guard: - 
address: v1161 
value: a341 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j825 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: ?45 guard: - address: v1161 value: a341 stateAfter: - lastLocationAccess: - #next: j825  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j825 <|@
result v107|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.LinkedList.addAll(LinkedList.java:435) [bci: 149]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a210 
=== Succesors ===
next: v829 
=== Usages ===
j826 
=== Predecessor ===
v343 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a210 #next: v829  <|@  <|@
f <@~|@floating>@ <|@
tid j826 <|@
result v116|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.addAll(LinkedList.java:435) [bci: 149]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j825 
y: i680 
=== Succesors ===
=== Usages ===
v1189 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j825 y: i680  <|@  <|@
f <@~|@floating>@ <|@
tid v1189 <|@
result [v116|QWORD[*] + v65|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j826 
index: j703 
=== Succesors ===
=== Usages ===
v829 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j826 index: j703  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v829 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.addAll(LinkedList.java:435) [bci: 149]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1189 
value: i808 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v348 
=== Usages ===
=== Predecessor ===
j825 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1189 value: i808 stateAfter: - lastLocationAccess: - #next: v348  <|@  <|@
f <@~|@floating>@ <|@
tid v1162 <|@
result [v108|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a227 
index: - 
=== Succesors ===
=== Usages ===
v348 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a227 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: LinkedList$Node.prev
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:436) [bci: 156]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1162 
value: a501 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j832 
=== Usages ===
=== Predecessor ===
v829 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1162 value: a501 stateAfter: - lastLocationAccess: - #next: j832  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j832 <|@
result v108|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.LinkedList.addAll(LinkedList.java:436) [bci: 156]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a227 
=== Succesors ===
next: v836 
=== Usages ===
j833 
=== Predecessor ===
v348 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a227 #next: v836  <|@  <|@
f <@~|@floating>@ <|@
tid j833 <|@
result v117|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.addAll(LinkedList.java:436) [bci: 156]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j832 
y: i680 
=== Succesors ===
=== Usages ===
v1190 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j832 y: i680  <|@  <|@
f <@~|@floating>@ <|@
tid v1190 <|@
result [v117|QWORD[*] + v65|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j833 
index: j703 
=== Succesors ===
=== Usages ===
v836 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j833 index: j703  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v836 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.addAll(LinkedList.java:436) [bci: 156]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1190 
value: i808 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v349 
=== Usages ===
=== Predecessor ===
j832 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1190 value: i808 stateAfter: - lastLocationAccess: - #next: v349  <|@  <|@
f <@~|@floating>@ <|@
tid i88 <|@
result v118|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:439) [bci: 166]
stamp: i32
=== Inputs ===
x: i1133 
y: i1135 
=== Succesors ===
=== Usages ===
v349 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1133 y: i1135  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: LinkedList.size
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:439) [bci: 167]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1150 
value: i88 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i1149 
=== Usages ===
=== Predecessor ===
v836 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1150 value: i88 stateAfter: - lastLocationAccess: - #next: i1149  <|@  <|@
f <@~|@floating>@ <|@
tid v1214 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v352 i1149 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1149 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:440) [bci: 172]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1214 
=== Succesors ===
next: v352 
=== Usages ===
i92 
=== Predecessor ===
v349 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1214 #next: v352  <|@  <|@
f <@~|@floating>@ <|@
tid i92 <|@
result v120|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:440) [bci: 176]
stamp: i32
=== Inputs ===
x: i1149 
y: i69 
=== Succesors ===
=== Usages ===
v352 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1149 y: i69  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList.modCount
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:440) [bci: 177]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1214 
value: i92 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v95 
=== Usages ===
=== Predecessor ===
i1149 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1214 value: i92 stateAfter: - lastLocationAccess: - #next: v95  <|@  <|@
f <@*|@fixed>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:441) [bci: 181]
stamp: void
=== Inputs ===
result: i69 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v352 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i69 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v115|DWORD[.] = COMPRESSPOINTER (input: v108|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@74b0c02b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList.addAll(LinkedList.java:432) [bci: 131]
locals: v0|QWORD[.] - - - v5|DWORD Object[null] v108|QWORD[.] - - - - - - 
>@ <|@ instruction MOV (x: [v107|QWORD[.] + 16], y: v115|DWORD[.]) size: DWORD state [bci:131] <|@ <|@
      nr   -1  <|@ instruction v116|QWORD[*] = SHR v107|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v116|QWORD[*] + v65|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v108|QWORD[.] + 20], y: v109|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v117|QWORD[*] = SHR v108|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v117|QWORD[*] + v65|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v118|DWORD = ADD (x: v3|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v118|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v119|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = ADD (x: v119|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v120|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
next: v445 
=== Usages ===
=== Predecessor ===
v1123 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v445  <|@  <|@
tid a198 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@29eb65ba
hasIdentity: true
objectId: 0
stamp: a!# Ljava/util/LinkedList$Node;
type: HotSpotType<Ljava/util/LinkedList$Node;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?248 ?203 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?248 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a198 
materializedValue: a481 
=== Succesors ===
=== Usages ===
?203 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a198 materializedValue: a481  <|@  <|@
tid ?203 <|@
d <@d|@=== Debug Properties ===
bci: 68
code: ResolvedJavaMethodBytecode<LinkedList.addAll(int, Collection)>
duringCall: false
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: LinkedList.java
sourceLine: 422
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - i1135 a198 a226 a554 i1135 i69 - - - 
virtualObjectMappings: ?248 
=== Succesors ===
=== Usages ===
v445 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - i1135 a198 a226 a554 i1135 i69 - - - virtualObjectMappings: ?248  <|@  <|@
f <@*|@fixed>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 321
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 79]
reason: BoundsCheckException
speculation: Object[d.a@198780052]
stamp: void
=== Inputs ===
stateBefore: ?203 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1119 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?203  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v121|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@198780052] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -82203 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v121|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList.addAll(LinkedList.java:422) [bci: 68]
locals: v0|QWORD[.] - - - v5|DWORD v86|QWORD[.] v79|QWORD[.] v17|QWORD[.] v5|DWORD int[1|0x1] - - - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B46" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 58]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v701 
=== Usages ===
=== Predecessor ===
v699 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v701  <|@  <|@
f <@~|@floating>@ <|@
tid j695 <|@
result v122|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: i64
=== Inputs ===
x: j693 
y: j694 
=== Succesors ===
=== Usages ===
j693 j700 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j693 y: j694  <|@  <|@
f <@~|@floating>@ <|@
tid j704 <|@
result v123|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 62]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: i64 [4682670080 - 36028801701634047] ⇈00ffffffffffffff
=== Inputs ===
x: j682 
y: j703 
=== Succesors ===
=== Usages ===
j700 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j682 y: j703  <|@  <|@
f <@~|@floating>@ <|@
tid j700 <|@
result v124|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 65]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: i64
=== Inputs ===
x: j695 
y: j704 
=== Succesors ===
=== Usages ===
v701 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j695 y: j704  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
kind: boolean
nodeSourcePosition: at org.graalvm.compiler.replacements.nodes.DirectStoreNode.storeBoolean(long, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 70]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
address: j700 
value: i12 
=== Succesors ===
next: v702 
=== Usages ===
=== Predecessor ===
v698 >@ <|@
instruction <@DirectStore|@org.graalvm.compiler.replacements.nodes.DirectStoreNode>@ address: j700 value: i12 #next: v702  <|@  <|@
f <@*|@fixed>@ <|@
tid v702 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
loopBegin: v692 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v701 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v692  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v122|QWORD[*] = DEC v66|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v123|QWORD[*] = ADD (x: v61|QWORD[*], y: v65|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v124|QWORD[*] = ADD (x: v123|QWORD[*], y: v122|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v124|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v122|QWORD[*]] destination: B83 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v889 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v888 
=== Usages ===
=== Predecessor ===
v890 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v888  <|@  <|@
f <@*|@fixed>@ <|@
tid v888 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v883 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v889 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v883  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|QWORD] destination: B84 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B86" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList; target_method=toArray target_method_class=Ljava/util/ArrayList; position=at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v576 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v576  <|@  <|@
f <@~|@floating>@ <|@
tid i577 <|@
result int[-71219|0xfffffffffffee9cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -71219
stableDimension: 0
stamp: i32 [-71219] ⇊00000000fffee9cd ⇈00000000fffee9cd
stampKind: i32
value: int[-71219|0xfffffffffffee9cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i571 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v568 
=== Predecessor ===
v414 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-71219|0xfffffffffffee9cd]] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B2" "B85" "B4" "B6" "B56" "B54" "B8" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i571 <|@
result v125|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-132705 - -69651] ⇊00000000fffcc085
valueDescription: i32
=== Inputs ===
merge: v568 
values: i575 i577 i579 i583 i585 i587 i589 
=== Succesors ===
=== Usages ===
v573 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v568 values: i575 i577 i579 i583 i585 i587 i589  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v574 v576 v578 v582 v584 v586 v588 
=== Succesors ===
next: v573 
=== Usages ===
i571 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v574 v576 v578 v582 v584 v586 v588 #next: v573  <|@  <|@
f <@*|@fixed>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
actionAndReason: i571 
speculation: a20 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v568 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?4 actionAndReason: i571 speculation: a20  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v125|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v125|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B85" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@368fbfea slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] - - - - - - - - - - 
>@ <|@ instruction CMP [v2|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] - - - - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v4|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV [v4|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SHL v5|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = LEA [v9|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = AND v10|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVSXD v11|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = ADD (x: v12|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v13|QWORD, y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v12|QWORD + v6|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v12|QWORD + v6|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v12|QWORD + v6|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v12|QWORD + v6|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD + 8], y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = MOVE v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v16|QWORD[.]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v17|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOV [v4|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = CMOVE (falseValue: v5|DWORD, ~trueValue: v18|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOVSXD v19|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v20|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = LEA [v20|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = LEA [v17|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[*] = LEA [v4|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v21|QWORD, y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = LEA [v20|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v27|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|V128_DWORD[....] = H [v23|QWORD[*] + v27|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v22|QWORD[.] + v27|QWORD * 4], input: v29|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = LEA [v27|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|QWORD] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA [v20|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v31|QWORD, y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|V64_DWORD[..] = H [v23|QWORD[*] + v31|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v22|QWORD[.] + v31|QWORD * 4], input: v33|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = LEA [v31|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|QWORD] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = DEC v20|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v35|QWORD, y: v36|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|DWORD[.] = MOV [v23|QWORD[*] + v35|QWORD * 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v22|QWORD[.] + v35|QWORD * 4], y: v37|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B13" "B27" "B26" 
    successors "B29" "B44" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVSXD v5|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v38|QWORD, y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B45" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B42" "B41" 
    successors "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = DEC v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = SHL v55|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOVSXD v56|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = LEA [v17|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = ADD (x: v58|QWORD[.], y: v57|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[*] = SHR v59|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = LEA [v17|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[*] = SHR v62|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[*] = SUB (x: v60|QWORD[*], ~y: v61|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[*] = INC v63|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v64|QWORD[*]] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B46" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v122|QWORD[*] = DEC v66|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v123|QWORD[*] = ADD (x: v61|QWORD[*], y: v65|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v124|QWORD[*] = ADD (x: v123|QWORD[*], y: v122|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v124|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v122|QWORD[*]] destination: B83 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B83" 
    successors "B47" "B83" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4611686018427387904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v66|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v66|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B46 -> B47 falseDestination: B46 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8910276052257723 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4606200882727019643
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v67|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.1668076129583852 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B61" 
    xhandlers
    flags 
    probability 4604862141009265057
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = UNCOMPRESSPOINTER (input: v67|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@74b0c02b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v68|QWORD[.], Object[null], v67|DWORD[.]] destination: B50 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B50" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4605679949392893518
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|QWORD[.], v79|QWORD[.], v80|DWORD[.]] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = LEA [v81|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v82|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    probability 4605604902094417347
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v82|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v81|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v81|QWORD] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B62" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4605679949392893518
    begin_IR
      LIR
      nr   -1  <|@ instruction [v85|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE v85|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v88|QWORD = MOV [v87|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v85|QWORD[*]], y: v88|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v85|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v89|DWORD[.] = MOV [v17|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v85|QWORD[*] + 12], y: v89|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v85|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v85|QWORD[*] + 20], y: v80|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|DWORD[.] = COMPRESSPOINTER (input: v86|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@74b0c02b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v78|QWORD[.], y: v78|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.20020299699408295 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4604177479985769627
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v78|QWORD[.] + 16], y: v90|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[*] = SHR v78|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v92|QWORD[*] + v65|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4605679949392893518
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B82" 
    xhandlers
    flags 
    probability 4601176349765523022
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = DEC v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v93|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B69 -> B70 falseDestination: B69 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" 
    xhandlers
    flags 
    probability 4601176349765523022
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B68" "B70" 
    successors "B72" 
    xhandlers
    flags 
    probability 4605679949392893518
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1], v86|QWORD[.]] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4614990598334941345
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v97|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v98|QWORD = LEA [v97|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v98|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4614912516539592106
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v98|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v97|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v97|QWORD] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B74" 
    successors "B72" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4614990598334941345
    begin_IR
      LIR
      nr   -1  <|@ instruction [v100|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v101|QWORD[.] = MOVE v100|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v102|QWORD = MOV [v87|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v100|QWORD[*]], y: v102|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v100|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v103|DWORD[.] = MOV [v17|QWORD[.] + v94|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v100|QWORD[*] + 12], y: v103|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v100|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v100|QWORD[*] + 20], y: v96|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|DWORD[.] = COMPRESSPOINTER (input: v101|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@74b0c02b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v95|QWORD[.] + 16], y: v104|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[*] = SHR v95|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v105|QWORD[*] + v65|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = INC v94|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v106|DWORD, v101|QWORD[.]] destination: B76 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B76" 
    successors "B73" "B77" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4616371718666829691
    begin_IR
      LIR
      nr   -1  <|@ instruction [v94|DWORD, v95|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v96|DWORD[.] = COMPRESSPOINTER (input: v95|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@74b0c02b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v94|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8331923870416148 condition: > trueDestination: B72 -> B73 falseDestination: B72 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4585158055938145756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v126|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v126|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList.addAll(LinkedList.java:422) [bci: 68]
locals: v0|QWORD[.] - - - v5|DWORD v95|QWORD[.] v79|QWORD[.] v17|QWORD[.] v5|DWORD v94|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:68] <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v99|QWORD[.]] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B78" 
    xhandlers
    flags 
    probability 4604428103321114964
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v95|QWORD[.], v79|QWORD[.], v96|DWORD[.]] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B59" 
    successors "B79" "B81" 
    xhandlers
    flags 
    probability 4604591831010484268
    begin_IR
      LIR
      nr   -1  <|@ instruction [v107|QWORD[.], v108|QWORD[.], v109|DWORD[.]] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v108|QWORD[.], y: v108|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8910276052257723 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" 
    xhandlers
    flags 
    probability 4603892597492784802
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v109|DWORD[.]] destination: B79 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" "B49" 
    successors 
    xhandlers
    flags 
    probability 4605231339210539388
    begin_IR
      LIR
      nr   -1  <|@ instruction [v110|DWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v110|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v111|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v111|QWORD[*] + v65|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = ADD (x: v3|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v112|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v113|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v114|DWORD = ADD (x: v113|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v114|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = LEA [v17|QWORD[.] + v20|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = SUB (x: v38|QWORD, ~y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = LEA [v40|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v41|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA [v40|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v45|QWORD, y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction J (address: [v39|QWORD[.] + v45|QWORD * 4], input: v47|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = LEA [v45|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|QWORD] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = LEA [v40|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v49|QWORD, y: v50|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr   -1  <|@ instruction J (address: [v39|QWORD[.] + v49|QWORD * 4], input: v51|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = LEA [v49|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v52|QWORD] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v53|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = DEC v40|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v53|QWORD, y: v54|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v39|QWORD[.] + v53|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B28" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" 
    xhandlers
    flags 
    probability 4601176349765523022
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4595177897919030989
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v90|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v91|QWORD[*] + v65|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B80" 
    xhandlers
    flags 
    probability 4594522987161553770
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v67|DWORD[.]] destination: B49 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v45|QWORD] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|QWORD] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v31|QWORD] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|QWORD] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B32" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|QWORD] destination: B43 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B43" 
    successors "B33" "B43" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v43|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v39|QWORD[.] + v43|QWORD * 4], input: v42|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = LEA [v43|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v44|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|QWORD] destination: B84 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B84" 
    successors "B18" "B84" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|V256_DWORD[........] = H [v23|QWORD[*] + v24|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v22|QWORD[.] + v24|QWORD * 4], input: v25|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = LEA [v24|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v26|QWORD, y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|QWORD] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|QWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" "B55" 
    xhandlers
    flags 
    probability 4592516709247147048
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = SAR v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v69|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6958208146579323 condition: > trueDestination: B51 -> B52 falseDestination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4590128206502600549
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v1|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590128206502600549
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = UNCOMPRESSPOINTER (input: v70|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@74b0c02b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v71|QWORD[.]] destination: B53 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" "B57" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4592516709247147048
    begin_IR
      LIR
      nr   -1  <|@ instruction [v75|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] - - - - - - - - - - 
>@ <|@ instruction v76|DWORD[.] = MOV [v75|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = UNCOMPRESSPOINTER (input: v76|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@74b0c02b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.1668076129583852 condition: < trueDestination: B58 -> B59 falseDestination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4591206887732192612
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|QWORD[.], v75|QWORD[.], v76|DWORD[.]] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors 
    xhandlers
    flags 
    probability 4590258288804760654
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v115|DWORD[.] = COMPRESSPOINTER (input: v108|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@74b0c02b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList.addAll(LinkedList.java:432) [bci: 131]
locals: v0|QWORD[.] - - - v5|DWORD Object[null] v108|QWORD[.] - - - - - - 
>@ <|@ instruction MOV (x: [v107|QWORD[.] + 16], y: v115|DWORD[.]) size: DWORD state [bci:131] <|@ <|@
      nr   -1  <|@ instruction v116|QWORD[*] = SHR v107|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v116|QWORD[*] + v65|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v108|QWORD[.] + 20], y: v109|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v117|QWORD[*] = SHR v108|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v117|QWORD[*] + v65|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v118|DWORD = ADD (x: v3|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v118|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v119|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = ADD (x: v119|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v120|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4584937826524887431
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = DEC v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v72|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4584937826524887431
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = UNCOMPRESSPOINTER (input: v73|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@74b0c02b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v74|QWORD[.]] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B78" 
    xhandlers
    flags 
    probability 4580896507468241680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|QWORD[.], v75|QWORD[.], v76|DWORD[.]] destination: B59 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = UNCOMPRESSPOINTER (input: v8|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@74b0c02b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v15|QWORD[.]] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    probability 4575956648883528390
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v127|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v127|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v84|QWORD[.]] destination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B86" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-79379|0xfffffffffffec9ed]] destination: B56 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B2" "B85" "B4" "B6" "B56" "B54" "B8" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr   -1  <|@ instruction [v125|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v125|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B86" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-75027|0xfffffffffffedaed]] destination: B6 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B86" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-70675|0xfffffffffffeebed]] destination: B4 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B86" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-69651|0xfffffffffffeefed]] destination: B2 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B86" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-71219|0xfffffffffffee9cd]] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B86" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-78611|0xfffffffffffecced]] destination: B54 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v121|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@198780052] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -82203 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v121|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList.addAll(LinkedList.java:422) [bci: 68]
locals: v0|QWORD[.] - - - v5|DWORD v86|QWORD[.] v79|QWORD[.] v17|QWORD[.] v5|DWORD int[1|0x1] - - - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B86" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-132705|0xfffffffffffdf99f]] destination: B8 -> B86 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokespecial #20         // checkPositionIndex:(int)void
     5: aload_2       
     6: invokeinterface#21, 1      // java.util.Collection.toArray:()java.lang.Object[]
    11: astore_3      
    12: aload_3       
    13: arraylength   
    14: istore        4
    16: iload         4
    18: ifne          23
    21: iconst_0      
    22: ireturn       
    23: iload_1       
    24: aload_0       
    25: getfield      #1          // size:int
    28: if_icmpne     43
    31: aconst_null   
    32: astore        6
    34: aload_0       
    35: getfield      #6          // last:java.util.LinkedList$Node
    38: astore        5
    40: goto          57
    43: aload_0       
    44: iload_1       
    45: invokevirtual #22         // node:(int)java.util.LinkedList$Node
    48: astore        6
    50: aload         6
    52: getfield      #7          // java.util.LinkedList$Node.prev:java.util.LinkedList$Node
    55: astore        5
    57: aload_3       
    58: astore        7
    60: aload         7
    62: arraylength   
    63: istore        8
    65: iconst_0      
    66: istore        9
    68: iload         9
    70: iload         8
    72: if_icmpge     131
    75: aload         7
    77: iload         9
    79: aaload        
    80: astore        10
    82: aload         10
    84: astore        11
    86: new           #6          // java.util.LinkedList$Node
    89: dup           
    90: aload         5
    92: aload         11
    94: aconst_null   
    95: invokespecial #5          // java.util.LinkedList$Node.<init>:(java.util.LinkedList$Node, java.lang.Object, java.util.LinkedList$Node)void
    98: astore        12
   100: aload         5
   102: ifnonnull     114
   105: aload_0       
   106: aload         12
   108: putfield      #4          // first:java.util.LinkedList$Node
   111: goto          121
   114: aload         5
   116: aload         12
   118: putfield      #9          // java.util.LinkedList$Node.next:java.util.LinkedList$Node
   121: aload         12
   123: astore        5
   125: iinc          
   128: goto          68
   131: aload         6
   133: ifnonnull     145
   136: aload_0       
   137: aload         5
   139: putfield      #6          // last:java.util.LinkedList$Node
   142: goto          159
   145: aload         5
   147: aload         6
   149: putfield      #9          // java.util.LinkedList$Node.next:java.util.LinkedList$Node
   152: aload         6
   154: aload         5
   156: putfield      #7          // java.util.LinkedList$Node.prev:java.util.LinkedList$Node
   159: aload_0       
   160: dup           
   161: getfield      #1          // size:int
   164: iload         4
   166: iadd          
   167: putfield      #1          // size:int
   170: aload_0       
   171: dup           
   172: getfield      #8          // java.util.AbstractList.modCount:int
   175: iconst_1      
   176: iadd          
   177: putfield      #8          // java.util.AbstractList.modCount:int
   180: iconst_1      
   181: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B85" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@368fbfea slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction r14|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ st <@st|@reference-map: [rcx:0, r13:0, stack:64]
live-base-pointers: []
java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0]
locals: r13|QWORD[.] r14|DWORD rcx|QWORD[.] - - - - - - - - - - 
>@ <|@ instruction CMP [rcx|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction r10|DWORD = MOV [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   32  <|@ instruction stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction CMP (x: r14|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction r11|DWORD[.] = MOV [rcx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@reference-map: [rcx:0, r11:0, r13:0, stack:64]
live-base-pointers: []
java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0]
locals: r13|QWORD[.] r14|DWORD rcx|QWORD[.] - - - - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   50  <|@ instruction r8|DWORD = MOV [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   52  <|@ instruction stack:40|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   56  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   80  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   82  <|@ instruction r9|DWORD = MOV [r11|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   84  <|@ instruction rbx|DWORD = SHL r8|DWORD y: 2 size: DWORD <|@ <|@
      nr   86  <|@ instruction rbx|DWORD = LEA [rbx|DWORD + 23] size: DWORD <|@ <|@
      nr   88  <|@ instruction rbx|DWORD = AND rbx|DWORD y: -8 size: DWORD <|@ <|@
      nr   90  <|@ instruction rbx|QWORD = MOVSXD rbx|DWORD size: QWORD <|@ <|@
      nr   92  <|@ instruction rdi|QWORD = ADD (x: rbx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr   94  <|@ instruction CMP (x: rdi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  128  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  130  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rsi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  132  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  134  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  136  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  138  <|@ instruction MOV (x: [rsi|QWORD + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  142  <|@ instruction MOV (x: [rsi|QWORD + 8], y: r9|DWORD) size: DWORD <|@ <|@
      nr  144  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction r9|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  152  <|@ instruction rsi|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  154  <|@ instruction CMP (x: r8|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  156  <|@ instruction rdx|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rsi|DWORD) condition: > <|@ <|@
      nr  158  <|@ instruction rsi|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr  160  <|@ instruction CMP rsi|QWORD y: 1 size: QWORD <|@ <|@
      nr  162  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  170  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  172  <|@ instruction rbx|QWORD[.] = LEA [r9|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  174  <|@ instruction r11|QWORD[*] = LEA [r11|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  176  <|@ instruction TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  178  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  182  <|@ instruction rdi|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  210  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr  212  <|@ instruction CMP (x: rdi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  214  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction xmm0|V128_DWORD[....] = H [r11|QWORD[*] + rdi|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  224  <|@ instruction J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  226  <|@ instruction rdx|QWORD = LEA [rdi|QWORD + 4] size: QWORD <|@ <|@
      nr  228  <|@ instruction rdi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  234  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr  236  <|@ instruction CMP (x: rdi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  238  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  246  <|@ instruction xmm0|V64_DWORD[..] = H [r11|QWORD[*] + rdi|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr  248  <|@ instruction J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr  250  <|@ instruction rdx|QWORD = LEA [rdi|QWORD + 2] size: QWORD <|@ <|@
      nr  252  <|@ instruction rdi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  258  <|@ instruction rdx|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  260  <|@ instruction CMP (x: rdi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  262  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ instruction rdx|DWORD[.] = MOV [r11|QWORD[*] + rdi|QWORD * 4] size: DWORD <|@ <|@
      nr  272  <|@ instruction MOV (x: [rbx|QWORD[.] + rdi|QWORD * 4], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  274  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B13" "B27" "B26" 
    successors "B29" "B44" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction rdx|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  280  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  282  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B45" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B42" "B41" 
    successors "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction rsi|DWORD = DEC r8|DWORD size: DWORD <|@ <|@
      nr  402  <|@ instruction rsi|DWORD = SHL rsi|DWORD y: 2 size: DWORD <|@ <|@
      nr  404  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  406  <|@ instruction rdx|QWORD[.] = LEA [r9|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  408  <|@ instruction rdx|QWORD[.] = ADD (x: rdx|QWORD[.], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  410  <|@ instruction rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  412  <|@ instruction rsi|QWORD[.] = LEA [r9|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD[*] = SUB (x: rdx|QWORD[*], ~y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  418  <|@ instruction rdx|QWORD[*] = INC rdx|QWORD[*] size: QWORD <|@ <|@
      nr  420  <|@ instruction r11|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  422  <|@ instruction stack:64|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B46" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4607182418800017408
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  860  <|@ instruction rdx|QWORD[*] = DEC rdx|QWORD[*] size: QWORD <|@ <|@
      nr  862  <|@ instruction rbx|QWORD[*] = ADD (x: rsi|QWORD[*], y: r11|QWORD) size: QWORD <|@ <|@
      nr  864  <|@ instruction rbx|QWORD[*] = ADD (x: rbx|QWORD[*], y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  866  <|@ instruction MOVB (x: [rbx|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  868  <|@ instruction JUMP ~[] destination: B83 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B83" 
    successors "B47" "B83" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4611686018427387904
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  428  <|@ instruction CMP rdx|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr  430  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B46 -> B47 falseDestination: B46 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  434  <|@ instruction CMP (x: r10|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  436  <|@ instruction BRANCH trueDestinationProbability: 0.8910276052257723 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4606200882727019643
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  440  <|@ instruction rsi|DWORD[.] = MOV [r13|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  442  <|@ instruction CMP r8|DWORD y: 1 size: DWORD <|@ <|@
      nr  444  <|@ instruction BRANCH trueDestinationProbability: 0.1668076129583852 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B61" 
    xhandlers
    flags 
    probability 4604862141009265057
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@74b0c02b encoding: base: 0 shift: 3 <|@ <|@
      nr  454  <|@ instruction rbx|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  458  <|@ instruction JUMP ~[] destination: B50 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B50" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4605679949392893518
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  532  <|@ instruction stack:72|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  536  <|@ instruction rax|QWORD = LEA [rdi|QWORD + 24] size: QWORD <|@ <|@
      nr  538  <|@ instruction CMP (x: rax|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  540  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    probability 4605604902094417347
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  582  <|@ instruction MOV (x: [r15|QWORD + 96], y: rax|QWORD) size: QWORD <|@ <|@
      nr  584  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + 216] instr: 0 <|@ <|@
      nr  586  <|@ instruction rcx|QWORD[*] = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  588  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B62" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4605679949392893518
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  592  <|@ instruction rdi|QWORD[.] = MOVE rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  594  <|@ instruction r14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>} <|@ <|@
      nr  596  <|@ instruction rax|QWORD = MOV [r14|QWORD + 168] size: QWORD <|@ <|@
      nr  598  <|@ instruction MOV (x: [rcx|QWORD[*]], y: rax|QWORD) size: QWORD <|@ <|@
      nr  600  <|@ instruction MOV [rcx|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed} <|@ <|@
      nr  602  <|@ instruction rax|DWORD[.] = MOV [r9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  604  <|@ instruction MOV (x: [rcx|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  606  <|@ instruction MOV (x: [rcx|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  608  <|@ instruction MOV (x: [rcx|QWORD[*] + 20], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr  610  <|@ instruction rcx|DWORD[.] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@74b0c02b encoding: base: 0 shift: 3 <|@ <|@
      nr  612  <|@ instruction TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  614  <|@ instruction BRANCH trueDestinationProbability: 0.20020299699408295 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4604177479985769627
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  628  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr  630  <|@ instruction rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  632  <|@ instruction MOVB (x: [rdx|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  634  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4605679949392893518
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  638  <|@ instruction CMP r8|DWORD y: 2 size: DWORD <|@ <|@
      nr  640  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B82" 
    xhandlers
    flags 
    probability 4601176349765523022
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  648  <|@ instruction rdx|DWORD = DEC r8|DWORD size: DWORD <|@ <|@
      nr  650  <|@ instruction CMP (x: r8|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  652  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B69 -> B70 falseDestination: B69 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" 
    xhandlers
    flags 
    probability 4601176349765523022
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  656  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B68" "B70" 
    successors "B72" 
    xhandlers
    flags 
    probability 4605679949392893518
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  660  <|@ instruction rbx|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  662  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  664  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4614990598334941345
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  676  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  678  <|@ instruction rcx|QWORD = LEA [rdx|QWORD + 24] size: QWORD <|@ <|@
      nr  680  <|@ instruction CMP (x: rcx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  682  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4614912516539592106
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  726  <|@ instruction MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  728  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 216] instr: 0 <|@ <|@
      nr  730  <|@ instruction rdx|QWORD[*] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  732  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B74" 
    successors "B72" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4614990598334941345
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  736  <|@ instruction rcx|QWORD[.] = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  738  <|@ instruction rbp|QWORD = MOV [r14|QWORD + 168] size: QWORD <|@ <|@
      nr  740  <|@ instruction MOV (x: [rdx|QWORD[*]], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  742  <|@ instruction MOV [rdx|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed} <|@ <|@
      nr  744  <|@ instruction rbp|DWORD[.] = MOV [r9|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  746  <|@ instruction MOV (x: [rdx|QWORD[*] + 12], y: rbp|DWORD[.]) size: DWORD <|@ <|@
      nr  748  <|@ instruction MOV (x: [rdx|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  750  <|@ instruction MOV (x: [rdx|QWORD[*] + 20], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  752  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@74b0c02b encoding: base: 0 shift: 3 <|@ <|@
      nr  754  <|@ instruction MOV (x: [rbx|QWORD[.] + 16], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  756  <|@ instruction rbx|QWORD[*] = SHR rbx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  758  <|@ instruction MOVB (x: [rbx|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  760  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  762  <|@ instruction rbx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction JUMP ~[] destination: B76 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B76" 
    successors "B73" "B77" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4616371718666829691
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  668  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@74b0c02b encoding: base: 0 shift: 3 <|@ <|@
      nr  670  <|@ instruction CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  672  <|@ instruction BRANCH trueDestinationProbability: 0.8331923870416148 condition: > trueDestination: B72 -> B73 falseDestination: B72 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4585158055938145756
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  686  <|@ instruction stack:44|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD <|@ <|@
      nr  688  <|@ instruction stack:80|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  692  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  694  <|@ instruction rbp|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  696  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  700  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  702  <|@ instruction r13|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ st <@st|@reference-map: [r13:0, stack:16, stack:24, stack:52, stack:64]
live-base-pointers: []
java.util.LinkedList.addAll(LinkedList.java:422) [bci: 68]
locals: stack:32|QWORD[.] - - - stack:40|DWORD stack:80|QWORD[.] r13|QWORD[.] stack:72|QWORD[.] stack:40|DWORD stack:84|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:68] <|@ <|@
      nr  706  <|@ instruction rdx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  708  <|@ instruction rax|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  710  <|@ instruction rbx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction r10|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction r11|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction r9|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  722  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B78" 
    xhandlers
    flags 
    probability 4604428103321114964
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  768  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction rbx|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD <|@ <|@
      nr  772  <|@ instruction JUMP ~[] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B59" 
    successors "B79" "B81" 
    xhandlers
    flags 
    probability 4604591831010484268
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  776  <|@ instruction TEST (x: rsi|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  778  <|@ instruction BRANCH trueDestinationProbability: 0.8910276052257723 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" 
    xhandlers
    flags 
    probability 4603892597492784802
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  782  <|@ instruction rsi|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr  784  <|@ instruction r11|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  788  <|@ instruction JUMP ~[] destination: B79 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" "B49" 
    successors 
    xhandlers
    flags 
    probability 4605231339210539388
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  792  <|@ instruction MOV (x: [r13|QWORD[.] + 24], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  794  <|@ instruction rax|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  796  <|@ instruction MOVB (x: [rax|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  798  <|@ instruction r10|DWORD = ADD (x: stack:36|DWORD, y: stack:40|DWORD) size: DWORD <|@ <|@
      nr  800  <|@ instruction MOV (x: [r13|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  802  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  804  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, ~y: [r13|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  806  <|@ instruction MOV (x: [r13|QWORD[.] + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  808  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  810  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  286  <|@ instruction r11|QWORD[.] = LEA [r9|QWORD[.] + rsi|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr  288  <|@ instruction rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr  290  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  292  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  294  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  298  <|@ instruction rbx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  300  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  326  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD <|@ <|@
      nr  328  <|@ instruction CMP (x: rbx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  330  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  338  <|@ instruction xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr  340  <|@ instruction J (address: [r11|QWORD[.] + rbx|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  342  <|@ instruction rsi|QWORD = LEA [rbx|QWORD + 4] size: QWORD <|@ <|@
      nr  344  <|@ instruction rbx|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  350  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD <|@ <|@
      nr  352  <|@ instruction CMP (x: rbx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  354  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  362  <|@ instruction xmm0|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr  364  <|@ instruction J (address: [r11|QWORD[.] + rbx|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr  366  <|@ instruction rsi|QWORD = LEA [rbx|QWORD + 2] size: QWORD <|@ <|@
      nr  368  <|@ instruction rbx|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  374  <|@ instruction rdx|QWORD = DEC rdx|QWORD size: QWORD <|@ <|@
      nr  376  <|@ instruction CMP (x: rbx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  378  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  386  <|@ instruction MOV (x: [r11|QWORD[.] + rbx|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  388  <|@ instruction JUMP ~[] destination: B42 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B28" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B13 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" 
    xhandlers
    flags 
    probability 4601176349765523022
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  644  <|@ instruction JUMP ~[] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4595177897919030989
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  618  <|@ instruction MOV (x: [r13|QWORD[.] + 20], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr  620  <|@ instruction rdx|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  622  <|@ instruction MOVB (x: [rdx|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B80" 
    xhandlers
    flags 
    probability 4594522987161553770
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  448  <|@ instruction JUMP ~[] destination: B49 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  266  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  382  <|@ instruction JUMP ~[] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  358  <|@ instruction JUMP ~[] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  242  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  304  <|@ instruction xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr  306  <|@ instruction rbx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  308  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B32" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  392  <|@ instruction JUMP ~[] destination: B43 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B43" 
    successors "B33" "B43" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  312  <|@ instruction J (address: [r11|QWORD[.] + rbx|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  314  <|@ instruction rbx|QWORD = LEA [rbx|QWORD + 8] size: QWORD <|@ <|@
      nr  316  <|@ instruction CMP (x: rbx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  318  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  188  <|@ instruction rdi|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  190  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  872  <|@ instruction JUMP ~[] destination: B84 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B84" 
    successors "B18" "B84" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  194  <|@ instruction xmm0|V256_DWORD[........] = H [r11|QWORD[*] + rdi|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  196  <|@ instruction J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  198  <|@ instruction rdi|QWORD = LEA [rdi|QWORD + 8] size: QWORD <|@ <|@
      nr  200  <|@ instruction CMP (x: rdi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  202  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  322  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" "B55" 
    xhandlers
    flags 
    probability 4592516709247147048
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  462  <|@ instruction rsi|DWORD = SAR r10|DWORD size: DWORD <|@ <|@
      nr  464  <|@ instruction CMP (x: rsi|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  466  <|@ instruction BRANCH trueDestinationProbability: 0.6958208146579323 condition: > trueDestination: B51 -> B52 falseDestination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4590128206502600549
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  470  <|@ instruction CMP r14|DWORD y: 1 size: DWORD <|@ <|@
      nr  472  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590128206502600549
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  476  <|@ instruction rsi|DWORD[.] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  478  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@74b0c02b encoding: base: 0 shift: 3 <|@ <|@
      nr  480  <|@ instruction JUMP ~[] destination: B53 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" "B57" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4592516709247147048
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  512  <|@ st <@st|@reference-map: [rcx:0, rsi:0, r9:0, r13:0, stack:64]
live-base-pointers: []
java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0]
locals: r13|QWORD[.] r14|DWORD rcx|QWORD[.] - - - - - - - - - - 
>@ <|@ instruction rbx|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr  514  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@74b0c02b encoding: base: 0 shift: 3 <|@ <|@
      nr  516  <|@ instruction CMP r8|DWORD y: 1 size: DWORD <|@ <|@
      nr  518  <|@ instruction BRANCH trueDestinationProbability: 0.1668076129583852 condition: < trueDestination: B58 -> B59 falseDestination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4591206887732192612
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  526  <|@ instruction rdx|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction JUMP ~[] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors 
    xhandlers
    flags 
    probability 4590258288804760654
    begin_IR
      LIR
      nr  812  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  814  <|@ instruction r11|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  816  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  818  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rsi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@74b0c02b encoding: base: 0 shift: 3 <|@ <|@
      nr  820  <|@ st <@st|@reference-map: [rbx:0, rsi:0, rdi:0, r13:0]
live-base-pointers: []
java.util.LinkedList.addAll(LinkedList.java:432) [bci: 131]
locals: r13|QWORD[.] - - - stack:40|DWORD Object[null] rsi|QWORD[.] - - - - - - 
>@ <|@ instruction MOV (x: [rdi|QWORD[.] + 16], y: rax|DWORD[.]) size: DWORD state [bci:131] <|@ <|@
      nr  822  <|@ instruction rdi|QWORD[*] = SHR rdi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  824  <|@ instruction MOVB (x: [rdi|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  826  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr  828  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  830  <|@ instruction MOVB (x: [rsi|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  832  <|@ instruction r10|DWORD = ADD (x: stack:36|DWORD, y: stack:40|DWORD) size: DWORD <|@ <|@
      nr  834  <|@ instruction MOV (x: [r13|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  836  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  838  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, ~y: [r13|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  840  <|@ instruction MOV (x: [r13|QWORD[.] + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  842  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  844  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4584937826524887431
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  490  <|@ instruction rsi|DWORD = DEC r10|DWORD size: DWORD <|@ <|@
      nr  492  <|@ instruction CMP (x: rsi|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  494  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4584937826524887431
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  504  <|@ instruction rsi|DWORD[.] = MOV [r13|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  506  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@74b0c02b encoding: base: 0 shift: 3 <|@ <|@
      nr  508  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B78" 
    xhandlers
    flags 
    probability 4580896507468241680
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  522  <|@ instruction JUMP ~[] destination: B59 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  100  <|@ instruction stack:44|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction stack:56|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction r9|QWORD = UNCOMPRESSPOINTER (input: r9|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@74b0c02b encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction rsi|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction rdx|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  112  <|@ st <@st|@reference-map: [r13:0, stack:40, stack:52, stack:64]
live-base-pointers: []
java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0]
locals: r13|QWORD[.] r14|DWORD stack:56|QWORD[.] - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  114  <|@ instruction r9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction r11|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  120  <|@ instruction r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  122  <|@ instruction rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction JUMP ~[] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    probability 4575956648883528390
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  544  <|@ instruction stack:44|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr  546  <|@ instruction stack:80|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  548  <|@ instruction stack:56|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  550  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  554  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  556  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  558  <|@ st <@st|@reference-map: [r13:0, stack:16, stack:24, stack:40, stack:52, stack:64]
live-base-pointers: []
java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0]
locals: stack:32|QWORD[.] r14|DWORD stack:56|QWORD[.] - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  560  <|@ instruction rcx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction rbx|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  564  <|@ instruction rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  566  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  568  <|@ instruction r11|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction r9|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  572  <|@ instruction r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  574  <|@ instruction r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  576  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction JUMP ~[] destination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B86" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  498  <|@ instruction r10|DWORD = MOVE input: int[-79379|0xfffffffffffec9ed] <|@ <|@
      nr  500  <|@ instruction JUMP ~[] destination: B56 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B2" "B85" "B4" "B6" "B56" "B54" "B8" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  882  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  884  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  886  <|@ st <@st|@reference-map: [rcx:0, r13:0]
live-base-pointers: []
java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0]
locals: r13|QWORD[.] r14|DWORD rcx|QWORD[.] - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B86" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction r10|DWORD = MOVE input: int[-75027|0xfffffffffffedaed] <|@ <|@
      nr   62  <|@ instruction JUMP ~[] destination: B6 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B86" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction r10|DWORD = MOVE input: int[-70675|0xfffffffffffeebed] <|@ <|@
      nr   42  <|@ instruction JUMP ~[] destination: B4 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B86" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction r10|DWORD = MOVE input: int[-69651|0xfffffffffffeefed] <|@ <|@
      nr   26  <|@ instruction JUMP ~[] destination: B2 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B86" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  876  <|@ instruction r10|DWORD = MOVE input: int[-71219|0xfffffffffffee9cd] <|@ <|@
      nr  878  <|@ instruction JUMP ~[] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B86" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  484  <|@ instruction r10|DWORD = MOVE input: int[-78611|0xfffffffffffecced] <|@ <|@
      nr  486  <|@ instruction JUMP ~[] destination: B54 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  848  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  850  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@198780052] <|@ <|@
      nr  852  <|@ instruction MOV [r15|QWORD + 668] y: -82203 size: DWORD <|@ <|@
      nr  854  <|@ instruction MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr  856  <|@ st <@st|@reference-map: [rdi:0, r9:0, r13:0, stack:64]
live-base-pointers: []
java.util.LinkedList.addAll(LinkedList.java:422) [bci: 68]
locals: stack:32|QWORD[.] - - - r8|DWORD rdi|QWORD[.] r13|QWORD[.] r9|QWORD[.] r8|DWORD int[1|0x1] - - - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B86" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction r10|DWORD = MOVE input: int[-132705|0xfffffffffffdf99f] <|@ <|@
      nr   74  <|@ instruction JUMP ~[] destination: B8 -> B86 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokespecial #20         // checkPositionIndex:(int)void
     5: aload_2       
     6: invokeinterface#21, 1      // java.util.Collection.toArray:()java.lang.Object[]
    11: astore_3      
    12: aload_3       
    13: arraylength   
    14: istore        4
    16: iload         4
    18: ifne          23
    21: iconst_0      
    22: ireturn       
    23: iload_1       
    24: aload_0       
    25: getfield      #1          // size:int
    28: if_icmpne     43
    31: aconst_null   
    32: astore        6
    34: aload_0       
    35: getfield      #6          // last:java.util.LinkedList$Node
    38: astore        5
    40: goto          57
    43: aload_0       
    44: iload_1       
    45: invokevirtual #22         // node:(int)java.util.LinkedList$Node
    48: astore        6
    50: aload         6
    52: getfield      #7          // java.util.LinkedList$Node.prev:java.util.LinkedList$Node
    55: astore        5
    57: aload_3       
    58: astore        7
    60: aload         7
    62: arraylength   
    63: istore        8
    65: iconst_0      
    66: istore        9
    68: iload         9
    70: iload         8
    72: if_icmpge     131
    75: aload         7
    77: iload         9
    79: aaload        
    80: astore        10
    82: aload         10
    84: astore        11
    86: new           #6          // java.util.LinkedList$Node
    89: dup           
    90: aload         5
    92: aload         11
    94: aconst_null   
    95: invokespecial #5          // java.util.LinkedList$Node.<init>:(java.util.LinkedList$Node, java.lang.Object, java.util.LinkedList$Node)void
    98: astore        12
   100: aload         5
   102: ifnonnull     114
   105: aload_0       
   106: aload         12
   108: putfield      #4          // first:java.util.LinkedList$Node
   111: goto          121
   114: aload         5
   116: aload         12
   118: putfield      #9          // java.util.LinkedList$Node.next:java.util.LinkedList$Node
   121: aload         12
   123: astore        5
   125: iinc          
   128: goto          68
   131: aload         6
   133: ifnonnull     145
   136: aload_0       
   137: aload         5
   139: putfield      #6          // last:java.util.LinkedList$Node
   142: goto          159
   145: aload         5
   147: aload         6
   149: putfield      #9          // java.util.LinkedList$Node.next:java.util.LinkedList$Node
   152: aload         6
   154: aload         5
   156: putfield      #7          // java.util.LinkedList$Node.prev:java.util.LinkedList$Node
   159: aload_0       
   160: dup           
   161: getfield      #1          // size:int
   164: iload         4
   166: iadd          
   167: putfield      #1          // size:int
   170: aload_0       
   171: dup           
   172: getfield      #8          // java.util.AbstractList.modCount:int
   175: iconst_1      
   176: iadd          
   177: putfield      #8          // java.util.AbstractList.modCount:int
   180: iconst_1      
   181: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B85" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@368fbfea slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction r14|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ st <@st|@reference-map: [rcx:0, r13:0, stack:64]
live-base-pointers: []
java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0]
locals: r13|QWORD[.] r14|DWORD rcx|QWORD[.] - - - - - - - - - - 
>@ <|@ instruction CMP [rcx|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction r10|DWORD = MOV [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   32  <|@ instruction stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction CMP (x: r14|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction r11|DWORD[.] = MOV [rcx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@reference-map: [rcx:0, r11:0, r13:0, stack:64]
live-base-pointers: []
java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0]
locals: r13|QWORD[.] r14|DWORD rcx|QWORD[.] - - - - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   50  <|@ instruction r8|DWORD = MOV [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   52  <|@ instruction stack:40|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   56  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   80  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   82  <|@ instruction r9|DWORD = MOV [r11|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   84  <|@ instruction rbx|DWORD = SHL r8|DWORD y: 2 size: DWORD <|@ <|@
      nr   86  <|@ instruction rbx|DWORD = LEA [rbx|DWORD + 23] size: DWORD <|@ <|@
      nr   88  <|@ instruction rbx|DWORD = AND rbx|DWORD y: -8 size: DWORD <|@ <|@
      nr   90  <|@ instruction rbx|QWORD = MOVSXD rbx|DWORD size: QWORD <|@ <|@
      nr   92  <|@ instruction rdi|QWORD = ADD (x: rbx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr   94  <|@ instruction CMP (x: rdi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  128  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  130  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rsi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  132  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  134  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  136  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  138  <|@ instruction MOV (x: [rsi|QWORD + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  142  <|@ instruction MOV (x: [rsi|QWORD + 8], y: r9|DWORD) size: DWORD <|@ <|@
      nr  144  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction r9|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B28" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  152  <|@ instruction rsi|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  154  <|@ instruction CMP (x: r8|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  156  <|@ instruction rdx|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rsi|DWORD) condition: > <|@ <|@
      nr  158  <|@ instruction rsi|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr  160  <|@ instruction CMP rsi|QWORD y: 1 size: QWORD <|@ <|@
      nr  162  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B12 -> B28 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B17" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  170  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  172  <|@ instruction rbx|QWORD[.] = LEA [r9|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  174  <|@ instruction r11|QWORD[*] = LEA [r11|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  176  <|@ instruction TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  182  <|@ instruction rdi|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  178  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B14 -> B19 falseDestination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B14" "B17" 
    successors "B22" "B21" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  210  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr  212  <|@ instruction CMP (x: rdi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  214  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B22 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction xmm0|V128_DWORD[....] = H [r11|QWORD[*] + rdi|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  224  <|@ instruction J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  226  <|@ instruction rdx|QWORD = LEA [rdi|QWORD + 4] size: QWORD <|@ <|@
      nr  228  <|@ instruction rdi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B19" 
    successors "B25" "B24" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  234  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr  236  <|@ instruction CMP (x: rdi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  238  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B22 -> B25 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  246  <|@ instruction xmm0|V64_DWORD[..] = H [r11|QWORD[*] + rdi|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr  248  <|@ instruction J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr  250  <|@ instruction rdx|QWORD = LEA [rdi|QWORD + 2] size: QWORD <|@ <|@
      nr  252  <|@ instruction rdi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B22" 
    successors "B28" "B27" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  258  <|@ instruction rdx|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  260  <|@ instruction CMP (x: rdi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  262  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B25 -> B28 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ instruction rdx|DWORD[.] = MOV [r11|QWORD[*] + rdi|QWORD * 4] size: DWORD <|@ <|@
      nr  272  <|@ instruction MOV (x: [rbx|QWORD[.] + rdi|QWORD * 4], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  274  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B12" "B27" "B25" 
    successors "B29" "B45" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction rdx|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  280  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  282  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B28" "B42" "B40" 
    successors "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction rsi|DWORD = DEC r8|DWORD size: DWORD <|@ <|@
      nr  402  <|@ instruction rsi|DWORD = SHL rsi|DWORD y: 2 size: DWORD <|@ <|@
      nr  404  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  406  <|@ instruction rdx|QWORD[.] = LEA [r9|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  408  <|@ instruction rdx|QWORD[.] = ADD (x: rdx|QWORD[.], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  410  <|@ instruction rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  412  <|@ instruction rsi|QWORD[.] = LEA [r9|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD[*] = SUB (x: rdx|QWORD[*], ~y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  418  <|@ instruction rdx|QWORD[*] = INC rdx|QWORD[*] size: QWORD <|@ <|@
      nr  420  <|@ instruction r11|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  422  <|@ instruction stack:64|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B46" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4607182418800017408
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  860  <|@ instruction rdx|QWORD[*] = DEC rdx|QWORD[*] size: QWORD <|@ <|@
      nr  862  <|@ instruction rbx|QWORD[*] = ADD (x: rsi|QWORD[*], y: r11|QWORD) size: QWORD <|@ <|@
      nr  864  <|@ instruction rbx|QWORD[*] = ADD (x: rbx|QWORD[*], y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  866  <|@ instruction MOVB (x: [rbx|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  868  <|@ instruction JUMP ~[] destination: B83 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B83" 
    successors "B47" "B83" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4611686018427387904
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  428  <|@ instruction CMP rdx|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr  430  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B46 -> B47 falseDestination: B46 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  434  <|@ instruction CMP (x: r10|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  436  <|@ instruction BRANCH trueDestinationProbability: 0.8910276052257723 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B80" "B50" 
    xhandlers
    flags 
    probability 4606200882727019643
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  440  <|@ instruction rsi|DWORD[.] = MOV [r13|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  442  <|@ instruction CMP r8|DWORD y: 1 size: DWORD <|@ <|@
      nr  444  <|@ instruction BRANCH trueDestinationProbability: 0.1668076129583852 condition: < trueDestination: B48 -> B80 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B61" 
    xhandlers
    flags 
    probability 4604862141009265057
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@74b0c02b encoding: base: 0 shift: 3 <|@ <|@
      nr  454  <|@ instruction rbx|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  458  <|@ instruction JUMP ~[] destination: B50 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B50" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4605679949392893518
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  532  <|@ instruction stack:72|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  536  <|@ instruction rax|QWORD = LEA [rdi|QWORD + 24] size: QWORD <|@ <|@
      nr  538  <|@ instruction CMP (x: rax|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  540  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    probability 4605604902094417347
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  582  <|@ instruction MOV (x: [r15|QWORD + 96], y: rax|QWORD) size: QWORD <|@ <|@
      nr  584  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + 216] instr: 0 <|@ <|@
      nr  586  <|@ instruction rcx|QWORD[*] = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  588  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B62" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4605679949392893518
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  592  <|@ instruction rdi|QWORD[.] = MOVE rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  594  <|@ instruction r14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>} <|@ <|@
      nr  596  <|@ instruction rax|QWORD = MOV [r14|QWORD + 168] size: QWORD <|@ <|@
      nr  598  <|@ instruction MOV (x: [rcx|QWORD[*]], y: rax|QWORD) size: QWORD <|@ <|@
      nr  600  <|@ instruction MOV [rcx|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed} <|@ <|@
      nr  602  <|@ instruction rax|DWORD[.] = MOV [r9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  604  <|@ instruction MOV (x: [rcx|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  606  <|@ instruction MOV (x: [rcx|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  608  <|@ instruction MOV (x: [rcx|QWORD[*] + 20], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr  610  <|@ instruction rcx|DWORD[.] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@74b0c02b encoding: base: 0 shift: 3 <|@ <|@
      nr  612  <|@ instruction TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  614  <|@ instruction BRANCH trueDestinationProbability: 0.20020299699408295 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4604177479985769627
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  628  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr  630  <|@ instruction rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  632  <|@ instruction MOVB (x: [rdx|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  634  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" "B66" 
    successors "B71" "B69" 
    xhandlers
    flags 
    probability 4605679949392893518
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  638  <|@ instruction CMP r8|DWORD y: 2 size: DWORD <|@ <|@
      nr  640  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B67 -> B71 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" "B82" 
    xhandlers
    flags 
    probability 4601176349765523022
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  648  <|@ instruction rdx|DWORD = DEC r8|DWORD size: DWORD <|@ <|@
      nr  650  <|@ instruction CMP (x: r8|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  652  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B69 -> B71 falseDestination: B69 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B67" "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4605679949392893518
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  660  <|@ instruction rbx|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  662  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  664  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4614990598334941345
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  676  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  678  <|@ instruction rcx|QWORD = LEA [rdx|QWORD + 24] size: QWORD <|@ <|@
      nr  680  <|@ instruction CMP (x: rcx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  682  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4614912516539592106
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  726  <|@ instruction MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  728  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 216] instr: 0 <|@ <|@
      nr  730  <|@ instruction rdx|QWORD[*] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  732  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B74" 
    successors "B72" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4614990598334941345
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  736  <|@ instruction rcx|QWORD[.] = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  738  <|@ instruction rbp|QWORD = MOV [r14|QWORD + 168] size: QWORD <|@ <|@
      nr  740  <|@ instruction MOV (x: [rdx|QWORD[*]], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  742  <|@ instruction MOV [rdx|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed} <|@ <|@
      nr  744  <|@ instruction rbp|DWORD[.] = MOV [r9|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  746  <|@ instruction MOV (x: [rdx|QWORD[*] + 12], y: rbp|DWORD[.]) size: DWORD <|@ <|@
      nr  748  <|@ instruction MOV (x: [rdx|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  750  <|@ instruction MOV (x: [rdx|QWORD[*] + 20], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  752  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@74b0c02b encoding: base: 0 shift: 3 <|@ <|@
      nr  754  <|@ instruction MOV (x: [rbx|QWORD[.] + 16], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  756  <|@ instruction rbx|QWORD[*] = SHR rbx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  758  <|@ instruction MOVB (x: [rbx|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  760  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  762  <|@ instruction rbx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction JUMP ~[] destination: B76 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B76" 
    successors "B73" "B77" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4616371718666829691
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  668  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@74b0c02b encoding: base: 0 shift: 3 <|@ <|@
      nr  670  <|@ instruction CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  672  <|@ instruction BRANCH trueDestinationProbability: 0.8331923870416148 condition: > trueDestination: B72 -> B73 falseDestination: B72 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4585158055938145756
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  686  <|@ instruction stack:44|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD <|@ <|@
      nr  688  <|@ instruction stack:80|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  692  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  694  <|@ instruction rbp|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  696  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  700  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  702  <|@ instruction r13|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ st <@st|@reference-map: [r13:0, stack:16, stack:24, stack:52, stack:64]
live-base-pointers: []
java.util.LinkedList.addAll(LinkedList.java:422) [bci: 68]
locals: stack:32|QWORD[.] - - - stack:40|DWORD stack:80|QWORD[.] r13|QWORD[.] stack:72|QWORD[.] stack:40|DWORD stack:84|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:68] <|@ <|@
      nr  706  <|@ instruction rdx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  708  <|@ instruction rax|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  710  <|@ instruction rbx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction r10|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction r11|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction r9|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  722  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B78" 
    xhandlers
    flags 
    probability 4604428103321114964
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  768  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction rbx|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD <|@ <|@
      nr  772  <|@ instruction JUMP ~[] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B58" 
    successors "B79" "B81" 
    xhandlers
    flags 
    probability 4604591831010484268
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  776  <|@ instruction TEST (x: rsi|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  778  <|@ instruction BRANCH trueDestinationProbability: 0.8910276052257723 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" 
    xhandlers
    flags 
    probability 4603892597492784802
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  782  <|@ instruction rsi|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr  786  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  788  <|@ instruction JUMP ~[] destination: B79 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" "B48" 
    successors 
    xhandlers
    flags 
    probability 4605231339210539388
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  792  <|@ instruction MOV (x: [r13|QWORD[.] + 24], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  794  <|@ instruction rax|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  796  <|@ instruction MOVB (x: [rax|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  798  <|@ instruction r10|DWORD = ADD (x: stack:36|DWORD, y: stack:40|DWORD) size: DWORD <|@ <|@
      nr  800  <|@ instruction MOV (x: [r13|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  802  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  804  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, ~y: [r13|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  806  <|@ instruction MOV (x: [r13|QWORD[.] + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  808  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  810  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  286  <|@ instruction r11|QWORD[.] = LEA [r9|QWORD[.] + rsi|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr  288  <|@ instruction rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr  290  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  292  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  294  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  298  <|@ instruction rbx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  300  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B37" "B36" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  326  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD <|@ <|@
      nr  328  <|@ instruction CMP (x: rbx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  330  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B34 -> B37 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  338  <|@ instruction xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr  340  <|@ instruction J (address: [r11|QWORD[.] + rbx|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  342  <|@ instruction rsi|QWORD = LEA [rbx|QWORD + 4] size: QWORD <|@ <|@
      nr  344  <|@ instruction rbx|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B34" 
    successors "B40" "B39" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  350  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD <|@ <|@
      nr  352  <|@ instruction CMP (x: rbx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  354  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B37 -> B40 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  362  <|@ instruction xmm0|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr  364  <|@ instruction J (address: [r11|QWORD[.] + rbx|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr  366  <|@ instruction rsi|QWORD = LEA [rbx|QWORD + 2] size: QWORD <|@ <|@
      nr  368  <|@ instruction rbx|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B37" 
    successors "B45" "B42" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  374  <|@ instruction rdx|QWORD = DEC rdx|QWORD size: QWORD <|@ <|@
      nr  376  <|@ instruction CMP (x: rbx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  378  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B40 -> B45 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  386  <|@ instruction MOV (x: [r11|QWORD[.] + rbx|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  388  <|@ instruction JUMP ~[] destination: B42 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4595177897919030989
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  618  <|@ instruction MOV (x: [r13|QWORD[.] + 20], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr  620  <|@ instruction rdx|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  622  <|@ instruction MOVB (x: [rdx|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  304  <|@ instruction xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr  306  <|@ instruction rbx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  308  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B32" 
    successors "B34" "B32" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  312  <|@ instruction J (address: [r11|QWORD[.] + rbx|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  314  <|@ instruction rbx|QWORD = LEA [rbx|QWORD + 8] size: QWORD <|@ <|@
      nr  316  <|@ instruction CMP (x: rbx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  318  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B32 -> B34 falseDestination: B32 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B14" "B17" 
    successors "B19" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  194  <|@ instruction xmm0|V256_DWORD[........] = H [r11|QWORD[*] + rdi|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  196  <|@ instruction J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  198  <|@ instruction rdi|QWORD = LEA [rdi|QWORD + 8] size: QWORD <|@ <|@
      nr  200  <|@ instruction CMP (x: rdi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  202  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B17 -> B19 falseDestination: B17 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" "B55" 
    xhandlers
    flags 
    probability 4592516709247147048
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  462  <|@ instruction rsi|DWORD = SAR r10|DWORD size: DWORD <|@ <|@
      nr  464  <|@ instruction CMP (x: rsi|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  466  <|@ instruction BRANCH trueDestinationProbability: 0.6958208146579323 condition: > trueDestination: B51 -> B52 falseDestination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4590128206502600549
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  470  <|@ instruction CMP r14|DWORD y: 1 size: DWORD <|@ <|@
      nr  472  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590128206502600549
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  476  <|@ instruction rsi|DWORD[.] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  478  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@74b0c02b encoding: base: 0 shift: 3 <|@ <|@
      nr  480  <|@ instruction JUMP ~[] destination: B53 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" "B57" 
    successors "B78" "B60" 
    xhandlers
    flags 
    probability 4592516709247147048
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  512  <|@ st <@st|@reference-map: [rcx:0, rsi:0, r9:0, r13:0, stack:64]
live-base-pointers: []
java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0]
locals: r13|QWORD[.] r14|DWORD rcx|QWORD[.] - - - - - - - - - - 
>@ <|@ instruction rbx|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr  514  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@74b0c02b encoding: base: 0 shift: 3 <|@ <|@
      nr  516  <|@ instruction CMP r8|DWORD y: 1 size: DWORD <|@ <|@
      nr  518  <|@ instruction BRANCH trueDestinationProbability: 0.1668076129583852 condition: < trueDestination: B58 -> B78 falseDestination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4591206887732192612
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  526  <|@ instruction rdx|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction JUMP ~[] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors 
    xhandlers
    flags 
    probability 4590258288804760654
    begin_IR
      LIR
      nr  812  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  816  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  818  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rsi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@74b0c02b encoding: base: 0 shift: 3 <|@ <|@
      nr  820  <|@ st <@st|@reference-map: [rbx:0, rsi:0, rdi:0, r13:0]
live-base-pointers: []
java.util.LinkedList.addAll(LinkedList.java:432) [bci: 131]
locals: r13|QWORD[.] - - - stack:40|DWORD Object[null] rsi|QWORD[.] - - - - - - 
>@ <|@ instruction MOV (x: [rdi|QWORD[.] + 16], y: rax|DWORD[.]) size: DWORD state [bci:131] <|@ <|@
      nr  822  <|@ instruction rdi|QWORD[*] = SHR rdi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  824  <|@ instruction MOVB (x: [rdi|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  826  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr  828  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  830  <|@ instruction MOVB (x: [rsi|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  832  <|@ instruction r10|DWORD = ADD (x: stack:36|DWORD, y: stack:40|DWORD) size: DWORD <|@ <|@
      nr  834  <|@ instruction MOV (x: [r13|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  836  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  838  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, ~y: [r13|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  840  <|@ instruction MOV (x: [r13|QWORD[.] + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  842  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  844  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4584937826524887431
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  490  <|@ instruction rsi|DWORD = DEC r10|DWORD size: DWORD <|@ <|@
      nr  492  <|@ instruction CMP (x: rsi|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  494  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4584937826524887431
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  504  <|@ instruction rsi|DWORD[.] = MOV [r13|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  506  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@74b0c02b encoding: base: 0 shift: 3 <|@ <|@
      nr  508  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  100  <|@ instruction stack:44|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction stack:56|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction r9|QWORD = UNCOMPRESSPOINTER (input: r9|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@74b0c02b encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction rsi|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction rdx|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  112  <|@ st <@st|@reference-map: [r13:0, stack:40, stack:52, stack:64]
live-base-pointers: []
java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0]
locals: r13|QWORD[.] r14|DWORD stack:56|QWORD[.] - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  114  <|@ instruction r9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction r11|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  120  <|@ instruction r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  122  <|@ instruction rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction JUMP ~[] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    probability 4575956648883528390
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  544  <|@ instruction stack:44|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr  546  <|@ instruction stack:80|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  548  <|@ instruction stack:56|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  550  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  554  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  556  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  558  <|@ st <@st|@reference-map: [r13:0, stack:16, stack:24, stack:40, stack:52, stack:64]
live-base-pointers: []
java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0]
locals: stack:32|QWORD[.] r14|DWORD stack:56|QWORD[.] - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  560  <|@ instruction rcx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction rbx|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  564  <|@ instruction rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  566  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  568  <|@ instruction r11|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction r9|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  572  <|@ instruction r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  574  <|@ instruction r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  576  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction JUMP ~[] destination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B86" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  498  <|@ instruction r10|DWORD = MOVE input: int[-79379|0xfffffffffffec9ed] <|@ <|@
      nr  500  <|@ instruction JUMP ~[] destination: B56 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B2" "B85" "B4" "B6" "B56" "B54" "B8" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  882  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  884  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  886  <|@ st <@st|@reference-map: [rcx:0, r13:0]
live-base-pointers: []
java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0]
locals: r13|QWORD[.] r14|DWORD rcx|QWORD[.] - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B86" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction r10|DWORD = MOVE input: int[-75027|0xfffffffffffedaed] <|@ <|@
      nr   62  <|@ instruction JUMP ~[] destination: B6 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B86" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction r10|DWORD = MOVE input: int[-70675|0xfffffffffffeebed] <|@ <|@
      nr   42  <|@ instruction JUMP ~[] destination: B4 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B86" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction r10|DWORD = MOVE input: int[-69651|0xfffffffffffeefed] <|@ <|@
      nr   26  <|@ instruction JUMP ~[] destination: B2 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B86" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  876  <|@ instruction r10|DWORD = MOVE input: int[-71219|0xfffffffffffee9cd] <|@ <|@
      nr  878  <|@ instruction JUMP ~[] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B86" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  484  <|@ instruction r10|DWORD = MOVE input: int[-78611|0xfffffffffffecced] <|@ <|@
      nr  486  <|@ instruction JUMP ~[] destination: B54 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  848  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  850  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@198780052] <|@ <|@
      nr  852  <|@ instruction MOV [r15|QWORD + 668] y: -82203 size: DWORD <|@ <|@
      nr  854  <|@ instruction MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr  856  <|@ st <@st|@reference-map: [rdi:0, r9:0, r13:0, stack:64]
live-base-pointers: []
java.util.LinkedList.addAll(LinkedList.java:422) [bci: 68]
locals: stack:32|QWORD[.] - - - r8|DWORD rdi|QWORD[.] r13|QWORD[.] r9|QWORD[.] r8|DWORD int[1|0x1] - - - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B86" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction r10|DWORD = MOVE input: int[-132705|0xfffffffffffdf99f] <|@ <|@
      nr   74  <|@ instruction JUMP ~[] destination: B8 -> B86 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokespecial #20         // checkPositionIndex:(int)void
     5: aload_2       
     6: invokeinterface#21, 1      // java.util.Collection.toArray:()java.lang.Object[]
    11: astore_3      
    12: aload_3       
    13: arraylength   
    14: istore        4
    16: iload         4
    18: ifne          23
    21: iconst_0      
    22: ireturn       
    23: iload_1       
    24: aload_0       
    25: getfield      #1          // size:int
    28: if_icmpne     43
    31: aconst_null   
    32: astore        6
    34: aload_0       
    35: getfield      #6          // last:java.util.LinkedList$Node
    38: astore        5
    40: goto          57
    43: aload_0       
    44: iload_1       
    45: invokevirtual #22         // node:(int)java.util.LinkedList$Node
    48: astore        6
    50: aload         6
    52: getfield      #7          // java.util.LinkedList$Node.prev:java.util.LinkedList$Node
    55: astore        5
    57: aload_3       
    58: astore        7
    60: aload         7
    62: arraylength   
    63: istore        8
    65: iconst_0      
    66: istore        9
    68: iload         9
    70: iload         8
    72: if_icmpge     131
    75: aload         7
    77: iload         9
    79: aaload        
    80: astore        10
    82: aload         10
    84: astore        11
    86: new           #6          // java.util.LinkedList$Node
    89: dup           
    90: aload         5
    92: aload         11
    94: aconst_null   
    95: invokespecial #5          // java.util.LinkedList$Node.<init>:(java.util.LinkedList$Node, java.lang.Object, java.util.LinkedList$Node)void
    98: astore        12
   100: aload         5
   102: ifnonnull     114
   105: aload_0       
   106: aload         12
   108: putfield      #4          // first:java.util.LinkedList$Node
   111: goto          121
   114: aload         5
   116: aload         12
   118: putfield      #9          // java.util.LinkedList$Node.next:java.util.LinkedList$Node
   121: aload         12
   123: astore        5
   125: iinc          
   128: goto          68
   131: aload         6
   133: ifnonnull     145
   136: aload_0       
   137: aload         5
   139: putfield      #6          // last:java.util.LinkedList$Node
   142: goto          159
   145: aload         5
   147: aload         6
   149: putfield      #9          // java.util.LinkedList$Node.next:java.util.LinkedList$Node
   152: aload         6
   154: aload         5
   156: putfield      #7          // java.util.LinkedList$Node.prev:java.util.LinkedList$Node
   159: aload_0       
   160: dup           
   161: getfield      #1          // size:int
   164: iload         4
   166: iadd          
   167: putfield      #1          // size:int
   170: aload_0       
   171: dup           
   172: getfield      #8          // java.util.AbstractList.modCount:int
   175: iconst_1      
   176: iadd          
   177: putfield      #8          // java.util.AbstractList.modCount:int
   180: iconst_1      
   181: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec5848896c24504c8bee4c896c2440448bf2817908addeadde0f85b20500004585f60f8ca1050000458b5510448954243c453bf20f8f87050000448b5914438504dc448b411044894424384585c00f84650500004585c00f8ca9050000498b7760498b5770468b0cdd08000000418bd8c1e3028d5b1783e3f84863db488bfb4803fe483bfa0f878004000049897f600f188433c00000000f188433000100000f188433400100000f188433800100004489460c48c7060100000044894e084c8bce428b34dd0c000000443bc6418bd00f4fd64863f24883fe010f8c75000000488d56f8498d59104e8d1cdd100000004885d248c7c7000000000f8d48030000488d56fc483bfa0f8f12000000c4c17a6f04bbc5fa7f04bb488d5704488bfa488d56fe483bfa0f8f13000000c4c1f96e04bbc4e1f97e04bb488d5702488bfa488bd648ffca483bfa0f8f07000000418b14bb8914bb4963d0483bd60f8f30020000418bf0ffcec1e6024863f6498d51104803d648c1ea09498d711048c1ee09482bd648ffc249bb00e01b17010000004c895c2420e91e0000000f1f8400000000000f1f800000000048ffca488bde4903db4803da4488234883fa017deb453bd60f859b020000418b75184183f8010f8c7b0100008bd648c1e2038bde48be00000000000000004c894c2418498b7f60488d4718493b47700f874b030000498947600f1887d8000000488bcf488bf949beaddeaddeaddeadde498b86a8000000488901c74108addeadde418b411089410c44896110895914488bcf48c1e9034885d20f84b7010000894a1048c1ea094688241a4183f8020f8c0e000000418bd0ffca443bc20f8678030000488bdf41ba01000000e958000000498b5760488d4a18493b4f700f875700000049894f600f1882d8000000488bca498baea800000048892ac74208addeadde438b6c9110896a0c44896210894214488bd148c1ea0389531048c1eb094688241b41ffc2488bd9488bc348c1e803453bc27f9ce9590000008944243448895c2410448954240c48baaddeaddeaddeadde488bee488bf2ba02000000b9010000004c8bede80000000090488bd08b442434488b5c2410448b54240c498bf54c8b5c24204c8b4c2418448b442438e95bffffff488bfb8bd84885f60f85540100008bf34c8b6c244041897518498bc548c1e80946882418448b54243c440354243845895510b8010000004103450c4189450cb801000000488b6c24504883c458850500000000c5f877c34d8d5cb110482bd6488d72f84885f60f8d6c00000048c7c300000000488d72fc483bde0f8f11000000c5f9efc0c4c17a7f049b488d7304488bde488d72fe483bde0f8f11000000c5f9efc0c4c1f97e049b488d7302488bde48ffca483bda0f8f6cfdffff4589249be963fdffff41894d14498bd548c1ea094688241ae940feffffc5f9efc048c7c3000000006666660f1f840000000000c4c17e7f049b488d5b08483bde7ef1e971ffffff660f1f440000660f1f440000c4c17e6f04bbc5fe7f04bb488d7f08483bfa7eece99ffcffff418bf2d1fe413bf60f8e820000004183fe010f8d61010000418b751448c1e6038b5e148bfb48c1e7034183f8010f8cabfeffff488bd7e94afdffff4c8b6c2440488bc648c1e80389471048c1ef094688241f895e1448c1ee094688241e448b54243c440354243845895510b8010000004103450c4189450cb801000000488b6c24504883c458850500000000c5f877c3418bf2ffce413bf60f8fa1000000418b751848c1e603e975ffffff44895c243448894c242849c1e103498bf18b542438b900000000e800000000904c8bc8448b442438448b5c2434448b54243c488b4c2428e97afbffff895c2434488954241048894c24284c8bee48beaddeaddeaddeaddeba02000000b901000000e80000000090488bc88b5c2434498bf5488b5424104c8b5c24204c8b4c2418448b442438448b54243c4c8b6c2440e96bfcffff41baedc9feff4589979c0200004d89a7a8020000e8000000009041baeddafeffebe441baedebfeffebdc41baedeffeffebd441bacde9feffebcc41baedccfeffebc44c8bee49baaddeaddeaddeadde41c7879c020000e5befeff4d8997a8020000e8000000009041ba9ff9fdffeb97e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@368fbfea slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 56 10 r14|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 59 12 CMP [rcx|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed} state [bci:0]  <||@
  Comment 59 [rcx:0, r13:0, stack:64]at java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2             |3  |4  |5  |6  |7  |8  |9  |10  |11  |12 
     locals:  |r13|QWORD[.]  |r14|DWORD  |rcx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-    <||@
  Comment 59 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 59 {meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed}}  <||@
  Comment 66 14 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B85  <||@
  Comment 72 block B1 null  <||@
  Comment 72 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 72 18 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 75 20 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 81 block B3 null  <||@
  Comment 81 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 81 30 r10|DWORD = MOV [r13|QWORD[.] + 16] size: DWORD  <||@
  Comment 85 32 stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 90 34 CMP (x: r14|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 93 36 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 99 block B5 null  <||@
  Comment 99 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 99 46 r11|DWORD[.] = MOV [rcx|QWORD[.] + 20] size: DWORD  <||@
  Comment 103 48 NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:0]  <||@
  Comment 103 [rcx:0, r11:0, r13:0, stack:64]at java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2             |3  |4  |5  |6  |7  |8  |9  |10  |11  |12 
     locals:  |r13|QWORD[.]  |r14|DWORD  |rcx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-    <||@
  Comment 103 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 107 50 r8|DWORD = MOV [rcx|QWORD[.] + 16] size: DWORD  <||@
  Comment 111 52 stack:40|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 116 54 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 119 56 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7  <||@
  Comment 125 block B7 null  <||@
  Comment 125 64 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 125 66 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 128 68 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9  <||@
  Comment 134 block B9 null  <||@
  Comment 134 76 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 134 78 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 138 80 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 142 82 r9|DWORD = MOV [r11|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 150 84 rbx|DWORD = SHL r8|DWORD y: 2 size: DWORD  <||@
  Comment 156 86 rbx|DWORD = LEA [rbx|DWORD + 23] size: DWORD  <||@
  Comment 159 88 rbx|DWORD = AND rbx|DWORD y: -8 size: DWORD  <||@
  Comment 162 90 rbx|QWORD = MOVSXD rbx|DWORD size: QWORD  <||@
  Comment 165 92 rdi|QWORD = ADD (x: rbx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 171 94 CMP (x: rdi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 174 96 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11  <||@
  Comment 180 block B11 null  <||@
  Comment 180 126 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 180 128 MOV (x: [r15|QWORD + 96], y: rdi|QWORD) size: QWORD  <||@
  Comment 184 130 AMD64PREFETCH ~[rbx|QWORD + rsi|QWORD * 1 + 192] instr: 0  <||@
  Comment 192 132 AMD64PREFETCH ~[rbx|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 200 134 AMD64PREFETCH ~[rbx|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 208 136 AMD64PREFETCH ~[rbx|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 216 138 MOV (x: [rsi|QWORD + 12], y: r8|DWORD) size: DWORD  <||@
  Comment 220 140 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 227 142 MOV (x: [rsi|QWORD + 8], y: r9|DWORD) size: DWORD  <||@
  Comment 231 144 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 231 146 r9|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 234 148 JUMP ~[] destination: B11 -> B12  <||@
  Comment 234 block B12 null  <||@
  Comment 234 150 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 234 152 rsi|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 242 154 CMP (x: r8|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 245 156 rdx|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rsi|DWORD) condition: >  <||@
  Comment 251 158 rsi|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 254 160 CMP rsi|QWORD y: 1 size: QWORD  <||@
  Comment 258 162 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B12 -> B28 falseDestination: B12 -> B14  <||@
  Comment 264 block B14 null  <||@
  Comment 264 168 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 264 170 rdx|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 268 172 rbx|QWORD[.] = LEA [r9|QWORD[.] + 16] size: QWORD  <||@
  Comment 272 174 r11|QWORD[*] = LEA [r11|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 280 176 TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 283 182 rdi|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 290 178 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B14 -> B19 falseDestination: B14 -> B17  <||@
  Comment 296 block B19 null  <||@
  Comment 296 208 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 296 210 rdx|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 300 212 CMP (x: rdi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 303 214 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B22 falseDestination: B19 -> B21  <||@
  Comment 309 block B21 null  <||@
  Comment 309 220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 309 222 xmm0|V128_DWORD[....] = H [r11|QWORD[*] + rdi|QWORD * 4] nZ: XMM oh: VMOVDQU  <||@
  Comment 315 224 J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 320 226 rdx|QWORD = LEA [rdi|QWORD + 4] size: QWORD  <||@
  Comment 324 228 rdi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 327 230 JUMP ~[] destination: B21 -> B22  <||@
  Comment 327 block B22 null  <||@
  Comment 327 232 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 327 234 rdx|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 331 236 CMP (x: rdi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 334 238 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B22 -> B25 falseDestination: B22 -> B24  <||@
  Comment 340 block B24 null  <||@
  Comment 340 244 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 340 246 xmm0|V64_DWORD[..] = H [r11|QWORD[*] + rdi|QWORD * 4] nZ: XMM oh: VMOVQ  <||@
  Comment 346 248 J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 352 250 rdx|QWORD = LEA [rdi|QWORD + 2] size: QWORD  <||@
  Comment 356 252 rdi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 359 254 JUMP ~[] destination: B24 -> B25  <||@
  Comment 359 block B25 null  <||@
  Comment 359 256 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 359 258 rdx|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 365 260 CMP (x: rdi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 368 262 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B25 -> B28 falseDestination: B25 -> B27  <||@
  Comment 374 block B27 null  <||@
  Comment 374 268 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 374 270 rdx|DWORD[.] = MOV [r11|QWORD[*] + rdi|QWORD * 4] size: DWORD  <||@
  Comment 378 272 MOV (x: [rbx|QWORD[.] + rdi|QWORD * 4], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 381 274 JUMP ~[] destination: B27 -> B28  <||@
  Comment 381 block B28 null  <||@
  Comment 381 276 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 381 278 rdx|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 384 280 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 387 282 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B45  <||@
  Comment 393 block B45 null  <||@
  Comment 393 398 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 393 400 rsi|DWORD = DEC r8|DWORD size: DWORD  <||@
  Comment 398 402 rsi|DWORD = SHL rsi|DWORD y: 2 size: DWORD  <||@
  Comment 401 404 rsi|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 404 406 rdx|QWORD[.] = LEA [r9|QWORD[.] + 16] size: QWORD  <||@
  Comment 408 408 rdx|QWORD[.] = ADD (x: rdx|QWORD[.], y: rsi|QWORD) size: QWORD  <||@
  Comment 411 410 rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 415 412 rsi|QWORD[.] = LEA [r9|QWORD[.] + 16] size: QWORD  <||@
  Comment 419 414 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 423 416 rdx|QWORD[*] = SUB (x: rdx|QWORD[*], ~y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 426 418 rdx|QWORD[*] = INC rdx|QWORD[*] size: QWORD  <||@
  Comment 429 420 r11|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 439 422 stack:64|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 444 424 JUMP ~[] destination: B45 -> B46  <||@
  Comment 449 block B83 loop 2 depth 1 header:692|LoopBegin  <||@
  Comment 449 858 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 464 860 rdx|QWORD[*] = DEC rdx|QWORD[*] size: QWORD  <||@
  Comment 467 862 rbx|QWORD[*] = ADD (x: rsi|QWORD[*], y: r11|QWORD) size: QWORD  <||@
  Comment 473 864 rbx|QWORD[*] = ADD (x: rbx|QWORD[*], y: rdx|QWORD[*]) size: QWORD  <||@
  Comment 476 866 MOVB (x: [rbx|QWORD[*]], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 479 868 JUMP ~[] destination: B83 -> B46  <||@
  Comment 479 block B46 loop 2 depth 1 header:692|LoopBegin  <||@
  Comment 479 426 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 479 428 CMP rdx|QWORD[*] y: 1 size: QWORD  <||@
  Comment 483 430 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B46 -> B47 falseDestination: B46 -> B83  <||@
  Comment 485 block B47 null  <||@
  Comment 485 432 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 485 434 CMP (x: r10|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 488 436 BRANCH trueDestinationProbability: 0.8910276052257723 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B51  <||@
  Comment 494 block B48 null  <||@
  Comment 494 438 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 494 440 rsi|DWORD[.] = MOV [r13|QWORD[.] + 24] size: DWORD  <||@
  Comment 498 442 CMP r8|DWORD y: 1 size: DWORD  <||@
  Comment 502 444 BRANCH trueDestinationProbability: 0.1668076129583852 condition: < trueDestination: B48 -> B80 falseDestination: B48 -> B50  <||@
  Comment 508 block B50 null  <||@
  Comment 508 450 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 508 452 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@74b0c02b encoding: base: 0 shift: 3  <||@
  Comment 514 454 rbx|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD  <||@
  Comment 516 456 rsi|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 526 458 JUMP ~[] destination: B50 -> B61  <||@
  Comment 526 block B61 null  <||@
  Comment 526 530 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 526 532 stack:72|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 531 534 rdi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 535 536 rax|QWORD = LEA [rdi|QWORD + 24] size: QWORD  <||@
  Comment 539 538 CMP (x: rax|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 543 540 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B63  <||@
  Comment 549 block B63 null  <||@
  Comment 549 580 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 549 582 MOV (x: [r15|QWORD + 96], y: rax|QWORD) size: QWORD  <||@
  Comment 553 584 AMD64PREFETCH ~[rdi|QWORD + 216] instr: 0  <||@
  Comment 560 586 rcx|QWORD[*] = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 563 588 JUMP ~[] destination: B63 -> B64  <||@
  Comment 563 block B64 null  <||@
  Comment 563 590 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 563 592 rdi|QWORD[.] = MOVE rcx|QWORD[*] moveKind: QWORD  <||@
  Comment 566 594 r14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>}  <||@
  Comment 566 {meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>}}  <||@
  Comment 576 596 rax|QWORD = MOV [r14|QWORD + 168] size: QWORD  <||@
  Comment 583 598 MOV (x: [rcx|QWORD[*]], y: rax|QWORD) size: QWORD  <||@
  Comment 586 600 MOV [rcx|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed}  <||@
  Comment 586 {meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed}}  <||@
  Comment 593 602 rax|DWORD[.] = MOV [r9|QWORD[.] + 16] size: DWORD  <||@
  Comment 597 604 MOV (x: [rcx|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 600 606 MOV (x: [rcx|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 604 608 MOV (x: [rcx|QWORD[*] + 20], y: rbx|DWORD[.]) size: DWORD  <||@
  Comment 607 610 rcx|DWORD[.] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@74b0c02b encoding: base: 0 shift: 3  <||@
  Comment 614 612 TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 617 614 BRANCH trueDestinationProbability: 0.20020299699408295 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B66  <||@
  Comment 623 block B66 null  <||@
  Comment 623 626 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 623 628 MOV (x: [rdx|QWORD[.] + 16], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 626 630 rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 630 632 MOVB (x: [rdx|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 634 634 JUMP ~[] destination: B66 -> B67  <||@
  Comment 634 block B67 null  <||@
  Comment 634 636 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 634 638 CMP r8|DWORD y: 2 size: DWORD  <||@
  Comment 638 640 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B67 -> B71 falseDestination: B67 -> B69  <||@
  Comment 644 block B69 null  <||@
  Comment 644 646 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 644 648 rdx|DWORD = DEC r8|DWORD size: DWORD  <||@
  Comment 649 650 CMP (x: r8|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 652 652 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B69 -> B71 falseDestination: B69 -> B82  <||@
  Comment 658 block B71 null  <||@
  Comment 658 658 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 658 660 rbx|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 661 662 r10|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 667 664 JUMP ~[] destination: B71 -> B72  <||@
  Comment 672 block B73 loop 3 depth 1 header:36|LoopBegin  <||@
  Comment 672 674 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 672 676 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 676 678 rcx|QWORD = LEA [rdx|QWORD + 24] size: QWORD  <||@
  Comment 680 680 CMP (x: rcx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 684 682 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B75  <||@
  Comment 690 block B75 loop 3 depth 1 header:36|LoopBegin  <||@
  Comment 690 724 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 690 726 MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD  <||@
  Comment 694 728 AMD64PREFETCH ~[rdx|QWORD + 216] instr: 0  <||@
  Comment 701 730 rdx|QWORD[*] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 701 732 JUMP ~[] destination: B75 -> B76  <||@
  Comment 701 block B76 loop 3 depth 1 header:36|LoopBegin  <||@
  Comment 701 734 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 701 736 rcx|QWORD[.] = MOVE rdx|QWORD[*] moveKind: QWORD  <||@
  Comment 704 738 rbp|QWORD = MOV [r14|QWORD + 168] size: QWORD  <||@
  Comment 711 740 MOV (x: [rdx|QWORD[*]], y: rbp|QWORD) size: QWORD  <||@
  Comment 714 742 MOV [rdx|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed}  <||@
  Comment 714 {meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed}}  <||@
  Comment 721 744 rbp|DWORD[.] = MOV [r9|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD  <||@
  Comment 726 746 MOV (x: [rdx|QWORD[*] + 12], y: rbp|DWORD[.]) size: DWORD  <||@
  Comment 729 748 MOV (x: [rdx|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 733 750 MOV (x: [rdx|QWORD[*] + 20], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 736 752 rdx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@74b0c02b encoding: base: 0 shift: 3  <||@
  Comment 743 754 MOV (x: [rbx|QWORD[.] + 16], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 746 756 rbx|QWORD[*] = SHR rbx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 750 758 MOVB (x: [rbx|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 754 760 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 757 762 rbx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 760 764 JUMP ~[] destination: B76 -> B72  <||@
  Comment 760 block B72 loop 3 depth 1 header:36|LoopBegin  <||@
  Comment 760 666 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 760 668 rax|DWORD[.] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@74b0c02b encoding: base: 0 shift: 3  <||@
  Comment 767 670 CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 770 672 BRANCH trueDestinationProbability: 0.8331923870416148 condition: > trueDestination: B72 -> B73 falseDestination: B72 -> B77  <||@
  Comment 777 block B74 loop 3 depth 1 header:36|LoopBegin  <||@
  Comment 777 684 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 777 686 stack:44|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD  <||@
  Comment 781 688 stack:80|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 786 690 stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 791 692 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 791 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 801 694 rbp|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 804 696 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 807 698 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 812 700 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 817 702 r13|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 820 704 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:68]  <||@
  Comment 820 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 825 [r13:0, stack:16, stack:24, stack:52, stack:64]at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 68, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4               |5                  |6             |7                  |8               |9               |10  |11  |12 
     locals:  |stack:32|QWORD[.]  |-  |-  |-  |stack:40|DWORD  |stack:80|QWORD[.]  |r13|QWORD[.]  |stack:72|QWORD[.]  |stack:40|DWORD  |stack:84|DWORD  |-   |-   |-    <||@
  Comment 826 706 rdx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 829 708 rax|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 833 710 rbx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 838 712 r10|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 843 714 rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 846 716 r11|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 851 718 r9|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 856 720 r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 861 722 JUMP ~[] destination: B74 -> B76  <||@
  Comment 866 block B77 null  <||@
  Comment 866 766 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 866 768 rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 869 770 rbx|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD  <||@
  Comment 871 772 JUMP ~[] destination: B77 -> B78  <||@
  Comment 871 block B78 null  <||@
  Comment 871 774 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 871 776 TEST (x: rsi|QWORD[.], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 874 778 BRANCH trueDestinationProbability: 0.8910276052257723 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B81  <||@
  Comment 880 block B79 null  <||@
  Comment 880 780 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 880 782 rsi|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD  <||@
  Comment 882 786 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 887 788 JUMP ~[] destination: B79 -> B80  <||@
  Comment 887 block B80 null  <||@
  Comment 887 790 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 887 792 MOV (x: [r13|QWORD[.] + 24], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 891 794 rax|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD  <||@
  Comment 898 796 MOVB (x: [rax|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 902 798 r10|DWORD = ADD (x: stack:36|DWORD, y: stack:40|DWORD) size: DWORD  <||@
  Comment 912 800 MOV (x: [r13|QWORD[.] + 16], y: r10|DWORD) size: DWORD  <||@
  Comment 916 802 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 921 804 rax|DWORD = ADD (x: rax|DWORD, ~y: [r13|QWORD[.] + 12]) size: DWORD  <||@
  Comment 925 806 MOV (x: [r13|QWORD[.] + 12], y: rax|DWORD) size: DWORD  <||@
  Comment 929 808 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 934 810 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 943 12  <||@
  Comment 953 block B29 null  <||@
  Comment 953 284 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 953 286 r11|QWORD[.] = LEA [r9|QWORD[.] + rsi|QWORD * 4 + 16] size: QWORD  <||@
  Comment 958 288 rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD  <||@
  Comment 961 290 rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 965 292 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 968 294 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B29 -> B30 falseDestination: B29 -> B31  <||@
  Comment 974 block B30 null  <||@
  Comment 974 296 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 974 298 rbx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 981 300 JUMP ~[] destination: B30 -> B34  <||@
  Comment 981 block B34 null  <||@
  Comment 981 324 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 981 326 rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD  <||@
  Comment 985 328 CMP (x: rbx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 988 330 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B34 -> B37 falseDestination: B34 -> B36  <||@
  Comment 994 block B36 null  <||@
  Comment 994 336 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 994 338 xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null>  <||@
  Comment 998 340 J (address: [r11|QWORD[.] + rbx|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 1004 342 rsi|QWORD = LEA [rbx|QWORD + 4] size: QWORD  <||@
  Comment 1008 344 rbx|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1011 346 JUMP ~[] destination: B36 -> B37  <||@
  Comment 1011 block B37 null  <||@
  Comment 1011 348 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1011 350 rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD  <||@
  Comment 1015 352 CMP (x: rbx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1018 354 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B37 -> B40 falseDestination: B37 -> B39  <||@
  Comment 1024 block B39 null  <||@
  Comment 1024 360 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1024 362 xmm0|V64_DWORD[..] = L oc: SIMD<null,null>  <||@
  Comment 1028 364 J (address: [r11|QWORD[.] + rbx|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 1034 366 rsi|QWORD = LEA [rbx|QWORD + 2] size: QWORD  <||@
  Comment 1038 368 rbx|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1041 370 JUMP ~[] destination: B39 -> B40  <||@
  Comment 1041 block B40 null  <||@
  Comment 1041 372 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1041 374 rdx|QWORD = DEC rdx|QWORD size: QWORD  <||@
  Comment 1044 376 CMP (x: rbx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1047 378 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B40 -> B45 falseDestination: B40 -> B42  <||@
  Comment 1053 block B42 null  <||@
  Comment 1053 384 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1053 386 MOV (x: [r11|QWORD[.] + rbx|QWORD * 4], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 1057 388 JUMP ~[] destination: B42 -> B45  <||@
  Comment 1062 block B65 null  <||@
  Comment 1062 616 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1062 618 MOV (x: [r13|QWORD[.] + 20], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 1066 620 rdx|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1073 622 MOVB (x: [rdx|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1077 624 JUMP ~[] destination: B65 -> B67  <||@
  Comment 1082 block B31 null  <||@
  Comment 1082 302 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1082 304 xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null>  <||@
  Comment 1086 306 rbx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1093 308 JUMP ~[] destination: B31 -> B32  <||@
  Comment 1093 block B32 loop 1 depth 1 header:938|LoopBegin  <||@
  Comment 1093 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1104 312 J (address: [r11|QWORD[.] + rbx|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 1110 314 rbx|QWORD = LEA [rbx|QWORD + 8] size: QWORD  <||@
  Comment 1114 316 CMP (x: rbx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1117 318 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B32 -> B34 falseDestination: B32 -> B32  <||@
  Comment 1124 block B17 loop 0 depth 1 header:883|LoopBegin  <||@
  Comment 1124 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1136 194 xmm0|V256_DWORD[........] = H [r11|QWORD[*] + rdi|QWORD * 4] nZ: YMM oh: VMOVDQU  <||@
  Comment 1142 196 J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 1147 198 rdi|QWORD = LEA [rdi|QWORD + 8] size: QWORD  <||@
  Comment 1151 200 CMP (x: rdi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1154 202 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B17 -> B19 falseDestination: B17 -> B17  <||@
  Comment 1161 block B51 null  <||@
  Comment 1161 460 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1161 462 rsi|DWORD = SAR r10|DWORD size: DWORD  <||@
  Comment 1166 464 CMP (x: rsi|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 1169 466 BRANCH trueDestinationProbability: 0.6958208146579323 condition: > trueDestination: B51 -> B52 falseDestination: B51 -> B55  <||@
  Comment 1175 block B52 null  <||@
  Comment 1175 468 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1175 470 CMP r14|DWORD y: 1 size: DWORD  <||@
  Comment 1179 472 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B54  <||@
  Comment 1185 block B53 null  <||@
  Comment 1185 474 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1185 476 rsi|DWORD[.] = MOV [r13|QWORD[.] + 20] size: DWORD  <||@
  Comment 1189 478 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@74b0c02b encoding: base: 0 shift: 3  <||@
  Comment 1193 480 JUMP ~[] destination: B53 -> B58  <||@
  Comment 1193 block B58 null  <||@
  Comment 1193 510 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1193 512 rbx|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD state [bci:0]  <||@
  Comment 1193 [rcx:0, rsi:0, r9:0, r13:0, stack:64]at java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2             |3  |4  |5  |6  |7  |8  |9  |10  |11  |12 
     locals:  |r13|QWORD[.]  |r14|DWORD  |rcx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-    <||@
  Comment 1193 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1196 514 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@74b0c02b encoding: base: 0 shift: 3  <||@
  Comment 1202 516 CMP r8|DWORD y: 1 size: DWORD  <||@
  Comment 1206 518 BRANCH trueDestinationProbability: 0.1668076129583852 condition: < trueDestination: B58 -> B78 falseDestination: B58 -> B60  <||@
  Comment 1212 block B60 null  <||@
  Comment 1212 524 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1212 526 rdx|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1215 528 JUMP ~[] destination: B60 -> B61  <||@
  Comment 1220 block B81 null  <||@
  Comment 1220 812 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1220 816 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1225 818 rax|DWORD[.] = COMPRESSPOINTER (input: rsi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@74b0c02b encoding: base: 0 shift: 3  <||@
  Comment 1232 820 MOV (x: [rdi|QWORD[.] + 16], y: rax|DWORD[.]) size: DWORD state [bci:131]  <||@
  Comment 1232 [rbx:0, rsi:0, rdi:0, r13:0]at java.util.LinkedList.addAll(LinkedList.java:432) [bci: 131, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4               |5             |6             |7  |8  |9  |10  |11  |12 
     locals:  |r13|QWORD[.]  |-  |-  |-  |stack:40|DWORD  |Object[null]  |rsi|QWORD[.]  |-  |-  |-  |-   |-   |-    <||@
  Comment 1232 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1235 822 rdi|QWORD[*] = SHR rdi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1239 824 MOVB (x: [rdi|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1243 826 MOV (x: [rsi|QWORD[.] + 20], y: rbx|DWORD[.]) size: DWORD  <||@
  Comment 1246 828 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1250 830 MOVB (x: [rsi|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1254 832 r10|DWORD = ADD (x: stack:36|DWORD, y: stack:40|DWORD) size: DWORD  <||@
  Comment 1264 834 MOV (x: [r13|QWORD[.] + 16], y: r10|DWORD) size: DWORD  <||@
  Comment 1268 836 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1273 838 rax|DWORD = ADD (x: rax|DWORD, ~y: [r13|QWORD[.] + 12]) size: DWORD  <||@
  Comment 1277 840 MOV (x: [r13|QWORD[.] + 12], y: rax|DWORD) size: DWORD  <||@
  Comment 1281 842 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1286 844 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1295 12  <||@
  Comment 1305 block B55 null  <||@
  Comment 1305 488 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1305 490 rsi|DWORD = DEC r10|DWORD size: DWORD  <||@
  Comment 1310 492 CMP (x: rsi|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 1313 494 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B57  <||@
  Comment 1319 block B57 null  <||@
  Comment 1319 502 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1319 504 rsi|DWORD[.] = MOV [r13|QWORD[.] + 24] size: DWORD  <||@
  Comment 1323 506 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@74b0c02b encoding: base: 0 shift: 3  <||@
  Comment 1327 508 JUMP ~[] destination: B57 -> B58  <||@
  Comment 1332 block B10 null  <||@
  Comment 1332 98 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1332 100 stack:44|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 1337 102 stack:56|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1342 104 r9|QWORD = UNCOMPRESSPOINTER (input: r9|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@74b0c02b encoding: base: 0 shift: 3  <||@
  Comment 1346 106 rsi|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 1349 108 rdx|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1353 110 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1358 112 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 1358 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1363 [r13:0, stack:40, stack:52, stack:64]at java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2                  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12 
     locals:  |r13|QWORD[.]  |r14|DWORD  |stack:56|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-    <||@
  Comment 1364 114 r9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1367 116 r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1372 118 r11|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 1377 120 r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1382 122 rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1387 124 JUMP ~[] destination: B10 -> B12  <||@
  Comment 1392 block B62 null  <||@
  Comment 1392 542 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1392 544 stack:44|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD  <||@
  Comment 1396 546 stack:80|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1401 548 stack:56|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1406 550 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1409 552 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1409 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1419 554 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 1424 556 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1429 558 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 1429 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1434 [r13:0, stack:16, stack:24, stack:40, stack:52, stack:64]at java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1          |2                  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:32|QWORD[.]  |r14|DWORD  |stack:56|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-    <||@
  Comment 1435 560 rcx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1438 562 rbx|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 1442 564 rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1445 566 rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1450 568 r11|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 1455 570 r9|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1460 572 r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1465 574 r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1470 576 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1475 578 JUMP ~[] destination: B62 -> B64  <||@
  Comment 1480 block B56 null  <||@
  Comment 1480 496 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1480 498 r10|DWORD = MOVE input: int[-79379|0xfffffffffffec9ed]  <||@
  Comment 1486 500 JUMP ~[] destination: B56 -> B86  <||@
  Comment 1486 block B86 null  <||@
  Comment 1486 880 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1486 882 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1493 884 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1500 886 DEOPT info [bci:0]  <||@
  Comment 1500 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1505 [rcx:0, r13:0]at java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2             |3  |4  |5  |6  |7  |8  |9  |10  |11  |12 
     locals:  |r13|QWORD[.]  |r14|DWORD  |rcx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-    <||@
  Comment 1506 block B6 null  <||@
  Comment 1506 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1506 60 r10|DWORD = MOVE input: int[-75027|0xfffffffffffedaed]  <||@
  Comment 1512 62 JUMP ~[] destination: B6 -> B86  <||@
  Comment 1514 block B4 null  <||@
  Comment 1514 38 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1514 40 r10|DWORD = MOVE input: int[-70675|0xfffffffffffeebed]  <||@
  Comment 1520 42 JUMP ~[] destination: B4 -> B86  <||@
  Comment 1522 block B2 null  <||@
  Comment 1522 22 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1522 24 r10|DWORD = MOVE input: int[-69651|0xfffffffffffeefed]  <||@
  Comment 1528 26 JUMP ~[] destination: B2 -> B86  <||@
  Comment 1530 block B85 null  <||@
  Comment 1530 874 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1530 876 r10|DWORD = MOVE input: int[-71219|0xfffffffffffee9cd]  <||@
  Comment 1536 878 JUMP ~[] destination: B85 -> B86  <||@
  Comment 1538 block B54 null  <||@
  Comment 1538 482 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1538 484 r10|DWORD = MOVE input: int[-78611|0xfffffffffffecced]  <||@
  Comment 1544 486 JUMP ~[] destination: B54 -> B86  <||@
  Comment 1546 block B82 null  <||@
  Comment 1546 846 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1546 848 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1549 850 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@198780052]  <||@
  Comment 1549 {Object[d.a@198780052]}  <||@
  Comment 1559 852 MOV [r15|QWORD + 668] y: -82203 size: DWORD  <||@
  Comment 1570 854 MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 1577 856 DEOPT info [bci:68]  <||@
  Comment 1577 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1582 [rdi:0, r9:0, r13:0, stack:64]at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 68, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4         |5             |6             |7            |8         |9           |10  |11  |12 
     locals:  |stack:32|QWORD[.]  |-  |-  |-  |r8|DWORD  |rdi|QWORD[.]  |r13|QWORD[.]  |r9|QWORD[.]  |r8|DWORD  |int[1|0x1]  |-   |-   |-    <||@
  Comment 1583 block B8 null  <||@
  Comment 1583 70 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1583 72 r10|DWORD = MOVE input: int[-132705|0xfffffffffffdf99f]  <||@
  Comment 1589 74 JUMP ~[] destination: B8 -> B86  <||@
  Comment 1591 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1591 4  <||@
  Comment 1597 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 1597 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-8445[java.util.LinkedList.addAll(int, Collection)]"
  method "HotSpotCompilation-8445[java.util.LinkedList.addAll(int, Collection)]"
  date 1527005161103
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 10798f140 448b560849c1e203493bc20f850f6de7fe900f1f80000000000f1f800000000089842400c0feff4883ec5848896c24504c8bee4c896c2440448bf2817908222f00f80f85b20500004585f60f8ca1050000458b5510448954243c453bf20f8f87050000448b5914438504dc448b411044894424384585c00f84650500004585c00f8ca9050000498b7760498b5770468b0cdd08000000418bd8c1e3028d5b1783e3f84863db488bfb4803fe483bfa0f878004000049897f600f188433c00000000f188433000100000f188433400100000f188433800100004489460c48c7060100000044894e084c8bce428b34dd0c000000443bc6418bd00f4fd64863f24883fe010f8c75000000488d56f8498d59104e8d1cdd100000004885d248c7c7000000000f8d48030000488d56fc483bfa0f8f12000000c4c17a6f04bbc5fa7f04bb488d5704488bfa488d56fe483bfa0f8f13000000c4c1f96e04bbc4e1f97e04bb488d5702488bfa488bd648ffca483bfa0f8f07000000418b14bb8914bb4963d0483bd60f8f30020000418bf0ffcec1e6024863f6498d51104803d648c1ea09498d711048c1ee09482bd648ffc249bb00e01b17010000004c895c2420e91e0000000f1f8400000000000f1f800000000048ffca488bde4903db4803da4488234883fa017deb453bd60f859b020000418b75184183f8010f8c7b0100008bd648c1e2038bde48be00000000000000004c894c2418498b7f60488d4718493b47700f874b030000498947600f1887d8000000488bcf488bf949be903904c007000000498b86a8000000488901c74108328700f8418b411089410c44896110895914488bcf48c1e9034885d20f84b7010000894a1048c1ea094688241a4183f8020f8c0e000000418bd0ffca443bc20f8678030000488bdf41ba01000000e958000000498b5760488d4a18493b4f700f875700000049894f600f1882d8000000488bca498baea800000048892ac74208328700f8438b6c9110896a0c44896210894214488bd148c1ea0389531048c1eb094688241b41ffc2488bd9488bc348c1e803453bc27f9ce9590000008944243448895c2410448954240c48ba680b00c007000000488bee488bf2ba02000000b9010000004c8bede8677960ff90488bd08b442434488b5c2410448b54240c498bf54c8b5c24204c8b4c2418448b442438e95bffffff488bfb8bd84885f60f85540100008bf34c8b6c244041897518498bc548c1e80946882418448b54243c440354243845895510b8010000004103450c4189450cb801000000488b6c24504883c458850511fbeffcc5f877c34d8d5cb110482bd6488d72f84885f60f8d6c00000048c7c300000000488d72fc483bde0f8f11000000c5f9efc0c4c17a7f049b488d7304488bde488d72fe483bde0f8f11000000c5f9efc0c4c1f97e049b488d7302488bde48ffca483bda0f8f6cfdffff4589249be963fdffff41894d14498bd548c1ea094688241ae940feffffc5f9efc048c7c3000000006666660f1f840000000000c4c17e7f049b488d5b08483bde7ef1e971ffffff660f1f440000660f1f440000c4c17e6f04bbc5fe7f04bb488d7f08483bfa7eece99ffcffff418bf2d1fe413bf60f8e820000004183fe010f8d61010000418b751448c1e6038b5e148bfb48c1e7034183f8010f8cabfeffff488bd7e94afdffff4c8b6c2440488bc648c1e80389471048c1ef094688241f895e1448c1ee094688241e448b54243c440354243845895510b8010000004103450c4189450cb801000000488b6c24504883c4588505b1f9effcc5f877c3418bf2ffce413bf60f8fa1000000418b751848c1e603e975ffffff44895c243448894c242849c1e103498bf18b542438b900000000e84d7760ff904c8bc8448b442438448b5c2434448b54243c488b4c2428e97afbffff895c2434488954241048894c24284c8bee48be680b00c007000000ba02000000b901000000e8067760ff90488bc88b5c2434498bf5488b5424104c8b5c24204c8b4c2418448b442438448b54243c4c8b6c2440e96bfcffff41baedc9feff4589979c0200004d89a7a8020000e8dd7ee7fe9041baeddafeffebe441baedebfeffebdc41baedeffeffebd441bacde9feffebcc41baedccfeffebc44c8bee49ba602705bf0700000041c7879c020000e5befeff4d8997a8020000e8907ee7fe9041ba9ff9fdffeb97e8a4ae2bff90e87e7de7fe90f4f4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@368fbfea slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 56 10 r14|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 59 12 CMP [rcx|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed} state [bci:0]  <||@
  Comment 59 [rcx:0, r13:0, stack:64]at java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2             |3  |4  |5  |6  |7  |8  |9  |10  |11  |12 
     locals:  |r13|QWORD[.]  |r14|DWORD  |rcx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-    <||@
  Comment 59 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 59 {meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed}}  <||@
  Comment 66 14 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B85  <||@
  Comment 72 block B1 null  <||@
  Comment 72 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 72 18 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 75 20 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 81 block B3 null  <||@
  Comment 81 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 81 30 r10|DWORD = MOV [r13|QWORD[.] + 16] size: DWORD  <||@
  Comment 85 32 stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 90 34 CMP (x: r14|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 93 36 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 99 block B5 null  <||@
  Comment 99 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 99 46 r11|DWORD[.] = MOV [rcx|QWORD[.] + 20] size: DWORD  <||@
  Comment 103 48 NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:0]  <||@
  Comment 103 [rcx:0, r11:0, r13:0, stack:64]at java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2             |3  |4  |5  |6  |7  |8  |9  |10  |11  |12 
     locals:  |r13|QWORD[.]  |r14|DWORD  |rcx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-    <||@
  Comment 103 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 107 50 r8|DWORD = MOV [rcx|QWORD[.] + 16] size: DWORD  <||@
  Comment 111 52 stack:40|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 116 54 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 119 56 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7  <||@
  Comment 125 block B7 null  <||@
  Comment 125 64 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 125 66 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 128 68 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9  <||@
  Comment 134 block B9 null  <||@
  Comment 134 76 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 134 78 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 138 80 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 142 82 r9|DWORD = MOV [r11|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 150 84 rbx|DWORD = SHL r8|DWORD y: 2 size: DWORD  <||@
  Comment 156 86 rbx|DWORD = LEA [rbx|DWORD + 23] size: DWORD  <||@
  Comment 159 88 rbx|DWORD = AND rbx|DWORD y: -8 size: DWORD  <||@
  Comment 162 90 rbx|QWORD = MOVSXD rbx|DWORD size: QWORD  <||@
  Comment 165 92 rdi|QWORD = ADD (x: rbx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 171 94 CMP (x: rdi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 174 96 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11  <||@
  Comment 180 block B11 null  <||@
  Comment 180 126 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 180 128 MOV (x: [r15|QWORD + 96], y: rdi|QWORD) size: QWORD  <||@
  Comment 184 130 AMD64PREFETCH ~[rbx|QWORD + rsi|QWORD * 1 + 192] instr: 0  <||@
  Comment 192 132 AMD64PREFETCH ~[rbx|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 200 134 AMD64PREFETCH ~[rbx|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 208 136 AMD64PREFETCH ~[rbx|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 216 138 MOV (x: [rsi|QWORD + 12], y: r8|DWORD) size: DWORD  <||@
  Comment 220 140 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 227 142 MOV (x: [rsi|QWORD + 8], y: r9|DWORD) size: DWORD  <||@
  Comment 231 144 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 231 146 r9|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 234 148 JUMP ~[] destination: B11 -> B12  <||@
  Comment 234 block B12 null  <||@
  Comment 234 150 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 234 152 rsi|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 242 154 CMP (x: r8|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 245 156 rdx|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rsi|DWORD) condition: >  <||@
  Comment 251 158 rsi|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 254 160 CMP rsi|QWORD y: 1 size: QWORD  <||@
  Comment 258 162 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B12 -> B28 falseDestination: B12 -> B14  <||@
  Comment 264 block B14 null  <||@
  Comment 264 168 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 264 170 rdx|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 268 172 rbx|QWORD[.] = LEA [r9|QWORD[.] + 16] size: QWORD  <||@
  Comment 272 174 r11|QWORD[*] = LEA [r11|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 280 176 TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 283 182 rdi|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 290 178 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B14 -> B19 falseDestination: B14 -> B17  <||@
  Comment 296 block B19 null  <||@
  Comment 296 208 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 296 210 rdx|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 300 212 CMP (x: rdi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 303 214 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B22 falseDestination: B19 -> B21  <||@
  Comment 309 block B21 null  <||@
  Comment 309 220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 309 222 xmm0|V128_DWORD[....] = H [r11|QWORD[*] + rdi|QWORD * 4] nZ: XMM oh: VMOVDQU  <||@
  Comment 315 224 J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 320 226 rdx|QWORD = LEA [rdi|QWORD + 4] size: QWORD  <||@
  Comment 324 228 rdi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 327 230 JUMP ~[] destination: B21 -> B22  <||@
  Comment 327 block B22 null  <||@
  Comment 327 232 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 327 234 rdx|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 331 236 CMP (x: rdi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 334 238 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B22 -> B25 falseDestination: B22 -> B24  <||@
  Comment 340 block B24 null  <||@
  Comment 340 244 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 340 246 xmm0|V64_DWORD[..] = H [r11|QWORD[*] + rdi|QWORD * 4] nZ: XMM oh: VMOVQ  <||@
  Comment 346 248 J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 352 250 rdx|QWORD = LEA [rdi|QWORD + 2] size: QWORD  <||@
  Comment 356 252 rdi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 359 254 JUMP ~[] destination: B24 -> B25  <||@
  Comment 359 block B25 null  <||@
  Comment 359 256 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 359 258 rdx|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 365 260 CMP (x: rdi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 368 262 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B25 -> B28 falseDestination: B25 -> B27  <||@
  Comment 374 block B27 null  <||@
  Comment 374 268 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 374 270 rdx|DWORD[.] = MOV [r11|QWORD[*] + rdi|QWORD * 4] size: DWORD  <||@
  Comment 378 272 MOV (x: [rbx|QWORD[.] + rdi|QWORD * 4], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 381 274 JUMP ~[] destination: B27 -> B28  <||@
  Comment 381 block B28 null  <||@
  Comment 381 276 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 381 278 rdx|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 384 280 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 387 282 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B45  <||@
  Comment 393 block B45 null  <||@
  Comment 393 398 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 393 400 rsi|DWORD = DEC r8|DWORD size: DWORD  <||@
  Comment 398 402 rsi|DWORD = SHL rsi|DWORD y: 2 size: DWORD  <||@
  Comment 401 404 rsi|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 404 406 rdx|QWORD[.] = LEA [r9|QWORD[.] + 16] size: QWORD  <||@
  Comment 408 408 rdx|QWORD[.] = ADD (x: rdx|QWORD[.], y: rsi|QWORD) size: QWORD  <||@
  Comment 411 410 rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 415 412 rsi|QWORD[.] = LEA [r9|QWORD[.] + 16] size: QWORD  <||@
  Comment 419 414 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 423 416 rdx|QWORD[*] = SUB (x: rdx|QWORD[*], ~y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 426 418 rdx|QWORD[*] = INC rdx|QWORD[*] size: QWORD  <||@
  Comment 429 420 r11|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 439 422 stack:64|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 444 424 JUMP ~[] destination: B45 -> B46  <||@
  Comment 449 block B83 loop 2 depth 1 header:692|LoopBegin  <||@
  Comment 449 858 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 464 860 rdx|QWORD[*] = DEC rdx|QWORD[*] size: QWORD  <||@
  Comment 467 862 rbx|QWORD[*] = ADD (x: rsi|QWORD[*], y: r11|QWORD) size: QWORD  <||@
  Comment 473 864 rbx|QWORD[*] = ADD (x: rbx|QWORD[*], y: rdx|QWORD[*]) size: QWORD  <||@
  Comment 476 866 MOVB (x: [rbx|QWORD[*]], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 479 868 JUMP ~[] destination: B83 -> B46  <||@
  Comment 479 block B46 loop 2 depth 1 header:692|LoopBegin  <||@
  Comment 479 426 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 479 428 CMP rdx|QWORD[*] y: 1 size: QWORD  <||@
  Comment 483 430 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B46 -> B47 falseDestination: B46 -> B83  <||@
  Comment 485 block B47 null  <||@
  Comment 485 432 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 485 434 CMP (x: r10|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 488 436 BRANCH trueDestinationProbability: 0.8910276052257723 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B51  <||@
  Comment 494 block B48 null  <||@
  Comment 494 438 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 494 440 rsi|DWORD[.] = MOV [r13|QWORD[.] + 24] size: DWORD  <||@
  Comment 498 442 CMP r8|DWORD y: 1 size: DWORD  <||@
  Comment 502 444 BRANCH trueDestinationProbability: 0.1668076129583852 condition: < trueDestination: B48 -> B80 falseDestination: B48 -> B50  <||@
  Comment 508 block B50 null  <||@
  Comment 508 450 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 508 452 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@74b0c02b encoding: base: 0 shift: 3  <||@
  Comment 514 454 rbx|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD  <||@
  Comment 516 456 rsi|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 526 458 JUMP ~[] destination: B50 -> B61  <||@
  Comment 526 block B61 null  <||@
  Comment 526 530 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 526 532 stack:72|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 531 534 rdi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 535 536 rax|QWORD = LEA [rdi|QWORD + 24] size: QWORD  <||@
  Comment 539 538 CMP (x: rax|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 543 540 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B63  <||@
  Comment 549 block B63 null  <||@
  Comment 549 580 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 549 582 MOV (x: [r15|QWORD + 96], y: rax|QWORD) size: QWORD  <||@
  Comment 553 584 AMD64PREFETCH ~[rdi|QWORD + 216] instr: 0  <||@
  Comment 560 586 rcx|QWORD[*] = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 563 588 JUMP ~[] destination: B63 -> B64  <||@
  Comment 563 block B64 null  <||@
  Comment 563 590 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 563 592 rdi|QWORD[.] = MOVE rcx|QWORD[*] moveKind: QWORD  <||@
  Comment 566 594 r14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>}  <||@
  Comment 566 {meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>}}  <||@
  Comment 576 596 rax|QWORD = MOV [r14|QWORD + 168] size: QWORD  <||@
  Comment 583 598 MOV (x: [rcx|QWORD[*]], y: rax|QWORD) size: QWORD  <||@
  Comment 586 600 MOV [rcx|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed}  <||@
  Comment 586 {meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed}}  <||@
  Comment 593 602 rax|DWORD[.] = MOV [r9|QWORD[.] + 16] size: DWORD  <||@
  Comment 597 604 MOV (x: [rcx|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 600 606 MOV (x: [rcx|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 604 608 MOV (x: [rcx|QWORD[*] + 20], y: rbx|DWORD[.]) size: DWORD  <||@
  Comment 607 610 rcx|DWORD[.] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@74b0c02b encoding: base: 0 shift: 3  <||@
  Comment 614 612 TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 617 614 BRANCH trueDestinationProbability: 0.20020299699408295 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B66  <||@
  Comment 623 block B66 null  <||@
  Comment 623 626 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 623 628 MOV (x: [rdx|QWORD[.] + 16], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 626 630 rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 630 632 MOVB (x: [rdx|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 634 634 JUMP ~[] destination: B66 -> B67  <||@
  Comment 634 block B67 null  <||@
  Comment 634 636 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 634 638 CMP r8|DWORD y: 2 size: DWORD  <||@
  Comment 638 640 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B67 -> B71 falseDestination: B67 -> B69  <||@
  Comment 644 block B69 null  <||@
  Comment 644 646 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 644 648 rdx|DWORD = DEC r8|DWORD size: DWORD  <||@
  Comment 649 650 CMP (x: r8|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 652 652 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B69 -> B71 falseDestination: B69 -> B82  <||@
  Comment 658 block B71 null  <||@
  Comment 658 658 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 658 660 rbx|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 661 662 r10|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 667 664 JUMP ~[] destination: B71 -> B72  <||@
  Comment 672 block B73 loop 3 depth 1 header:36|LoopBegin  <||@
  Comment 672 674 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 672 676 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 676 678 rcx|QWORD = LEA [rdx|QWORD + 24] size: QWORD  <||@
  Comment 680 680 CMP (x: rcx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 684 682 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B75  <||@
  Comment 690 block B75 loop 3 depth 1 header:36|LoopBegin  <||@
  Comment 690 724 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 690 726 MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD  <||@
  Comment 694 728 AMD64PREFETCH ~[rdx|QWORD + 216] instr: 0  <||@
  Comment 701 730 rdx|QWORD[*] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 701 732 JUMP ~[] destination: B75 -> B76  <||@
  Comment 701 block B76 loop 3 depth 1 header:36|LoopBegin  <||@
  Comment 701 734 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 701 736 rcx|QWORD[.] = MOVE rdx|QWORD[*] moveKind: QWORD  <||@
  Comment 704 738 rbp|QWORD = MOV [r14|QWORD + 168] size: QWORD  <||@
  Comment 711 740 MOV (x: [rdx|QWORD[*]], y: rbp|QWORD) size: QWORD  <||@
  Comment 714 742 MOV [rdx|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed}  <||@
  Comment 714 {meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed}}  <||@
  Comment 721 744 rbp|DWORD[.] = MOV [r9|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD  <||@
  Comment 726 746 MOV (x: [rdx|QWORD[*] + 12], y: rbp|DWORD[.]) size: DWORD  <||@
  Comment 729 748 MOV (x: [rdx|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 733 750 MOV (x: [rdx|QWORD[*] + 20], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 736 752 rdx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@74b0c02b encoding: base: 0 shift: 3  <||@
  Comment 743 754 MOV (x: [rbx|QWORD[.] + 16], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 746 756 rbx|QWORD[*] = SHR rbx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 750 758 MOVB (x: [rbx|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 754 760 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 757 762 rbx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 760 764 JUMP ~[] destination: B76 -> B72  <||@
  Comment 760 block B72 loop 3 depth 1 header:36|LoopBegin  <||@
  Comment 760 666 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 760 668 rax|DWORD[.] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@74b0c02b encoding: base: 0 shift: 3  <||@
  Comment 767 670 CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 770 672 BRANCH trueDestinationProbability: 0.8331923870416148 condition: > trueDestination: B72 -> B73 falseDestination: B72 -> B77  <||@
  Comment 777 block B74 loop 3 depth 1 header:36|LoopBegin  <||@
  Comment 777 684 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 777 686 stack:44|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD  <||@
  Comment 781 688 stack:80|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 786 690 stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 791 692 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 791 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 801 694 rbp|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 804 696 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 807 698 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 812 700 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 817 702 r13|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 820 704 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:68]  <||@
  Comment 820 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 825 [r13:0, stack:16, stack:24, stack:52, stack:64]at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 68, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4               |5                  |6             |7                  |8               |9               |10  |11  |12 
     locals:  |stack:32|QWORD[.]  |-  |-  |-  |stack:40|DWORD  |stack:80|QWORD[.]  |r13|QWORD[.]  |stack:72|QWORD[.]  |stack:40|DWORD  |stack:84|DWORD  |-   |-   |-    <||@
  Comment 826 706 rdx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 829 708 rax|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 833 710 rbx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 838 712 r10|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 843 714 rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 846 716 r11|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 851 718 r9|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 856 720 r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 861 722 JUMP ~[] destination: B74 -> B76  <||@
  Comment 866 block B77 null  <||@
  Comment 866 766 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 866 768 rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 869 770 rbx|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD  <||@
  Comment 871 772 JUMP ~[] destination: B77 -> B78  <||@
  Comment 871 block B78 null  <||@
  Comment 871 774 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 871 776 TEST (x: rsi|QWORD[.], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 874 778 BRANCH trueDestinationProbability: 0.8910276052257723 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B81  <||@
  Comment 880 block B79 null  <||@
  Comment 880 780 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 880 782 rsi|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD  <||@
  Comment 882 786 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 887 788 JUMP ~[] destination: B79 -> B80  <||@
  Comment 887 block B80 null  <||@
  Comment 887 790 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 887 792 MOV (x: [r13|QWORD[.] + 24], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 891 794 rax|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD  <||@
  Comment 898 796 MOVB (x: [rax|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 902 798 r10|DWORD = ADD (x: stack:36|DWORD, y: stack:40|DWORD) size: DWORD  <||@
  Comment 912 800 MOV (x: [r13|QWORD[.] + 16], y: r10|DWORD) size: DWORD  <||@
  Comment 916 802 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 921 804 rax|DWORD = ADD (x: rax|DWORD, ~y: [r13|QWORD[.] + 12]) size: DWORD  <||@
  Comment 925 806 MOV (x: [r13|QWORD[.] + 12], y: rax|DWORD) size: DWORD  <||@
  Comment 929 808 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 934 810 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 943 12  <||@
  Comment 953 block B29 null  <||@
  Comment 953 284 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 953 286 r11|QWORD[.] = LEA [r9|QWORD[.] + rsi|QWORD * 4 + 16] size: QWORD  <||@
  Comment 958 288 rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD  <||@
  Comment 961 290 rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 965 292 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 968 294 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B29 -> B30 falseDestination: B29 -> B31  <||@
  Comment 974 block B30 null  <||@
  Comment 974 296 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 974 298 rbx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 981 300 JUMP ~[] destination: B30 -> B34  <||@
  Comment 981 block B34 null  <||@
  Comment 981 324 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 981 326 rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD  <||@
  Comment 985 328 CMP (x: rbx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 988 330 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B34 -> B37 falseDestination: B34 -> B36  <||@
  Comment 994 block B36 null  <||@
  Comment 994 336 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 994 338 xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null>  <||@
  Comment 998 340 J (address: [r11|QWORD[.] + rbx|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 1004 342 rsi|QWORD = LEA [rbx|QWORD + 4] size: QWORD  <||@
  Comment 1008 344 rbx|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1011 346 JUMP ~[] destination: B36 -> B37  <||@
  Comment 1011 block B37 null  <||@
  Comment 1011 348 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1011 350 rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD  <||@
  Comment 1015 352 CMP (x: rbx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1018 354 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B37 -> B40 falseDestination: B37 -> B39  <||@
  Comment 1024 block B39 null  <||@
  Comment 1024 360 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1024 362 xmm0|V64_DWORD[..] = L oc: SIMD<null,null>  <||@
  Comment 1028 364 J (address: [r11|QWORD[.] + rbx|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 1034 366 rsi|QWORD = LEA [rbx|QWORD + 2] size: QWORD  <||@
  Comment 1038 368 rbx|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1041 370 JUMP ~[] destination: B39 -> B40  <||@
  Comment 1041 block B40 null  <||@
  Comment 1041 372 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1041 374 rdx|QWORD = DEC rdx|QWORD size: QWORD  <||@
  Comment 1044 376 CMP (x: rbx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1047 378 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B40 -> B45 falseDestination: B40 -> B42  <||@
  Comment 1053 block B42 null  <||@
  Comment 1053 384 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1053 386 MOV (x: [r11|QWORD[.] + rbx|QWORD * 4], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 1057 388 JUMP ~[] destination: B42 -> B45  <||@
  Comment 1062 block B65 null  <||@
  Comment 1062 616 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1062 618 MOV (x: [r13|QWORD[.] + 20], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 1066 620 rdx|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1073 622 MOVB (x: [rdx|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1077 624 JUMP ~[] destination: B65 -> B67  <||@
  Comment 1082 block B31 null  <||@
  Comment 1082 302 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1082 304 xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null>  <||@
  Comment 1086 306 rbx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1093 308 JUMP ~[] destination: B31 -> B32  <||@
  Comment 1093 block B32 loop 1 depth 1 header:938|LoopBegin  <||@
  Comment 1093 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1104 312 J (address: [r11|QWORD[.] + rbx|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 1110 314 rbx|QWORD = LEA [rbx|QWORD + 8] size: QWORD  <||@
  Comment 1114 316 CMP (x: rbx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1117 318 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B32 -> B34 falseDestination: B32 -> B32  <||@
  Comment 1124 block B17 loop 0 depth 1 header:883|LoopBegin  <||@
  Comment 1124 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1136 194 xmm0|V256_DWORD[........] = H [r11|QWORD[*] + rdi|QWORD * 4] nZ: YMM oh: VMOVDQU  <||@
  Comment 1142 196 J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 1147 198 rdi|QWORD = LEA [rdi|QWORD + 8] size: QWORD  <||@
  Comment 1151 200 CMP (x: rdi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1154 202 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B17 -> B19 falseDestination: B17 -> B17  <||@
  Comment 1161 block B51 null  <||@
  Comment 1161 460 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1161 462 rsi|DWORD = SAR r10|DWORD size: DWORD  <||@
  Comment 1166 464 CMP (x: rsi|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 1169 466 BRANCH trueDestinationProbability: 0.6958208146579323 condition: > trueDestination: B51 -> B52 falseDestination: B51 -> B55  <||@
  Comment 1175 block B52 null  <||@
  Comment 1175 468 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1175 470 CMP r14|DWORD y: 1 size: DWORD  <||@
  Comment 1179 472 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B54  <||@
  Comment 1185 block B53 null  <||@
  Comment 1185 474 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1185 476 rsi|DWORD[.] = MOV [r13|QWORD[.] + 20] size: DWORD  <||@
  Comment 1189 478 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@74b0c02b encoding: base: 0 shift: 3  <||@
  Comment 1193 480 JUMP ~[] destination: B53 -> B58  <||@
  Comment 1193 block B58 null  <||@
  Comment 1193 510 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1193 512 rbx|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD state [bci:0]  <||@
  Comment 1193 [rcx:0, rsi:0, r9:0, r13:0, stack:64]at java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2             |3  |4  |5  |6  |7  |8  |9  |10  |11  |12 
     locals:  |r13|QWORD[.]  |r14|DWORD  |rcx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-    <||@
  Comment 1193 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1196 514 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@74b0c02b encoding: base: 0 shift: 3  <||@
  Comment 1202 516 CMP r8|DWORD y: 1 size: DWORD  <||@
  Comment 1206 518 BRANCH trueDestinationProbability: 0.1668076129583852 condition: < trueDestination: B58 -> B78 falseDestination: B58 -> B60  <||@
  Comment 1212 block B60 null  <||@
  Comment 1212 524 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1212 526 rdx|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1215 528 JUMP ~[] destination: B60 -> B61  <||@
  Comment 1220 block B81 null  <||@
  Comment 1220 812 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1220 816 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1225 818 rax|DWORD[.] = COMPRESSPOINTER (input: rsi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@74b0c02b encoding: base: 0 shift: 3  <||@
  Comment 1232 820 MOV (x: [rdi|QWORD[.] + 16], y: rax|DWORD[.]) size: DWORD state [bci:131]  <||@
  Comment 1232 [rbx:0, rsi:0, rdi:0, r13:0]at java.util.LinkedList.addAll(LinkedList.java:432) [bci: 131, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4               |5             |6             |7  |8  |9  |10  |11  |12 
     locals:  |r13|QWORD[.]  |-  |-  |-  |stack:40|DWORD  |Object[null]  |rsi|QWORD[.]  |-  |-  |-  |-   |-   |-    <||@
  Comment 1232 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1235 822 rdi|QWORD[*] = SHR rdi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1239 824 MOVB (x: [rdi|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1243 826 MOV (x: [rsi|QWORD[.] + 20], y: rbx|DWORD[.]) size: DWORD  <||@
  Comment 1246 828 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1250 830 MOVB (x: [rsi|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1254 832 r10|DWORD = ADD (x: stack:36|DWORD, y: stack:40|DWORD) size: DWORD  <||@
  Comment 1264 834 MOV (x: [r13|QWORD[.] + 16], y: r10|DWORD) size: DWORD  <||@
  Comment 1268 836 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1273 838 rax|DWORD = ADD (x: rax|DWORD, ~y: [r13|QWORD[.] + 12]) size: DWORD  <||@
  Comment 1277 840 MOV (x: [r13|QWORD[.] + 12], y: rax|DWORD) size: DWORD  <||@
  Comment 1281 842 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1286 844 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1295 12  <||@
  Comment 1305 block B55 null  <||@
  Comment 1305 488 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1305 490 rsi|DWORD = DEC r10|DWORD size: DWORD  <||@
  Comment 1310 492 CMP (x: rsi|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 1313 494 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B57  <||@
  Comment 1319 block B57 null  <||@
  Comment 1319 502 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1319 504 rsi|DWORD[.] = MOV [r13|QWORD[.] + 24] size: DWORD  <||@
  Comment 1323 506 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@74b0c02b encoding: base: 0 shift: 3  <||@
  Comment 1327 508 JUMP ~[] destination: B57 -> B58  <||@
  Comment 1332 block B10 null  <||@
  Comment 1332 98 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1332 100 stack:44|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 1337 102 stack:56|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1342 104 r9|QWORD = UNCOMPRESSPOINTER (input: r9|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@74b0c02b encoding: base: 0 shift: 3  <||@
  Comment 1346 106 rsi|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 1349 108 rdx|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1353 110 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1358 112 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 1358 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1363 [r13:0, stack:40, stack:52, stack:64]at java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2                  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12 
     locals:  |r13|QWORD[.]  |r14|DWORD  |stack:56|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-    <||@
  Comment 1364 114 r9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1367 116 r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1372 118 r11|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 1377 120 r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1382 122 rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1387 124 JUMP ~[] destination: B10 -> B12  <||@
  Comment 1392 block B62 null  <||@
  Comment 1392 542 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1392 544 stack:44|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD  <||@
  Comment 1396 546 stack:80|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1401 548 stack:56|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1406 550 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1409 552 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1409 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1419 554 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 1424 556 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1429 558 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 1429 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1434 [r13:0, stack:16, stack:24, stack:40, stack:52, stack:64]at java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1          |2                  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:32|QWORD[.]  |r14|DWORD  |stack:56|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-    <||@
  Comment 1435 560 rcx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1438 562 rbx|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 1442 564 rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1445 566 rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1450 568 r11|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 1455 570 r9|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1460 572 r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1465 574 r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1470 576 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1475 578 JUMP ~[] destination: B62 -> B64  <||@
  Comment 1480 block B56 null  <||@
  Comment 1480 496 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1480 498 r10|DWORD = MOVE input: int[-79379|0xfffffffffffec9ed]  <||@
  Comment 1486 500 JUMP ~[] destination: B56 -> B86  <||@
  Comment 1486 block B86 null  <||@
  Comment 1486 880 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1486 882 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1493 884 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1500 886 DEOPT info [bci:0]  <||@
  Comment 1500 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1505 [rcx:0, r13:0]at java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2             |3  |4  |5  |6  |7  |8  |9  |10  |11  |12 
     locals:  |r13|QWORD[.]  |r14|DWORD  |rcx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-    <||@
  Comment 1506 block B6 null  <||@
  Comment 1506 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1506 60 r10|DWORD = MOVE input: int[-75027|0xfffffffffffedaed]  <||@
  Comment 1512 62 JUMP ~[] destination: B6 -> B86  <||@
  Comment 1514 block B4 null  <||@
  Comment 1514 38 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1514 40 r10|DWORD = MOVE input: int[-70675|0xfffffffffffeebed]  <||@
  Comment 1520 42 JUMP ~[] destination: B4 -> B86  <||@
  Comment 1522 block B2 null  <||@
  Comment 1522 22 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1522 24 r10|DWORD = MOVE input: int[-69651|0xfffffffffffeefed]  <||@
  Comment 1528 26 JUMP ~[] destination: B2 -> B86  <||@
  Comment 1530 block B85 null  <||@
  Comment 1530 874 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1530 876 r10|DWORD = MOVE input: int[-71219|0xfffffffffffee9cd]  <||@
  Comment 1536 878 JUMP ~[] destination: B85 -> B86  <||@
  Comment 1538 block B54 null  <||@
  Comment 1538 482 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1538 484 r10|DWORD = MOVE input: int[-78611|0xfffffffffffecced]  <||@
  Comment 1544 486 JUMP ~[] destination: B54 -> B86  <||@
  Comment 1546 block B82 null  <||@
  Comment 1546 846 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1546 848 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1549 850 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@198780052]  <||@
  Comment 1549 {Object[d.a@198780052]}  <||@
  Comment 1559 852 MOV [r15|QWORD + 668] y: -82203 size: DWORD  <||@
  Comment 1570 854 MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 1577 856 DEOPT info [bci:68]  <||@
  Comment 1577 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1582 [rdi:0, r9:0, r13:0, stack:64]at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 68, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4         |5             |6             |7            |8         |9           |10  |11  |12 
     locals:  |stack:32|QWORD[.]  |-  |-  |-  |r8|DWORD  |rdi|QWORD[.]  |r13|QWORD[.]  |r9|QWORD[.]  |r8|DWORD  |int[1|0x1]  |-   |-   |-    <||@
  Comment 1583 block B8 null  <||@
  Comment 1583 70 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1583 72 r10|DWORD = MOVE input: int[-132705|0xfffffffffffdf99f]  <||@
  Comment 1589 74 JUMP ~[] destination: B8 -> B86  <||@
  Comment 1591 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1591 4  <||@
  Comment 1597 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 1597 5  <||@
  HexCodeFile>>> <|@
end_nmethod
