begin_compilation
  name " HotSpotCompilation-9011[java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal)]"
  method "HotSpotCompilation-9011[java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal)]"
  date 1527005199585
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v108 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v108  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/lang/ThreadLocal$ThreadLocalMap;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v104 v56 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a Ljava/lang/ThreadLocal;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v103 v22 v56 v108 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ThreadLocal.java
sourceLine: 414
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - 
=== Succesors ===
=== Usages ===
v91 v108 i99 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a2 
=== Succesors ===
next: a98 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a2 #next: a98  <|@  <|@
f <@~|@floating>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a98 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a98 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ThreadLocal$ThreadLocalMap.table
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 5]
nullCheck: false
stamp: n# [Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
=== Inputs ===
stateBefore: - 
guard: - 
address: v104 
=== Succesors ===
next: i99 
=== Usages ===
a38 v105 
=== Predecessor ===
v108 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v104 #next: i99  <|@  <|@
f <@~|@floating>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a98 
=== Succesors ===
=== Usages ===
i99 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a98  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i99 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 8]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v105 
=== Succesors ===
next: i100 
=== Usages ===
i9 v45 
=== Predecessor ===
a98 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v105 #next: i100  <|@  <|@
f <@~|@floating>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i100 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i100 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ThreadLocal.threadLocalHashCode
nodeSourcePosition: at java.lang.ThreadLocal.access$400(ThreadLocal.java:74) [bci: 1]
at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v103 
=== Succesors ===
next: v79 
=== Usages ===
i10 
=== Predecessor ===
i99 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v103 #next: v79  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 10]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i9 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 10]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i99 
y: i8 
=== Succesors ===
=== Usages ===
i10 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i99 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 11]
stamp: i32
=== Inputs ===
x: i9 
y: i100 
=== Succesors ===
=== Usages ===
v106 v56 v45 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i9 y: i100  <|@  <|@
f <@~|@floating>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:415) [bci: 18]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i10 
y: i99 
=== Succesors ===
=== Usages ===
v79 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i10 y: i99  <|@  <|@
f <@*|@fixed>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:415) [bci: 18]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v45 
=== Succesors ===
trueSuccessor: v76 
falseSuccessor: v78 
=== Usages ===
=== Predecessor ===
i100 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v45 #trueSuccessor: v76 #falseSuccessor: v78  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:415) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: a101 
=== Usages ===
a101 
=== Predecessor ===
v79 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a101  <|@  <|@
f <@~|@floating>@ <|@
tid a38 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 5]
op: Uncompress
stamp: a# [Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
=== Inputs ===
value: a98 
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a98  <|@  <|@
f <@~|@floating>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a38 
index: i10 
=== Succesors ===
=== Usages ===
a101 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a38 index: i10  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a101 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:415) [bci: 18]
nullCheck: false
stamp: n# Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
=== Inputs ===
stateBefore: - 
guard: v76 
address: v106 
=== Succesors ===
next: v17 
=== Usages ===
a55 v62 v107 
=== Predecessor ===
v76 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v76 address: v106 #next: v17  <|@  <|@
f <@~|@floating>@ <|@
tid a55 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:415) [bci: 18]
op: Uncompress
stamp: a# Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
=== Inputs ===
value: a101 
=== Succesors ===
=== Usages ===
v56 v24 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a101  <|@  <|@
f <@~|@floating>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 21]
stamp: void
=== Inputs ===
value: a101 
=== Succesors ===
=== Usages ===
v17 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a101  <|@  <|@
f <@*|@fixed>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 21]
stamp: void
trueSuccessorProbability: 1.3646055437100213E-4
=== Inputs ===
condition: v62 
=== Succesors ===
trueSuccessor: v15 
falseSuccessor: v16 
=== Usages ===
=== Predecessor ===
a101 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v62 #trueSuccessor: v15 #falseSuccessor: v16  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4549166529862107271
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: a26 
=== Usages ===
=== Predecessor ===
v17 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a26  <|@  <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 38]
returnStamp: a# Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
signature: [Ljdk.vm.ci.meta.JavaType;@3b26eb77
stamp: void
targetMethod: HotSpotMethod<ThreadLocal$ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry)>
=== Inputs ===
arguments: a1 a2 i10 a55 
=== Succesors ===
=== Usages ===
a26 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a2 i10 a55  <|@  <|@
tid ?84 <|@
d <@d|@=== Debug Properties ===
bci: 38
code: ResolvedJavaMethodBytecode<ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ThreadLocal.java
sourceLine: 419
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - 
=== Succesors ===
=== Usages ===
a26 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a26 <|@
d <@d|@=== Debug Properties ===
bci: 38
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 38]
polymorphic: false
stamp: a# Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
targetMethod: Direct#ThreadLocal$ThreadLocalMap.getEntryAfterMiss
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v56 
stateDuring: ?84 
=== Succesors ===
next: v28 
=== Usages ===
v28 
=== Predecessor ===
v15 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v56 stateDuring: ?84 #next: v28  <|@  <|@
f <@*|@fixed>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 41]
stamp: void
=== Inputs ===
result: a26 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a26 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a26 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607181189672613776
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: a102 
=== Usages ===
=== Predecessor ===
v17 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a102  <|@  <|@
f <@~|@floating>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a101 
=== Succesors ===
=== Usages ===
a102 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a101  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a102 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Reference.referent
nodeSourcePosition: at java.lang.ref.Reference.get(Reference.java:254) [bci: 1]
at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 25]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v107 
=== Succesors ===
next: v83 
=== Usages ===
a59 
=== Predecessor ===
v16 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v107 #next: v83  <|@  <|@
f <@~|@floating>@ <|@
tid a59 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ref.Reference.get(Reference.java:254) [bci: 1]
at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 25]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a102 
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a102  <|@  <|@
f <@~|@floating>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 29]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2 
y: a59 
=== Succesors ===
=== Usages ===
v83 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a2 y: a59  <|@  <|@
f <@*|@fixed>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 29]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v22 
=== Succesors ===
trueSuccessor: v80 
falseSuccessor: v82 
=== Usages ===
=== Predecessor ===
a102 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v22 #trueSuccessor: v80 #falseSuccessor: v82  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4607181189672613776
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v21 
=== Usages ===
=== Predecessor ===
v83 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v21  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: Reference.referent
nodeSourcePosition: at java.lang.ref.Reference.get(Reference.java:254) [bci: 1]
at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v24 
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v24  <|@  <|@
f <@*|@fixed>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:417) [bci: 33]
stamp: void
=== Inputs ===
result: a55 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a55 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v96 
=== Usages ===
=== Predecessor ===
v83 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v96  <|@  <|@
f <@~|@floating>@ <|@
tid i97 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -15379
stableDimension: 0
stamp: i32 [-15379] ⇊00000000ffffc3ed ⇈00000000ffffc3ed
stampKind: i32
value: int[-15379|0xffffffffffffc3ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i89 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v85 
=== Predecessor ===
v82 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:415) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v94 
=== Usages ===
=== Predecessor ===
v79 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v94  <|@  <|@
f <@~|@floating>@ <|@
tid i95 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -11803
stableDimension: 0
stamp: i32 [-11803] ⇊00000000ffffd1e5 ⇈00000000ffffd1e5
stampKind: i32
value: int[-11803|0xffffffffffffd1e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i89 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v85 
=== Predecessor ===
v78 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i89 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-15379 - -7691] ⇊00000000ffffc1e5 ⇈00000000fffff7fd
valueDescription: i32
=== Inputs ===
merge: v85 
values: i95 i97 
=== Succesors ===
=== Usages ===
v91 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v85 values: i95 i97  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v94 v96 
=== Succesors ===
next: v91 
=== Usages ===
i89 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v94 v96 #next: v91  <|@  <|@
f <@~|@floating>@ <|@
tid a88 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v91 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i89 
speculation: a88 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v85 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i89 speculation: a88  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v108 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v108  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/lang/ThreadLocal$ThreadLocalMap;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v104 v56 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a Ljava/lang/ThreadLocal;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v103 v22 v56 v108 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ThreadLocal.java
sourceLine: 414
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - 
=== Succesors ===
=== Usages ===
v91 v108 i99 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a2 
=== Succesors ===
next: a98 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a2 #next: a98  <|@  <|@
f <@~|@floating>@ <|@
tid v104 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a98 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a98 <|@
result v2|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ThreadLocal$ThreadLocalMap.table
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 5]
nullCheck: false
stamp: n# [Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
=== Inputs ===
stateBefore: - 
guard: - 
address: v104 
=== Succesors ===
next: i99 
=== Usages ===
a38 v105 
=== Predecessor ===
v108 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v104 #next: i99  <|@  <|@
f <@~|@floating>@ <|@
tid v105 <|@
result [v2|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a98 
=== Succesors ===
=== Usages ===
i99 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a98  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i99 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 8]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v105 
=== Succesors ===
next: i100 
=== Usages ===
i9 v45 
=== Predecessor ===
a98 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v105 #next: i100  <|@  <|@
f <@~|@floating>@ <|@
tid v103 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i100 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i100 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ThreadLocal.threadLocalHashCode
nodeSourcePosition: at java.lang.ThreadLocal.access$400(ThreadLocal.java:74) [bci: 1]
at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v103 
=== Succesors ===
next: v79 
=== Usages ===
i10 
=== Predecessor ===
i99 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v103 #next: v79  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 10]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i9 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 10]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i99 
y: i8 
=== Succesors ===
=== Usages ===
i10 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i99 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 11]
stamp: i32
=== Inputs ===
x: i9 
y: i100 
=== Succesors ===
=== Usages ===
v106 v56 v45 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i9 y: i100  <|@  <|@
f <@~|@floating>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:415) [bci: 18]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i10 
y: i99 
=== Succesors ===
=== Usages ===
v79 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i10 y: i99  <|@  <|@
f <@*|@fixed>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:415) [bci: 18]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v45 
=== Succesors ===
trueSuccessor: v76 
falseSuccessor: v78 
=== Usages ===
=== Predecessor ===
i100 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v45 #trueSuccessor: v76 #falseSuccessor: v78  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2e279db0 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v3|DWORD = MOV [v2|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = DEC v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = AND (x: v4|DWORD, ~y: [v1|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:415) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: a101 
=== Usages ===
a101 
=== Predecessor ===
v79 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a101  <|@  <|@
f <@~|@floating>@ <|@
tid a38 <|@
result v6|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 5]
op: Uncompress
stamp: a# [Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
=== Inputs ===
value: a98 
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a98  <|@  <|@
f <@~|@floating>@ <|@
tid v106 <|@
result [v6|QWORD[.] + v5|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a38 
index: i10 
=== Succesors ===
=== Usages ===
a101 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a38 index: i10  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a101 <|@
result v7|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:415) [bci: 18]
nullCheck: false
stamp: n# Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
=== Inputs ===
stateBefore: - 
guard: v76 
address: v106 
=== Succesors ===
next: v17 
=== Usages ===
a55 v62 v107 
=== Predecessor ===
v76 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v76 address: v106 #next: v17  <|@  <|@
f <@~|@floating>@ <|@
tid a55 <|@
result v8|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:415) [bci: 18]
op: Uncompress
stamp: a# Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
=== Inputs ===
value: a101 
=== Succesors ===
=== Usages ===
v56 v24 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a101  <|@  <|@
f <@~|@floating>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 21]
stamp: void
=== Inputs ===
value: a101 
=== Succesors ===
=== Usages ===
v17 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a101  <|@  <|@
f <@*|@fixed>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 21]
stamp: void
trueSuccessorProbability: 1.3646055437100213E-4
=== Inputs ===
condition: v62 
=== Succesors ===
trueSuccessor: v15 
falseSuccessor: v16 
=== Usages ===
=== Predecessor ===
a101 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v62 #trueSuccessor: v15 #falseSuccessor: v16  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2b17285f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[.] = MOV [v6|QWORD[.] + v5|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2b17285f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v7|DWORD[.], y: v7|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.3646055437100213E-4 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4549166529862107271
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: a26 
=== Usages ===
=== Predecessor ===
v17 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a26  <|@  <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 38]
returnStamp: a# Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
signature: [Ljdk.vm.ci.meta.JavaType;@3b26eb77
stamp: void
targetMethod: HotSpotMethod<ThreadLocal$ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry)>
=== Inputs ===
arguments: a1 a2 i10 a55 
=== Succesors ===
=== Usages ===
a26 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a2 i10 a55  <|@  <|@
tid ?84 <|@
d <@d|@=== Debug Properties ===
bci: 38
code: ResolvedJavaMethodBytecode<ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ThreadLocal.java
sourceLine: 419
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - 
=== Succesors ===
=== Usages ===
a26 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a26 <|@
result v9|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 38
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 38]
polymorphic: false
stamp: a# Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
targetMethod: Direct#ThreadLocal$ThreadLocalMap.getEntryAfterMiss
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v56 
stateDuring: ?84 
=== Succesors ===
next: v28 
=== Usages ===
v28 
=== Predecessor ===
v15 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v56 stateDuring: ?84 #next: v28  <|@  <|@
f <@*|@fixed>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 41]
stamp: void
=== Inputs ===
result: a26 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a26 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a26 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 38]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:38] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607181189672613776
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: a102 
=== Usages ===
=== Predecessor ===
v17 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a102  <|@  <|@
f <@~|@floating>@ <|@
tid v107 <|@
result [v7|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a101 
=== Succesors ===
=== Usages ===
a102 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a101  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a102 <|@
result v10|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Reference.referent
nodeSourcePosition: at java.lang.ref.Reference.get(Reference.java:254) [bci: 1]
at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 25]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v107 
=== Succesors ===
next: v83 
=== Usages ===
a59 
=== Predecessor ===
v16 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v107 #next: v83  <|@  <|@
f <@~|@floating>@ <|@
tid a59 <|@
result v11|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ref.Reference.get(Reference.java:254) [bci: 1]
at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 25]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a102 
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a102  <|@  <|@
f <@~|@floating>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 29]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2 
y: a59 
=== Succesors ===
=== Usages ===
v83 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a2 y: a59  <|@  <|@
f <@*|@fixed>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 29]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v22 
=== Succesors ===
trueSuccessor: v80 
falseSuccessor: v82 
=== Usages ===
=== Predecessor ===
a102 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v22 #trueSuccessor: v80 #falseSuccessor: v82  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[.] = MOV [v7|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2b17285f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4607181189672613776
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v21 
=== Usages ===
=== Predecessor ===
v83 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v21  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: Reference.referent
nodeSourcePosition: at java.lang.ref.Reference.get(Reference.java:254) [bci: 1]
at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v24 
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v24  <|@  <|@
f <@*|@fixed>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:417) [bci: 33]
stamp: void
=== Inputs ===
result: a55 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a55 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v96 
=== Usages ===
=== Predecessor ===
v83 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v96  <|@  <|@
f <@~|@floating>@ <|@
tid i97 <|@
result int[-15379|0xffffffffffffc3ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -15379
stableDimension: 0
stamp: i32 [-15379] ⇊00000000ffffc3ed ⇈00000000ffffc3ed
stampKind: i32
value: int[-15379|0xffffffffffffc3ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i89 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v85 
=== Predecessor ===
v82 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-15379|0xffffffffffffc3ed]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:415) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v94 
=== Usages ===
=== Predecessor ===
v79 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v94  <|@  <|@
f <@~|@floating>@ <|@
tid i95 <|@
result int[-11803|0xffffffffffffd1e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -11803
stableDimension: 0
stamp: i32 [-11803] ⇊00000000ffffd1e5 ⇈00000000ffffd1e5
stampKind: i32
value: int[-11803|0xffffffffffffd1e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i89 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v85 
=== Predecessor ===
v78 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-11803|0xffffffffffffd1e5]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i89 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-15379 - -7691] ⇊00000000ffffc1e5 ⇈00000000fffff7fd
valueDescription: i32
=== Inputs ===
merge: v85 
values: i95 i97 
=== Succesors ===
=== Usages ===
v91 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v85 values: i95 i97  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v94 v96 
=== Succesors ===
next: v91 
=== Usages ===
i89 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v94 v96 #next: v91  <|@  <|@
f <@~|@floating>@ <|@
tid a88 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v91 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i89 
speculation: a88 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v85 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i89 speculation: a88  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v12|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2e279db0 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v3|DWORD = MOV [v2|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = DEC v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = AND (x: v4|DWORD, ~y: [v1|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2b17285f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[.] = MOV [v6|QWORD[.] + v5|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2b17285f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v7|DWORD[.], y: v7|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.3646055437100213E-4 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607181189672613776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[.] = MOV [v7|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2b17285f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4607181189672613776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4549166529862107271
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 38]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:38] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-11803|0xffffffffffffd1e5]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v12|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-15379|0xffffffffffffc3ed]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokestatic  #8          // java.lang.ThreadLocal.access$400:(java.lang.ThreadLocal)int
     4: aload_0       
     5: getfield      #7          // table:java.lang.ThreadLocal$ThreadLocalMap$Entry[]
     8: arraylength   
     9: iconst_1      
    10: isub          
    11: iand          
    12: istore_2      
    13: aload_0       
    14: getfield      #7          // table:java.lang.ThreadLocal$ThreadLocalMap$Entry[]
    17: iload_2       
    18: aaload        
    19: astore_3      
    20: aload_3       
    21: ifnull        34
    24: aload_3       
    25: invokevirtual #11         // java.lang.ref.Reference.get:()java.lang.Object
    28: aload_1       
    29: if_acmpne     34
    32: aload_3       
    33: areturn       
    34: aload_0       
    35: aload_1       
    36: iload_2       
    37: aload_3       
    38: invokespecial #15         // getEntryAfterMiss:(java.lang.ThreadLocal, int, java.lang.ThreadLocal$ThreadLocalMap$Entry)java.lang.ThreadLocal$ThreadLocalMap$Entry
    41: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2e279db0 slotKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   12  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   14  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0]
live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction rcx|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   16  <|@ instruction r8|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr   18  <|@ instruction r8|DWORD = AND (x: r8|DWORD, ~y: [rdx|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   20  <|@ instruction CMP (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   22  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2b17285f encoding: base: 0 shift: 3 <|@ <|@
      nr   28  <|@ instruction rax|DWORD[.] = MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   30  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2b17285f encoding: base: 0 shift: 3 <|@ <|@
      nr   32  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr   34  <|@ instruction BRANCH trueDestinationProbability: 1.3646055437100213E-4 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607181189672613776
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction rax|DWORD[.] = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   40  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2b17285f encoding: base: 0 shift: 3 <|@ <|@
      nr   42  <|@ instruction CMP (x: rax|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr   44  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4607181189672613776
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4549166529862107271
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 38]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:38] <|@ <|@
      nr   68  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-11803|0xffffffffffffd1e5] // MoveResolver resolve mapping <|@ <|@
      nr   72  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   80  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   84  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-15379|0xffffffffffffc3ed] // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokestatic  #8          // java.lang.ThreadLocal.access$400:(java.lang.ThreadLocal)int
     4: aload_0       
     5: getfield      #7          // table:java.lang.ThreadLocal$ThreadLocalMap$Entry[]
     8: arraylength   
     9: iconst_1      
    10: isub          
    11: iand          
    12: istore_2      
    13: aload_0       
    14: getfield      #7          // table:java.lang.ThreadLocal$ThreadLocalMap$Entry[]
    17: iload_2       
    18: aaload        
    19: astore_3      
    20: aload_3       
    21: ifnull        34
    24: aload_3       
    25: invokevirtual #11         // java.lang.ref.Reference.get:()java.lang.Object
    28: aload_1       
    29: if_acmpne     34
    32: aload_3       
    33: areturn       
    34: aload_0       
    35: aload_1       
    36: iload_2       
    37: aload_3       
    38: invokespecial #15         // getEntryAfterMiss:(java.lang.ThreadLocal, int, java.lang.ThreadLocal$ThreadLocalMap$Entry)java.lang.ThreadLocal$ThreadLocalMap$Entry
    41: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2e279db0 slotKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   12  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   14  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0]
live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction rcx|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   16  <|@ instruction r8|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr   18  <|@ instruction r8|DWORD = AND (x: r8|DWORD, ~y: [rdx|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   20  <|@ instruction CMP (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   22  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2b17285f encoding: base: 0 shift: 3 <|@ <|@
      nr   28  <|@ instruction rax|DWORD[.] = MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   30  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2b17285f encoding: base: 0 shift: 3 <|@ <|@
      nr   32  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr   34  <|@ instruction BRANCH trueDestinationProbability: 1.3646055437100213E-4 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607181189672613776
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction rax|DWORD[.] = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   40  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2b17285f encoding: base: 0 shift: 3 <|@ <|@
      nr   42  <|@ instruction CMP (x: rax|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr   44  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4607181189672613776
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4549166529862107271
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 38]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:38] <|@ <|@
      nr   68  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-11803|0xffffffffffffd1e5] // MoveResolver resolve mapping <|@ <|@
      nr   72  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   80  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   84  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-15379|0xffffffffffffc3ed] // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokestatic  #8          // java.lang.ThreadLocal.access$400:(java.lang.ThreadLocal)int
     4: aload_0       
     5: getfield      #7          // table:java.lang.ThreadLocal$ThreadLocalMap$Entry[]
     8: arraylength   
     9: iconst_1      
    10: isub          
    11: iand          
    12: istore_2      
    13: aload_0       
    14: getfield      #7          // table:java.lang.ThreadLocal$ThreadLocalMap$Entry[]
    17: iload_2       
    18: aaload        
    19: astore_3      
    20: aload_3       
    21: ifnull        34
    24: aload_3       
    25: invokevirtual #11         // java.lang.ref.Reference.get:()java.lang.Object
    28: aload_1       
    29: if_acmpne     34
    32: aload_3       
    33: areturn       
    34: aload_0       
    35: aload_1       
    36: iload_2       
    37: aload_3       
    38: invokespecial #15         // getEntryAfterMiss:(java.lang.ThreadLocal, int, java.lang.ThreadLocal$ThreadLocalMap$Entry)java.lang.ThreadLocal$ThreadLocalMap$Entry
    41: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c241085028b46148b0cc50c000000448bc141ffc84423420c413bc80f866100000048c1e003428b448010448bd049c1e20385c00f842a0000008b04c50c00000048c1e003483bc20f854f000000498bc2488b6c24104883c418850500000000c5f877c3418bc84d8bc2e80000000090488b6c24104883c418850500000000c5f877c341bae5d1ffff4589979c0200004d89a7a8020000e8000000009041baedc3ffffebe4e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2e279db0 slotKind: QWORD  <||@
  Comment 48 10 NULLCHECK [rdx|QWORD[.]] state [bci:0]  <||@
  Comment 48 [rdx:0, rsi:0]at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-   <||@
  Comment 48 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 50 12 rax|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 53 14 rcx|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 53 [rax:0, rdx:0, rsi:0]at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-   <||@
  Comment 53 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 60 16 r8|DWORD = DEC rcx|DWORD size: DWORD  <||@
  Comment 66 18 r8|DWORD = AND (x: r8|DWORD, ~y: [rdx|QWORD[.] + 12]) size: DWORD  <||@
  Comment 70 20 CMP (x: rcx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 73 22 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B6  <||@
  Comment 79 block B1 null  <||@
  Comment 79 24 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 79 26 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2b17285f encoding: base: 0 shift: 3  <||@
  Comment 83 28 rax|DWORD[.] = MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD  <||@
  Comment 88 30 r10|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2b17285f encoding: base: 0 shift: 3  <||@
  Comment 95 32 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 97 34 BRANCH trueDestinationProbability: 1.3646055437100213E-4 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 103 block B3 null  <||@
  Comment 103 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 103 38 rax|DWORD[.] = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 110 40 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2b17285f encoding: base: 0 shift: 3  <||@
  Comment 114 42 CMP (x: rax|QWORD[.], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 117 44 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 123 block B4 null  <||@
  Comment 123 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 123 48 rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 126 50 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 135 12  <||@
  Comment 145 block B2 null  <||@
  Comment 145 52 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 145 58 rcx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 148 60 r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 151 62 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:38]  <||@
  Comment 151 {HotSpotMethod<ThreadLocal$ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry)>}  <||@
  Comment 151 9  <||@
  Comment 156 []at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 38, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 157 68 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 166 12  <||@
  Comment 176 block B6 null  <||@
  Comment 176 70 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 176 -1 r10|DWORD = MOVE input: int[-11803|0xffffffffffffd1e5]  <||@
  Comment 182 72 JUMP ~[] destination: B6 -> B7  <||@
  Comment 182 block B7 null  <||@
  Comment 182 78 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 182 80 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 189 82 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 196 84 DEOPT info [bci:0]  <||@
  Comment 196 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 201 [rdx:0, rsi:0]at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-   <||@
  Comment 202 block B5 null  <||@
  Comment 202 74 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 202 -1 r10|DWORD = MOVE input: int[-15379|0xffffffffffffc3ed]  <||@
  Comment 208 76 JUMP ~[] destination: B5 -> B7  <||@
  Comment 210 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 210 4  <||@
  Comment 216 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 216 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9011[java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal)]"
  method "HotSpotCompilation-9011[java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal)]"
  date 1527005199641
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 106c54700 448b560849c1e203493bc20f854f17bbff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c241085028b46148b0cc50c000000448bc141ffc84423420c413bc80f866100000048c1e003428b448010448bd049c1e20385c00f842a0000008b04c50c00000048c1e003483bc20f854f000000498bc2488b6c24104883c418850579a8c3fdc5f877c3418bc84d8bc2e80419bbff90488b6c24104883c41885055aa8c3fdc5f877c341bae5d1ffff4589979c0200004d89a7a8020000e8352ebbff9041baedc3ffffebe4e8495effff90e8232dbbff90f4f448bb0000000000000000e9fbfffffff4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2e279db0 slotKind: QWORD  <||@
  Comment 48 10 NULLCHECK [rdx|QWORD[.]] state [bci:0]  <||@
  Comment 48 [rdx:0, rsi:0]at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-   <||@
  Comment 48 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 50 12 rax|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 53 14 rcx|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 53 [rax:0, rdx:0, rsi:0]at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-   <||@
  Comment 53 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 60 16 r8|DWORD = DEC rcx|DWORD size: DWORD  <||@
  Comment 66 18 r8|DWORD = AND (x: r8|DWORD, ~y: [rdx|QWORD[.] + 12]) size: DWORD  <||@
  Comment 70 20 CMP (x: rcx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 73 22 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B6  <||@
  Comment 79 block B1 null  <||@
  Comment 79 24 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 79 26 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2b17285f encoding: base: 0 shift: 3  <||@
  Comment 83 28 rax|DWORD[.] = MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD  <||@
  Comment 88 30 r10|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2b17285f encoding: base: 0 shift: 3  <||@
  Comment 95 32 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 97 34 BRANCH trueDestinationProbability: 1.3646055437100213E-4 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 103 block B3 null  <||@
  Comment 103 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 103 38 rax|DWORD[.] = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 110 40 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2b17285f encoding: base: 0 shift: 3  <||@
  Comment 114 42 CMP (x: rax|QWORD[.], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 117 44 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 123 block B4 null  <||@
  Comment 123 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 123 48 rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 126 50 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 135 12  <||@
  Comment 145 block B2 null  <||@
  Comment 145 52 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 145 58 rcx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 148 60 r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 151 62 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:38]  <||@
  Comment 151 {HotSpotMethod<ThreadLocal$ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry)>}  <||@
  Comment 151 9  <||@
  Comment 156 []at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 38, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 157 68 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 166 12  <||@
  Comment 176 block B6 null  <||@
  Comment 176 70 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 176 -1 r10|DWORD = MOVE input: int[-11803|0xffffffffffffd1e5]  <||@
  Comment 182 72 JUMP ~[] destination: B6 -> B7  <||@
  Comment 182 block B7 null  <||@
  Comment 182 78 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 182 80 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 189 82 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 196 84 DEOPT info [bci:0]  <||@
  Comment 196 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 201 [rdx:0, rsi:0]at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-   <||@
  Comment 202 block B5 null  <||@
  Comment 202 74 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 202 -1 r10|DWORD = MOVE input: int[-15379|0xffffffffffffc3ed]  <||@
  Comment 208 76 JUMP ~[] destination: B5 -> B7  <||@
  Comment 210 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 210 4  <||@
  Comment 216 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 216 5  <||@
  HexCodeFile>>> <|@
end_nmethod
