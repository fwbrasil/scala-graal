begin_compilation
  name " HotSpotCompilation-8716[sun.nio.cs.UTF_8.newEncoder()]"
  method "HotSpotCompilation-8716[sun.nio.cs.UTF_8.newEncoder()]"
  date 1527005196433
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v163 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v163  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: ANY_LOCATION
nodeSourcePosition: at java.nio.charset.Charset.atBugLevel(Charset.java:280) [bci: 0]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: a483 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a483  <|@  <|@
f <@~|@floating>@ <|@
tid a158 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.charset.Charset.atBugLevel(Charset.java:280) [bci: 0]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
rawvalue: Class:java.nio.charset.Charset
stableDimension: 0
stamp: a!# Ljava/lang/Class;
stampKind: a -
value: Object[Class:java.nio.charset.Charset]
=== Inputs ===
=== Succesors ===
=== Usages ===
v486 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
displacement: 104
scale: Times1
stamp: void*
=== Inputs ===
base: a158 
index: - 
=== Succesors ===
=== Usages ===
a483 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a158 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a483 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Charset.bugLevel
nodeSourcePosition: at java.nio.charset.Charset.atBugLevel(Charset.java:280) [bci: 0]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
nullCheck: false
stamp: n# Ljava/lang/String;
=== Inputs ===
stateBefore: - 
guard: - 
address: v486 
=== Succesors ===
next: v534 
=== Usages ===
v533 v534 v487 
=== Predecessor ===
v163 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v486 #next: v534  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lsun/nio/cs/UTF_8;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 a209 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<UTF_8.newEncoder()>
duringCall: false
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 72
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v253 a276 a369 v534 i485 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
object: a483 
=== Succesors ===
next: v189 
=== Usages ===
=== Predecessor ===
a483 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?2 object: a483 #next: v189  <|@  <|@
f <@~|@floating>@ <|@
tid a532 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:43) [bci: 2]
at java.nio.charset.Charset.atBugLevel(Charset.java:287) [bci: 40]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
rawvalue: "1.4"
stableDimension: 0
stamp: n!# Ljava/lang/String;
stampKind: n -
value: NarrowOop[String:"1.4"]
=== Inputs ===
=== Succesors ===
=== Usages ===
v533 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:43) [bci: 2]
at java.nio.charset.Charset.atBugLevel(Charset.java:287) [bci: 40]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a483 
y: a532 
=== Succesors ===
=== Usages ===
v189 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a483 y: a532  <|@  <|@
f <@*|@fixed>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:43) [bci: 2]
at java.nio.charset.Charset.atBugLevel(Charset.java:287) [bci: 40]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v533 
=== Succesors ===
trueSuccessor: v188 
falseSuccessor: v186 
=== Usages ===
=== Predecessor ===
v534 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v533 #trueSuccessor: v188 #falseSuccessor: v186  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:43) [bci: 2]
at java.nio.charset.Charset.atBugLevel(Charset.java:287) [bci: 40]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v254 
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v254  <|@  <|@
f <@~|@floating>@ <|@
tid i255 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -42515
stableDimension: 0
stamp: i32 [-42515] ⇊00000000ffff59ed ⇈00000000ffff59ed
stampKind: i32
value: int[-42515|0xffffffffffff59ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i251 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v247 
=== Predecessor ===
v188 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:43) [bci: 2]
at java.nio.charset.Charset.atBugLevel(Charset.java:287) [bci: 40]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v164 
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v164  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
barriers: 3
location: ANY_LOCATION
nodeSourcePosition: at java.nio.charset.Charset.atBugLevel(Charset.java:280) [bci: 0]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: a484 
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a484  <|@  <|@
f <@~|@floating>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a483 
=== Succesors ===
=== Usages ===
a484 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a483  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a484 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.nio.charset.Charset.atBugLevel(Charset.java:287) [bci: 40]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v487 
=== Succesors ===
next: i485 
=== Usages ===
a170 v488 
=== Predecessor ===
v164 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v487 #next: i485  <|@  <|@
f <@~|@floating>@ <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a484 
=== Succesors ===
=== Usages ===
i485 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a484  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i485 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.nio.charset.Charset.atBugLevel(Charset.java:287) [bci: 40]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v488 
=== Succesors ===
next: v80 
=== Usages ===
v77 
=== Predecessor ===
a484 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v488 #next: v80  <|@  <|@
f <@~|@floating>@ <|@
tid i95 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.nio.charset.Charset.atBugLevel(Charset.java:287) [bci: 40]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
v77 i89 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 29]
at java.nio.charset.Charset.atBugLevel(Charset.java:287) [bci: 40]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i485 
y: i95 
=== Succesors ===
=== Usages ===
v80 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i485 y: i95  <|@  <|@
f <@~|@floating>@ <|@
tid i242 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 63
stableDimension: 0
stamp: i8 [63] ⇊000000000000003f ⇈000000000000003f
stampKind: i8
value: byte[63|0x3f]
=== Inputs ===
=== Succesors ===
=== Usages ===
v236 v219 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[B, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[B, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v355 v427 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j347 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v352 v424 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i339 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 63
stableDimension: 0
stamp: i8
stampKind: i8
value: byte[63|0x3f]
=== Inputs ===
=== Succesors ===
=== Usages ===
v342 v417 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a240 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: CodingErrorAction@250144264
stableDimension: 0
stamp: n!# Ljava/nio/charset/CodingErrorAction;
stampKind: n -
value: NarrowOop[CodingErrorAction@250144264]
=== Inputs ===
=== Succesors ===
=== Usages ===
v335 v332 v411 v413 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a209 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n!# Lsun/nio/cs/UTF_8;
=== Inputs ===
value: a1 
=== Succesors ===
=== Usages ===
v326 v407 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1  <|@  <|@
f <@~|@floating>@ <|@
tid j318 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4629700418003061965
stableDimension: 0
stamp: i64 [4629700418003061965] ⇊404000003f8ccccd ⇈404000003f8ccccd
stampKind: i64
value: long[4629700418003061965|0x404000003f8ccccd]
=== Inputs ===
=== Succesors ===
=== Usages ===
v320 v403 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v315 v399 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j391 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j391 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v304 
=== Succesors ===
=== Usages ===
v497 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v304  <|@  <|@
f <@~|@floating>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j391 
index: - 
=== Succesors ===
=== Usages ===
j395 j310 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j391 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j203 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 56
stableDimension: 0
stamp: i64 [56] ⇊0000000000000038 ⇈0000000000000038
stampKind: i64
value: long[56|0x38]
=== Inputs ===
=== Succesors ===
=== Usages ===
j204 j227 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i206 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v423 a369 a276 v351 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i433 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 16
stableDimension: 0
stamp: i32 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
a276 a369 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a276 a369 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j430 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 80
stableDimension: 0
stamp: i64 [80] ⇊0000000000000050 ⇈0000000000000050
stampKind: i64
value: long[80|0x50]
=== Inputs ===
=== Succesors ===
=== Usages ===
j431 j459 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i14 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 8]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v419 v345 v42 v323 v338 v405 v415 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 29]
at java.nio.charset.Charset.atBugLevel(Charset.java:287) [bci: 40]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v77 
=== Succesors ===
trueSuccessor: v78 
falseSuccessor: v79 
=== Usages ===
=== Predecessor ===
i485 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v77 #trueSuccessor: v78 #falseSuccessor: v79  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:53) [bci: 34]
at java.nio.charset.Charset.atBugLevel(Charset.java:287) [bci: 40]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: i89 
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i89  <|@  <|@
f <@~|@floating>@ <|@
tid a170 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.nio.charset.Charset.atBugLevel(Charset.java:287) [bci: 40]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a484 
=== Succesors ===
=== Usages ===
i89 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a484  <|@  <|@
f <@~|@floating>@ <|@
tid a94 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.getValue(String) [bci: -1]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:58) [bci: 49]
at java.nio.charset.Charset.atBugLevel(Charset.java:287) [bci: 40]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
rawvalue: char[3]{1, ., 4}
stableDimension: 1
stamp: a!# [C
stampKind: a -
value: Object[char[3]{1, ., 4}]
=== Inputs ===
=== Succesors ===
=== Usages ===
i89 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i89 <|@
d <@d|@=== Debug Properties ===
kind: char
nodeSourcePosition: at org.graalvm.compiler.replacements.nodes.ArrayEqualsNode.equals(Object, Object, int, JavaKind) [bci: -1]
at org.graalvm.compiler.replacements.nodes.ArrayEqualsNode.equals(ArrayEqualsNode.java:202) [bci: 6]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:60) [bci: 59]
at java.nio.charset.Charset.atBugLevel(Charset.java:287) [bci: 40]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
array1: a170 
array2: a94 
length: i95 
lastLocationAccess: - 
=== Succesors ===
next: v197 
=== Usages ===
v42 
=== Predecessor ===
v78 >@ <|@
instruction <@ArrayEquals|@org.graalvm.compiler.replacements.nodes.ArrayEqualsNode>@ array1: a170 array2: a94 length: i95 lastLocationAccess: - #next: v197  <|@  <|@
f <@~|@floating>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 70]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i89 
y: i14 
=== Succesors ===
=== Usages ===
v197 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i89 y: i14  <|@  <|@
f <@*|@fixed>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 70]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v42 
=== Succesors ===
trueSuccessor: v194 
falseSuccessor: v196 
=== Usages ===
=== Predecessor ===
i89 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v42 #trueSuccessor: v194 #falseSuccessor: v196  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 70]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: j263 
=== Usages ===
=== Predecessor ===
v197 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j263  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j263 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j292 
=== Usages ===
v491 v492 
=== Predecessor ===
v194 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j292  <|@  <|@
f <@~|@floating>@ <|@
tid v491 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j263 
index: - 
=== Succesors ===
=== Usages ===
j292 v294 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j263 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j292 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v491 
=== Succesors ===
next: j293 
=== Usages ===
j431 j298 v500 v501 v502 v503 
=== Predecessor ===
j263 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v491 #next: j293  <|@  <|@
f <@~|@floating>@ <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j263 
index: - 
=== Succesors ===
=== Usages ===
j293 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j263 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j293 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v492 
=== Succesors ===
next: v271 
=== Usages ===
v268 
=== Predecessor ===
j292 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v492 #next: v271  <|@  <|@
f <@~|@floating>@ <|@
tid j431 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j292 
y: j430 
=== Succesors ===
=== Usages ===
v268 v294 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j292 y: j430  <|@  <|@
f <@~|@floating>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j293 
y: j431 
=== Succesors ===
=== Usages ===
v271 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j293 y: j431  <|@  <|@
f <@*|@fixed>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v268 
=== Succesors ===
trueSuccessor: v269 
falseSuccessor: v270 
=== Usages ===
=== Predecessor ===
j293 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v268 #trueSuccessor: v269 #falseSuccessor: v270  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4572414629676717184
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a276 
=== Usages ===
=== Predecessor ===
v271 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a276  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a276 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?2 
arguments: v261 i433 i206 
=== Succesors ===
next: j277 
=== Usages ===
j277 
=== Predecessor ===
v269 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2 arguments: v261 i433 i206 #next: j277  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j277 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a276 
=== Succesors ===
next: v299 
=== Usages ===
j298 
=== Predecessor ===
a276 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a276 #next: v299  <|@  <|@
f <@*|@fixed>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v296 
=== Predecessor ===
j277 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602588747180099502
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v294 
=== Usages ===
=== Predecessor ===
v271 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v294  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v491 
value: j431 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v281 
=== Usages ===
=== Predecessor ===
v270 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v491 value: j431 stateAfter: - lastLocationAccess: - #next: v281  <|@  <|@
f <@~|@floating>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
displacement: 272
scale: Times1
stamp: void*
=== Inputs ===
base: j292 
index: - 
=== Succesors ===
=== Usages ===
v281 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j292 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v500 
=== Succesors ===
next: v284 
=== Usages ===
=== Predecessor ===
v294 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v500 #next: v284  <|@  <|@
f <@~|@floating>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
displacement: 336
scale: Times1
stamp: void*
=== Inputs ===
base: j292 
index: - 
=== Succesors ===
=== Usages ===
v284 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j292 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v501 
=== Succesors ===
next: v287 
=== Usages ===
=== Predecessor ===
v281 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v501 #next: v287  <|@  <|@
f <@~|@floating>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
displacement: 400
scale: Times1
stamp: void*
=== Inputs ===
base: j292 
index: - 
=== Succesors ===
=== Usages ===
v287 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j292 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v502 
=== Succesors ===
next: v290 
=== Usages ===
=== Predecessor ===
v284 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v502 #next: v290  <|@  <|@
f <@~|@floating>@ <|@
tid v503 <|@
d <@d|@=== Debug Properties ===
displacement: 464
scale: Times1
stamp: void*
=== Inputs ===
base: j292 
index: - 
=== Succesors ===
=== Usages ===
v290 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j292 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v503 
=== Succesors ===
next: v297 
=== Usages ===
=== Predecessor ===
v287 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v503 #next: v297  <|@  <|@
f <@*|@fixed>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v296 
=== Predecessor ===
v290 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j298 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v296 
values: j292 j277 
=== Succesors ===
=== Usages ===
v489 v493 j204 a201 v494 v504 v505 v506 v507 v508 v509 v510 v511 v512 v513 v514 v515 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v296 values: j292 j277  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v297 v299 
=== Succesors ===
next: a201 
=== Usages ===
j298 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v297 v299 #next: a201  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a201 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j298 
=== Succesors ===
next: a205 
=== Usages ===
a220 
=== Predecessor ===
v296 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j298 #next: a205  <|@  <|@
f <@~|@floating>@ <|@
tid j204 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j298 
y: j203 
=== Succesors ===
=== Usages ===
a205 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j298 y: j203  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a205 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j204 
=== Succesors ===
next: j310 
=== Usages ===
a221 a210 
=== Predecessor ===
a201 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j204 #next: j310  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j310 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v497 
=== Succesors ===
next: v311 
=== Usages ===
v311 
=== Predecessor ===
a205 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v497 #next: v311  <|@  <|@
f <@~|@floating>@ <|@
tid v493 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j298 
index: - 
=== Succesors ===
=== Usages ===
v311 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j298 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v493 
value: j310 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v315 
=== Usages ===
=== Predecessor ===
j310 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v493 value: j310 stateAfter: - lastLocationAccess: - #next: v315  <|@  <|@
f <@~|@floating>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j298 
index: - 
=== Succesors ===
=== Usages ===
v315 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j298 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v494 
value: v442 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v320 
=== Usages ===
=== Predecessor ===
v311 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v494 value: v442 stateAfter: - lastLocationAccess: - #next: v320  <|@  <|@
f <@~|@floating>@ <|@
tid v504 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j298 
index: - 
=== Succesors ===
=== Usages ===
v320 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j298 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v504 
value: j318 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v323 
=== Usages ===
=== Predecessor ===
v315 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v504 value: j318 stateAfter: - lastLocationAccess: - #next: v323  <|@  <|@
f <@~|@floating>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j298 
index: - 
=== Succesors ===
=== Usages ===
v323 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j298 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v505 
value: i14 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v326 
=== Usages ===
=== Predecessor ===
v320 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v505 value: i14 stateAfter: - lastLocationAccess: - #next: v326  <|@  <|@
f <@~|@floating>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j298 
index: - 
=== Succesors ===
=== Usages ===
v326 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j298 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v506 
value: a209 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v329 
=== Usages ===
=== Predecessor ===
v323 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v506 value: a209 stateAfter: - lastLocationAccess: - #next: v329  <|@  <|@
f <@~|@floating>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: j298 
index: - 
=== Succesors ===
=== Usages ===
v329 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j298 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a210 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n -
=== Inputs ===
value: a205 
=== Succesors ===
=== Usages ===
v329 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a205  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v507 
value: a210 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v332 
=== Usages ===
=== Predecessor ===
v326 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v507 value: a210 stateAfter: - lastLocationAccess: - #next: v332  <|@  <|@
f <@~|@floating>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: j298 
index: - 
=== Succesors ===
=== Usages ===
v332 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j298 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v508 
value: a240 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v335 
=== Usages ===
=== Predecessor ===
v329 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v508 value: a240 stateAfter: - lastLocationAccess: - #next: v335  <|@  <|@
f <@~|@floating>@ <|@
tid v509 <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: j298 
index: - 
=== Succesors ===
=== Usages ===
v335 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j298 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v509 
value: a240 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v338 
=== Usages ===
=== Predecessor ===
v332 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v509 value: a240 stateAfter: - lastLocationAccess: - #next: v338  <|@  <|@
f <@~|@floating>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: j298 
index: - 
=== Succesors ===
=== Usages ===
v338 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j298 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v510 
value: i14 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v342 
=== Usages ===
=== Predecessor ===
v335 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v510 value: i14 stateAfter: - lastLocationAccess: - #next: v342  <|@  <|@
f <@~|@floating>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: j298 
index: - 
=== Succesors ===
=== Usages ===
v342 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j298 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v511 
value: i339 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v345 
=== Usages ===
=== Predecessor ===
v338 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v511 value: i339 stateAfter: - lastLocationAccess: - #next: v345  <|@  <|@
f <@~|@floating>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
=== Inputs ===
base: j298 
index: - 
=== Succesors ===
=== Usages ===
v345 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j298 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v512 
value: i14 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v351 
=== Usages ===
=== Predecessor ===
v342 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v512 value: i14 stateAfter: - lastLocationAccess: - #next: v351  <|@  <|@
f <@~|@floating>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
displacement: 68
scale: Times1
stamp: void*
=== Inputs ===
base: j298 
index: - 
=== Succesors ===
=== Usages ===
v351 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j298 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v513 
value: i206 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v352 
=== Usages ===
=== Predecessor ===
v345 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v513 value: i206 stateAfter: - lastLocationAccess: - #next: v352  <|@  <|@
f <@~|@floating>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
displacement: 56
scale: Times1
stamp: void*
=== Inputs ===
base: j298 
index: - 
=== Succesors ===
=== Usages ===
v352 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j298 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v514 
value: j347 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v355 
=== Usages ===
=== Predecessor ===
v351 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v514 value: j347 stateAfter: - lastLocationAccess: - #next: v355  <|@  <|@
f <@~|@floating>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
displacement: 64
scale: Times1
stamp: void*
=== Inputs ===
base: j298 
index: - 
=== Succesors ===
=== Usages ===
v355 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j298 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v515 
value: v456 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v219 
=== Usages ===
=== Predecessor ===
v352 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v515 value: v456 stateAfter: - lastLocationAccess: - #next: v219  <|@  <|@
f <@~|@floating>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
displacement: 72
scale: Times1
stamp: void*
=== Inputs ===
base: j298 
index: - 
=== Succesors ===
=== Usages ===
v219 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j298 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v489 
value: i242 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a220 
=== Usages ===
=== Predecessor ===
v355 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v489 value: i242 stateAfter: - lastLocationAccess: - #next: a220  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a220 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a201 
=== Succesors ===
next: a221 
=== Usages ===
v9 
=== Predecessor ===
v219 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a201 #next: a221  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a221 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a205 
=== Succesors ===
next: v222 
=== Usages ===
=== Predecessor ===
a220 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a205 #next: v222  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v9 
=== Usages ===
=== Predecessor ===
a221 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v9  <|@  <|@
f <@*|@fixed>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 9]
stamp: void
=== Inputs ===
result: a220 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v222 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a220 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 70]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v258 
=== Usages ===
=== Predecessor ===
v197 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v258  <|@  <|@
f <@~|@floating>@ <|@
tid i259 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -45331
stableDimension: 0
stamp: i32 [-45331] ⇊00000000ffff4eed ⇈00000000ffff4eed
stampKind: i32
value: int[-45331|0xffffffffffff4eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i251 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v247 
=== Predecessor ===
v196 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" "B8" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i251 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-45331 - -42259] ⇊00000000ffff40e5 ⇈00000000ffff5ffd
valueDescription: i32
=== Inputs ===
merge: v247 
values: i255 i259 
=== Succesors ===
=== Usages ===
v253 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v247 values: i255 i259  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v254 v258 
=== Succesors ===
next: v253 
=== Usages ===
i251 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v254 v258 #next: v253  <|@  <|@
f <@~|@floating>@ <|@
tid a250 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v253 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i251 
speculation: a250 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v247 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i251 speculation: a250  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:51) [bci: 32]
at java.nio.charset.Charset.atBugLevel(Charset.java:287) [bci: 40]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: j358 
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j358  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j358 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j379 
=== Usages ===
v495 v496 
=== Predecessor ===
v79 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j379  <|@  <|@
f <@~|@floating>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j358 
index: - 
=== Succesors ===
=== Usages ===
j379 v381 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j358 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j379 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v495 
=== Succesors ===
next: j380 
=== Usages ===
j459 j385 v516 v517 v518 v519 
=== Predecessor ===
j358 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v495 #next: j380  <|@  <|@
f <@~|@floating>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j358 
index: - 
=== Succesors ===
=== Usages ===
j380 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j358 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j380 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v496 
=== Succesors ===
next: v366 
=== Usages ===
v363 
=== Predecessor ===
j379 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v496 #next: v366  <|@  <|@
f <@~|@floating>@ <|@
tid j459 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j379 
y: j430 
=== Succesors ===
=== Usages ===
v363 v381 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j379 y: j430  <|@  <|@
f <@~|@floating>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j380 
y: j459 
=== Succesors ===
=== Usages ===
v366 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j380 y: j459  <|@  <|@
f <@*|@fixed>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v363 
=== Succesors ===
trueSuccessor: v364 
falseSuccessor: v365 
=== Usages ===
=== Predecessor ===
j380 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v363 #trueSuccessor: v364 #falseSuccessor: v365  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4572414629676717184
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a369 
=== Usages ===
=== Predecessor ===
v366 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a369  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a369 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?2 
arguments: v261 i433 i206 
=== Succesors ===
next: j370 
=== Usages ===
j370 
=== Predecessor ===
v364 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2 arguments: v261 i433 i206 #next: j370  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j370 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a369 
=== Succesors ===
next: v386 
=== Usages ===
j385 
=== Predecessor ===
a369 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a369 #next: v386  <|@  <|@
f <@*|@fixed>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v383 
=== Predecessor ===
j370 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4602588747180099502
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v381 
=== Usages ===
=== Predecessor ===
v366 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v381  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v495 
value: j459 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v372 
=== Usages ===
=== Predecessor ===
v365 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v495 value: j459 stateAfter: - lastLocationAccess: - #next: v372  <|@  <|@
f <@~|@floating>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
displacement: 272
scale: Times1
stamp: void*
=== Inputs ===
base: j379 
index: - 
=== Succesors ===
=== Usages ===
v372 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j379 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v516 
=== Succesors ===
next: v374 
=== Usages ===
=== Predecessor ===
v381 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v516 #next: v374  <|@  <|@
f <@~|@floating>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
displacement: 336
scale: Times1
stamp: void*
=== Inputs ===
base: j379 
index: - 
=== Succesors ===
=== Usages ===
v374 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j379 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v517 
=== Succesors ===
next: v376 
=== Usages ===
=== Predecessor ===
v372 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v517 #next: v376  <|@  <|@
f <@~|@floating>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
displacement: 400
scale: Times1
stamp: void*
=== Inputs ===
base: j379 
index: - 
=== Succesors ===
=== Usages ===
v376 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j379 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v518 
=== Succesors ===
next: v378 
=== Usages ===
=== Predecessor ===
v374 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v518 #next: v378  <|@  <|@
f <@~|@floating>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
displacement: 464
scale: Times1
stamp: void*
=== Inputs ===
base: j379 
index: - 
=== Succesors ===
=== Usages ===
v378 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j379 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v519 
=== Succesors ===
next: v384 
=== Usages ===
=== Predecessor ===
v376 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v519 #next: v384  <|@  <|@
f <@*|@fixed>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v383 
=== Predecessor ===
v378 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j385 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v383 
values: j379 j370 
=== Succesors ===
=== Usages ===
v490 v498 j227 a225 v499 v520 v521 v522 v523 v524 v525 v526 v527 v528 v529 v530 v531 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v383 values: j379 j370  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v384 v386 
=== Succesors ===
next: a225 
=== Usages ===
j385 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v384 v386 #next: a225  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a225 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j385 
=== Succesors ===
next: a228 
=== Usages ===
a237 
=== Predecessor ===
v383 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j385 #next: a228  <|@  <|@
f <@~|@floating>@ <|@
tid j227 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j385 
y: j203 
=== Succesors ===
=== Usages ===
a228 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j385 y: j203  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a228 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j227 
=== Succesors ===
next: j395 
=== Usages ===
a238 a231 
=== Predecessor ===
a225 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j227 #next: j395  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j395 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v497 
=== Succesors ===
next: v396 
=== Usages ===
v396 
=== Predecessor ===
a228 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v497 #next: v396  <|@  <|@
f <@~|@floating>@ <|@
tid v498 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j385 
index: - 
=== Succesors ===
=== Usages ===
v396 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j385 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v498 
value: j395 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v399 
=== Usages ===
=== Predecessor ===
j395 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v498 value: j395 stateAfter: - lastLocationAccess: - #next: v399  <|@  <|@
f <@~|@floating>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j385 
index: - 
=== Succesors ===
=== Usages ===
v399 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j385 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v499 
value: v442 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v403 
=== Usages ===
=== Predecessor ===
v396 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v499 value: v442 stateAfter: - lastLocationAccess: - #next: v403  <|@  <|@
f <@~|@floating>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j385 
index: - 
=== Succesors ===
=== Usages ===
v403 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j385 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v520 
value: j318 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v405 
=== Usages ===
=== Predecessor ===
v399 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v520 value: j318 stateAfter: - lastLocationAccess: - #next: v405  <|@  <|@
f <@~|@floating>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j385 
index: - 
=== Succesors ===
=== Usages ===
v405 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j385 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v521 
value: i14 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v407 
=== Usages ===
=== Predecessor ===
v403 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v521 value: i14 stateAfter: - lastLocationAccess: - #next: v407  <|@  <|@
f <@~|@floating>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j385 
index: - 
=== Succesors ===
=== Usages ===
v407 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j385 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v522 
value: a209 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v409 
=== Usages ===
=== Predecessor ===
v405 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v522 value: a209 stateAfter: - lastLocationAccess: - #next: v409  <|@  <|@
f <@~|@floating>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: j385 
index: - 
=== Succesors ===
=== Usages ===
v409 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j385 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a231 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n -
=== Inputs ===
value: a228 
=== Succesors ===
=== Usages ===
v409 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a228  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v523 
value: a231 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v411 
=== Usages ===
=== Predecessor ===
v407 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v523 value: a231 stateAfter: - lastLocationAccess: - #next: v411  <|@  <|@
f <@~|@floating>@ <|@
tid v524 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: j385 
index: - 
=== Succesors ===
=== Usages ===
v411 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j385 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v524 
value: a240 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v413 
=== Usages ===
=== Predecessor ===
v409 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v524 value: a240 stateAfter: - lastLocationAccess: - #next: v413  <|@  <|@
f <@~|@floating>@ <|@
tid v525 <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: j385 
index: - 
=== Succesors ===
=== Usages ===
v413 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j385 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v525 
value: a240 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v415 
=== Usages ===
=== Predecessor ===
v411 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v525 value: a240 stateAfter: - lastLocationAccess: - #next: v415  <|@  <|@
f <@~|@floating>@ <|@
tid v526 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: j385 
index: - 
=== Succesors ===
=== Usages ===
v415 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j385 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v526 
value: i14 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v417 
=== Usages ===
=== Predecessor ===
v413 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v526 value: i14 stateAfter: - lastLocationAccess: - #next: v417  <|@  <|@
f <@~|@floating>@ <|@
tid v527 <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: j385 
index: - 
=== Succesors ===
=== Usages ===
v417 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j385 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v527 
value: i339 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v419 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v527 value: i339 stateAfter: - lastLocationAccess: - #next: v419  <|@  <|@
f <@~|@floating>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
=== Inputs ===
base: j385 
index: - 
=== Succesors ===
=== Usages ===
v419 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j385 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v528 
value: i14 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v423 
=== Usages ===
=== Predecessor ===
v417 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v528 value: i14 stateAfter: - lastLocationAccess: - #next: v423  <|@  <|@
f <@~|@floating>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
displacement: 68
scale: Times1
stamp: void*
=== Inputs ===
base: j385 
index: - 
=== Succesors ===
=== Usages ===
v423 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j385 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v529 
value: i206 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v424 
=== Usages ===
=== Predecessor ===
v419 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v529 value: i206 stateAfter: - lastLocationAccess: - #next: v424  <|@  <|@
f <@~|@floating>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
displacement: 56
scale: Times1
stamp: void*
=== Inputs ===
base: j385 
index: - 
=== Succesors ===
=== Usages ===
v424 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j385 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v530 
value: j347 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v427 
=== Usages ===
=== Predecessor ===
v423 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v530 value: j347 stateAfter: - lastLocationAccess: - #next: v427  <|@  <|@
f <@~|@floating>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
displacement: 64
scale: Times1
stamp: void*
=== Inputs ===
base: j385 
index: - 
=== Succesors ===
=== Usages ===
v427 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j385 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v531 
value: v456 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v236 
=== Usages ===
=== Predecessor ===
v424 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v531 value: v456 stateAfter: - lastLocationAccess: - #next: v236  <|@  <|@
f <@~|@floating>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
displacement: 72
scale: Times1
stamp: void*
=== Inputs ===
base: j385 
index: - 
=== Succesors ===
=== Usages ===
v236 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j385 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v490 
value: i242 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a237 
=== Usages ===
=== Predecessor ===
v427 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v490 value: i242 stateAfter: - lastLocationAccess: - #next: a237  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a237 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a225 
=== Succesors ===
next: a238 
=== Usages ===
v146 
=== Predecessor ===
v236 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a225 #next: a238  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a238 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a228 
=== Succesors ===
next: v239 
=== Usages ===
=== Predecessor ===
a237 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a228 #next: v239  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v146 
=== Usages ===
=== Predecessor ===
a238 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v146  <|@  <|@
f <@*|@fixed>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 9]
stamp: void
=== Inputs ===
result: a237 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v239 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a237 memoryMap: -  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v163 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v163  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: ANY_LOCATION
nodeSourcePosition: at java.nio.charset.Charset.atBugLevel(Charset.java:280) [bci: 0]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: a483 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a483  <|@  <|@
f <@~|@floating>@ <|@
tid a158 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.charset.Charset.atBugLevel(Charset.java:280) [bci: 0]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
rawvalue: Class:java.nio.charset.Charset
stableDimension: 0
stamp: a!# Ljava/lang/Class;
stampKind: a -
value: Object[Class:java.nio.charset.Charset]
=== Inputs ===
=== Succesors ===
=== Usages ===
v486 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v486 <|@
result [v1|QWORD[.] + 104] <|@
d <@d|@=== Debug Properties ===
displacement: 104
scale: Times1
stamp: void*
=== Inputs ===
base: a158 
index: - 
=== Succesors ===
=== Usages ===
a483 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a158 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a483 <|@
result v2|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Charset.bugLevel
nodeSourcePosition: at java.nio.charset.Charset.atBugLevel(Charset.java:280) [bci: 0]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
nullCheck: false
stamp: n# Ljava/lang/String;
=== Inputs ===
stateBefore: - 
guard: - 
address: v486 
=== Succesors ===
next: v534 
=== Usages ===
v533 v534 v487 
=== Predecessor ===
v163 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v486 #next: v534  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lsun/nio/cs/UTF_8;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 a209 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<UTF_8.newEncoder()>
duringCall: false
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 72
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v253 a276 a369 v534 i485 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
object: a483 
=== Succesors ===
next: v189 
=== Usages ===
=== Predecessor ===
a483 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?2 object: a483 #next: v189  <|@  <|@
f <@~|@floating>@ <|@
tid a532 <|@
result NarrowOop[String:"1.4"] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:43) [bci: 2]
at java.nio.charset.Charset.atBugLevel(Charset.java:287) [bci: 40]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
rawvalue: "1.4"
stableDimension: 0
stamp: n!# Ljava/lang/String;
stampKind: n -
value: NarrowOop[String:"1.4"]
=== Inputs ===
=== Succesors ===
=== Usages ===
v533 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:43) [bci: 2]
at java.nio.charset.Charset.atBugLevel(Charset.java:287) [bci: 40]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a483 
y: a532 
=== Succesors ===
=== Usages ===
v189 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a483 y: a532  <|@  <|@
f <@*|@fixed>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:43) [bci: 2]
at java.nio.charset.Charset.atBugLevel(Charset.java:287) [bci: 40]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v533 
=== Succesors ===
trueSuccessor: v188 
falseSuccessor: v186 
=== Usages ===
=== Predecessor ===
v534 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v533 #trueSuccessor: v188 #falseSuccessor: v186  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7fcc7cce slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.nio.charset.Charset] <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v1|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v2|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[String:"1.4"] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:43) [bci: 2]
at java.nio.charset.Charset.atBugLevel(Charset.java:287) [bci: 40]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v254 
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v254  <|@  <|@
f <@~|@floating>@ <|@
tid i255 <|@
result int[-42515|0xffffffffffff59ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -42515
stableDimension: 0
stamp: i32 [-42515] ⇊00000000ffff59ed ⇈00000000ffff59ed
stampKind: i32
value: int[-42515|0xffffffffffff59ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i251 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v247 
=== Predecessor ===
v188 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-42515|0xffffffffffff59ed]] destination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:43) [bci: 2]
at java.nio.charset.Charset.atBugLevel(Charset.java:287) [bci: 40]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v164 
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v164  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
barriers: 3
location: ANY_LOCATION
nodeSourcePosition: at java.nio.charset.Charset.atBugLevel(Charset.java:280) [bci: 0]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: a484 
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a484  <|@  <|@
f <@~|@floating>@ <|@
tid v487 <|@
result [v2|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a483 
=== Succesors ===
=== Usages ===
a484 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a483  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a484 <|@
result v3|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.nio.charset.Charset.atBugLevel(Charset.java:287) [bci: 40]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v487 
=== Succesors ===
next: i485 
=== Usages ===
a170 v488 
=== Predecessor ===
v164 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v487 #next: i485  <|@  <|@
f <@~|@floating>@ <|@
tid v488 <|@
result [v3|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a484 
=== Succesors ===
=== Usages ===
i485 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a484  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i485 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.nio.charset.Charset.atBugLevel(Charset.java:287) [bci: 40]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v488 
=== Succesors ===
next: v80 
=== Usages ===
v77 
=== Predecessor ===
a484 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v488 #next: v80  <|@  <|@
f <@~|@floating>@ <|@
tid i95 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.nio.charset.Charset.atBugLevel(Charset.java:287) [bci: 40]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
v77 i89 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v77 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 29]
at java.nio.charset.Charset.atBugLevel(Charset.java:287) [bci: 40]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i485 
y: i95 
=== Succesors ===
=== Usages ===
v80 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i485 y: i95  <|@  <|@
f <@~|@floating>@ <|@
tid i242 <|@
result byte[63|0x3f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 63
stableDimension: 0
stamp: i8 [63] ⇊000000000000003f ⇈000000000000003f
stampKind: i8
value: byte[63|0x3f]
=== Inputs ===
=== Succesors ===
=== Usages ===
v236 v219 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v456 <|@
result meta{HotSpotType<[B, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[B, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[B, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v355 v427 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j347 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v352 v424 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i339 <|@
result byte[63|0x3f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 63
stableDimension: 0
stamp: i8
stampKind: i8
value: byte[63|0x3f]
=== Inputs ===
=== Succesors ===
=== Usages ===
v342 v417 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a240 <|@
result NarrowOop[CodingErrorAction@250144264] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: CodingErrorAction@250144264
stableDimension: 0
stamp: n!# Ljava/nio/charset/CodingErrorAction;
stampKind: n -
value: NarrowOop[CodingErrorAction@250144264]
=== Inputs ===
=== Succesors ===
=== Usages ===
v335 v332 v411 v413 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a209 <|@
result v4|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n!# Lsun/nio/cs/UTF_8;
=== Inputs ===
value: a1 
=== Succesors ===
=== Usages ===
v326 v407 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1  <|@  <|@
f <@~|@floating>@ <|@
tid j318 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4629700418003061965
stableDimension: 0
stamp: i64 [4629700418003061965] ⇊404000003f8ccccd ⇈404000003f8ccccd
stampKind: i64
value: long[4629700418003061965|0x404000003f8ccccd]
=== Inputs ===
=== Succesors ===
=== Usages ===
v320 v403 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v442 <|@
result meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v315 v399 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v304 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j391 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j391 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v304 
=== Succesors ===
=== Usages ===
v497 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v304  <|@  <|@
f <@~|@floating>@ <|@
tid v497 <|@
result [v6|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j391 
index: - 
=== Succesors ===
=== Usages ===
j395 j310 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j391 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j203 <|@
result long[56|0x38] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 56
stableDimension: 0
stamp: i64 [56] ⇊0000000000000038 ⇈0000000000000038
stampKind: i64
value: long[56|0x38]
=== Inputs ===
=== Succesors ===
=== Usages ===
j204 j227 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i206 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v423 a369 a276 v351 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i433 <|@
result int[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 16
stableDimension: 0
stamp: i32 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
a276 a369 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v261 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a276 a369 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j430 <|@
result long[80|0x50] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 80
stableDimension: 0
stamp: i64 [80] ⇊0000000000000050 ⇈0000000000000050
stampKind: i64
value: long[80|0x50]
=== Inputs ===
=== Succesors ===
=== Usages ===
j431 j459 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i14 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 8]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v419 v345 v42 v323 v338 v405 v415 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v80 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 29]
at java.nio.charset.Charset.atBugLevel(Charset.java:287) [bci: 40]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v77 
=== Succesors ===
trueSuccessor: v78 
falseSuccessor: v79 
=== Usages ===
=== Predecessor ===
i485 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v77 #trueSuccessor: v78 #falseSuccessor: v79  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v2|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@286cee87 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: long[4629700418003061965|0x404000003f8ccccd] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction CMP [v3|DWORD[.] * 8 + 12] y: 3 size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:53) [bci: 34]
at java.nio.charset.Charset.atBugLevel(Charset.java:287) [bci: 40]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: i89 
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i89  <|@  <|@
f <@~|@floating>@ <|@
tid a170 <|@
result v8|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.nio.charset.Charset.atBugLevel(Charset.java:287) [bci: 40]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a484 
=== Succesors ===
=== Usages ===
i89 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a484  <|@  <|@
f <@~|@floating>@ <|@
tid a94 <|@
result v9|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.getValue(String) [bci: -1]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:58) [bci: 49]
at java.nio.charset.Charset.atBugLevel(Charset.java:287) [bci: 40]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
rawvalue: char[3]{1, ., 4}
stableDimension: 1
stamp: a!# [C
stampKind: a -
value: Object[char[3]{1, ., 4}]
=== Inputs ===
=== Succesors ===
=== Usages ===
i89 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i89 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
kind: char
nodeSourcePosition: at org.graalvm.compiler.replacements.nodes.ArrayEqualsNode.equals(Object, Object, int, JavaKind) [bci: -1]
at org.graalvm.compiler.replacements.nodes.ArrayEqualsNode.equals(ArrayEqualsNode.java:202) [bci: 6]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:60) [bci: 59]
at java.nio.charset.Charset.atBugLevel(Charset.java:287) [bci: 40]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
array1: a170 
array2: a94 
length: i95 
lastLocationAccess: - 
=== Succesors ===
next: v197 
=== Usages ===
v42 
=== Predecessor ===
v78 >@ <|@
instruction <@ArrayEquals|@org.graalvm.compiler.replacements.nodes.ArrayEqualsNode>@ array1: a170 array2: a94 length: i95 lastLocationAccess: - #next: v197  <|@  <|@
f <@~|@floating>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 70]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i89 
y: i14 
=== Succesors ===
=== Usages ===
v197 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i89 y: i14  <|@  <|@
f <@*|@fixed>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 70]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v42 
=== Succesors ===
trueSuccessor: v194 
falseSuccessor: v196 
=== Usages ===
=== Predecessor ===
i89 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v42 #trueSuccessor: v194 #falseSuccessor: v196  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@286cee87 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[3]{1, ., 4}] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = ARRAY_EQUALS (~array1Value: v8|QWORD[.], ~array2Value: v9|QWORD[.], ~lengthValue: v11|DWORD) {temp1: v12|QWORD[*], temp2: v13|QWORD[*], temp3: v14|QWORD, temp4: v15|QWORD, temp5: -, tempXMM: -, vectorTemp1: v16|DOUBLE, vectorTemp2: v17|DOUBLE} arrayBaseOffset: 16 arrayIndexScale: 2 kind: char <|@ <|@
      nr   -1  <|@ instruction TEST (x: v10|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 70]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: j263 
=== Usages ===
=== Predecessor ===
v197 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j263  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j263 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j292 
=== Usages ===
v491 v492 
=== Predecessor ===
v194 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j292  <|@  <|@
f <@~|@floating>@ <|@
tid v491 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j263 
index: - 
=== Succesors ===
=== Usages ===
j292 v294 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j263 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j292 <|@
result v18|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v491 
=== Succesors ===
next: j293 
=== Usages ===
j431 j298 v500 v501 v502 v503 
=== Predecessor ===
j263 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v491 #next: j293  <|@  <|@
f <@~|@floating>@ <|@
tid v492 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j263 
index: - 
=== Succesors ===
=== Usages ===
j293 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j263 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j293 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v492 
=== Succesors ===
next: v271 
=== Usages ===
v268 
=== Predecessor ===
j292 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v492 #next: v271  <|@  <|@
f <@~|@floating>@ <|@
tid j431 <|@
result v19|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j292 
y: j430 
=== Succesors ===
=== Usages ===
v268 v294 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j292 y: j430  <|@  <|@
f <@~|@floating>@ <|@
tid v268 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j293 
y: j431 
=== Succesors ===
=== Usages ===
v271 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j293 y: j431  <|@  <|@
f <@*|@fixed>@ <|@
tid v271 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v268 
=== Succesors ===
trueSuccessor: v269 
falseSuccessor: v270 
=== Usages ===
=== Predecessor ===
j293 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v268 #trueSuccessor: v269 #falseSuccessor: v270  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = LEA [v18|QWORD + 80] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4572414629676717184
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a276 
=== Usages ===
=== Predecessor ===
v271 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a276  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a276 <|@
result v20|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?2 
arguments: v261 i433 i206 
=== Succesors ===
next: j277 
=== Usages ===
j277 
=== Predecessor ===
v269 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2 arguments: v261 i433 i206 #next: j277  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j277 <|@
result v20|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a276 
=== Succesors ===
next: v299 
=== Usages ===
j298 
=== Predecessor ===
a276 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a276 #next: v299  <|@  <|@
f <@*|@fixed>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v296 
=== Predecessor ===
j277 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v7|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|QWORD[.]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602588747180099502
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v294 
=== Usages ===
=== Predecessor ===
v271 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v294  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v491 
value: j431 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v281 
=== Usages ===
=== Predecessor ===
v270 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v491 value: j431 stateAfter: - lastLocationAccess: - #next: v281  <|@  <|@
f <@~|@floating>@ <|@
tid v500 <|@
result [v18|QWORD + 272] <|@
d <@d|@=== Debug Properties ===
displacement: 272
scale: Times1
stamp: void*
=== Inputs ===
base: j292 
index: - 
=== Succesors ===
=== Usages ===
v281 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j292 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v500 
=== Succesors ===
next: v284 
=== Usages ===
=== Predecessor ===
v294 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v500 #next: v284  <|@  <|@
f <@~|@floating>@ <|@
tid v501 <|@
result [v18|QWORD + 336] <|@
d <@d|@=== Debug Properties ===
displacement: 336
scale: Times1
stamp: void*
=== Inputs ===
base: j292 
index: - 
=== Succesors ===
=== Usages ===
v284 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j292 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v501 
=== Succesors ===
next: v287 
=== Usages ===
=== Predecessor ===
v281 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v501 #next: v287  <|@  <|@
f <@~|@floating>@ <|@
tid v502 <|@
result [v18|QWORD + 400] <|@
d <@d|@=== Debug Properties ===
displacement: 400
scale: Times1
stamp: void*
=== Inputs ===
base: j292 
index: - 
=== Succesors ===
=== Usages ===
v287 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j292 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v502 
=== Succesors ===
next: v290 
=== Usages ===
=== Predecessor ===
v284 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v502 #next: v290  <|@  <|@
f <@~|@floating>@ <|@
tid v503 <|@
result [v18|QWORD + 464] <|@
d <@d|@=== Debug Properties ===
displacement: 464
scale: Times1
stamp: void*
=== Inputs ===
base: j292 
index: - 
=== Succesors ===
=== Usages ===
v290 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j292 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v503 
=== Succesors ===
next: v297 
=== Usages ===
=== Predecessor ===
v287 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v503 #next: v297  <|@  <|@
f <@*|@fixed>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v296 
=== Predecessor ===
v290 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v18|QWORD + 272] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v18|QWORD + 336] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v18|QWORD + 400] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v18|QWORD + 464] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|QWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j298 <|@
result v21|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v296 
values: j292 j277 
=== Succesors ===
=== Usages ===
v489 v493 j204 a201 v494 v504 v505 v506 v507 v508 v509 v510 v511 v512 v513 v514 v515 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v296 values: j292 j277  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v297 v299 
=== Succesors ===
next: a201 
=== Usages ===
j298 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v297 v299 #next: a201  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a201 <|@
result v22|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j298 
=== Succesors ===
next: a205 
=== Usages ===
a220 
=== Predecessor ===
v296 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j298 #next: a205  <|@  <|@
f <@~|@floating>@ <|@
tid j204 <|@
result v23|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j298 
y: j203 
=== Succesors ===
=== Usages ===
a205 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j298 y: j203  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a205 <|@
result v24|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j204 
=== Succesors ===
next: j310 
=== Usages ===
a221 a210 
=== Predecessor ===
a201 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j204 #next: j310  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j310 <|@
result v25|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v497 
=== Succesors ===
next: v311 
=== Usages ===
v311 
=== Predecessor ===
a205 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v497 #next: v311  <|@  <|@
f <@~|@floating>@ <|@
tid v493 <|@
result [v21|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j298 
index: - 
=== Succesors ===
=== Usages ===
v311 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j298 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v493 
value: j310 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v315 
=== Usages ===
=== Predecessor ===
j310 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v493 value: j310 stateAfter: - lastLocationAccess: - #next: v315  <|@  <|@
f <@~|@floating>@ <|@
tid v494 <|@
result [v21|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j298 
index: - 
=== Succesors ===
=== Usages ===
v315 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j298 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v494 
value: v442 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v320 
=== Usages ===
=== Predecessor ===
v311 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v494 value: v442 stateAfter: - lastLocationAccess: - #next: v320  <|@  <|@
f <@~|@floating>@ <|@
tid v504 <|@
result [v21|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j298 
index: - 
=== Succesors ===
=== Usages ===
v320 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j298 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v504 
value: j318 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v323 
=== Usages ===
=== Predecessor ===
v315 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v504 value: j318 stateAfter: - lastLocationAccess: - #next: v323  <|@  <|@
f <@~|@floating>@ <|@
tid v505 <|@
result [v21|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j298 
index: - 
=== Succesors ===
=== Usages ===
v323 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j298 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v505 
value: i14 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v326 
=== Usages ===
=== Predecessor ===
v320 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v505 value: i14 stateAfter: - lastLocationAccess: - #next: v326  <|@  <|@
f <@~|@floating>@ <|@
tid v506 <|@
result [v21|QWORD[*] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j298 
index: - 
=== Succesors ===
=== Usages ===
v326 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j298 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v506 
value: a209 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v329 
=== Usages ===
=== Predecessor ===
v323 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v506 value: a209 stateAfter: - lastLocationAccess: - #next: v329  <|@  <|@
f <@~|@floating>@ <|@
tid v507 <|@
result [v21|QWORD[*] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: j298 
index: - 
=== Succesors ===
=== Usages ===
v329 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j298 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a210 <|@
result v26|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n -
=== Inputs ===
value: a205 
=== Succesors ===
=== Usages ===
v329 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a205  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v507 
value: a210 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v332 
=== Usages ===
=== Predecessor ===
v326 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v507 value: a210 stateAfter: - lastLocationAccess: - #next: v332  <|@  <|@
f <@~|@floating>@ <|@
tid v508 <|@
result [v21|QWORD[*] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: j298 
index: - 
=== Succesors ===
=== Usages ===
v332 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j298 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v508 
value: a240 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v335 
=== Usages ===
=== Predecessor ===
v329 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v508 value: a240 stateAfter: - lastLocationAccess: - #next: v335  <|@  <|@
f <@~|@floating>@ <|@
tid v509 <|@
result [v21|QWORD[*] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: j298 
index: - 
=== Succesors ===
=== Usages ===
v335 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j298 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v509 
value: a240 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v338 
=== Usages ===
=== Predecessor ===
v332 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v509 value: a240 stateAfter: - lastLocationAccess: - #next: v338  <|@  <|@
f <@~|@floating>@ <|@
tid v510 <|@
result [v21|QWORD[*] + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: j298 
index: - 
=== Succesors ===
=== Usages ===
v338 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j298 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v510 
value: i14 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v342 
=== Usages ===
=== Predecessor ===
v335 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v510 value: i14 stateAfter: - lastLocationAccess: - #next: v342  <|@  <|@
f <@~|@floating>@ <|@
tid v511 <|@
result [v21|QWORD[*] + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: j298 
index: - 
=== Succesors ===
=== Usages ===
v342 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j298 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v511 
value: i339 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v345 
=== Usages ===
=== Predecessor ===
v338 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v511 value: i339 stateAfter: - lastLocationAccess: - #next: v345  <|@  <|@
f <@~|@floating>@ <|@
tid v512 <|@
result [v21|QWORD[*] + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
=== Inputs ===
base: j298 
index: - 
=== Succesors ===
=== Usages ===
v345 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j298 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v512 
value: i14 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v351 
=== Usages ===
=== Predecessor ===
v342 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v512 value: i14 stateAfter: - lastLocationAccess: - #next: v351  <|@  <|@
f <@~|@floating>@ <|@
tid v513 <|@
result [v21|QWORD[*] + 68] <|@
d <@d|@=== Debug Properties ===
displacement: 68
scale: Times1
stamp: void*
=== Inputs ===
base: j298 
index: - 
=== Succesors ===
=== Usages ===
v351 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j298 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v513 
value: i206 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v352 
=== Usages ===
=== Predecessor ===
v345 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v513 value: i206 stateAfter: - lastLocationAccess: - #next: v352  <|@  <|@
f <@~|@floating>@ <|@
tid v514 <|@
result [v21|QWORD[*] + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
scale: Times1
stamp: void*
=== Inputs ===
base: j298 
index: - 
=== Succesors ===
=== Usages ===
v352 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j298 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v514 
value: j347 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v355 
=== Usages ===
=== Predecessor ===
v351 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v514 value: j347 stateAfter: - lastLocationAccess: - #next: v355  <|@  <|@
f <@~|@floating>@ <|@
tid v515 <|@
result [v21|QWORD[*] + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
scale: Times1
stamp: void*
=== Inputs ===
base: j298 
index: - 
=== Succesors ===
=== Usages ===
v355 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j298 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v515 
value: v456 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v219 
=== Usages ===
=== Predecessor ===
v352 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v515 value: v456 stateAfter: - lastLocationAccess: - #next: v219  <|@  <|@
f <@~|@floating>@ <|@
tid v489 <|@
result [v21|QWORD[*] + 72] <|@
d <@d|@=== Debug Properties ===
displacement: 72
scale: Times1
stamp: void*
=== Inputs ===
base: j298 
index: - 
=== Succesors ===
=== Usages ===
v219 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j298 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v489 
value: i242 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a220 
=== Usages ===
=== Predecessor ===
v355 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v489 value: i242 stateAfter: - lastLocationAccess: - #next: a220  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a220 <|@
result v22|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a201 
=== Succesors ===
next: a221 
=== Usages ===
v9 
=== Predecessor ===
v219 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a201 #next: a221  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a221 <|@
result v24|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a205 
=== Succesors ===
next: v222 
=== Usages ===
=== Predecessor ===
a220 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a205 #next: v222  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v9 
=== Usages ===
=== Predecessor ===
a221 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v9  <|@  <|@
f <@*|@fixed>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 9]
stamp: void
=== Inputs ===
result: a220 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v222 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a220 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v21|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = MOVE v21|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[*] = LEA [v21|QWORD[*] + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = MOVE v23|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOV [v6|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v21|QWORD[*]], y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v21|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v21|QWORD[*] + 12], y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v21|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v21|QWORD[*] + 24], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD[.] = COMPRESSPOINTER (input: v24|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@286cee87 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v21|QWORD[*] + 28], y: v26|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v21|QWORD[*] + 32] y: -559030611 size: DWORD c: NarrowOop[CodingErrorAction@250144264] <|@ <|@
      nr   -1  <|@ instruction MOV [v21|QWORD[*] + 36] y: -559030611 size: DWORD c: NarrowOop[CodingErrorAction@250144264] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v21|QWORD[*] + 40], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v21|QWORD[*] + 44] y: 63 size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v21|QWORD[*] + 48], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v21|QWORD[*] + 68] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v21|QWORD[*] + 56] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v21|QWORD[*] + 64] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOVB [v21|QWORD[*] + 72] y: 63 size: BYTE <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v22|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 70]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v258 
=== Usages ===
=== Predecessor ===
v197 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v258  <|@  <|@
f <@~|@floating>@ <|@
tid i259 <|@
result int[-45331|0xffffffffffff4eed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -45331
stableDimension: 0
stamp: i32 [-45331] ⇊00000000ffff4eed ⇈00000000ffff4eed
stampKind: i32
value: int[-45331|0xffffffffffff4eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i251 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v247 
=== Predecessor ===
v196 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-45331|0xffffffffffff4eed]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" "B8" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i251 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-45331 - -42259] ⇊00000000ffff40e5 ⇈00000000ffff5ffd
valueDescription: i32
=== Inputs ===
merge: v247 
values: i255 i259 
=== Succesors ===
=== Usages ===
v253 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v247 values: i255 i259  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v254 v258 
=== Succesors ===
next: v253 
=== Usages ===
i251 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v254 v258 #next: v253  <|@  <|@
f <@~|@floating>@ <|@
tid a250 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v253 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i251 
speculation: a250 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v247 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i251 speculation: a250  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:51) [bci: 32]
at java.nio.charset.Charset.atBugLevel(Charset.java:287) [bci: 40]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:198) [bci: 67]
at java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:233) [bci: 12]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:558) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.<init>(UTF_8.java:554) [bci: 2]
at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: j358 
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j358  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j358 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j379 
=== Usages ===
v495 v496 
=== Predecessor ===
v79 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j379  <|@  <|@
f <@~|@floating>@ <|@
tid v495 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j358 
index: - 
=== Succesors ===
=== Usages ===
j379 v381 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j358 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j379 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v495 
=== Succesors ===
next: j380 
=== Usages ===
j459 j385 v516 v517 v518 v519 
=== Predecessor ===
j358 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v495 #next: j380  <|@  <|@
f <@~|@floating>@ <|@
tid v496 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j358 
index: - 
=== Succesors ===
=== Usages ===
j380 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j358 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j380 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v496 
=== Succesors ===
next: v366 
=== Usages ===
v363 
=== Predecessor ===
j379 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v496 #next: v366  <|@  <|@
f <@~|@floating>@ <|@
tid j459 <|@
result v29|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j379 
y: j430 
=== Succesors ===
=== Usages ===
v363 v381 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j379 y: j430  <|@  <|@
f <@~|@floating>@ <|@
tid v363 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j380 
y: j459 
=== Succesors ===
=== Usages ===
v366 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j380 y: j459  <|@  <|@
f <@*|@fixed>@ <|@
tid v366 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v363 
=== Succesors ===
trueSuccessor: v364 
falseSuccessor: v365 
=== Usages ===
=== Predecessor ===
j380 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v363 #trueSuccessor: v364 #falseSuccessor: v365  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = LEA [v28|QWORD + 80] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v29|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4572414629676717184
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a369 
=== Usages ===
=== Predecessor ===
v366 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a369  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a369 <|@
result v30|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?2 
arguments: v261 i433 i206 
=== Succesors ===
next: j370 
=== Usages ===
j370 
=== Predecessor ===
v364 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2 arguments: v261 i433 i206 #next: j370  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j370 <|@
result v30|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a369 
=== Succesors ===
next: v386 
=== Usages ===
j385 
=== Predecessor ===
a369 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a369 #next: v386  <|@  <|@
f <@*|@fixed>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v383 
=== Predecessor ===
j370 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v7|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|QWORD[.]] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4602588747180099502
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v381 
=== Usages ===
=== Predecessor ===
v366 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v381  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v495 
value: j459 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v372 
=== Usages ===
=== Predecessor ===
v365 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v495 value: j459 stateAfter: - lastLocationAccess: - #next: v372  <|@  <|@
f <@~|@floating>@ <|@
tid v516 <|@
result [v28|QWORD + 272] <|@
d <@d|@=== Debug Properties ===
displacement: 272
scale: Times1
stamp: void*
=== Inputs ===
base: j379 
index: - 
=== Succesors ===
=== Usages ===
v372 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j379 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v516 
=== Succesors ===
next: v374 
=== Usages ===
=== Predecessor ===
v381 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v516 #next: v374  <|@  <|@
f <@~|@floating>@ <|@
tid v517 <|@
result [v28|QWORD + 336] <|@
d <@d|@=== Debug Properties ===
displacement: 336
scale: Times1
stamp: void*
=== Inputs ===
base: j379 
index: - 
=== Succesors ===
=== Usages ===
v374 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j379 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v517 
=== Succesors ===
next: v376 
=== Usages ===
=== Predecessor ===
v372 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v517 #next: v376  <|@  <|@
f <@~|@floating>@ <|@
tid v518 <|@
result [v28|QWORD + 400] <|@
d <@d|@=== Debug Properties ===
displacement: 400
scale: Times1
stamp: void*
=== Inputs ===
base: j379 
index: - 
=== Succesors ===
=== Usages ===
v376 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j379 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v518 
=== Succesors ===
next: v378 
=== Usages ===
=== Predecessor ===
v374 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v518 #next: v378  <|@  <|@
f <@~|@floating>@ <|@
tid v519 <|@
result [v28|QWORD + 464] <|@
d <@d|@=== Debug Properties ===
displacement: 464
scale: Times1
stamp: void*
=== Inputs ===
base: j379 
index: - 
=== Succesors ===
=== Usages ===
v378 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j379 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v519 
=== Succesors ===
next: v384 
=== Usages ===
=== Predecessor ===
v376 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v519 #next: v384  <|@  <|@
f <@*|@fixed>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v383 
=== Predecessor ===
v378 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v28|QWORD + 272] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v28|QWORD + 336] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v28|QWORD + 400] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v28|QWORD + 464] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|QWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j385 <|@
result v31|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v383 
values: j379 j370 
=== Succesors ===
=== Usages ===
v490 v498 j227 a225 v499 v520 v521 v522 v523 v524 v525 v526 v527 v528 v529 v530 v531 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v383 values: j379 j370  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v384 v386 
=== Succesors ===
next: a225 
=== Usages ===
j385 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v384 v386 #next: a225  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a225 <|@
result v32|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j385 
=== Succesors ===
next: a228 
=== Usages ===
a237 
=== Predecessor ===
v383 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j385 #next: a228  <|@  <|@
f <@~|@floating>@ <|@
tid j227 <|@
result v33|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j385 
y: j203 
=== Succesors ===
=== Usages ===
a228 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j385 y: j203  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a228 <|@
result v34|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j227 
=== Succesors ===
next: j395 
=== Usages ===
a238 a231 
=== Predecessor ===
a225 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j227 #next: j395  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j395 <|@
result v35|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v497 
=== Succesors ===
next: v396 
=== Usages ===
v396 
=== Predecessor ===
a228 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v497 #next: v396  <|@  <|@
f <@~|@floating>@ <|@
tid v498 <|@
result [v31|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j385 
index: - 
=== Succesors ===
=== Usages ===
v396 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j385 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v498 
value: j395 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v399 
=== Usages ===
=== Predecessor ===
j395 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v498 value: j395 stateAfter: - lastLocationAccess: - #next: v399  <|@  <|@
f <@~|@floating>@ <|@
tid v499 <|@
result [v31|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j385 
index: - 
=== Succesors ===
=== Usages ===
v399 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j385 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v499 
value: v442 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v403 
=== Usages ===
=== Predecessor ===
v396 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v499 value: v442 stateAfter: - lastLocationAccess: - #next: v403  <|@  <|@
f <@~|@floating>@ <|@
tid v520 <|@
result [v31|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j385 
index: - 
=== Succesors ===
=== Usages ===
v403 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j385 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v520 
value: j318 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v405 
=== Usages ===
=== Predecessor ===
v399 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v520 value: j318 stateAfter: - lastLocationAccess: - #next: v405  <|@  <|@
f <@~|@floating>@ <|@
tid v521 <|@
result [v31|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j385 
index: - 
=== Succesors ===
=== Usages ===
v405 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j385 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v521 
value: i14 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v407 
=== Usages ===
=== Predecessor ===
v403 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v521 value: i14 stateAfter: - lastLocationAccess: - #next: v407  <|@  <|@
f <@~|@floating>@ <|@
tid v522 <|@
result [v31|QWORD[*] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j385 
index: - 
=== Succesors ===
=== Usages ===
v407 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j385 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v522 
value: a209 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v409 
=== Usages ===
=== Predecessor ===
v405 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v522 value: a209 stateAfter: - lastLocationAccess: - #next: v409  <|@  <|@
f <@~|@floating>@ <|@
tid v523 <|@
result [v31|QWORD[*] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: j385 
index: - 
=== Succesors ===
=== Usages ===
v409 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j385 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a231 <|@
result v36|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n -
=== Inputs ===
value: a228 
=== Succesors ===
=== Usages ===
v409 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a228  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v523 
value: a231 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v411 
=== Usages ===
=== Predecessor ===
v407 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v523 value: a231 stateAfter: - lastLocationAccess: - #next: v411  <|@  <|@
f <@~|@floating>@ <|@
tid v524 <|@
result [v31|QWORD[*] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: j385 
index: - 
=== Succesors ===
=== Usages ===
v411 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j385 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v524 
value: a240 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v413 
=== Usages ===
=== Predecessor ===
v409 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v524 value: a240 stateAfter: - lastLocationAccess: - #next: v413  <|@  <|@
f <@~|@floating>@ <|@
tid v525 <|@
result [v31|QWORD[*] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: j385 
index: - 
=== Succesors ===
=== Usages ===
v413 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j385 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v525 
value: a240 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v415 
=== Usages ===
=== Predecessor ===
v411 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v525 value: a240 stateAfter: - lastLocationAccess: - #next: v415  <|@  <|@
f <@~|@floating>@ <|@
tid v526 <|@
result [v31|QWORD[*] + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: j385 
index: - 
=== Succesors ===
=== Usages ===
v415 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j385 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v526 
value: i14 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v417 
=== Usages ===
=== Predecessor ===
v413 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v526 value: i14 stateAfter: - lastLocationAccess: - #next: v417  <|@  <|@
f <@~|@floating>@ <|@
tid v527 <|@
result [v31|QWORD[*] + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: j385 
index: - 
=== Succesors ===
=== Usages ===
v417 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j385 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v527 
value: i339 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v419 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v527 value: i339 stateAfter: - lastLocationAccess: - #next: v419  <|@  <|@
f <@~|@floating>@ <|@
tid v528 <|@
result [v31|QWORD[*] + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
=== Inputs ===
base: j385 
index: - 
=== Succesors ===
=== Usages ===
v419 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j385 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v528 
value: i14 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v423 
=== Usages ===
=== Predecessor ===
v417 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v528 value: i14 stateAfter: - lastLocationAccess: - #next: v423  <|@  <|@
f <@~|@floating>@ <|@
tid v529 <|@
result [v31|QWORD[*] + 68] <|@
d <@d|@=== Debug Properties ===
displacement: 68
scale: Times1
stamp: void*
=== Inputs ===
base: j385 
index: - 
=== Succesors ===
=== Usages ===
v423 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j385 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v529 
value: i206 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v424 
=== Usages ===
=== Predecessor ===
v419 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v529 value: i206 stateAfter: - lastLocationAccess: - #next: v424  <|@  <|@
f <@~|@floating>@ <|@
tid v530 <|@
result [v31|QWORD[*] + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
scale: Times1
stamp: void*
=== Inputs ===
base: j385 
index: - 
=== Succesors ===
=== Usages ===
v424 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j385 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v530 
value: j347 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v427 
=== Usages ===
=== Predecessor ===
v423 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v530 value: j347 stateAfter: - lastLocationAccess: - #next: v427  <|@  <|@
f <@~|@floating>@ <|@
tid v531 <|@
result [v31|QWORD[*] + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
scale: Times1
stamp: void*
=== Inputs ===
base: j385 
index: - 
=== Succesors ===
=== Usages ===
v427 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j385 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v531 
value: v456 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v236 
=== Usages ===
=== Predecessor ===
v424 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v531 value: v456 stateAfter: - lastLocationAccess: - #next: v236  <|@  <|@
f <@~|@floating>@ <|@
tid v490 <|@
result [v31|QWORD[*] + 72] <|@
d <@d|@=== Debug Properties ===
displacement: 72
scale: Times1
stamp: void*
=== Inputs ===
base: j385 
index: - 
=== Succesors ===
=== Usages ===
v236 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j385 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v490 
value: i242 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a237 
=== Usages ===
=== Predecessor ===
v427 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v490 value: i242 stateAfter: - lastLocationAccess: - #next: a237  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a237 <|@
result v32|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a225 
=== Succesors ===
next: a238 
=== Usages ===
v146 
=== Predecessor ===
v236 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a225 #next: a238  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a238 <|@
result v34|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a228 
=== Succesors ===
next: v239 
=== Usages ===
=== Predecessor ===
a237 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a228 #next: v239  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v146 
=== Usages ===
=== Predecessor ===
a238 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v146  <|@  <|@
f <@*|@fixed>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 9]
stamp: void
=== Inputs ===
result: a237 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v239 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a237 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = MOVE v31|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[*] = LEA [v31|QWORD[*] + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE v33|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = MOV [v6|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v31|QWORD[*]], y: v35|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v31|QWORD[*] + 12], y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v31|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v31|QWORD[*] + 24], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|DWORD[.] = COMPRESSPOINTER (input: v34|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@286cee87 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v31|QWORD[*] + 28], y: v36|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD[*] + 32] y: -559030611 size: DWORD c: NarrowOop[CodingErrorAction@250144264] <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD[*] + 36] y: -559030611 size: DWORD c: NarrowOop[CodingErrorAction@250144264] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v31|QWORD[*] + 40], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v31|QWORD[*] + 44] y: 63 size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v31|QWORD[*] + 48], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD[*] + 68] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD[*] + 56] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD[*] + 64] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOVB [v31|QWORD[*] + 72] y: 63 size: BYTE <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7fcc7cce slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.nio.charset.Charset] <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v1|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v2|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[String:"1.4"] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v2|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@286cee87 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: long[4629700418003061965|0x404000003f8ccccd] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>} <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction CMP [v3|DWORD[.] * 8 + 12] y: 3 size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = LEA [v28|QWORD + 80] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v29|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4602588747180099502
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v28|QWORD + 272] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v28|QWORD + 336] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v28|QWORD + 400] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v28|QWORD + 464] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|QWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = MOVE v31|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[*] = LEA [v31|QWORD[*] + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE v33|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = MOV [v6|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v31|QWORD[*]], y: v35|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v31|QWORD[*] + 12], y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v31|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v31|QWORD[*] + 24], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|DWORD[.] = COMPRESSPOINTER (input: v34|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@286cee87 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v31|QWORD[*] + 28], y: v36|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD[*] + 32] y: -559030611 size: DWORD c: NarrowOop[CodingErrorAction@250144264] <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD[*] + 36] y: -559030611 size: DWORD c: NarrowOop[CodingErrorAction@250144264] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v31|QWORD[*] + 40], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v31|QWORD[*] + 44] y: 63 size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v31|QWORD[*] + 48], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD[*] + 68] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD[*] + 56] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD[*] + 64] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOVB [v31|QWORD[*] + 72] y: 63 size: BYTE <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@286cee87 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[3]{1, ., 4}] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = ARRAY_EQUALS (~array1Value: v8|QWORD[.], ~array2Value: v9|QWORD[.], ~lengthValue: v11|DWORD) {temp1: v12|QWORD[*], temp2: v13|QWORD[*], temp3: v14|QWORD, temp4: v15|QWORD, temp5: -, tempXMM: -, vectorTemp1: v16|DOUBLE, vectorTemp2: v17|DOUBLE} arrayBaseOffset: 16 arrayIndexScale: 2 kind: char <|@ <|@
      nr   -1  <|@ instruction TEST (x: v10|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = LEA [v18|QWORD + 80] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602588747180099502
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v18|QWORD + 272] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v18|QWORD + 336] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v18|QWORD + 400] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v18|QWORD + 464] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|QWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v21|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = MOVE v21|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[*] = LEA [v21|QWORD[*] + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = MOVE v23|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOV [v6|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v21|QWORD[*]], y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v21|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v21|QWORD[*] + 12], y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v21|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v21|QWORD[*] + 24], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD[.] = COMPRESSPOINTER (input: v24|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@286cee87 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v21|QWORD[*] + 28], y: v26|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v21|QWORD[*] + 32] y: -559030611 size: DWORD c: NarrowOop[CodingErrorAction@250144264] <|@ <|@
      nr   -1  <|@ instruction MOV [v21|QWORD[*] + 36] y: -559030611 size: DWORD c: NarrowOop[CodingErrorAction@250144264] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v21|QWORD[*] + 40], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v21|QWORD[*] + 44] y: 63 size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v21|QWORD[*] + 48], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v21|QWORD[*] + 68] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v21|QWORD[*] + 56] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v21|QWORD[*] + 64] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOVB [v21|QWORD[*] + 72] y: 63 size: BYTE <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v22|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4572414629676717184
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v37|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|QWORD[.]] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4572414629676717184
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|QWORD[.]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-42515|0xffffffffffff59ed]] destination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" "B8" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-45331|0xffffffffffff4eed]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #8          // sun.nio.cs.UTF_8$Encoder
     3: dup           
     4: aload_0       
     5: aconst_null   
     6: invokespecial #4          // sun.nio.cs.UTF_8$Encoder.<init>:(java.nio.charset.Charset, sun.nio.cs.UTF_8$1)void
     9: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7fcc7cce slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.nio.charset.Charset] <|@ <|@
      nr   10  <|@ instruction rax|DWORD[.] = MOV [rax|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   12  <|@ st <@st|@reference-map: [rax:0, r13:0]
live-base-pointers: []
sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 0]
locals: r13|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   14  <|@ instruction CMP rax|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[String:"1.4"] <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction rsi|DWORD[.] = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   22  <|@ instruction r14|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@286cee87 encoding: base: 0 shift: 3 <|@ <|@
      nr   24  <|@ instruction r10|QWORD = MOVE input: long[4629700418003061965|0x404000003f8ccccd] <|@ <|@
      nr   26  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>} <|@ <|@
      nr   28  <|@ st <@st|@reference-map: [rsi:0, r13:0, r14:0]
live-base-pointers: []
sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 0]
locals: r13|QWORD[.] 
>@ <|@ instruction CMP [rsi|DWORD[.] * 8 + 12] y: 3 size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   36  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 80] size: QWORD <|@ <|@
      nr   38  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4602588747180099502
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   46  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 272] instr: 0 <|@ <|@
      nr   48  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 336] instr: 0 <|@ <|@
      nr   50  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 400] instr: 0 <|@ <|@
      nr   52  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 464] instr: 0 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   58  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction rdx|QWORD[*] = LEA [rax|QWORD[*] + 56] size: QWORD <|@ <|@
      nr   62  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction rcx|QWORD = MOV [r11|QWORD + 168] size: QWORD <|@ <|@
      nr   66  <|@ instruction MOV (x: [rax|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr   68  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>;compressed} <|@ <|@
      nr   70  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: r10|QWORD) size: QWORD <|@ <|@
      nr   72  <|@ instruction MOV (x: [rax|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   74  <|@ instruction MOV (x: [rax|QWORD[*] + 24], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr   76  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@286cee87 encoding: base: 0 shift: 3 <|@ <|@
      nr   78  <|@ instruction MOV (x: [rax|QWORD[*] + 28], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   80  <|@ instruction MOV [rax|QWORD[*] + 32] y: -559030611 size: DWORD c: NarrowOop[CodingErrorAction@250144264] <|@ <|@
      nr   82  <|@ instruction MOV [rax|QWORD[*] + 36] y: -559030611 size: DWORD c: NarrowOop[CodingErrorAction@250144264] <|@ <|@
      nr   84  <|@ instruction MOV (x: [rax|QWORD[*] + 40], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   86  <|@ instruction MOVB [rax|QWORD[*] + 44] y: 63 size: BYTE <|@ <|@
      nr   88  <|@ instruction MOV (x: [rax|QWORD[*] + 48], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   90  <|@ instruction MOV [rax|QWORD[*] + 68] y: 1 size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV [rax|QWORD[*] + 56] y: 1 size: QWORD <|@ <|@
      nr   94  <|@ instruction MOV [rax|QWORD[*] + 64] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   96  <|@ instruction MOVB [rax|QWORD[*] + 72] y: 63 size: BYTE <|@ <|@
      nr   98  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@286cee87 encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[3]{1, ., 4}] <|@ <|@
      nr  108  <|@ instruction rdx|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr  110  <|@ instruction rcx|DWORD = ARRAY_EQUALS (~array1Value: rsi|QWORD[.], ~array2Value: rax|QWORD[.], ~lengthValue: rdx|DWORD) {temp1: r8|QWORD[*], temp2: r9|QWORD[*], temp3: rbx|QWORD, temp4: rdi|QWORD, temp5: -, tempXMM: -, vectorTemp1: xmm0|DOUBLE, vectorTemp2: xmm1|DOUBLE} arrayBaseOffset: 16 arrayIndexScale: 2 kind: char <|@ <|@
      nr  112  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  114  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  120  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 80] size: QWORD <|@ <|@
      nr  122  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  124  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602588747180099502
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  128  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  130  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 272] instr: 0 <|@ <|@
      nr  132  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 336] instr: 0 <|@ <|@
      nr  134  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 400] instr: 0 <|@ <|@
      nr  136  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 464] instr: 0 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  138  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  142  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction rdx|QWORD[*] = LEA [rax|QWORD[*] + 56] size: QWORD <|@ <|@
      nr  146  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction rcx|QWORD = MOV [r11|QWORD + 168] size: QWORD <|@ <|@
      nr  150  <|@ instruction MOV (x: [rax|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>;compressed} <|@ <|@
      nr  154  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: r10|QWORD) size: QWORD <|@ <|@
      nr  156  <|@ instruction MOV (x: [rax|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  158  <|@ instruction MOV (x: [rax|QWORD[*] + 24], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr  160  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@286cee87 encoding: base: 0 shift: 3 <|@ <|@
      nr  162  <|@ instruction MOV (x: [rax|QWORD[*] + 28], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV [rax|QWORD[*] + 32] y: -559030611 size: DWORD c: NarrowOop[CodingErrorAction@250144264] <|@ <|@
      nr  166  <|@ instruction MOV [rax|QWORD[*] + 36] y: -559030611 size: DWORD c: NarrowOop[CodingErrorAction@250144264] <|@ <|@
      nr  168  <|@ instruction MOV (x: [rax|QWORD[*] + 40], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  170  <|@ instruction MOVB [rax|QWORD[*] + 44] y: 63 size: BYTE <|@ <|@
      nr  172  <|@ instruction MOV (x: [rax|QWORD[*] + 48], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  174  <|@ instruction MOV [rax|QWORD[*] + 68] y: 1 size: DWORD <|@ <|@
      nr  176  <|@ instruction MOV [rax|QWORD[*] + 56] y: 1 size: QWORD <|@ <|@
      nr  178  <|@ instruction MOV [rax|QWORD[*] + 64] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  180  <|@ instruction MOVB [rax|QWORD[*] + 72] y: 63 size: BYTE <|@ <|@
      nr  182  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4572414629676717184
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  188  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  192  <|@ instruction rdx|DWORD = MOVE input: int[16|0x10] <|@ <|@
      nr  194  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  196  <|@ st <@st|@reference-map: [r13:0, r14:0]
live-base-pointers: []
sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 0]
locals: r13|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>} // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD = MOVE input: long[4629700418003061965|0x404000003f8ccccd] // MoveResolver resolve mapping <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4572414629676717184
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  208  <|@ instruction rdx|DWORD = MOVE input: int[16|0x10] <|@ <|@
      nr  210  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  212  <|@ st <@st|@reference-map: [r13:0, r14:0]
live-base-pointers: []
sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 0]
locals: r13|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>} // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD = MOVE input: long[4629700418003061965|0x404000003f8ccccd] // MoveResolver resolve mapping <|@ <|@
      nr  216  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-42515|0xffffffffffff59ed] // MoveResolver resolve mapping <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" "B8" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  228  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  230  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  232  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 0]
locals: r13|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-45331|0xffffffffffff4eed] // MoveResolver resolve mapping <|@ <|@
      nr  224  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #8          // sun.nio.cs.UTF_8$Encoder
     3: dup           
     4: aload_0       
     5: aconst_null   
     6: invokespecial #4          // sun.nio.cs.UTF_8$Encoder.<init>:(java.nio.charset.Charset, sun.nio.cs.UTF_8$1)void
     9: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7fcc7cce slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.nio.charset.Charset] <|@ <|@
      nr   10  <|@ instruction rax|DWORD[.] = MOV [rax|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   12  <|@ st <@st|@reference-map: [rax:0, r13:0]
live-base-pointers: []
sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 0]
locals: r13|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   14  <|@ instruction CMP rax|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[String:"1.4"] <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction rsi|DWORD[.] = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   22  <|@ instruction r14|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@286cee87 encoding: base: 0 shift: 3 <|@ <|@
      nr   24  <|@ instruction r10|QWORD = MOVE input: long[4629700418003061965|0x404000003f8ccccd] <|@ <|@
      nr   26  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>} <|@ <|@
      nr   28  <|@ st <@st|@reference-map: [rsi:0, r13:0, r14:0]
live-base-pointers: []
sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 0]
locals: r13|QWORD[.] 
>@ <|@ instruction CMP [rsi|DWORD[.] * 8 + 12] y: 3 size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   36  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 80] size: QWORD <|@ <|@
      nr   38  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4602588747180099502
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   46  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 272] instr: 0 <|@ <|@
      nr   48  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 336] instr: 0 <|@ <|@
      nr   50  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 400] instr: 0 <|@ <|@
      nr   52  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 464] instr: 0 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   58  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction rdx|QWORD[*] = LEA [rax|QWORD[*] + 56] size: QWORD <|@ <|@
      nr   62  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction rcx|QWORD = MOV [r11|QWORD + 168] size: QWORD <|@ <|@
      nr   66  <|@ instruction MOV (x: [rax|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr   68  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>;compressed} <|@ <|@
      nr   70  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: r10|QWORD) size: QWORD <|@ <|@
      nr   72  <|@ instruction MOV (x: [rax|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   74  <|@ instruction MOV (x: [rax|QWORD[*] + 24], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr   76  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@286cee87 encoding: base: 0 shift: 3 <|@ <|@
      nr   78  <|@ instruction MOV (x: [rax|QWORD[*] + 28], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   80  <|@ instruction MOV [rax|QWORD[*] + 32] y: -559030611 size: DWORD c: NarrowOop[CodingErrorAction@250144264] <|@ <|@
      nr   82  <|@ instruction MOV [rax|QWORD[*] + 36] y: -559030611 size: DWORD c: NarrowOop[CodingErrorAction@250144264] <|@ <|@
      nr   84  <|@ instruction MOV (x: [rax|QWORD[*] + 40], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   86  <|@ instruction MOVB [rax|QWORD[*] + 44] y: 63 size: BYTE <|@ <|@
      nr   88  <|@ instruction MOV (x: [rax|QWORD[*] + 48], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   90  <|@ instruction MOV [rax|QWORD[*] + 68] y: 1 size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV [rax|QWORD[*] + 56] y: 1 size: QWORD <|@ <|@
      nr   94  <|@ instruction MOV [rax|QWORD[*] + 64] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   96  <|@ instruction MOVB [rax|QWORD[*] + 72] y: 63 size: BYTE <|@ <|@
      nr   98  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@286cee87 encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[3]{1, ., 4}] <|@ <|@
      nr  108  <|@ instruction rdx|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr  110  <|@ instruction rcx|DWORD = ARRAY_EQUALS (~array1Value: rsi|QWORD[.], ~array2Value: rax|QWORD[.], ~lengthValue: rdx|DWORD) {temp1: r8|QWORD[*], temp2: r9|QWORD[*], temp3: rbx|QWORD, temp4: rdi|QWORD, temp5: -, tempXMM: -, vectorTemp1: xmm0|DOUBLE, vectorTemp2: xmm1|DOUBLE} arrayBaseOffset: 16 arrayIndexScale: 2 kind: char <|@ <|@
      nr  112  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  114  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  120  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 80] size: QWORD <|@ <|@
      nr  122  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  124  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602588747180099502
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  128  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  130  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 272] instr: 0 <|@ <|@
      nr  132  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 336] instr: 0 <|@ <|@
      nr  134  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 400] instr: 0 <|@ <|@
      nr  136  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 464] instr: 0 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  138  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  142  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction rdx|QWORD[*] = LEA [rax|QWORD[*] + 56] size: QWORD <|@ <|@
      nr  146  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction rcx|QWORD = MOV [r11|QWORD + 168] size: QWORD <|@ <|@
      nr  150  <|@ instruction MOV (x: [rax|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>;compressed} <|@ <|@
      nr  154  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: r10|QWORD) size: QWORD <|@ <|@
      nr  156  <|@ instruction MOV (x: [rax|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  158  <|@ instruction MOV (x: [rax|QWORD[*] + 24], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr  160  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@286cee87 encoding: base: 0 shift: 3 <|@ <|@
      nr  162  <|@ instruction MOV (x: [rax|QWORD[*] + 28], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV [rax|QWORD[*] + 32] y: -559030611 size: DWORD c: NarrowOop[CodingErrorAction@250144264] <|@ <|@
      nr  166  <|@ instruction MOV [rax|QWORD[*] + 36] y: -559030611 size: DWORD c: NarrowOop[CodingErrorAction@250144264] <|@ <|@
      nr  168  <|@ instruction MOV (x: [rax|QWORD[*] + 40], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  170  <|@ instruction MOVB [rax|QWORD[*] + 44] y: 63 size: BYTE <|@ <|@
      nr  172  <|@ instruction MOV (x: [rax|QWORD[*] + 48], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  174  <|@ instruction MOV [rax|QWORD[*] + 68] y: 1 size: DWORD <|@ <|@
      nr  176  <|@ instruction MOV [rax|QWORD[*] + 56] y: 1 size: QWORD <|@ <|@
      nr  178  <|@ instruction MOV [rax|QWORD[*] + 64] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  180  <|@ instruction MOVB [rax|QWORD[*] + 72] y: 63 size: BYTE <|@ <|@
      nr  182  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4572414629676717184
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  188  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  192  <|@ instruction rdx|DWORD = MOVE input: int[16|0x10] <|@ <|@
      nr  194  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  196  <|@ st <@st|@reference-map: [r13:0, r14:0]
live-base-pointers: []
sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 0]
locals: r13|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>} // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD = MOVE input: long[4629700418003061965|0x404000003f8ccccd] // MoveResolver resolve mapping <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4572414629676717184
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  208  <|@ instruction rdx|DWORD = MOVE input: int[16|0x10] <|@ <|@
      nr  210  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  212  <|@ st <@st|@reference-map: [r13:0, r14:0]
live-base-pointers: []
sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 0]
locals: r13|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>} // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD = MOVE input: long[4629700418003061965|0x404000003f8ccccd] // MoveResolver resolve mapping <|@ <|@
      nr  216  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-42515|0xffffffffffff59ed] // MoveResolver resolve mapping <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" "B8" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  228  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  230  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  232  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 0]
locals: r13|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-45331|0xffffffffffff4eed] // MoveResolver resolve mapping <|@ <|@
      nr  224  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #8          // sun.nio.cs.UTF_8$Encoder
     3: dup           
     4: aload_0       
     5: aconst_null   
     6: invokespecial #4          // sun.nio.cs.UTF_8$Encoder.<init>:(java.nio.charset.Charset, sun.nio.cs.UTF_8$1)void
     9: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24104c8bee48b8addeaddeaddeadde8b4068418504c481f8addeadde0f84f60200008b34c50c0000004d8bf549c1ee0349bacdcc8c3f0000404049bbaddeaddeaddeadde833cf50c000000030f84a7000000498b4760488d7050493b77700f874e020000498977600f1880100100000f1880500100000f1880900100000f1880d0010000488bf0488d5038498b8ba8000000488908c74008addeadde4c89500c448960144489701848c1ea0389501cc74020addeaddec74024addeadde44896028c6402c3f44896030c740440100000048c7403801000000c74040addeaddec640483f488bc6488b6c24104883c418850500000000c5f877c348c1e60348b8addeaddeaddeaddeba030000004c8d46104c8d48108bdad1e38bcb83e11f83e3e00f84570000004d8d04184d8d0c1948f7db90c4c17e6f0418c4c17e6f0c19c5fdefc1c4e27d17c00f85b40000004883c32075df85c90f849f000000c4c17e6f4408e0c4c17e6f4c09e0c5fdefc1c4e27d17c00f8589000000e97d0000008bd983e10783e3f80f84410000004d8d04184d8d0c1948f7db660f1f440000660f1f440000498b3c18493b3c190f85510000004883c30875ec85c90f843c000000498b7c08f8493b7c09f87537eb2e8bd9f7c1040000007410418b38413b3975234d8d40044d8d4904f7c102000000740c410fb738410fb7193bfb7507b901000000eb0233c985c90f8527010000498b4760488d7050493b77700f87c8000000498977600f1880100100000f1880500100000f1880900100000f1880d0010000488bf0488d5038498b8ba8000000488908c74008addeadde4c89500c448960144489701848c1ea0389501cc74020addeaddec74024addeadde44896028c6402c3f44896030c740440100000048c7403801000000c74040addeaddec640483f488bc6488b6c24104883c418850500000000c5f877c348beaddeaddeaddeaddeba10000000b901000000e8000000009049bbaddeaddeaddeadde49bacdcc8c3f00004040e99ffdffff48beaddeaddeaddeaddeba10000000b901000000e8000000009049bbaddeaddeaddeadde49bacdcc8c3f00004040e925ffffff41baed59ffff4589979c0200004d89a7a8020000e8000000009041baed4effffebe4e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7fcc7cce slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.nio.charset.Charset]  <||@
  Comment 51 {Object[Class:java.nio.charset.Charset]}  <||@
  Comment 61 10 rax|DWORD[.] = MOV [rax|QWORD[.] + 104] size: DWORD  <||@
  Comment 64 12 NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:0]  <||@
  Comment 64 [rax:0, r13:0]at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |r13|QWORD[.]   <||@
  Comment 64 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 68 14 CMP rax|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[String:"1.4"]  <||@
  Comment 68 {NarrowOop[String:"1.4"]}  <||@
  Comment 74 16 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 80 block B2 null  <||@
  Comment 80 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 80 20 rsi|DWORD[.] = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 87 22 r14|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@286cee87 encoding: base: 0 shift: 3  <||@
  Comment 94 24 r10|QWORD = MOVE input: long[4629700418003061965|0x404000003f8ccccd]  <||@
  Comment 104 26 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>}  <||@
  Comment 104 {meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>}}  <||@
  Comment 114 28 CMP [rsi|DWORD[.] * 8 + 12] y: 3 size: DWORD state [bci:0]  <||@
  Comment 114 [rsi:0, r13:0, r14:0]at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |r13|QWORD[.]   <||@
  Comment 114 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 122 30 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B10  <||@
  Comment 128 block B10 null  <||@
  Comment 128 32 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 128 34 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 132 36 rsi|QWORD = LEA [rax|QWORD + 80] size: QWORD  <||@
  Comment 136 38 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 140 40 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12  <||@
  Comment 146 block B12 null  <||@
  Comment 146 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 146 44 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 150 46 AMD64PREFETCH ~[rax|QWORD + 272] instr: 0  <||@
  Comment 157 48 AMD64PREFETCH ~[rax|QWORD + 336] instr: 0  <||@
  Comment 164 50 AMD64PREFETCH ~[rax|QWORD + 400] instr: 0  <||@
  Comment 171 52 AMD64PREFETCH ~[rax|QWORD + 464] instr: 0  <||@
  Comment 178 -1 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 178 54 JUMP ~[] destination: B12 -> B13  <||@
  Comment 178 block B13 null  <||@
  Comment 178 56 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 178 58 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 181 60 rdx|QWORD[*] = LEA [rax|QWORD[*] + 56] size: QWORD  <||@
  Comment 185 62 rdx|QWORD[.] = MOVE rdx|QWORD[*] moveKind: QWORD  <||@
  Comment 185 64 rcx|QWORD = MOV [r11|QWORD + 168] size: QWORD  <||@
  Comment 192 66 MOV (x: [rax|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 195 68 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>;compressed}  <||@
  Comment 195 {meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>;compressed}}  <||@
  Comment 202 70 MOV (x: [rax|QWORD[*] + 12], y: r10|QWORD) size: QWORD  <||@
  Comment 206 72 MOV (x: [rax|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 210 74 MOV (x: [rax|QWORD[*] + 24], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 214 76 rdx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@286cee87 encoding: base: 0 shift: 3  <||@
  Comment 218 78 MOV (x: [rax|QWORD[*] + 28], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 221 80 MOV [rax|QWORD[*] + 32] y: -559030611 size: DWORD c: NarrowOop[CodingErrorAction@250144264]  <||@
  Comment 221 {NarrowOop[CodingErrorAction@250144264]}  <||@
  Comment 228 82 MOV [rax|QWORD[*] + 36] y: -559030611 size: DWORD c: NarrowOop[CodingErrorAction@250144264]  <||@
  Comment 228 {NarrowOop[CodingErrorAction@250144264]}  <||@
  Comment 235 84 MOV (x: [rax|QWORD[*] + 40], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 239 86 MOVB [rax|QWORD[*] + 44] y: 63 size: BYTE  <||@
  Comment 243 88 MOV (x: [rax|QWORD[*] + 48], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 247 90 MOV [rax|QWORD[*] + 68] y: 1 size: DWORD  <||@
  Comment 254 92 MOV [rax|QWORD[*] + 56] y: 1 size: QWORD  <||@
  Comment 262 94 MOV [rax|QWORD[*] + 64] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 262 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 269 96 MOVB [rax|QWORD[*] + 72] y: 63 size: BYTE  <||@
  Comment 273 98 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 276 100 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 285 12  <||@
  Comment 295 block B3 null  <||@
  Comment 295 102 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 295 104 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@286cee87 encoding: base: 0 shift: 3  <||@
  Comment 299 106 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[3]{1, ., 4}]  <||@
  Comment 299 {Object[char[3]{1, ., 4}]}  <||@
  Comment 309 108 rdx|DWORD = MOVE input: int[3|0x3]  <||@
  Comment 314 110 rcx|DWORD = ARRAY_EQUALS (~array1Value: rsi|QWORD[.], ~array2Value: rax|QWORD[.], ~lengthValue: rdx|DWORD) {temp1: r8|QWORD[*], temp2: r9|QWORD[*], temp3: rbx|QWORD, temp4: rdi|QWORD, temp5: -, tempXMM: -, vectorTemp1: xmm0|DOUBLE, vectorTemp2: xmm1|DOUBLE} arrayBaseOffset: 16 arrayIndexScale: 2 kind: char  <||@
  Comment 561 112 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 563 114 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B8  <||@
  Comment 569 block B4 null  <||@
  Comment 569 116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 569 118 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 573 120 rsi|QWORD = LEA [rax|QWORD + 80] size: QWORD  <||@
  Comment 577 122 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 581 124 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 587 block B6 null  <||@
  Comment 587 126 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 587 128 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 591 130 AMD64PREFETCH ~[rax|QWORD + 272] instr: 0  <||@
  Comment 598 132 AMD64PREFETCH ~[rax|QWORD + 336] instr: 0  <||@
  Comment 605 134 AMD64PREFETCH ~[rax|QWORD + 400] instr: 0  <||@
  Comment 612 136 AMD64PREFETCH ~[rax|QWORD + 464] instr: 0  <||@
  Comment 619 -1 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 619 138 JUMP ~[] destination: B6 -> B7  <||@
  Comment 619 block B7 null  <||@
  Comment 619 140 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 619 142 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 622 144 rdx|QWORD[*] = LEA [rax|QWORD[*] + 56] size: QWORD  <||@
  Comment 626 146 rdx|QWORD[.] = MOVE rdx|QWORD[*] moveKind: QWORD  <||@
  Comment 626 148 rcx|QWORD = MOV [r11|QWORD + 168] size: QWORD  <||@
  Comment 633 150 MOV (x: [rax|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 636 152 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>;compressed}  <||@
  Comment 636 {meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>;compressed}}  <||@
  Comment 643 154 MOV (x: [rax|QWORD[*] + 12], y: r10|QWORD) size: QWORD  <||@
  Comment 647 156 MOV (x: [rax|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 651 158 MOV (x: [rax|QWORD[*] + 24], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 655 160 rdx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@286cee87 encoding: base: 0 shift: 3  <||@
  Comment 659 162 MOV (x: [rax|QWORD[*] + 28], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 662 164 MOV [rax|QWORD[*] + 32] y: -559030611 size: DWORD c: NarrowOop[CodingErrorAction@250144264]  <||@
  Comment 662 {NarrowOop[CodingErrorAction@250144264]}  <||@
  Comment 669 166 MOV [rax|QWORD[*] + 36] y: -559030611 size: DWORD c: NarrowOop[CodingErrorAction@250144264]  <||@
  Comment 669 {NarrowOop[CodingErrorAction@250144264]}  <||@
  Comment 676 168 MOV (x: [rax|QWORD[*] + 40], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 680 170 MOVB [rax|QWORD[*] + 44] y: 63 size: BYTE  <||@
  Comment 684 172 MOV (x: [rax|QWORD[*] + 48], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 688 174 MOV [rax|QWORD[*] + 68] y: 1 size: DWORD  <||@
  Comment 695 176 MOV [rax|QWORD[*] + 56] y: 1 size: QWORD  <||@
  Comment 703 178 MOV [rax|QWORD[*] + 64] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 703 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 710 180 MOVB [rax|QWORD[*] + 72] y: 63 size: BYTE  <||@
  Comment 714 182 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 717 184 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 726 12  <||@
  Comment 736 block B11 null  <||@
  Comment 736 186 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 736 188 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 736 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 746 192 rdx|DWORD = MOVE input: int[16|0x10]  <||@
  Comment 751 194 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 756 196 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 756 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 761 [r13:0, r14:0]at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |r13|QWORD[.]   <||@
  Comment 762 -1 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 762 -1 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>}  <||@
  Comment 762 {meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>}}  <||@
  Comment 772 -1 r10|QWORD = MOVE input: long[4629700418003061965|0x404000003f8ccccd]  <||@
  Comment 782 200 JUMP ~[] destination: B11 -> B13  <||@
  Comment 787 block B5 null  <||@
  Comment 787 202 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 787 204 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 787 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 797 208 rdx|DWORD = MOVE input: int[16|0x10]  <||@
  Comment 802 210 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 807 212 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 807 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 812 [r13:0, r14:0]at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |r13|QWORD[.]   <||@
  Comment 813 -1 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 813 -1 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>}  <||@
  Comment 813 {meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>}}  <||@
  Comment 823 -1 r10|QWORD = MOVE input: long[4629700418003061965|0x404000003f8ccccd]  <||@
  Comment 833 216 JUMP ~[] destination: B5 -> B7  <||@
  Comment 838 block B1 null  <||@
  Comment 838 218 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 838 -1 r10|DWORD = MOVE input: int[-42515|0xffffffffffff59ed]  <||@
  Comment 844 220 JUMP ~[] destination: B1 -> B9  <||@
  Comment 844 block B9 null  <||@
  Comment 844 226 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 844 228 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 851 230 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 858 232 DEOPT info [bci:0]  <||@
  Comment 858 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 863 [r13:0]at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |r13|QWORD[.]   <||@
  Comment 864 block B8 null  <||@
  Comment 864 222 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 864 -1 r10|DWORD = MOVE input: int[-45331|0xffffffffffff4eed]  <||@
  Comment 870 224 JUMP ~[] destination: B8 -> B9  <||@
  Comment 872 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 872 4  <||@
  Comment 878 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 878 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-8716[sun.nio.cs.UTF_8.newEncoder()]"
  method "HotSpotCompilation-8716[sun.nio.cs.UTF_8.newEncoder()]"
  date 1527005196577
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 106c7de60 448b560849c1e203493bc20f85ef7fb8ff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24104c8bee48b810f215c0060000008b4068418504c481f8d40400d80f84f60200008b34c50c0000004d8bf549c1ee0349bacdcc8c3f0000404049bba08e02c007000000833cf50c000000030f84a7000000498b4760488d7050493b77700f874e020000498977600f1880100100000f1880500100000f1880900100000f1880d0010000488bf0488d5038498b8ba8000000488908c74008d45100f84c89500c448960144489701848c1ea0389501cc74020cd6d00d8c74024cd6d00d844896028c6402c3f44896030c740440100000048c7403801000000c74040f50000f8c640483f488bc6488b6c24104883c41885058310c1fdc5f877c348c1e60348b8383e07c006000000ba030000004c8d46104c8d48108bdad1e38bcb83e11f83e3e00f84570000004d8d04184d8d0c1948f7db90c4c17e6f0418c4c17e6f0c19c5fdefc1c4e27d17c00f85b40000004883c32075df85c90f849f000000c4c17e6f4408e0c4c17e6f4c09e0c5fdefc1c4e27d17c00f8589000000e97d0000008bd983e10783e3f80f84410000004d8d04184d8d0c1948f7db660f1f440000660f1f440000498b3c18493b3c190f85510000004883c30875ec85c90f843c000000498b7c08f8493b7c09f87537eb2e8bd9f7c1040000007410418b38413b3975234d8d40044d8d4904f7c102000000740c410fb738410fb7193bfb7507b901000000eb0233c985c90f8527010000498b4760488d7050493b77700f87c8000000498977600f1880100100000f1880500100000f1880900100000f1880d0010000488bf0488d5038498b8ba8000000488908c74008d45100f84c89500c448960144489701848c1ea0389501cc74020cd6d00d8c74024cd6d00d844896028c6402c3f44896030c740440100000048c7403801000000c74040f50000f8c640483f488bc6488b6c24104883c4188505ca0ec1fdc5f877c348be680b00c007000000ba10000000b901000000e8878c31009049bba08e02c00700000049bacdcc8c3f00004040e99ffdffff48be680b00c007000000ba10000000b901000000e8548c31009049bba08e02c00700000049bacdcc8c3f00004040e925ffffff41baed59ffff4589979c0200004d89a7a8020000e83f94b8ff9041baed4effffebe4e853c4fcff90e82d93b8ff90f4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7fcc7cce slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.nio.charset.Charset]  <||@
  Comment 51 {Object[Class:java.nio.charset.Charset]}  <||@
  Comment 61 10 rax|DWORD[.] = MOV [rax|QWORD[.] + 104] size: DWORD  <||@
  Comment 64 12 NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:0]  <||@
  Comment 64 [rax:0, r13:0]at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |r13|QWORD[.]   <||@
  Comment 64 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 68 14 CMP rax|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[String:"1.4"]  <||@
  Comment 68 {NarrowOop[String:"1.4"]}  <||@
  Comment 74 16 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 80 block B2 null  <||@
  Comment 80 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 80 20 rsi|DWORD[.] = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 87 22 r14|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@286cee87 encoding: base: 0 shift: 3  <||@
  Comment 94 24 r10|QWORD = MOVE input: long[4629700418003061965|0x404000003f8ccccd]  <||@
  Comment 104 26 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>}  <||@
  Comment 104 {meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>}}  <||@
  Comment 114 28 CMP [rsi|DWORD[.] * 8 + 12] y: 3 size: DWORD state [bci:0]  <||@
  Comment 114 [rsi:0, r13:0, r14:0]at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |r13|QWORD[.]   <||@
  Comment 114 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 122 30 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B10  <||@
  Comment 128 block B10 null  <||@
  Comment 128 32 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 128 34 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 132 36 rsi|QWORD = LEA [rax|QWORD + 80] size: QWORD  <||@
  Comment 136 38 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 140 40 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12  <||@
  Comment 146 block B12 null  <||@
  Comment 146 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 146 44 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 150 46 AMD64PREFETCH ~[rax|QWORD + 272] instr: 0  <||@
  Comment 157 48 AMD64PREFETCH ~[rax|QWORD + 336] instr: 0  <||@
  Comment 164 50 AMD64PREFETCH ~[rax|QWORD + 400] instr: 0  <||@
  Comment 171 52 AMD64PREFETCH ~[rax|QWORD + 464] instr: 0  <||@
  Comment 178 -1 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 178 54 JUMP ~[] destination: B12 -> B13  <||@
  Comment 178 block B13 null  <||@
  Comment 178 56 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 178 58 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 181 60 rdx|QWORD[*] = LEA [rax|QWORD[*] + 56] size: QWORD  <||@
  Comment 185 62 rdx|QWORD[.] = MOVE rdx|QWORD[*] moveKind: QWORD  <||@
  Comment 185 64 rcx|QWORD = MOV [r11|QWORD + 168] size: QWORD  <||@
  Comment 192 66 MOV (x: [rax|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 195 68 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>;compressed}  <||@
  Comment 195 {meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>;compressed}}  <||@
  Comment 202 70 MOV (x: [rax|QWORD[*] + 12], y: r10|QWORD) size: QWORD  <||@
  Comment 206 72 MOV (x: [rax|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 210 74 MOV (x: [rax|QWORD[*] + 24], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 214 76 rdx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@286cee87 encoding: base: 0 shift: 3  <||@
  Comment 218 78 MOV (x: [rax|QWORD[*] + 28], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 221 80 MOV [rax|QWORD[*] + 32] y: -559030611 size: DWORD c: NarrowOop[CodingErrorAction@250144264]  <||@
  Comment 221 {NarrowOop[CodingErrorAction@250144264]}  <||@
  Comment 228 82 MOV [rax|QWORD[*] + 36] y: -559030611 size: DWORD c: NarrowOop[CodingErrorAction@250144264]  <||@
  Comment 228 {NarrowOop[CodingErrorAction@250144264]}  <||@
  Comment 235 84 MOV (x: [rax|QWORD[*] + 40], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 239 86 MOVB [rax|QWORD[*] + 44] y: 63 size: BYTE  <||@
  Comment 243 88 MOV (x: [rax|QWORD[*] + 48], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 247 90 MOV [rax|QWORD[*] + 68] y: 1 size: DWORD  <||@
  Comment 254 92 MOV [rax|QWORD[*] + 56] y: 1 size: QWORD  <||@
  Comment 262 94 MOV [rax|QWORD[*] + 64] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 262 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 269 96 MOVB [rax|QWORD[*] + 72] y: 63 size: BYTE  <||@
  Comment 273 98 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 276 100 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 285 12  <||@
  Comment 295 block B3 null  <||@
  Comment 295 102 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 295 104 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@286cee87 encoding: base: 0 shift: 3  <||@
  Comment 299 106 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[3]{1, ., 4}]  <||@
  Comment 299 {Object[char[3]{1, ., 4}]}  <||@
  Comment 309 108 rdx|DWORD = MOVE input: int[3|0x3]  <||@
  Comment 314 110 rcx|DWORD = ARRAY_EQUALS (~array1Value: rsi|QWORD[.], ~array2Value: rax|QWORD[.], ~lengthValue: rdx|DWORD) {temp1: r8|QWORD[*], temp2: r9|QWORD[*], temp3: rbx|QWORD, temp4: rdi|QWORD, temp5: -, tempXMM: -, vectorTemp1: xmm0|DOUBLE, vectorTemp2: xmm1|DOUBLE} arrayBaseOffset: 16 arrayIndexScale: 2 kind: char  <||@
  Comment 561 112 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 563 114 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B8  <||@
  Comment 569 block B4 null  <||@
  Comment 569 116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 569 118 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 573 120 rsi|QWORD = LEA [rax|QWORD + 80] size: QWORD  <||@
  Comment 577 122 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 581 124 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 587 block B6 null  <||@
  Comment 587 126 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 587 128 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 591 130 AMD64PREFETCH ~[rax|QWORD + 272] instr: 0  <||@
  Comment 598 132 AMD64PREFETCH ~[rax|QWORD + 336] instr: 0  <||@
  Comment 605 134 AMD64PREFETCH ~[rax|QWORD + 400] instr: 0  <||@
  Comment 612 136 AMD64PREFETCH ~[rax|QWORD + 464] instr: 0  <||@
  Comment 619 -1 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 619 138 JUMP ~[] destination: B6 -> B7  <||@
  Comment 619 block B7 null  <||@
  Comment 619 140 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 619 142 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 622 144 rdx|QWORD[*] = LEA [rax|QWORD[*] + 56] size: QWORD  <||@
  Comment 626 146 rdx|QWORD[.] = MOVE rdx|QWORD[*] moveKind: QWORD  <||@
  Comment 626 148 rcx|QWORD = MOV [r11|QWORD + 168] size: QWORD  <||@
  Comment 633 150 MOV (x: [rax|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 636 152 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>;compressed}  <||@
  Comment 636 {meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>;compressed}}  <||@
  Comment 643 154 MOV (x: [rax|QWORD[*] + 12], y: r10|QWORD) size: QWORD  <||@
  Comment 647 156 MOV (x: [rax|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 651 158 MOV (x: [rax|QWORD[*] + 24], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 655 160 rdx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@286cee87 encoding: base: 0 shift: 3  <||@
  Comment 659 162 MOV (x: [rax|QWORD[*] + 28], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 662 164 MOV [rax|QWORD[*] + 32] y: -559030611 size: DWORD c: NarrowOop[CodingErrorAction@250144264]  <||@
  Comment 662 {NarrowOop[CodingErrorAction@250144264]}  <||@
  Comment 669 166 MOV [rax|QWORD[*] + 36] y: -559030611 size: DWORD c: NarrowOop[CodingErrorAction@250144264]  <||@
  Comment 669 {NarrowOop[CodingErrorAction@250144264]}  <||@
  Comment 676 168 MOV (x: [rax|QWORD[*] + 40], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 680 170 MOVB [rax|QWORD[*] + 44] y: 63 size: BYTE  <||@
  Comment 684 172 MOV (x: [rax|QWORD[*] + 48], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 688 174 MOV [rax|QWORD[*] + 68] y: 1 size: DWORD  <||@
  Comment 695 176 MOV [rax|QWORD[*] + 56] y: 1 size: QWORD  <||@
  Comment 703 178 MOV [rax|QWORD[*] + 64] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 703 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 710 180 MOVB [rax|QWORD[*] + 72] y: 63 size: BYTE  <||@
  Comment 714 182 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 717 184 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 726 12  <||@
  Comment 736 block B11 null  <||@
  Comment 736 186 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 736 188 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 736 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 746 192 rdx|DWORD = MOVE input: int[16|0x10]  <||@
  Comment 751 194 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 756 196 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 756 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 761 [r13:0, r14:0]at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |r13|QWORD[.]   <||@
  Comment 762 -1 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 762 -1 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>}  <||@
  Comment 762 {meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>}}  <||@
  Comment 772 -1 r10|QWORD = MOVE input: long[4629700418003061965|0x404000003f8ccccd]  <||@
  Comment 782 200 JUMP ~[] destination: B11 -> B13  <||@
  Comment 787 block B5 null  <||@
  Comment 787 202 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 787 204 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 787 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 797 208 rdx|DWORD = MOVE input: int[16|0x10]  <||@
  Comment 802 210 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 807 212 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 807 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 812 [r13:0, r14:0]at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |r13|QWORD[.]   <||@
  Comment 813 -1 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 813 -1 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>}  <||@
  Comment 813 {meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>}}  <||@
  Comment 823 -1 r10|QWORD = MOVE input: long[4629700418003061965|0x404000003f8ccccd]  <||@
  Comment 833 216 JUMP ~[] destination: B5 -> B7  <||@
  Comment 838 block B1 null  <||@
  Comment 838 218 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 838 -1 r10|DWORD = MOVE input: int[-42515|0xffffffffffff59ed]  <||@
  Comment 844 220 JUMP ~[] destination: B1 -> B9  <||@
  Comment 844 block B9 null  <||@
  Comment 844 226 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 844 228 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 851 230 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 858 232 DEOPT info [bci:0]  <||@
  Comment 858 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 863 [r13:0]at sun.nio.cs.UTF_8.newEncoder(UTF_8.java:72) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |r13|QWORD[.]   <||@
  Comment 864 block B8 null  <||@
  Comment 864 222 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 864 -1 r10|DWORD = MOVE input: int[-45331|0xffffffffffff4eed]  <||@
  Comment 870 224 JUMP ~[] destination: B8 -> B9  <||@
  Comment 872 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 872 4  <||@
  Comment 878 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 878 5  <||@
  HexCodeFile>>> <|@
end_nmethod
