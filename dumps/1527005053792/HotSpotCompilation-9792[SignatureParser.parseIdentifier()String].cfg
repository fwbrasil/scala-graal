begin_compilation
  name " HotSpotCompilation-9792[sun.reflect.generics.parser.SignatureParser.parseIdentifier()]"
  method "HotSpotCompilation-9792[sun.reflect.generics.parser.SignatureParser.parseIdentifier()]"
  date 1527005221432
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B141" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a1674 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a1674  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lsun/reflect/generics/parser/SignatureParser;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 ?70 ?9 ?328 ?242 v1694 ?243 ?72 v1693 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1693 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1674 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1674 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SignatureParser.input
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.current(SignatureParser.java:95) [bci: 27]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 9]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1693 
=== Succesors ===
next: i1675 
=== Usages ===
a396 v1695 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1693 #next: i1675  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<SignatureParser.parseIdentifier()>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: SignatureParser.java
sourceLine: 255
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - 
=== Succesors ===
=== Usages ===
v744 a794 i1675 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v1695 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1674 
=== Succesors ===
=== Usages ===
i1675 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1674  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1675 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.current(SignatureParser.java:95) [bci: 34]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 9]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v1695 
=== Succesors ===
next: i1676 
=== Usages ===
v455 v425 
=== Predecessor ===
a1674 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v1695 #next: i1676  <|@  <|@
f <@~|@floating>@ <|@
tid v1694 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1676 v434 v478 v489 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1676 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SignatureParser.index
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.current(SignatureParser.java:95) [bci: 31]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 9]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1694 
=== Succesors ===
next: v531 
=== Usages ===
v425 v1697 i240 
=== Predecessor ===
i1675 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1694 #next: v531  <|@  <|@
f <@~|@floating>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.current(SignatureParser.java:95) [bci: 34]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:257) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1676 
y: i1675 
=== Succesors ===
=== Usages ===
v531 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1676 y: i1675  <|@  <|@
f <@~|@floating>@ <|@
tid a741 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v744 v758 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j821 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1594 j1541 j1481 j1423 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v813 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a906 a1008 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i913 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i914 i1015 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i883 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i884 i987 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i890 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v891 v993 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.current(SignatureParser.java:95) [bci: 34]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:257) [bci: 19]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v425 
=== Succesors ===
trueSuccessor: v528 
falseSuccessor: v530 
=== Usages ===
=== Predecessor ===
i1676 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v425 #trueSuccessor: v528 #falseSuccessor: v530  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B140" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.current(SignatureParser.java:95) [bci: 34]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:257) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1677 
=== Usages ===
i1677 
=== Predecessor ===
v531 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1677  <|@  <|@
f <@~|@floating>@ <|@
tid a396 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.current(SignatureParser.java:95) [bci: 27]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 9]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1674 
=== Succesors ===
=== Usages ===
v1697 v1699 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1674  <|@  <|@
f <@~|@floating>@ <|@
tid v1697 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a396 
index: i1676 
=== Succesors ===
=== Usages ===
i1677 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a396 index: i1676  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1677 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.current(SignatureParser.java:95) [bci: 34]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:257) [bci: 19]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v528 
address: v1697 
=== Succesors ===
next: v535 
=== Usages ===
i433 j494 v867 
=== Predecessor ===
v528 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v528 address: v1697 #next: v535  <|@  <|@
f <@~|@floating>@ <|@
tid i433 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.current(SignatureParser.java:95) [bci: 34]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:257) [bci: 19]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1677 
=== Succesors ===
=== Usages ===
v224 ?362 v233 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1677  <|@  <|@
f <@~|@floating>@ <|@
tid i47 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.CharacterData.of(CharacterData.java:77) [bci: 4]
at java.lang.Character.isWhitespace(Character.java:6789) [bci: 1]
at java.lang.Character.isWhitespace(Character.java:6757) [bci: 1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 12]
rawvalue: -256
stableDimension: 0
stamp: i32 [-256] ⇊00000000ffffff00 ⇈00000000ffffff00
stampKind: i32
value: int[-256|0xffffffffffffff00]
=== Inputs ===
=== Succesors ===
=== Usages ===
v48 v233 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterData.of(CharacterData.java:77) [bci: 4]
at java.lang.Character.isWhitespace(Character.java:6789) [bci: 1]
at java.lang.Character.isWhitespace(Character.java:6757) [bci: 1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 12]
stamp: void
=== Inputs ===
x: i433 
y: i47 
=== Succesors ===
=== Usages ===
v535 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i433 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterData.of(CharacterData.java:77) [bci: 4]
at java.lang.Character.isWhitespace(Character.java:6789) [bci: 1]
at java.lang.Character.isWhitespace(Character.java:6757) [bci: 1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 12]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v233 
=== Succesors ===
trueSuccessor: v532 
falseSuccessor: v534 
=== Usages ===
=== Predecessor ===
i1677 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v233 #trueSuccessor: v532 #falseSuccessor: v534  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v532 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterData.of(CharacterData.java:77) [bci: 4]
at java.lang.Character.isWhitespace(Character.java:6789) [bci: 1]
at java.lang.Character.isWhitespace(Character.java:6757) [bci: 1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1678 
=== Usages ===
i1678 
=== Predecessor ===
v535 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1678  <|@  <|@
f <@~|@floating>@ <|@
tid a75 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.CharacterDataLatin1.getProperties(CharacterDataLatin1.java:72) [bci: 3]
at java.lang.CharacterDataLatin1.isWhitespace(CharacterDataLatin1.java:202) [bci: 2]
at java.lang.Character.isWhitespace(Character.java:6789) [bci: 5]
at java.lang.Character.isWhitespace(Character.java:6757) [bci: 1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 12]
rawvalue: int[256]{1207963663, 1207963663, 1207963663, 1207963663, 1207963663, ...}
stableDimension: 0
stamp: a!# [I
stampKind: a -
value: Object[int[256]{1207963663, 1207963663, 1207963663, 1207963663, 1207963663, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1698 v1696 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j494 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.lang.CharacterDataLatin1.getProperties(CharacterDataLatin1.java:72) [bci: 7]
at java.lang.CharacterDataLatin1.isWhitespace(CharacterDataLatin1.java:202) [bci: 2]
at java.lang.Character.isWhitespace(Character.java:6789) [bci: 5]
at java.lang.Character.isWhitespace(Character.java:6757) [bci: 1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 12]
resultBits: 64
stamp: i64 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1677 
=== Succesors ===
=== Usages ===
v1696 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1677  <|@  <|@
f <@~|@floating>@ <|@
tid v1696 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a75 
index: j494 
=== Succesors ===
=== Usages ===
i1678 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a75 index: j494  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1678 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.lang.CharacterDataLatin1.getProperties(CharacterDataLatin1.java:72) [bci: 7]
at java.lang.CharacterDataLatin1.isWhitespace(CharacterDataLatin1.java:202) [bci: 2]
at java.lang.Character.isWhitespace(Character.java:6789) [bci: 5]
at java.lang.Character.isWhitespace(Character.java:6757) [bci: 1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 12]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v532 
address: v1696 
=== Succesors ===
next: v539 
=== Usages ===
i235 
=== Predecessor ===
v532 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v532 address: v1696 #next: v539  <|@  <|@
f <@~|@floating>@ <|@
tid i55 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.CharacterDataLatin1.isWhitespace(CharacterDataLatin1.java:203) [bci: 7]
at java.lang.Character.isWhitespace(Character.java:6789) [bci: 5]
at java.lang.Character.isWhitespace(Character.java:6757) [bci: 1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 12]
rawvalue: 28672
stableDimension: 0
stamp: i32 [28672] ⇊0000000000007000 ⇈0000000000007000
stampKind: i32
value: int[28672|0x7000]
=== Inputs ===
=== Succesors ===
=== Usages ===
i56 i235 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i235 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.lang.CharacterDataLatin1.isWhitespace(CharacterDataLatin1.java:203) [bci: 10]
at java.lang.Character.isWhitespace(Character.java:6789) [bci: 5]
at java.lang.Character.isWhitespace(Character.java:6757) [bci: 1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 12]
stamp: i32 [0 - 28672] ⇈0000000000007000
=== Inputs ===
x: i1678 
y: i55 
=== Succesors ===
=== Usages ===
v236 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i1678 y: i55  <|@  <|@
f <@~|@floating>@ <|@
tid i57 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.CharacterDataLatin1.isWhitespace(CharacterDataLatin1.java:203) [bci: 11]
at java.lang.Character.isWhitespace(Character.java:6789) [bci: 5]
at java.lang.Character.isWhitespace(Character.java:6757) [bci: 1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 12]
rawvalue: 16384
stableDimension: 0
stamp: i32 [16384] ⇊0000000000004000 ⇈0000000000004000
stampKind: i32
value: int[16384|0x4000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v58 v236 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.CharacterDataLatin1.isWhitespace(CharacterDataLatin1.java:203) [bci: 14]
at java.lang.Character.isWhitespace(Character.java:6789) [bci: 5]
at java.lang.Character.isWhitespace(Character.java:6757) [bci: 1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 12]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i235 
y: i57 
=== Succesors ===
=== Usages ===
v539 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i235 y: i57  <|@  <|@
f <@*|@fixed>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterDataLatin1.isWhitespace(CharacterDataLatin1.java:203) [bci: 14]
at java.lang.Character.isWhitespace(Character.java:6789) [bci: 5]
at java.lang.Character.isWhitespace(Character.java:6757) [bci: 1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 12]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v236 
=== Succesors ===
trueSuccessor: v538 
falseSuccessor: v536 
=== Usages ===
=== Predecessor ===
i1678 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v236 #trueSuccessor: v538 #falseSuccessor: v536  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B142" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterDataLatin1.isWhitespace(CharacterDataLatin1.java:203) [bci: 14]
at java.lang.Character.isWhitespace(Character.java:6789) [bci: 5]
at java.lang.Character.isWhitespace(Character.java:6757) [bci: 1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v745 
=== Usages ===
=== Predecessor ===
v539 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v745  <|@  <|@
f <@~|@floating>@ <|@
tid i746 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -108307
stableDimension: 0
stamp: i32 [-108307] ⇊00000000fffe58ed ⇈00000000fffe58ed
stampKind: i32
value: int[-108307|0xfffffffffffe58ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i742 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v745 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v738 
=== Predecessor ===
v538 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterDataLatin1.isWhitespace(CharacterDataLatin1.java:203) [bci: 14]
at java.lang.Character.isWhitespace(Character.java:6789) [bci: 5]
at java.lang.Character.isWhitespace(Character.java:6757) [bci: 1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v224 
=== Usages ===
=== Predecessor ===
v539 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v224  <|@  <|@
f <@~|@floating>@ <|@
tid v1101 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v979 v1074 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v969 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/String;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j1066 j1673 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i154 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:150) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i155 a953 a1050 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1097 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1098 j1104 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i79 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i519 a1008 a906 v157 v170 v178 v188 v1080 v985 v877 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid a81 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@915094e
hasIdentity: true
objectId: -1
stamp: a!# Ljava/lang/StringBuilder;
type: HotSpotType<Ljava/lang/StringBuilder;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?213 ?332 ?344 ?243 ?9 ?208 ?72 ?32 ?288 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1087 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v823 v863 v933 v1031 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j814 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v819 v860 v930 v1028 v1127 v1254 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i587 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 16
stableDimension: 0
stamp: i32 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
v859 v818 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i66 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.advance(SignatureParser.java:101) [bci: 0]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:269) [bci: 104]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i68 v351 i108 v118 i153 v166 i240 i297 ?288 i986 i882 a953 a1050 a794 a840 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1084 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
a794 a840 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v780 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a794 a840 a953 a1050 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1081 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 48
stableDimension: 0
stamp: i64 [48] ⇊0000000000000030 ⇈0000000000000030
stampKind: i64
value: long[48|0x30]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1082 j1089 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
keyProbabilities: [D@1f75993f
keySuccessors: [I@7c1618ad
keys: [I@7f24328
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:258) [bci: 24]
stamp: void
=== Inputs ===
value: i433 
=== Succesors ===
successors: v226 v227 v228 
=== Usages ===
=== Predecessor ===
v536 >@ <|@
instruction <@IntegerSwitch|@org.graalvm.compiler.nodes.extended.IntegerSwitchNode>@ value: i433 #successors: v226 v227 v228  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B142" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:258) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v751 
=== Usages ===
=== Predecessor ===
v224 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v751  <|@  <|@
f <@~|@floating>@ <|@
tid i752 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -57619
stableDimension: 0
stamp: i32 [-57619] ⇊00000000ffff1eed ⇈00000000ffff1eed
stampKind: i32
value: int[-57619|0xffffffffffff1eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i742 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v751 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v738 
=== Predecessor ===
v226 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4593346058499059860
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: j782 
=== Usages ===
=== Predecessor ===
v224 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j782  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j782 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j801 
=== Usages ===
v1706 v1707 
=== Predecessor ===
v227 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j801  <|@  <|@
f <@~|@floating>@ <|@
tid v1706 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j782 
index: - 
=== Succesors ===
=== Usages ===
j801 v803 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j782 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j801 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1706 
=== Succesors ===
next: j802 
=== Usages ===
j1082 j807 v1743 
=== Predecessor ===
j782 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1706 #next: j802  <|@  <|@
f <@~|@floating>@ <|@
tid v1707 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j782 
index: - 
=== Succesors ===
=== Usages ===
j802 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j782 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j802 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1707 
=== Succesors ===
next: v790 
=== Usages ===
v787 
=== Predecessor ===
j801 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1707 #next: v790  <|@  <|@
f <@~|@floating>@ <|@
tid j1082 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j801 
y: j1081 
=== Succesors ===
=== Usages ===
v787 v803 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j801 y: j1081  <|@  <|@
f <@~|@floating>@ <|@
tid v787 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j802 
y: j1082 
=== Succesors ===
=== Usages ===
v790 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j802 y: j1082  <|@  <|@
f <@*|@fixed>@ <|@
tid v790 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v787 
=== Succesors ===
trueSuccessor: v788 
falseSuccessor: v789 
=== Usages ===
=== Predecessor ===
j802 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v787 #trueSuccessor: v788 #falseSuccessor: v789  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4563199071113914713
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v788 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a794 
=== Usages ===
=== Predecessor ===
v790 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a794  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a794 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?2 
arguments: v780 i1084 i66 
=== Succesors ===
next: j795 
=== Usages ===
j795 
=== Predecessor ===
v788 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2 arguments: v780 i1084 i66 #next: j795  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j795 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a794 
=== Succesors ===
next: v808 
=== Usages ===
j807 
=== Predecessor ===
a794 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a794 #next: v808  <|@  <|@
f <@*|@fixed>@ <|@
tid v808 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v805 
=== Predecessor ===
j795 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4593259242120700911
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v789 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v803 
=== Usages ===
=== Predecessor ===
v790 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v803  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v803 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1706 
value: j1082 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v799 
=== Usages ===
=== Predecessor ===
v789 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1706 value: j1082 stateAfter: - lastLocationAccess: - #next: v799  <|@  <|@
f <@~|@floating>@ <|@
tid v1743 <|@
d <@d|@=== Debug Properties ===
displacement: 240
scale: Times1
stamp: void*
=== Inputs ===
base: j801 
index: - 
=== Succesors ===
=== Usages ===
v799 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j801 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v799 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1743 
=== Succesors ===
next: v806 
=== Usages ===
=== Predecessor ===
v803 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1743 #next: v806  <|@  <|@
f <@*|@fixed>@ <|@
tid v806 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v805 
=== Predecessor ===
v799 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593346058499059860
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j807 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v805 
values: j801 j795 
=== Succesors ===
=== Usages ===
v1710 v1709 a586 v1708 v1744 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v805 values: j801 j795  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v805 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v806 v808 
=== Succesors ===
next: a586 
=== Usages ===
j807 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v806 v808 #next: a586  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a586 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j807 
=== Succesors ===
next: v818 
=== Usages ===
a593 
=== Predecessor ===
v805 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j807 #next: v818  <|@  <|@
f <@~|@floating>@ <|@
tid v1708 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j807 
index: - 
=== Succesors ===
=== Usages ===
v818 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j807 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v818 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1708 
value: i587 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v819 
=== Usages ===
=== Predecessor ===
a586 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1708 value: i587 stateAfter: - lastLocationAccess: - #next: v819  <|@  <|@
f <@~|@floating>@ <|@
tid v1709 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j807 
index: - 
=== Succesors ===
=== Usages ===
v819 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j807 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v819 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1709 
value: j814 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v823 
=== Usages ===
=== Predecessor ===
v818 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1709 value: j814 stateAfter: - lastLocationAccess: - #next: v823  <|@  <|@
f <@~|@floating>@ <|@
tid v1710 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j807 
index: - 
=== Succesors ===
=== Usages ===
v823 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j807 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v823 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1710 
value: v1087 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v828 
=== Usages ===
=== Predecessor ===
v819 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1710 value: v1087 stateAfter: - lastLocationAccess: - #next: v828  <|@  <|@
f <@~|@floating>@ <|@
tid v1744 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j807 
index: - 
=== Succesors ===
=== Usages ===
v828 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j807 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v826 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i64,i64,i64,i64>
stampKind: <i64,i64,i64,i64>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v828 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v828 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1744 
value: v826 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a593 
=== Usages ===
=== Predecessor ===
v823 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1744 value: v826 stateAfter: - lastLocationAccess: - #next: a593  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a593 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a586 
=== Succesors ===
next: v594 
=== Usages ===
a348 
=== Predecessor ===
v828 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a586 #next: v594  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v336 
=== Usages ===
=== Predecessor ===
a593 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v336  <|@  <|@
f <@*|@fixed>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v335 
=== Predecessor ===
v594 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606097214070530541
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 97]
stamp: void
=== Inputs ===
=== Succesors ===
next: v434 
=== Usages ===
=== Predecessor ===
v224 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v434  <|@  <|@
f <@~|@floating>@ <|@
tid i240 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.advance(SignatureParser.java:102) [bci: 32]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:269) [bci: 104]
stamp: i32
=== Inputs ===
x: i1676 
y: i66 
=== Succesors ===
=== Usages ===
v434 i358 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1676 y: i66  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: SignatureParser.index
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.advance(SignatureParser.java:102) [bci: 33]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:269) [bci: 104]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1694 
value: i240 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j829 
=== Usages ===
=== Predecessor ===
v228 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1694 value: i240 stateAfter: - lastLocationAccess: - #next: j829  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j829 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j844 
=== Usages ===
v1711 v1712 
=== Predecessor ===
v434 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j844  <|@  <|@
f <@~|@floating>@ <|@
tid v1711 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j829 
index: - 
=== Succesors ===
=== Usages ===
j844 v846 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j829 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j844 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1711 
=== Succesors ===
next: j845 
=== Usages ===
j1089 j850 v1745 
=== Predecessor ===
j829 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1711 #next: j845  <|@  <|@
f <@~|@floating>@ <|@
tid v1712 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j829 
index: - 
=== Succesors ===
=== Usages ===
j845 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j829 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j845 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1712 
=== Succesors ===
next: v837 
=== Usages ===
v834 
=== Predecessor ===
j844 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1712 #next: v837  <|@  <|@
f <@~|@floating>@ <|@
tid j1089 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j844 
y: j1081 
=== Succesors ===
=== Usages ===
v834 v846 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j844 y: j1081  <|@  <|@
f <@~|@floating>@ <|@
tid v834 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j845 
y: j1089 
=== Succesors ===
=== Usages ===
v837 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j845 y: j1089  <|@  <|@
f <@*|@fixed>@ <|@
tid v837 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v834 
=== Succesors ===
trueSuccessor: v835 
falseSuccessor: v836 
=== Usages ===
=== Predecessor ===
j845 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v834 #trueSuccessor: v835 #falseSuccessor: v836  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4576223698277216085
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v835 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a840 
=== Usages ===
=== Predecessor ===
v837 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a840  <|@  <|@
tid ?243 <|@
d <@d|@=== Debug Properties ===
bci: 104
code: ResolvedJavaMethodBytecode<SignatureParser.parseIdentifier()>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: SignatureParser.java
sourceLine: 269
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a81 - 
=== Succesors ===
=== Usages ===
?242 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a81 -  <|@  <|@
tid a202 <|@
d <@d|@=== Debug Properties ===
componentType: HotSpotResolvedPrimitiveType<char>
hasIdentity: true
length: 16
objectId: 0
stamp: a!# [C
=== Inputs ===
=== Succesors ===
=== Usages ===
?288 ?362 
=== Predecessor ===
- >@ <|@
instruction <@VirtualArray|@org.graalvm.compiler.nodes.virtual.VirtualArrayNode>@  <|@  <|@
tid ?288 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a81 
values: i66 a202 
=== Succesors ===
=== Usages ===
?242 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a81 values: i66 a202  <|@  <|@
tid ?362 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a202 
values: i433 - - - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
?242 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a202 values: i433 - - - - - - - - - - - - - - -  <|@  <|@
tid ?242 <|@
d <@d|@=== Debug Properties ===
bci: 36
code: ResolvedJavaMethodBytecode<SignatureParser.advance()>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.advance(SignatureParser.java:102) [bci: 33]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:269) [bci: 104]
rethrowException: false
sourceFile: SignatureParser.java
sourceLine: 103
stackSize: 0
=== Inputs ===
outerFrameState: ?243 
values: a1 
virtualObjectMappings: ?288 ?362 
=== Succesors ===
=== Usages ===
a840 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?243 values: a1 virtualObjectMappings: ?288 ?362  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a840 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?242 
arguments: v780 i1084 i66 
=== Succesors ===
next: j841 
=== Usages ===
j841 
=== Predecessor ===
v835 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?242 arguments: v780 i1084 i66 #next: j841  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j841 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a840 
=== Succesors ===
next: v851 
=== Usages ===
j850 
=== Predecessor ===
a840 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a840 #next: v851  <|@  <|@
f <@*|@fixed>@ <|@
tid v851 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v848 
=== Predecessor ===
j841 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606017994125278000
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v836 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v846 
=== Usages ===
=== Predecessor ===
v837 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v846  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v846 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1711 
value: j1089 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v843 
=== Usages ===
=== Predecessor ===
v836 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1711 value: j1089 stateAfter: - lastLocationAccess: - #next: v843  <|@  <|@
f <@~|@floating>@ <|@
tid v1745 <|@
d <@d|@=== Debug Properties ===
displacement: 240
scale: Times1
stamp: void*
=== Inputs ===
base: j844 
index: - 
=== Succesors ===
=== Usages ===
v843 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j844 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v843 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1745 
=== Succesors ===
next: v849 
=== Usages ===
=== Predecessor ===
v846 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1745 #next: v849  <|@  <|@
f <@*|@fixed>@ <|@
tid v849 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v848 
=== Predecessor ===
v843 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4606097214070530541
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j850 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v848 
values: j844 j841 
=== Succesors ===
=== Usages ===
v1715 v1714 a597 v1713 v1746 v1747 v1748 v1749 v1750 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v848 values: j844 j841  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v848 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v849 v851 
=== Succesors ===
next: a597 
=== Usages ===
j850 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v849 v851 #next: a597  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a597 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j850 
=== Succesors ===
next: v859 
=== Usages ===
a603 
=== Predecessor ===
v848 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j850 #next: v859  <|@  <|@
f <@~|@floating>@ <|@
tid v1713 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j850 
index: - 
=== Succesors ===
=== Usages ===
v859 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j850 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v859 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1713 
value: i587 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v860 
=== Usages ===
=== Predecessor ===
a597 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1713 value: i587 stateAfter: - lastLocationAccess: - #next: v860  <|@  <|@
f <@~|@floating>@ <|@
tid v1714 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j850 
index: - 
=== Succesors ===
=== Usages ===
v860 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j850 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v860 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1714 
value: j814 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v863 
=== Usages ===
=== Predecessor ===
v859 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1714 value: j814 stateAfter: - lastLocationAccess: - #next: v863  <|@  <|@
f <@~|@floating>@ <|@
tid v1715 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j850 
index: - 
=== Succesors ===
=== Usages ===
v863 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j850 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v863 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1715 
value: v1087 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v867 
=== Usages ===
=== Predecessor ===
v860 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1715 value: v1087 stateAfter: - lastLocationAccess: - #next: v867  <|@  <|@
f <@~|@floating>@ <|@
tid v1746 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j850 
index: - 
=== Succesors ===
=== Usages ===
v867 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j850 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v867 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1746 
value: i1677 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v871 
=== Usages ===
=== Predecessor ===
v863 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1746 value: i1677 stateAfter: - lastLocationAccess: - #next: v871  <|@  <|@
f <@~|@floating>@ <|@
tid v1747 <|@
d <@d|@=== Debug Properties ===
displacement: 18
scale: Times1
stamp: void*
=== Inputs ===
base: j850 
index: - 
=== Succesors ===
=== Usages ===
v871 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j850 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v868 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i64,i64>
stampKind: <i64,i64>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v871 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v871 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1747 
value: v868 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v874 
=== Usages ===
=== Predecessor ===
v867 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1747 value: v868 stateAfter: - lastLocationAccess: - #next: v874  <|@  <|@
f <@~|@floating>@ <|@
tid v1748 <|@
d <@d|@=== Debug Properties ===
displacement: 34
scale: Times1
stamp: void*
=== Inputs ===
base: j850 
index: - 
=== Succesors ===
=== Usages ===
v874 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j850 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j584 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1534 j1482 j1589 v1489 v1551 j1542 v874 v1602 j1416 j1424 v1434 j1595 j1476 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v874 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1748 
value: j584 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v877 
=== Usages ===
=== Predecessor ===
v871 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1748 value: j584 stateAfter: - lastLocationAccess: - #next: v877  <|@  <|@
f <@~|@floating>@ <|@
tid v1749 <|@
d <@d|@=== Debug Properties ===
displacement: 42
scale: Times1
stamp: void*
=== Inputs ===
base: j850 
index: - 
=== Succesors ===
=== Usages ===
v877 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j850 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v877 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1749 
value: i79 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v881 
=== Usages ===
=== Predecessor ===
v874 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1749 value: i79 stateAfter: - lastLocationAccess: - #next: v881  <|@  <|@
f <@~|@floating>@ <|@
tid v1750 <|@
d <@d|@=== Debug Properties ===
displacement: 46
scale: Times1
stamp: void*
=== Inputs ===
base: j850 
index: - 
=== Succesors ===
=== Usages ===
v881 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j850 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i878 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i16
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v881 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v881 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1750 
value: i878 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a603 
=== Usages ===
=== Predecessor ===
v877 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1750 value: i878 stateAfter: - lastLocationAccess: - #next: a603  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a603 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a597 
=== Succesors ===
next: v604 
=== Usages ===
a298 
=== Predecessor ===
v881 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a597 #next: v604  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v7 
=== Usages ===
=== Predecessor ===
a603 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v7  <|@  <|@
tid ?72 <|@
d <@d|@=== Debug Properties ===
bci: 104
code: ResolvedJavaMethodBytecode<SignatureParser.parseIdentifier()>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: SignatureParser.java
sourceLine: 269
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a81 - 
=== Succesors ===
=== Usages ===
?70 ?328 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a81 -  <|@  <|@
f <@~|@floating>@ <|@
tid i1665 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i16 [0] ⇈0000000000000000
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1641 v1659 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1666 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1643 v1660 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1667 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1645 v1661 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1668 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1647 v1662 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1664 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1648 v1663 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1450 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1451 j1502 j1564 j1615 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1392 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1406 j1469 j1525 j1582 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1446 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1447 j1499 j1561 j1612 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1414 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1415 j1475 j1533 j1588 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1442 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1443 j1496 j1558 j1609 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1438 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1439 j1493 j1555 j1606 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j393 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.current(SignatureParser.java:95) [bci: 27]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 9]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1487 j1431 j1600 j1549 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1432 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] ⇊fffffffffffffff0 ⇈fffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1433 j1488 j1550 j1601 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v8 
=== Predecessor ===
v604 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B134" "B82" 
    successors "B15" "B138" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618914838431682294
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a298 <|@
d <@d|@=== Debug Properties ===
stamp: a!# [C
valueDescription: a -
=== Inputs ===
merge: v8 
values: a603 a712 a298 
=== Succesors ===
=== Usages ===
?208 v1701 a298 v1703 ?332 a348 v1700 v1790 v1791 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v8 values: a603 a712 a298  <|@  <|@
f <@~|@floating>@ <|@
tid i297 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v8 
values: i66 i108 i108 
=== Succesors ===
=== Usages ===
?208 v1702 v1701 i108 j1117 i187 i519 v351 v469 v481 v891 v685 i707 a906 v929 i882 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v8 values: i66 i108 i108  <|@  <|@
f <@~|@floating>@ <|@
tid i358 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v8 
values: i240 i68 i68 
=== Succesors ===
=== Usages ===
v455 v1699 i68 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v8 values: i240 i68 i68  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 7.300000000000001
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 8]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v7 
=== Succesors ===
next: v544 
=== Usages ===
v31 v39 a298 i297 v321 i358 v581 v576 v543 v548 v553 v566 v571 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v7 #next: v544  <|@  <|@
tid ?208 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a81 
values: i297 a298 
=== Succesors ===
=== Usages ===
?9 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a81 values: i297 a298  <|@  <|@
tid ?9 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<SignatureParser.parseIdentifier()>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: SignatureParser.java
sourceLine: 256
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a81 - 
virtualObjectMappings: ?208 
=== Succesors ===
=== Usages ===
v758 a1008 a953 a906 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a81 - virtualObjectMappings: ?208  <|@  <|@
f <@~|@floating>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.current(SignatureParser.java:95) [bci: 34]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:257) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i358 
y: i1675 
=== Succesors ===
=== Usages ===
v544 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i358 y: i1675  <|@  <|@
f <@*|@fixed>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.current(SignatureParser.java:95) [bci: 34]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:257) [bci: 19]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v455 
=== Succesors ===
trueSuccessor: v540 
falseSuccessor: v543 
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v455 #trueSuccessor: v540 #falseSuccessor: v543  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B137" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618914838431682294
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.current(SignatureParser.java:95) [bci: 34]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:257) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1679 
=== Usages ===
i1679 
=== Predecessor ===
v544 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1679  <|@  <|@
f <@~|@floating>@ <|@
tid v1699 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a396 
index: i358 
=== Succesors ===
=== Usages ===
i1679 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a396 index: i358  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1679 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.current(SignatureParser.java:95) [bci: 34]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:257) [bci: 19]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v540 
address: v1699 
=== Succesors ===
next: v549 
=== Usages ===
i463 j497 v477 v488 
=== Predecessor ===
v540 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v540 address: v1699 #next: v549  <|@  <|@
f <@~|@floating>@ <|@
tid i463 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.current(SignatureParser.java:95) [bci: 34]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:257) [bci: 19]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1679 
=== Succesors ===
=== Usages ===
v48 v27 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1679  <|@  <|@
f <@~|@floating>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterData.of(CharacterData.java:77) [bci: 4]
at java.lang.Character.isWhitespace(Character.java:6789) [bci: 1]
at java.lang.Character.isWhitespace(Character.java:6757) [bci: 1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 12]
stamp: void
=== Inputs ===
x: i463 
y: i47 
=== Succesors ===
=== Usages ===
v549 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i463 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterData.of(CharacterData.java:77) [bci: 4]
at java.lang.Character.isWhitespace(Character.java:6789) [bci: 1]
at java.lang.Character.isWhitespace(Character.java:6757) [bci: 1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 12]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v48 
=== Succesors ===
trueSuccessor: v545 
falseSuccessor: v548 
=== Usages ===
=== Predecessor ===
i1679 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v48 #trueSuccessor: v545 #falseSuccessor: v548  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618914838431682294
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterData.of(CharacterData.java:77) [bci: 4]
at java.lang.Character.isWhitespace(Character.java:6789) [bci: 1]
at java.lang.Character.isWhitespace(Character.java:6757) [bci: 1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1680 
=== Usages ===
i1680 
=== Predecessor ===
v549 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1680  <|@  <|@
f <@~|@floating>@ <|@
tid j497 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.lang.CharacterDataLatin1.getProperties(CharacterDataLatin1.java:72) [bci: 7]
at java.lang.CharacterDataLatin1.isWhitespace(CharacterDataLatin1.java:202) [bci: 2]
at java.lang.Character.isWhitespace(Character.java:6789) [bci: 5]
at java.lang.Character.isWhitespace(Character.java:6757) [bci: 1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 12]
resultBits: 64
stamp: i64 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1679 
=== Succesors ===
=== Usages ===
v1698 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1679  <|@  <|@
f <@~|@floating>@ <|@
tid v1698 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a75 
index: j497 
=== Succesors ===
=== Usages ===
i1680 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a75 index: j497  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1680 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.lang.CharacterDataLatin1.getProperties(CharacterDataLatin1.java:72) [bci: 7]
at java.lang.CharacterDataLatin1.isWhitespace(CharacterDataLatin1.java:202) [bci: 2]
at java.lang.Character.isWhitespace(Character.java:6789) [bci: 5]
at java.lang.Character.isWhitespace(Character.java:6757) [bci: 1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 12]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v545 
address: v1698 
=== Succesors ===
next: v554 
=== Usages ===
i56 
=== Predecessor ===
v545 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v545 address: v1698 #next: v554  <|@  <|@
f <@~|@floating>@ <|@
tid i56 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.lang.CharacterDataLatin1.isWhitespace(CharacterDataLatin1.java:203) [bci: 10]
at java.lang.Character.isWhitespace(Character.java:6789) [bci: 5]
at java.lang.Character.isWhitespace(Character.java:6757) [bci: 1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 12]
stamp: i32 [0 - 28672] ⇈0000000000007000
=== Inputs ===
x: i1680 
y: i55 
=== Succesors ===
=== Usages ===
v58 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i1680 y: i55  <|@  <|@
f <@~|@floating>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.CharacterDataLatin1.isWhitespace(CharacterDataLatin1.java:203) [bci: 14]
at java.lang.Character.isWhitespace(Character.java:6789) [bci: 5]
at java.lang.Character.isWhitespace(Character.java:6757) [bci: 1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 12]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i56 
y: i57 
=== Succesors ===
=== Usages ===
v554 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i56 y: i57  <|@  <|@
f <@*|@fixed>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterDataLatin1.isWhitespace(CharacterDataLatin1.java:203) [bci: 14]
at java.lang.Character.isWhitespace(Character.java:6789) [bci: 5]
at java.lang.Character.isWhitespace(Character.java:6757) [bci: 1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 12]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v58 
=== Succesors ===
trueSuccessor: v553 
falseSuccessor: v550 
=== Usages ===
=== Predecessor ===
i1680 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v58 #trueSuccessor: v553 #falseSuccessor: v550  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B139" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterDataLatin1.isWhitespace(CharacterDataLatin1.java:203) [bci: 14]
at java.lang.Character.isWhitespace(Character.java:6789) [bci: 5]
at java.lang.Character.isWhitespace(Character.java:6757) [bci: 1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 12]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v8 
=== Succesors ===
next: v763 
=== Usages ===
=== Predecessor ===
v554 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v8 #next: v763  <|@  <|@
f <@~|@floating>@ <|@
tid i764 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -115987
stableDimension: 0
stamp: i32 [-115987] ⇊00000000fffe3aed ⇈00000000fffe3aed
stampKind: i32
value: int[-115987|0xfffffffffffe3aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i756 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v753 
=== Predecessor ===
v553 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618914838431682294
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterDataLatin1.isWhitespace(CharacterDataLatin1.java:203) [bci: 14]
at java.lang.Character.isWhitespace(Character.java:6789) [bci: 5]
at java.lang.Character.isWhitespace(Character.java:6757) [bci: 1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v27 
=== Usages ===
=== Predecessor ===
v554 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v27  <|@  <|@
f <@*|@fixed>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
keyProbabilities: [D@1f75993f
keySuccessors: [I@7c1618ad
keys: [I@7f24328
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:258) [bci: 24]
stamp: void
=== Inputs ===
value: i463 
=== Succesors ===
successors: v29 v31 v33 
=== Usages ===
=== Predecessor ===
v550 >@ <|@
instruction <@IntegerSwitch|@org.graalvm.compiler.nodes.extended.IntegerSwitchNode>@ value: i463 #successors: v29 v31 v33  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B139" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:258) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v754 
=== Usages ===
=== Predecessor ===
v27 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v754  <|@  <|@
f <@~|@floating>@ <|@
tid i755 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -7187
stableDimension: 0
stamp: i32 [-7187] ⇊00000000ffffe3ed ⇈00000000ffffe3ed
stampKind: i32
value: int[-7187|0xffffffffffffe3ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i756 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v754 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v753 
=== Predecessor ===
v29 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B28" 
    xhandlers
    flags 
    probability 4605142756898813177
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 92]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v8 
=== Succesors ===
next: v354 
=== Usages ===
=== Predecessor ===
v27 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v8 #next: v354  <|@  <|@
f <@~|@floating>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:194) [bci: 18]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i297 
y: i66 
=== Succesors ===
=== Usages ===
v354 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i297 y: i66  <|@  <|@
f <@*|@fixed>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:194) [bci: 18]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
stamp: void
trueSuccessorProbability: 0.09284041465770032
=== Inputs ===
condition: v351 
=== Succesors ===
trueSuccessor: v352 
falseSuccessor: v353 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v351 #trueSuccessor: v352 #falseSuccessor: v353  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589839373119527878
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 21]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
stamp: void
=== Inputs ===
=== Succesors ===
next: v337 
=== Usages ===
=== Predecessor ===
v354 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v337  <|@  <|@
f <@*|@fixed>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v335 
=== Predecessor ===
v352 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B9" "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4596096315436664365
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i519 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483648 - 0]
valueDescription: i32
=== Inputs ===
merge: v335 
values: i79 i297 
=== Succesors ===
=== Usages ===
v178 ?344 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v335 values: i79 i297  <|@  <|@
f <@~|@floating>@ <|@
tid a348 <|@
d <@d|@=== Debug Properties ===
stamp: a!# [C
valueDescription: a -
=== Inputs ===
merge: v335 
values: a593 a298 
=== Succesors ===
=== Usages ===
?344 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v335 values: a593 a298  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v336 v337 
=== Succesors ===
next: v558 
=== Usages ===
i519 a348 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v336 v337 #next: v558  <|@  <|@
tid ?344 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a81 
values: i519 a348 
=== Succesors ===
=== Usages ===
?32 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a81 values: i519 a348  <|@  <|@
tid ?32 <|@
d <@d|@=== Debug Properties ===
bci: 92
code: ResolvedJavaMethodBytecode<SignatureParser.parseIdentifier()>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 92]
rethrowException: false
sourceFile: SignatureParser.java
sourceLine: 266
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a81 - 
virtualObjectMappings: ?344 
=== Succesors ===
=== Usages ===
v556 a1050 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a81 - virtualObjectMappings: ?344  <|@  <|@
f <@~|@floating>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i519 
y: i79 
=== Succesors ===
=== Usages ===
v558 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i519 y: i79  <|@  <|@
f <@*|@fixed>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v178 
=== Succesors ===
trueSuccessor: v557 
falseSuccessor: v555 
=== Usages ===
=== Predecessor ===
v335 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v178 #trueSuccessor: v557 #falseSuccessor: v555  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
stamp: void
=== Inputs ===
=== Succesors ===
next: v556 
=== Usages ===
=== Predecessor ===
v558 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v556  <|@  <|@
f <@*|@fixed>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 490
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?32 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v557 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?32  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4596096315436664365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1039 
=== Usages ===
=== Predecessor ===
v558 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1039  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1039 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1054 
=== Usages ===
v1738 v1739 
=== Predecessor ===
v555 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1054  <|@  <|@
f <@~|@floating>@ <|@
tid v1738 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1039 
index: - 
=== Succesors ===
=== Usages ===
j1054 v1056 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1039 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1054 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1738 
=== Succesors ===
next: j1055 
=== Usages ===
j1104 j1060 v1754 
=== Predecessor ===
j1039 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1738 #next: j1055  <|@  <|@
f <@~|@floating>@ <|@
tid v1739 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1039 
index: - 
=== Succesors ===
=== Usages ===
j1055 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1039 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1055 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1739 
=== Succesors ===
next: v1047 
=== Usages ===
v1044 
=== Predecessor ===
j1054 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1739 #next: v1047  <|@  <|@
f <@~|@floating>@ <|@
tid j1104 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1054 
y: j1097 
=== Succesors ===
=== Usages ===
v1044 v1056 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1054 y: j1097  <|@  <|@
f <@~|@floating>@ <|@
tid v1044 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1055 
y: j1104 
=== Succesors ===
=== Usages ===
v1047 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1055 y: j1104  <|@  <|@
f <@*|@fixed>@ <|@
tid v1047 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1044 
=== Succesors ===
trueSuccessor: v1045 
falseSuccessor: v1046 
=== Usages ===
=== Predecessor ===
j1055 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1044 #trueSuccessor: v1045 #falseSuccessor: v1046  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4566511040685987004
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1045 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1050 
=== Usages ===
=== Predecessor ===
v1047 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1050  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1050 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?32 
arguments: v780 i154 i66 
=== Succesors ===
next: j1051 
=== Usages ===
j1051 
=== Predecessor ===
v1045 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?32 arguments: v780 i154 i66 #next: j1051  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1051 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1050 
=== Succesors ===
next: v1061 
=== Usages ===
j1060 
=== Predecessor ===
a1050 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1050 #next: v1061  <|@  <|@
f <@*|@fixed>@ <|@
tid v1061 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1058 
=== Predecessor ===
j1051 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596027032485203076
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1046 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1056 
=== Usages ===
=== Predecessor ===
v1047 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1056  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1056 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1738 
value: j1104 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1053 
=== Usages ===
=== Predecessor ===
v1046 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1738 value: j1104 stateAfter: - lastLocationAccess: - #next: v1053  <|@  <|@
f <@~|@floating>@ <|@
tid v1754 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j1054 
index: - 
=== Succesors ===
=== Usages ===
v1053 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1054 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1053 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1754 
=== Succesors ===
next: v1059 
=== Usages ===
=== Predecessor ===
v1056 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1754 #next: v1059  <|@  <|@
f <@*|@fixed>@ <|@
tid v1059 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1058 
=== Predecessor ===
v1053 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors 
    xhandlers
    flags 
    probability 4596096315436664365
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1060 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1058 
values: j1054 j1051 
=== Succesors ===
=== Usages ===
v1742 v1741 a617 v1755 v1756 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1058 values: j1054 j1051  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1058 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1059 v1061 
=== Succesors ===
next: a617 
=== Usages ===
j1060 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1059 v1061 #next: a617  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a617 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1060 
=== Succesors ===
next: j1070 
=== Usages ===
a623 
=== Predecessor ===
v1058 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1060 #next: j1070  <|@  <|@
f <@~|@floating>@ <|@
tid j1066 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v969 
=== Succesors ===
=== Usages ===
v1740 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v969  <|@  <|@
f <@~|@floating>@ <|@
tid v1740 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j1066 
index: - 
=== Succesors ===
=== Usages ===
j1070 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1066 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1070 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1740 
=== Succesors ===
next: v1071 
=== Usages ===
v1071 
=== Predecessor ===
a617 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1740 #next: v1071  <|@  <|@
f <@~|@floating>@ <|@
tid v1741 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1060 
index: - 
=== Succesors ===
=== Usages ===
v1071 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1060 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1071 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1741 
value: j1070 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1074 
=== Usages ===
=== Predecessor ===
j1070 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1741 value: j1070 stateAfter: - lastLocationAccess: - #next: v1074  <|@  <|@
f <@~|@floating>@ <|@
tid v1742 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1060 
index: - 
=== Succesors ===
=== Usages ===
v1074 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1060 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1074 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1742 
value: v1101 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1078 
=== Usages ===
=== Predecessor ===
v1071 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1742 value: v1101 stateAfter: - lastLocationAccess: - #next: v1078  <|@  <|@
f <@~|@floating>@ <|@
tid v1755 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1060 
index: - 
=== Succesors ===
=== Usages ===
v1078 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1060 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a626 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: char[0]{}
stableDimension: 1
stamp: n!# [C
stampKind: n -
value: NarrowOop[char[0]{}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1078 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1078 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1755 
value: a626 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1080 
=== Usages ===
=== Predecessor ===
v1074 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1755 value: a626 stateAfter: - lastLocationAccess: - #next: v1080  <|@  <|@
f <@~|@floating>@ <|@
tid v1756 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1060 
index: - 
=== Succesors ===
=== Usages ===
v1080 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1060 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1080 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1756 
value: i79 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a623 
=== Usages ===
=== Predecessor ===
v1078 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1756 value: i79 stateAfter: - lastLocationAccess: - #next: a623  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a623 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a617 
=== Succesors ===
next: v624 
=== Usages ===
v200 
=== Predecessor ===
v1080 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a617 #next: v624  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v200 
=== Usages ===
=== Predecessor ===
a623 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v200  <|@  <|@
f <@*|@fixed>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a623 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v624 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a623 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4604495887841767808
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 50]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1681 
=== Usages ===
=== Predecessor ===
v354 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1681  <|@  <|@
f <@~|@floating>@ <|@
tid v1791 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a298 
index: - 
=== Succesors ===
=== Usages ===
i1681 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a298 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1681 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1791 
=== Succesors ===
next: v562 
=== Usages ===
i187 i707 v685 
=== Predecessor ===
v353 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1791 #next: v562  <|@  <|@
f <@~|@floating>@ <|@
tid i187 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 54]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
stamp: i32
=== Inputs ===
x: i1681 
y: i297 
=== Succesors ===
=== Usages ===
v188 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1681 y: i297  <|@  <|@
f <@~|@floating>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i187 
y: i79 
=== Succesors ===
=== Usages ===
v562 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i187 y: i79  <|@  <|@
f <@*|@fixed>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v188 
=== Succesors ===
trueSuccessor: v561 
falseSuccessor: v559 
=== Usages ===
=== Predecessor ===
i1681 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v188 #trueSuccessor: v561 #falseSuccessor: v559  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B139" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
stamp: void
=== Inputs ===
=== Succesors ===
next: v773 
=== Usages ===
=== Predecessor ===
v562 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v773  <|@  <|@
f <@~|@floating>@ <|@
tid i774 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -119315
stableDimension: 0
stamp: i32 [-119315] ⇊00000000fffe2ded ⇈00000000fffe2ded
stampKind: i32
value: int[-119315|0xfffffffffffe2ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i756 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v773 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v753 
=== Predecessor ===
v561 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B34" 
    xhandlers
    flags 
    probability 4604495887841767808
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
stamp: void
=== Inputs ===
=== Succesors ===
next: j885 
=== Usages ===
=== Predecessor ===
v562 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j885  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j885 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j926 
=== Usages ===
v1716 v1717 
=== Predecessor ===
v559 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j926  <|@  <|@
f <@~|@floating>@ <|@
tid v1716 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j885 
index: - 
=== Succesors ===
=== Usages ===
j926 v928 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j885 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j926 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1716 
=== Succesors ===
next: j927 
=== Usages ===
j889 v1718 v1719 a905 v1724 v1720 v1721 v1722 v1723 
=== Predecessor ===
j885 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1716 #next: j927  <|@  <|@
f <@~|@floating>@ <|@
tid v1717 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j885 
index: - 
=== Succesors ===
=== Usages ===
j927 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j885 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j927 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1717 
=== Succesors ===
next: v894 
=== Usages ===
v895 
=== Predecessor ===
j926 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1717 #next: v894  <|@  <|@
f <@~|@floating>@ <|@
tid v891 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i297 
y: i890 
=== Succesors ===
=== Usages ===
v894 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i297 y: i890  <|@  <|@
f <@*|@fixed>@ <|@
tid v894 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v891 
=== Succesors ===
trueSuccessor: v893 
falseSuccessor: v892 
=== Usages ===
=== Predecessor ===
j927 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v891 #trueSuccessor: v893 #falseSuccessor: v892  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4603863821012118669
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v893 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
stamp: void
=== Inputs ===
=== Succesors ===
next: v901 
=== Usages ===
=== Predecessor ===
v894 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v901  <|@  <|@
f <@~|@floating>@ <|@
tid i882 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i297 
y: i66 
=== Succesors ===
=== Usages ===
i914 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i297 y: i66  <|@  <|@
f <@~|@floating>@ <|@
tid i914 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i882 
y: i913 
=== Succesors ===
=== Usages ===
i884 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i882 y: i913  <|@  <|@
f <@~|@floating>@ <|@
tid i884 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i914 
y: i883 
=== Succesors ===
=== Usages ===
j888 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i914 y: i883  <|@  <|@
f <@~|@floating>@ <|@
tid j888 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i884 
=== Succesors ===
=== Usages ===
j889 v1720 v1721 v1722 v1723 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i884  <|@  <|@
f <@~|@floating>@ <|@
tid j889 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
stamp: i64
=== Inputs ===
x: j888 
y: j926 
=== Succesors ===
=== Usages ===
v895 v928 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j888 y: j926  <|@  <|@
f <@~|@floating>@ <|@
tid v895 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j927 
y: j889 
=== Succesors ===
=== Usages ===
v901 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j927 y: j889  <|@  <|@
f <@*|@fixed>@ <|@
tid v901 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v895 
=== Succesors ===
trueSuccessor: v900 
falseSuccessor: v899 
=== Usages ===
=== Predecessor ===
v893 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v895 #trueSuccessor: v900 #falseSuccessor: v899  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4573931432031241034
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v900 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
stamp: void
=== Inputs ===
=== Succesors ===
next: v898 
=== Usages ===
=== Predecessor ===
v901 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v898  <|@  <|@
f <@*|@fixed>@ <|@
tid v898 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v897 
=== Predecessor ===
v900 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4603806934997450246
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v899 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
stamp: void
=== Inputs ===
=== Succesors ===
next: v928 
=== Usages ===
=== Predecessor ===
v901 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v928  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v928 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1716 
value: j889 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v916 
=== Usages ===
=== Predecessor ===
v899 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1716 value: j889 stateAfter: - lastLocationAccess: - #next: v916  <|@  <|@
f <@~|@floating>@ <|@
tid v1720 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j888 
index: j926 
=== Succesors ===
=== Usages ===
v916 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j888 index: j926  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v916 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
stamp: void
=== Inputs ===
address: v1720 
=== Succesors ===
next: v918 
=== Usages ===
=== Predecessor ===
v928 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1720 #next: v918  <|@  <|@
f <@~|@floating>@ <|@
tid v1721 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j888 
index: j926 
=== Succesors ===
=== Usages ===
v918 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j888 index: j926  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v918 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
stamp: void
=== Inputs ===
address: v1721 
=== Succesors ===
next: v921 
=== Usages ===
=== Predecessor ===
v916 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1721 #next: v921  <|@  <|@
f <@~|@floating>@ <|@
tid v1722 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j888 
index: j926 
=== Succesors ===
=== Usages ===
v921 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j888 index: j926  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v921 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
stamp: void
=== Inputs ===
address: v1722 
=== Succesors ===
next: v924 
=== Usages ===
=== Predecessor ===
v918 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1722 #next: v924  <|@  <|@
f <@~|@floating>@ <|@
tid v1723 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j888 
index: j926 
=== Succesors ===
=== Usages ===
v924 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j888 index: j926  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v924 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
stamp: void
=== Inputs ===
address: v1723 
=== Succesors ===
next: v929 
=== Usages ===
=== Predecessor ===
v921 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1723 #next: v929  <|@  <|@
f <@~|@floating>@ <|@
tid v1718 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j926 
index: - 
=== Succesors ===
=== Usages ===
v929 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j926 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v929 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1718 
value: i297 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v930 
=== Usages ===
=== Predecessor ===
v924 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1718 value: i297 stateAfter: - lastLocationAccess: - #next: v930  <|@  <|@
f <@~|@floating>@ <|@
tid v1719 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j926 
index: - 
=== Succesors ===
=== Usages ===
v930 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j926 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v930 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1719 
value: j814 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v933 
=== Usages ===
=== Predecessor ===
v929 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1719 value: j814 stateAfter: - lastLocationAccess: - #next: v933  <|@  <|@
f <@~|@floating>@ <|@
tid v1724 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j926 
index: - 
=== Succesors ===
=== Usages ===
v933 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j926 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v933 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1724 
value: v1087 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v904 
=== Usages ===
=== Predecessor ===
v930 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1724 value: v1087 stateAfter: - lastLocationAccess: - #next: v904  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v904 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
stamp: void
=== Inputs ===
=== Succesors ===
next: a905 
=== Usages ===
=== Predecessor ===
v933 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a905  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a905 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j926 
=== Succesors ===
next: v907 
=== Usages ===
a910 
=== Predecessor ===
v904 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j926 #next: v907  <|@  <|@
f <@*|@fixed>@ <|@
tid v907 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v908 
=== Predecessor ===
a905 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4589720955300358040
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v892 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
stamp: void
=== Inputs ===
=== Succesors ===
next: v896 
=== Usages ===
=== Predecessor ===
v894 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v896  <|@  <|@
f <@*|@fixed>@ <|@
tid v896 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v897 
=== Predecessor ===
v892 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B32" 
    successors "B36" 
    xhandlers
    flags 
    probability 4590176043417705421
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v897 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v896 v898 
=== Succesors ===
next: a906 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v896 v898 #next: a906  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a906 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?9 
arguments: v813 i297 i79 
=== Succesors ===
next: v909 
=== Usages ===
a910 
=== Predecessor ===
v897 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?9 arguments: v813 i297 i79 #next: v909  <|@  <|@
f <@*|@fixed>@ <|@
tid v909 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v908 
=== Predecessor ===
a906 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4604495887841767808
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a910 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v908 
values: a905 a906 
=== Succesors ===
=== Usages ===
v1758 a716 v1705 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v908 values: a905 a906  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v908 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v907 v909 
=== Succesors ===
next: v1506 
=== Usages ===
a910 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v907 v909 #next: v1506  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1506 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v1257 
=== Usages ===
j1507 j1509 
=== Predecessor ===
v908 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v1257  <|@  <|@
f <@~|@floating>@ <|@
tid v685 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1681 
y: i297 
=== Succesors ===
=== Usages ===
i707 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1681 y: i297  <|@  <|@
f <@~|@floating>@ <|@
tid i707 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v685 
trueValue: i1681 
falseValue: i297 
=== Succesors ===
=== Usages ===
j1118 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v685 trueValue: i1681 falseValue: i297  <|@  <|@
f <@~|@floating>@ <|@
tid j1118 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i707 
=== Succesors ===
=== Usages ===
j1564 v1758 j1122 v1254 v1383 j1550 j1555 j1558 j1561 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i707  <|@  <|@
f <@~|@floating>@ <|@
tid v1254 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1118 
y: j814 
=== Succesors ===
=== Usages ===
v1257 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1118 y: j814  <|@  <|@
f <@*|@fixed>@ <|@
tid v1257 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1254 
=== Succesors ===
trueSuccessor: v1255 
falseSuccessor: v1256 
=== Usages ===
=== Predecessor ===
v1506 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1254 #trueSuccessor: v1255 #falseSuccessor: v1256  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B55" 
    xhandlers
    flags 
    probability 4599992288214397312
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1255 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1273 
=== Usages ===
=== Predecessor ===
v1257 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1273  <|@  <|@
f <@*|@fixed>@ <|@
tid v1273 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1274 
=== Predecessor ===
v1255 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4599992288214397312
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1256 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1260 
=== Usages ===
=== Predecessor ===
v1257 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1260  <|@  <|@
f <@~|@floating>@ <|@
tid v1705 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a910 
index: - 
=== Succesors ===
=== Usages ===
j1509 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a910 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1509 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1506 
address: v1705 
=== Succesors ===
=== Usages ===
v1774 v1776 v1778 v1780 v1782 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1506 address: v1705  <|@  <|@
f <@~|@floating>@ <|@
tid v1703 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a298 
index: - 
=== Succesors ===
=== Usages ===
j1507 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a298 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1507 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1506 
address: v1703 
=== Succesors ===
=== Usages ===
v1775 v1777 v1779 v1781 v1783 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1506 address: v1703  <|@  <|@
f <@~|@floating>@ <|@
tid j1550 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j1118 
y: j1432 
=== Succesors ===
=== Usages ===
v1551 v1553 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1118 y: j1432  <|@  <|@
f <@~|@floating>@ <|@
tid v1551 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1550 
y: j584 
=== Succesors ===
=== Usages ===
v1260 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1550 y: j584  <|@  <|@
f <@*|@fixed>@ <|@
tid v1260 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1551 
=== Succesors ===
trueSuccessor: v1258 
falseSuccessor: v1259 
=== Usages ===
=== Predecessor ===
v1256 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1551 #trueSuccessor: v1258 #falseSuccessor: v1259  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B43" 
    xhandlers
    flags 
    probability 4598412121140274464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1258 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1269 
=== Usages ===
=== Predecessor ===
v1260 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1269  <|@  <|@
f <@*|@fixed>@ <|@
tid v1269 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1270 
=== Predecessor ===
v1258 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4590985088959656320
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1259 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1261 
=== Usages ===
=== Predecessor ===
v1260 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1261  <|@  <|@
f <@*|@fixed>@ <|@
tid v1261 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1262 
=== Predecessor ===
v1259 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B79" 
    successors "B42" "B79" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4599992288214397312
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1542 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1262 
values: j584 j1549 
=== Succesors ===
=== Usages ===
v1783 j1549 v1782 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1262 values: j584 j1549  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1262 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1261 
=== Succesors ===
next: v1682 
=== Usages ===
v1682 v1265 v1266 j1542 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1261 #next: v1682  <|@  <|@
f <@~|@floating>@ <|@
tid v1783 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1507 
index: j1542 
=== Succesors ===
=== Usages ===
v1682 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1507 index: j1542  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1682 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v1262 
address: v1783 
=== Succesors ===
next: v1658 
=== Usages ===
v1658 
=== Predecessor ===
v1262 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1262 address: v1783 #next: v1658  <|@  <|@
f <@~|@floating>@ <|@
tid v1782 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1509 
index: j1542 
=== Succesors ===
=== Usages ===
v1658 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1509 index: j1542  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1658 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1782 
value: v1682 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1268 
=== Usages ===
=== Predecessor ===
v1682 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1782 value: v1682 stateAfter: - lastLocationAccess: - #next: v1268  <|@  <|@
f <@~|@floating>@ <|@
tid j1549 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1542 
y: j393 
=== Succesors ===
=== Usages ===
j1534 j1542 v1553 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1542 y: j393  <|@  <|@
f <@~|@floating>@ <|@
tid v1553 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1550 
y: j1549 
=== Succesors ===
=== Usages ===
v1268 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1550 y: j1549  <|@  <|@
f <@*|@fixed>@ <|@
tid v1268 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1553 
=== Succesors ===
trueSuccessor: v1265 
falseSuccessor: v1267 
=== Usages ===
=== Predecessor ===
v1658 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1553 #trueSuccessor: v1265 #falseSuccessor: v1267  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" 
    xhandlers
    flags 
    probability 4590985088959656320
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1265 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1262 
=== Succesors ===
next: v1271 
=== Usages ===
=== Predecessor ===
v1268 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1262 #next: v1271  <|@  <|@
f <@*|@fixed>@ <|@
tid v1271 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1270 
=== Predecessor ===
v1265 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B39" "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4599992288214397312
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1534 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1270 
values: j584 j1549 
=== Succesors ===
=== Usages ===
v1781 j1541 j1526 v1556 v1780 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1270 values: j584 j1549  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1270 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1269 v1271 
=== Succesors ===
next: v1292 
=== Usages ===
j1534 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1269 v1271 #next: v1292  <|@  <|@
f <@~|@floating>@ <|@
tid j1555 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j1118 
y: j1438 
=== Succesors ===
=== Usages ===
v1556 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1118 y: j1438  <|@  <|@
f <@~|@floating>@ <|@
tid v1556 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1555 
y: j1534 
=== Succesors ===
=== Usages ===
v1292 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1555 y: j1534  <|@  <|@
f <@*|@fixed>@ <|@
tid v1292 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1556 
=== Succesors ===
trueSuccessor: v1291 
falseSuccessor: v1290 
=== Usages ===
=== Predecessor ===
v1270 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1556 #trueSuccessor: v1291 #falseSuccessor: v1290  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4590985088959656320
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1291 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1295 
=== Usages ===
=== Predecessor ===
v1292 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1295  <|@  <|@
f <@*|@fixed>@ <|@
tid v1295 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1281 
=== Predecessor ===
v1291 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4598412121140274464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1290 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1683 
=== Usages ===
v1683 
=== Predecessor ===
v1292 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1683  <|@  <|@
f <@~|@floating>@ <|@
tid v1781 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1507 
index: j1534 
=== Succesors ===
=== Usages ===
v1683 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1507 index: j1534  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1683 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v1290 
address: v1781 
=== Succesors ===
next: v1656 
=== Usages ===
v1656 
=== Predecessor ===
v1290 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1290 address: v1781 #next: v1656  <|@  <|@
f <@~|@floating>@ <|@
tid v1780 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1509 
index: j1534 
=== Succesors ===
=== Usages ===
v1656 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1509 index: j1534  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1656 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1780 
value: v1683 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1280 
=== Usages ===
=== Predecessor ===
v1683 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1780 value: v1683 stateAfter: - lastLocationAccess: - #next: v1280  <|@  <|@
f <@~|@floating>@ <|@
tid j1541 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1534 
y: j821 
=== Succesors ===
=== Usages ===
j1526 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1534 y: j821  <|@  <|@
f <@*|@fixed>@ <|@
tid v1280 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1281 
=== Predecessor ===
v1656 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4599992288214397312
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1526 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1281 
values: j1541 j1534 
=== Succesors ===
=== Usages ===
v1779 j1533 j1518 v1559 v1778 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1281 values: j1541 j1534  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1281 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1280 v1295 
=== Succesors ===
next: v1298 
=== Usages ===
j1526 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1280 v1295 #next: v1298  <|@  <|@
f <@~|@floating>@ <|@
tid j1558 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j1118 
y: j1442 
=== Succesors ===
=== Usages ===
v1559 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1118 y: j1442  <|@  <|@
f <@~|@floating>@ <|@
tid v1559 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1558 
y: j1526 
=== Succesors ===
=== Usages ===
v1298 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1558 y: j1526  <|@  <|@
f <@*|@fixed>@ <|@
tid v1298 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1559 
=== Succesors ===
trueSuccessor: v1297 
falseSuccessor: v1296 
=== Usages ===
=== Predecessor ===
v1281 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1559 #trueSuccessor: v1297 #falseSuccessor: v1296  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4590985088959656320
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1297 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1301 
=== Usages ===
=== Predecessor ===
v1298 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1301  <|@  <|@
f <@*|@fixed>@ <|@
tid v1301 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1284 
=== Predecessor ===
v1297 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4598412121140274464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1296 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1684 
=== Usages ===
v1684 
=== Predecessor ===
v1298 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1684  <|@  <|@
f <@~|@floating>@ <|@
tid v1779 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1507 
index: j1526 
=== Succesors ===
=== Usages ===
v1684 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1507 index: j1526  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1684 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v1296 
address: v1779 
=== Succesors ===
next: v1654 
=== Usages ===
v1654 
=== Predecessor ===
v1296 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1296 address: v1779 #next: v1654  <|@  <|@
f <@~|@floating>@ <|@
tid v1778 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1509 
index: j1526 
=== Succesors ===
=== Usages ===
v1654 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1509 index: j1526  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1654 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1778 
value: v1684 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1283 
=== Usages ===
=== Predecessor ===
v1684 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1778 value: v1684 stateAfter: - lastLocationAccess: - #next: v1283  <|@  <|@
f <@~|@floating>@ <|@
tid j1533 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1526 
y: j1414 
=== Succesors ===
=== Usages ===
j1518 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1526 y: j1414  <|@  <|@
f <@*|@fixed>@ <|@
tid v1283 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1284 
=== Predecessor ===
v1654 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4599992288214397312
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1518 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1284 
values: j1533 j1526 
=== Succesors ===
=== Usages ===
v1777 j1525 j1510 v1562 v1776 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1284 values: j1533 j1526  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1284 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1283 v1301 
=== Succesors ===
next: v1304 
=== Usages ===
j1518 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1283 v1301 #next: v1304  <|@  <|@
f <@~|@floating>@ <|@
tid j1561 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j1118 
y: j1446 
=== Succesors ===
=== Usages ===
v1562 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1118 y: j1446  <|@  <|@
f <@~|@floating>@ <|@
tid v1562 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1561 
y: j1518 
=== Succesors ===
=== Usages ===
v1304 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1561 y: j1518  <|@  <|@
f <@*|@fixed>@ <|@
tid v1304 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1562 
=== Succesors ===
trueSuccessor: v1303 
falseSuccessor: v1302 
=== Usages ===
=== Predecessor ===
v1284 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1562 #trueSuccessor: v1303 #falseSuccessor: v1302  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4590985088959656320
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1303 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1307 
=== Usages ===
=== Predecessor ===
v1304 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1307  <|@  <|@
f <@*|@fixed>@ <|@
tid v1307 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1287 
=== Predecessor ===
v1303 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4598412121140274464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1302 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1685 
=== Usages ===
v1685 
=== Predecessor ===
v1304 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1685  <|@  <|@
f <@~|@floating>@ <|@
tid v1777 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1507 
index: j1518 
=== Succesors ===
=== Usages ===
v1685 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1507 index: j1518  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1685 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v1302 
address: v1777 
=== Succesors ===
next: v1652 
=== Usages ===
v1652 
=== Predecessor ===
v1302 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1302 address: v1777 #next: v1652  <|@  <|@
f <@~|@floating>@ <|@
tid v1776 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1509 
index: j1518 
=== Succesors ===
=== Usages ===
v1652 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1509 index: j1518  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1652 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1776 
value: v1685 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1286 
=== Usages ===
=== Predecessor ===
v1685 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1776 value: v1685 stateAfter: - lastLocationAccess: - #next: v1286  <|@  <|@
f <@~|@floating>@ <|@
tid j1525 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1518 
y: j1392 
=== Succesors ===
=== Usages ===
j1510 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1518 y: j1392  <|@  <|@
f <@*|@fixed>@ <|@
tid v1286 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1287 
=== Predecessor ===
v1652 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4599992288214397312
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1510 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1287 
values: j1525 j1518 
=== Succesors ===
=== Usages ===
v1775 v1565 v1774 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1287 values: j1525 j1518  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1287 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1286 v1307 
=== Succesors ===
next: v1310 
=== Usages ===
j1510 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1286 v1307 #next: v1310  <|@  <|@
f <@~|@floating>@ <|@
tid j1564 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j1118 
y: j1450 
=== Succesors ===
=== Usages ===
v1565 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1118 y: j1450  <|@  <|@
f <@~|@floating>@ <|@
tid v1565 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1564 
y: j1510 
=== Succesors ===
=== Usages ===
v1310 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1564 y: j1510  <|@  <|@
f <@*|@fixed>@ <|@
tid v1310 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1565 
=== Succesors ===
trueSuccessor: v1309 
falseSuccessor: v1308 
=== Usages ===
=== Predecessor ===
v1287 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1565 #trueSuccessor: v1309 #falseSuccessor: v1308  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4590985088959656320
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1309 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1313 
=== Usages ===
=== Predecessor ===
v1310 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1313  <|@  <|@
f <@*|@fixed>@ <|@
tid v1313 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1274 
=== Predecessor ===
v1309 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4598412121140274464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1308 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i1686 
=== Usages ===
i1686 
=== Predecessor ===
v1310 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1686  <|@  <|@
f <@~|@floating>@ <|@
tid v1775 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1507 
index: j1510 
=== Succesors ===
=== Usages ===
i1686 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1507 index: j1510  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1686 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v1308 
address: v1775 
=== Succesors ===
next: v1650 
=== Usages ===
v1650 
=== Predecessor ===
v1308 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1308 address: v1775 #next: v1650  <|@  <|@
f <@~|@floating>@ <|@
tid v1774 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1509 
index: j1510 
=== Succesors ===
=== Usages ===
v1650 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1509 index: j1510  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1650 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1774 
value: i1686 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1289 
=== Usages ===
=== Predecessor ===
i1686 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1774 value: i1686 stateAfter: - lastLocationAccess: - #next: v1289  <|@  <|@
f <@*|@fixed>@ <|@
tid v1289 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1274 
=== Predecessor ===
v1650 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B37" "B54" "B53" 
    successors "B56" "B74" 
    xhandlers
    flags 
    probability 4604495887841767808
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1274 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1273 v1289 v1313 
=== Succesors ===
next: v1568 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1273 v1289 v1313 #next: v1568  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1568 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v1320 
=== Usages ===
j1570 
=== Predecessor ===
v1274 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v1320  <|@  <|@
f <@~|@floating>@ <|@
tid j1117 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i297 
=== Succesors ===
=== Usages ===
j1122 v1383 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i297  <|@  <|@
f <@~|@floating>@ <|@
tid v1383 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1118 
y: j1117 
=== Succesors ===
=== Usages ===
v1320 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1118 y: j1117  <|@  <|@
f <@*|@fixed>@ <|@
tid v1320 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1383 
=== Succesors ===
trueSuccessor: v1319 
falseSuccessor: v1318 
=== Usages ===
=== Predecessor ===
v1568 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1383 #trueSuccessor: v1319 #falseSuccessor: v1318  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" "B58" 
    xhandlers
    flags 
    probability 4599992288214397312
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1319 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1323 
=== Usages ===
=== Predecessor ===
v1320 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1323  <|@  <|@
f <@~|@floating>@ <|@
tid v1758 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a910 
index: j1118 
=== Succesors ===
=== Usages ===
j1570 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a910 index: j1118  <|@  <|@
f <@~|@floating>@ <|@
tid j1570 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1568 
address: v1758 
=== Succesors ===
=== Usages ===
v1784 v1785 v1786 v1787 v1788 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1568 address: v1758  <|@  <|@
f <@~|@floating>@ <|@
tid j1122 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j1117 
y: j1118 
=== Succesors ===
=== Usages ===
j1615 j1601 j1606 j1609 j1612 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j1117 y: j1118  <|@  <|@
f <@~|@floating>@ <|@
tid j1601 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j1122 
y: j1432 
=== Succesors ===
=== Usages ===
v1602 v1604 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1122 y: j1432  <|@  <|@
f <@~|@floating>@ <|@
tid v1602 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1601 
y: j584 
=== Succesors ===
=== Usages ===
v1323 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1601 y: j584  <|@  <|@
f <@*|@fixed>@ <|@
tid v1323 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1602 
=== Succesors ===
trueSuccessor: v1321 
falseSuccessor: v1322 
=== Usages ===
=== Predecessor ===
v1319 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1602 #trueSuccessor: v1321 #falseSuccessor: v1322  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B61" 
    xhandlers
    flags 
    probability 4598412121140274464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1321 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1332 
=== Usages ===
=== Predecessor ===
v1323 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1332  <|@  <|@
f <@*|@fixed>@ <|@
tid v1332 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1333 
=== Predecessor ===
v1321 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4590985088959656320
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1322 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1324 
=== Usages ===
=== Predecessor ===
v1323 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1324  <|@  <|@
f <@*|@fixed>@ <|@
tid v1324 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1325 
=== Predecessor ===
v1322 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B73" 
    successors "B60" "B73" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4599992288214397312
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1595 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1325 
values: j584 j1600 
=== Succesors ===
=== Usages ===
v1788 j1600 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1325 values: j584 j1600  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1325 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1324 
=== Succesors ===
next: v1663 
=== Usages ===
j1595 v1328 v1329 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1324 #next: v1663  <|@  <|@
f <@~|@floating>@ <|@
tid v1788 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1570 
index: j1595 
=== Succesors ===
=== Usages ===
v1663 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1570 index: j1595  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1663 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1788 
value: v1664 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1331 
=== Usages ===
=== Predecessor ===
v1325 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1788 value: v1664 stateAfter: - lastLocationAccess: - #next: v1331  <|@  <|@
f <@~|@floating>@ <|@
tid j1600 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1595 
y: j393 
=== Succesors ===
=== Usages ===
j1589 j1595 v1604 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1595 y: j393  <|@  <|@
f <@~|@floating>@ <|@
tid v1604 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1601 
y: j1600 
=== Succesors ===
=== Usages ===
v1331 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1601 y: j1600  <|@  <|@
f <@*|@fixed>@ <|@
tid v1331 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1604 
=== Succesors ===
trueSuccessor: v1328 
falseSuccessor: v1330 
=== Usages ===
=== Predecessor ===
v1663 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1604 #trueSuccessor: v1328 #falseSuccessor: v1330  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" 
    xhandlers
    flags 
    probability 4590985088959656320
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1328 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1325 
=== Succesors ===
next: v1334 
=== Usages ===
=== Predecessor ===
v1331 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1325 #next: v1334  <|@  <|@
f <@*|@fixed>@ <|@
tid v1334 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1333 
=== Predecessor ===
v1328 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B57" "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4599992288214397312
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1589 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1333 
values: j584 j1600 
=== Succesors ===
=== Usages ===
v1787 j1594 j1583 v1607 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1333 values: j584 j1600  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1333 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1332 v1334 
=== Succesors ===
next: v1355 
=== Usages ===
j1589 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1332 v1334 #next: v1355  <|@  <|@
f <@~|@floating>@ <|@
tid j1606 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j1122 
y: j1438 
=== Succesors ===
=== Usages ===
v1607 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1122 y: j1438  <|@  <|@
f <@~|@floating>@ <|@
tid v1607 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1606 
y: j1589 
=== Succesors ===
=== Usages ===
v1355 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1606 y: j1589  <|@  <|@
f <@*|@fixed>@ <|@
tid v1355 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1607 
=== Succesors ===
trueSuccessor: v1354 
falseSuccessor: v1353 
=== Usages ===
=== Predecessor ===
v1333 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1607 #trueSuccessor: v1354 #falseSuccessor: v1353  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    probability 4590985088959656320
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1354 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1358 
=== Usages ===
=== Predecessor ===
v1355 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1358  <|@  <|@
f <@*|@fixed>@ <|@
tid v1358 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1344 
=== Predecessor ===
v1354 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    probability 4598412121140274464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1353 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1662 
=== Usages ===
=== Predecessor ===
v1355 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1662  <|@  <|@
f <@~|@floating>@ <|@
tid v1787 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1570 
index: j1589 
=== Succesors ===
=== Usages ===
v1662 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1570 index: j1589  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1662 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1787 
value: v1668 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1343 
=== Usages ===
=== Predecessor ===
v1353 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1787 value: v1668 stateAfter: - lastLocationAccess: - #next: v1343  <|@  <|@
f <@~|@floating>@ <|@
tid j1594 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1589 
y: j821 
=== Succesors ===
=== Usages ===
j1583 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1589 y: j821  <|@  <|@
f <@*|@fixed>@ <|@
tid v1343 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1344 
=== Predecessor ===
v1662 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B62" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4599992288214397312
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1583 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1344 
values: j1594 j1589 
=== Succesors ===
=== Usages ===
v1786 j1588 j1577 v1610 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1344 values: j1594 j1589  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1344 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1343 v1358 
=== Succesors ===
next: v1361 
=== Usages ===
j1583 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1343 v1358 #next: v1361  <|@  <|@
f <@~|@floating>@ <|@
tid j1609 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j1122 
y: j1442 
=== Succesors ===
=== Usages ===
v1610 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1122 y: j1442  <|@  <|@
f <@~|@floating>@ <|@
tid v1610 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1609 
y: j1583 
=== Succesors ===
=== Usages ===
v1361 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1609 y: j1583  <|@  <|@
f <@*|@fixed>@ <|@
tid v1361 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1610 
=== Succesors ===
trueSuccessor: v1360 
falseSuccessor: v1359 
=== Usages ===
=== Predecessor ===
v1344 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1610 #trueSuccessor: v1360 #falseSuccessor: v1359  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4590985088959656320
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1360 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1364 
=== Usages ===
=== Predecessor ===
v1361 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1364  <|@  <|@
f <@*|@fixed>@ <|@
tid v1364 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1347 
=== Predecessor ===
v1360 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4598412121140274464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1359 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1661 
=== Usages ===
=== Predecessor ===
v1361 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1661  <|@  <|@
f <@~|@floating>@ <|@
tid v1786 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1570 
index: j1583 
=== Succesors ===
=== Usages ===
v1661 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1570 index: j1583  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1661 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1786 
value: v1667 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1346 
=== Usages ===
=== Predecessor ===
v1359 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1786 value: v1667 stateAfter: - lastLocationAccess: - #next: v1346  <|@  <|@
f <@~|@floating>@ <|@
tid j1588 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1583 
y: j1414 
=== Succesors ===
=== Usages ===
j1577 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1583 y: j1414  <|@  <|@
f <@*|@fixed>@ <|@
tid v1346 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1347 
=== Predecessor ===
v1661 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4599992288214397312
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1577 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1347 
values: j1588 j1583 
=== Succesors ===
=== Usages ===
v1785 j1582 j1571 v1613 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1347 values: j1588 j1583  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1347 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1346 v1364 
=== Succesors ===
next: v1367 
=== Usages ===
j1577 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1346 v1364 #next: v1367  <|@  <|@
f <@~|@floating>@ <|@
tid j1612 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j1122 
y: j1446 
=== Succesors ===
=== Usages ===
v1613 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1122 y: j1446  <|@  <|@
f <@~|@floating>@ <|@
tid v1613 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1612 
y: j1577 
=== Succesors ===
=== Usages ===
v1367 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1612 y: j1577  <|@  <|@
f <@*|@fixed>@ <|@
tid v1367 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1613 
=== Succesors ===
trueSuccessor: v1366 
falseSuccessor: v1365 
=== Usages ===
=== Predecessor ===
v1347 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1613 #trueSuccessor: v1366 #falseSuccessor: v1365  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    probability 4590985088959656320
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1366 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1370 
=== Usages ===
=== Predecessor ===
v1367 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1370  <|@  <|@
f <@*|@fixed>@ <|@
tid v1370 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1350 
=== Predecessor ===
v1366 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    probability 4598412121140274464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1365 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1660 
=== Usages ===
=== Predecessor ===
v1367 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1660  <|@  <|@
f <@~|@floating>@ <|@
tid v1785 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1570 
index: j1577 
=== Succesors ===
=== Usages ===
v1660 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1570 index: j1577  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1660 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1785 
value: v1666 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1349 
=== Usages ===
=== Predecessor ===
v1365 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1785 value: v1666 stateAfter: - lastLocationAccess: - #next: v1349  <|@  <|@
f <@~|@floating>@ <|@
tid j1582 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1577 
y: j1392 
=== Succesors ===
=== Usages ===
j1571 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1577 y: j1392  <|@  <|@
f <@*|@fixed>@ <|@
tid v1349 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1350 
=== Predecessor ===
v1660 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4599992288214397312
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1571 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1350 
values: j1582 j1577 
=== Succesors ===
=== Usages ===
v1784 v1616 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1350 values: j1582 j1577  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1350 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1349 v1370 
=== Succesors ===
next: v1373 
=== Usages ===
j1571 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1349 v1370 #next: v1373  <|@  <|@
f <@~|@floating>@ <|@
tid j1615 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j1122 
y: j1450 
=== Succesors ===
=== Usages ===
v1616 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1122 y: j1450  <|@  <|@
f <@~|@floating>@ <|@
tid v1616 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1615 
y: j1571 
=== Succesors ===
=== Usages ===
v1373 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1615 y: j1571  <|@  <|@
f <@*|@fixed>@ <|@
tid v1373 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1616 
=== Succesors ===
trueSuccessor: v1372 
falseSuccessor: v1371 
=== Usages ===
=== Predecessor ===
v1350 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1616 #trueSuccessor: v1372 #falseSuccessor: v1371  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B75" 
    xhandlers
    flags 
    probability 4590985088959656320
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1372 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1376 
=== Usages ===
=== Predecessor ===
v1373 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1376  <|@  <|@
f <@*|@fixed>@ <|@
tid v1376 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1337 
=== Predecessor ===
v1372 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B75" 
    xhandlers
    flags 
    probability 4598412121140274464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1371 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1659 
=== Usages ===
=== Predecessor ===
v1373 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1659  <|@  <|@
f <@~|@floating>@ <|@
tid v1784 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1570 
index: j1571 
=== Succesors ===
=== Usages ===
v1659 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1570 index: j1571  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1659 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1784 
value: i1665 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1352 
=== Usages ===
=== Predecessor ===
v1371 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1784 value: i1665 stateAfter: - lastLocationAccess: - #next: v1352  <|@  <|@
f <@*|@fixed>@ <|@
tid v1352 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1337 
=== Predecessor ===
v1659 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4598412121140274464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1330 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1329 
=== Usages ===
=== Predecessor ===
v1331 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1329  <|@  <|@
f <@*|@fixed>@ <|@
tid v1329 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v1325 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1330 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1325  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B75" 
    xhandlers
    flags 
    probability 4599992288214397312
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1318 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1336 
=== Usages ===
=== Predecessor ===
v1320 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1336  <|@  <|@
f <@*|@fixed>@ <|@
tid v1336 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1337 
=== Predecessor ===
v1318 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" "B72" "B71" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4604495887841767808
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1337 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1336 v1352 v1376 
=== Succesors ===
next: a716 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1336 v1352 v1376 #next: a716  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a716 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a910 
=== Succesors ===
next: j942 
=== Usages ===
a610 
=== Predecessor ===
v1337 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a910 #next: j942  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j942 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j957 
=== Usages ===
v1725 v1726 
=== Predecessor ===
a716 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j957  <|@  <|@
f <@~|@floating>@ <|@
tid v1725 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j942 
index: - 
=== Succesors ===
=== Usages ===
j957 v959 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j942 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j957 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1725 
=== Succesors ===
next: j958 
=== Usages ===
j1098 j963 v1751 
=== Predecessor ===
j942 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1725 #next: j958  <|@  <|@
f <@~|@floating>@ <|@
tid v1726 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j942 
index: - 
=== Succesors ===
=== Usages ===
j958 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j942 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j958 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1726 
=== Succesors ===
next: v950 
=== Usages ===
v947 
=== Predecessor ===
j957 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1726 #next: v950  <|@  <|@
f <@~|@floating>@ <|@
tid j1098 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j957 
y: j1097 
=== Succesors ===
=== Usages ===
v947 v959 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j957 y: j1097  <|@  <|@
f <@~|@floating>@ <|@
tid v947 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j958 
y: j1098 
=== Succesors ===
=== Usages ===
v950 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j958 y: j1098  <|@  <|@
f <@*|@fixed>@ <|@
tid v950 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v947 
=== Succesors ===
trueSuccessor: v948 
falseSuccessor: v949 
=== Usages ===
=== Predecessor ===
j958 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v947 #trueSuccessor: v948 #falseSuccessor: v949  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B78" 
    xhandlers
    flags 
    probability 4574740477573191933
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v948 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a953 
=== Usages ===
=== Predecessor ===
v950 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a953  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a953 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?9 
arguments: v780 i154 i66 
=== Succesors ===
next: j954 
=== Usages ===
j954 
=== Predecessor ===
v948 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?9 arguments: v780 i154 i66 #next: j954  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j954 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a953 
=== Succesors ===
next: v964 
=== Usages ===
j963 
=== Predecessor ===
a953 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a953 #next: v964  <|@  <|@
f <@*|@fixed>@ <|@
tid v964 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v961 
=== Predecessor ===
j954 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B78" 
    xhandlers
    flags 
    probability 4604432681158802894
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v949 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v959 
=== Usages ===
=== Predecessor ===
v950 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v959  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v959 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1725 
value: j1098 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v956 
=== Usages ===
=== Predecessor ===
v949 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1725 value: j1098 stateAfter: - lastLocationAccess: - #next: v956  <|@  <|@
f <@~|@floating>@ <|@
tid v1751 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j957 
index: - 
=== Succesors ===
=== Usages ===
v956 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j957 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v956 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1751 
=== Succesors ===
next: v962 
=== Usages ===
=== Predecessor ===
v959 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1751 #next: v962  <|@  <|@
f <@*|@fixed>@ <|@
tid v962 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v961 
=== Predecessor ===
v956 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B76" 
    successors 
    xhandlers
    flags 
    probability 4604495887841767808
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j963 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v961 
values: j957 j954 
=== Succesors ===
=== Usages ===
v1728 v1727 a607 v1752 v1753 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v961 values: j957 j954  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v961 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v962 v964 
=== Succesors ===
next: a607 
=== Usages ===
j963 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v962 v964 #next: a607  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a607 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j963 
=== Succesors ===
next: j975 
=== Usages ===
a613 
=== Predecessor ===
v961 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j963 #next: j975  <|@  <|@
f <@~|@floating>@ <|@
tid j1673 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v969 
=== Succesors ===
=== Usages ===
v1789 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v969  <|@  <|@
f <@~|@floating>@ <|@
tid v1789 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j1673 
index: - 
=== Succesors ===
=== Usages ===
j975 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1673 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j975 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1789 
=== Succesors ===
next: v976 
=== Usages ===
v976 
=== Predecessor ===
a607 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1789 #next: v976  <|@  <|@
f <@~|@floating>@ <|@
tid v1727 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j963 
index: - 
=== Succesors ===
=== Usages ===
v976 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j963 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v976 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1727 
value: j975 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v979 
=== Usages ===
=== Predecessor ===
j975 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1727 value: j975 stateAfter: - lastLocationAccess: - #next: v979  <|@  <|@
f <@~|@floating>@ <|@
tid v1728 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j963 
index: - 
=== Succesors ===
=== Usages ===
v979 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j963 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v979 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1728 
value: v1101 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v983 
=== Usages ===
=== Predecessor ===
v976 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1728 value: v1101 stateAfter: - lastLocationAccess: - #next: v983  <|@  <|@
f <@~|@floating>@ <|@
tid v1752 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j963 
index: - 
=== Succesors ===
=== Usages ===
v983 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j963 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a610 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! -
=== Inputs ===
value: a716 
=== Succesors ===
=== Usages ===
v983 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a716  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v983 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1752 
value: a610 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v985 
=== Usages ===
=== Predecessor ===
v979 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1752 value: a610 stateAfter: - lastLocationAccess: - #next: v985  <|@  <|@
f <@~|@floating>@ <|@
tid v1753 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j963 
index: - 
=== Succesors ===
=== Usages ===
v985 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j963 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v985 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1753 
value: i79 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a613 
=== Usages ===
=== Predecessor ===
v983 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1753 value: i79 stateAfter: - lastLocationAccess: - #next: a613  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a613 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a607 
=== Succesors ===
next: v614 
=== Usages ===
v201 
=== Predecessor ===
v985 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a607 #next: v614  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v201 
=== Usages ===
=== Predecessor ===
a613 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v201  <|@  <|@
f <@*|@fixed>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a613 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v614 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a613 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4598412121140274464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1267 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1266 
=== Usages ===
=== Predecessor ===
v1268 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1266  <|@  <|@
f <@*|@fixed>@ <|@
tid v1266 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v1262 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1267 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1262  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B81" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618043896262490198
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 97]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1687 
=== Usages ===
=== Predecessor ===
v27 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1687  <|@  <|@
f <@~|@floating>@ <|@
tid v1700 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a298 
index: - 
=== Succesors ===
=== Usages ===
i1687 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a298 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1687 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1700 
=== Succesors ===
next: v121 
=== Usages ===
i117 i153 i706 v469 v645 
=== Predecessor ===
v33 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1700 #next: v121  <|@  <|@
f <@~|@floating>@ <|@
tid i108 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: i32
=== Inputs ===
x: i297 
y: i66 
=== Succesors ===
=== Usages ===
i297 ?213 i297 i117 i156 i501 ?332 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i297 y: i66  <|@  <|@
f <@~|@floating>@ <|@
tid i117 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: i32
=== Inputs ===
x: i108 
y: i1687 
=== Succesors ===
=== Usages ===
v118 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i108 y: i1687  <|@  <|@
f <@~|@floating>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i117 
y: i66 
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i117 y: i66  <|@  <|@
f <@~|@floating>@ <|@
tid i68 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.advance(SignatureParser.java:102) [bci: 32]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:269) [bci: 104]
stamp: i32
=== Inputs ===
x: i358 
y: i66 
=== Succesors ===
=== Usages ===
v489 i358 v478 i358 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i358 y: i66  <|@  <|@
f <@*|@fixed>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: void
trueSuccessorProbability: 0.9530584988351379
=== Inputs ===
condition: v118 
=== Succesors ===
trueSuccessor: v119 
falseSuccessor: v120 
=== Usages ===
=== Predecessor ===
i1687 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v118 #trueSuccessor: v119 #falseSuccessor: v120  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B82" "B83" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617745447932687693
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v567 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v567  <|@  <|@
f <@~|@floating>@ <|@
tid v469 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i297 
y: i1687 
=== Succesors ===
=== Usages ===
v567 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i297 y: i1687  <|@  <|@
f <@*|@fixed>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v469 
=== Succesors ===
trueSuccessor: v563 
falseSuccessor: v566 
=== Usages ===
=== Predecessor ===
v119 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v469 #trueSuccessor: v563 #falseSuccessor: v566  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617745447932687693
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v477 
=== Usages ===
v477 
=== Predecessor ===
v567 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v477  <|@  <|@
f <@~|@floating>@ <|@
tid v1701 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a298 
index: i297 
=== Succesors ===
=== Usages ===
v477 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a298 index: i297  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v563 
address: v1701 
value: i1679 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v478 
=== Usages ===
=== Predecessor ===
v563 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v563 address: v1701 value: i1679 stateAfter: - lastLocationAccess: - #next: v478  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: SignatureParser.index
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.advance(SignatureParser.java:102) [bci: 33]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:269) [bci: 104]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1694 
value: i68 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v522 
=== Usages ===
=== Predecessor ===
v477 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1694 value: i68 stateAfter: - lastLocationAccess: - #next: v522  <|@  <|@
tid ?332 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a81 
values: i108 a298 
=== Succesors ===
=== Usages ===
?328 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a81 values: i108 a298  <|@  <|@
tid ?328 <|@
d <@d|@=== Debug Properties ===
bci: 36
code: ResolvedJavaMethodBytecode<SignatureParser.advance()>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.advance(SignatureParser.java:102) [bci: 33]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:269) [bci: 104]
rethrowException: false
sourceFile: SignatureParser.java
sourceLine: 103
stackSize: 0
=== Inputs ===
outerFrameState: ?72 
values: a1 
virtualObjectMappings: ?332 
=== Succesors ===
=== Usages ===
v522 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?72 values: a1 virtualObjectMappings: ?332  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?328 
=== Succesors ===
next: v321 
=== Usages ===
=== Predecessor ===
v478 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?328 #next: v321  <|@  <|@
f <@*|@fixed>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 1
stamp: void
=== Inputs ===
loopBegin: v8 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v522 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v8  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B139" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v8 
=== Succesors ===
next: v765 
=== Usages ===
=== Predecessor ===
v567 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v8 #next: v765  <|@  <|@
f <@~|@floating>@ <|@
tid i766 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -120347
stableDimension: 0
stamp: i32 [-120347] ⇊00000000fffe29e5 ⇈00000000fffe29e5
stampKind: i32
value: int[-120347|0xfffffffffffe29e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i756 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v765 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v753 
=== Predecessor ===
v566 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B85" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598446793194746001
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v572 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v572  <|@  <|@
f <@~|@floating>@ <|@
tid i153 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:150) [bci: 6]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i1687 
y: i66 
=== Succesors ===
=== Usages ===
i155 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1687 y: i66  <|@  <|@
f <@~|@floating>@ <|@
tid i155 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:150) [bci: 8]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i153 
y: i154 
=== Succesors ===
=== Usages ===
i156 i501 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i153 y: i154  <|@  <|@
f <@~|@floating>@ <|@
tid i156 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:151) [bci: 12]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: i32
=== Inputs ===
x: i155 
y: i108 
=== Succesors ===
=== Usages ===
v157 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i155 y: i108  <|@  <|@
f <@~|@floating>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:151) [bci: 13]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i156 
y: i79 
=== Succesors ===
=== Usages ===
i501 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i156 y: i79  <|@  <|@
f <@~|@floating>@ <|@
tid i501 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v157 
trueValue: i108 
falseValue: i155 
=== Succesors ===
=== Usages ===
v481 j1110 v166 i169 v993 v645 i706 a1008 v1027 i986 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v157 trueValue: i108 falseValue: i155  <|@  <|@
f <@~|@floating>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i501 
y: i66 
=== Succesors ===
=== Usages ===
v572 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i501 y: i66  <|@  <|@
f <@*|@fixed>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v166 
=== Succesors ===
trueSuccessor: v571 
falseSuccessor: v568 
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v166 #trueSuccessor: v571 #falseSuccessor: v568  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B139" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v571 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v8 
=== Succesors ===
next: v767 
=== Usages ===
=== Predecessor ===
v572 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v8 #next: v767  <|@  <|@
f <@~|@floating>@ <|@
tid i768 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -122643
stableDimension: 0
stamp: i32 [-122643] ⇊00000000fffe20ed ⇈00000000fffe20ed
stampKind: i32
value: int[-122643|0xfffffffffffe20ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i756 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v767 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v753 
=== Predecessor ===
v571 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" "B88" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598446793194746001
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v577 
=== Usages ===
=== Predecessor ===
v572 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v577  <|@  <|@
f <@~|@floating>@ <|@
tid i168 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 22]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
rawvalue: 2147483639
stableDimension: 0
stamp: i32 [2147483639] ⇊000000007ffffff7 ⇈000000007ffffff7
stampKind: i32
value: int[2147483639|0x7ffffff7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i169 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i169 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 25]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: i32
=== Inputs ===
x: i168 
y: i501 
=== Succesors ===
=== Usages ===
v170 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i168 y: i501  <|@  <|@
f <@~|@floating>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i169 
y: i79 
=== Succesors ===
=== Usages ===
v577 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i169 y: i79  <|@  <|@
f <@*|@fixed>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v170 
=== Succesors ===
trueSuccessor: v576 
falseSuccessor: v573 
=== Usages ===
=== Predecessor ===
v568 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v170 #trueSuccessor: v576 #falseSuccessor: v573  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B139" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v8 
=== Succesors ===
next: v769 
=== Usages ===
=== Predecessor ===
v577 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v8 #next: v769  <|@  <|@
f <@~|@floating>@ <|@
tid i770 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -122899
stableDimension: 0
stamp: i32 [-122899] ⇊00000000fffe1fed ⇈00000000fffe1fed
stampKind: i32
value: int[-122899|0xfffffffffffe1fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i756 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v769 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v753 
=== Predecessor ===
v576 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B89" "B136" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598446793194746001
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v582 
=== Usages ===
=== Predecessor ===
v577 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v582  <|@  <|@
f <@~|@floating>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i297 
y: i501 
=== Succesors ===
=== Usages ===
v582 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i297 y: i501  <|@  <|@
f <@*|@fixed>@ <|@
tid v582 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v481 
=== Succesors ===
trueSuccessor: v578 
falseSuccessor: v581 
=== Usages ===
=== Predecessor ===
v573 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v481 #trueSuccessor: v578 #falseSuccessor: v581  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B90" "B93" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598446793194746001
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: j988 
=== Usages ===
v488 
=== Predecessor ===
v582 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j988  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j988 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1024 
=== Usages ===
v1729 v1730 
=== Predecessor ===
v578 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1024  <|@  <|@
f <@~|@floating>@ <|@
tid v1729 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j988 
index: - 
=== Succesors ===
=== Usages ===
j1024 v1026 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j988 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1024 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1729 
=== Succesors ===
next: j1025 
=== Usages ===
j992 v1731 v1732 a1007 v1737 v1733 v1734 v1735 v1736 
=== Predecessor ===
j988 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1729 #next: j1025  <|@  <|@
f <@~|@floating>@ <|@
tid v1730 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j988 
index: - 
=== Succesors ===
=== Usages ===
j1025 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j988 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1025 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1730 
=== Succesors ===
next: v996 
=== Usages ===
v997 
=== Predecessor ===
j1024 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1730 #next: v996  <|@  <|@
f <@~|@floating>@ <|@
tid v993 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i501 
y: i890 
=== Succesors ===
=== Usages ===
v996 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i501 y: i890  <|@  <|@
f <@*|@fixed>@ <|@
tid v996 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v993 
=== Succesors ===
trueSuccessor: v995 
falseSuccessor: v994 
=== Usages ===
=== Predecessor ===
j1025 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v993 #trueSuccessor: v995 #falseSuccessor: v994  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B91" "B92" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597763332188847570
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v995 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1003 
=== Usages ===
=== Predecessor ===
v996 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1003  <|@  <|@
f <@~|@floating>@ <|@
tid i986 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i501 
y: i66 
=== Succesors ===
=== Usages ===
i1015 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i501 y: i66  <|@  <|@
f <@~|@floating>@ <|@
tid i1015 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i986 
y: i913 
=== Succesors ===
=== Usages ===
i987 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i986 y: i913  <|@  <|@
f <@~|@floating>@ <|@
tid i987 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i1015 
y: i883 
=== Succesors ===
=== Usages ===
j991 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i1015 y: i883  <|@  <|@
f <@~|@floating>@ <|@
tid j991 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i987 
=== Succesors ===
=== Usages ===
j992 v1733 v1734 v1735 v1736 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i987  <|@  <|@
f <@~|@floating>@ <|@
tid j992 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: i64
=== Inputs ===
x: j991 
y: j1024 
=== Succesors ===
=== Usages ===
v997 v1026 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j991 y: j1024  <|@  <|@
f <@~|@floating>@ <|@
tid v997 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1025 
y: j992 
=== Succesors ===
=== Usages ===
v1003 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1025 y: j992  <|@  <|@
f <@*|@fixed>@ <|@
tid v1003 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v997 
=== Succesors ===
trueSuccessor: v1002 
falseSuccessor: v1001 
=== Usages ===
=== Predecessor ===
v995 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v997 #trueSuccessor: v1002 #falseSuccessor: v1001  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B94" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4567647422141232226
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1002 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1000 
=== Usages ===
=== Predecessor ===
v1003 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1000  <|@  <|@
f <@*|@fixed>@ <|@
tid v1000 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v999 
=== Predecessor ===
v1002 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B95" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597677379069864448
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1001 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1026 
=== Usages ===
=== Predecessor ===
v1003 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1026  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1026 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1729 
value: j992 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1017 
=== Usages ===
=== Predecessor ===
v1001 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1729 value: j992 stateAfter: - lastLocationAccess: - #next: v1017  <|@  <|@
f <@~|@floating>@ <|@
tid v1733 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j991 
index: j1024 
=== Succesors ===
=== Usages ===
v1017 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j991 index: j1024  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1017 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: void
=== Inputs ===
address: v1733 
=== Succesors ===
next: v1019 
=== Usages ===
=== Predecessor ===
v1026 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1733 #next: v1019  <|@  <|@
f <@~|@floating>@ <|@
tid v1734 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j991 
index: j1024 
=== Succesors ===
=== Usages ===
v1019 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j991 index: j1024  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1019 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: void
=== Inputs ===
address: v1734 
=== Succesors ===
next: v1021 
=== Usages ===
=== Predecessor ===
v1017 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1734 #next: v1021  <|@  <|@
f <@~|@floating>@ <|@
tid v1735 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j991 
index: j1024 
=== Succesors ===
=== Usages ===
v1021 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j991 index: j1024  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1021 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: void
=== Inputs ===
address: v1735 
=== Succesors ===
next: v1023 
=== Usages ===
=== Predecessor ===
v1019 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1735 #next: v1023  <|@  <|@
f <@~|@floating>@ <|@
tid v1736 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j991 
index: j1024 
=== Succesors ===
=== Usages ===
v1023 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j991 index: j1024  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1023 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: void
=== Inputs ===
address: v1736 
=== Succesors ===
next: v1027 
=== Usages ===
=== Predecessor ===
v1021 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1736 #next: v1027  <|@  <|@
f <@~|@floating>@ <|@
tid v1731 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1024 
index: - 
=== Succesors ===
=== Usages ===
v1027 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1024 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1027 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1731 
value: i501 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1028 
=== Usages ===
=== Predecessor ===
v1023 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1731 value: i501 stateAfter: - lastLocationAccess: - #next: v1028  <|@  <|@
f <@~|@floating>@ <|@
tid v1732 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1024 
index: - 
=== Succesors ===
=== Usages ===
v1028 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1024 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1028 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1732 
value: j814 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1031 
=== Usages ===
=== Predecessor ===
v1027 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1732 value: j814 stateAfter: - lastLocationAccess: - #next: v1031  <|@  <|@
f <@~|@floating>@ <|@
tid v1737 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1024 
index: - 
=== Succesors ===
=== Usages ===
v1031 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1024 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1031 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1737 
value: v1087 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1006 
=== Usages ===
=== Predecessor ===
v1028 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1737 value: v1087 stateAfter: - lastLocationAccess: - #next: v1006  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1006 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1007 
=== Usages ===
=== Predecessor ===
v1031 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a1007  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1007 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j1024 
=== Succesors ===
next: v1009 
=== Usages ===
a1012 
=== Predecessor ===
v1006 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1024 #next: v1009  <|@  <|@
f <@*|@fixed>@ <|@
tid v1009 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1010 
=== Predecessor ===
a1007 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B94" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583297498651368064
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v994 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v998 
=== Usages ===
=== Predecessor ===
v996 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v998  <|@  <|@
f <@*|@fixed>@ <|@
tid v998 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v999 
=== Predecessor ===
v994 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" "B91" 
    successors "B95" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583985123603233036
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v999 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v998 v1000 
=== Succesors ===
next: a1008 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v998 v1000 #next: a1008  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1008 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?9 
arguments: v813 i501 i79 
=== Succesors ===
next: v1011 
=== Usages ===
a1012 
=== Predecessor ===
v999 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?9 arguments: v813 i501 i79 #next: v1011  <|@  <|@
f <@*|@fixed>@ <|@
tid v1011 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1010 
=== Predecessor ===
a1008 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B92" "B94" 
    successors "B96" "B97" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598446793194746001
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1012 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v1010 
values: a1007 a1008 
=== Succesors ===
=== Usages ===
v1757 a712 v1704 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1010 values: a1007 a1008  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1010 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1009 v1011 
=== Succesors ===
next: v1386 
=== Usages ===
a1012 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1009 v1011 #next: v1386  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1386 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v1130 
=== Usages ===
j1387 j1389 
=== Predecessor ===
v1010 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v1130  <|@  <|@
f <@~|@floating>@ <|@
tid v645 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1687 
y: i501 
=== Succesors ===
=== Usages ===
i706 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1687 y: i501  <|@  <|@
f <@~|@floating>@ <|@
tid i706 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v645 
trueValue: i1687 
falseValue: i501 
=== Succesors ===
=== Usages ===
j1111 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v645 trueValue: i1687 falseValue: i501  <|@  <|@
f <@~|@floating>@ <|@
tid j1111 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i706 
=== Succesors ===
=== Usages ===
j1451 v1757 j1115 v1127 v1381 j1433 j1439 j1443 j1447 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i706  <|@  <|@
f <@~|@floating>@ <|@
tid v1127 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1111 
y: j814 
=== Succesors ===
=== Usages ===
v1130 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1111 y: j814  <|@  <|@
f <@*|@fixed>@ <|@
tid v1130 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1127 
=== Succesors ===
trueSuccessor: v1128 
falseSuccessor: v1129 
=== Usages ===
=== Predecessor ===
v1386 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1127 #trueSuccessor: v1128 #falseSuccessor: v1129  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B114" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593943193567375505
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1128 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1146 
=== Usages ===
=== Predecessor ===
v1130 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1146  <|@  <|@
f <@*|@fixed>@ <|@
tid v1146 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1147 
=== Predecessor ===
v1128 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593943193567375505
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1129 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1133 
=== Usages ===
=== Predecessor ===
v1130 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1133  <|@  <|@
f <@~|@floating>@ <|@
tid v1704 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1012 
index: - 
=== Succesors ===
=== Usages ===
j1389 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1012 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1389 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1386 
address: v1704 
=== Succesors ===
=== Usages ===
v1759 v1761 v1763 v1765 v1767 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1386 address: v1704  <|@  <|@
f <@~|@floating>@ <|@
tid v1790 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a298 
index: - 
=== Succesors ===
=== Usages ===
j1387 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a298 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1387 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1386 
address: v1790 
=== Succesors ===
=== Usages ===
v1760 v1762 v1764 v1766 v1768 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1386 address: v1790  <|@  <|@
f <@~|@floating>@ <|@
tid j1433 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j1111 
y: j1432 
=== Succesors ===
=== Usages ===
v1434 v1436 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1111 y: j1432  <|@  <|@
f <@~|@floating>@ <|@
tid v1434 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1433 
y: j584 
=== Succesors ===
=== Usages ===
v1133 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1433 y: j584  <|@  <|@
f <@*|@fixed>@ <|@
tid v1133 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1434 
=== Succesors ===
trueSuccessor: v1131 
falseSuccessor: v1132 
=== Usages ===
=== Predecessor ===
v1129 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1434 #trueSuccessor: v1131 #falseSuccessor: v1132  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B102" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591827180578425050
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1131 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1142 
=== Usages ===
=== Predecessor ===
v1133 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1142  <|@  <|@
f <@*|@fixed>@ <|@
tid v1142 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1143 
=== Predecessor ===
v1131 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584935994312634513
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1132 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1134 
=== Usages ===
=== Predecessor ===
v1133 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1134  <|@  <|@
f <@*|@fixed>@ <|@
tid v1134 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1135 
=== Predecessor ===
v1132 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" "B135" 
    successors "B101" "B135" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 2
    probability 4593943193567375505
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1424 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1135 
values: j584 j1431 
=== Succesors ===
=== Usages ===
v1768 j1431 v1767 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1135 values: j584 j1431  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1135 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1134 
=== Succesors ===
next: v1688 
=== Usages ===
v1688 v1138 v1139 j1424 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1134 #next: v1688  <|@  <|@
f <@~|@floating>@ <|@
tid v1768 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1387 
index: j1424 
=== Succesors ===
=== Usages ===
v1688 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1387 index: j1424  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1688 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v1135 
address: v1768 
=== Succesors ===
next: v1638 
=== Usages ===
v1638 
=== Predecessor ===
v1135 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1135 address: v1768 #next: v1638  <|@  <|@
f <@~|@floating>@ <|@
tid v1767 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1389 
index: j1424 
=== Succesors ===
=== Usages ===
v1638 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1389 index: j1424  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1638 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1767 
value: v1688 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1141 
=== Usages ===
=== Predecessor ===
v1688 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1767 value: v1688 stateAfter: - lastLocationAccess: - #next: v1141  <|@  <|@
f <@~|@floating>@ <|@
tid j1431 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1424 
y: j393 
=== Succesors ===
=== Usages ===
j1416 j1424 v1436 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1424 y: j393  <|@  <|@
f <@~|@floating>@ <|@
tid v1436 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1433 
y: j1431 
=== Succesors ===
=== Usages ===
v1141 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1433 y: j1431  <|@  <|@
f <@*|@fixed>@ <|@
tid v1141 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1436 
=== Succesors ===
trueSuccessor: v1138 
falseSuccessor: v1140 
=== Usages ===
=== Predecessor ===
v1638 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1436 #trueSuccessor: v1138 #falseSuccessor: v1140  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584935994312634513
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1138 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1135 
=== Succesors ===
next: v1144 
=== Usages ===
=== Predecessor ===
v1141 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1135 #next: v1144  <|@  <|@
f <@*|@fixed>@ <|@
tid v1144 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1143 
=== Predecessor ===
v1138 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B98" "B101" 
    successors "B103" "B104" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593943193567375505
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1416 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1143 
values: j584 j1431 
=== Succesors ===
=== Usages ===
v1766 j1423 j1407 v1440 v1765 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1143 values: j584 j1431  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1143 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1142 v1144 
=== Succesors ===
next: v1166 
=== Usages ===
j1416 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1142 v1144 #next: v1166  <|@  <|@
f <@~|@floating>@ <|@
tid j1439 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j1111 
y: j1438 
=== Succesors ===
=== Usages ===
v1440 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1111 y: j1438  <|@  <|@
f <@~|@floating>@ <|@
tid v1440 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1439 
y: j1416 
=== Succesors ===
=== Usages ===
v1166 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1439 y: j1416  <|@  <|@
f <@*|@fixed>@ <|@
tid v1166 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1440 
=== Succesors ===
trueSuccessor: v1165 
falseSuccessor: v1164 
=== Usages ===
=== Predecessor ===
v1143 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1440 #trueSuccessor: v1165 #falseSuccessor: v1164  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B105" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584935994312634513
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1165 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1169 
=== Usages ===
=== Predecessor ===
v1166 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1169  <|@  <|@
f <@*|@fixed>@ <|@
tid v1169 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1154 
=== Predecessor ===
v1165 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B105" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591827180578425050
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1164 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1689 
=== Usages ===
v1689 
=== Predecessor ===
v1166 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1689  <|@  <|@
f <@~|@floating>@ <|@
tid v1766 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1387 
index: j1416 
=== Succesors ===
=== Usages ===
v1689 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1387 index: j1416  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1689 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v1164 
address: v1766 
=== Succesors ===
next: v1636 
=== Usages ===
v1636 
=== Predecessor ===
v1164 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1164 address: v1766 #next: v1636  <|@  <|@
f <@~|@floating>@ <|@
tid v1765 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1389 
index: j1416 
=== Succesors ===
=== Usages ===
v1636 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1389 index: j1416  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1636 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1765 
value: v1689 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1153 
=== Usages ===
=== Predecessor ===
v1689 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1765 value: v1689 stateAfter: - lastLocationAccess: - #next: v1153  <|@  <|@
f <@~|@floating>@ <|@
tid j1423 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1416 
y: j821 
=== Succesors ===
=== Usages ===
j1407 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1416 y: j821  <|@  <|@
f <@*|@fixed>@ <|@
tid v1153 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1154 
=== Predecessor ===
v1636 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" "B103" 
    successors "B106" "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593943193567375505
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1407 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1154 
values: j1423 j1416 
=== Succesors ===
=== Usages ===
v1764 j1415 j1399 v1444 v1763 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1154 values: j1423 j1416  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1154 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1153 v1169 
=== Succesors ===
next: v1172 
=== Usages ===
j1407 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1153 v1169 #next: v1172  <|@  <|@
f <@~|@floating>@ <|@
tid j1443 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j1111 
y: j1442 
=== Succesors ===
=== Usages ===
v1444 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1111 y: j1442  <|@  <|@
f <@~|@floating>@ <|@
tid v1444 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1443 
y: j1407 
=== Succesors ===
=== Usages ===
v1172 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1443 y: j1407  <|@  <|@
f <@*|@fixed>@ <|@
tid v1172 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1444 
=== Succesors ===
trueSuccessor: v1171 
falseSuccessor: v1170 
=== Usages ===
=== Predecessor ===
v1154 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1444 #trueSuccessor: v1171 #falseSuccessor: v1170  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584935994312634513
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1171 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1175 
=== Usages ===
=== Predecessor ===
v1172 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1175  <|@  <|@
f <@*|@fixed>@ <|@
tid v1175 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1158 
=== Predecessor ===
v1171 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591827180578425050
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1170 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1690 
=== Usages ===
v1690 
=== Predecessor ===
v1172 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1690  <|@  <|@
f <@~|@floating>@ <|@
tid v1764 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1387 
index: j1407 
=== Succesors ===
=== Usages ===
v1690 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1387 index: j1407  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1690 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v1170 
address: v1764 
=== Succesors ===
next: v1634 
=== Usages ===
v1634 
=== Predecessor ===
v1170 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1170 address: v1764 #next: v1634  <|@  <|@
f <@~|@floating>@ <|@
tid v1763 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1389 
index: j1407 
=== Succesors ===
=== Usages ===
v1634 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1389 index: j1407  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1634 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1763 
value: v1690 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1157 
=== Usages ===
=== Predecessor ===
v1690 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1763 value: v1690 stateAfter: - lastLocationAccess: - #next: v1157  <|@  <|@
f <@~|@floating>@ <|@
tid j1415 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1407 
y: j1414 
=== Succesors ===
=== Usages ===
j1399 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1407 y: j1414  <|@  <|@
f <@*|@fixed>@ <|@
tid v1157 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1158 
=== Predecessor ===
v1634 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593943193567375505
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1399 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1158 
values: j1415 j1407 
=== Succesors ===
=== Usages ===
v1762 j1406 j1390 v1448 v1761 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1158 values: j1415 j1407  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1158 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1157 v1175 
=== Succesors ===
next: v1178 
=== Usages ===
j1399 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1157 v1175 #next: v1178  <|@  <|@
f <@~|@floating>@ <|@
tid j1447 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j1111 
y: j1446 
=== Succesors ===
=== Usages ===
v1448 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1111 y: j1446  <|@  <|@
f <@~|@floating>@ <|@
tid v1448 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1447 
y: j1399 
=== Succesors ===
=== Usages ===
v1178 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1447 y: j1399  <|@  <|@
f <@*|@fixed>@ <|@
tid v1178 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1448 
=== Succesors ===
trueSuccessor: v1177 
falseSuccessor: v1176 
=== Usages ===
=== Predecessor ===
v1158 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1448 #trueSuccessor: v1177 #falseSuccessor: v1176  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584935994312634513
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1177 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1181 
=== Usages ===
=== Predecessor ===
v1178 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1181  <|@  <|@
f <@*|@fixed>@ <|@
tid v1181 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1161 
=== Predecessor ===
v1177 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591827180578425050
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1176 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1691 
=== Usages ===
v1691 
=== Predecessor ===
v1178 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1691  <|@  <|@
f <@~|@floating>@ <|@
tid v1762 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1387 
index: j1399 
=== Succesors ===
=== Usages ===
v1691 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1387 index: j1399  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1691 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v1176 
address: v1762 
=== Succesors ===
next: v1632 
=== Usages ===
v1632 
=== Predecessor ===
v1176 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1176 address: v1762 #next: v1632  <|@  <|@
f <@~|@floating>@ <|@
tid v1761 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1389 
index: j1399 
=== Succesors ===
=== Usages ===
v1632 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1389 index: j1399  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1632 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1761 
value: v1691 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1160 
=== Usages ===
=== Predecessor ===
v1691 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1761 value: v1691 stateAfter: - lastLocationAccess: - #next: v1160  <|@  <|@
f <@~|@floating>@ <|@
tid j1406 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1399 
y: j1392 
=== Succesors ===
=== Usages ===
j1390 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1399 y: j1392  <|@  <|@
f <@*|@fixed>@ <|@
tid v1160 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1161 
=== Predecessor ===
v1632 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" "B109" 
    successors "B112" "B113" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593943193567375505
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1390 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1161 
values: j1406 j1399 
=== Succesors ===
=== Usages ===
v1760 v1452 v1759 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1161 values: j1406 j1399  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1161 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1160 v1181 
=== Succesors ===
next: v1184 
=== Usages ===
j1390 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1160 v1181 #next: v1184  <|@  <|@
f <@~|@floating>@ <|@
tid j1451 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j1111 
y: j1450 
=== Succesors ===
=== Usages ===
v1452 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1111 y: j1450  <|@  <|@
f <@~|@floating>@ <|@
tid v1452 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1451 
y: j1390 
=== Succesors ===
=== Usages ===
v1184 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1451 y: j1390  <|@  <|@
f <@*|@fixed>@ <|@
tid v1184 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1452 
=== Succesors ===
trueSuccessor: v1183 
falseSuccessor: v1182 
=== Usages ===
=== Predecessor ===
v1161 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1452 #trueSuccessor: v1183 #falseSuccessor: v1182  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584935994312634513
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1183 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1187 
=== Usages ===
=== Predecessor ===
v1184 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1187  <|@  <|@
f <@*|@fixed>@ <|@
tid v1187 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1147 
=== Predecessor ===
v1183 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591827180578425050
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1182 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i1692 
=== Usages ===
i1692 
=== Predecessor ===
v1184 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1692  <|@  <|@
f <@~|@floating>@ <|@
tid v1760 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1387 
index: j1390 
=== Succesors ===
=== Usages ===
i1692 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1387 index: j1390  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1692 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v1182 
address: v1760 
=== Succesors ===
next: v1630 
=== Usages ===
v1630 
=== Predecessor ===
v1182 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1182 address: v1760 #next: v1630  <|@  <|@
f <@~|@floating>@ <|@
tid v1759 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1389 
index: j1390 
=== Succesors ===
=== Usages ===
v1630 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1389 index: j1390  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1630 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1759 
value: i1692 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1163 
=== Usages ===
=== Predecessor ===
i1692 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1759 value: i1692 stateAfter: - lastLocationAccess: - #next: v1163  <|@  <|@
f <@*|@fixed>@ <|@
tid v1163 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1147 
=== Predecessor ===
v1630 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B96" "B113" "B112" 
    successors "B115" "B133" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598446793194746001
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1147 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1146 v1163 v1187 
=== Succesors ===
next: v1455 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1146 v1163 v1187 #next: v1455  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1455 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v1194 
=== Usages ===
j1457 
=== Predecessor ===
v1147 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v1194  <|@  <|@
f <@~|@floating>@ <|@
tid j1110 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i501 
=== Succesors ===
=== Usages ===
j1115 v1381 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i501  <|@  <|@
f <@~|@floating>@ <|@
tid v1381 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1111 
y: j1110 
=== Succesors ===
=== Usages ===
v1194 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1111 y: j1110  <|@  <|@
f <@*|@fixed>@ <|@
tid v1194 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1381 
=== Succesors ===
trueSuccessor: v1193 
falseSuccessor: v1192 
=== Usages ===
=== Predecessor ===
v1455 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1381 #trueSuccessor: v1193 #falseSuccessor: v1192  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B116" "B117" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593943193567375505
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1193 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1197 
=== Usages ===
=== Predecessor ===
v1194 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1197  <|@  <|@
f <@~|@floating>@ <|@
tid v1757 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1012 
index: j1111 
=== Succesors ===
=== Usages ===
j1457 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1012 index: j1111  <|@  <|@
f <@~|@floating>@ <|@
tid j1457 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1455 
address: v1757 
=== Succesors ===
=== Usages ===
v1769 v1770 v1771 v1772 v1773 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1455 address: v1757  <|@  <|@
f <@~|@floating>@ <|@
tid j1115 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j1110 
y: j1111 
=== Succesors ===
=== Usages ===
j1502 j1488 j1493 j1496 j1499 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j1110 y: j1111  <|@  <|@
f <@~|@floating>@ <|@
tid j1488 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j1115 
y: j1432 
=== Succesors ===
=== Usages ===
v1489 v1491 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1115 y: j1432  <|@  <|@
f <@~|@floating>@ <|@
tid v1489 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1488 
y: j584 
=== Succesors ===
=== Usages ===
v1197 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1488 y: j584  <|@  <|@
f <@*|@fixed>@ <|@
tid v1197 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1489 
=== Succesors ===
trueSuccessor: v1195 
falseSuccessor: v1196 
=== Usages ===
=== Predecessor ===
v1193 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1489 #trueSuccessor: v1195 #falseSuccessor: v1196  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B120" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591827180578425050
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1195 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1206 
=== Usages ===
=== Predecessor ===
v1197 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1206  <|@  <|@
f <@*|@fixed>@ <|@
tid v1206 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1207 
=== Predecessor ===
v1195 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584935994312634513
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1196 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1198 
=== Usages ===
=== Predecessor ===
v1197 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1198  <|@  <|@
f <@*|@fixed>@ <|@
tid v1198 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1199 
=== Predecessor ===
v1196 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" "B132" 
    successors "B119" "B132" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 2
    probability 4593943193567375505
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1482 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1199 
values: j584 j1487 
=== Succesors ===
=== Usages ===
v1773 j1487 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1199 values: j584 j1487  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1199 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1198 
=== Succesors ===
next: v1648 
=== Usages ===
j1482 v1202 v1203 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1198 #next: v1648  <|@  <|@
f <@~|@floating>@ <|@
tid v1773 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1457 
index: j1482 
=== Succesors ===
=== Usages ===
v1648 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1457 index: j1482  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1648 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1773 
value: v1664 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1205 
=== Usages ===
=== Predecessor ===
v1199 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1773 value: v1664 stateAfter: - lastLocationAccess: - #next: v1205  <|@  <|@
f <@~|@floating>@ <|@
tid j1487 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1482 
y: j393 
=== Succesors ===
=== Usages ===
j1476 j1482 v1491 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1482 y: j393  <|@  <|@
f <@~|@floating>@ <|@
tid v1491 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1488 
y: j1487 
=== Succesors ===
=== Usages ===
v1205 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1488 y: j1487  <|@  <|@
f <@*|@fixed>@ <|@
tid v1205 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1491 
=== Succesors ===
trueSuccessor: v1202 
falseSuccessor: v1204 
=== Usages ===
=== Predecessor ===
v1648 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1491 #trueSuccessor: v1202 #falseSuccessor: v1204  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B120" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584935994312634513
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1202 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1199 
=== Succesors ===
next: v1208 
=== Usages ===
=== Predecessor ===
v1205 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1199 #next: v1208  <|@  <|@
f <@*|@fixed>@ <|@
tid v1208 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1207 
=== Predecessor ===
v1202 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B116" "B119" 
    successors "B121" "B122" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593943193567375505
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1476 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1207 
values: j584 j1487 
=== Succesors ===
=== Usages ===
v1772 j1481 j1470 v1494 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1207 values: j584 j1487  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1207 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1206 v1208 
=== Succesors ===
next: v1229 
=== Usages ===
j1476 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1206 v1208 #next: v1229  <|@  <|@
f <@~|@floating>@ <|@
tid j1493 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j1115 
y: j1438 
=== Succesors ===
=== Usages ===
v1494 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1115 y: j1438  <|@  <|@
f <@~|@floating>@ <|@
tid v1494 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1493 
y: j1476 
=== Succesors ===
=== Usages ===
v1229 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1493 y: j1476  <|@  <|@
f <@*|@fixed>@ <|@
tid v1229 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1494 
=== Succesors ===
trueSuccessor: v1228 
falseSuccessor: v1227 
=== Usages ===
=== Predecessor ===
v1207 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1494 #trueSuccessor: v1228 #falseSuccessor: v1227  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B123" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584935994312634513
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1228 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1232 
=== Usages ===
=== Predecessor ===
v1229 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1232  <|@  <|@
f <@*|@fixed>@ <|@
tid v1232 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1218 
=== Predecessor ===
v1228 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B123" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591827180578425050
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1227 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1647 
=== Usages ===
=== Predecessor ===
v1229 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1647  <|@  <|@
f <@~|@floating>@ <|@
tid v1772 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1457 
index: j1476 
=== Succesors ===
=== Usages ===
v1647 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1457 index: j1476  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1647 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1772 
value: v1668 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1217 
=== Usages ===
=== Predecessor ===
v1227 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1772 value: v1668 stateAfter: - lastLocationAccess: - #next: v1217  <|@  <|@
f <@~|@floating>@ <|@
tid j1481 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1476 
y: j821 
=== Succesors ===
=== Usages ===
j1470 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1476 y: j821  <|@  <|@
f <@*|@fixed>@ <|@
tid v1217 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1218 
=== Predecessor ===
v1647 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" "B121" 
    successors "B124" "B125" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593943193567375505
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1470 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1218 
values: j1481 j1476 
=== Succesors ===
=== Usages ===
v1771 j1475 j1464 v1497 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1218 values: j1481 j1476  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1218 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1217 v1232 
=== Succesors ===
next: v1235 
=== Usages ===
j1470 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1217 v1232 #next: v1235  <|@  <|@
f <@~|@floating>@ <|@
tid j1496 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j1115 
y: j1442 
=== Succesors ===
=== Usages ===
v1497 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1115 y: j1442  <|@  <|@
f <@~|@floating>@ <|@
tid v1497 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1496 
y: j1470 
=== Succesors ===
=== Usages ===
v1235 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1496 y: j1470  <|@  <|@
f <@*|@fixed>@ <|@
tid v1235 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1497 
=== Succesors ===
trueSuccessor: v1234 
falseSuccessor: v1233 
=== Usages ===
=== Predecessor ===
v1218 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1497 #trueSuccessor: v1234 #falseSuccessor: v1233  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B126" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584935994312634513
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1234 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1238 
=== Usages ===
=== Predecessor ===
v1235 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1238  <|@  <|@
f <@*|@fixed>@ <|@
tid v1238 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1221 
=== Predecessor ===
v1234 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B126" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591827180578425050
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1233 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1645 
=== Usages ===
=== Predecessor ===
v1235 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1645  <|@  <|@
f <@~|@floating>@ <|@
tid v1771 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1457 
index: j1470 
=== Succesors ===
=== Usages ===
v1645 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1457 index: j1470  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1645 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1771 
value: v1667 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1220 
=== Usages ===
=== Predecessor ===
v1233 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1771 value: v1667 stateAfter: - lastLocationAccess: - #next: v1220  <|@  <|@
f <@~|@floating>@ <|@
tid j1475 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1470 
y: j1414 
=== Succesors ===
=== Usages ===
j1464 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1470 y: j1414  <|@  <|@
f <@*|@fixed>@ <|@
tid v1220 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1221 
=== Predecessor ===
v1645 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" "B124" 
    successors "B127" "B128" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593943193567375505
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1464 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1221 
values: j1475 j1470 
=== Succesors ===
=== Usages ===
v1770 j1469 j1458 v1500 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1221 values: j1475 j1470  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1221 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1220 v1238 
=== Succesors ===
next: v1241 
=== Usages ===
j1464 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1220 v1238 #next: v1241  <|@  <|@
f <@~|@floating>@ <|@
tid j1499 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j1115 
y: j1446 
=== Succesors ===
=== Usages ===
v1500 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1115 y: j1446  <|@  <|@
f <@~|@floating>@ <|@
tid v1500 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1499 
y: j1464 
=== Succesors ===
=== Usages ===
v1241 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1499 y: j1464  <|@  <|@
f <@*|@fixed>@ <|@
tid v1241 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1500 
=== Succesors ===
trueSuccessor: v1240 
falseSuccessor: v1239 
=== Usages ===
=== Predecessor ===
v1221 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1500 #trueSuccessor: v1240 #falseSuccessor: v1239  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors "B129" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584935994312634513
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1240 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1244 
=== Usages ===
=== Predecessor ===
v1241 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1244  <|@  <|@
f <@*|@fixed>@ <|@
tid v1244 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1224 
=== Predecessor ===
v1240 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors "B129" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591827180578425050
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1239 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1643 
=== Usages ===
=== Predecessor ===
v1241 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1643  <|@  <|@
f <@~|@floating>@ <|@
tid v1770 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1457 
index: j1464 
=== Succesors ===
=== Usages ===
v1643 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1457 index: j1464  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1643 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1770 
value: v1666 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1223 
=== Usages ===
=== Predecessor ===
v1239 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1770 value: v1666 stateAfter: - lastLocationAccess: - #next: v1223  <|@  <|@
f <@~|@floating>@ <|@
tid j1469 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1464 
y: j1392 
=== Succesors ===
=== Usages ===
j1458 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1464 y: j1392  <|@  <|@
f <@*|@fixed>@ <|@
tid v1223 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1224 
=== Predecessor ===
v1643 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B128" "B127" 
    successors "B130" "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593943193567375505
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1458 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1224 
values: j1469 j1464 
=== Succesors ===
=== Usages ===
v1769 v1503 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1224 values: j1469 j1464  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1224 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1223 v1244 
=== Succesors ===
next: v1247 
=== Usages ===
j1458 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1223 v1244 #next: v1247  <|@  <|@
f <@~|@floating>@ <|@
tid j1502 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j1115 
y: j1450 
=== Succesors ===
=== Usages ===
v1503 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1115 y: j1450  <|@  <|@
f <@~|@floating>@ <|@
tid v1503 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1502 
y: j1458 
=== Succesors ===
=== Usages ===
v1247 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1502 y: j1458  <|@  <|@
f <@*|@fixed>@ <|@
tid v1247 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1503 
=== Succesors ===
trueSuccessor: v1246 
falseSuccessor: v1245 
=== Usages ===
=== Predecessor ===
v1224 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1503 #trueSuccessor: v1246 #falseSuccessor: v1245  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B134" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584935994312634513
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1246 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1250 
=== Usages ===
=== Predecessor ===
v1247 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1250  <|@  <|@
f <@*|@fixed>@ <|@
tid v1250 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1211 
=== Predecessor ===
v1246 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B134" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591827180578425050
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1245 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1641 
=== Usages ===
=== Predecessor ===
v1247 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1641  <|@  <|@
f <@~|@floating>@ <|@
tid v1769 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1457 
index: j1458 
=== Succesors ===
=== Usages ===
v1641 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1457 index: j1458  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1641 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1769 
value: i1665 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1226 
=== Usages ===
=== Predecessor ===
v1245 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1769 value: i1665 stateAfter: - lastLocationAccess: - #next: v1226  <|@  <|@
f <@*|@fixed>@ <|@
tid v1226 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1211 
=== Predecessor ===
v1641 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B118" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4591827180578425050
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1204 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1203 
=== Usages ===
=== Predecessor ===
v1205 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1203  <|@  <|@
f <@*|@fixed>@ <|@
tid v1203 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v1199 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1204 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1199  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B134" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593943193567375505
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1192 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1210 
=== Usages ===
=== Predecessor ===
v1194 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1210  <|@  <|@
f <@*|@fixed>@ <|@
tid v1210 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1211 
=== Predecessor ===
v1192 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B133" "B131" "B130" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598446793194746001
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1211 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1210 v1226 v1250 
=== Succesors ===
next: a712 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1210 v1226 v1250 #next: a712  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a712 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a1012 
=== Succesors ===
next: v488 
=== Usages ===
v1702 a298 ?213 
=== Predecessor ===
v1211 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1012 #next: v488  <|@  <|@
f <@~|@floating>@ <|@
tid v1702 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a712 
index: i297 
=== Succesors ===
=== Usages ===
v488 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a712 index: i297  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v578 
address: v1702 
value: i1679 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v489 
=== Usages ===
=== Predecessor ===
a712 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v578 address: v1702 value: i1679 stateAfter: - lastLocationAccess: - #next: v489  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: SignatureParser.index
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.advance(SignatureParser.java:102) [bci: 33]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:269) [bci: 104]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1694 
value: i68 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v521 
=== Usages ===
=== Predecessor ===
v488 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1694 value: i68 stateAfter: - lastLocationAccess: - #next: v521  <|@  <|@
tid ?213 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a81 
values: i108 a712 
=== Succesors ===
=== Usages ===
?70 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a81 values: i108 a712  <|@  <|@
tid ?70 <|@
d <@d|@=== Debug Properties ===
bci: 36
code: ResolvedJavaMethodBytecode<SignatureParser.advance()>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.advance(SignatureParser.java:102) [bci: 33]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:269) [bci: 104]
rethrowException: false
sourceFile: SignatureParser.java
sourceLine: 103
stackSize: 0
=== Inputs ===
outerFrameState: ?72 
values: a1 
virtualObjectMappings: ?213 
=== Succesors ===
=== Usages ===
v521 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?72 values: a1 virtualObjectMappings: ?213  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?70 
=== Succesors ===
next: v39 
=== Usages ===
=== Predecessor ===
v489 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?70 #next: v39  <|@  <|@
f <@*|@fixed>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 8]
stamp: void
=== Inputs ===
loopBegin: v8 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v521 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v8  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B100" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 2
    probability 4591827180578425050
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1140 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1139 
=== Usages ===
=== Predecessor ===
v1141 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1139  <|@  <|@
f <@*|@fixed>@ <|@
tid v1139 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v1135 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1140 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1135  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B139" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v8 
=== Succesors ===
next: v771 
=== Usages ===
=== Predecessor ===
v582 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v8 #next: v771  <|@  <|@
f <@~|@floating>@ <|@
tid i772 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -123419
stableDimension: 0
stamp: i32 [-123419] ⇊00000000fffe1de5 ⇈00000000fffe1de5
stampKind: i32
value: int[-123419|0xfffffffffffe1de5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i756 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v771 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v753 
=== Predecessor ===
v581 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B139" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterData.of(CharacterData.java:77) [bci: 4]
at java.lang.Character.isWhitespace(Character.java:6789) [bci: 1]
at java.lang.Character.isWhitespace(Character.java:6757) [bci: 1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 12]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v8 
=== Succesors ===
next: v761 
=== Usages ===
=== Predecessor ===
v549 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v8 #next: v761  <|@  <|@
f <@~|@floating>@ <|@
tid i762 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -113939
stableDimension: 0
stamp: i32 [-113939] ⇊00000000fffe42ed ⇈00000000fffe42ed
stampKind: i32
value: int[-113939|0xfffffffffffe42ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i756 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v753 
=== Predecessor ===
v548 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B139" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.current(SignatureParser.java:95) [bci: 34]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:257) [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v8 
=== Succesors ===
next: v759 
=== Usages ===
=== Predecessor ===
v544 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v8 #next: v759  <|@  <|@
f <@~|@floating>@ <|@
tid i760 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -116763
stableDimension: 0
stamp: i32 [-116763] ⇊00000000fffe37e5 ⇈00000000fffe37e5
stampKind: i32
value: int[-116763|0xfffffffffffe37e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i756 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v753 
=== Predecessor ===
v543 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B19" "B138" "B137" "B17" "B83" "B85" "B87" "B136" "B29" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i756 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-123419 - -7187] ⇊00000000fffe00e5 ⇈00000000ffffffed
valueDescription: i32
=== Inputs ===
merge: v753 
values: i755 i760 i762 i764 i766 i768 i770 i772 i774 
=== Succesors ===
=== Usages ===
v758 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v753 values: i755 i760 i762 i764 i766 i768 i770 i772 i774  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v753 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v754 v759 v761 v763 v765 v767 v769 v771 v773 
=== Succesors ===
next: v758 
=== Usages ===
i756 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v754 v759 v761 v763 v765 v767 v769 v771 v773 #next: v758  <|@  <|@
f <@*|@fixed>@ <|@
tid v758 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?9 
actionAndReason: i756 
speculation: a741 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v753 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?9 actionAndReason: i756 speculation: a741  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B142" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterData.of(CharacterData.java:77) [bci: 4]
at java.lang.Character.isWhitespace(Character.java:6789) [bci: 1]
at java.lang.Character.isWhitespace(Character.java:6757) [bci: 1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v749 
=== Usages ===
=== Predecessor ===
v535 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v749  <|@  <|@
f <@~|@floating>@ <|@
tid i750 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -106003
stableDimension: 0
stamp: i32 [-106003] ⇊00000000fffe61ed ⇈00000000fffe61ed
stampKind: i32
value: int[-106003|0xfffffffffffe61ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i742 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v738 
=== Predecessor ===
v534 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B142" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.current(SignatureParser.java:95) [bci: 34]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:257) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v747 
=== Usages ===
=== Predecessor ===
v531 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v747  <|@  <|@
f <@~|@floating>@ <|@
tid i748 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -109083
stableDimension: 0
stamp: i32 [-109083] ⇊00000000fffe55e5 ⇈00000000fffe55e5
stampKind: i32
value: int[-109083|0xfffffffffffe55e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i742 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v747 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v738 
=== Predecessor ===
v530 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B3" "B141" "B140" "B5" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i742 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-109083 - -57619] ⇊00000000fffe00e5 ⇈00000000ffff7ffd
valueDescription: i32
=== Inputs ===
merge: v738 
values: i746 i748 i750 i752 
=== Succesors ===
=== Usages ===
v744 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v738 values: i746 i748 i750 i752  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v738 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v745 v747 v749 v751 
=== Succesors ===
next: v744 
=== Usages ===
i742 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v745 v747 v749 v751 #next: v744  <|@  <|@
f <@*|@fixed>@ <|@
tid v744 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i742 
speculation: a741 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v738 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i742 speculation: a741  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B141" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a1674 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a1674  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lsun/reflect/generics/parser/SignatureParser;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 ?70 ?9 ?328 ?242 v1694 ?243 ?72 v1693 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1693 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1674 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1674 <|@
result v1|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SignatureParser.input
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.current(SignatureParser.java:95) [bci: 27]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 9]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1693 
=== Succesors ===
next: i1675 
=== Usages ===
a396 v1695 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1693 #next: i1675  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<SignatureParser.parseIdentifier()>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: SignatureParser.java
sourceLine: 255
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - 
=== Succesors ===
=== Usages ===
v744 a794 i1675 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v1695 <|@
result [v1|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1674 
=== Succesors ===
=== Usages ===
i1675 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1674  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1675 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.current(SignatureParser.java:95) [bci: 34]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 9]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v1695 
=== Succesors ===
next: i1676 
=== Usages ===
v455 v425 
=== Predecessor ===
a1674 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v1695 #next: i1676  <|@  <|@
f <@~|@floating>@ <|@
tid v1694 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1676 v434 v478 v489 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1676 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SignatureParser.index
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.current(SignatureParser.java:95) [bci: 31]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 9]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1694 
=== Succesors ===
next: v531 
=== Usages ===
v425 v1697 i240 
=== Predecessor ===
i1675 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1694 #next: v531  <|@  <|@
f <@~|@floating>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.current(SignatureParser.java:95) [bci: 34]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:257) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1676 
y: i1675 
=== Succesors ===
=== Usages ===
v531 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1676 y: i1675  <|@  <|@
f <@~|@floating>@ <|@
tid a741 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v744 v758 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j821 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1594 j1541 j1481 j1423 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v813 <|@
result v4|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a906 a1008 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i913 <|@
result int[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i914 i1015 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i883 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i884 i987 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i890 <|@
result int[16777215|0xffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v891 v993 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.current(SignatureParser.java:95) [bci: 34]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:257) [bci: 19]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v425 
=== Succesors ===
trueSuccessor: v528 
falseSuccessor: v530 
=== Usages ===
=== Predecessor ===
i1676 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v425 #trueSuccessor: v528 #falseSuccessor: v530  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@74196ce0 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:255) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B140" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.current(SignatureParser.java:95) [bci: 34]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:257) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1677 
=== Usages ===
i1677 
=== Predecessor ===
v531 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1677  <|@  <|@
f <@~|@floating>@ <|@
tid a396 <|@
result v5|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.current(SignatureParser.java:95) [bci: 27]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 9]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1674 
=== Succesors ===
=== Usages ===
v1697 v1699 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1674  <|@  <|@
f <@~|@floating>@ <|@
tid v1697 <|@
result [v5|QWORD[.] + v3|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a396 
index: i1676 
=== Succesors ===
=== Usages ===
i1677 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a396 index: i1676  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1677 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.current(SignatureParser.java:95) [bci: 34]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:257) [bci: 19]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v528 
address: v1697 
=== Succesors ===
next: v535 
=== Usages ===
i433 j494 v867 
=== Predecessor ===
v528 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v528 address: v1697 #next: v535  <|@  <|@
f <@~|@floating>@ <|@
tid i433 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.current(SignatureParser.java:95) [bci: 34]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:257) [bci: 19]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1677 
=== Succesors ===
=== Usages ===
v224 ?362 v233 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1677  <|@  <|@
f <@~|@floating>@ <|@
tid i47 <|@
result int[-256|0xffffffffffffff00] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.CharacterData.of(CharacterData.java:77) [bci: 4]
at java.lang.Character.isWhitespace(Character.java:6789) [bci: 1]
at java.lang.Character.isWhitespace(Character.java:6757) [bci: 1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 12]
rawvalue: -256
stableDimension: 0
stamp: i32 [-256] ⇊00000000ffffff00 ⇈00000000ffffff00
stampKind: i32
value: int[-256|0xffffffffffffff00]
=== Inputs ===
=== Succesors ===
=== Usages ===
v48 v233 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterData.of(CharacterData.java:77) [bci: 4]
at java.lang.Character.isWhitespace(Character.java:6789) [bci: 1]
at java.lang.Character.isWhitespace(Character.java:6757) [bci: 1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 12]
stamp: void
=== Inputs ===
x: i433 
y: i47 
=== Succesors ===
=== Usages ===
v535 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i433 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterData.of(CharacterData.java:77) [bci: 4]
at java.lang.Character.isWhitespace(Character.java:6789) [bci: 1]
at java.lang.Character.isWhitespace(Character.java:6757) [bci: 1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 12]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v233 
=== Succesors ===
trueSuccessor: v532 
falseSuccessor: v534 
=== Usages ===
=== Predecessor ===
i1677 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v233 #trueSuccessor: v532 #falseSuccessor: v534  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4796bf3d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVSX [v5|QWORD[.] + v3|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVZX v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST v7|DWORD y: -256 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v532 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterData.of(CharacterData.java:77) [bci: 4]
at java.lang.Character.isWhitespace(Character.java:6789) [bci: 1]
at java.lang.Character.isWhitespace(Character.java:6757) [bci: 1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1678 
=== Usages ===
i1678 
=== Predecessor ===
v535 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1678  <|@  <|@
f <@~|@floating>@ <|@
tid a75 <|@
result v8|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.CharacterDataLatin1.getProperties(CharacterDataLatin1.java:72) [bci: 3]
at java.lang.CharacterDataLatin1.isWhitespace(CharacterDataLatin1.java:202) [bci: 2]
at java.lang.Character.isWhitespace(Character.java:6789) [bci: 5]
at java.lang.Character.isWhitespace(Character.java:6757) [bci: 1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 12]
rawvalue: int[256]{1207963663, 1207963663, 1207963663, 1207963663, 1207963663, ...}
stableDimension: 0
stamp: a!# [I
stampKind: a -
value: Object[int[256]{1207963663, 1207963663, 1207963663, 1207963663, 1207963663, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1698 v1696 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j494 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.lang.CharacterDataLatin1.getProperties(CharacterDataLatin1.java:72) [bci: 7]
at java.lang.CharacterDataLatin1.isWhitespace(CharacterDataLatin1.java:202) [bci: 2]
at java.lang.Character.isWhitespace(Character.java:6789) [bci: 5]
at java.lang.Character.isWhitespace(Character.java:6757) [bci: 1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 12]
resultBits: 64
stamp: i64 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1677 
=== Succesors ===
=== Usages ===
v1696 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1677  <|@  <|@
f <@~|@floating>@ <|@
tid v1696 <|@
result [v8|QWORD[.] + v9|QWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a75 
index: j494 
=== Succesors ===
=== Usages ===
i1678 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a75 index: j494  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1678 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.lang.CharacterDataLatin1.getProperties(CharacterDataLatin1.java:72) [bci: 7]
at java.lang.CharacterDataLatin1.isWhitespace(CharacterDataLatin1.java:202) [bci: 2]
at java.lang.Character.isWhitespace(Character.java:6789) [bci: 5]
at java.lang.Character.isWhitespace(Character.java:6757) [bci: 1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 12]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v532 
address: v1696 
=== Succesors ===
next: v539 
=== Usages ===
i235 
=== Predecessor ===
v532 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v532 address: v1696 #next: v539  <|@  <|@
f <@~|@floating>@ <|@
tid i55 <|@
result int[28672|0x7000] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.CharacterDataLatin1.isWhitespace(CharacterDataLatin1.java:203) [bci: 7]
at java.lang.Character.isWhitespace(Character.java:6789) [bci: 5]
at java.lang.Character.isWhitespace(Character.java:6757) [bci: 1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 12]
rawvalue: 28672
stableDimension: 0
stamp: i32 [28672] ⇊0000000000007000 ⇈0000000000007000
stampKind: i32
value: int[28672|0x7000]
=== Inputs ===
=== Succesors ===
=== Usages ===
i56 i235 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i235 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.lang.CharacterDataLatin1.isWhitespace(CharacterDataLatin1.java:203) [bci: 10]
at java.lang.Character.isWhitespace(Character.java:6789) [bci: 5]
at java.lang.Character.isWhitespace(Character.java:6757) [bci: 1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 12]
stamp: i32 [0 - 28672] ⇈0000000000007000
=== Inputs ===
x: i1678 
y: i55 
=== Succesors ===
=== Usages ===
v236 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i1678 y: i55  <|@  <|@
f <@~|@floating>@ <|@
tid i57 <|@
result int[16384|0x4000] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.CharacterDataLatin1.isWhitespace(CharacterDataLatin1.java:203) [bci: 11]
at java.lang.Character.isWhitespace(Character.java:6789) [bci: 5]
at java.lang.Character.isWhitespace(Character.java:6757) [bci: 1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 12]
rawvalue: 16384
stableDimension: 0
stamp: i32 [16384] ⇊0000000000004000 ⇈0000000000004000
stampKind: i32
value: int[16384|0x4000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v58 v236 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.CharacterDataLatin1.isWhitespace(CharacterDataLatin1.java:203) [bci: 14]
at java.lang.Character.isWhitespace(Character.java:6789) [bci: 5]
at java.lang.Character.isWhitespace(Character.java:6757) [bci: 1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 12]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i235 
y: i57 
=== Succesors ===
=== Usages ===
v539 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i235 y: i57  <|@  <|@
f <@*|@fixed>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterDataLatin1.isWhitespace(CharacterDataLatin1.java:203) [bci: 14]
at java.lang.Character.isWhitespace(Character.java:6789) [bci: 5]
at java.lang.Character.isWhitespace(Character.java:6757) [bci: 1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 12]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v236 
=== Succesors ===
trueSuccessor: v538 
falseSuccessor: v536 
=== Usages ===
=== Predecessor ===
i1678 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v236 #trueSuccessor: v538 #falseSuccessor: v536  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[256]{1207963663, 1207963663, 1207963663, 1207963663, 1207963663, ...}] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVZX v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVE input: int[28672|0x7000] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = AND (x: v10|DWORD, ~y: [v8|QWORD[.] + v9|QWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: 16384 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B142" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterDataLatin1.isWhitespace(CharacterDataLatin1.java:203) [bci: 14]
at java.lang.Character.isWhitespace(Character.java:6789) [bci: 5]
at java.lang.Character.isWhitespace(Character.java:6757) [bci: 1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v745 
=== Usages ===
=== Predecessor ===
v539 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v745  <|@  <|@
f <@~|@floating>@ <|@
tid i746 <|@
result int[-108307|0xfffffffffffe58ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -108307
stableDimension: 0
stamp: i32 [-108307] ⇊00000000fffe58ed ⇈00000000fffe58ed
stampKind: i32
value: int[-108307|0xfffffffffffe58ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i742 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v745 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v738 
=== Predecessor ===
v538 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-108307|0xfffffffffffe58ed]] destination: B3 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterDataLatin1.isWhitespace(CharacterDataLatin1.java:203) [bci: 14]
at java.lang.Character.isWhitespace(Character.java:6789) [bci: 5]
at java.lang.Character.isWhitespace(Character.java:6757) [bci: 1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v224 
=== Usages ===
=== Predecessor ===
v539 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v224  <|@  <|@
f <@~|@floating>@ <|@
tid v1101 <|@
result meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v979 v1074 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v969 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/String;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j1066 j1673 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i154 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:150) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i155 a953 a1050 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1097 <|@
result long[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1098 j1104 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i79 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i519 a1008 a906 v157 v170 v178 v188 v1080 v985 v877 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid a81 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@915094e
hasIdentity: true
objectId: -1
stamp: a!# Ljava/lang/StringBuilder;
type: HotSpotType<Ljava/lang/StringBuilder;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?213 ?332 ?344 ?243 ?9 ?208 ?72 ?32 ?288 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1087 <|@
result meta{HotSpotType<[C, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v823 v863 v933 v1031 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j814 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v819 v860 v930 v1028 v1127 v1254 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i587 <|@
result int[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 16
stableDimension: 0
stamp: i32 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
v859 v818 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i66 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.advance(SignatureParser.java:101) [bci: 0]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:269) [bci: 104]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i68 v351 i108 v118 i153 v166 i240 i297 ?288 i986 i882 a953 a1050 a794 a840 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1084 <|@
result int[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
a794 a840 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v780 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a794 a840 a953 a1050 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1081 <|@
result long[48|0x30] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 48
stableDimension: 0
stamp: i64 [48] ⇊0000000000000030 ⇈0000000000000030
stampKind: i64
value: long[48|0x30]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1082 j1089 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
keyProbabilities: [D@1f75993f
keySuccessors: [I@7c1618ad
keys: [I@7f24328
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:258) [bci: 24]
stamp: void
=== Inputs ===
value: i433 
=== Succesors ===
successors: v226 v227 v228 
=== Usages ===
=== Predecessor ===
v536 >@ <|@
instruction <@IntegerSwitch|@org.graalvm.compiler.nodes.extended.IntegerSwitchNode>@ value: i433 #successors: v226 v227 v228  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v7|DWORD - keyConstants: [int[46|0x2e], int[47|0x2f], int[58|0x3a], int[59|0x3b], int[60|0x3c], int[62|0x3e], int[91|0x5b]] keyTargets: [B4 -> B6, B4 -> B6, B4 -> B6, B4 -> B6, B4 -> B6, B4 -> B6, B4 -> B6] defaultTarget: B4 -> B10 strategy: BinaryStrategy[avgEffort=3.8795180722891565] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B142" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:258) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v751 
=== Usages ===
=== Predecessor ===
v224 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v751  <|@  <|@
f <@~|@floating>@ <|@
tid i752 <|@
result int[-57619|0xffffffffffff1eed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -57619
stableDimension: 0
stamp: i32 [-57619] ⇊00000000ffff1eed ⇈00000000ffff1eed
stampKind: i32
value: int[-57619|0xffffffffffff1eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i742 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v751 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v738 
=== Predecessor ===
v226 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-57619|0xffffffffffff1eed]] destination: B5 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4593346058499059860
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: j782 
=== Usages ===
=== Predecessor ===
v224 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j782  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j782 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j801 
=== Usages ===
v1706 v1707 
=== Predecessor ===
v227 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j801  <|@  <|@
f <@~|@floating>@ <|@
tid v1706 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j782 
index: - 
=== Succesors ===
=== Usages ===
j801 v803 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j782 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j801 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1706 
=== Succesors ===
next: j802 
=== Usages ===
j1082 j807 v1743 
=== Predecessor ===
j782 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1706 #next: j802  <|@  <|@
f <@~|@floating>@ <|@
tid v1707 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j782 
index: - 
=== Succesors ===
=== Usages ===
j802 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j782 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j802 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1707 
=== Succesors ===
next: v790 
=== Usages ===
v787 
=== Predecessor ===
j801 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1707 #next: v790  <|@  <|@
f <@~|@floating>@ <|@
tid j1082 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j801 
y: j1081 
=== Succesors ===
=== Usages ===
v787 v803 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j801 y: j1081  <|@  <|@
f <@~|@floating>@ <|@
tid v787 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j802 
y: j1082 
=== Succesors ===
=== Usages ===
v790 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j802 y: j1082  <|@  <|@
f <@*|@fixed>@ <|@
tid v790 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v787 
=== Succesors ===
trueSuccessor: v788 
falseSuccessor: v789 
=== Usages ===
=== Predecessor ===
j802 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v787 #trueSuccessor: v788 #falseSuccessor: v789  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = LEA [v14|QWORD + 48] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v15|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4563199071113914713
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v788 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a794 
=== Usages ===
=== Predecessor ===
v790 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a794  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a794 <|@
result v16|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?2 
arguments: v780 i1084 i66 
=== Succesors ===
next: j795 
=== Usages ===
j795 
=== Predecessor ===
v788 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2 arguments: v780 i1084 i66 #next: j795  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j795 <|@
result v16|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a794 
=== Succesors ===
next: v808 
=== Usages ===
j807 
=== Predecessor ===
a794 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a794 #next: v808  <|@  <|@
f <@*|@fixed>@ <|@
tid v808 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v805 
=== Predecessor ===
j795 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:255) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v16|QWORD[.]] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4593259242120700911
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v789 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v803 
=== Usages ===
=== Predecessor ===
v790 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v803  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v803 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1706 
value: j1082 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v799 
=== Usages ===
=== Predecessor ===
v789 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1706 value: j1082 stateAfter: - lastLocationAccess: - #next: v799  <|@  <|@
f <@~|@floating>@ <|@
tid v1743 <|@
result [v14|QWORD + 240] <|@
d <@d|@=== Debug Properties ===
displacement: 240
scale: Times1
stamp: void*
=== Inputs ===
base: j801 
index: - 
=== Succesors ===
=== Usages ===
v799 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j801 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v799 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1743 
=== Succesors ===
next: v806 
=== Usages ===
=== Predecessor ===
v803 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1743 #next: v806  <|@  <|@
f <@*|@fixed>@ <|@
tid v806 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v805 
=== Predecessor ===
v799 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v14|QWORD + 240] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v14|QWORD] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593346058499059860
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j807 <|@
result v17|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v805 
values: j801 j795 
=== Succesors ===
=== Usages ===
v1710 v1709 a586 v1708 v1744 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v805 values: j801 j795  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v805 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v806 v808 
=== Succesors ===
next: a586 
=== Usages ===
j807 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v806 v808 #next: a586  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a586 <|@
result v18|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j807 
=== Succesors ===
next: v818 
=== Usages ===
a593 
=== Predecessor ===
v805 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j807 #next: v818  <|@  <|@
f <@~|@floating>@ <|@
tid v1708 <|@
result [v17|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j807 
index: - 
=== Succesors ===
=== Usages ===
v818 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j807 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v818 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1708 
value: i587 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v819 
=== Usages ===
=== Predecessor ===
a586 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1708 value: i587 stateAfter: - lastLocationAccess: - #next: v819  <|@  <|@
f <@~|@floating>@ <|@
tid v1709 <|@
result [v17|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j807 
index: - 
=== Succesors ===
=== Usages ===
v819 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j807 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v819 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1709 
value: j814 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v823 
=== Usages ===
=== Predecessor ===
v818 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1709 value: j814 stateAfter: - lastLocationAccess: - #next: v823  <|@  <|@
f <@~|@floating>@ <|@
tid v1710 <|@
result [v17|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j807 
index: - 
=== Succesors ===
=== Usages ===
v823 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j807 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v823 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1710 
value: v1087 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v828 
=== Usages ===
=== Predecessor ===
v819 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1710 value: v1087 stateAfter: - lastLocationAccess: - #next: v828  <|@  <|@
f <@~|@floating>@ <|@
tid v1744 <|@
result [v17|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j807 
index: - 
=== Succesors ===
=== Usages ===
v828 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j807 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v826 <|@
result v19|V256_QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i64,i64,i64,i64>
stampKind: <i64,i64,i64,i64>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v828 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v828 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1744 
value: v826 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a593 
=== Usages ===
=== Predecessor ===
v823 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1744 value: v826 stateAfter: - lastLocationAccess: - #next: a593  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a593 <|@
result v18|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a586 
=== Succesors ===
next: v594 
=== Usages ===
a348 
=== Predecessor ===
v828 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a586 #next: v594  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v336 
=== Usages ===
=== Predecessor ===
a593 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v336  <|@  <|@
f <@*|@fixed>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v335 
=== Predecessor ===
v594 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v17|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE v17|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v17|QWORD[*] + 12] y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v17|QWORD[*]] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v17|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v19|V256_QWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v17|QWORD[*] + 16], input: v19|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], v18|QWORD[.]] destination: B9 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606097214070530541
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 97]
stamp: void
=== Inputs ===
=== Succesors ===
next: v434 
=== Usages ===
=== Predecessor ===
v224 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v434  <|@  <|@
f <@~|@floating>@ <|@
tid i240 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.advance(SignatureParser.java:102) [bci: 32]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:269) [bci: 104]
stamp: i32
=== Inputs ===
x: i1676 
y: i66 
=== Succesors ===
=== Usages ===
v434 i358 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1676 y: i66  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: SignatureParser.index
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.advance(SignatureParser.java:102) [bci: 33]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:269) [bci: 104]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1694 
value: i240 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j829 
=== Usages ===
=== Predecessor ===
v228 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1694 value: i240 stateAfter: - lastLocationAccess: - #next: j829  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j829 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j844 
=== Usages ===
v1711 v1712 
=== Predecessor ===
v434 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j844  <|@  <|@
f <@~|@floating>@ <|@
tid v1711 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j829 
index: - 
=== Succesors ===
=== Usages ===
j844 v846 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j829 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j844 <|@
result v21|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1711 
=== Succesors ===
next: j845 
=== Usages ===
j1089 j850 v1745 
=== Predecessor ===
j829 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1711 #next: j845  <|@  <|@
f <@~|@floating>@ <|@
tid v1712 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j829 
index: - 
=== Succesors ===
=== Usages ===
j845 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j829 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j845 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1712 
=== Succesors ===
next: v837 
=== Usages ===
v834 
=== Predecessor ===
j844 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1712 #next: v837  <|@  <|@
f <@~|@floating>@ <|@
tid j1089 <|@
result v22|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j844 
y: j1081 
=== Succesors ===
=== Usages ===
v834 v846 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j844 y: j1081  <|@  <|@
f <@~|@floating>@ <|@
tid v834 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j845 
y: j1089 
=== Succesors ===
=== Usages ===
v837 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j845 y: j1089  <|@  <|@
f <@*|@fixed>@ <|@
tid v837 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v834 
=== Succesors ===
trueSuccessor: v835 
falseSuccessor: v836 
=== Usages ===
=== Predecessor ===
j845 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v834 #trueSuccessor: v835 #falseSuccessor: v836  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = INC v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = LEA [v21|QWORD + 48] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v22|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4576223698277216085
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v835 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a840 
=== Usages ===
=== Predecessor ===
v837 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a840  <|@  <|@
tid ?243 <|@
d <@d|@=== Debug Properties ===
bci: 104
code: ResolvedJavaMethodBytecode<SignatureParser.parseIdentifier()>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: SignatureParser.java
sourceLine: 269
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a81 - 
=== Succesors ===
=== Usages ===
?242 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a81 -  <|@  <|@
tid a202 <|@
d <@d|@=== Debug Properties ===
componentType: HotSpotResolvedPrimitiveType<char>
hasIdentity: true
length: 16
objectId: 0
stamp: a!# [C
=== Inputs ===
=== Succesors ===
=== Usages ===
?288 ?362 
=== Predecessor ===
- >@ <|@
instruction <@VirtualArray|@org.graalvm.compiler.nodes.virtual.VirtualArrayNode>@  <|@  <|@
tid ?288 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a81 
values: i66 a202 
=== Succesors ===
=== Usages ===
?242 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a81 values: i66 a202  <|@  <|@
tid ?362 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a202 
values: i433 - - - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
?242 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a202 values: i433 - - - - - - - - - - - - - - -  <|@  <|@
tid ?242 <|@
d <@d|@=== Debug Properties ===
bci: 36
code: ResolvedJavaMethodBytecode<SignatureParser.advance()>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.advance(SignatureParser.java:102) [bci: 33]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:269) [bci: 104]
rethrowException: false
sourceFile: SignatureParser.java
sourceLine: 103
stackSize: 0
=== Inputs ===
outerFrameState: ?243 
values: a1 
virtualObjectMappings: ?288 ?362 
=== Succesors ===
=== Usages ===
a840 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?243 values: a1 virtualObjectMappings: ?288 ?362  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a840 <|@
result v23|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?242 
arguments: v780 i1084 i66 
=== Succesors ===
next: j841 
=== Usages ===
j841 
=== Predecessor ===
v835 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?242 arguments: v780 i1084 i66 #next: j841  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j841 <|@
result v23|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a840 
=== Succesors ===
next: v851 
=== Usages ===
j850 
=== Predecessor ===
a840 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a840 #next: v851  <|@  <|@
f <@*|@fixed>@ <|@
tid v851 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v848 
=== Predecessor ===
j841 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@sun.reflect.generics.parser.SignatureParser.advance(SignatureParser.java:103) [bci: 36]
locals: v0|QWORD[.] 
sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:269) [bci: 104]
locals: v0|QWORD[.] vobject:StringBuilder:0{count=int[1|0x1],value=vobject:char[]:1{0=v7|DWORD,1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]}} - 
vobject:StringBuilder:0{count=int[1|0x1],value=vobject:char[]:1{0=v7|DWORD,1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]}} Ljava/lang/StringBuilder; int[1|0x1] vobject:char[]:1{0=v7|DWORD,1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} 
vobject:char[]:1{0=v7|DWORD,1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} [C v7|DWORD int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:36, 104] <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|QWORD[.]] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606017994125278000
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v836 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v846 
=== Usages ===
=== Predecessor ===
v837 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v846  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v846 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1711 
value: j1089 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v843 
=== Usages ===
=== Predecessor ===
v836 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1711 value: j1089 stateAfter: - lastLocationAccess: - #next: v843  <|@  <|@
f <@~|@floating>@ <|@
tid v1745 <|@
result [v21|QWORD + 240] <|@
d <@d|@=== Debug Properties ===
displacement: 240
scale: Times1
stamp: void*
=== Inputs ===
base: j844 
index: - 
=== Succesors ===
=== Usages ===
v843 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j844 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v843 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1745 
=== Succesors ===
next: v849 
=== Usages ===
=== Predecessor ===
v846 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1745 #next: v849  <|@  <|@
f <@*|@fixed>@ <|@
tid v849 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v848 
=== Predecessor ===
v843 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v21|QWORD + 240] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v21|QWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4606097214070530541
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j850 <|@
result v24|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v848 
values: j844 j841 
=== Succesors ===
=== Usages ===
v1715 v1714 a597 v1713 v1746 v1747 v1748 v1749 v1750 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v848 values: j844 j841  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v848 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v849 v851 
=== Succesors ===
next: a597 
=== Usages ===
j850 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v849 v851 #next: a597  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a597 <|@
result v25|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j850 
=== Succesors ===
next: v859 
=== Usages ===
a603 
=== Predecessor ===
v848 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j850 #next: v859  <|@  <|@
f <@~|@floating>@ <|@
tid v1713 <|@
result [v24|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j850 
index: - 
=== Succesors ===
=== Usages ===
v859 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j850 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v859 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1713 
value: i587 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v860 
=== Usages ===
=== Predecessor ===
a597 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1713 value: i587 stateAfter: - lastLocationAccess: - #next: v860  <|@  <|@
f <@~|@floating>@ <|@
tid v1714 <|@
result [v24|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j850 
index: - 
=== Succesors ===
=== Usages ===
v860 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j850 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v860 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1714 
value: j814 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v863 
=== Usages ===
=== Predecessor ===
v859 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1714 value: j814 stateAfter: - lastLocationAccess: - #next: v863  <|@  <|@
f <@~|@floating>@ <|@
tid v1715 <|@
result [v24|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j850 
index: - 
=== Succesors ===
=== Usages ===
v863 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j850 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v863 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1715 
value: v1087 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v867 
=== Usages ===
=== Predecessor ===
v860 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1715 value: v1087 stateAfter: - lastLocationAccess: - #next: v867  <|@  <|@
f <@~|@floating>@ <|@
tid v1746 <|@
result [v24|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j850 
index: - 
=== Succesors ===
=== Usages ===
v867 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j850 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v867 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1746 
value: i1677 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v871 
=== Usages ===
=== Predecessor ===
v863 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1746 value: i1677 stateAfter: - lastLocationAccess: - #next: v871  <|@  <|@
f <@~|@floating>@ <|@
tid v1747 <|@
result [v24|QWORD[*] + 18] <|@
d <@d|@=== Debug Properties ===
displacement: 18
scale: Times1
stamp: void*
=== Inputs ===
base: j850 
index: - 
=== Succesors ===
=== Usages ===
v871 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j850 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v868 <|@
result v26|V128_QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i64,i64>
stampKind: <i64,i64>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v871 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v871 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1747 
value: v868 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v874 
=== Usages ===
=== Predecessor ===
v867 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1747 value: v868 stateAfter: - lastLocationAccess: - #next: v874  <|@  <|@
f <@~|@floating>@ <|@
tid v1748 <|@
result [v24|QWORD[*] + 34] <|@
d <@d|@=== Debug Properties ===
displacement: 34
scale: Times1
stamp: void*
=== Inputs ===
base: j850 
index: - 
=== Succesors ===
=== Usages ===
v874 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j850 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j584 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1534 j1482 j1589 v1489 v1551 j1542 v874 v1602 j1416 j1424 v1434 j1595 j1476 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v874 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1748 
value: j584 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v877 
=== Usages ===
=== Predecessor ===
v871 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1748 value: j584 stateAfter: - lastLocationAccess: - #next: v877  <|@  <|@
f <@~|@floating>@ <|@
tid v1749 <|@
result [v24|QWORD[*] + 42] <|@
d <@d|@=== Debug Properties ===
displacement: 42
scale: Times1
stamp: void*
=== Inputs ===
base: j850 
index: - 
=== Succesors ===
=== Usages ===
v877 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j850 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v877 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1749 
value: i79 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v881 
=== Usages ===
=== Predecessor ===
v874 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1749 value: i79 stateAfter: - lastLocationAccess: - #next: v881  <|@  <|@
f <@~|@floating>@ <|@
tid v1750 <|@
result [v24|QWORD[*] + 46] <|@
d <@d|@=== Debug Properties ===
displacement: 46
scale: Times1
stamp: void*
=== Inputs ===
base: j850 
index: - 
=== Succesors ===
=== Usages ===
v881 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j850 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i878 <|@
result short[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i16
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v881 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v881 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1750 
value: i878 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a603 
=== Usages ===
=== Predecessor ===
v877 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1750 value: i878 stateAfter: - lastLocationAccess: - #next: a603  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a603 <|@
result v25|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a597 
=== Succesors ===
next: v604 
=== Usages ===
a298 
=== Predecessor ===
v881 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a597 #next: v604  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v7 
=== Usages ===
=== Predecessor ===
a603 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v7  <|@  <|@
tid ?72 <|@
d <@d|@=== Debug Properties ===
bci: 104
code: ResolvedJavaMethodBytecode<SignatureParser.parseIdentifier()>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: SignatureParser.java
sourceLine: 269
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a81 - 
=== Succesors ===
=== Usages ===
?70 ?328 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a81 -  <|@  <|@
f <@~|@floating>@ <|@
tid i1665 <|@
result short[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i16 [0] ⇈0000000000000000
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1641 v1659 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1666 <|@
result v27|V32_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1643 v1660 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1667 <|@
result v28|V64_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1645 v1661 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1668 <|@
result v29|V128_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1647 v1662 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1664 <|@
result v30|V256_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1648 v1663 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1450 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1451 j1502 j1564 j1615 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1392 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1406 j1469 j1525 j1582 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1446 <|@
result long[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1447 j1499 j1561 j1612 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1414 <|@
result long[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1415 j1475 j1533 j1588 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1442 <|@
result long[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1443 j1496 j1558 j1609 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1438 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1439 j1493 j1555 j1606 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j393 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.current(SignatureParser.java:95) [bci: 27]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 9]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1487 j1431 j1600 j1549 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1432 <|@
result long[-16|0xfffffffffffffff0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] ⇊fffffffffffffff0 ⇈fffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1433 j1488 j1550 j1601 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v8 
=== Predecessor ===
v604 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = MOVE v24|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v24|QWORD[*] + 12] y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v24|QWORD[*]] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v24|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[*] + 16], y: v6|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v26|V128_QWORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v24|QWORD[*] + 18], input: v26|V128_QWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[*] + 34], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[*] + 42], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[*] + 46], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction v27|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction v28|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction v29|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction v30|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|QWORD[.], int[1|0x1], v20|DWORD] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B134" "B82" 
    successors "B15" "B138" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618914838431682294
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a298 <|@
result v31|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# [C
valueDescription: a -
=== Inputs ===
merge: v8 
values: a603 a712 a298 
=== Succesors ===
=== Usages ===
?208 v1701 a298 v1703 ?332 a348 v1700 v1790 v1791 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v8 values: a603 a712 a298  <|@  <|@
f <@~|@floating>@ <|@
tid i297 <|@
result v32|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v8 
values: i66 i108 i108 
=== Succesors ===
=== Usages ===
?208 v1702 v1701 i108 j1117 i187 i519 v351 v469 v481 v891 v685 i707 a906 v929 i882 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v8 values: i66 i108 i108  <|@  <|@
f <@~|@floating>@ <|@
tid i358 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v8 
values: i240 i68 i68 
=== Succesors ===
=== Usages ===
v455 v1699 i68 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v8 values: i240 i68 i68  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 7.300000000000001
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 8]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v7 
=== Succesors ===
next: v544 
=== Usages ===
v31 v39 a298 i297 v321 i358 v581 v576 v543 v548 v553 v566 v571 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v7 #next: v544  <|@  <|@
tid ?208 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a81 
values: i297 a298 
=== Succesors ===
=== Usages ===
?9 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a81 values: i297 a298  <|@  <|@
tid ?9 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<SignatureParser.parseIdentifier()>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: SignatureParser.java
sourceLine: 256
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a81 - 
virtualObjectMappings: ?208 
=== Succesors ===
=== Usages ===
v758 a1008 a953 a906 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a81 - virtualObjectMappings: ?208  <|@  <|@
f <@~|@floating>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.current(SignatureParser.java:95) [bci: 34]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:257) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i358 
y: i1675 
=== Succesors ===
=== Usages ===
v544 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i358 y: i1675  <|@  <|@
f <@*|@fixed>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.current(SignatureParser.java:95) [bci: 34]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:257) [bci: 19]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v455 
=== Succesors ===
trueSuccessor: v540 
falseSuccessor: v543 
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v455 #trueSuccessor: v540 #falseSuccessor: v543  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|QWORD[.], v32|DWORD, v33|DWORD] = LABEL numbPhis: 3 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B137" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618914838431682294
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.current(SignatureParser.java:95) [bci: 34]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:257) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1679 
=== Usages ===
i1679 
=== Predecessor ===
v544 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1679  <|@  <|@
f <@~|@floating>@ <|@
tid v1699 <|@
result [v5|QWORD[.] + v33|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a396 
index: i358 
=== Succesors ===
=== Usages ===
i1679 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a396 index: i358  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1679 <|@
result v34|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.current(SignatureParser.java:95) [bci: 34]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:257) [bci: 19]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v540 
address: v1699 
=== Succesors ===
next: v549 
=== Usages ===
i463 j497 v477 v488 
=== Predecessor ===
v540 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v540 address: v1699 #next: v549  <|@  <|@
f <@~|@floating>@ <|@
tid i463 <|@
result v35|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.current(SignatureParser.java:95) [bci: 34]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:257) [bci: 19]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1679 
=== Succesors ===
=== Usages ===
v48 v27 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1679  <|@  <|@
f <@~|@floating>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterData.of(CharacterData.java:77) [bci: 4]
at java.lang.Character.isWhitespace(Character.java:6789) [bci: 1]
at java.lang.Character.isWhitespace(Character.java:6757) [bci: 1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 12]
stamp: void
=== Inputs ===
x: i463 
y: i47 
=== Succesors ===
=== Usages ===
v549 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i463 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterData.of(CharacterData.java:77) [bci: 4]
at java.lang.Character.isWhitespace(Character.java:6789) [bci: 1]
at java.lang.Character.isWhitespace(Character.java:6757) [bci: 1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 12]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v48 
=== Succesors ===
trueSuccessor: v545 
falseSuccessor: v548 
=== Usages ===
=== Predecessor ===
i1679 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v48 #trueSuccessor: v545 #falseSuccessor: v548  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOVSX [v5|QWORD[.] + v33|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = MOVZX v34|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST v35|DWORD y: -256 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618914838431682294
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterData.of(CharacterData.java:77) [bci: 4]
at java.lang.Character.isWhitespace(Character.java:6789) [bci: 1]
at java.lang.Character.isWhitespace(Character.java:6757) [bci: 1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1680 
=== Usages ===
i1680 
=== Predecessor ===
v549 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1680  <|@  <|@
f <@~|@floating>@ <|@
tid j497 <|@
result v36|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.lang.CharacterDataLatin1.getProperties(CharacterDataLatin1.java:72) [bci: 7]
at java.lang.CharacterDataLatin1.isWhitespace(CharacterDataLatin1.java:202) [bci: 2]
at java.lang.Character.isWhitespace(Character.java:6789) [bci: 5]
at java.lang.Character.isWhitespace(Character.java:6757) [bci: 1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 12]
resultBits: 64
stamp: i64 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1679 
=== Succesors ===
=== Usages ===
v1698 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1679  <|@  <|@
f <@~|@floating>@ <|@
tid v1698 <|@
result [v8|QWORD[.] + v36|QWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a75 
index: j497 
=== Succesors ===
=== Usages ===
i1680 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a75 index: j497  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1680 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.lang.CharacterDataLatin1.getProperties(CharacterDataLatin1.java:72) [bci: 7]
at java.lang.CharacterDataLatin1.isWhitespace(CharacterDataLatin1.java:202) [bci: 2]
at java.lang.Character.isWhitespace(Character.java:6789) [bci: 5]
at java.lang.Character.isWhitespace(Character.java:6757) [bci: 1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 12]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v545 
address: v1698 
=== Succesors ===
next: v554 
=== Usages ===
i56 
=== Predecessor ===
v545 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v545 address: v1698 #next: v554  <|@  <|@
f <@~|@floating>@ <|@
tid i56 <|@
result v38|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.lang.CharacterDataLatin1.isWhitespace(CharacterDataLatin1.java:203) [bci: 10]
at java.lang.Character.isWhitespace(Character.java:6789) [bci: 5]
at java.lang.Character.isWhitespace(Character.java:6757) [bci: 1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 12]
stamp: i32 [0 - 28672] ⇈0000000000007000
=== Inputs ===
x: i1680 
y: i55 
=== Succesors ===
=== Usages ===
v58 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i1680 y: i55  <|@  <|@
f <@~|@floating>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.CharacterDataLatin1.isWhitespace(CharacterDataLatin1.java:203) [bci: 14]
at java.lang.Character.isWhitespace(Character.java:6789) [bci: 5]
at java.lang.Character.isWhitespace(Character.java:6757) [bci: 1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 12]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i56 
y: i57 
=== Succesors ===
=== Usages ===
v554 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i56 y: i57  <|@  <|@
f <@*|@fixed>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterDataLatin1.isWhitespace(CharacterDataLatin1.java:203) [bci: 14]
at java.lang.Character.isWhitespace(Character.java:6789) [bci: 5]
at java.lang.Character.isWhitespace(Character.java:6757) [bci: 1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 12]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v58 
=== Succesors ===
trueSuccessor: v553 
falseSuccessor: v550 
=== Usages ===
=== Predecessor ===
i1680 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v58 #trueSuccessor: v553 #falseSuccessor: v550  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOVZX v34|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVE input: int[28672|0x7000] <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = AND (x: v37|DWORD, ~y: [v8|QWORD[.] + v36|QWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v38|DWORD y: 16384 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B139" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterDataLatin1.isWhitespace(CharacterDataLatin1.java:203) [bci: 14]
at java.lang.Character.isWhitespace(Character.java:6789) [bci: 5]
at java.lang.Character.isWhitespace(Character.java:6757) [bci: 1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 12]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v8 
=== Succesors ===
next: v763 
=== Usages ===
=== Predecessor ===
v554 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v8 #next: v763  <|@  <|@
f <@~|@floating>@ <|@
tid i764 <|@
result int[-115987|0xfffffffffffe3aed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -115987
stableDimension: 0
stamp: i32 [-115987] ⇊00000000fffe3aed ⇈00000000fffe3aed
stampKind: i32
value: int[-115987|0xfffffffffffe3aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i756 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v753 
=== Predecessor ===
v553 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-115987|0xfffffffffffe3aed]] destination: B17 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618914838431682294
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterDataLatin1.isWhitespace(CharacterDataLatin1.java:203) [bci: 14]
at java.lang.Character.isWhitespace(Character.java:6789) [bci: 5]
at java.lang.Character.isWhitespace(Character.java:6757) [bci: 1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v27 
=== Usages ===
=== Predecessor ===
v554 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v27  <|@  <|@
f <@*|@fixed>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
keyProbabilities: [D@1f75993f
keySuccessors: [I@7c1618ad
keys: [I@7f24328
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:258) [bci: 24]
stamp: void
=== Inputs ===
value: i463 
=== Succesors ===
successors: v29 v31 v33 
=== Usages ===
=== Predecessor ===
v550 >@ <|@
instruction <@IntegerSwitch|@org.graalvm.compiler.nodes.extended.IntegerSwitchNode>@ value: i463 #successors: v29 v31 v33  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v35|DWORD - keyConstants: [int[46|0x2e], int[47|0x2f], int[58|0x3a], int[59|0x3b], int[60|0x3c], int[62|0x3e], int[91|0x5b]] keyTargets: [B18 -> B20, B18 -> B20, B18 -> B20, B18 -> B20, B18 -> B20, B18 -> B20, B18 -> B20] defaultTarget: B18 -> B80 strategy: BinaryStrategy[avgEffort=3.8795180722891565] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B139" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:258) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v754 
=== Usages ===
=== Predecessor ===
v27 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v754  <|@  <|@
f <@~|@floating>@ <|@
tid i755 <|@
result int[-7187|0xffffffffffffe3ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -7187
stableDimension: 0
stamp: i32 [-7187] ⇊00000000ffffe3ed ⇈00000000ffffe3ed
stampKind: i32
value: int[-7187|0xffffffffffffe3ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i756 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v754 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v753 
=== Predecessor ===
v29 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-7187|0xffffffffffffe3ed]] destination: B19 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B28" 
    xhandlers
    flags 
    probability 4605142756898813177
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 92]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v8 
=== Succesors ===
next: v354 
=== Usages ===
=== Predecessor ===
v27 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v8 #next: v354  <|@  <|@
f <@~|@floating>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:194) [bci: 18]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i297 
y: i66 
=== Succesors ===
=== Usages ===
v354 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i297 y: i66  <|@  <|@
f <@*|@fixed>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:194) [bci: 18]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
stamp: void
trueSuccessorProbability: 0.09284041465770032
=== Inputs ===
condition: v351 
=== Succesors ===
trueSuccessor: v352 
falseSuccessor: v353 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v351 #trueSuccessor: v352 #falseSuccessor: v353  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v32|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09284041465770032 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589839373119527878
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 21]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
stamp: void
=== Inputs ===
=== Succesors ===
next: v337 
=== Usages ===
=== Predecessor ===
v354 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v337  <|@  <|@
f <@*|@fixed>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v335 
=== Predecessor ===
v352 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|DWORD, v31|QWORD[.]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B9" "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4596096315436664365
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i519 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483648 - 0]
valueDescription: i32
=== Inputs ===
merge: v335 
values: i79 i297 
=== Succesors ===
=== Usages ===
v178 ?344 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v335 values: i79 i297  <|@  <|@
f <@~|@floating>@ <|@
tid a348 <|@
result v40|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# [C
valueDescription: a -
=== Inputs ===
merge: v335 
values: a593 a298 
=== Succesors ===
=== Usages ===
?344 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v335 values: a593 a298  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v336 v337 
=== Succesors ===
next: v558 
=== Usages ===
i519 a348 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v336 v337 #next: v558  <|@  <|@
tid ?344 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a81 
values: i519 a348 
=== Succesors ===
=== Usages ===
?32 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a81 values: i519 a348  <|@  <|@
tid ?32 <|@
d <@d|@=== Debug Properties ===
bci: 92
code: ResolvedJavaMethodBytecode<SignatureParser.parseIdentifier()>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 92]
rethrowException: false
sourceFile: SignatureParser.java
sourceLine: 266
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a81 - 
virtualObjectMappings: ?344 
=== Succesors ===
=== Usages ===
v556 a1050 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a81 - virtualObjectMappings: ?344  <|@  <|@
f <@~|@floating>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i519 
y: i79 
=== Succesors ===
=== Usages ===
v558 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i519 y: i79  <|@  <|@
f <@*|@fixed>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v178 
=== Succesors ===
trueSuccessor: v557 
falseSuccessor: v555 
=== Usages ===
=== Predecessor ===
v335 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v178 #trueSuccessor: v557 #falseSuccessor: v555  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|DWORD, v40|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v39|DWORD, y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
stamp: void
=== Inputs ===
=== Succesors ===
next: v556 
=== Usages ===
=== Predecessor ===
v558 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v556  <|@  <|@
f <@*|@fixed>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 490
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?32 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v557 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?32  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -125459 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 92]
locals: - vobject:StringBuilder:0{count=v39|DWORD,value=v40|QWORD[.]} - 
vobject:StringBuilder:0{count=v39|DWORD,value=v40|QWORD[.]} Ljava/lang/StringBuilder; v39|DWORD v40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:92] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4596096315436664365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1039 
=== Usages ===
=== Predecessor ===
v558 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1039  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1039 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1054 
=== Usages ===
v1738 v1739 
=== Predecessor ===
v555 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1054  <|@  <|@
f <@~|@floating>@ <|@
tid v1738 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1039 
index: - 
=== Succesors ===
=== Usages ===
j1054 v1056 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1039 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1054 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1738 
=== Succesors ===
next: j1055 
=== Usages ===
j1104 j1060 v1754 
=== Predecessor ===
j1039 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1738 #next: j1055  <|@  <|@
f <@~|@floating>@ <|@
tid v1739 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1039 
index: - 
=== Succesors ===
=== Usages ===
j1055 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1039 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1055 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1739 
=== Succesors ===
next: v1047 
=== Usages ===
v1044 
=== Predecessor ===
j1054 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1739 #next: v1047  <|@  <|@
f <@~|@floating>@ <|@
tid j1104 <|@
result v42|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1054 
y: j1097 
=== Succesors ===
=== Usages ===
v1044 v1056 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1054 y: j1097  <|@  <|@
f <@~|@floating>@ <|@
tid v1044 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1055 
y: j1104 
=== Succesors ===
=== Usages ===
v1047 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1055 y: j1104  <|@  <|@
f <@*|@fixed>@ <|@
tid v1047 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1044 
=== Succesors ===
trueSuccessor: v1045 
falseSuccessor: v1046 
=== Usages ===
=== Predecessor ===
j1055 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1044 #trueSuccessor: v1045 #falseSuccessor: v1046  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA [v41|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v42|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4566511040685987004
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1045 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1050 
=== Usages ===
=== Predecessor ===
v1047 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1050  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1050 <|@
result v43|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?32 
arguments: v780 i154 i66 
=== Succesors ===
next: j1051 
=== Usages ===
j1051 
=== Predecessor ===
v1045 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?32 arguments: v780 i154 i66 #next: j1051  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1051 <|@
result v43|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1050 
=== Succesors ===
next: v1061 
=== Usages ===
j1060 
=== Predecessor ===
a1050 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1050 #next: v1061  <|@  <|@
f <@*|@fixed>@ <|@
tid v1061 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1058 
=== Predecessor ===
j1051 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 92]
locals: - vobject:StringBuilder:0{count=v39|DWORD,value=v40|QWORD[.]} - 
vobject:StringBuilder:0{count=v39|DWORD,value=v40|QWORD[.]} Ljava/lang/StringBuilder; v39|DWORD v40|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:92] <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v43|QWORD[.]] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596027032485203076
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1046 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1056 
=== Usages ===
=== Predecessor ===
v1047 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1056  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1056 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1738 
value: j1104 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1053 
=== Usages ===
=== Predecessor ===
v1046 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1738 value: j1104 stateAfter: - lastLocationAccess: - #next: v1053  <|@  <|@
f <@~|@floating>@ <|@
tid v1754 <|@
result [v41|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j1054 
index: - 
=== Succesors ===
=== Usages ===
v1053 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1054 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1053 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1754 
=== Succesors ===
next: v1059 
=== Usages ===
=== Predecessor ===
v1056 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1754 #next: v1059  <|@  <|@
f <@*|@fixed>@ <|@
tid v1059 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1058 
=== Predecessor ===
v1053 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v42|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v41|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v41|QWORD] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors 
    xhandlers
    flags 
    probability 4596096315436664365
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1060 <|@
result v44|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1058 
values: j1054 j1051 
=== Succesors ===
=== Usages ===
v1742 v1741 a617 v1755 v1756 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1058 values: j1054 j1051  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1058 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1059 v1061 
=== Succesors ===
next: a617 
=== Usages ===
j1060 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1059 v1061 #next: a617  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a617 <|@
result v45|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1060 
=== Succesors ===
next: j1070 
=== Usages ===
a623 
=== Predecessor ===
v1058 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1060 #next: j1070  <|@  <|@
f <@~|@floating>@ <|@
tid j1066 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v969 
=== Succesors ===
=== Usages ===
v1740 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v969  <|@  <|@
f <@~|@floating>@ <|@
tid v1740 <|@
result [v12|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j1066 
index: - 
=== Succesors ===
=== Usages ===
j1070 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1066 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1070 <|@
result v46|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1740 
=== Succesors ===
next: v1071 
=== Usages ===
v1071 
=== Predecessor ===
a617 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1740 #next: v1071  <|@  <|@
f <@~|@floating>@ <|@
tid v1741 <|@
result [v44|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1060 
index: - 
=== Succesors ===
=== Usages ===
v1071 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1060 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1071 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1741 
value: j1070 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1074 
=== Usages ===
=== Predecessor ===
j1070 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1741 value: j1070 stateAfter: - lastLocationAccess: - #next: v1074  <|@  <|@
f <@~|@floating>@ <|@
tid v1742 <|@
result [v44|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1060 
index: - 
=== Succesors ===
=== Usages ===
v1074 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1060 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1074 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1742 
value: v1101 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1078 
=== Usages ===
=== Predecessor ===
v1071 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1742 value: v1101 stateAfter: - lastLocationAccess: - #next: v1078  <|@  <|@
f <@~|@floating>@ <|@
tid v1755 <|@
result [v44|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1060 
index: - 
=== Succesors ===
=== Usages ===
v1078 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1060 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a626 <|@
result NarrowOop[char[0]{}] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: char[0]{}
stableDimension: 1
stamp: n!# [C
stampKind: n -
value: NarrowOop[char[0]{}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1078 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1078 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1755 
value: a626 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1080 
=== Usages ===
=== Predecessor ===
v1074 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1755 value: a626 stateAfter: - lastLocationAccess: - #next: v1080  <|@  <|@
f <@~|@floating>@ <|@
tid v1756 <|@
result [v44|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1060 
index: - 
=== Succesors ===
=== Usages ===
v1080 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1060 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1080 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1756 
value: i79 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a623 
=== Usages ===
=== Predecessor ===
v1078 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1756 value: i79 stateAfter: - lastLocationAccess: - #next: a623  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a623 <|@
result v45|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a617 
=== Succesors ===
next: v624 
=== Usages ===
v200 
=== Predecessor ===
v1080 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a617 #next: v624  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v200 
=== Usages ===
=== Predecessor ===
a623 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v200  <|@  <|@
f <@*|@fixed>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a623 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v624 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a623 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = MOVE v44|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOV [v12|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v44|QWORD[*]], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v44|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v44|QWORD[*] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v44|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4604495887841767808
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 50]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1681 
=== Usages ===
=== Predecessor ===
v354 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1681  <|@  <|@
f <@~|@floating>@ <|@
tid v1791 <|@
result [v31|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a298 
index: - 
=== Succesors ===
=== Usages ===
i1681 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a298 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1681 <|@
result v47|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1791 
=== Succesors ===
next: v562 
=== Usages ===
i187 i707 v685 
=== Predecessor ===
v353 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1791 #next: v562  <|@  <|@
f <@~|@floating>@ <|@
tid i187 <|@
result v48|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 54]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
stamp: i32
=== Inputs ===
x: i1681 
y: i297 
=== Succesors ===
=== Usages ===
v188 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1681 y: i297  <|@  <|@
f <@~|@floating>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i187 
y: i79 
=== Succesors ===
=== Usages ===
v562 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i187 y: i79  <|@  <|@
f <@*|@fixed>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v188 
=== Succesors ===
trueSuccessor: v561 
falseSuccessor: v559 
=== Usages ===
=== Predecessor ===
i1681 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v188 #trueSuccessor: v561 #falseSuccessor: v559  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOV [v31|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = SUB (x: v47|DWORD, ~y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v48|DWORD, y: v48|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B139" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
stamp: void
=== Inputs ===
=== Succesors ===
next: v773 
=== Usages ===
=== Predecessor ===
v562 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v773  <|@  <|@
f <@~|@floating>@ <|@
tid i774 <|@
result int[-119315|0xfffffffffffe2ded] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -119315
stableDimension: 0
stamp: i32 [-119315] ⇊00000000fffe2ded ⇈00000000fffe2ded
stampKind: i32
value: int[-119315|0xfffffffffffe2ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i756 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v773 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v753 
=== Predecessor ===
v561 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-119315|0xfffffffffffe2ded]] destination: B29 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B34" 
    xhandlers
    flags 
    probability 4604495887841767808
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
stamp: void
=== Inputs ===
=== Succesors ===
next: j885 
=== Usages ===
=== Predecessor ===
v562 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j885  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j885 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j926 
=== Usages ===
v1716 v1717 
=== Predecessor ===
v559 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j926  <|@  <|@
f <@~|@floating>@ <|@
tid v1716 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j885 
index: - 
=== Succesors ===
=== Usages ===
j926 v928 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j885 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j926 <|@
result v49|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1716 
=== Succesors ===
next: j927 
=== Usages ===
j889 v1718 v1719 a905 v1724 v1720 v1721 v1722 v1723 
=== Predecessor ===
j885 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1716 #next: j927  <|@  <|@
f <@~|@floating>@ <|@
tid v1717 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j885 
index: - 
=== Succesors ===
=== Usages ===
j927 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j885 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j927 <|@
result v50|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1717 
=== Succesors ===
next: v894 
=== Usages ===
v895 
=== Predecessor ===
j926 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1717 #next: v894  <|@  <|@
f <@~|@floating>@ <|@
tid v891 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i297 
y: i890 
=== Succesors ===
=== Usages ===
v894 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i297 y: i890  <|@  <|@
f <@*|@fixed>@ <|@
tid v894 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v891 
=== Succesors ===
trueSuccessor: v893 
falseSuccessor: v892 
=== Usages ===
=== Predecessor ===
j927 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v891 #trueSuccessor: v893 #falseSuccessor: v892  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v32|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B30 -> B31 falseDestination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4603863821012118669
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v893 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
stamp: void
=== Inputs ===
=== Succesors ===
next: v901 
=== Usages ===
=== Predecessor ===
v894 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v901  <|@  <|@
f <@~|@floating>@ <|@
tid i882 <|@
result v51|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i297 
y: i66 
=== Succesors ===
=== Usages ===
i914 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i297 y: i66  <|@  <|@
f <@~|@floating>@ <|@
tid i914 <|@
result v52|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i882 
y: i913 
=== Succesors ===
=== Usages ===
i884 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i882 y: i913  <|@  <|@
f <@~|@floating>@ <|@
tid i884 <|@
result v53|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i914 
y: i883 
=== Succesors ===
=== Usages ===
j888 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i914 y: i883  <|@  <|@
f <@~|@floating>@ <|@
tid j888 <|@
result v54|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i884 
=== Succesors ===
=== Usages ===
j889 v1720 v1721 v1722 v1723 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i884  <|@  <|@
f <@~|@floating>@ <|@
tid j889 <|@
result v55|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
stamp: i64
=== Inputs ===
x: j888 
y: j926 
=== Succesors ===
=== Usages ===
v895 v928 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j888 y: j926  <|@  <|@
f <@~|@floating>@ <|@
tid v895 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j927 
y: j889 
=== Succesors ===
=== Usages ===
v901 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j927 y: j889  <|@  <|@
f <@*|@fixed>@ <|@
tid v901 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v895 
=== Succesors ===
trueSuccessor: v900 
falseSuccessor: v899 
=== Usages ===
=== Predecessor ===
v893 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v895 #trueSuccessor: v900 #falseSuccessor: v899  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = SHL v32|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = LEA [v51|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = AND v52|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = MOVSXD v53|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = ADD (x: v54|QWORD, y: v49|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v55|QWORD, y: v50|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4573931432031241034
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v900 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
stamp: void
=== Inputs ===
=== Succesors ===
next: v898 
=== Usages ===
=== Predecessor ===
v901 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v898  <|@  <|@
f <@*|@fixed>@ <|@
tid v898 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v897 
=== Predecessor ===
v900 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4603806934997450246
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v899 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
stamp: void
=== Inputs ===
=== Succesors ===
next: v928 
=== Usages ===
=== Predecessor ===
v901 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v928  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v928 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1716 
value: j889 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v916 
=== Usages ===
=== Predecessor ===
v899 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1716 value: j889 stateAfter: - lastLocationAccess: - #next: v916  <|@  <|@
f <@~|@floating>@ <|@
tid v1720 <|@
result [v54|QWORD + v49|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j888 
index: j926 
=== Succesors ===
=== Usages ===
v916 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j888 index: j926  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v916 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
stamp: void
=== Inputs ===
address: v1720 
=== Succesors ===
next: v918 
=== Usages ===
=== Predecessor ===
v928 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1720 #next: v918  <|@  <|@
f <@~|@floating>@ <|@
tid v1721 <|@
result [v54|QWORD + v49|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j888 
index: j926 
=== Succesors ===
=== Usages ===
v918 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j888 index: j926  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v918 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
stamp: void
=== Inputs ===
address: v1721 
=== Succesors ===
next: v921 
=== Usages ===
=== Predecessor ===
v916 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1721 #next: v921  <|@  <|@
f <@~|@floating>@ <|@
tid v1722 <|@
result [v54|QWORD + v49|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j888 
index: j926 
=== Succesors ===
=== Usages ===
v921 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j888 index: j926  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v921 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
stamp: void
=== Inputs ===
address: v1722 
=== Succesors ===
next: v924 
=== Usages ===
=== Predecessor ===
v918 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1722 #next: v924  <|@  <|@
f <@~|@floating>@ <|@
tid v1723 <|@
result [v54|QWORD + v49|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j888 
index: j926 
=== Succesors ===
=== Usages ===
v924 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j888 index: j926  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v924 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
stamp: void
=== Inputs ===
address: v1723 
=== Succesors ===
next: v929 
=== Usages ===
=== Predecessor ===
v921 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1723 #next: v929  <|@  <|@
f <@~|@floating>@ <|@
tid v1718 <|@
result [v49|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j926 
index: - 
=== Succesors ===
=== Usages ===
v929 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j926 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v929 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1718 
value: i297 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v930 
=== Usages ===
=== Predecessor ===
v924 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1718 value: i297 stateAfter: - lastLocationAccess: - #next: v930  <|@  <|@
f <@~|@floating>@ <|@
tid v1719 <|@
result [v49|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j926 
index: - 
=== Succesors ===
=== Usages ===
v930 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j926 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v930 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1719 
value: j814 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v933 
=== Usages ===
=== Predecessor ===
v929 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1719 value: j814 stateAfter: - lastLocationAccess: - #next: v933  <|@  <|@
f <@~|@floating>@ <|@
tid v1724 <|@
result [v49|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j926 
index: - 
=== Succesors ===
=== Usages ===
v933 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j926 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v933 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1724 
value: v1087 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v904 
=== Usages ===
=== Predecessor ===
v930 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1724 value: v1087 stateAfter: - lastLocationAccess: - #next: v904  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v904 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
stamp: void
=== Inputs ===
=== Succesors ===
next: a905 
=== Usages ===
=== Predecessor ===
v933 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a905  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a905 <|@
result v56|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j926 
=== Succesors ===
next: v907 
=== Usages ===
a910 
=== Predecessor ===
v904 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j926 #next: v907  <|@  <|@
f <@*|@fixed>@ <|@
tid v907 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v908 
=== Predecessor ===
a905 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v55|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v54|QWORD + v49|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v54|QWORD + v49|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v54|QWORD + v49|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v54|QWORD + v49|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|QWORD + 12], y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v49|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v49|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE v49|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v56|QWORD[.]] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4589720955300358040
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v892 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
stamp: void
=== Inputs ===
=== Succesors ===
next: v896 
=== Usages ===
=== Predecessor ===
v894 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v896  <|@  <|@
f <@*|@fixed>@ <|@
tid v896 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v897 
=== Predecessor ===
v892 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B32" 
    successors "B36" 
    xhandlers
    flags 
    probability 4590176043417705421
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v897 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v896 v898 
=== Succesors ===
next: a906 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v896 v898 #next: a906  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a906 <|@
result v57|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?9 
arguments: v813 i297 i79 
=== Succesors ===
next: v909 
=== Usages ===
a910 
=== Predecessor ===
v897 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?9 arguments: v813 i297 i79 #next: v909  <|@  <|@
f <@*|@fixed>@ <|@
tid v909 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v908 
=== Predecessor ===
a906 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v32|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 8]
locals: v0|QWORD[.] vobject:StringBuilder:0{count=v32|DWORD,value=v31|QWORD[.]} - 
vobject:StringBuilder:0{count=v32|DWORD,value=v31|QWORD[.]} Ljava/lang/StringBuilder; v32|DWORD v31|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8] <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|QWORD[.]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4604495887841767808
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a910 <|@
result v58|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v908 
values: a905 a906 
=== Succesors ===
=== Usages ===
v1758 a716 v1705 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v908 values: a905 a906  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v908 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v907 v909 
=== Succesors ===
next: v1506 
=== Usages ===
a910 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v907 v909 #next: v1506  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1506 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v1257 
=== Usages ===
j1507 j1509 
=== Predecessor ===
v908 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v1257  <|@  <|@
f <@~|@floating>@ <|@
tid v685 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1681 
y: i297 
=== Succesors ===
=== Usages ===
i707 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1681 y: i297  <|@  <|@
f <@~|@floating>@ <|@
tid i707 <|@
result v59|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v685 
trueValue: i1681 
falseValue: i297 
=== Succesors ===
=== Usages ===
j1118 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v685 trueValue: i1681 falseValue: i297  <|@  <|@
f <@~|@floating>@ <|@
tid j1118 <|@
result v60|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i707 
=== Succesors ===
=== Usages ===
j1564 v1758 j1122 v1254 v1383 j1550 j1555 j1558 j1561 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i707  <|@  <|@
f <@~|@floating>@ <|@
tid v1254 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1118 
y: j814 
=== Succesors ===
=== Usages ===
v1257 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1118 y: j814  <|@  <|@
f <@*|@fixed>@ <|@
tid v1257 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1254 
=== Succesors ===
trueSuccessor: v1255 
falseSuccessor: v1256 
=== Usages ===
=== Predecessor ===
v1506 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1254 #trueSuccessor: v1255 #falseSuccessor: v1256  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v58|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v32|DWORD, y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = CMOVE (falseValue: v32|DWORD, ~trueValue: v47|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOVSXD v59|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v60|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B55" 
    xhandlers
    flags 
    probability 4599992288214397312
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1255 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1273 
=== Usages ===
=== Predecessor ===
v1257 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1273  <|@  <|@
f <@*|@fixed>@ <|@
tid v1273 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1274 
=== Predecessor ===
v1255 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4599992288214397312
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1256 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1260 
=== Usages ===
=== Predecessor ===
v1257 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1260  <|@  <|@
f <@~|@floating>@ <|@
tid v1705 <|@
result [v58|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a910 
index: - 
=== Succesors ===
=== Usages ===
j1509 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a910 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1509 <|@
result v61|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1506 
address: v1705 
=== Succesors ===
=== Usages ===
v1774 v1776 v1778 v1780 v1782 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1506 address: v1705  <|@  <|@
f <@~|@floating>@ <|@
tid v1703 <|@
result [v31|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a298 
index: - 
=== Succesors ===
=== Usages ===
j1507 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a298 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1507 <|@
result v62|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1506 
address: v1703 
=== Succesors ===
=== Usages ===
v1775 v1777 v1779 v1781 v1783 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1506 address: v1703  <|@  <|@
f <@~|@floating>@ <|@
tid j1550 <|@
result v63|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j1118 
y: j1432 
=== Succesors ===
=== Usages ===
v1551 v1553 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1118 y: j1432  <|@  <|@
f <@~|@floating>@ <|@
tid v1551 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1550 
y: j584 
=== Succesors ===
=== Usages ===
v1260 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1550 y: j584  <|@  <|@
f <@*|@fixed>@ <|@
tid v1260 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1551 
=== Succesors ===
trueSuccessor: v1258 
falseSuccessor: v1259 
=== Usages ===
=== Predecessor ===
v1256 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1551 #trueSuccessor: v1258 #falseSuccessor: v1259  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = LEA [v58|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = LEA [v31|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = LEA [v60|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v63|QWORD, y: v63|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B43" 
    xhandlers
    flags 
    probability 4598412121140274464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1258 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1269 
=== Usages ===
=== Predecessor ===
v1260 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1269  <|@  <|@
f <@*|@fixed>@ <|@
tid v1269 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1270 
=== Predecessor ===
v1258 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B39 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4590985088959656320
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1259 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1261 
=== Usages ===
=== Predecessor ===
v1260 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1261  <|@  <|@
f <@*|@fixed>@ <|@
tid v1261 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1262 
=== Predecessor ===
v1259 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B79" 
    successors "B42" "B79" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4599992288214397312
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1542 <|@
result v64|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1262 
values: j584 j1549 
=== Succesors ===
=== Usages ===
v1783 j1549 v1782 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1262 values: j584 j1549  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1262 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1261 
=== Succesors ===
next: v1682 
=== Usages ===
v1682 v1265 v1266 j1542 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1261 #next: v1682  <|@  <|@
f <@~|@floating>@ <|@
tid v1783 <|@
result [v62|QWORD[.] + v64|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1507 
index: j1542 
=== Succesors ===
=== Usages ===
v1682 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1507 index: j1542  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1682 <|@
result v65|V256_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v1262 
address: v1783 
=== Succesors ===
next: v1658 
=== Usages ===
v1658 
=== Predecessor ===
v1262 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1262 address: v1783 #next: v1658  <|@  <|@
f <@~|@floating>@ <|@
tid v1782 <|@
result [v61|QWORD[.] + v64|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1509 
index: j1542 
=== Succesors ===
=== Usages ===
v1658 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1509 index: j1542  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1658 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1782 
value: v1682 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1268 
=== Usages ===
=== Predecessor ===
v1682 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1782 value: v1682 stateAfter: - lastLocationAccess: - #next: v1268  <|@  <|@
f <@~|@floating>@ <|@
tid j1549 <|@
result v66|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1542 
y: j393 
=== Succesors ===
=== Usages ===
j1534 j1542 v1553 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1542 y: j393  <|@  <|@
f <@~|@floating>@ <|@
tid v1553 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1550 
y: j1549 
=== Succesors ===
=== Usages ===
v1268 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1550 y: j1549  <|@  <|@
f <@*|@fixed>@ <|@
tid v1268 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1553 
=== Succesors ===
trueSuccessor: v1265 
falseSuccessor: v1267 
=== Usages ===
=== Predecessor ===
v1658 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1553 #trueSuccessor: v1265 #falseSuccessor: v1267  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v64|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|V256_WORD = H [v62|QWORD[.] + v64|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v61|QWORD[.] + v64|QWORD * 2], input: v65|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = LEA [v64|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v66|QWORD, y: v63|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" 
    xhandlers
    flags 
    probability 4590985088959656320
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1265 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1262 
=== Succesors ===
next: v1271 
=== Usages ===
=== Predecessor ===
v1268 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1262 #next: v1271  <|@  <|@
f <@*|@fixed>@ <|@
tid v1271 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1270 
=== Predecessor ===
v1265 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|QWORD] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B39" "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4599992288214397312
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1534 <|@
result v67|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1270 
values: j584 j1549 
=== Succesors ===
=== Usages ===
v1781 j1541 j1526 v1556 v1780 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1270 values: j584 j1549  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1270 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1269 v1271 
=== Succesors ===
next: v1292 
=== Usages ===
j1534 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1269 v1271 #next: v1292  <|@  <|@
f <@~|@floating>@ <|@
tid j1555 <|@
result v68|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j1118 
y: j1438 
=== Succesors ===
=== Usages ===
v1556 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1118 y: j1438  <|@  <|@
f <@~|@floating>@ <|@
tid v1556 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1555 
y: j1534 
=== Succesors ===
=== Usages ===
v1292 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1555 y: j1534  <|@  <|@
f <@*|@fixed>@ <|@
tid v1292 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1556 
=== Succesors ===
trueSuccessor: v1291 
falseSuccessor: v1290 
=== Usages ===
=== Predecessor ===
v1270 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1556 #trueSuccessor: v1291 #falseSuccessor: v1290  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v67|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = LEA [v60|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v67|QWORD, y: v68|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B43 -> B44 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4590985088959656320
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1291 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1295 
=== Usages ===
=== Predecessor ===
v1292 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1295  <|@  <|@
f <@*|@fixed>@ <|@
tid v1295 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1281 
=== Predecessor ===
v1291 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v67|QWORD] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4598412121140274464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1290 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1683 
=== Usages ===
v1683 
=== Predecessor ===
v1292 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1683  <|@  <|@
f <@~|@floating>@ <|@
tid v1781 <|@
result [v62|QWORD[.] + v67|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1507 
index: j1534 
=== Succesors ===
=== Usages ===
v1683 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1507 index: j1534  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1683 <|@
result v69|V128_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v1290 
address: v1781 
=== Succesors ===
next: v1656 
=== Usages ===
v1656 
=== Predecessor ===
v1290 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1290 address: v1781 #next: v1656  <|@  <|@
f <@~|@floating>@ <|@
tid v1780 <|@
result [v61|QWORD[.] + v67|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1509 
index: j1534 
=== Succesors ===
=== Usages ===
v1656 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1509 index: j1534  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1656 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1780 
value: v1683 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1280 
=== Usages ===
=== Predecessor ===
v1683 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1780 value: v1683 stateAfter: - lastLocationAccess: - #next: v1280  <|@  <|@
f <@~|@floating>@ <|@
tid j1541 <|@
result v70|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1534 
y: j821 
=== Succesors ===
=== Usages ===
j1526 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1534 y: j821  <|@  <|@
f <@*|@fixed>@ <|@
tid v1280 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1281 
=== Predecessor ===
v1656 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|V128_WORD = H [v62|QWORD[.] + v67|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v61|QWORD[.] + v67|QWORD * 2], input: v69|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = LEA [v67|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|QWORD] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4599992288214397312
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1526 <|@
result v71|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1281 
values: j1541 j1534 
=== Succesors ===
=== Usages ===
v1779 j1533 j1518 v1559 v1778 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1281 values: j1541 j1534  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1281 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1280 v1295 
=== Succesors ===
next: v1298 
=== Usages ===
j1526 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1280 v1295 #next: v1298  <|@  <|@
f <@~|@floating>@ <|@
tid j1558 <|@
result v72|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j1118 
y: j1442 
=== Succesors ===
=== Usages ===
v1559 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1118 y: j1442  <|@  <|@
f <@~|@floating>@ <|@
tid v1559 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1558 
y: j1526 
=== Succesors ===
=== Usages ===
v1298 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1558 y: j1526  <|@  <|@
f <@*|@fixed>@ <|@
tid v1298 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1559 
=== Succesors ===
trueSuccessor: v1297 
falseSuccessor: v1296 
=== Usages ===
=== Predecessor ===
v1281 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1559 #trueSuccessor: v1297 #falseSuccessor: v1296  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v71|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = LEA [v60|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v71|QWORD, y: v72|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4590985088959656320
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1297 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1301 
=== Usages ===
=== Predecessor ===
v1298 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1301  <|@  <|@
f <@*|@fixed>@ <|@
tid v1301 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1284 
=== Predecessor ===
v1297 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v71|QWORD] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4598412121140274464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1296 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1684 
=== Usages ===
v1684 
=== Predecessor ===
v1298 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1684  <|@  <|@
f <@~|@floating>@ <|@
tid v1779 <|@
result [v62|QWORD[.] + v71|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1507 
index: j1526 
=== Succesors ===
=== Usages ===
v1684 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1507 index: j1526  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1684 <|@
result v73|V64_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v1296 
address: v1779 
=== Succesors ===
next: v1654 
=== Usages ===
v1654 
=== Predecessor ===
v1296 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1296 address: v1779 #next: v1654  <|@  <|@
f <@~|@floating>@ <|@
tid v1778 <|@
result [v61|QWORD[.] + v71|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1509 
index: j1526 
=== Succesors ===
=== Usages ===
v1654 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1509 index: j1526  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1654 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1778 
value: v1684 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1283 
=== Usages ===
=== Predecessor ===
v1684 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1778 value: v1684 stateAfter: - lastLocationAccess: - #next: v1283  <|@  <|@
f <@~|@floating>@ <|@
tid j1533 <|@
result v74|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1526 
y: j1414 
=== Succesors ===
=== Usages ===
j1518 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1526 y: j1414  <|@  <|@
f <@*|@fixed>@ <|@
tid v1283 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1284 
=== Predecessor ===
v1654 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|V64_WORD = H [v62|QWORD[.] + v71|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v61|QWORD[.] + v71|QWORD * 2], input: v73|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = LEA [v71|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v74|QWORD] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4599992288214397312
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1518 <|@
result v75|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1284 
values: j1533 j1526 
=== Succesors ===
=== Usages ===
v1777 j1525 j1510 v1562 v1776 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1284 values: j1533 j1526  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1284 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1283 v1301 
=== Succesors ===
next: v1304 
=== Usages ===
j1518 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1283 v1301 #next: v1304  <|@  <|@
f <@~|@floating>@ <|@
tid j1561 <|@
result v76|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j1118 
y: j1446 
=== Succesors ===
=== Usages ===
v1562 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1118 y: j1446  <|@  <|@
f <@~|@floating>@ <|@
tid v1562 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1561 
y: j1518 
=== Succesors ===
=== Usages ===
v1304 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1561 y: j1518  <|@  <|@
f <@*|@fixed>@ <|@
tid v1304 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1562 
=== Succesors ===
trueSuccessor: v1303 
falseSuccessor: v1302 
=== Usages ===
=== Predecessor ===
v1284 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1562 #trueSuccessor: v1303 #falseSuccessor: v1302  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v75|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = LEA [v60|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v75|QWORD, y: v76|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4590985088959656320
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1303 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1307 
=== Usages ===
=== Predecessor ===
v1304 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1307  <|@  <|@
f <@*|@fixed>@ <|@
tid v1307 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1287 
=== Predecessor ===
v1303 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v75|QWORD] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4598412121140274464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1302 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1685 
=== Usages ===
v1685 
=== Predecessor ===
v1304 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1685  <|@  <|@
f <@~|@floating>@ <|@
tid v1777 <|@
result [v62|QWORD[.] + v75|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1507 
index: j1518 
=== Succesors ===
=== Usages ===
v1685 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1507 index: j1518  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1685 <|@
result v77|V32_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v1302 
address: v1777 
=== Succesors ===
next: v1652 
=== Usages ===
v1652 
=== Predecessor ===
v1302 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1302 address: v1777 #next: v1652  <|@  <|@
f <@~|@floating>@ <|@
tid v1776 <|@
result [v61|QWORD[.] + v75|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1509 
index: j1518 
=== Succesors ===
=== Usages ===
v1652 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1509 index: j1518  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1652 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1776 
value: v1685 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1286 
=== Usages ===
=== Predecessor ===
v1685 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1776 value: v1685 stateAfter: - lastLocationAccess: - #next: v1286  <|@  <|@
f <@~|@floating>@ <|@
tid j1525 <|@
result v78|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1518 
y: j1392 
=== Succesors ===
=== Usages ===
j1510 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1518 y: j1392  <|@  <|@
f <@*|@fixed>@ <|@
tid v1286 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1287 
=== Predecessor ===
v1652 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v77|V32_WORD = H [v62|QWORD[.] + v75|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v61|QWORD[.] + v75|QWORD * 2], input: v77|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD = LEA [v75|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v78|QWORD] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4599992288214397312
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1510 <|@
result v79|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1287 
values: j1525 j1518 
=== Succesors ===
=== Usages ===
v1775 v1565 v1774 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1287 values: j1525 j1518  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1287 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1286 v1307 
=== Succesors ===
next: v1310 
=== Usages ===
j1510 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1286 v1307 #next: v1310  <|@  <|@
f <@~|@floating>@ <|@
tid j1564 <|@
result v80|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j1118 
y: j1450 
=== Succesors ===
=== Usages ===
v1565 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1118 y: j1450  <|@  <|@
f <@~|@floating>@ <|@
tid v1565 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1564 
y: j1510 
=== Succesors ===
=== Usages ===
v1310 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1564 y: j1510  <|@  <|@
f <@*|@fixed>@ <|@
tid v1310 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1565 
=== Succesors ===
trueSuccessor: v1309 
falseSuccessor: v1308 
=== Usages ===
=== Predecessor ===
v1287 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1565 #trueSuccessor: v1309 #falseSuccessor: v1308  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v79|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = DEC v60|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v79|QWORD, y: v80|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4590985088959656320
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1309 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1313 
=== Usages ===
=== Predecessor ===
v1310 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1313  <|@  <|@
f <@*|@fixed>@ <|@
tid v1313 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1274 
=== Predecessor ===
v1309 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4598412121140274464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1308 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i1686 
=== Usages ===
i1686 
=== Predecessor ===
v1310 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1686  <|@  <|@
f <@~|@floating>@ <|@
tid v1775 <|@
result [v62|QWORD[.] + v79|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1507 
index: j1510 
=== Succesors ===
=== Usages ===
i1686 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1507 index: j1510  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1686 <|@
result v81|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v1308 
address: v1775 
=== Succesors ===
next: v1650 
=== Usages ===
v1650 
=== Predecessor ===
v1308 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1308 address: v1775 #next: v1650  <|@  <|@
f <@~|@floating>@ <|@
tid v1774 <|@
result [v61|QWORD[.] + v79|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1509 
index: j1510 
=== Succesors ===
=== Usages ===
v1650 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1509 index: j1510  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1650 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1774 
value: i1686 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1289 
=== Usages ===
=== Predecessor ===
i1686 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1774 value: i1686 stateAfter: - lastLocationAccess: - #next: v1289  <|@  <|@
f <@*|@fixed>@ <|@
tid v1289 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1274 
=== Predecessor ===
v1650 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = MOVSX [v62|QWORD[.] + v79|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v61|QWORD[.] + v79|QWORD * 2], y: v81|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B37" "B54" "B53" 
    successors "B56" "B74" 
    xhandlers
    flags 
    probability 4604495887841767808
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1274 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1273 v1289 v1313 
=== Succesors ===
next: v1568 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1273 v1289 v1313 #next: v1568  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1568 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v1320 
=== Usages ===
j1570 
=== Predecessor ===
v1274 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v1320  <|@  <|@
f <@~|@floating>@ <|@
tid j1117 <|@
result v82|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i297 
=== Succesors ===
=== Usages ===
j1122 v1383 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i297  <|@  <|@
f <@~|@floating>@ <|@
tid v1383 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1118 
y: j1117 
=== Succesors ===
=== Usages ===
v1320 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1118 y: j1117  <|@  <|@
f <@*|@fixed>@ <|@
tid v1320 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1383 
=== Succesors ===
trueSuccessor: v1319 
falseSuccessor: v1318 
=== Usages ===
=== Predecessor ===
v1568 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1383 #trueSuccessor: v1319 #falseSuccessor: v1318  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = MOVSXD v32|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v82|QWORD, y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" "B58" 
    xhandlers
    flags 
    probability 4599992288214397312
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1319 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1323 
=== Usages ===
=== Predecessor ===
v1320 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1323  <|@  <|@
f <@~|@floating>@ <|@
tid v1758 <|@
result [v58|QWORD[.] + v60|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a910 
index: j1118 
=== Succesors ===
=== Usages ===
j1570 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a910 index: j1118  <|@  <|@
f <@~|@floating>@ <|@
tid j1570 <|@
result v83|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1568 
address: v1758 
=== Succesors ===
=== Usages ===
v1784 v1785 v1786 v1787 v1788 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1568 address: v1758  <|@  <|@
f <@~|@floating>@ <|@
tid j1122 <|@
result v84|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j1117 
y: j1118 
=== Succesors ===
=== Usages ===
j1615 j1601 j1606 j1609 j1612 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j1117 y: j1118  <|@  <|@
f <@~|@floating>@ <|@
tid j1601 <|@
result v85|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j1122 
y: j1432 
=== Succesors ===
=== Usages ===
v1602 v1604 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1122 y: j1432  <|@  <|@
f <@~|@floating>@ <|@
tid v1602 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1601 
y: j584 
=== Succesors ===
=== Usages ===
v1323 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1601 y: j584  <|@  <|@
f <@*|@fixed>@ <|@
tid v1323 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1602 
=== Succesors ===
trueSuccessor: v1321 
falseSuccessor: v1322 
=== Usages ===
=== Predecessor ===
v1319 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1602 #trueSuccessor: v1321 #falseSuccessor: v1322  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = LEA [v58|QWORD[.] + v60|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = SUB (x: v82|QWORD, ~y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v85|QWORD = LEA [v84|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v85|QWORD, y: v85|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B61" 
    xhandlers
    flags 
    probability 4598412121140274464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1321 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1332 
=== Usages ===
=== Predecessor ===
v1323 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1332  <|@  <|@
f <@*|@fixed>@ <|@
tid v1332 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1333 
=== Predecessor ===
v1321 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B57 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4590985088959656320
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1322 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1324 
=== Usages ===
=== Predecessor ===
v1323 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1324  <|@  <|@
f <@*|@fixed>@ <|@
tid v1324 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1325 
=== Predecessor ===
v1322 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B73" 
    successors "B60" "B73" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4599992288214397312
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1595 <|@
result v86|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1325 
values: j584 j1600 
=== Succesors ===
=== Usages ===
v1788 j1600 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1325 values: j584 j1600  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1325 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1324 
=== Succesors ===
next: v1663 
=== Usages ===
j1595 v1328 v1329 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1324 #next: v1663  <|@  <|@
f <@~|@floating>@ <|@
tid v1788 <|@
result [v83|QWORD[.] + v86|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1570 
index: j1595 
=== Succesors ===
=== Usages ===
v1663 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1570 index: j1595  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1663 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1788 
value: v1664 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1331 
=== Usages ===
=== Predecessor ===
v1325 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1788 value: v1664 stateAfter: - lastLocationAccess: - #next: v1331  <|@  <|@
f <@~|@floating>@ <|@
tid j1600 <|@
result v87|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1595 
y: j393 
=== Succesors ===
=== Usages ===
j1589 j1595 v1604 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1595 y: j393  <|@  <|@
f <@~|@floating>@ <|@
tid v1604 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1601 
y: j1600 
=== Succesors ===
=== Usages ===
v1331 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1601 y: j1600  <|@  <|@
f <@*|@fixed>@ <|@
tid v1331 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1604 
=== Succesors ===
trueSuccessor: v1328 
falseSuccessor: v1330 
=== Usages ===
=== Predecessor ===
v1663 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1604 #trueSuccessor: v1328 #falseSuccessor: v1330  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v86|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v83|QWORD[.] + v86|QWORD * 2], input: v30|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = LEA [v86|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v87|QWORD, y: v85|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" 
    xhandlers
    flags 
    probability 4590985088959656320
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1328 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1325 
=== Succesors ===
next: v1334 
=== Usages ===
=== Predecessor ===
v1331 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1325 #next: v1334  <|@  <|@
f <@*|@fixed>@ <|@
tid v1334 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1333 
=== Predecessor ===
v1328 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v87|QWORD] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B57" "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4599992288214397312
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1589 <|@
result v88|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1333 
values: j584 j1600 
=== Succesors ===
=== Usages ===
v1787 j1594 j1583 v1607 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1333 values: j584 j1600  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1333 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1332 v1334 
=== Succesors ===
next: v1355 
=== Usages ===
j1589 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1332 v1334 #next: v1355  <|@  <|@
f <@~|@floating>@ <|@
tid j1606 <|@
result v89|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j1122 
y: j1438 
=== Succesors ===
=== Usages ===
v1607 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1122 y: j1438  <|@  <|@
f <@~|@floating>@ <|@
tid v1607 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1606 
y: j1589 
=== Succesors ===
=== Usages ===
v1355 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1606 y: j1589  <|@  <|@
f <@*|@fixed>@ <|@
tid v1355 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1607 
=== Succesors ===
trueSuccessor: v1354 
falseSuccessor: v1353 
=== Usages ===
=== Predecessor ===
v1333 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1607 #trueSuccessor: v1354 #falseSuccessor: v1353  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v88|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = LEA [v84|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v88|QWORD, y: v89|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B61 -> B62 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    probability 4590985088959656320
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1354 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1358 
=== Usages ===
=== Predecessor ===
v1355 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1358  <|@  <|@
f <@*|@fixed>@ <|@
tid v1358 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1344 
=== Predecessor ===
v1354 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v88|QWORD] destination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    probability 4598412121140274464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1353 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1662 
=== Usages ===
=== Predecessor ===
v1355 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1662  <|@  <|@
f <@~|@floating>@ <|@
tid v1787 <|@
result [v83|QWORD[.] + v88|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1570 
index: j1589 
=== Succesors ===
=== Usages ===
v1662 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1570 index: j1589  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1662 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1787 
value: v1668 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1343 
=== Usages ===
=== Predecessor ===
v1353 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1787 value: v1668 stateAfter: - lastLocationAccess: - #next: v1343  <|@  <|@
f <@~|@floating>@ <|@
tid j1594 <|@
result v90|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1589 
y: j821 
=== Succesors ===
=== Usages ===
j1583 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1589 y: j821  <|@  <|@
f <@*|@fixed>@ <|@
tid v1343 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1344 
=== Predecessor ===
v1662 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v83|QWORD[.] + v88|QWORD * 2], input: v29|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = LEA [v88|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v90|QWORD] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B62" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4599992288214397312
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1583 <|@
result v91|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1344 
values: j1594 j1589 
=== Succesors ===
=== Usages ===
v1786 j1588 j1577 v1610 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1344 values: j1594 j1589  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1344 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1343 v1358 
=== Succesors ===
next: v1361 
=== Usages ===
j1583 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1343 v1358 #next: v1361  <|@  <|@
f <@~|@floating>@ <|@
tid j1609 <|@
result v92|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j1122 
y: j1442 
=== Succesors ===
=== Usages ===
v1610 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1122 y: j1442  <|@  <|@
f <@~|@floating>@ <|@
tid v1610 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1609 
y: j1583 
=== Succesors ===
=== Usages ===
v1361 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1609 y: j1583  <|@  <|@
f <@*|@fixed>@ <|@
tid v1361 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1610 
=== Succesors ===
trueSuccessor: v1360 
falseSuccessor: v1359 
=== Usages ===
=== Predecessor ===
v1344 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1610 #trueSuccessor: v1360 #falseSuccessor: v1359  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v91|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v92|QWORD = LEA [v84|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v91|QWORD, y: v92|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4590985088959656320
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1360 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1364 
=== Usages ===
=== Predecessor ===
v1361 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1364  <|@  <|@
f <@*|@fixed>@ <|@
tid v1364 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1347 
=== Predecessor ===
v1360 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v91|QWORD] destination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4598412121140274464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1359 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1661 
=== Usages ===
=== Predecessor ===
v1361 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1661  <|@  <|@
f <@~|@floating>@ <|@
tid v1786 <|@
result [v83|QWORD[.] + v91|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1570 
index: j1583 
=== Succesors ===
=== Usages ===
v1661 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1570 index: j1583  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1661 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1786 
value: v1667 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1346 
=== Usages ===
=== Predecessor ===
v1359 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1786 value: v1667 stateAfter: - lastLocationAccess: - #next: v1346  <|@  <|@
f <@~|@floating>@ <|@
tid j1588 <|@
result v93|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1583 
y: j1414 
=== Succesors ===
=== Usages ===
j1577 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1583 y: j1414  <|@  <|@
f <@*|@fixed>@ <|@
tid v1346 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1347 
=== Predecessor ===
v1661 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v83|QWORD[.] + v91|QWORD * 2], input: v28|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v93|QWORD = LEA [v91|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v93|QWORD] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4599992288214397312
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1577 <|@
result v94|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1347 
values: j1588 j1583 
=== Succesors ===
=== Usages ===
v1785 j1582 j1571 v1613 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1347 values: j1588 j1583  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1347 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1346 v1364 
=== Succesors ===
next: v1367 
=== Usages ===
j1577 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1346 v1364 #next: v1367  <|@  <|@
f <@~|@floating>@ <|@
tid j1612 <|@
result v95|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j1122 
y: j1446 
=== Succesors ===
=== Usages ===
v1613 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1122 y: j1446  <|@  <|@
f <@~|@floating>@ <|@
tid v1613 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1612 
y: j1577 
=== Succesors ===
=== Usages ===
v1367 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1612 y: j1577  <|@  <|@
f <@*|@fixed>@ <|@
tid v1367 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1613 
=== Succesors ===
trueSuccessor: v1366 
falseSuccessor: v1365 
=== Usages ===
=== Predecessor ===
v1347 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1613 #trueSuccessor: v1366 #falseSuccessor: v1365  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v94|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = LEA [v84|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v94|QWORD, y: v95|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    probability 4590985088959656320
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1366 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1370 
=== Usages ===
=== Predecessor ===
v1367 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1370  <|@  <|@
f <@*|@fixed>@ <|@
tid v1370 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1350 
=== Predecessor ===
v1366 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v94|QWORD] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    probability 4598412121140274464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1365 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1660 
=== Usages ===
=== Predecessor ===
v1367 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1660  <|@  <|@
f <@~|@floating>@ <|@
tid v1785 <|@
result [v83|QWORD[.] + v94|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1570 
index: j1577 
=== Succesors ===
=== Usages ===
v1660 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1570 index: j1577  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1660 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1785 
value: v1666 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1349 
=== Usages ===
=== Predecessor ===
v1365 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1785 value: v1666 stateAfter: - lastLocationAccess: - #next: v1349  <|@  <|@
f <@~|@floating>@ <|@
tid j1582 <|@
result v96|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1577 
y: j1392 
=== Succesors ===
=== Usages ===
j1571 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1577 y: j1392  <|@  <|@
f <@*|@fixed>@ <|@
tid v1349 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1350 
=== Predecessor ===
v1660 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v83|QWORD[.] + v94|QWORD * 2], input: v27|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v96|QWORD = LEA [v94|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v96|QWORD] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4599992288214397312
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1571 <|@
result v97|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1350 
values: j1582 j1577 
=== Succesors ===
=== Usages ===
v1784 v1616 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1350 values: j1582 j1577  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1350 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1349 v1370 
=== Succesors ===
next: v1373 
=== Usages ===
j1571 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1349 v1370 #next: v1373  <|@  <|@
f <@~|@floating>@ <|@
tid j1615 <|@
result v98|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j1122 
y: j1450 
=== Succesors ===
=== Usages ===
v1616 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1122 y: j1450  <|@  <|@
f <@~|@floating>@ <|@
tid v1616 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1615 
y: j1571 
=== Succesors ===
=== Usages ===
v1373 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1615 y: j1571  <|@  <|@
f <@*|@fixed>@ <|@
tid v1373 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1616 
=== Succesors ===
trueSuccessor: v1372 
falseSuccessor: v1371 
=== Usages ===
=== Predecessor ===
v1350 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1616 #trueSuccessor: v1372 #falseSuccessor: v1371  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v97|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v98|QWORD = DEC v84|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v97|QWORD, y: v98|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B75" 
    xhandlers
    flags 
    probability 4590985088959656320
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1372 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1376 
=== Usages ===
=== Predecessor ===
v1373 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1376  <|@  <|@
f <@*|@fixed>@ <|@
tid v1376 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1337 
=== Predecessor ===
v1372 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B71 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B75" 
    xhandlers
    flags 
    probability 4598412121140274464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1371 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1659 
=== Usages ===
=== Predecessor ===
v1373 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1659  <|@  <|@
f <@~|@floating>@ <|@
tid v1784 <|@
result [v83|QWORD[.] + v97|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1570 
index: j1571 
=== Succesors ===
=== Usages ===
v1659 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1570 index: j1571  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1659 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1784 
value: i1665 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1352 
=== Usages ===
=== Predecessor ===
v1371 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1784 value: i1665 stateAfter: - lastLocationAccess: - #next: v1352  <|@  <|@
f <@*|@fixed>@ <|@
tid v1352 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1337 
=== Predecessor ===
v1659 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v83|QWORD[.] + v97|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B72 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4598412121140274464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1330 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1329 
=== Usages ===
=== Predecessor ===
v1331 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1329  <|@  <|@
f <@*|@fixed>@ <|@
tid v1329 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v1325 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1330 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1325  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v87|QWORD] destination: B73 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B75" 
    xhandlers
    flags 
    probability 4599992288214397312
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1318 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1336 
=== Usages ===
=== Predecessor ===
v1320 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1336  <|@  <|@
f <@*|@fixed>@ <|@
tid v1336 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1337 
=== Predecessor ===
v1318 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" "B72" "B71" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4604495887841767808
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1337 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1336 v1352 v1376 
=== Succesors ===
next: a716 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1336 v1352 v1376 #next: a716  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a716 <|@
result v58|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 93]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a910 
=== Succesors ===
next: j942 
=== Usages ===
a610 
=== Predecessor ===
v1337 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a910 #next: j942  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j942 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j957 
=== Usages ===
v1725 v1726 
=== Predecessor ===
a716 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j957  <|@  <|@
f <@~|@floating>@ <|@
tid v1725 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j942 
index: - 
=== Succesors ===
=== Usages ===
j957 v959 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j942 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j957 <|@
result v99|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1725 
=== Succesors ===
next: j958 
=== Usages ===
j1098 j963 v1751 
=== Predecessor ===
j942 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1725 #next: j958  <|@  <|@
f <@~|@floating>@ <|@
tid v1726 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j942 
index: - 
=== Succesors ===
=== Usages ===
j958 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j942 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j958 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1726 
=== Succesors ===
next: v950 
=== Usages ===
v947 
=== Predecessor ===
j957 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1726 #next: v950  <|@  <|@
f <@~|@floating>@ <|@
tid j1098 <|@
result v100|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j957 
y: j1097 
=== Succesors ===
=== Usages ===
v947 v959 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j957 y: j1097  <|@  <|@
f <@~|@floating>@ <|@
tid v947 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j958 
y: j1098 
=== Succesors ===
=== Usages ===
v950 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j958 y: j1098  <|@  <|@
f <@*|@fixed>@ <|@
tid v950 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v947 
=== Succesors ===
trueSuccessor: v948 
falseSuccessor: v949 
=== Usages ===
=== Predecessor ===
j958 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v947 #trueSuccessor: v948 #falseSuccessor: v949  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v99|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v100|QWORD = LEA [v99|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v100|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B75 -> B76 falseDestination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B78" 
    xhandlers
    flags 
    probability 4574740477573191933
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v948 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a953 
=== Usages ===
=== Predecessor ===
v950 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a953  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a953 <|@
result v101|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?9 
arguments: v780 i154 i66 
=== Succesors ===
next: j954 
=== Usages ===
j954 
=== Predecessor ===
v948 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?9 arguments: v780 i154 i66 #next: j954  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j954 <|@
result v101|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a953 
=== Succesors ===
next: v964 
=== Usages ===
j963 
=== Predecessor ===
a953 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a953 #next: v964  <|@  <|@
f <@*|@fixed>@ <|@
tid v964 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v961 
=== Predecessor ===
j954 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 8]
locals: v0|QWORD[.] vobject:StringBuilder:0{count=v32|DWORD,value=v31|QWORD[.]} - 
vobject:StringBuilder:0{count=v32|DWORD,value=v31|QWORD[.]} Ljava/lang/StringBuilder; v32|DWORD v31|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8] <|@ <|@
      nr   -1  <|@ instruction v101|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v101|QWORD[.]] destination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B78" 
    xhandlers
    flags 
    probability 4604432681158802894
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v949 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v959 
=== Usages ===
=== Predecessor ===
v950 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v959  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v959 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1725 
value: j1098 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v956 
=== Usages ===
=== Predecessor ===
v949 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1725 value: j1098 stateAfter: - lastLocationAccess: - #next: v956  <|@  <|@
f <@~|@floating>@ <|@
tid v1751 <|@
result [v99|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j957 
index: - 
=== Succesors ===
=== Usages ===
v956 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j957 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v956 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1751 
=== Succesors ===
next: v962 
=== Usages ===
=== Predecessor ===
v959 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1751 #next: v962  <|@  <|@
f <@*|@fixed>@ <|@
tid v962 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v961 
=== Predecessor ===
v956 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v100|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v99|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v99|QWORD] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B76" 
    successors 
    xhandlers
    flags 
    probability 4604495887841767808
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j963 <|@
result v102|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v961 
values: j957 j954 
=== Succesors ===
=== Usages ===
v1728 v1727 a607 v1752 v1753 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v961 values: j957 j954  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v961 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v962 v964 
=== Succesors ===
next: a607 
=== Usages ===
j963 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v962 v964 #next: a607  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a607 <|@
result v103|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j963 
=== Succesors ===
next: j975 
=== Usages ===
a613 
=== Predecessor ===
v961 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j963 #next: j975  <|@  <|@
f <@~|@floating>@ <|@
tid j1673 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v969 
=== Succesors ===
=== Usages ===
v1789 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v969  <|@  <|@
f <@~|@floating>@ <|@
tid v1789 <|@
result [v12|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j1673 
index: - 
=== Succesors ===
=== Usages ===
j975 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1673 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j975 <|@
result v104|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1789 
=== Succesors ===
next: v976 
=== Usages ===
v976 
=== Predecessor ===
a607 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1789 #next: v976  <|@  <|@
f <@~|@floating>@ <|@
tid v1727 <|@
result [v102|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j963 
index: - 
=== Succesors ===
=== Usages ===
v976 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j963 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v976 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1727 
value: j975 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v979 
=== Usages ===
=== Predecessor ===
j975 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1727 value: j975 stateAfter: - lastLocationAccess: - #next: v979  <|@  <|@
f <@~|@floating>@ <|@
tid v1728 <|@
result [v102|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j963 
index: - 
=== Succesors ===
=== Usages ===
v979 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j963 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v979 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1728 
value: v1101 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v983 
=== Usages ===
=== Predecessor ===
v976 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1728 value: v1101 stateAfter: - lastLocationAccess: - #next: v983  <|@  <|@
f <@~|@floating>@ <|@
tid v1752 <|@
result [v102|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j963 
index: - 
=== Succesors ===
=== Usages ===
v983 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j963 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a610 <|@
result v105|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! -
=== Inputs ===
value: a716 
=== Succesors ===
=== Usages ===
v983 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a716  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v983 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1752 
value: a610 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v985 
=== Usages ===
=== Predecessor ===
v979 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1752 value: a610 stateAfter: - lastLocationAccess: - #next: v985  <|@  <|@
f <@~|@floating>@ <|@
tid v1753 <|@
result [v102|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j963 
index: - 
=== Succesors ===
=== Usages ===
v985 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j963 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v985 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1753 
value: i79 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a613 
=== Usages ===
=== Predecessor ===
v983 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1753 value: i79 stateAfter: - lastLocationAccess: - #next: a613  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a613 <|@
result v103|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a607 
=== Succesors ===
next: v614 
=== Usages ===
v201 
=== Predecessor ===
v985 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a607 #next: v614  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v201 
=== Usages ===
=== Predecessor ===
a613 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v201  <|@  <|@
f <@*|@fixed>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a613 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v614 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a613 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v102|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v103|QWORD[.] = MOVE v102|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v104|QWORD = MOV [v12|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v102|QWORD[*]], y: v104|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v102|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v105|DWORD[.] = COMPRESSPOINTER (input: v58|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@4796bf3d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v102|QWORD[*] + 12], y: v105|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v102|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v103|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4598412121140274464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1267 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1266 
=== Usages ===
=== Predecessor ===
v1268 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1266  <|@  <|@
f <@*|@fixed>@ <|@
tid v1266 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v1262 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1267 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1262  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|QWORD] destination: B79 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B81" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618043896262490198
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 97]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1687 
=== Usages ===
=== Predecessor ===
v27 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1687  <|@  <|@
f <@~|@floating>@ <|@
tid v1700 <|@
result [v31|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a298 
index: - 
=== Succesors ===
=== Usages ===
i1687 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a298 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1687 <|@
result v106|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1700 
=== Succesors ===
next: v121 
=== Usages ===
i117 i153 i706 v469 v645 
=== Predecessor ===
v33 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1700 #next: v121  <|@  <|@
f <@~|@floating>@ <|@
tid i108 <|@
result v107|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: i32
=== Inputs ===
x: i297 
y: i66 
=== Succesors ===
=== Usages ===
i297 ?213 i297 i117 i156 i501 ?332 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i297 y: i66  <|@  <|@
f <@~|@floating>@ <|@
tid i117 <|@
result v108|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: i32
=== Inputs ===
x: i108 
y: i1687 
=== Succesors ===
=== Usages ===
v118 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i108 y: i1687  <|@  <|@
f <@~|@floating>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i117 
y: i66 
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i117 y: i66  <|@  <|@
f <@~|@floating>@ <|@
tid i68 <|@
result v109|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.advance(SignatureParser.java:102) [bci: 32]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:269) [bci: 104]
stamp: i32
=== Inputs ===
x: i358 
y: i66 
=== Succesors ===
=== Usages ===
v489 i358 v478 i358 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i358 y: i66  <|@  <|@
f <@*|@fixed>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: void
trueSuccessorProbability: 0.9530584988351379
=== Inputs ===
condition: v118 
=== Succesors ===
trueSuccessor: v119 
falseSuccessor: v120 
=== Usages ===
=== Predecessor ===
i1687 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v118 #trueSuccessor: v119 #falseSuccessor: v120  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = MOV [v31|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = INC v32|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = SUB (x: v107|DWORD, ~y: v106|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = INC v33|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v108|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9530584988351379 condition: < trueDestination: B80 -> B81 falseDestination: B80 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B82" "B83" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617745447932687693
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v567 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v567  <|@  <|@
f <@~|@floating>@ <|@
tid v469 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i297 
y: i1687 
=== Succesors ===
=== Usages ===
v567 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i297 y: i1687  <|@  <|@
f <@*|@fixed>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v469 
=== Succesors ===
trueSuccessor: v563 
falseSuccessor: v566 
=== Usages ===
=== Predecessor ===
v119 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v469 #trueSuccessor: v563 #falseSuccessor: v566  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v106|DWORD, y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B81 -> B82 falseDestination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617745447932687693
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v477 
=== Usages ===
v477 
=== Predecessor ===
v567 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v477  <|@  <|@
f <@~|@floating>@ <|@
tid v1701 <|@
result [v31|QWORD[.] + v32|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a298 
index: i297 
=== Succesors ===
=== Usages ===
v477 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a298 index: i297  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v563 
address: v1701 
value: i1679 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v478 
=== Usages ===
=== Predecessor ===
v563 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v563 address: v1701 value: i1679 stateAfter: - lastLocationAccess: - #next: v478  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: SignatureParser.index
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.advance(SignatureParser.java:102) [bci: 33]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:269) [bci: 104]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1694 
value: i68 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v522 
=== Usages ===
=== Predecessor ===
v477 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1694 value: i68 stateAfter: - lastLocationAccess: - #next: v522  <|@  <|@
tid ?332 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a81 
values: i108 a298 
=== Succesors ===
=== Usages ===
?328 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a81 values: i108 a298  <|@  <|@
tid ?328 <|@
d <@d|@=== Debug Properties ===
bci: 36
code: ResolvedJavaMethodBytecode<SignatureParser.advance()>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.advance(SignatureParser.java:102) [bci: 33]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:269) [bci: 104]
rethrowException: false
sourceFile: SignatureParser.java
sourceLine: 103
stackSize: 0
=== Inputs ===
outerFrameState: ?72 
values: a1 
virtualObjectMappings: ?332 
=== Succesors ===
=== Usages ===
v522 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?72 values: a1 virtualObjectMappings: ?332  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?328 
=== Succesors ===
next: v321 
=== Usages ===
=== Predecessor ===
v478 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?328 #next: v321  <|@  <|@
f <@*|@fixed>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 1
stamp: void
=== Inputs ===
loopBegin: v8 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v522 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v8  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v31|QWORD[.] + v32|DWORD * 2 + 16], y: v34|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v109|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.reflect.generics.parser.SignatureParser.advance(SignatureParser.java:103) [bci: 36]
locals: v0|QWORD[.] 
sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:269) [bci: 104]
locals: v0|QWORD[.] vobject:StringBuilder:0{count=v107|DWORD,value=v31|QWORD[.]} - 
vobject:StringBuilder:0{count=v107|DWORD,value=v31|QWORD[.]} Ljava/lang/StringBuilder; v107|DWORD v31|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:36, 104] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v31|QWORD[.], v107|DWORD, v109|DWORD] destination: B82 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B139" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v8 
=== Succesors ===
next: v765 
=== Usages ===
=== Predecessor ===
v567 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v8 #next: v765  <|@  <|@
f <@~|@floating>@ <|@
tid i766 <|@
result int[-120347|0xfffffffffffe29e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -120347
stableDimension: 0
stamp: i32 [-120347] ⇊00000000fffe29e5 ⇈00000000fffe29e5
stampKind: i32
value: int[-120347|0xfffffffffffe29e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i756 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v765 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v753 
=== Predecessor ===
v566 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-120347|0xfffffffffffe29e5]] destination: B83 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B85" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598446793194746001
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v572 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v572  <|@  <|@
f <@~|@floating>@ <|@
tid i153 <|@
result v110|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:150) [bci: 6]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i1687 
y: i66 
=== Succesors ===
=== Usages ===
i155 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1687 y: i66  <|@  <|@
f <@~|@floating>@ <|@
tid i155 <|@
result v111|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:150) [bci: 8]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i153 
y: i154 
=== Succesors ===
=== Usages ===
i156 i501 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i153 y: i154  <|@  <|@
f <@~|@floating>@ <|@
tid i156 <|@
result v112|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:151) [bci: 12]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: i32
=== Inputs ===
x: i155 
y: i108 
=== Succesors ===
=== Usages ===
v157 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i155 y: i108  <|@  <|@
f <@~|@floating>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:151) [bci: 13]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i156 
y: i79 
=== Succesors ===
=== Usages ===
i501 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i156 y: i79  <|@  <|@
f <@~|@floating>@ <|@
tid i501 <|@
result v113|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v157 
trueValue: i108 
falseValue: i155 
=== Succesors ===
=== Usages ===
v481 j1110 v166 i169 v993 v645 i706 a1008 v1027 i986 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v157 trueValue: i108 falseValue: i155  <|@  <|@
f <@~|@floating>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i501 
y: i66 
=== Succesors ===
=== Usages ===
v572 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i501 y: i66  <|@  <|@
f <@*|@fixed>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v166 
=== Succesors ===
trueSuccessor: v571 
falseSuccessor: v568 
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v166 #trueSuccessor: v571 #falseSuccessor: v568  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = SHL v106|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = LEA [v110|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = SUB (x: v111|DWORD, ~y: v107|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v112|DWORD, y: v112|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v113|DWORD = CMOVE (falseValue: v111|DWORD, ~trueValue: v107|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction CMP v113|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B84 -> B85 falseDestination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B139" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v571 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v8 
=== Succesors ===
next: v767 
=== Usages ===
=== Predecessor ===
v572 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v8 #next: v767  <|@  <|@
f <@~|@floating>@ <|@
tid i768 <|@
result int[-122643|0xfffffffffffe20ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -122643
stableDimension: 0
stamp: i32 [-122643] ⇊00000000fffe20ed ⇈00000000fffe20ed
stampKind: i32
value: int[-122643|0xfffffffffffe20ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i756 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v767 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v753 
=== Predecessor ===
v571 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-122643|0xfffffffffffe20ed]] destination: B85 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" "B88" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598446793194746001
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v577 
=== Usages ===
=== Predecessor ===
v572 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v577  <|@  <|@
f <@~|@floating>@ <|@
tid i168 <|@
result int[2147483639|0x7ffffff7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 22]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
rawvalue: 2147483639
stableDimension: 0
stamp: i32 [2147483639] ⇊000000007ffffff7 ⇈000000007ffffff7
stampKind: i32
value: int[2147483639|0x7ffffff7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i169 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i169 <|@
result v115|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 25]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: i32
=== Inputs ===
x: i168 
y: i501 
=== Succesors ===
=== Usages ===
v170 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i168 y: i501  <|@  <|@
f <@~|@floating>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i169 
y: i79 
=== Succesors ===
=== Usages ===
v577 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i169 y: i79  <|@  <|@
f <@*|@fixed>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v170 
=== Succesors ===
trueSuccessor: v576 
falseSuccessor: v573 
=== Usages ===
=== Predecessor ===
v568 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v170 #trueSuccessor: v576 #falseSuccessor: v573  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v114|DWORD = MOVE input: int[2147483639|0x7ffffff7] <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = SUB (x: v114|DWORD, ~y: v113|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v115|DWORD, y: v115|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B86 -> B87 falseDestination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B139" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v8 
=== Succesors ===
next: v769 
=== Usages ===
=== Predecessor ===
v577 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v8 #next: v769  <|@  <|@
f <@~|@floating>@ <|@
tid i770 <|@
result int[-122899|0xfffffffffffe1fed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -122899
stableDimension: 0
stamp: i32 [-122899] ⇊00000000fffe1fed ⇈00000000fffe1fed
stampKind: i32
value: int[-122899|0xfffffffffffe1fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i756 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v769 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v753 
=== Predecessor ===
v576 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-122899|0xfffffffffffe1fed]] destination: B87 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B89" "B136" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598446793194746001
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v582 
=== Usages ===
=== Predecessor ===
v577 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v582  <|@  <|@
f <@~|@floating>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i297 
y: i501 
=== Succesors ===
=== Usages ===
v582 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i297 y: i501  <|@  <|@
f <@*|@fixed>@ <|@
tid v582 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v481 
=== Succesors ===
trueSuccessor: v578 
falseSuccessor: v581 
=== Usages ===
=== Predecessor ===
v573 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v481 #trueSuccessor: v578 #falseSuccessor: v581  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v113|DWORD, y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B88 -> B89 falseDestination: B88 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B90" "B93" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598446793194746001
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: j988 
=== Usages ===
v488 
=== Predecessor ===
v582 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j988  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j988 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1024 
=== Usages ===
v1729 v1730 
=== Predecessor ===
v578 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1024  <|@  <|@
f <@~|@floating>@ <|@
tid v1729 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j988 
index: - 
=== Succesors ===
=== Usages ===
j1024 v1026 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j988 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1024 <|@
result v116|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1729 
=== Succesors ===
next: j1025 
=== Usages ===
j992 v1731 v1732 a1007 v1737 v1733 v1734 v1735 v1736 
=== Predecessor ===
j988 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1729 #next: j1025  <|@  <|@
f <@~|@floating>@ <|@
tid v1730 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j988 
index: - 
=== Succesors ===
=== Usages ===
j1025 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j988 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1025 <|@
result v117|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1730 
=== Succesors ===
next: v996 
=== Usages ===
v997 
=== Predecessor ===
j1024 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1730 #next: v996  <|@  <|@
f <@~|@floating>@ <|@
tid v993 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i501 
y: i890 
=== Succesors ===
=== Usages ===
v996 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i501 y: i890  <|@  <|@
f <@*|@fixed>@ <|@
tid v996 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v993 
=== Succesors ===
trueSuccessor: v995 
falseSuccessor: v994 
=== Usages ===
=== Predecessor ===
j1025 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v993 #trueSuccessor: v995 #falseSuccessor: v994  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v117|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v113|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B89 -> B90 falseDestination: B89 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B91" "B92" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597763332188847570
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v995 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1003 
=== Usages ===
=== Predecessor ===
v996 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1003  <|@  <|@
f <@~|@floating>@ <|@
tid i986 <|@
result v118|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i501 
y: i66 
=== Succesors ===
=== Usages ===
i1015 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i501 y: i66  <|@  <|@
f <@~|@floating>@ <|@
tid i1015 <|@
result v119|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i986 
y: i913 
=== Succesors ===
=== Usages ===
i987 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i986 y: i913  <|@  <|@
f <@~|@floating>@ <|@
tid i987 <|@
result v120|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i1015 
y: i883 
=== Succesors ===
=== Usages ===
j991 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i1015 y: i883  <|@  <|@
f <@~|@floating>@ <|@
tid j991 <|@
result v121|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i987 
=== Succesors ===
=== Usages ===
j992 v1733 v1734 v1735 v1736 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i987  <|@  <|@
f <@~|@floating>@ <|@
tid j992 <|@
result v122|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: i64
=== Inputs ===
x: j991 
y: j1024 
=== Succesors ===
=== Usages ===
v997 v1026 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j991 y: j1024  <|@  <|@
f <@~|@floating>@ <|@
tid v997 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1025 
y: j992 
=== Succesors ===
=== Usages ===
v1003 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1025 y: j992  <|@  <|@
f <@*|@fixed>@ <|@
tid v1003 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v997 
=== Succesors ===
trueSuccessor: v1002 
falseSuccessor: v1001 
=== Usages ===
=== Predecessor ===
v995 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v997 #trueSuccessor: v1002 #falseSuccessor: v1001  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v118|DWORD = SHL v113|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v119|DWORD = LEA [v118|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = AND v119|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v121|QWORD = MOVSXD v120|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v122|QWORD = ADD (x: v121|QWORD, y: v116|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v122|QWORD, y: v117|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B90 -> B91 falseDestination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B94" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4567647422141232226
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1002 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1000 
=== Usages ===
=== Predecessor ===
v1003 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1000  <|@  <|@
f <@*|@fixed>@ <|@
tid v1000 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v999 
=== Predecessor ===
v1002 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B91 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B95" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597677379069864448
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1001 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1026 
=== Usages ===
=== Predecessor ===
v1003 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1026  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1026 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1729 
value: j992 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1017 
=== Usages ===
=== Predecessor ===
v1001 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1729 value: j992 stateAfter: - lastLocationAccess: - #next: v1017  <|@  <|@
f <@~|@floating>@ <|@
tid v1733 <|@
result [v121|QWORD + v116|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j991 
index: j1024 
=== Succesors ===
=== Usages ===
v1017 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j991 index: j1024  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1017 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: void
=== Inputs ===
address: v1733 
=== Succesors ===
next: v1019 
=== Usages ===
=== Predecessor ===
v1026 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1733 #next: v1019  <|@  <|@
f <@~|@floating>@ <|@
tid v1734 <|@
result [v121|QWORD + v116|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j991 
index: j1024 
=== Succesors ===
=== Usages ===
v1019 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j991 index: j1024  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1019 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: void
=== Inputs ===
address: v1734 
=== Succesors ===
next: v1021 
=== Usages ===
=== Predecessor ===
v1017 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1734 #next: v1021  <|@  <|@
f <@~|@floating>@ <|@
tid v1735 <|@
result [v121|QWORD + v116|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j991 
index: j1024 
=== Succesors ===
=== Usages ===
v1021 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j991 index: j1024  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1021 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: void
=== Inputs ===
address: v1735 
=== Succesors ===
next: v1023 
=== Usages ===
=== Predecessor ===
v1019 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1735 #next: v1023  <|@  <|@
f <@~|@floating>@ <|@
tid v1736 <|@
result [v121|QWORD + v116|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j991 
index: j1024 
=== Succesors ===
=== Usages ===
v1023 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j991 index: j1024  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1023 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: void
=== Inputs ===
address: v1736 
=== Succesors ===
next: v1027 
=== Usages ===
=== Predecessor ===
v1021 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1736 #next: v1027  <|@  <|@
f <@~|@floating>@ <|@
tid v1731 <|@
result [v116|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1024 
index: - 
=== Succesors ===
=== Usages ===
v1027 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1024 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1027 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1731 
value: i501 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1028 
=== Usages ===
=== Predecessor ===
v1023 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1731 value: i501 stateAfter: - lastLocationAccess: - #next: v1028  <|@  <|@
f <@~|@floating>@ <|@
tid v1732 <|@
result [v116|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1024 
index: - 
=== Succesors ===
=== Usages ===
v1028 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1024 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1028 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1732 
value: j814 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1031 
=== Usages ===
=== Predecessor ===
v1027 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1732 value: j814 stateAfter: - lastLocationAccess: - #next: v1031  <|@  <|@
f <@~|@floating>@ <|@
tid v1737 <|@
result [v116|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1024 
index: - 
=== Succesors ===
=== Usages ===
v1031 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1024 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1031 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1737 
value: v1087 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1006 
=== Usages ===
=== Predecessor ===
v1028 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1737 value: v1087 stateAfter: - lastLocationAccess: - #next: v1006  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1006 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1007 
=== Usages ===
=== Predecessor ===
v1031 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a1007  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1007 <|@
result v123|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j1024 
=== Succesors ===
next: v1009 
=== Usages ===
a1012 
=== Predecessor ===
v1006 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1024 #next: v1009  <|@  <|@
f <@*|@fixed>@ <|@
tid v1009 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1010 
=== Predecessor ===
a1007 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v122|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v121|QWORD + v116|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v121|QWORD + v116|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v121|QWORD + v116|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v121|QWORD + v116|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v116|QWORD + 12], y: v113|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v116|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v116|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v123|QWORD[.] = MOVE v116|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v123|QWORD[.]] destination: B92 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B94" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583297498651368064
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v994 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v998 
=== Usages ===
=== Predecessor ===
v996 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v998  <|@  <|@
f <@*|@fixed>@ <|@
tid v998 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v999 
=== Predecessor ===
v994 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" "B91" 
    successors "B95" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583985123603233036
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v999 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v998 v1000 
=== Succesors ===
next: a1008 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v998 v1000 #next: a1008  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1008 <|@
result v124|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?9 
arguments: v813 i501 i79 
=== Succesors ===
next: v1011 
=== Usages ===
a1012 
=== Predecessor ===
v999 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?9 arguments: v813 i501 i79 #next: v1011  <|@  <|@
f <@*|@fixed>@ <|@
tid v1011 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1010 
=== Predecessor ===
a1008 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v113|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 8]
locals: v0|QWORD[.] vobject:StringBuilder:0{count=v32|DWORD,value=v31|QWORD[.]} - 
vobject:StringBuilder:0{count=v32|DWORD,value=v31|QWORD[.]} Ljava/lang/StringBuilder; v32|DWORD v31|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8] <|@ <|@
      nr   -1  <|@ instruction v124|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v124|QWORD[.]] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B92" "B94" 
    successors "B96" "B97" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598446793194746001
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1012 <|@
result v125|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v1010 
values: a1007 a1008 
=== Succesors ===
=== Usages ===
v1757 a712 v1704 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1010 values: a1007 a1008  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1010 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1009 v1011 
=== Succesors ===
next: v1386 
=== Usages ===
a1012 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1009 v1011 #next: v1386  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1386 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v1130 
=== Usages ===
j1387 j1389 
=== Predecessor ===
v1010 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v1130  <|@  <|@
f <@~|@floating>@ <|@
tid v645 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1687 
y: i501 
=== Succesors ===
=== Usages ===
i706 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1687 y: i501  <|@  <|@
f <@~|@floating>@ <|@
tid i706 <|@
result v126|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v645 
trueValue: i1687 
falseValue: i501 
=== Succesors ===
=== Usages ===
j1111 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v645 trueValue: i1687 falseValue: i501  <|@  <|@
f <@~|@floating>@ <|@
tid j1111 <|@
result v127|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i706 
=== Succesors ===
=== Usages ===
j1451 v1757 j1115 v1127 v1381 j1433 j1439 j1443 j1447 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i706  <|@  <|@
f <@~|@floating>@ <|@
tid v1127 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1111 
y: j814 
=== Succesors ===
=== Usages ===
v1130 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1111 y: j814  <|@  <|@
f <@*|@fixed>@ <|@
tid v1130 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1127 
=== Succesors ===
trueSuccessor: v1128 
falseSuccessor: v1129 
=== Usages ===
=== Predecessor ===
v1386 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1127 #trueSuccessor: v1128 #falseSuccessor: v1129  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v125|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v113|DWORD, y: v106|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = CMOVE (falseValue: v113|DWORD, ~trueValue: v106|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v127|QWORD = MOVSXD v126|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v127|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B95 -> B96 falseDestination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B114" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593943193567375505
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1128 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1146 
=== Usages ===
=== Predecessor ===
v1130 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1146  <|@  <|@
f <@*|@fixed>@ <|@
tid v1146 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1147 
=== Predecessor ===
v1128 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B96 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593943193567375505
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1129 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1133 
=== Usages ===
=== Predecessor ===
v1130 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1133  <|@  <|@
f <@~|@floating>@ <|@
tid v1704 <|@
result [v125|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1012 
index: - 
=== Succesors ===
=== Usages ===
j1389 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1012 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1389 <|@
result v128|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1386 
address: v1704 
=== Succesors ===
=== Usages ===
v1759 v1761 v1763 v1765 v1767 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1386 address: v1704  <|@  <|@
f <@~|@floating>@ <|@
tid v1790 <|@
result [v31|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a298 
index: - 
=== Succesors ===
=== Usages ===
j1387 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a298 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1387 <|@
result v129|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1386 
address: v1790 
=== Succesors ===
=== Usages ===
v1760 v1762 v1764 v1766 v1768 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1386 address: v1790  <|@  <|@
f <@~|@floating>@ <|@
tid j1433 <|@
result v130|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j1111 
y: j1432 
=== Succesors ===
=== Usages ===
v1434 v1436 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1111 y: j1432  <|@  <|@
f <@~|@floating>@ <|@
tid v1434 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1433 
y: j584 
=== Succesors ===
=== Usages ===
v1133 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1433 y: j584  <|@  <|@
f <@*|@fixed>@ <|@
tid v1133 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1434 
=== Succesors ===
trueSuccessor: v1131 
falseSuccessor: v1132 
=== Usages ===
=== Predecessor ===
v1129 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1434 #trueSuccessor: v1131 #falseSuccessor: v1132  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = LEA [v125|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = LEA [v31|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v130|QWORD = LEA [v127|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v130|QWORD, y: v130|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B97 -> B98 falseDestination: B97 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B102" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591827180578425050
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1131 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1142 
=== Usages ===
=== Predecessor ===
v1133 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1142  <|@  <|@
f <@*|@fixed>@ <|@
tid v1142 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1143 
=== Predecessor ===
v1131 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B98 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584935994312634513
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1132 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1134 
=== Usages ===
=== Predecessor ===
v1133 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1134  <|@  <|@
f <@*|@fixed>@ <|@
tid v1134 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1135 
=== Predecessor ===
v1132 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B99 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" "B135" 
    successors "B101" "B135" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 2
    probability 4593943193567375505
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1424 <|@
result v131|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1135 
values: j584 j1431 
=== Succesors ===
=== Usages ===
v1768 j1431 v1767 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1135 values: j584 j1431  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1135 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1134 
=== Succesors ===
next: v1688 
=== Usages ===
v1688 v1138 v1139 j1424 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1134 #next: v1688  <|@  <|@
f <@~|@floating>@ <|@
tid v1768 <|@
result [v129|QWORD[.] + v131|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1387 
index: j1424 
=== Succesors ===
=== Usages ===
v1688 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1387 index: j1424  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1688 <|@
result v132|V256_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v1135 
address: v1768 
=== Succesors ===
next: v1638 
=== Usages ===
v1638 
=== Predecessor ===
v1135 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1135 address: v1768 #next: v1638  <|@  <|@
f <@~|@floating>@ <|@
tid v1767 <|@
result [v128|QWORD[.] + v131|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1389 
index: j1424 
=== Succesors ===
=== Usages ===
v1638 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1389 index: j1424  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1638 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1767 
value: v1688 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1141 
=== Usages ===
=== Predecessor ===
v1688 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1767 value: v1688 stateAfter: - lastLocationAccess: - #next: v1141  <|@  <|@
f <@~|@floating>@ <|@
tid j1431 <|@
result v133|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1424 
y: j393 
=== Succesors ===
=== Usages ===
j1416 j1424 v1436 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1424 y: j393  <|@  <|@
f <@~|@floating>@ <|@
tid v1436 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1433 
y: j1431 
=== Succesors ===
=== Usages ===
v1141 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1433 y: j1431  <|@  <|@
f <@*|@fixed>@ <|@
tid v1141 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1436 
=== Succesors ===
trueSuccessor: v1138 
falseSuccessor: v1140 
=== Usages ===
=== Predecessor ===
v1638 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1436 #trueSuccessor: v1138 #falseSuccessor: v1140  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v131|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v132|V256_WORD = H [v129|QWORD[.] + v131|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v128|QWORD[.] + v131|QWORD * 2], input: v132|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v133|QWORD = LEA [v131|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v133|QWORD, y: v130|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B100 -> B101 falseDestination: B100 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584935994312634513
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1138 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1135 
=== Succesors ===
next: v1144 
=== Usages ===
=== Predecessor ===
v1141 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1135 #next: v1144  <|@  <|@
f <@*|@fixed>@ <|@
tid v1144 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1143 
=== Predecessor ===
v1138 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v133|QWORD] destination: B101 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B98" "B101" 
    successors "B103" "B104" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593943193567375505
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1416 <|@
result v134|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1143 
values: j584 j1431 
=== Succesors ===
=== Usages ===
v1766 j1423 j1407 v1440 v1765 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1143 values: j584 j1431  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1143 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1142 v1144 
=== Succesors ===
next: v1166 
=== Usages ===
j1416 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1142 v1144 #next: v1166  <|@  <|@
f <@~|@floating>@ <|@
tid j1439 <|@
result v135|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j1111 
y: j1438 
=== Succesors ===
=== Usages ===
v1440 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1111 y: j1438  <|@  <|@
f <@~|@floating>@ <|@
tid v1440 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1439 
y: j1416 
=== Succesors ===
=== Usages ===
v1166 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1439 y: j1416  <|@  <|@
f <@*|@fixed>@ <|@
tid v1166 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1440 
=== Succesors ===
trueSuccessor: v1165 
falseSuccessor: v1164 
=== Usages ===
=== Predecessor ===
v1143 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1440 #trueSuccessor: v1165 #falseSuccessor: v1164  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v134|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v135|QWORD = LEA [v127|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v134|QWORD, y: v135|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B102 -> B103 falseDestination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B105" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584935994312634513
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1165 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1169 
=== Usages ===
=== Predecessor ===
v1166 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1169  <|@  <|@
f <@*|@fixed>@ <|@
tid v1169 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1154 
=== Predecessor ===
v1165 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v134|QWORD] destination: B103 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B105" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591827180578425050
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1164 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1689 
=== Usages ===
v1689 
=== Predecessor ===
v1166 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1689  <|@  <|@
f <@~|@floating>@ <|@
tid v1766 <|@
result [v129|QWORD[.] + v134|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1387 
index: j1416 
=== Succesors ===
=== Usages ===
v1689 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1387 index: j1416  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1689 <|@
result v136|V128_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v1164 
address: v1766 
=== Succesors ===
next: v1636 
=== Usages ===
v1636 
=== Predecessor ===
v1164 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1164 address: v1766 #next: v1636  <|@  <|@
f <@~|@floating>@ <|@
tid v1765 <|@
result [v128|QWORD[.] + v134|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1389 
index: j1416 
=== Succesors ===
=== Usages ===
v1636 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1389 index: j1416  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1636 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1765 
value: v1689 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1153 
=== Usages ===
=== Predecessor ===
v1689 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1765 value: v1689 stateAfter: - lastLocationAccess: - #next: v1153  <|@  <|@
f <@~|@floating>@ <|@
tid j1423 <|@
result v137|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1416 
y: j821 
=== Succesors ===
=== Usages ===
j1407 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1416 y: j821  <|@  <|@
f <@*|@fixed>@ <|@
tid v1153 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1154 
=== Predecessor ===
v1636 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v136|V128_WORD = H [v129|QWORD[.] + v134|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v128|QWORD[.] + v134|QWORD * 2], input: v136|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v137|QWORD = LEA [v134|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v137|QWORD] destination: B104 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" "B103" 
    successors "B106" "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593943193567375505
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1407 <|@
result v138|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1154 
values: j1423 j1416 
=== Succesors ===
=== Usages ===
v1764 j1415 j1399 v1444 v1763 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1154 values: j1423 j1416  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1154 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1153 v1169 
=== Succesors ===
next: v1172 
=== Usages ===
j1407 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1153 v1169 #next: v1172  <|@  <|@
f <@~|@floating>@ <|@
tid j1443 <|@
result v139|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j1111 
y: j1442 
=== Succesors ===
=== Usages ===
v1444 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1111 y: j1442  <|@  <|@
f <@~|@floating>@ <|@
tid v1444 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1443 
y: j1407 
=== Succesors ===
=== Usages ===
v1172 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1443 y: j1407  <|@  <|@
f <@*|@fixed>@ <|@
tid v1172 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1444 
=== Succesors ===
trueSuccessor: v1171 
falseSuccessor: v1170 
=== Usages ===
=== Predecessor ===
v1154 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1444 #trueSuccessor: v1171 #falseSuccessor: v1170  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v138|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v139|QWORD = LEA [v127|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v138|QWORD, y: v139|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B105 -> B106 falseDestination: B105 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584935994312634513
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1171 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1175 
=== Usages ===
=== Predecessor ===
v1172 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1175  <|@  <|@
f <@*|@fixed>@ <|@
tid v1175 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1158 
=== Predecessor ===
v1171 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v138|QWORD] destination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591827180578425050
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1170 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1690 
=== Usages ===
v1690 
=== Predecessor ===
v1172 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1690  <|@  <|@
f <@~|@floating>@ <|@
tid v1764 <|@
result [v129|QWORD[.] + v138|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1387 
index: j1407 
=== Succesors ===
=== Usages ===
v1690 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1387 index: j1407  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1690 <|@
result v140|V64_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v1170 
address: v1764 
=== Succesors ===
next: v1634 
=== Usages ===
v1634 
=== Predecessor ===
v1170 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1170 address: v1764 #next: v1634  <|@  <|@
f <@~|@floating>@ <|@
tid v1763 <|@
result [v128|QWORD[.] + v138|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1389 
index: j1407 
=== Succesors ===
=== Usages ===
v1634 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1389 index: j1407  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1634 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1763 
value: v1690 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1157 
=== Usages ===
=== Predecessor ===
v1690 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1763 value: v1690 stateAfter: - lastLocationAccess: - #next: v1157  <|@  <|@
f <@~|@floating>@ <|@
tid j1415 <|@
result v141|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1407 
y: j1414 
=== Succesors ===
=== Usages ===
j1399 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1407 y: j1414  <|@  <|@
f <@*|@fixed>@ <|@
tid v1157 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1158 
=== Predecessor ===
v1634 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v140|V64_WORD = H [v129|QWORD[.] + v138|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v128|QWORD[.] + v138|QWORD * 2], input: v140|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v141|QWORD = LEA [v138|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v141|QWORD] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593943193567375505
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1399 <|@
result v142|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1158 
values: j1415 j1407 
=== Succesors ===
=== Usages ===
v1762 j1406 j1390 v1448 v1761 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1158 values: j1415 j1407  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1158 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1157 v1175 
=== Succesors ===
next: v1178 
=== Usages ===
j1399 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1157 v1175 #next: v1178  <|@  <|@
f <@~|@floating>@ <|@
tid j1447 <|@
result v143|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j1111 
y: j1446 
=== Succesors ===
=== Usages ===
v1448 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1111 y: j1446  <|@  <|@
f <@~|@floating>@ <|@
tid v1448 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1447 
y: j1399 
=== Succesors ===
=== Usages ===
v1178 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1447 y: j1399  <|@  <|@
f <@*|@fixed>@ <|@
tid v1178 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1448 
=== Succesors ===
trueSuccessor: v1177 
falseSuccessor: v1176 
=== Usages ===
=== Predecessor ===
v1158 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1448 #trueSuccessor: v1177 #falseSuccessor: v1176  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v142|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v143|QWORD = LEA [v127|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v142|QWORD, y: v143|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B108 -> B109 falseDestination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584935994312634513
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1177 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1181 
=== Usages ===
=== Predecessor ===
v1178 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1181  <|@  <|@
f <@*|@fixed>@ <|@
tid v1181 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1161 
=== Predecessor ===
v1177 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v142|QWORD] destination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591827180578425050
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1176 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1691 
=== Usages ===
v1691 
=== Predecessor ===
v1178 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1691  <|@  <|@
f <@~|@floating>@ <|@
tid v1762 <|@
result [v129|QWORD[.] + v142|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1387 
index: j1399 
=== Succesors ===
=== Usages ===
v1691 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1387 index: j1399  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1691 <|@
result v144|V32_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v1176 
address: v1762 
=== Succesors ===
next: v1632 
=== Usages ===
v1632 
=== Predecessor ===
v1176 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1176 address: v1762 #next: v1632  <|@  <|@
f <@~|@floating>@ <|@
tid v1761 <|@
result [v128|QWORD[.] + v142|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1389 
index: j1399 
=== Succesors ===
=== Usages ===
v1632 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1389 index: j1399  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1632 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1761 
value: v1691 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1160 
=== Usages ===
=== Predecessor ===
v1691 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1761 value: v1691 stateAfter: - lastLocationAccess: - #next: v1160  <|@  <|@
f <@~|@floating>@ <|@
tid j1406 <|@
result v145|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1399 
y: j1392 
=== Succesors ===
=== Usages ===
j1390 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1399 y: j1392  <|@  <|@
f <@*|@fixed>@ <|@
tid v1160 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1161 
=== Predecessor ===
v1632 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v144|V32_WORD = H [v129|QWORD[.] + v142|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v128|QWORD[.] + v142|QWORD * 2], input: v144|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v145|QWORD = LEA [v142|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v145|QWORD] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" "B109" 
    successors "B112" "B113" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593943193567375505
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1390 <|@
result v146|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1161 
values: j1406 j1399 
=== Succesors ===
=== Usages ===
v1760 v1452 v1759 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1161 values: j1406 j1399  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1161 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1160 v1181 
=== Succesors ===
next: v1184 
=== Usages ===
j1390 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1160 v1181 #next: v1184  <|@  <|@
f <@~|@floating>@ <|@
tid j1451 <|@
result v147|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j1111 
y: j1450 
=== Succesors ===
=== Usages ===
v1452 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1111 y: j1450  <|@  <|@
f <@~|@floating>@ <|@
tid v1452 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1451 
y: j1390 
=== Succesors ===
=== Usages ===
v1184 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1451 y: j1390  <|@  <|@
f <@*|@fixed>@ <|@
tid v1184 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1452 
=== Succesors ===
trueSuccessor: v1183 
falseSuccessor: v1182 
=== Usages ===
=== Predecessor ===
v1161 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1452 #trueSuccessor: v1183 #falseSuccessor: v1182  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v146|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v147|QWORD = DEC v127|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v146|QWORD, y: v147|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B111 -> B112 falseDestination: B111 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584935994312634513
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1183 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1187 
=== Usages ===
=== Predecessor ===
v1184 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1187  <|@  <|@
f <@*|@fixed>@ <|@
tid v1187 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1147 
=== Predecessor ===
v1183 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B112 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591827180578425050
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1182 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i1692 
=== Usages ===
i1692 
=== Predecessor ===
v1184 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1692  <|@  <|@
f <@~|@floating>@ <|@
tid v1760 <|@
result [v129|QWORD[.] + v146|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1387 
index: j1390 
=== Succesors ===
=== Usages ===
i1692 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1387 index: j1390  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1692 <|@
result v148|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v1182 
address: v1760 
=== Succesors ===
next: v1630 
=== Usages ===
v1630 
=== Predecessor ===
v1182 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1182 address: v1760 #next: v1630  <|@  <|@
f <@~|@floating>@ <|@
tid v1759 <|@
result [v128|QWORD[.] + v146|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1389 
index: j1390 
=== Succesors ===
=== Usages ===
v1630 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1389 index: j1390  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1630 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1759 
value: i1692 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1163 
=== Usages ===
=== Predecessor ===
i1692 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1759 value: i1692 stateAfter: - lastLocationAccess: - #next: v1163  <|@  <|@
f <@*|@fixed>@ <|@
tid v1163 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1147 
=== Predecessor ===
v1630 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v148|DWORD = MOVSX [v129|QWORD[.] + v146|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v128|QWORD[.] + v146|QWORD * 2], y: v148|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B113 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B96" "B113" "B112" 
    successors "B115" "B133" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598446793194746001
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1147 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1146 v1163 v1187 
=== Succesors ===
next: v1455 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1146 v1163 v1187 #next: v1455  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1455 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v1194 
=== Usages ===
j1457 
=== Predecessor ===
v1147 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v1194  <|@  <|@
f <@~|@floating>@ <|@
tid j1110 <|@
result v149|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i501 
=== Succesors ===
=== Usages ===
j1115 v1381 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i501  <|@  <|@
f <@~|@floating>@ <|@
tid v1381 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1111 
y: j1110 
=== Succesors ===
=== Usages ===
v1194 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1111 y: j1110  <|@  <|@
f <@*|@fixed>@ <|@
tid v1194 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1381 
=== Succesors ===
trueSuccessor: v1193 
falseSuccessor: v1192 
=== Usages ===
=== Predecessor ===
v1455 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1381 #trueSuccessor: v1193 #falseSuccessor: v1192  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v149|QWORD = MOVSXD v113|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v149|QWORD, y: v127|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B114 -> B115 falseDestination: B114 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B116" "B117" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593943193567375505
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1193 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1197 
=== Usages ===
=== Predecessor ===
v1194 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1197  <|@  <|@
f <@~|@floating>@ <|@
tid v1757 <|@
result [v125|QWORD[.] + v127|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1012 
index: j1111 
=== Succesors ===
=== Usages ===
j1457 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1012 index: j1111  <|@  <|@
f <@~|@floating>@ <|@
tid j1457 <|@
result v150|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1455 
address: v1757 
=== Succesors ===
=== Usages ===
v1769 v1770 v1771 v1772 v1773 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1455 address: v1757  <|@  <|@
f <@~|@floating>@ <|@
tid j1115 <|@
result v151|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j1110 
y: j1111 
=== Succesors ===
=== Usages ===
j1502 j1488 j1493 j1496 j1499 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j1110 y: j1111  <|@  <|@
f <@~|@floating>@ <|@
tid j1488 <|@
result v152|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j1115 
y: j1432 
=== Succesors ===
=== Usages ===
v1489 v1491 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1115 y: j1432  <|@  <|@
f <@~|@floating>@ <|@
tid v1489 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1488 
y: j584 
=== Succesors ===
=== Usages ===
v1197 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1488 y: j584  <|@  <|@
f <@*|@fixed>@ <|@
tid v1197 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1489 
=== Succesors ===
trueSuccessor: v1195 
falseSuccessor: v1196 
=== Usages ===
=== Predecessor ===
v1193 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1489 #trueSuccessor: v1195 #falseSuccessor: v1196  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = LEA [v125|QWORD[.] + v127|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v151|QWORD = SUB (x: v149|QWORD, ~y: v127|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v152|QWORD = LEA [v151|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v152|QWORD, y: v152|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B115 -> B116 falseDestination: B115 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B120" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591827180578425050
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1195 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1206 
=== Usages ===
=== Predecessor ===
v1197 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1206  <|@  <|@
f <@*|@fixed>@ <|@
tid v1206 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1207 
=== Predecessor ===
v1195 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B116 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584935994312634513
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1196 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1198 
=== Usages ===
=== Predecessor ===
v1197 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1198  <|@  <|@
f <@*|@fixed>@ <|@
tid v1198 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1199 
=== Predecessor ===
v1196 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" "B132" 
    successors "B119" "B132" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 2
    probability 4593943193567375505
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1482 <|@
result v153|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1199 
values: j584 j1487 
=== Succesors ===
=== Usages ===
v1773 j1487 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1199 values: j584 j1487  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1199 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1198 
=== Succesors ===
next: v1648 
=== Usages ===
j1482 v1202 v1203 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1198 #next: v1648  <|@  <|@
f <@~|@floating>@ <|@
tid v1773 <|@
result [v150|QWORD[.] + v153|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1457 
index: j1482 
=== Succesors ===
=== Usages ===
v1648 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1457 index: j1482  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1648 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1773 
value: v1664 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1205 
=== Usages ===
=== Predecessor ===
v1199 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1773 value: v1664 stateAfter: - lastLocationAccess: - #next: v1205  <|@  <|@
f <@~|@floating>@ <|@
tid j1487 <|@
result v154|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1482 
y: j393 
=== Succesors ===
=== Usages ===
j1476 j1482 v1491 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1482 y: j393  <|@  <|@
f <@~|@floating>@ <|@
tid v1491 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1488 
y: j1487 
=== Succesors ===
=== Usages ===
v1205 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1488 y: j1487  <|@  <|@
f <@*|@fixed>@ <|@
tid v1205 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1491 
=== Succesors ===
trueSuccessor: v1202 
falseSuccessor: v1204 
=== Usages ===
=== Predecessor ===
v1648 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1491 #trueSuccessor: v1202 #falseSuccessor: v1204  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v153|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v150|QWORD[.] + v153|QWORD * 2], input: v30|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v154|QWORD = LEA [v153|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v154|QWORD, y: v152|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B118 -> B119 falseDestination: B118 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B120" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584935994312634513
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1202 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1199 
=== Succesors ===
next: v1208 
=== Usages ===
=== Predecessor ===
v1205 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1199 #next: v1208  <|@  <|@
f <@*|@fixed>@ <|@
tid v1208 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1207 
=== Predecessor ===
v1202 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v154|QWORD] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B116" "B119" 
    successors "B121" "B122" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593943193567375505
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1476 <|@
result v155|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1207 
values: j584 j1487 
=== Succesors ===
=== Usages ===
v1772 j1481 j1470 v1494 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1207 values: j584 j1487  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1207 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1206 v1208 
=== Succesors ===
next: v1229 
=== Usages ===
j1476 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1206 v1208 #next: v1229  <|@  <|@
f <@~|@floating>@ <|@
tid j1493 <|@
result v156|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j1115 
y: j1438 
=== Succesors ===
=== Usages ===
v1494 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1115 y: j1438  <|@  <|@
f <@~|@floating>@ <|@
tid v1494 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1493 
y: j1476 
=== Succesors ===
=== Usages ===
v1229 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1493 y: j1476  <|@  <|@
f <@*|@fixed>@ <|@
tid v1229 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1494 
=== Succesors ===
trueSuccessor: v1228 
falseSuccessor: v1227 
=== Usages ===
=== Predecessor ===
v1207 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1494 #trueSuccessor: v1228 #falseSuccessor: v1227  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v155|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v156|QWORD = LEA [v151|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v155|QWORD, y: v156|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B120 -> B121 falseDestination: B120 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B123" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584935994312634513
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1228 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1232 
=== Usages ===
=== Predecessor ===
v1229 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1232  <|@  <|@
f <@*|@fixed>@ <|@
tid v1232 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1218 
=== Predecessor ===
v1228 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v155|QWORD] destination: B121 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B123" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591827180578425050
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1227 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1647 
=== Usages ===
=== Predecessor ===
v1229 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1647  <|@  <|@
f <@~|@floating>@ <|@
tid v1772 <|@
result [v150|QWORD[.] + v155|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1457 
index: j1476 
=== Succesors ===
=== Usages ===
v1647 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1457 index: j1476  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1647 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1772 
value: v1668 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1217 
=== Usages ===
=== Predecessor ===
v1227 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1772 value: v1668 stateAfter: - lastLocationAccess: - #next: v1217  <|@  <|@
f <@~|@floating>@ <|@
tid j1481 <|@
result v157|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1476 
y: j821 
=== Succesors ===
=== Usages ===
j1470 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1476 y: j821  <|@  <|@
f <@*|@fixed>@ <|@
tid v1217 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1218 
=== Predecessor ===
v1647 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v150|QWORD[.] + v155|QWORD * 2], input: v29|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v157|QWORD = LEA [v155|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v157|QWORD] destination: B122 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" "B121" 
    successors "B124" "B125" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593943193567375505
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1470 <|@
result v158|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1218 
values: j1481 j1476 
=== Succesors ===
=== Usages ===
v1771 j1475 j1464 v1497 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1218 values: j1481 j1476  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1218 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1217 v1232 
=== Succesors ===
next: v1235 
=== Usages ===
j1470 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1217 v1232 #next: v1235  <|@  <|@
f <@~|@floating>@ <|@
tid j1496 <|@
result v159|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j1115 
y: j1442 
=== Succesors ===
=== Usages ===
v1497 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1115 y: j1442  <|@  <|@
f <@~|@floating>@ <|@
tid v1497 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1496 
y: j1470 
=== Succesors ===
=== Usages ===
v1235 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1496 y: j1470  <|@  <|@
f <@*|@fixed>@ <|@
tid v1235 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1497 
=== Succesors ===
trueSuccessor: v1234 
falseSuccessor: v1233 
=== Usages ===
=== Predecessor ===
v1218 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1497 #trueSuccessor: v1234 #falseSuccessor: v1233  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v158|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v159|QWORD = LEA [v151|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v158|QWORD, y: v159|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B123 -> B124 falseDestination: B123 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B126" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584935994312634513
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1234 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1238 
=== Usages ===
=== Predecessor ===
v1235 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1238  <|@  <|@
f <@*|@fixed>@ <|@
tid v1238 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1221 
=== Predecessor ===
v1234 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v158|QWORD] destination: B124 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B126" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591827180578425050
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1233 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1645 
=== Usages ===
=== Predecessor ===
v1235 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1645  <|@  <|@
f <@~|@floating>@ <|@
tid v1771 <|@
result [v150|QWORD[.] + v158|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1457 
index: j1470 
=== Succesors ===
=== Usages ===
v1645 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1457 index: j1470  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1645 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1771 
value: v1667 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1220 
=== Usages ===
=== Predecessor ===
v1233 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1771 value: v1667 stateAfter: - lastLocationAccess: - #next: v1220  <|@  <|@
f <@~|@floating>@ <|@
tid j1475 <|@
result v160|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1470 
y: j1414 
=== Succesors ===
=== Usages ===
j1464 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1470 y: j1414  <|@  <|@
f <@*|@fixed>@ <|@
tid v1220 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1221 
=== Predecessor ===
v1645 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v150|QWORD[.] + v158|QWORD * 2], input: v28|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v160|QWORD = LEA [v158|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v160|QWORD] destination: B125 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" "B124" 
    successors "B127" "B128" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593943193567375505
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1464 <|@
result v161|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1221 
values: j1475 j1470 
=== Succesors ===
=== Usages ===
v1770 j1469 j1458 v1500 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1221 values: j1475 j1470  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1221 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1220 v1238 
=== Succesors ===
next: v1241 
=== Usages ===
j1464 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1220 v1238 #next: v1241  <|@  <|@
f <@~|@floating>@ <|@
tid j1499 <|@
result v162|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j1115 
y: j1446 
=== Succesors ===
=== Usages ===
v1500 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1115 y: j1446  <|@  <|@
f <@~|@floating>@ <|@
tid v1500 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1499 
y: j1464 
=== Succesors ===
=== Usages ===
v1241 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1499 y: j1464  <|@  <|@
f <@*|@fixed>@ <|@
tid v1241 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1500 
=== Succesors ===
trueSuccessor: v1240 
falseSuccessor: v1239 
=== Usages ===
=== Predecessor ===
v1221 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1500 #trueSuccessor: v1240 #falseSuccessor: v1239  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v161|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v162|QWORD = LEA [v151|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v161|QWORD, y: v162|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B126 -> B127 falseDestination: B126 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors "B129" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584935994312634513
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1240 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1244 
=== Usages ===
=== Predecessor ===
v1241 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1244  <|@  <|@
f <@*|@fixed>@ <|@
tid v1244 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1224 
=== Predecessor ===
v1240 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v161|QWORD] destination: B127 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors "B129" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591827180578425050
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1239 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1643 
=== Usages ===
=== Predecessor ===
v1241 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1643  <|@  <|@
f <@~|@floating>@ <|@
tid v1770 <|@
result [v150|QWORD[.] + v161|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1457 
index: j1464 
=== Succesors ===
=== Usages ===
v1643 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1457 index: j1464  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1643 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1770 
value: v1666 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1223 
=== Usages ===
=== Predecessor ===
v1239 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1770 value: v1666 stateAfter: - lastLocationAccess: - #next: v1223  <|@  <|@
f <@~|@floating>@ <|@
tid j1469 <|@
result v163|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1464 
y: j1392 
=== Succesors ===
=== Usages ===
j1458 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1464 y: j1392  <|@  <|@
f <@*|@fixed>@ <|@
tid v1223 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1224 
=== Predecessor ===
v1643 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v150|QWORD[.] + v161|QWORD * 2], input: v27|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v163|QWORD = LEA [v161|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v163|QWORD] destination: B128 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B128" "B127" 
    successors "B130" "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593943193567375505
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1458 <|@
result v164|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1224 
values: j1469 j1464 
=== Succesors ===
=== Usages ===
v1769 v1503 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1224 values: j1469 j1464  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1224 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1223 v1244 
=== Succesors ===
next: v1247 
=== Usages ===
j1458 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1223 v1244 #next: v1247  <|@  <|@
f <@~|@floating>@ <|@
tid j1502 <|@
result v165|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j1115 
y: j1450 
=== Succesors ===
=== Usages ===
v1503 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1115 y: j1450  <|@  <|@
f <@~|@floating>@ <|@
tid v1503 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1502 
y: j1458 
=== Succesors ===
=== Usages ===
v1247 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1502 y: j1458  <|@  <|@
f <@*|@fixed>@ <|@
tid v1247 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1503 
=== Succesors ===
trueSuccessor: v1246 
falseSuccessor: v1245 
=== Usages ===
=== Predecessor ===
v1224 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1503 #trueSuccessor: v1246 #falseSuccessor: v1245  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v164|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v165|QWORD = DEC v151|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v164|QWORD, y: v165|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B129 -> B130 falseDestination: B129 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B134" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584935994312634513
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1246 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1250 
=== Usages ===
=== Predecessor ===
v1247 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1250  <|@  <|@
f <@*|@fixed>@ <|@
tid v1250 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1211 
=== Predecessor ===
v1246 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B130 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B134" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591827180578425050
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1245 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1641 
=== Usages ===
=== Predecessor ===
v1247 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1641  <|@  <|@
f <@~|@floating>@ <|@
tid v1769 <|@
result [v150|QWORD[.] + v164|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1457 
index: j1458 
=== Succesors ===
=== Usages ===
v1641 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1457 index: j1458  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1641 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1769 
value: i1665 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1226 
=== Usages ===
=== Predecessor ===
v1245 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1769 value: i1665 stateAfter: - lastLocationAccess: - #next: v1226  <|@  <|@
f <@*|@fixed>@ <|@
tid v1226 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1211 
=== Predecessor ===
v1641 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v150|QWORD[.] + v164|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B131 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B118" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4591827180578425050
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1204 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1203 
=== Usages ===
=== Predecessor ===
v1205 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1203  <|@  <|@
f <@*|@fixed>@ <|@
tid v1203 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v1199 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1204 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1199  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v154|QWORD] destination: B132 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B134" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593943193567375505
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1192 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1210 
=== Usages ===
=== Predecessor ===
v1194 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1210  <|@  <|@
f <@*|@fixed>@ <|@
tid v1210 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1211 
=== Predecessor ===
v1192 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B133 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B133" "B131" "B130" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598446793194746001
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1211 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1210 v1226 v1250 
=== Succesors ===
next: a712 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1210 v1226 v1250 #next: a712  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a712 <|@
result v125|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a1012 
=== Succesors ===
next: v488 
=== Usages ===
v1702 a298 ?213 
=== Predecessor ===
v1211 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1012 #next: v488  <|@  <|@
f <@~|@floating>@ <|@
tid v1702 <|@
result [v125|QWORD[.] + v32|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a712 
index: i297 
=== Succesors ===
=== Usages ===
v488 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a712 index: i297  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v578 
address: v1702 
value: i1679 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v489 
=== Usages ===
=== Predecessor ===
a712 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v578 address: v1702 value: i1679 stateAfter: - lastLocationAccess: - #next: v489  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: SignatureParser.index
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.advance(SignatureParser.java:102) [bci: 33]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:269) [bci: 104]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1694 
value: i68 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v521 
=== Usages ===
=== Predecessor ===
v488 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1694 value: i68 stateAfter: - lastLocationAccess: - #next: v521  <|@  <|@
tid ?213 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a81 
values: i108 a712 
=== Succesors ===
=== Usages ===
?70 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a81 values: i108 a712  <|@  <|@
tid ?70 <|@
d <@d|@=== Debug Properties ===
bci: 36
code: ResolvedJavaMethodBytecode<SignatureParser.advance()>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.advance(SignatureParser.java:102) [bci: 33]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:269) [bci: 104]
rethrowException: false
sourceFile: SignatureParser.java
sourceLine: 103
stackSize: 0
=== Inputs ===
outerFrameState: ?72 
values: a1 
virtualObjectMappings: ?213 
=== Succesors ===
=== Usages ===
v521 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?72 values: a1 virtualObjectMappings: ?213  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?70 
=== Succesors ===
next: v39 
=== Usages ===
=== Predecessor ===
v489 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?70 #next: v39  <|@  <|@
f <@*|@fixed>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 8]
stamp: void
=== Inputs ===
loopBegin: v8 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v521 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v8  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v125|QWORD[.] + v32|DWORD * 2 + 16], y: v34|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v109|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.reflect.generics.parser.SignatureParser.advance(SignatureParser.java:103) [bci: 36]
locals: v0|QWORD[.] 
sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:269) [bci: 104]
locals: v0|QWORD[.] vobject:StringBuilder:0{count=v107|DWORD,value=v125|QWORD[.]} - 
vobject:StringBuilder:0{count=v107|DWORD,value=v125|QWORD[.]} Ljava/lang/StringBuilder; v107|DWORD v125|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:36, 104] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v125|QWORD[.], v107|DWORD, v109|DWORD] destination: B134 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B100" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 2
    probability 4591827180578425050
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1140 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1139 
=== Usages ===
=== Predecessor ===
v1141 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1139  <|@  <|@
f <@*|@fixed>@ <|@
tid v1139 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v1135 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1140 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1135  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v133|QWORD] destination: B135 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B139" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:268) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v8 
=== Succesors ===
next: v771 
=== Usages ===
=== Predecessor ===
v582 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v8 #next: v771  <|@  <|@
f <@~|@floating>@ <|@
tid i772 <|@
result int[-123419|0xfffffffffffe1de5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -123419
stableDimension: 0
stamp: i32 [-123419] ⇊00000000fffe1de5 ⇈00000000fffe1de5
stampKind: i32
value: int[-123419|0xfffffffffffe1de5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i756 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v771 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v753 
=== Predecessor ===
v581 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-123419|0xfffffffffffe1de5]] destination: B136 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B139" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterData.of(CharacterData.java:77) [bci: 4]
at java.lang.Character.isWhitespace(Character.java:6789) [bci: 1]
at java.lang.Character.isWhitespace(Character.java:6757) [bci: 1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 12]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v8 
=== Succesors ===
next: v761 
=== Usages ===
=== Predecessor ===
v549 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v8 #next: v761  <|@  <|@
f <@~|@floating>@ <|@
tid i762 <|@
result int[-113939|0xfffffffffffe42ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -113939
stableDimension: 0
stamp: i32 [-113939] ⇊00000000fffe42ed ⇈00000000fffe42ed
stampKind: i32
value: int[-113939|0xfffffffffffe42ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i756 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v753 
=== Predecessor ===
v548 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-113939|0xfffffffffffe42ed]] destination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B139" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.current(SignatureParser.java:95) [bci: 34]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:257) [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v8 
=== Succesors ===
next: v759 
=== Usages ===
=== Predecessor ===
v544 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v8 #next: v759  <|@  <|@
f <@~|@floating>@ <|@
tid i760 <|@
result int[-116763|0xfffffffffffe37e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -116763
stableDimension: 0
stamp: i32 [-116763] ⇊00000000fffe37e5 ⇈00000000fffe37e5
stampKind: i32
value: int[-116763|0xfffffffffffe37e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i756 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v753 
=== Predecessor ===
v543 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-116763|0xfffffffffffe37e5]] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B19" "B138" "B137" "B17" "B83" "B85" "B87" "B136" "B29" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i756 <|@
result v166|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-123419 - -7187] ⇊00000000fffe00e5 ⇈00000000ffffffed
valueDescription: i32
=== Inputs ===
merge: v753 
values: i755 i760 i762 i764 i766 i768 i770 i772 i774 
=== Succesors ===
=== Usages ===
v758 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v753 values: i755 i760 i762 i764 i766 i768 i770 i772 i774  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v753 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v754 v759 v761 v763 v765 v767 v769 v771 v773 
=== Succesors ===
next: v758 
=== Usages ===
i756 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v754 v759 v761 v763 v765 v767 v769 v771 v773 #next: v758  <|@  <|@
f <@*|@fixed>@ <|@
tid v758 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?9 
actionAndReason: i756 
speculation: a741 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v753 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?9 actionAndReason: i756 speculation: a741  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v166|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v166|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 8]
locals: v0|QWORD[.] vobject:StringBuilder:0{count=v32|DWORD,value=v31|QWORD[.]} - 
vobject:StringBuilder:0{count=v32|DWORD,value=v31|QWORD[.]} Ljava/lang/StringBuilder; v32|DWORD v31|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:8] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B142" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterData.of(CharacterData.java:77) [bci: 4]
at java.lang.Character.isWhitespace(Character.java:6789) [bci: 1]
at java.lang.Character.isWhitespace(Character.java:6757) [bci: 1]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v749 
=== Usages ===
=== Predecessor ===
v535 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v749  <|@  <|@
f <@~|@floating>@ <|@
tid i750 <|@
result int[-106003|0xfffffffffffe61ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -106003
stableDimension: 0
stamp: i32 [-106003] ⇊00000000fffe61ed ⇈00000000fffe61ed
stampKind: i32
value: int[-106003|0xfffffffffffe61ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i742 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v738 
=== Predecessor ===
v534 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-106003|0xfffffffffffe61ed]] destination: B140 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B142" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.reflect.generics.parser.SignatureParser.current(SignatureParser.java:95) [bci: 34]
at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:257) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v747 
=== Usages ===
=== Predecessor ===
v531 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v747  <|@  <|@
f <@~|@floating>@ <|@
tid i748 <|@
result int[-109083|0xfffffffffffe55e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -109083
stableDimension: 0
stamp: i32 [-109083] ⇊00000000fffe55e5 ⇈00000000fffe55e5
stampKind: i32
value: int[-109083|0xfffffffffffe55e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i742 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v747 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v738 
=== Predecessor ===
v530 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-109083|0xfffffffffffe55e5]] destination: B141 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B3" "B141" "B140" "B5" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i742 <|@
result v167|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-109083 - -57619] ⇊00000000fffe00e5 ⇈00000000ffff7ffd
valueDescription: i32
=== Inputs ===
merge: v738 
values: i746 i748 i750 i752 
=== Succesors ===
=== Usages ===
v744 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v738 values: i746 i748 i750 i752  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v738 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v745 v747 v749 v751 
=== Succesors ===
next: v744 
=== Usages ===
i742 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v745 v747 v749 v751 #next: v744  <|@  <|@
f <@*|@fixed>@ <|@
tid v744 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i742 
speculation: a741 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v738 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i742 speculation: a741  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v167|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v167|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:255) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B141" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@74196ce0 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:255) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B140" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4796bf3d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVSX [v5|QWORD[.] + v3|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVZX v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST v7|DWORD y: -256 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[256]{1207963663, 1207963663, 1207963663, 1207963663, 1207963663, ...}] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVZX v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVE input: int[28672|0x7000] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = AND (x: v10|DWORD, ~y: [v8|QWORD[.] + v9|QWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: 16384 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v7|DWORD - keyConstants: [int[46|0x2e], int[47|0x2f], int[58|0x3a], int[59|0x3b], int[60|0x3c], int[62|0x3e], int[91|0x5b]] keyTargets: [B4 -> B6, B4 -> B6, B4 -> B6, B4 -> B6, B4 -> B6, B4 -> B6, B4 -> B6] defaultTarget: B4 -> B10 strategy: BinaryStrategy[avgEffort=3.8795180722891565] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606097214070530541
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = INC v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = LEA [v21|QWORD + 48] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v22|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606017994125278000
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v21|QWORD + 240] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v21|QWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4606097214070530541
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = MOVE v24|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v24|QWORD[*] + 12] y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v24|QWORD[*]] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v24|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[*] + 16], y: v6|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v26|V128_QWORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v24|QWORD[*] + 18], input: v26|V128_QWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[*] + 34], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[*] + 42], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[*] + 46], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|QWORD[.], int[1|0x1], v20|DWORD] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B134" "B82" 
    successors "B15" "B138" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618914838431682294
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|QWORD[.], v32|DWORD, v33|DWORD] = LABEL numbPhis: 3 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B137" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618914838431682294
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOVSX [v5|QWORD[.] + v33|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = MOVZX v34|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST v35|DWORD y: -256 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618914838431682294
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOVZX v34|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVE input: int[28672|0x7000] <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = AND (x: v37|DWORD, ~y: [v8|QWORD[.] + v36|QWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v38|DWORD y: 16384 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618914838431682294
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v35|DWORD - keyConstants: [int[46|0x2e], int[47|0x2f], int[58|0x3a], int[59|0x3b], int[60|0x3c], int[62|0x3e], int[91|0x5b]] keyTargets: [B18 -> B20, B18 -> B20, B18 -> B20, B18 -> B20, B18 -> B20, B18 -> B20, B18 -> B20] defaultTarget: B18 -> B80 strategy: BinaryStrategy[avgEffort=3.8795180722891565] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B81" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618043896262490198
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = MOV [v31|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = INC v32|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = SUB (x: v107|DWORD, ~y: v106|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = INC v33|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v108|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9530584988351379 condition: < trueDestination: B80 -> B81 falseDestination: B80 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B82" "B83" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617745447932687693
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v106|DWORD, y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B81 -> B82 falseDestination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617745447932687693
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v31|QWORD[.] + v32|DWORD * 2 + 16], y: v34|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v109|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.reflect.generics.parser.SignatureParser.advance(SignatureParser.java:103) [bci: 36]
locals: v0|QWORD[.] 
sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:269) [bci: 104]
locals: v0|QWORD[.] vobject:StringBuilder:0{count=v107|DWORD,value=v31|QWORD[.]} - 
vobject:StringBuilder:0{count=v107|DWORD,value=v31|QWORD[.]} Ljava/lang/StringBuilder; v107|DWORD v31|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:36, 104] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v31|QWORD[.], v107|DWORD, v109|DWORD] destination: B82 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B85" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598446793194746001
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = SHL v106|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = LEA [v110|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = SUB (x: v111|DWORD, ~y: v107|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v112|DWORD, y: v112|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v113|DWORD = CMOVE (falseValue: v111|DWORD, ~trueValue: v107|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction CMP v113|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B84 -> B85 falseDestination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" "B88" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598446793194746001
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v114|DWORD = MOVE input: int[2147483639|0x7ffffff7] <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = SUB (x: v114|DWORD, ~y: v113|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v115|DWORD, y: v115|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B86 -> B87 falseDestination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B89" "B136" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598446793194746001
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v113|DWORD, y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B88 -> B89 falseDestination: B88 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B90" "B93" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598446793194746001
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v117|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v113|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B89 -> B90 falseDestination: B89 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B91" "B92" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597763332188847570
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v118|DWORD = SHL v113|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v119|DWORD = LEA [v118|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = AND v119|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v121|QWORD = MOVSXD v120|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v122|QWORD = ADD (x: v121|QWORD, y: v116|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v122|QWORD, y: v117|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B90 -> B91 falseDestination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B95" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597677379069864448
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v122|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v121|QWORD + v116|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v121|QWORD + v116|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v121|QWORD + v116|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v121|QWORD + v116|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v116|QWORD + 12], y: v113|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v116|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v116|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v123|QWORD[.] = MOVE v116|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v123|QWORD[.]] destination: B92 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B92" "B94" 
    successors "B96" "B97" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598446793194746001
    begin_IR
      LIR
      nr   -1  <|@ instruction [v125|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v113|DWORD, y: v106|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = CMOVE (falseValue: v113|DWORD, ~trueValue: v106|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v127|QWORD = MOVSXD v126|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v127|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B95 -> B96 falseDestination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593943193567375505
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = LEA [v125|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = LEA [v31|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v130|QWORD = LEA [v127|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v130|QWORD, y: v130|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B97 -> B98 falseDestination: B97 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B102" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591827180578425050
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B98 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B98" "B101" 
    successors "B103" "B104" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593943193567375505
    begin_IR
      LIR
      nr   -1  <|@ instruction [v134|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v135|QWORD = LEA [v127|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v134|QWORD, y: v135|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B102 -> B103 falseDestination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B105" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591827180578425050
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v136|V128_WORD = H [v129|QWORD[.] + v134|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v128|QWORD[.] + v134|QWORD * 2], input: v136|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v137|QWORD = LEA [v134|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v137|QWORD] destination: B104 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" "B103" 
    successors "B106" "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593943193567375505
    begin_IR
      LIR
      nr   -1  <|@ instruction [v138|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v139|QWORD = LEA [v127|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v138|QWORD, y: v139|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B105 -> B106 falseDestination: B105 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591827180578425050
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v140|V64_WORD = H [v129|QWORD[.] + v138|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v128|QWORD[.] + v138|QWORD * 2], input: v140|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v141|QWORD = LEA [v138|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v141|QWORD] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593943193567375505
    begin_IR
      LIR
      nr   -1  <|@ instruction [v142|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v143|QWORD = LEA [v127|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v142|QWORD, y: v143|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B108 -> B109 falseDestination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591827180578425050
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v144|V32_WORD = H [v129|QWORD[.] + v142|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v128|QWORD[.] + v142|QWORD * 2], input: v144|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v145|QWORD = LEA [v142|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v145|QWORD] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" "B109" 
    successors "B112" "B113" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593943193567375505
    begin_IR
      LIR
      nr   -1  <|@ instruction [v146|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v147|QWORD = DEC v127|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v146|QWORD, y: v147|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B111 -> B112 falseDestination: B111 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591827180578425050
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v148|DWORD = MOVSX [v129|QWORD[.] + v146|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v128|QWORD[.] + v146|QWORD * 2], y: v148|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B113 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B96" "B113" "B112" 
    successors "B115" "B133" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598446793194746001
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v149|QWORD = MOVSXD v113|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v149|QWORD, y: v127|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B114 -> B115 falseDestination: B114 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B134" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593943193567375505
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B133 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B133" "B131" "B130" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598446793194746001
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v125|QWORD[.] + v32|DWORD * 2 + 16], y: v34|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v109|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.reflect.generics.parser.SignatureParser.advance(SignatureParser.java:103) [bci: 36]
locals: v0|QWORD[.] 
sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:269) [bci: 104]
locals: v0|QWORD[.] vobject:StringBuilder:0{count=v107|DWORD,value=v125|QWORD[.]} - 
vobject:StringBuilder:0{count=v107|DWORD,value=v125|QWORD[.]} Ljava/lang/StringBuilder; v107|DWORD v125|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:36, 104] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v125|QWORD[.], v107|DWORD, v109|DWORD] destination: B134 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B114" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593943193567375505
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B96 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B116" "B117" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593943193567375505
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = LEA [v125|QWORD[.] + v127|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v151|QWORD = SUB (x: v149|QWORD, ~y: v127|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v152|QWORD = LEA [v151|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v152|QWORD, y: v152|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B115 -> B116 falseDestination: B115 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B120" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591827180578425050
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B116 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B116" "B119" 
    successors "B121" "B122" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593943193567375505
    begin_IR
      LIR
      nr   -1  <|@ instruction [v155|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v156|QWORD = LEA [v151|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v155|QWORD, y: v156|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B120 -> B121 falseDestination: B120 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B123" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591827180578425050
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v180|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v150|QWORD[.] + v155|QWORD * 2], input: v180|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v157|QWORD = LEA [v155|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v157|QWORD] destination: B122 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" "B121" 
    successors "B124" "B125" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593943193567375505
    begin_IR
      LIR
      nr   -1  <|@ instruction [v158|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v159|QWORD = LEA [v151|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v158|QWORD, y: v159|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B123 -> B124 falseDestination: B123 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B126" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591827180578425050
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v178|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v150|QWORD[.] + v158|QWORD * 2], input: v178|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v160|QWORD = LEA [v158|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v160|QWORD] destination: B125 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" "B124" 
    successors "B127" "B128" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593943193567375505
    begin_IR
      LIR
      nr   -1  <|@ instruction [v161|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v162|QWORD = LEA [v151|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v161|QWORD, y: v162|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B126 -> B127 falseDestination: B126 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors "B129" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591827180578425050
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v176|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v150|QWORD[.] + v161|QWORD * 2], input: v176|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v163|QWORD = LEA [v161|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v163|QWORD] destination: B128 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B128" "B127" 
    successors "B130" "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593943193567375505
    begin_IR
      LIR
      nr   -1  <|@ instruction [v164|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v165|QWORD = DEC v151|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v164|QWORD, y: v165|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B129 -> B130 falseDestination: B129 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B134" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591827180578425050
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v150|QWORD[.] + v164|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B131 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584935994312634513
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B99 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B100" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 2
    probability 4591827180578425050
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v133|QWORD] destination: B135 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" "B135" 
    successors "B101" "B135" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 2
    probability 4593943193567375505
    begin_IR
      LIR
      nr   -1  <|@ instruction [v131|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v132|V256_WORD = H [v129|QWORD[.] + v131|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v128|QWORD[.] + v131|QWORD * 2], input: v132|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v133|QWORD = LEA [v131|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v133|QWORD, y: v130|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B100 -> B101 falseDestination: B100 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B123" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584935994312634513
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v155|QWORD] destination: B121 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B126" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584935994312634513
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v158|QWORD] destination: B124 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors "B129" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584935994312634513
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v161|QWORD] destination: B127 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B134" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584935994312634513
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B130 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584935994312634513
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v133|QWORD] destination: B101 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B105" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584935994312634513
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v134|QWORD] destination: B103 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584935994312634513
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v142|QWORD] destination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584935994312634513
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B112 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584935994312634513
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v182|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B118" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4591827180578425050
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v154|QWORD] destination: B132 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" "B132" 
    successors "B119" "B132" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 2
    probability 4593943193567375505
    begin_IR
      LIR
      nr   -1  <|@ instruction [v153|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v150|QWORD[.] + v153|QWORD * 2], input: v182|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v154|QWORD = LEA [v153|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v154|QWORD, y: v152|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B118 -> B119 falseDestination: B118 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584935994312634513
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v138|QWORD] destination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B120" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584935994312634513
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v154|QWORD] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B94" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583297498651368064
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" "B91" 
    successors "B95" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583985123603233036
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v168|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v168|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v113|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 8]
locals: v0|QWORD[.] vobject:StringBuilder:0{count=v32|DWORD,value=v31|QWORD[.]} - 
vobject:StringBuilder:0{count=v32|DWORD,value=v31|QWORD[.]} Ljava/lang/StringBuilder; v32|DWORD v31|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8] <|@ <|@
      nr   -1  <|@ instruction v124|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v124|QWORD[.]] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B94" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4567647422141232226
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B91 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B28" 
    xhandlers
    flags 
    probability 4605142756898813177
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v32|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09284041465770032 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4604495887841767808
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOV [v31|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = SUB (x: v47|DWORD, ~y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v48|DWORD, y: v48|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B34" 
    xhandlers
    flags 
    probability 4604495887841767808
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v32|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B30 -> B31 falseDestination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4603863821012118669
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = SHL v32|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = LEA [v51|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = AND v52|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = MOVSXD v53|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = ADD (x: v54|QWORD, y: v49|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v55|QWORD, y: v50|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4603806934997450246
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v55|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v54|QWORD + v49|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v54|QWORD + v49|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v54|QWORD + v49|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v54|QWORD + v49|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|QWORD + 12], y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v49|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v49|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE v49|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v56|QWORD[.]] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4604495887841767808
    begin_IR
      LIR
      nr   -1  <|@ instruction [v58|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v32|DWORD, y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = CMOVE (falseValue: v32|DWORD, ~trueValue: v47|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOVSXD v59|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v60|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4599992288214397312
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = LEA [v58|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = LEA [v31|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = LEA [v60|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v63|QWORD, y: v63|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B43" 
    xhandlers
    flags 
    probability 4598412121140274464
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B39 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B39" "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4599992288214397312
    begin_IR
      LIR
      nr   -1  <|@ instruction [v67|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = LEA [v60|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v67|QWORD, y: v68|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B43 -> B44 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4598412121140274464
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|V128_WORD = H [v62|QWORD[.] + v67|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v61|QWORD[.] + v67|QWORD * 2], input: v69|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = LEA [v67|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|QWORD] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4599992288214397312
    begin_IR
      LIR
      nr   -1  <|@ instruction [v71|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = LEA [v60|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v71|QWORD, y: v72|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4598412121140274464
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|V64_WORD = H [v62|QWORD[.] + v71|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v61|QWORD[.] + v71|QWORD * 2], input: v73|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = LEA [v71|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v74|QWORD] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4599992288214397312
    begin_IR
      LIR
      nr   -1  <|@ instruction [v75|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = LEA [v60|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v75|QWORD, y: v76|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4598412121140274464
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v77|V32_WORD = H [v62|QWORD[.] + v75|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v61|QWORD[.] + v75|QWORD * 2], input: v77|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD = LEA [v75|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v78|QWORD] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4599992288214397312
    begin_IR
      LIR
      nr   -1  <|@ instruction [v79|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = DEC v60|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v79|QWORD, y: v80|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4598412121140274464
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = MOVSX [v62|QWORD[.] + v79|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v61|QWORD[.] + v79|QWORD * 2], y: v81|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B37" "B54" "B53" 
    successors "B56" "B74" 
    xhandlers
    flags 
    probability 4604495887841767808
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = MOVSXD v32|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v82|QWORD, y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B75" 
    xhandlers
    flags 
    probability 4599992288214397312
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" "B72" "B71" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4604495887841767808
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v99|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v100|QWORD = LEA [v99|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v100|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B75 -> B76 falseDestination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B78" 
    xhandlers
    flags 
    probability 4604432681158802894
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v100|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v99|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v99|QWORD] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B76" 
    successors 
    xhandlers
    flags 
    probability 4604495887841767808
    begin_IR
      LIR
      nr   -1  <|@ instruction [v102|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v171|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v103|QWORD[.] = MOVE v102|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v104|QWORD = MOV [v171|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v102|QWORD[*]], y: v104|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v102|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v105|DWORD[.] = COMPRESSPOINTER (input: v58|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@4796bf3d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v102|QWORD[*] + 12], y: v105|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v102|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v103|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B55" 
    xhandlers
    flags 
    probability 4599992288214397312
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" "B58" 
    xhandlers
    flags 
    probability 4599992288214397312
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = LEA [v58|QWORD[.] + v60|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = SUB (x: v82|QWORD, ~y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v85|QWORD = LEA [v84|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v85|QWORD, y: v85|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B61" 
    xhandlers
    flags 
    probability 4598412121140274464
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B57 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B57" "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4599992288214397312
    begin_IR
      LIR
      nr   -1  <|@ instruction [v88|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = LEA [v84|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v88|QWORD, y: v89|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B61 -> B62 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    probability 4598412121140274464
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v181|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v83|QWORD[.] + v88|QWORD * 2], input: v181|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = LEA [v88|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v90|QWORD] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B62" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4599992288214397312
    begin_IR
      LIR
      nr   -1  <|@ instruction [v91|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v92|QWORD = LEA [v84|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v91|QWORD, y: v92|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4598412121140274464
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v179|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v83|QWORD[.] + v91|QWORD * 2], input: v179|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v93|QWORD = LEA [v91|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v93|QWORD] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4599992288214397312
    begin_IR
      LIR
      nr   -1  <|@ instruction [v94|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = LEA [v84|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v94|QWORD, y: v95|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    probability 4598412121140274464
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v177|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v83|QWORD[.] + v94|QWORD * 2], input: v177|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v96|QWORD = LEA [v94|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v96|QWORD] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4599992288214397312
    begin_IR
      LIR
      nr   -1  <|@ instruction [v97|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v98|QWORD = DEC v84|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v97|QWORD, y: v98|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B75" 
    xhandlers
    flags 
    probability 4598412121140274464
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v83|QWORD[.] + v97|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B72 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4593346058499059860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = LEA [v14|QWORD + 48] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v15|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4593259242120700911
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v14|QWORD + 240] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v14|QWORD] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593346058499059860
    begin_IR
      LIR
      nr   -1  <|@ instruction [v17|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE v17|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v17|QWORD[*] + 12] y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v17|QWORD[*]] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v17|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v19|V256_QWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v17|QWORD[*] + 16], input: v19|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], v18|QWORD[.]] destination: B9 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B9" "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4596096315436664365
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|DWORD, v40|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v39|DWORD, y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4596096315436664365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA [v41|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v42|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596027032485203076
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v42|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v41|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v41|QWORD] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors 
    xhandlers
    flags 
    probability 4596096315436664365
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v170|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = MOVE v44|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOV [v170|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v44|QWORD[*]], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v44|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v44|QWORD[*] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v44|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4590985088959656320
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    probability 4590985088959656320
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v94|QWORD] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B75" 
    xhandlers
    flags 
    probability 4590985088959656320
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B71 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4590985088959656320
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v183|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4598412121140274464
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v87|QWORD] destination: B73 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B73" 
    successors "B60" "B73" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4599992288214397312
    begin_IR
      LIR
      nr   -1  <|@ instruction [v86|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v83|QWORD[.] + v86|QWORD * 2], input: v183|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = LEA [v86|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v87|QWORD, y: v85|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    probability 4590985088959656320
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v88|QWORD] destination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4590985088959656320
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v91|QWORD] destination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" 
    xhandlers
    flags 
    probability 4590985088959656320
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v87|QWORD] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4590985088959656320
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4598412121140274464
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|QWORD] destination: B79 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B79" 
    successors "B42" "B79" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4599992288214397312
    begin_IR
      LIR
      nr   -1  <|@ instruction [v64|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|V256_WORD = H [v62|QWORD[.] + v64|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v61|QWORD[.] + v64|QWORD * 2], input: v65|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = LEA [v64|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v66|QWORD, y: v63|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4590985088959656320
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v71|QWORD] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" 
    xhandlers
    flags 
    probability 4590985088959656320
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|QWORD] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4590985088959656320
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v75|QWORD] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4590985088959656320
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v67|QWORD] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589839373119527878
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|DWORD, v31|QWORD[.]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4589720955300358040
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B32" 
    successors "B36" 
    xhandlers
    flags 
    probability 4590176043417705421
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v169|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v169|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v32|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 8]
locals: v0|QWORD[.] vobject:StringBuilder:0{count=v32|DWORD,value=v31|QWORD[.]} - 
vobject:StringBuilder:0{count=v32|DWORD,value=v31|QWORD[.]} Ljava/lang/StringBuilder; v32|DWORD v31|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8] <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|QWORD[.]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4576223698277216085
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v174|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v174|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@sun.reflect.generics.parser.SignatureParser.advance(SignatureParser.java:103) [bci: 36]
locals: v0|QWORD[.] 
sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:269) [bci: 104]
locals: v0|QWORD[.] vobject:StringBuilder:0{count=int[1|0x1],value=vobject:char[]:1{0=v7|DWORD,1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]}} - 
vobject:StringBuilder:0{count=int[1|0x1],value=vobject:char[]:1{0=v7|DWORD,1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]}} Ljava/lang/StringBuilder; int[1|0x1] vobject:char[]:1{0=v7|DWORD,1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} 
vobject:char[]:1{0=v7|DWORD,1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} [C v7|DWORD int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:36, 104] <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|QWORD[.]] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B78" 
    xhandlers
    flags 
    probability 4574740477573191933
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v173|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v173|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 8]
locals: v0|QWORD[.] vobject:StringBuilder:0{count=v32|DWORD,value=v31|QWORD[.]} - 
vobject:StringBuilder:0{count=v32|DWORD,value=v31|QWORD[.]} Ljava/lang/StringBuilder; v32|DWORD v31|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8] <|@ <|@
      nr   -1  <|@ instruction v101|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v101|QWORD[.]] destination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4573931432031241034
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4566511040685987004
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v172|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v172|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 92]
locals: - vobject:StringBuilder:0{count=v39|DWORD,value=v40|QWORD[.]} - 
vobject:StringBuilder:0{count=v39|DWORD,value=v40|QWORD[.]} Ljava/lang/StringBuilder; v39|DWORD v40|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:92] <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v43|QWORD[.]] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4563199071113914713
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v175|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v175|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:255) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v16|QWORD[.]] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B139" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-123419|0xfffffffffffe1de5]] destination: B136 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B19" "B138" "B137" "B17" "B83" "B85" "B87" "B136" "B29" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      LIR
      nr   -1  <|@ instruction [v166|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v166|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 8]
locals: v0|QWORD[.] vobject:StringBuilder:0{count=v32|DWORD,value=v31|QWORD[.]} - 
vobject:StringBuilder:0{count=v32|DWORD,value=v31|QWORD[.]} Ljava/lang/StringBuilder; v32|DWORD v31|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:8] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B139" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-113939|0xfffffffffffe42ed]] destination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B139" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-122899|0xfffffffffffe1fed]] destination: B87 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B139" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-119315|0xfffffffffffe2ded]] destination: B29 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B139" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-7187|0xffffffffffffe3ed]] destination: B19 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B142" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-108307|0xfffffffffffe58ed]] destination: B3 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B3" "B141" "B140" "B5" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v167|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v167|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:255) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B142" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-57619|0xffffffffffff1eed]] destination: B5 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B142" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-109083|0xfffffffffffe55e5]] destination: B141 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B139" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-120347|0xfffffffffffe29e5]] destination: B83 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B139" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-116763|0xfffffffffffe37e5]] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B139" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-115987|0xfffffffffffe3aed]] destination: B17 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -125459 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 92]
locals: - vobject:StringBuilder:0{count=v39|DWORD,value=v40|QWORD[.]} - 
vobject:StringBuilder:0{count=v39|DWORD,value=v40|QWORD[.]} Ljava/lang/StringBuilder; v39|DWORD v40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:92] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B139" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-122643|0xfffffffffffe20ed]] destination: B85 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B142" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-106003|0xfffffffffffe61ed]] destination: B140 -> B142 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #12         // java.lang.StringBuilder
     3: dup           
     4: invokespecial #6          // java.lang.StringBuilder.<init>:()void
     7: astore_1      
     8: aload_0       
     9: invokespecial #21         // current:()char
    12: invokestatic  #33         // java.lang.Character.isWhitespace:(char)boolean
    15: ifne          110
    18: aload_0       
    19: invokespecial #21         // current:()char
    22: istore_2      
    23: iload_2       
    24: lookupswitch  [7] {46: 92, 47: 92, 58: 92, 59: 92, 60: 92, 62: 92, 91: 92} default: 97
    92: aload_1       
    93: invokevirtual #9          // java.lang.StringBuilder.toString:()java.lang.String
    96: areturn       
    97: aload_1       
    98: iload_2       
    99: invokevirtual #34         // java.lang.StringBuilder.append:(char)java.lang.StringBuilder
   102: pop           
   103: aload_0       
   104: invokespecial #24         // advance:()void
   107: goto          8
   110: aload_1       
   111: invokevirtual #9          // java.lang.StringBuilder.toString:()java.lang.String
   114: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B141" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@74196ce0 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction rsi|DWORD[.] = MOV [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   12  <|@ st <@st|@reference-map: [rsi:0, r13:0, stack:48]
live-base-pointers: []
sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:255) [bci: 0]
locals: r13|QWORD[.] - - 
>@ <|@ instruction r14|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   14  <|@ instruction rdx|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   16  <|@ instruction CMP (x: r14|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B140" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4796bf3d encoding: base: 0 shift: 3 <|@ <|@
      nr   24  <|@ instruction r10|DWORD = MOVSX [rsi|QWORD[.] + rdx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction r11|DWORD = MOVZX r10|DWORD size: DWORD <|@ <|@
      nr   28  <|@ instruction TEST r11|DWORD y: -256 size: DWORD <|@ <|@
      nr   30  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction r8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[256]{1207963663, 1207963663, 1207963663, 1207963663, 1207963663, ...}] <|@ <|@
      nr   36  <|@ instruction rcx|QWORD = MOVZX r10|DWORD size: DWORD <|@ <|@
      nr   38  <|@ instruction r9|DWORD = MOVE input: int[28672|0x7000] <|@ <|@
      nr   40  <|@ instruction r9|DWORD = AND (x: r9|DWORD, ~y: [r8|QWORD[.] + rcx|QWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   42  <|@ instruction CMP r9|DWORD y: 16384 size: DWORD <|@ <|@
      nr   44  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r11|DWORD - keyConstants: [int[46|0x2e], int[47|0x2f], int[58|0x3a], int[59|0x3b], int[60|0x3c], int[62|0x3e], int[91|0x5b]] keyTargets: [B4 -> B6, B4 -> B6, B4 -> B6, B4 -> B6, B4 -> B6, B4 -> B6, B4 -> B6] defaultTarget: B4 -> B10 strategy: BinaryStrategy[avgEffort=3.8795180722891565] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606097214070530541
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction stack:36|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  120  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction rdx|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [r13|QWORD[.] + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  128  <|@ instruction r9|QWORD = LEA [rcx|QWORD + 48] size: QWORD <|@ <|@
      nr  130  <|@ instruction CMP (x: r9|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  132  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606017994125278000
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  168  <|@ instruction MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD <|@ <|@
      nr  170  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + 240] instr: 0 <|@ <|@
      nr  172  <|@ instruction rcx|QWORD[*] = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4606097214070530541
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  178  <|@ instruction r11|QWORD[.] = MOVE rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction MOV [rcx|QWORD[*] + 12] y: 16 size: DWORD <|@ <|@
      nr  182  <|@ instruction MOV [rcx|QWORD[*]] y: 1 size: QWORD <|@ <|@
      nr  184  <|@ instruction MOV [rcx|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  186  <|@ instruction MOV (x: [rcx|QWORD[*] + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  188  <|@ instruction xmm0|V128_QWORD = L oc: SIMD<0,0> <|@ <|@
      nr  190  <|@ instruction J (address: [rcx|QWORD[*] + 18], input: xmm0|V128_QWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  192  <|@ instruction MOV (x: [rcx|QWORD[*] + 34], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  194  <|@ instruction MOV (x: [rcx|QWORD[*] + 42], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  196  <|@ instruction MOV (x: [rcx|QWORD[*] + 46], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr  198  <|@ instruction r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B134" "B82" 
    successors "B15" "B138" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618914838431682294
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 3 align: true label: ? <|@ <|@
      nr  206  <|@ instruction CMP (x: r14|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  208  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B137" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618914838431682294
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  212  <|@ instruction r9|DWORD = MOVSX [rsi|QWORD[.] + rdx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  214  <|@ instruction rcx|DWORD = MOVZX r9|DWORD size: DWORD <|@ <|@
      nr  216  <|@ instruction TEST rcx|DWORD y: -256 size: DWORD <|@ <|@
      nr  218  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618914838431682294
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction rbx|QWORD = MOVZX r9|DWORD size: DWORD <|@ <|@
      nr  224  <|@ instruction rdi|DWORD = MOVE input: int[28672|0x7000] <|@ <|@
      nr  226  <|@ instruction rdi|DWORD = AND (x: rdi|DWORD, ~y: [r8|QWORD[.] + rbx|QWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  228  <|@ instruction CMP rdi|DWORD y: 16384 size: DWORD <|@ <|@
      nr  230  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618914838431682294
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  244  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rcx|DWORD - keyConstants: [int[46|0x2e], int[47|0x2f], int[58|0x3a], int[59|0x3b], int[60|0x3c], int[62|0x3e], int[91|0x5b]] keyTargets: [B18 -> B20, B18 -> B20, B18 -> B20, B18 -> B20, B18 -> B20, B18 -> B20, B18 -> B20] defaultTarget: B18 -> B80 strategy: BinaryStrategy[avgEffort=3.8795180722891565] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B81" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618043896262490198
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  804  <|@ instruction rbx|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  806  <|@ instruction rdi|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  808  <|@ instruction rcx|DWORD = SUB (x: rdi|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  810  <|@ instruction rdx|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr  812  <|@ instruction CMP rcx|DWORD y: 1 size: DWORD <|@ <|@
      nr  814  <|@ instruction BRANCH trueDestinationProbability: 0.9530584988351379 condition: < trueDestination: B80 -> B81 falseDestination: B80 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B82" "B83" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617745447932687693
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  818  <|@ instruction CMP (x: rbx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  820  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B81 -> B82 falseDestination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617745447932687693
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  824  <|@ instruction MOV (x: [r10|QWORD[.] + r11|DWORD * 2 + 16], y: r9|DWORD) size: WORD <|@ <|@
      nr  826  <|@ instruction MOV (x: [r13|QWORD[.] + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  828  <|@ st <@st|@reference-map: [rsi:0, r8:0, r10:0, r13:0, stack:32, stack:48]
live-base-pointers: []
sun.reflect.generics.parser.SignatureParser.advance(SignatureParser.java:103) [bci: 36]
locals: r13|QWORD[.] 
sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:269) [bci: 104]
locals: r13|QWORD[.] vobject:StringBuilder:0{count=rdi|DWORD,value=r10|QWORD[.]} - 
vobject:StringBuilder:0{count=rdi|DWORD,value=r10|QWORD[.]} Ljava/lang/StringBuilder; rdi|DWORD r10|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:36, 104] <|@ <|@
      nr  830  <|@ instruction r11|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  832  <|@ instruction JUMP ~[] destination: B82 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B85" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598446793194746001
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  846  <|@ instruction rcx|DWORD = SHL rbx|DWORD size: DWORD <|@ <|@
      nr  848  <|@ instruction rcx|DWORD = LEA [rcx|DWORD + 2] size: DWORD <|@ <|@
      nr  850  <|@ instruction rax|DWORD = SUB (x: rcx|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  852  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  854  <|@ instruction rcx|DWORD = CMOVE (falseValue: rcx|DWORD, ~trueValue: rdi|DWORD) condition: < <|@ <|@
      nr  856  <|@ instruction CMP rcx|DWORD y: 1 size: DWORD <|@ <|@
      nr  858  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B84 -> B85 falseDestination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" "B88" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598446793194746001
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  872  <|@ instruction rax|DWORD = MOVE input: int[2147483639|0x7ffffff7] <|@ <|@
      nr  874  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  876  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  878  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B86 -> B87 falseDestination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B89" "B136" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598446793194746001
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  892  <|@ instruction CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  894  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B88 -> B89 falseDestination: B88 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B90" "B93" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598446793194746001
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  898  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  900  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  902  <|@ instruction CMP rcx|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  904  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B89 -> B90 falseDestination: B89 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B91" "B92" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597763332188847570
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  908  <|@ instruction r14|DWORD = SHL rcx|DWORD size: DWORD <|@ <|@
      nr  910  <|@ instruction r14|DWORD = LEA [r14|DWORD + 23] size: DWORD <|@ <|@
      nr  912  <|@ instruction r14|DWORD = AND r14|DWORD y: -8 size: DWORD <|@ <|@
      nr  914  <|@ instruction r14|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  916  <|@ instruction r13|QWORD = ADD (x: r14|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  918  <|@ instruction CMP (x: r13|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  920  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B90 -> B91 falseDestination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B95" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597677379069864448
    begin_IR
      LIR
      nr  938  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  940  <|@ instruction MOV (x: [r15|QWORD + 96], y: r13|QWORD) size: QWORD <|@ <|@
      nr  942  <|@ instruction AMD64PREFETCH ~[r14|QWORD + rax|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  944  <|@ instruction AMD64PREFETCH ~[r14|QWORD + rax|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  946  <|@ instruction AMD64PREFETCH ~[r14|QWORD + rax|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  948  <|@ instruction AMD64PREFETCH ~[r14|QWORD + rax|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  950  <|@ instruction MOV (x: [rax|QWORD + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  952  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  954  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  956  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  958  <|@ instruction r14|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  960  <|@ instruction stack:52|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  962  <|@ instruction stack:68|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  964  <|@ instruction r13|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  966  <|@ instruction stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  968  <|@ instruction stack:76|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  970  <|@ instruction stack:64|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  972  <|@ instruction JUMP ~[] destination: B92 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B92" "B94" 
    successors "B96" "B97" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598446793194746001
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1010  <|@ instruction CMP (x: r14|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr 1012  <|@ instruction rcx|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr 1014  <|@ instruction rsi|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr 1016  <|@ instruction CMP rsi|QWORD y: 1 size: QWORD <|@ <|@
      nr 1018  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B95 -> B96 falseDestination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593943193567375505
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1026  <|@ instruction r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1028  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 1030  <|@ instruction rcx|QWORD[.] = LEA [r10|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 1032  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 16] size: QWORD <|@ <|@
      nr 1034  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1036  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B97 -> B98 falseDestination: B97 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B102" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591827180578425050
    begin_IR
      LIR
      nr 1038  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1040  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1042  <|@ instruction JUMP ~[] destination: B98 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B98" "B101" 
    successors "B103" "B104" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593943193567375505
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1068  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr 1070  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1072  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B102 -> B103 falseDestination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B105" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591827180578425050
    begin_IR
      LIR
      nr 1078  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1080  <|@ instruction xmm0|V128_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1082  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1084  <|@ instruction r10|QWORD = LEA [r11|QWORD + 8] size: QWORD <|@ <|@
      nr 1086  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1088  <|@ instruction JUMP ~[] destination: B104 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" "B103" 
    successors "B106" "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593943193567375505
    begin_IR
      LIR
      nr 1090  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1092  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr 1094  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1096  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B105 -> B106 falseDestination: B105 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591827180578425050
    begin_IR
      LIR
      nr 1102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1104  <|@ instruction xmm0|V64_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr 1106  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr 1108  <|@ instruction r10|QWORD = LEA [r11|QWORD + 4] size: QWORD <|@ <|@
      nr 1110  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1112  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593943193567375505
    begin_IR
      LIR
      nr 1114  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1116  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr 1118  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1120  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B108 -> B109 falseDestination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591827180578425050
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1128  <|@ instruction xmm0|V32_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr 1130  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr 1132  <|@ instruction r10|QWORD = LEA [r11|QWORD + 2] size: QWORD <|@ <|@
      nr 1134  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1136  <|@ instruction JUMP ~[] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" "B109" 
    successors "B112" "B113" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593943193567375505
    begin_IR
      LIR
      nr 1138  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1140  <|@ instruction r10|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr 1142  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1144  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B111 -> B112 falseDestination: B111 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591827180578425050
    begin_IR
      LIR
      nr 1150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1152  <|@ instruction rcx|DWORD = MOVSX [rcx|QWORD[.] + r11|QWORD * 2] size: DWORD <|@ <|@
      nr 1154  <|@ instruction MOV (x: [rdx|QWORD[.] + r11|QWORD * 2], y: rcx|DWORD) size: WORD <|@ <|@
      nr 1156  <|@ instruction JUMP ~[] destination: B113 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B96" "B113" "B112" 
    successors "B115" "B133" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598446793194746001
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1160  <|@ instruction rdx|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr 1162  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1164  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B114 -> B115 falseDestination: B114 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B134" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593943193567375505
    begin_IR
      LIR
      nr 1316  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1318  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1320  <|@ instruction r9|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr 1322  <|@ instruction r11|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr 1324  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1326  <|@ instruction JUMP ~[] destination: B133 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B133" "B131" "B130" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598446793194746001
    begin_IR
      LIR
      nr 1328  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1330  <|@ instruction MOV (x: [rax|QWORD[.] + r11|DWORD * 2 + 16], y: r9|DWORD) size: WORD <|@ <|@
      nr 1332  <|@ instruction MOV (x: [r13|QWORD[.] + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1334  <|@ st <@st|@reference-map: [rax:0, r13:0, stack:32, stack:48]
live-base-pointers: []
sun.reflect.generics.parser.SignatureParser.advance(SignatureParser.java:103) [bci: 36]
locals: r13|QWORD[.] 
sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:269) [bci: 104]
locals: r13|QWORD[.] vobject:StringBuilder:0{count=stack:68|DWORD,value=rax|QWORD[.]} - 
vobject:StringBuilder:0{count=stack:68|DWORD,value=rax|QWORD[.]} Ljava/lang/StringBuilder; stack:68|DWORD rax|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:36, 104] <|@ <|@
      nr 1336  <|@ instruction r11|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1338  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1340  <|@ instruction r8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[256]{1207963663, 1207963663, 1207963663, 1207963663, 1207963663, ...}] <|@ <|@
      nr 1342  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1344  <|@ instruction r14|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1346  <|@ instruction JUMP ~[] destination: B134 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B114" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593943193567375505
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1022  <|@ instruction JUMP ~[] destination: B96 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B116" "B117" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593943193567375505
    begin_IR
      LIR
      nr 1166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1168  <|@ instruction rcx|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr 1170  <|@ instruction rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1172  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD <|@ <|@
      nr 1174  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1176  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B115 -> B116 falseDestination: B115 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B120" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591827180578425050
    begin_IR
      LIR
      nr 1178  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1180  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1182  <|@ instruction JUMP ~[] destination: B116 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B116" "B119" 
    successors "B121" "B122" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593943193567375505
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1208  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr 1210  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1212  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B120 -> B121 falseDestination: B120 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B123" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591827180578425050
    begin_IR
      LIR
      nr 1218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1220  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr 1222  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1224  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 8] size: QWORD <|@ <|@
      nr 1226  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1228  <|@ instruction JUMP ~[] destination: B122 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" "B121" 
    successors "B124" "B125" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593943193567375505
    begin_IR
      LIR
      nr 1230  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1232  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD <|@ <|@
      nr 1234  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1236  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B123 -> B124 falseDestination: B123 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B126" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591827180578425050
    begin_IR
      LIR
      nr 1242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1244  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr 1246  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr 1248  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 4] size: QWORD <|@ <|@
      nr 1250  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1252  <|@ instruction JUMP ~[] destination: B125 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" "B124" 
    successors "B127" "B128" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593943193567375505
    begin_IR
      LIR
      nr 1254  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1256  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD <|@ <|@
      nr 1258  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1260  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B126 -> B127 falseDestination: B126 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors "B129" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591827180578425050
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1268  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr 1270  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr 1272  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 2] size: QWORD <|@ <|@
      nr 1274  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1276  <|@ instruction JUMP ~[] destination: B128 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B128" "B127" 
    successors "B130" "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593943193567375505
    begin_IR
      LIR
      nr 1278  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1280  <|@ instruction rdx|QWORD = DEC rdx|QWORD size: QWORD <|@ <|@
      nr 1282  <|@ instruction CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1284  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B129 -> B130 falseDestination: B129 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B134" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591827180578425050
    begin_IR
      LIR
      nr 1298  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1300  <|@ instruction MOV (x: [rcx|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr 1302  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1304  <|@ instruction r9|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr 1306  <|@ instruction r11|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr 1308  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1310  <|@ instruction JUMP ~[] destination: B131 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584935994312634513
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1046  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1048  <|@ instruction JUMP ~[] destination: B99 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B100" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 2
    probability 4591827180578425050
    begin_IR
      LIR
      nr 1348  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1350  <|@ instruction JUMP ~[] destination: B135 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" "B135" 
    successors "B101" "B135" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 2
    probability 4593943193567375505
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1052  <|@ instruction xmm0|V256_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1054  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1056  <|@ instruction r11|QWORD = LEA [r11|QWORD + 16] size: QWORD <|@ <|@
      nr 1058  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1060  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B100 -> B101 falseDestination: B100 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B123" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584935994312634513
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1216  <|@ instruction JUMP ~[] destination: B121 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B126" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584935994312634513
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1240  <|@ instruction JUMP ~[] destination: B124 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors "B129" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584935994312634513
    begin_IR
      LIR
      nr 1262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1264  <|@ instruction JUMP ~[] destination: B127 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B134" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584935994312634513
    begin_IR
      LIR
      nr 1286  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1288  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1290  <|@ instruction r9|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr 1292  <|@ instruction r11|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr 1294  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1296  <|@ instruction JUMP ~[] destination: B130 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584935994312634513
    begin_IR
      LIR
      nr 1062  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1064  <|@ instruction JUMP ~[] destination: B101 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B105" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584935994312634513
    begin_IR
      LIR
      nr 1074  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1076  <|@ instruction JUMP ~[] destination: B103 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584935994312634513
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1124  <|@ instruction JUMP ~[] destination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584935994312634513
    begin_IR
      LIR
      nr 1146  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1148  <|@ instruction JUMP ~[] destination: B112 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584935994312634513
    begin_IR
      LIR
      nr 1184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1186  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr 1188  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1190  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B118" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4591827180578425050
    begin_IR
      LIR
      nr 1312  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1314  <|@ instruction JUMP ~[] destination: B132 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" "B132" 
    successors "B119" "B132" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 2
    probability 4593943193567375505
    begin_IR
      LIR
      nr 1192  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1194  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1196  <|@ instruction r10|QWORD = LEA [r10|QWORD + 16] size: QWORD <|@ <|@
      nr 1198  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1200  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B118 -> B119 falseDestination: B118 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584935994312634513
    begin_IR
      LIR
      nr 1098  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1100  <|@ instruction JUMP ~[] destination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B120" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584935994312634513
    begin_IR
      LIR
      nr 1202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1204  <|@ instruction JUMP ~[] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B94" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583297498651368064
    begin_IR
      LIR
      nr  974  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  976  <|@ instruction stack:52|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  978  <|@ instruction stack:68|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  980  <|@ instruction stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction stack:76|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  984  <|@ instruction stack:64|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  986  <|@ instruction r13|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  988  <|@ instruction JUMP ~[] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" "B91" 
    successors "B95" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583985123603233036
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  992  <|@ instruction r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  994  <|@ instruction rsi|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  996  <|@ instruction rdx|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  998  <|@ instruction rax|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1000  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1002  <|@ instruction r14|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1004  <|@ st <@st|@reference-map: [stack:16, stack:32, stack:48]
live-base-pointers: []
sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 8]
locals: stack:32|QWORD[.] vobject:StringBuilder:0{count=stack:76|DWORD,value=stack:64|QWORD[.]} - 
vobject:StringBuilder:0{count=stack:76|DWORD,value=stack:64|QWORD[.]} Ljava/lang/StringBuilder; stack:76|DWORD stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8] <|@ <|@
      nr 1006  <|@ instruction JUMP ~[] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B94" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4567647422141232226
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  924  <|@ instruction stack:52|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  926  <|@ instruction stack:68|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  928  <|@ instruction r13|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  930  <|@ instruction stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  932  <|@ instruction stack:76|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  934  <|@ instruction stack:64|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  936  <|@ instruction JUMP ~[] destination: B91 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B28" 
    xhandlers
    flags 
    probability 4605142756898813177
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  258  <|@ instruction CMP r11|DWORD y: 1 size: DWORD <|@ <|@
      nr  260  <|@ instruction BRANCH trueDestinationProbability: 0.09284041465770032 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4604495887841767808
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  340  <|@ instruction r13|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  342  <|@ instruction rax|DWORD = SUB (x: r13|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  344  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  346  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B34" 
    xhandlers
    flags 
    probability 4604495887841767808
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  362  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  364  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  366  <|@ instruction CMP r11|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  368  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B30 -> B31 falseDestination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4603863821012118669
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ instruction rdx|DWORD = SHL r11|DWORD size: DWORD <|@ <|@
      nr  374  <|@ instruction rdx|DWORD = LEA [rdx|DWORD + 23] size: DWORD <|@ <|@
      nr  376  <|@ instruction rdx|DWORD = AND rdx|DWORD y: -8 size: DWORD <|@ <|@
      nr  378  <|@ instruction rdx|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr  380  <|@ instruction rcx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  382  <|@ instruction CMP (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  384  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4603806934997450246
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  394  <|@ instruction MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  396  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  398  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  400  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  402  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  404  <|@ instruction MOV (x: [rax|QWORD + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  408  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  410  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction stack:64|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4604495887841767808
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  440  <|@ instruction CMP (x: r14|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  442  <|@ instruction r11|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  444  <|@ instruction rsi|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  446  <|@ instruction CMP rsi|QWORD y: 1 size: QWORD <|@ <|@
      nr  448  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4599992288214397312
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  458  <|@ instruction r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  462  <|@ instruction rcx|QWORD[.] = LEA [r10|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  464  <|@ instruction r11|QWORD = LEA [rsi|QWORD - 16] size: QWORD <|@ <|@
      nr  466  <|@ instruction TEST (x: r11|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  468  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B43" 
    xhandlers
    flags 
    probability 4598412121140274464
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  472  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  474  <|@ instruction JUMP ~[] destination: B39 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B39" "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4599992288214397312
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  500  <|@ instruction r11|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  502  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  504  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B43 -> B44 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4598412121140274464
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  512  <|@ instruction xmm0|V128_WORD = H [rcx|QWORD[.] + r8|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  514  <|@ instruction J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  516  <|@ instruction r11|QWORD = LEA [r8|QWORD + 8] size: QWORD <|@ <|@
      nr  518  <|@ instruction r8|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  520  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4599992288214397312
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  524  <|@ instruction r11|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr  526  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  528  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4598412121140274464
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  536  <|@ instruction xmm0|V64_WORD = H [rcx|QWORD[.] + r8|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr  538  <|@ instruction J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  540  <|@ instruction r11|QWORD = LEA [r8|QWORD + 4] size: QWORD <|@ <|@
      nr  542  <|@ instruction r8|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4599992288214397312
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  548  <|@ instruction r11|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr  550  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  552  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4598412121140274464
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  560  <|@ instruction xmm0|V32_WORD = H [rcx|QWORD[.] + r8|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr  562  <|@ instruction J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  564  <|@ instruction r11|QWORD = LEA [r8|QWORD + 2] size: QWORD <|@ <|@
      nr  566  <|@ instruction r8|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  568  <|@ instruction JUMP ~[] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4599992288214397312
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  572  <|@ instruction r11|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  574  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  576  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4598412121140274464
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  584  <|@ instruction rcx|DWORD = MOVSX [rcx|QWORD[.] + r8|QWORD * 2] size: DWORD <|@ <|@
      nr  586  <|@ instruction MOV (x: [rdx|QWORD[.] + r8|QWORD * 2], y: rcx|DWORD) size: WORD <|@ <|@
      nr  588  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B37" "B54" "B53" 
    successors "B56" "B74" 
    xhandlers
    flags 
    probability 4604495887841767808
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  592  <|@ instruction rdx|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  594  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  596  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B75" 
    xhandlers
    flags 
    probability 4599992288214397312
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  734  <|@ instruction JUMP ~[] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" "B72" "B71" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4604495887841767808
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  738  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  740  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  742  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  744  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B75 -> B76 falseDestination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B78" 
    xhandlers
    flags 
    probability 4604432681158802894
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  768  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  770  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr  772  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction JUMP ~[] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B76" 
    successors 
    xhandlers
    flags 
    probability 4604495887841767808
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  778  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  780  <|@ instruction rcx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  782  <|@ instruction rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD <|@ <|@
      nr  784  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  786  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  788  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@4796bf3d encoding: base: 0 shift: 3 <|@ <|@
      nr  790  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  792  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  794  <|@ instruction rax|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B55" 
    xhandlers
    flags 
    probability 4599992288214397312
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction JUMP ~[] destination: B37 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" "B58" 
    xhandlers
    flags 
    probability 4599992288214397312
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  600  <|@ instruction rcx|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  602  <|@ instruction rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr  604  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD <|@ <|@
      nr  606  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  608  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B61" 
    xhandlers
    flags 
    probability 4598412121140274464
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  612  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  614  <|@ instruction JUMP ~[] destination: B57 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B57" "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4599992288214397312
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  640  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  642  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  644  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B61 -> B62 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    probability 4598412121140274464
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  652  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  654  <|@ instruction J (address: [rcx|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  656  <|@ instruction rsi|QWORD = LEA [r11|QWORD + 8] size: QWORD <|@ <|@
      nr  658  <|@ instruction r11|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  660  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B62" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4599992288214397312
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  664  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD <|@ <|@
      nr  666  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  668  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4598412121140274464
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  676  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  678  <|@ instruction J (address: [rcx|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  680  <|@ instruction rsi|QWORD = LEA [r11|QWORD + 4] size: QWORD <|@ <|@
      nr  682  <|@ instruction r11|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4599992288214397312
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  688  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD <|@ <|@
      nr  690  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  692  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    probability 4598412121140274464
    begin_IR
      LIR
      nr  698  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  700  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  702  <|@ instruction J (address: [rcx|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  704  <|@ instruction rsi|QWORD = LEA [r11|QWORD + 2] size: QWORD <|@ <|@
      nr  706  <|@ instruction r11|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  708  <|@ instruction JUMP ~[] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4599992288214397312
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  712  <|@ instruction rdx|QWORD = DEC rdx|QWORD size: QWORD <|@ <|@
      nr  714  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  716  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B75" 
    xhandlers
    flags 
    probability 4598412121140274464
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  724  <|@ instruction MOV (x: [rcx|QWORD[.] + r11|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr  726  <|@ instruction JUMP ~[] destination: B72 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4593346058499059860
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   66  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 48] size: QWORD <|@ <|@
      nr   68  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   70  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4593259242120700911
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   90  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 240] instr: 0 <|@ <|@
      nr   92  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   94  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593346058499059860
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   98  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction MOV [rax|QWORD[*] + 12] y: 16 size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV [rax|QWORD[*]] y: 1 size: QWORD <|@ <|@
      nr  104  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  106  <|@ instruction xmm0|V256_QWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  108  <|@ instruction J (address: [rax|QWORD[*] + 16], input: xmm0|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  110  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  112  <|@ instruction r13|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B9 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B9" "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4596096315436664365
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  272  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  274  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4596096315436664365
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  286  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  288  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  290  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  292  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596027032485203076
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  310  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  312  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 0 <|@ <|@
      nr  314  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction JUMP ~[] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors 
    xhandlers
    flags 
    probability 4596096315436664365
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  320  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  322  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction rsi|QWORD = MOV [rsi|QWORD + 168] size: QWORD <|@ <|@
      nr  326  <|@ instruction MOV (x: [rax|QWORD[*]], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  328  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  330  <|@ instruction MOV [rax|QWORD[*] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}] <|@ <|@
      nr  332  <|@ instruction MOV (x: [rax|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  334  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4590985088959656320
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  580  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    probability 4590985088959656320
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  696  <|@ instruction JUMP ~[] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B75" 
    xhandlers
    flags 
    probability 4590985088959656320
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  720  <|@ instruction JUMP ~[] destination: B71 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4590985088959656320
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  618  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  620  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  622  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4598412121140274464
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  730  <|@ instruction JUMP ~[] destination: B73 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B73" 
    successors "B60" "B73" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4599992288214397312
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  626  <|@ instruction J (address: [rcx|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  628  <|@ instruction r11|QWORD = LEA [r11|QWORD + 16] size: QWORD <|@ <|@
      nr  630  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  632  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    probability 4590985088959656320
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  648  <|@ instruction JUMP ~[] destination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4590985088959656320
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  672  <|@ instruction JUMP ~[] destination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" 
    xhandlers
    flags 
    probability 4590985088959656320
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  636  <|@ instruction JUMP ~[] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4590985088959656320
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  478  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  480  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4598412121140274464
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  800  <|@ instruction JUMP ~[] destination: B79 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B79" 
    successors "B42" "B79" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4599992288214397312
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  484  <|@ instruction xmm0|V256_WORD = H [rcx|QWORD[.] + r8|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  486  <|@ instruction J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  488  <|@ instruction r8|QWORD = LEA [r8|QWORD + 16] size: QWORD <|@ <|@
      nr  490  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  492  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4590985088959656320
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  532  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" 
    xhandlers
    flags 
    probability 4590985088959656320
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  496  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4590985088959656320
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  556  <|@ instruction JUMP ~[] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4590985088959656320
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  508  <|@ instruction JUMP ~[] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589839373119527878
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  264  <|@ instruction r14|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction r13|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  268  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4589720955300358040
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  420  <|@ instruction stack:64|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  422  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B32" 
    successors "B36" 
    xhandlers
    flags 
    probability 4590176043417705421
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  428  <|@ instruction rdx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  432  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  434  <|@ st <@st|@reference-map: [stack:16, stack:48]
live-base-pointers: []
sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 8]
locals: stack:32|QWORD[.] vobject:StringBuilder:0{count=r14|DWORD,value=stack:64|QWORD[.]} - 
vobject:StringBuilder:0{count=r14|DWORD,value=stack:64|QWORD[.]} Ljava/lang/StringBuilder; r14|DWORD stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8] <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4576223698277216085
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  136  <|@ instruction stack:52|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  138  <|@ instruction r13|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  140  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  142  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  144  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr  146  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  148  <|@ st <@st|@reference-map: [stack:32, stack:48]
live-base-pointers: []
sun.reflect.generics.parser.SignatureParser.advance(SignatureParser.java:103) [bci: 36]
locals: stack:32|QWORD[.] 
sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:269) [bci: 104]
locals: stack:32|QWORD[.] vobject:StringBuilder:0{count=int[1|0x1],value=vobject:char[]:1{0=r14|DWORD,1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]}} - 
vobject:StringBuilder:0{count=int[1|0x1],value=vobject:char[]:1{0=r14|DWORD,1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]}} Ljava/lang/StringBuilder; int[1|0x1] vobject:char[]:1{0=r14|DWORD,1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} 
vobject:char[]:1{0=r14|DWORD,1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} [C r14|DWORD int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:36, 104] <|@ <|@
      nr  150  <|@ instruction rcx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction rdx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  154  <|@ instruction r8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[256]{1207963663, 1207963663, 1207963663, 1207963663, 1207963663, ...}] <|@ <|@
      nr  156  <|@ instruction r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  158  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction r14|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  162  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction JUMP ~[] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B78" 
    xhandlers
    flags 
    probability 4574740477573191933
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  748  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  750  <|@ instruction stack:64|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  752  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  754  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  756  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  758  <|@ st <@st|@reference-map: [r13:0, stack:16, stack:48]
live-base-pointers: []
sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 8]
locals: stack:32|QWORD[.] vobject:StringBuilder:0{count=r14|DWORD,value=stack:64|QWORD[.]} - 
vobject:StringBuilder:0{count=r14|DWORD,value=stack:64|QWORD[.]} Ljava/lang/StringBuilder; r14|DWORD stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8] <|@ <|@
      nr  760  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction JUMP ~[] destination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4573931432031241034
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  388  <|@ instruction stack:64|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4566511040685987004
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  296  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  298  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  300  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  302  <|@ st <@st|@reference-map: [r14:0]
live-base-pointers: []
sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 92]
locals: - vobject:StringBuilder:0{count=r13|DWORD,value=r14|QWORD[.]} - 
vobject:StringBuilder:0{count=r13|DWORD,value=r14|QWORD[.]} Ljava/lang/StringBuilder; r13|DWORD r14|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:92] <|@ <|@
      nr  304  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4563199071113914713
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   76  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   78  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   80  <|@ st <@st|@reference-map: [stack:48]
live-base-pointers: []
sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:255) [bci: 0]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   82  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B139" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1354  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1356  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1358  <|@ instruction r10|DWORD = MOVE input: int[-123419|0xfffffffffffe1de5] <|@ <|@
      nr 1360  <|@ instruction JUMP ~[] destination: B136 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B19" "B138" "B137" "B17" "B83" "B85" "B87" "B136" "B29" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      LIR
      nr 1382  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1384  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1386  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1388  <|@ st <@st|@reference-map: [r11:0, r13:0]
live-base-pointers: []
sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 8]
locals: r13|QWORD[.] vobject:StringBuilder:0{count=r14|DWORD,value=r11|QWORD[.]} - 
vobject:StringBuilder:0{count=r14|DWORD,value=r11|QWORD[.]} Ljava/lang/StringBuilder; r14|DWORD r11|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:8] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B139" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1364  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1366  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1368  <|@ instruction r10|DWORD = MOVE input: int[-113939|0xfffffffffffe42ed] <|@ <|@
      nr 1370  <|@ instruction JUMP ~[] destination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B139" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  882  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  884  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  886  <|@ instruction r10|DWORD = MOVE input: int[-122899|0xfffffffffffe1fed] <|@ <|@
      nr  888  <|@ instruction JUMP ~[] destination: B87 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B139" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  350  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction r10|DWORD = MOVE input: int[-119315|0xfffffffffffe2ded] <|@ <|@
      nr  358  <|@ instruction JUMP ~[] destination: B29 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B139" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  248  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction r10|DWORD = MOVE input: int[-7187|0xffffffffffffe3ed] <|@ <|@
      nr  254  <|@ instruction JUMP ~[] destination: B19 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B142" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction r10|DWORD = MOVE input: int[-108307|0xfffffffffffe58ed] <|@ <|@
      nr   50  <|@ instruction JUMP ~[] destination: B3 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B3" "B141" "B140" "B5" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1402  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1404  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1406  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1408  <|@ st <@st|@reference-map: [stack:48]
live-base-pointers: []
sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:255) [bci: 0]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B142" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction r10|DWORD = MOVE input: int[-57619|0xffffffffffff1eed] <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B5 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B142" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1398  <|@ instruction r10|DWORD = MOVE input: int[-109083|0xfffffffffffe55e5] <|@ <|@
      nr 1400  <|@ instruction JUMP ~[] destination: B141 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B139" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  836  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  838  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  840  <|@ instruction r10|DWORD = MOVE input: int[-120347|0xfffffffffffe29e5] <|@ <|@
      nr  842  <|@ instruction JUMP ~[] destination: B83 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B139" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1374  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1376  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1378  <|@ instruction r10|DWORD = MOVE input: int[-116763|0xfffffffffffe37e5] <|@ <|@
      nr 1380  <|@ instruction JUMP ~[] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B139" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  234  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction r10|DWORD = MOVE input: int[-115987|0xfffffffffffe3aed] <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B17 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction MOV [r15|QWORD + 668] y: -125459 size: DWORD <|@ <|@
      nr  280  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  282  <|@ st <@st|@reference-map: [r14:0]
live-base-pointers: []
sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 92]
locals: - vobject:StringBuilder:0{count=r13|DWORD,value=r14|QWORD[.]} - 
vobject:StringBuilder:0{count=r13|DWORD,value=r14|QWORD[.]} Ljava/lang/StringBuilder; r13|DWORD r14|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:92] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B139" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  862  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  864  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  866  <|@ instruction r10|DWORD = MOVE input: int[-122643|0xfffffffffffe20ed] <|@ <|@
      nr  868  <|@ instruction JUMP ~[] destination: B85 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B142" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1390  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1392  <|@ instruction r10|DWORD = MOVE input: int[-106003|0xfffffffffffe61ed] <|@ <|@
      nr 1394  <|@ instruction JUMP ~[] destination: B140 -> B142 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #12         // java.lang.StringBuilder
     3: dup           
     4: invokespecial #6          // java.lang.StringBuilder.<init>:()void
     7: astore_1      
     8: aload_0       
     9: invokespecial #21         // current:()char
    12: invokestatic  #33         // java.lang.Character.isWhitespace:(char)boolean
    15: ifne          110
    18: aload_0       
    19: invokespecial #21         // current:()char
    22: istore_2      
    23: iload_2       
    24: lookupswitch  [7] {46: 92, 47: 92, 58: 92, 59: 92, 60: 92, 62: 92, 91: 92} default: 97
    92: aload_1       
    93: invokevirtual #9          // java.lang.StringBuilder.toString:()java.lang.String
    96: areturn       
    97: aload_1       
    98: iload_2       
    99: invokevirtual #34         // java.lang.StringBuilder.append:(char)java.lang.StringBuilder
   102: pop           
   103: aload_0       
   104: invokespecial #24         // advance:()void
   107: goto          8
   110: aload_1       
   111: invokevirtual #9          // java.lang.StringBuilder.toString:()java.lang.String
   114: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B141" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@74196ce0 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction rsi|DWORD[.] = MOV [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   12  <|@ st <@st|@reference-map: [rsi:0, r13:0, stack:48]
live-base-pointers: []
sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:255) [bci: 0]
locals: r13|QWORD[.] - - 
>@ <|@ instruction r14|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   14  <|@ instruction rdx|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   16  <|@ instruction CMP (x: r14|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B140" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4796bf3d encoding: base: 0 shift: 3 <|@ <|@
      nr   24  <|@ instruction r10|DWORD = MOVSX [rsi|QWORD[.] + rdx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction r11|DWORD = MOVZX r10|DWORD size: DWORD <|@ <|@
      nr   28  <|@ instruction TEST r11|DWORD y: -256 size: DWORD <|@ <|@
      nr   30  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction r8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[256]{1207963663, 1207963663, 1207963663, 1207963663, 1207963663, ...}] <|@ <|@
      nr   36  <|@ instruction rcx|QWORD = MOVZX r10|DWORD size: DWORD <|@ <|@
      nr   38  <|@ instruction r9|DWORD = MOVE input: int[28672|0x7000] <|@ <|@
      nr   40  <|@ instruction r9|DWORD = AND (x: r9|DWORD, ~y: [r8|QWORD[.] + rcx|QWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   42  <|@ instruction CMP r9|DWORD y: 16384 size: DWORD <|@ <|@
      nr   44  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r11|DWORD - keyConstants: [int[46|0x2e], int[47|0x2f], int[58|0x3a], int[59|0x3b], int[60|0x3c], int[62|0x3e], int[91|0x5b]] keyTargets: [B4 -> B6, B4 -> B6, B4 -> B6, B4 -> B6, B4 -> B6, B4 -> B6, B4 -> B6] defaultTarget: B4 -> B10 strategy: BinaryStrategy[avgEffort=3.8795180722891565] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606097214070530541
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction stack:36|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  120  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction rdx|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [r13|QWORD[.] + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  128  <|@ instruction r9|QWORD = LEA [rcx|QWORD + 48] size: QWORD <|@ <|@
      nr  130  <|@ instruction CMP (x: r9|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  132  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606017994125278000
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  168  <|@ instruction MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD <|@ <|@
      nr  170  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + 240] instr: 0 <|@ <|@
      nr  172  <|@ instruction rcx|QWORD[*] = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4606097214070530541
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  178  <|@ instruction r11|QWORD[.] = MOVE rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction MOV [rcx|QWORD[*] + 12] y: 16 size: DWORD <|@ <|@
      nr  182  <|@ instruction MOV [rcx|QWORD[*]] y: 1 size: QWORD <|@ <|@
      nr  184  <|@ instruction MOV [rcx|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  186  <|@ instruction MOV (x: [rcx|QWORD[*] + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  188  <|@ instruction xmm0|V128_QWORD = L oc: SIMD<0,0> <|@ <|@
      nr  190  <|@ instruction J (address: [rcx|QWORD[*] + 18], input: xmm0|V128_QWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  192  <|@ instruction MOV (x: [rcx|QWORD[*] + 34], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  194  <|@ instruction MOV (x: [rcx|QWORD[*] + 42], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  196  <|@ instruction MOV (x: [rcx|QWORD[*] + 46], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr  198  <|@ instruction r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B134" "B82" 
    successors "B15" "B138" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618914838431682294
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 3 align: true label: ? <|@ <|@
      nr  206  <|@ instruction CMP (x: r14|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  208  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B137" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618914838431682294
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  212  <|@ instruction r9|DWORD = MOVSX [rsi|QWORD[.] + rdx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  214  <|@ instruction rcx|DWORD = MOVZX r9|DWORD size: DWORD <|@ <|@
      nr  216  <|@ instruction TEST rcx|DWORD y: -256 size: DWORD <|@ <|@
      nr  218  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618914838431682294
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction rbx|QWORD = MOVZX r9|DWORD size: DWORD <|@ <|@
      nr  224  <|@ instruction rdi|DWORD = MOVE input: int[28672|0x7000] <|@ <|@
      nr  226  <|@ instruction rdi|DWORD = AND (x: rdi|DWORD, ~y: [r8|QWORD[.] + rbx|QWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  228  <|@ instruction CMP rdi|DWORD y: 16384 size: DWORD <|@ <|@
      nr  230  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618914838431682294
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  244  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rcx|DWORD - keyConstants: [int[46|0x2e], int[47|0x2f], int[58|0x3a], int[59|0x3b], int[60|0x3c], int[62|0x3e], int[91|0x5b]] keyTargets: [B18 -> B20, B18 -> B20, B18 -> B20, B18 -> B20, B18 -> B20, B18 -> B20, B18 -> B20] defaultTarget: B18 -> B80 strategy: BinaryStrategy[avgEffort=3.8795180722891565] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B81" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618043896262490198
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  804  <|@ instruction rbx|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  806  <|@ instruction rdi|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  808  <|@ instruction rcx|DWORD = SUB (x: rdi|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  810  <|@ instruction rdx|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr  812  <|@ instruction CMP rcx|DWORD y: 1 size: DWORD <|@ <|@
      nr  814  <|@ instruction BRANCH trueDestinationProbability: 0.9530584988351379 condition: < trueDestination: B80 -> B81 falseDestination: B80 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B82" "B83" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617745447932687693
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  818  <|@ instruction CMP (x: rbx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  820  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B81 -> B82 falseDestination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617745447932687693
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  824  <|@ instruction MOV (x: [r10|QWORD[.] + r11|DWORD * 2 + 16], y: r9|DWORD) size: WORD <|@ <|@
      nr  826  <|@ instruction MOV (x: [r13|QWORD[.] + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  828  <|@ st <@st|@reference-map: [rsi:0, r8:0, r10:0, r13:0, stack:32, stack:48]
live-base-pointers: []
sun.reflect.generics.parser.SignatureParser.advance(SignatureParser.java:103) [bci: 36]
locals: r13|QWORD[.] 
sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:269) [bci: 104]
locals: r13|QWORD[.] vobject:StringBuilder:0{count=rdi|DWORD,value=r10|QWORD[.]} - 
vobject:StringBuilder:0{count=rdi|DWORD,value=r10|QWORD[.]} Ljava/lang/StringBuilder; rdi|DWORD r10|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:36, 104] <|@ <|@
      nr  830  <|@ instruction r11|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  832  <|@ instruction JUMP ~[] destination: B82 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B85" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598446793194746001
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  846  <|@ instruction rcx|DWORD = SHL rbx|DWORD size: DWORD <|@ <|@
      nr  848  <|@ instruction rcx|DWORD = LEA [rcx|DWORD + 2] size: DWORD <|@ <|@
      nr  850  <|@ instruction rax|DWORD = SUB (x: rcx|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  852  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  854  <|@ instruction rcx|DWORD = CMOVE (falseValue: rcx|DWORD, ~trueValue: rdi|DWORD) condition: < <|@ <|@
      nr  856  <|@ instruction CMP rcx|DWORD y: 1 size: DWORD <|@ <|@
      nr  858  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B84 -> B85 falseDestination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" "B88" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598446793194746001
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  872  <|@ instruction rax|DWORD = MOVE input: int[2147483639|0x7ffffff7] <|@ <|@
      nr  874  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  876  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  878  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B86 -> B87 falseDestination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B89" "B136" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598446793194746001
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  892  <|@ instruction CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  894  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B88 -> B89 falseDestination: B88 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B90" "B93" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598446793194746001
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  898  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  900  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  902  <|@ instruction CMP rcx|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  904  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B89 -> B90 falseDestination: B89 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B91" "B92" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597763332188847570
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  908  <|@ instruction r14|DWORD = SHL rcx|DWORD size: DWORD <|@ <|@
      nr  910  <|@ instruction r14|DWORD = LEA [r14|DWORD + 23] size: DWORD <|@ <|@
      nr  912  <|@ instruction r14|DWORD = AND r14|DWORD y: -8 size: DWORD <|@ <|@
      nr  914  <|@ instruction r14|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  916  <|@ instruction r13|QWORD = ADD (x: r14|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  918  <|@ instruction CMP (x: r13|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  920  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B90 -> B91 falseDestination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B95" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597677379069864448
    begin_IR
      LIR
      nr  938  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  940  <|@ instruction MOV (x: [r15|QWORD + 96], y: r13|QWORD) size: QWORD <|@ <|@
      nr  942  <|@ instruction AMD64PREFETCH ~[r14|QWORD + rax|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  944  <|@ instruction AMD64PREFETCH ~[r14|QWORD + rax|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  946  <|@ instruction AMD64PREFETCH ~[r14|QWORD + rax|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  948  <|@ instruction AMD64PREFETCH ~[r14|QWORD + rax|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  950  <|@ instruction MOV (x: [rax|QWORD + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  952  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  954  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  956  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  958  <|@ instruction r14|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  960  <|@ instruction stack:52|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  962  <|@ instruction stack:68|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  964  <|@ instruction r13|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  966  <|@ instruction stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  968  <|@ instruction stack:76|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  970  <|@ instruction stack:64|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  972  <|@ instruction JUMP ~[] destination: B92 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B92" "B94" 
    successors "B114" "B97" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598446793194746001
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1010  <|@ instruction CMP (x: r14|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr 1012  <|@ instruction rcx|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr 1014  <|@ instruction rsi|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr 1016  <|@ instruction CMP rsi|QWORD y: 1 size: QWORD <|@ <|@
      nr 1018  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B95 -> B114 falseDestination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B102" "B100" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593943193567375505
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1026  <|@ instruction r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1028  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 1030  <|@ instruction rcx|QWORD[.] = LEA [r10|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 1032  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 16] size: QWORD <|@ <|@
      nr 1034  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1040  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1036  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B97 -> B102 falseDestination: B97 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B97" "B100" 
    successors "B105" "B104" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593943193567375505
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1068  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr 1070  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1072  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B102 -> B105 falseDestination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B105" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591827180578425050
    begin_IR
      LIR
      nr 1078  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1080  <|@ instruction xmm0|V128_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1082  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1084  <|@ instruction r10|QWORD = LEA [r11|QWORD + 8] size: QWORD <|@ <|@
      nr 1086  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1088  <|@ instruction JUMP ~[] destination: B104 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" "B102" 
    successors "B108" "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593943193567375505
    begin_IR
      LIR
      nr 1090  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1092  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr 1094  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1096  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B105 -> B108 falseDestination: B105 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591827180578425050
    begin_IR
      LIR
      nr 1102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1104  <|@ instruction xmm0|V64_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr 1106  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr 1108  <|@ instruction r10|QWORD = LEA [r11|QWORD + 4] size: QWORD <|@ <|@
      nr 1110  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1112  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" "B105" 
    successors "B111" "B110" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593943193567375505
    begin_IR
      LIR
      nr 1114  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1116  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr 1118  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1120  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B108 -> B111 falseDestination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591827180578425050
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1128  <|@ instruction xmm0|V32_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr 1130  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr 1132  <|@ instruction r10|QWORD = LEA [r11|QWORD + 2] size: QWORD <|@ <|@
      nr 1134  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1136  <|@ instruction JUMP ~[] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" "B108" 
    successors "B114" "B113" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593943193567375505
    begin_IR
      LIR
      nr 1138  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1140  <|@ instruction r10|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr 1142  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1144  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B111 -> B114 falseDestination: B111 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591827180578425050
    begin_IR
      LIR
      nr 1150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1152  <|@ instruction rcx|DWORD = MOVSX [rcx|QWORD[.] + r11|QWORD * 2] size: DWORD <|@ <|@
      nr 1154  <|@ instruction MOV (x: [rdx|QWORD[.] + r11|QWORD * 2], y: rcx|DWORD) size: WORD <|@ <|@
      nr 1156  <|@ instruction JUMP ~[] destination: B113 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B95" "B113" "B111" 
    successors "B115" "B134" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598446793194746001
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1160  <|@ instruction rdx|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr 1162  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1164  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B114 -> B115 falseDestination: B114 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B114" "B131" "B129" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598446793194746001
    begin_IR
      LIR
      nr 1328  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1318  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1320  <|@ instruction r9|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr 1322  <|@ instruction r11|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr 1324  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1330  <|@ instruction MOV (x: [rax|QWORD[.] + r11|DWORD * 2 + 16], y: r9|DWORD) size: WORD <|@ <|@
      nr 1332  <|@ instruction MOV (x: [r13|QWORD[.] + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1334  <|@ st <@st|@reference-map: [rax:0, r13:0, stack:32, stack:48]
live-base-pointers: []
sun.reflect.generics.parser.SignatureParser.advance(SignatureParser.java:103) [bci: 36]
locals: r13|QWORD[.] 
sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:269) [bci: 104]
locals: r13|QWORD[.] vobject:StringBuilder:0{count=stack:68|DWORD,value=rax|QWORD[.]} - 
vobject:StringBuilder:0{count=stack:68|DWORD,value=rax|QWORD[.]} Ljava/lang/StringBuilder; stack:68|DWORD rax|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:36, 104] <|@ <|@
      nr 1336  <|@ instruction r11|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1338  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1340  <|@ instruction r8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[256]{1207963663, 1207963663, 1207963663, 1207963663, 1207963663, ...}] <|@ <|@
      nr 1342  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1344  <|@ instruction r14|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1346  <|@ instruction JUMP ~[] destination: B134 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B116" "B117" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593943193567375505
    begin_IR
      LIR
      nr 1166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1168  <|@ instruction rcx|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr 1170  <|@ instruction rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1172  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD <|@ <|@
      nr 1174  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1176  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B115 -> B116 falseDestination: B115 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B120" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591827180578425050
    begin_IR
      LIR
      nr 1178  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1180  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1182  <|@ instruction JUMP ~[] destination: B116 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B116" "B118" 
    successors "B123" "B122" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593943193567375505
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1208  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr 1210  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1212  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B120 -> B123 falseDestination: B120 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B123" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591827180578425050
    begin_IR
      LIR
      nr 1218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1220  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr 1222  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1224  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 8] size: QWORD <|@ <|@
      nr 1226  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1228  <|@ instruction JUMP ~[] destination: B122 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" "B120" 
    successors "B126" "B125" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593943193567375505
    begin_IR
      LIR
      nr 1230  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1232  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD <|@ <|@
      nr 1234  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1236  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B123 -> B126 falseDestination: B123 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B126" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591827180578425050
    begin_IR
      LIR
      nr 1242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1244  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr 1246  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr 1248  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 4] size: QWORD <|@ <|@
      nr 1250  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1252  <|@ instruction JUMP ~[] destination: B125 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" "B123" 
    successors "B129" "B128" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593943193567375505
    begin_IR
      LIR
      nr 1254  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1256  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD <|@ <|@
      nr 1258  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1260  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B126 -> B129 falseDestination: B126 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors "B129" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591827180578425050
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1268  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr 1270  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr 1272  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 2] size: QWORD <|@ <|@
      nr 1274  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1276  <|@ instruction JUMP ~[] destination: B128 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B128" "B126" 
    successors "B134" "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593943193567375505
    begin_IR
      LIR
      nr 1278  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1280  <|@ instruction rdx|QWORD = DEC rdx|QWORD size: QWORD <|@ <|@
      nr 1282  <|@ instruction CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1284  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B129 -> B134 falseDestination: B129 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B134" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591827180578425050
    begin_IR
      LIR
      nr 1298  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1300  <|@ instruction MOV (x: [rcx|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr 1310  <|@ instruction JUMP ~[] destination: B131 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B97" "B100" 
    successors "B102" "B100" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 2
    probability 4593943193567375505
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1052  <|@ instruction xmm0|V256_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1054  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1056  <|@ instruction r11|QWORD = LEA [r11|QWORD + 16] size: QWORD <|@ <|@
      nr 1058  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1060  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B100 -> B102 falseDestination: B100 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584935994312634513
    begin_IR
      LIR
      nr 1184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1186  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr 1188  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1190  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" "B118" 
    successors "B120" "B118" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 2
    probability 4593943193567375505
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1194  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1196  <|@ instruction r10|QWORD = LEA [r10|QWORD + 16] size: QWORD <|@ <|@
      nr 1198  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1200  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B118 -> B120 falseDestination: B118 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B94" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583297498651368064
    begin_IR
      LIR
      nr  974  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  976  <|@ instruction stack:52|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  978  <|@ instruction stack:68|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  980  <|@ instruction stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction stack:76|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  984  <|@ instruction stack:64|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  986  <|@ instruction r13|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  988  <|@ instruction JUMP ~[] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" "B91" 
    successors "B95" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583985123603233036
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  992  <|@ instruction r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  994  <|@ instruction rsi|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  996  <|@ instruction rdx|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  998  <|@ instruction rax|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1000  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1002  <|@ instruction r14|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1004  <|@ st <@st|@reference-map: [stack:16, stack:32, stack:48]
live-base-pointers: []
sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 8]
locals: stack:32|QWORD[.] vobject:StringBuilder:0{count=stack:76|DWORD,value=stack:64|QWORD[.]} - 
vobject:StringBuilder:0{count=stack:76|DWORD,value=stack:64|QWORD[.]} Ljava/lang/StringBuilder; stack:76|DWORD stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8] <|@ <|@
      nr 1006  <|@ instruction JUMP ~[] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B94" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4567647422141232226
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  924  <|@ instruction stack:52|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  926  <|@ instruction stack:68|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  928  <|@ instruction r13|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  930  <|@ instruction stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  932  <|@ instruction stack:76|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  934  <|@ instruction stack:64|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  936  <|@ instruction JUMP ~[] destination: B91 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B28" 
    xhandlers
    flags 
    probability 4605142756898813177
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  258  <|@ instruction CMP r11|DWORD y: 1 size: DWORD <|@ <|@
      nr  260  <|@ instruction BRANCH trueDestinationProbability: 0.09284041465770032 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4604495887841767808
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  340  <|@ instruction r13|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  342  <|@ instruction rax|DWORD = SUB (x: r13|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  344  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  346  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B35" 
    xhandlers
    flags 
    probability 4604495887841767808
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  362  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  364  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  366  <|@ instruction CMP r11|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  368  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B30 -> B31 falseDestination: B30 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" "B33" 
    xhandlers
    flags 
    probability 4603863821012118669
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ instruction rdx|DWORD = SHL r11|DWORD size: DWORD <|@ <|@
      nr  374  <|@ instruction rdx|DWORD = LEA [rdx|DWORD + 23] size: DWORD <|@ <|@
      nr  376  <|@ instruction rdx|DWORD = AND rdx|DWORD y: -8 size: DWORD <|@ <|@
      nr  378  <|@ instruction rdx|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr  380  <|@ instruction rcx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  382  <|@ instruction CMP (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  384  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B31 -> B35 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4603806934997450246
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  394  <|@ instruction MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  396  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  398  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  400  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  402  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  404  <|@ instruction MOV (x: [rax|QWORD + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  408  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  410  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction stack:64|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" 
    successors "B55" "B38" 
    xhandlers
    flags 
    probability 4604495887841767808
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  440  <|@ instruction CMP (x: r14|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  442  <|@ instruction r11|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  444  <|@ instruction rsi|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  446  <|@ instruction CMP rsi|QWORD y: 1 size: QWORD <|@ <|@
      nr  452  <|@ instruction r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B36 -> B55 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B43" "B41" 
    xhandlers
    flags 
    probability 4599992288214397312
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  460  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  462  <|@ instruction rcx|QWORD[.] = LEA [r10|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  464  <|@ instruction r11|QWORD = LEA [rsi|QWORD - 16] size: QWORD <|@ <|@
      nr  466  <|@ instruction TEST (x: r11|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  472  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  468  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B38 -> B43 falseDestination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B38" "B41" 
    successors "B46" "B45" 
    xhandlers
    flags 
    probability 4599992288214397312
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  500  <|@ instruction r11|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  502  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  504  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B43 -> B46 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4598412121140274464
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  512  <|@ instruction xmm0|V128_WORD = H [rcx|QWORD[.] + r8|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  514  <|@ instruction J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  516  <|@ instruction r11|QWORD = LEA [r8|QWORD + 8] size: QWORD <|@ <|@
      nr  518  <|@ instruction r8|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  520  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B43" 
    successors "B49" "B48" 
    xhandlers
    flags 
    probability 4599992288214397312
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  524  <|@ instruction r11|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr  526  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  528  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B46 -> B49 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4598412121140274464
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  536  <|@ instruction xmm0|V64_WORD = H [rcx|QWORD[.] + r8|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr  538  <|@ instruction J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  540  <|@ instruction r11|QWORD = LEA [r8|QWORD + 4] size: QWORD <|@ <|@
      nr  542  <|@ instruction r8|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B46" 
    successors "B52" "B51" 
    xhandlers
    flags 
    probability 4599992288214397312
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  548  <|@ instruction r11|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr  550  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  552  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B49 -> B52 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4598412121140274464
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  560  <|@ instruction xmm0|V32_WORD = H [rcx|QWORD[.] + r8|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr  562  <|@ instruction J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  564  <|@ instruction r11|QWORD = LEA [r8|QWORD + 2] size: QWORD <|@ <|@
      nr  566  <|@ instruction r8|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  568  <|@ instruction JUMP ~[] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B49" 
    successors "B55" "B54" 
    xhandlers
    flags 
    probability 4599992288214397312
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  572  <|@ instruction r11|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  574  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  576  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B52 -> B55 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4598412121140274464
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  584  <|@ instruction rcx|DWORD = MOVSX [rcx|QWORD[.] + r8|QWORD * 2] size: DWORD <|@ <|@
      nr  586  <|@ instruction MOV (x: [rdx|QWORD[.] + r8|QWORD * 2], y: rcx|DWORD) size: WORD <|@ <|@
      nr  588  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B36" "B54" "B52" 
    successors "B56" "B75" 
    xhandlers
    flags 
    probability 4604495887841767808
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  592  <|@ instruction rdx|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  594  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  596  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B55" "B72" "B70" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4604495887841767808
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  738  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  740  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  742  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  744  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B75 -> B76 falseDestination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B78" 
    xhandlers
    flags 
    probability 4604432681158802894
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  768  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  770  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr  772  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction JUMP ~[] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B76" 
    successors 
    xhandlers
    flags 
    probability 4604495887841767808
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  778  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  780  <|@ instruction rcx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  782  <|@ instruction rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD <|@ <|@
      nr  784  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  786  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  788  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@4796bf3d encoding: base: 0 shift: 3 <|@ <|@
      nr  790  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  792  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  794  <|@ instruction rax|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" "B58" 
    xhandlers
    flags 
    probability 4599992288214397312
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  600  <|@ instruction rcx|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  602  <|@ instruction rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr  604  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD <|@ <|@
      nr  606  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  608  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B61" 
    xhandlers
    flags 
    probability 4598412121140274464
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  612  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  614  <|@ instruction JUMP ~[] destination: B57 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B57" "B59" 
    successors "B64" "B63" 
    xhandlers
    flags 
    probability 4599992288214397312
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  640  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  642  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  644  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B61 -> B64 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    probability 4598412121140274464
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  652  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  654  <|@ instruction J (address: [rcx|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  656  <|@ instruction rsi|QWORD = LEA [r11|QWORD + 8] size: QWORD <|@ <|@
      nr  658  <|@ instruction r11|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  660  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B61" 
    successors "B67" "B66" 
    xhandlers
    flags 
    probability 4599992288214397312
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  664  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD <|@ <|@
      nr  666  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  668  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B64 -> B67 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4598412121140274464
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  676  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  678  <|@ instruction J (address: [rcx|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  680  <|@ instruction rsi|QWORD = LEA [r11|QWORD + 4] size: QWORD <|@ <|@
      nr  682  <|@ instruction r11|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B64" 
    successors "B70" "B69" 
    xhandlers
    flags 
    probability 4599992288214397312
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  688  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD <|@ <|@
      nr  690  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  692  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B67 -> B70 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    probability 4598412121140274464
    begin_IR
      LIR
      nr  698  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  700  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  702  <|@ instruction J (address: [rcx|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  704  <|@ instruction rsi|QWORD = LEA [r11|QWORD + 2] size: QWORD <|@ <|@
      nr  706  <|@ instruction r11|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  708  <|@ instruction JUMP ~[] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B67" 
    successors "B75" "B72" 
    xhandlers
    flags 
    probability 4599992288214397312
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  712  <|@ instruction rdx|QWORD = DEC rdx|QWORD size: QWORD <|@ <|@
      nr  714  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  716  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B70 -> B75 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B75" 
    xhandlers
    flags 
    probability 4598412121140274464
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  724  <|@ instruction MOV (x: [rcx|QWORD[.] + r11|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr  726  <|@ instruction JUMP ~[] destination: B72 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4593346058499059860
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   66  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 48] size: QWORD <|@ <|@
      nr   68  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   70  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4593259242120700911
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   90  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 240] instr: 0 <|@ <|@
      nr   92  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   94  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593346058499059860
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   98  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction MOV [rax|QWORD[*] + 12] y: 16 size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV [rax|QWORD[*]] y: 1 size: QWORD <|@ <|@
      nr  104  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  106  <|@ instruction xmm0|V256_QWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  108  <|@ instruction J (address: [rax|QWORD[*] + 16], input: xmm0|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  110  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  112  <|@ instruction r13|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B9 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B9" "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4596096315436664365
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  272  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  274  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4596096315436664365
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  286  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  288  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  290  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  292  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596027032485203076
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  310  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  312  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 0 <|@ <|@
      nr  314  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction JUMP ~[] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors 
    xhandlers
    flags 
    probability 4596096315436664365
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  320  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  322  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction rsi|QWORD = MOV [rsi|QWORD + 168] size: QWORD <|@ <|@
      nr  326  <|@ instruction MOV (x: [rax|QWORD[*]], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  328  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  330  <|@ instruction MOV [rax|QWORD[*] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}] <|@ <|@
      nr  332  <|@ instruction MOV (x: [rax|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  334  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4590985088959656320
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  618  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  620  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  622  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B59" 
    successors "B61" "B59" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4599992288214397312
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  626  <|@ instruction J (address: [rcx|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  628  <|@ instruction r11|QWORD = LEA [r11|QWORD + 16] size: QWORD <|@ <|@
      nr  630  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  632  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B61 falseDestination: B59 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B41" 
    successors "B43" "B41" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4599992288214397312
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  484  <|@ instruction xmm0|V256_WORD = H [rcx|QWORD[.] + r8|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  486  <|@ instruction J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  488  <|@ instruction r8|QWORD = LEA [r8|QWORD + 16] size: QWORD <|@ <|@
      nr  490  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  492  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B43 falseDestination: B41 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589839373119527878
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  264  <|@ instruction r14|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction r13|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  268  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B30" "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4590176043417705421
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  420  <|@ instruction stack:64|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  428  <|@ instruction rdx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  432  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  434  <|@ st <@st|@reference-map: [stack:16, stack:48]
live-base-pointers: []
sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 8]
locals: stack:32|QWORD[.] vobject:StringBuilder:0{count=r14|DWORD,value=stack:64|QWORD[.]} - 
vobject:StringBuilder:0{count=r14|DWORD,value=stack:64|QWORD[.]} Ljava/lang/StringBuilder; r14|DWORD stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8] <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4576223698277216085
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  136  <|@ instruction stack:52|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  138  <|@ instruction r13|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  140  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  142  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  144  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr  146  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  148  <|@ st <@st|@reference-map: [stack:32, stack:48]
live-base-pointers: []
sun.reflect.generics.parser.SignatureParser.advance(SignatureParser.java:103) [bci: 36]
locals: stack:32|QWORD[.] 
sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:269) [bci: 104]
locals: stack:32|QWORD[.] vobject:StringBuilder:0{count=int[1|0x1],value=vobject:char[]:1{0=r14|DWORD,1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]}} - 
vobject:StringBuilder:0{count=int[1|0x1],value=vobject:char[]:1{0=r14|DWORD,1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]}} Ljava/lang/StringBuilder; int[1|0x1] vobject:char[]:1{0=r14|DWORD,1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} 
vobject:char[]:1{0=r14|DWORD,1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} [C r14|DWORD int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:36, 104] <|@ <|@
      nr  150  <|@ instruction rcx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction rdx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  154  <|@ instruction r8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[256]{1207963663, 1207963663, 1207963663, 1207963663, 1207963663, ...}] <|@ <|@
      nr  156  <|@ instruction r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  158  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction r14|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  162  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction JUMP ~[] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B78" 
    xhandlers
    flags 
    probability 4574740477573191933
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  748  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  752  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  754  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  756  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  758  <|@ st <@st|@reference-map: [r13:0, stack:16, stack:48]
live-base-pointers: []
sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 8]
locals: stack:32|QWORD[.] vobject:StringBuilder:0{count=r14|DWORD,value=stack:64|QWORD[.]} - 
vobject:StringBuilder:0{count=r14|DWORD,value=stack:64|QWORD[.]} Ljava/lang/StringBuilder; r14|DWORD stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8] <|@ <|@
      nr  760  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction JUMP ~[] destination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4566511040685987004
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  296  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  298  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  300  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  302  <|@ st <@st|@reference-map: [r14:0]
live-base-pointers: []
sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 92]
locals: - vobject:StringBuilder:0{count=r13|DWORD,value=r14|QWORD[.]} - 
vobject:StringBuilder:0{count=r13|DWORD,value=r14|QWORD[.]} Ljava/lang/StringBuilder; r13|DWORD r14|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:92] <|@ <|@
      nr  304  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4563199071113914713
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   76  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   78  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   80  <|@ st <@st|@reference-map: [stack:48]
live-base-pointers: []
sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:255) [bci: 0]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   82  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B139" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1354  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1356  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1358  <|@ instruction r10|DWORD = MOVE input: int[-123419|0xfffffffffffe1de5] <|@ <|@
      nr 1360  <|@ instruction JUMP ~[] destination: B136 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B19" "B138" "B137" "B17" "B83" "B85" "B87" "B136" "B29" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      LIR
      nr 1382  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1384  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1386  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1388  <|@ st <@st|@reference-map: [r11:0, r13:0]
live-base-pointers: []
sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 8]
locals: r13|QWORD[.] vobject:StringBuilder:0{count=r14|DWORD,value=r11|QWORD[.]} - 
vobject:StringBuilder:0{count=r14|DWORD,value=r11|QWORD[.]} Ljava/lang/StringBuilder; r14|DWORD r11|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:8] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B139" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1364  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1366  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1368  <|@ instruction r10|DWORD = MOVE input: int[-113939|0xfffffffffffe42ed] <|@ <|@
      nr 1370  <|@ instruction JUMP ~[] destination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B139" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  882  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  884  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  886  <|@ instruction r10|DWORD = MOVE input: int[-122899|0xfffffffffffe1fed] <|@ <|@
      nr  888  <|@ instruction JUMP ~[] destination: B87 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B139" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  350  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction r10|DWORD = MOVE input: int[-119315|0xfffffffffffe2ded] <|@ <|@
      nr  358  <|@ instruction JUMP ~[] destination: B29 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B139" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  248  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction r10|DWORD = MOVE input: int[-7187|0xffffffffffffe3ed] <|@ <|@
      nr  254  <|@ instruction JUMP ~[] destination: B19 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B142" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction r10|DWORD = MOVE input: int[-108307|0xfffffffffffe58ed] <|@ <|@
      nr   50  <|@ instruction JUMP ~[] destination: B3 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B3" "B141" "B140" "B5" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1402  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1404  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1406  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1408  <|@ st <@st|@reference-map: [stack:48]
live-base-pointers: []
sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:255) [bci: 0]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B142" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction r10|DWORD = MOVE input: int[-57619|0xffffffffffff1eed] <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B5 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B142" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1398  <|@ instruction r10|DWORD = MOVE input: int[-109083|0xfffffffffffe55e5] <|@ <|@
      nr 1400  <|@ instruction JUMP ~[] destination: B141 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B139" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  836  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  838  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  840  <|@ instruction r10|DWORD = MOVE input: int[-120347|0xfffffffffffe29e5] <|@ <|@
      nr  842  <|@ instruction JUMP ~[] destination: B83 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B139" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1374  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1376  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1378  <|@ instruction r10|DWORD = MOVE input: int[-116763|0xfffffffffffe37e5] <|@ <|@
      nr 1380  <|@ instruction JUMP ~[] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B139" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  234  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction r10|DWORD = MOVE input: int[-115987|0xfffffffffffe3aed] <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B17 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction MOV [r15|QWORD + 668] y: -125459 size: DWORD <|@ <|@
      nr  280  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  282  <|@ st <@st|@reference-map: [r14:0]
live-base-pointers: []
sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 92]
locals: - vobject:StringBuilder:0{count=r13|DWORD,value=r14|QWORD[.]} - 
vobject:StringBuilder:0{count=r13|DWORD,value=r14|QWORD[.]} Ljava/lang/StringBuilder; r13|DWORD r14|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:92] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B139" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  862  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  864  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  866  <|@ instruction r10|DWORD = MOVE input: int[-122643|0xfffffffffffe20ed] <|@ <|@
      nr  868  <|@ instruction JUMP ~[] destination: B85 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B142" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1390  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1392  <|@ instruction r10|DWORD = MOVE input: int[-106003|0xfffffffffffe61ed] <|@ <|@
      nr 1394  <|@ instruction JUMP ~[] destination: B140 -> B142 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #12         // java.lang.StringBuilder
     3: dup           
     4: invokespecial #6          // java.lang.StringBuilder.<init>:()void
     7: astore_1      
     8: aload_0       
     9: invokespecial #21         // current:()char
    12: invokestatic  #33         // java.lang.Character.isWhitespace:(char)boolean
    15: ifne          110
    18: aload_0       
    19: invokespecial #21         // current:()char
    22: istore_2      
    23: iload_2       
    24: lookupswitch  [7] {46: 92, 47: 92, 58: 92, 59: 92, 60: 92, 62: 92, 91: 92} default: 97
    92: aload_1       
    93: invokevirtual #9          // java.lang.StringBuilder.toString:()java.lang.String
    96: areturn       
    97: aload_1       
    98: iload_2       
    99: invokevirtual #34         // java.lang.StringBuilder.append:(char)java.lang.StringBuilder
   102: pop           
   103: aload_0       
   104: invokespecial #24         // advance:()void
   107: goto          8
   110: aload_1       
   111: invokevirtual #9          // java.lang.StringBuilder.toString:()java.lang.String
   114: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec4848896c24404c8bee4c896c2430418b7510448b34f50c000000418b550c443bf20f866c09000048c1e603440fbf545610450fb7da41f7c300ffffff0f85b509000049b8addeaddeaddeadde410fb7ca41b90070000045234c88104181f9004000000f84090900004183fb3a0f8d190000004183fb2e0f84b90600004183fb2f0f84af060000e9460000004183fb3c0f8d0f0000004183fb3a0f8496060000e9910600004183fb5b0f8f230000004183fb5b0f8d7d0600004183fb3c0f84730600004183fb3e0f8469060000e900000000448974242c4889742420ffc24189550c498b4f604c8d49304d3b4f700f876d0700004d894f600f1881f00000004c8bd9c7410c1000000048c70101000000c74108addeadde6644895110c5f9efc0c5fa7f41124c8961224489612a664489612e4d8bd341bb01000000660f1f440000660f1f440000443bf20f865d080000440fbf4c5610410fb7c9f7c100ffffff0f85cf070000410fb7d9bf0070000041237c981081ff004000000f843e08000083f93a0f8d1700000083f92e0f847303000083f92f0f846a030000e94000000083f93c0f8d0e00000083f93a0f8453030000e94e03000083f95b0f8f2000000083f95b0f8d3c03000083f93c0f843303000083f93e0f842a030000e900000000418b5a0c418bfbffc78bcf2bcbffc283f9010f8d21000000413bdb0f869b0700006647894c5a104189550c850500000000448bdfe92effffff8bcbd1e18d49028bc12bc785c00f4ccf83f9010f8cb5070000b8f7ffff7f2bc185c00f8c02070000413bcb0f86cb060000498b4760498b6f7081f9ffffff000f834d020000448bf141d1e6458d76174183e6f84d63f64d8bee4c03e84c3bed0f876b0200004d896f60410f188406c0000000410f18840600010000410f18840640010000410f1884068001000089480c48c70001000000c74008addeadde448bf18954241c897c240c448beb44894c240844895c24044c89542410453bf5418bce410f4fcd4863f14883fe010f8c9a0000004c8b542410488d5010498d4a104c8d56f04d85d249c7c3000000000f8d5b0100004c8d56f84d3bda0f8f13000000c4a17a6f0459c4a17a7f045a4d8d53084d8bda4c8d56fc4d3bda0f8f13000000c4a1f96e0459c4a1f97e045a4d8d53044d8bda4c8d56fe4d3bda0f8f13000000c4a1796e0459c4a1797e045a4d8d53024d8bda4c8bd649ffca4d3bda0f8f0a000000420fbf0c596642890c5a4963d6483bd60f8f440000008b54241c448b4c2408448b5c24044c8b6c24306646894c58104189550c850500000000448b5c240c4c8bd049b8addeaddeaddeadde488b742420448b74242ce972fdffff488d4c7010482bd6488d72f04885f60f8d9700000049c7c200000000488d72f84c3bd60f8f11000000c5f9efc0c4a17a7f0451498d72084c8bd6488d72fc4c3bd60f8f11000000c5f9efc0c4a1f97e0451498d72044c8bd6488d72fe4c3bd60f8f11000000c5f9efc0c4a1797e0451498d72024c8bd648ffca4c3bd20f8f3affffff6646892451e930ffffff660f1f440000c4a17e6f0459c4a17e7f045a4d8d5b104d3bda7eebe98bfeffffc5f9efc049c7c2000000006666660f1f840000000000c4a17e7f04514d8d52104c3bd67ef1e946ffffff8954241c897c240c44894c240844895c24044c89542410448beb49baaddeaddeaddeadde498bf28bd18bc1b900000000448bf0e80000000090e9ebfdffff8954241c897c240c448beb44894c240844895c24044c89542410ebc04183fb010f8c22030000458b6a0c418bc5412bc385c00f8c30040000498b4760498b77704181fbffffff000f8306030000418bd3d1e28d521783e2f84863d2488bca4803c8483bce0f87e902000049894f600f188402c00000000f188402000100000f188402400100000f188402800100004489580c48c70001000000c74008addeadde458bf34c89542410453bf5458bde450f4fdd4963f34883fe014c8b5424100f8c95000000488d5010498d4a104c8d5ef04d85db49c7c0000000000f8d4e0200004c8d5ef84d3bc30f8f13000000c4a17a6f0441c4a17a7f04424d8d58084d8bc34c8d5efc4d3bc30f8f13000000c4a1f96e0441c4a1f97e04424d8d58044d8bc34c8d5efe4d3bc30f8f13000000c4a1796e0441c4a1797e04424d8d58024d8bc34c8bde49ffcb4d3bc30f8f0a000000420fbf0c416642890c424963d6483bd60f8f5c000000498b7760488d5618493b57700f874f020000498957600f1886d800000048baaddeaddeaddeadde488bce488b92a8000000488916c74608addeadde48c1e80389460c44896610488bc1488b6c24404883c448850500000000c5f877c3488d4c7010482bd6488d72f04885f60f8d2301000049c7c300000000488d72f84c3bde0f8f11000000c5f9efc0c4a17a7f0459498d73084c8bde488d72fc4c3bde0f8f11000000c5f9efc0c4a1f97e0459498d73044c8bde488d72fe4c3bde0f8f11000000c5f9efc0c4a1797e0459498d73024c8bde48ffca4c3bda0f8f22ffffff6646892459e918ffffff498b4760488d7030493b77700f87ae010000498977600f1880f0000000488bf0c7400c1000000048c70001000000c74008addeaddec5f9efc0c5fe7f40104c8bf641bd000000004585ed0f8c49020000498b4760488d7018493b77700f873f010000498977600f1880d800000048beaddeaddeaddeadde488bd0488bb6a8000000488930c74008addeaddec7400caddeadde44896010488bc2488b6c24404883c448850500000000c5f877c3c5f9efc049c7c30000000066660f1f840000000000c4a17e7f04594d8d5b104c3bde7ef1e9bbfeffff660f1f440000660f1f440000c4a17e6f0441c4a17e7f04424d8d40104d3bc37eebe998fdffff4d8bf2458bebe941ffffff4c8954241048beaddeaddeaddeadde418bd3b900000000458bf3e80000000090e930fdffff448954241c448bea458bf348beaddeaddeaddeaddeba08000000b901000000e80000000090488bc8418bd549b8addeaddeaddeadde448b54241c488b742420448b74242c4c8b6c2430e950f8ffff4c8be848beaddeaddeaddeaddeba02000000b901000000e80000000090488bf0498bc5e994fdffff48beaddeaddeaddeaddeba02000000b901000000e80000000090e9adfeffff48beaddeaddeaddeaddeba08000000b901000000e80000000090e93efeffff458bf34d8bda41bae51dfeff4589979c0200004d89a7a8020000e80000000090458bf34d8bda41baed42feffebde458bf34d8bda41baed1ffeffebd0458bf34d8bda4c8b6c243041baed2dfeffebbd458bf34d8bda41baede3ffffebaf41baed58feff4589979c0200004d89a7a8020000e8000000009041baed1effffebe441bae555feffebdc458bf34d8bda41bae529feffe974ffffff458bf34d8bda41bae537feffe963ffffff458bf34d8bda41baed3afeffe952ffffff41c7879c020000ed15feff4d89a7a8020000e80000000090458bf34d8bda41baed20feffe929ffffff41baed61feffe975ffffffe80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@74196ce0 slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 56 10 rsi|DWORD[.] = MOV [r13|QWORD[.] + 16] size: DWORD  <||@
  Comment 60 12 r14|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 60 [rsi:0, r13:0, stack:48]at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:255) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |r13|QWORD[.]  |-  |-   <||@
  Comment 60 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 68 14 rdx|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 72 16 CMP (x: r14|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 75 18 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B141  <||@
  Comment 81 block B1 null  <||@
  Comment 81 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 81 22 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4796bf3d encoding: base: 0 shift: 3  <||@
  Comment 85 24 r10|DWORD = MOVSX [rsi|QWORD[.] + rdx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 91 26 r11|DWORD = MOVZX r10|DWORD size: DWORD  <||@
  Comment 95 28 TEST r11|DWORD y: -256 size: DWORD  <||@
  Comment 102 30 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B140  <||@
  Comment 108 block B2 null  <||@
  Comment 108 32 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 108 34 r8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[256]{1207963663, 1207963663, 1207963663, 1207963663, 1207963663, ...}]  <||@
  Comment 108 {Object[int[256]{1207963663, 1207963663, 1207963663, 1207963663, 1207963663, ...}]}  <||@
  Comment 118 36 rcx|QWORD = MOVZX r10|DWORD size: DWORD  <||@
  Comment 122 38 r9|DWORD = MOVE input: int[28672|0x7000]  <||@
  Comment 128 40 r9|DWORD = AND (x: r9|DWORD, ~y: [r8|QWORD[.] + rcx|QWORD * 4 + 16]) size: DWORD  <||@
  Comment 133 42 CMP r9|DWORD y: 16384 size: DWORD  <||@
  Comment 140 44 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 146 block B4 null  <||@
  Comment 146 52 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 146 54 AMD64HOTSPOTSTRATEGYSWITCH ~r11|DWORD - keyConstants: [int[46|0x2e], int[47|0x2f], int[58|0x3a], int[59|0x3b], int[60|0x3c], int[62|0x3e], int[91|0x5b]] keyTargets: [B4 -> B6, B4 -> B6, B4 -> B6, B4 -> B6, B4 -> B6, B4 -> B6, B4 -> B6] defaultTarget: B4 -> B10 strategy: BinaryStrategy[avgEffort=3.8795180722891565]  <||@
  Comment 251 block B10 null  <||@
  Comment 251 116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 251 118 stack:36|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 256 120 stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 261 122 rdx|DWORD = INC rdx|DWORD size: DWORD  <||@
  Comment 263 124 MOV (x: [r13|QWORD[.] + 12], y: rdx|DWORD) size: DWORD  <||@
  Comment 267 126 rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 271 128 r9|QWORD = LEA [rcx|QWORD + 48] size: QWORD  <||@
  Comment 275 130 CMP (x: r9|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 279 132 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12  <||@
  Comment 285 block B12 null  <||@
  Comment 285 166 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 285 168 MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD  <||@
  Comment 289 170 AMD64PREFETCH ~[rcx|QWORD + 240] instr: 0  <||@
  Comment 296 172 rcx|QWORD[*] = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 296 174 JUMP ~[] destination: B12 -> B13  <||@
  Comment 296 block B13 null  <||@
  Comment 296 176 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 296 178 r11|QWORD[.] = MOVE rcx|QWORD[*] moveKind: QWORD  <||@
  Comment 299 180 MOV [rcx|QWORD[*] + 12] y: 16 size: DWORD  <||@
  Comment 306 182 MOV [rcx|QWORD[*]] y: 1 size: QWORD  <||@
  Comment 313 184 MOV [rcx|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 313 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 320 186 MOV (x: [rcx|QWORD[*] + 16], y: r10|DWORD) size: WORD  <||@
  Comment 325 188 xmm0|V128_QWORD = L oc: SIMD<0,0>  <||@
  Comment 329 190 J (address: [rcx|QWORD[*] + 18], input: xmm0|V128_QWORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 334 192 MOV (x: [rcx|QWORD[*] + 34], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 338 194 MOV (x: [rcx|QWORD[*] + 42], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 342 196 MOV (x: [rcx|QWORD[*] + 46], y: r12|ILLEGAL) size: WORD  <||@
  Comment 347 198 r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 350 200 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 356 202 JUMP ~[] destination: B13 -> B14  <||@
  Comment 356 block B14 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 356 204 [] = LABEL numbPhis: 3 align: true label: ?  <||@
  Comment 368 206 CMP (x: r14|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 371 208 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B138  <||@
  Comment 377 block B15 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 377 210 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 377 212 r9|DWORD = MOVSX [rsi|QWORD[.] + rdx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 383 214 rcx|DWORD = MOVZX r9|DWORD size: DWORD  <||@
  Comment 387 216 TEST rcx|DWORD y: -256 size: DWORD  <||@
  Comment 393 218 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B137  <||@
  Comment 399 block B16 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 399 220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 399 222 rbx|QWORD = MOVZX r9|DWORD size: DWORD  <||@
  Comment 403 224 rdi|DWORD = MOVE input: int[28672|0x7000]  <||@
  Comment 408 226 rdi|DWORD = AND (x: rdi|DWORD, ~y: [r8|QWORD[.] + rbx|QWORD * 4 + 16]) size: DWORD  <||@
  Comment 413 228 CMP rdi|DWORD y: 16384 size: DWORD  <||@
  Comment 419 230 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18  <||@
  Comment 425 block B18 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 425 242 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 425 244 AMD64HOTSPOTSTRATEGYSWITCH ~rcx|DWORD - keyConstants: [int[46|0x2e], int[47|0x2f], int[58|0x3a], int[59|0x3b], int[60|0x3c], int[62|0x3e], int[91|0x5b]] keyTargets: [B18 -> B20, B18 -> B20, B18 -> B20, B18 -> B20, B18 -> B20, B18 -> B20, B18 -> B20] defaultTarget: B18 -> B80 strategy: BinaryStrategy[avgEffort=3.8795180722891565]  <||@
  Comment 521 block B80 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 521 802 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 521 804 rbx|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 525 806 rdi|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 530 808 rcx|DWORD = SUB (x: rdi|DWORD, ~y: rbx|DWORD) size: DWORD  <||@
  Comment 534 810 rdx|DWORD = INC rdx|DWORD size: DWORD  <||@
  Comment 536 812 CMP rcx|DWORD y: 1 size: DWORD  <||@
  Comment 539 814 BRANCH trueDestinationProbability: 0.9530584988351379 condition: < trueDestination: B80 -> B81 falseDestination: B80 -> B84  <||@
  Comment 545 block B81 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 545 816 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 545 818 CMP (x: rbx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 548 820 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B81 -> B82 falseDestination: B81 -> B83  <||@
  Comment 554 block B82 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 554 822 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 554 824 MOV (x: [r10|QWORD[.] + r11|DWORD * 2 + 16], y: r9|DWORD) size: WORD  <||@
  Comment 560 826 MOV (x: [r13|QWORD[.] + 12], y: rdx|DWORD) size: DWORD  <||@
  Comment 564 828 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:36, 104]  <||@
  Comment 564 [rsi:0, r8:0, r10:0, r13:0, stack:32, stack:48]at sun.reflect.generics.parser.SignatureParser.advance(SignatureParser.java:103) [bci: 36, duringCall: false, rethrow: false]
              |0            
     locals:  |r13|QWORD[.] 
  at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:269) [bci: 104, duringCall: true, rethrow: false]
              |0             |1                                                            |2 
     locals:  |r13|QWORD[.]  |vobject:StringBuilder:0{count=rdi|DWORD,value=r10|QWORD[.]}  |-   <||@
  Comment 564 {infopoint: SAFEPOINT}  <||@
  Comment 564 11  <||@
  Comment 570 830 r11|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 573 832 JUMP ~[] destination: B82 -> B14  <||@
  Comment 578 block B84 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 578 844 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 578 846 rcx|DWORD = SHL rbx|DWORD size: DWORD  <||@
  Comment 582 848 rcx|DWORD = LEA [rcx|DWORD + 2] size: DWORD  <||@
  Comment 585 850 rax|DWORD = SUB (x: rcx|DWORD, ~y: rdi|DWORD) size: DWORD  <||@
  Comment 589 852 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 591 854 rcx|DWORD = CMOVE (falseValue: rcx|DWORD, ~trueValue: rdi|DWORD) condition: <  <||@
  Comment 594 856 CMP rcx|DWORD y: 1 size: DWORD  <||@
  Comment 597 858 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B84 -> B85 falseDestination: B84 -> B86  <||@
  Comment 603 block B86 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 603 870 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 603 872 rax|DWORD = MOVE input: int[2147483639|0x7ffffff7]  <||@
  Comment 608 874 rax|DWORD = SUB (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 610 876 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 612 878 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B86 -> B87 falseDestination: B86 -> B88  <||@
  Comment 618 block B88 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 618 890 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 618 892 CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 621 894 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B88 -> B89 falseDestination: B88 -> B136  <||@
  Comment 627 block B89 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 627 896 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 627 898 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 631 900 rbp|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 635 902 CMP rcx|DWORD y: 16777215 size: DWORD  <||@
  Comment 641 904 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B89 -> B90 falseDestination: B89 -> B93  <||@
  Comment 647 block B90 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 647 906 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 647 908 r14|DWORD = SHL rcx|DWORD size: DWORD  <||@
  Comment 653 910 r14|DWORD = LEA [r14|DWORD + 23] size: DWORD  <||@
  Comment 657 912 r14|DWORD = AND r14|DWORD y: -8 size: DWORD  <||@
  Comment 661 914 r14|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 664 916 r13|QWORD = ADD (x: r14|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 670 918 CMP (x: r13|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 673 920 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B90 -> B91 falseDestination: B90 -> B92  <||@
  Comment 679 block B92 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 679 938 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 679 940 MOV (x: [r15|QWORD + 96], y: r13|QWORD) size: QWORD  <||@
  Comment 683 942 AMD64PREFETCH ~[r14|QWORD + rax|QWORD * 1 + 192] instr: 0  <||@
  Comment 692 944 AMD64PREFETCH ~[r14|QWORD + rax|QWORD * 1 + 256] instr: 0  <||@
  Comment 701 946 AMD64PREFETCH ~[r14|QWORD + rax|QWORD * 1 + 320] instr: 0  <||@
  Comment 710 948 AMD64PREFETCH ~[r14|QWORD + rax|QWORD * 1 + 384] instr: 0  <||@
  Comment 719 950 MOV (x: [rax|QWORD + 12], y: rcx|DWORD) size: DWORD  <||@
  Comment 722 952 MOV [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 729 954 MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 729 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 736 956 rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 736 958 r14|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 739 960 stack:52|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 743 962 stack:68|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 747 964 r13|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 750 966 stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 755 968 stack:76|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 760 970 stack:64|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 765 972 JUMP ~[] destination: B92 -> B95  <||@
  Comment 765 block B95 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 765 1008 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 765 1010 CMP (x: r14|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 768 1012 rcx|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: r13|DWORD) condition: >  <||@
  Comment 775 1014 rsi|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 778 1016 CMP rsi|QWORD y: 1 size: QWORD  <||@
  Comment 782 1018 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B95 -> B114 falseDestination: B95 -> B97  <||@
  Comment 788 block B97 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 788 1024 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 788 1026 r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 793 1028 rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 797 1030 rcx|QWORD[.] = LEA [r10|QWORD[.] + 16] size: QWORD  <||@
  Comment 801 1032 r10|QWORD = LEA [rsi|QWORD - 16] size: QWORD  <||@
  Comment 805 1034 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 808 1040 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 815 1036 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B97 -> B102 falseDestination: B97 -> B100  <||@
  Comment 821 block B102 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 821 1066 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 821 1068 r10|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 825 1070 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 828 1072 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B102 -> B105 falseDestination: B102 -> B104  <||@
  Comment 834 block B104 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 834 1078 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 834 1080 xmm0|V128_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 840 1082 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 846 1084 r10|QWORD = LEA [r11|QWORD + 8] size: QWORD  <||@
  Comment 850 1086 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 853 1088 JUMP ~[] destination: B104 -> B105  <||@
  Comment 853 block B105 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 853 1090 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 853 1092 r10|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 857 1094 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 860 1096 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B105 -> B108 falseDestination: B105 -> B107  <||@
  Comment 866 block B107 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 866 1102 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 866 1104 xmm0|V64_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 872 1106 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 878 1108 r10|QWORD = LEA [r11|QWORD + 4] size: QWORD  <||@
  Comment 882 1110 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 885 1112 JUMP ~[] destination: B107 -> B108  <||@
  Comment 885 block B108 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 885 1114 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 885 1116 r10|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 889 1118 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 892 1120 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B108 -> B111 falseDestination: B108 -> B110  <||@
  Comment 898 block B110 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 898 1126 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 898 1128 xmm0|V32_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 904 1130 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 910 1132 r10|QWORD = LEA [r11|QWORD + 2] size: QWORD  <||@
  Comment 914 1134 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 917 1136 JUMP ~[] destination: B110 -> B111  <||@
  Comment 917 block B111 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 917 1138 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 917 1140 r10|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 923 1142 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 926 1144 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B111 -> B114 falseDestination: B111 -> B113  <||@
  Comment 932 block B113 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 932 1150 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 932 1152 rcx|DWORD = MOVSX [rcx|QWORD[.] + r11|QWORD * 2] size: DWORD  <||@
  Comment 937 1154 MOV (x: [rdx|QWORD[.] + r11|QWORD * 2], y: rcx|DWORD) size: WORD  <||@
  Comment 942 1156 JUMP ~[] destination: B113 -> B114  <||@
  Comment 942 block B114 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 942 1158 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 942 1160 rdx|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 945 1162 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 948 1164 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B114 -> B115 falseDestination: B114 -> B134  <||@
  Comment 954 block B134 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 954 1328 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 954 1318 rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 958 1320 r9|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 963 1322 r11|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 968 1324 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 973 1330 MOV (x: [rax|QWORD[.] + r11|DWORD * 2 + 16], y: r9|DWORD) size: WORD  <||@
  Comment 979 1332 MOV (x: [r13|QWORD[.] + 12], y: rdx|DWORD) size: DWORD  <||@
  Comment 983 1334 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:36, 104]  <||@
  Comment 983 [rax:0, r13:0, stack:32, stack:48]at sun.reflect.generics.parser.SignatureParser.advance(SignatureParser.java:103) [bci: 36, duringCall: false, rethrow: false]
              |0            
     locals:  |r13|QWORD[.] 
  at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:269) [bci: 104, duringCall: true, rethrow: false]
              |0             |1                                                                 |2 
     locals:  |r13|QWORD[.]  |vobject:StringBuilder:0{count=stack:68|DWORD,value=rax|QWORD[.]}  |-   <||@
  Comment 983 {infopoint: SAFEPOINT}  <||@
  Comment 983 11  <||@
  Comment 989 1336 r11|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 994 1338 r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 997 1340 r8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[256]{1207963663, 1207963663, 1207963663, 1207963663, 1207963663, ...}]  <||@
  Comment 997 {Object[int[256]{1207963663, 1207963663, 1207963663, 1207963663, 1207963663, ...}]}  <||@
  Comment 1007 1342 rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1012 1344 r14|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1017 1346 JUMP ~[] destination: B134 -> B14  <||@
  Comment 1022 block B115 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 1022 1166 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1022 1168 rcx|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 1027 1170 rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD  <||@
  Comment 1030 1172 rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD  <||@
  Comment 1034 1174 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1037 1176 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B115 -> B116 falseDestination: B115 -> B117  <||@
  Comment 1043 block B116 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 1043 1178 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1043 1180 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1050 1182 JUMP ~[] destination: B116 -> B120  <||@
  Comment 1050 block B120 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 1050 1206 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1050 1208 rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 1054 1210 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1057 1212 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B120 -> B123 falseDestination: B120 -> B122  <||@
  Comment 1063 block B122 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 1063 1218 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1063 1220 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 1067 1222 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 1073 1224 rsi|QWORD = LEA [r10|QWORD + 8] size: QWORD  <||@
  Comment 1077 1226 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1080 1228 JUMP ~[] destination: B122 -> B123  <||@
  Comment 1080 block B123 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 1080 1230 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1080 1232 rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD  <||@
  Comment 1084 1234 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1087 1236 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B123 -> B126 falseDestination: B123 -> B125  <||@
  Comment 1093 block B125 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 1093 1242 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1093 1244 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 1097 1246 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 1103 1248 rsi|QWORD = LEA [r10|QWORD + 4] size: QWORD  <||@
  Comment 1107 1250 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1110 1252 JUMP ~[] destination: B125 -> B126  <||@
  Comment 1110 block B126 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 1110 1254 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1110 1256 rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD  <||@
  Comment 1114 1258 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1117 1260 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B126 -> B129 falseDestination: B126 -> B128  <||@
  Comment 1123 block B128 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 1123 1266 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1123 1268 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 1127 1270 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 1133 1272 rsi|QWORD = LEA [r10|QWORD + 2] size: QWORD  <||@
  Comment 1137 1274 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1140 1276 JUMP ~[] destination: B128 -> B129  <||@
  Comment 1140 block B129 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 1140 1278 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1140 1280 rdx|QWORD = DEC rdx|QWORD size: QWORD  <||@
  Comment 1143 1282 CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1146 1284 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B129 -> B134 falseDestination: B129 -> B131  <||@
  Comment 1152 block B131 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 1152 1298 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1152 1300 MOV (x: [rcx|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 1157 1310 JUMP ~[] destination: B131 -> B134  <||@
  Comment 1162 block B100 loop 3 depth 2 outer 0 header:1135|LoopBegin  <||@
  Comment 1162 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1168 1052 xmm0|V256_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 1174 1054 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1180 1056 r11|QWORD = LEA [r11|QWORD + 16] size: QWORD  <||@
  Comment 1184 1058 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1187 1060 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B100 -> B102 falseDestination: B100 -> B100  <||@
  Comment 1194 block B117 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 1194 1184 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1194 1186 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 1198 1188 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1205 1190 JUMP ~[] destination: B117 -> B118  <||@
  Comment 1205 block B118 loop 4 depth 2 outer 0 header:1199|LoopBegin  <||@
  Comment 1205 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1216 1194 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1222 1196 r10|QWORD = LEA [r10|QWORD + 16] size: QWORD  <||@
  Comment 1226 1198 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1229 1200 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B118 -> B120 falseDestination: B118 -> B118  <||@
  Comment 1236 block B93 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 1236 974 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1236 976 stack:52|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1240 978 stack:68|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1244 980 stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1249 982 stack:76|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1254 984 stack:64|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1259 986 r13|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1262 988 JUMP ~[] destination: B93 -> B94  <||@
  Comment 1262 block B94 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 1262 990 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1262 992 r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 1262 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 1272 994 rsi|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1275 996 rdx|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1277 998 rax|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1279 1000 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1284 1002 r14|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1287 1004 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8]  <||@
  Comment 1287 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1292 [stack:16, stack:32, stack:48]at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1                                                                      |2 
     locals:  |stack:32|QWORD[.]  |vobject:StringBuilder:0{count=stack:76|DWORD,value=stack:64|QWORD[.]}  |-   <||@
  Comment 1293 1006 JUMP ~[] destination: B94 -> B95  <||@
  Comment 1298 block B91 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 1298 922 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1298 924 stack:52|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1302 926 stack:68|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1306 928 r13|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1309 930 stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1314 932 stack:76|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1319 934 stack:64|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1324 936 JUMP ~[] destination: B91 -> B94  <||@
  Comment 1326 block B20 null  <||@
  Comment 1326 256 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1326 258 CMP r11|DWORD y: 1 size: DWORD  <||@
  Comment 1330 260 BRANCH trueDestinationProbability: 0.09284041465770032 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B28  <||@
  Comment 1336 block B28 null  <||@
  Comment 1336 338 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1336 340 r13|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 1340 342 rax|DWORD = SUB (x: r13|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 1346 344 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1348 346 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30  <||@
  Comment 1354 block B30 null  <||@
  Comment 1354 360 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1354 362 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1358 364 rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 1362 366 CMP r11|DWORD y: 16777215 size: DWORD  <||@
  Comment 1369 368 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B30 -> B31 falseDestination: B30 -> B35  <||@
  Comment 1375 block B31 null  <||@
  Comment 1375 370 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1375 372 rdx|DWORD = SHL r11|DWORD size: DWORD  <||@
  Comment 1380 374 rdx|DWORD = LEA [rdx|DWORD + 23] size: DWORD  <||@
  Comment 1383 376 rdx|DWORD = AND rdx|DWORD y: -8 size: DWORD  <||@
  Comment 1386 378 rdx|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 1389 380 rcx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 1395 382 CMP (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1398 384 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B31 -> B35 falseDestination: B31 -> B33  <||@
  Comment 1404 block B33 null  <||@
  Comment 1404 392 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1404 394 MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD  <||@
  Comment 1408 396 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 192] instr: 0  <||@
  Comment 1416 398 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 256] instr: 0  <||@
  Comment 1424 400 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 320] instr: 0  <||@
  Comment 1432 402 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 384] instr: 0  <||@
  Comment 1440 404 MOV (x: [rax|QWORD + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 1444 406 MOV [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 1451 408 MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 1451 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 1458 410 rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 1458 412 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1461 414 stack:64|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1466 416 JUMP ~[] destination: B33 -> B36  <||@
  Comment 1466 block B36 null  <||@
  Comment 1466 438 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1466 440 CMP (x: r14|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 1469 442 r11|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: r13|DWORD) condition: >  <||@
  Comment 1476 444 rsi|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 1479 446 CMP rsi|QWORD y: 1 size: QWORD  <||@
  Comment 1483 452 r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1488 448 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B36 -> B55 falseDestination: B36 -> B38  <||@
  Comment 1494 block B38 null  <||@
  Comment 1494 456 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1494 460 rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 1498 462 rcx|QWORD[.] = LEA [r10|QWORD[.] + 16] size: QWORD  <||@
  Comment 1502 464 r11|QWORD = LEA [rsi|QWORD - 16] size: QWORD  <||@
  Comment 1506 466 TEST (x: r11|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1509 472 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1516 468 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B38 -> B43 falseDestination: B38 -> B41  <||@
  Comment 1522 block B43 null  <||@
  Comment 1522 498 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1522 500 r11|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 1526 502 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1529 504 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B43 -> B46 falseDestination: B43 -> B45  <||@
  Comment 1535 block B45 null  <||@
  Comment 1535 510 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1535 512 xmm0|V128_WORD = H [rcx|QWORD[.] + r8|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 1541 514 J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 1547 516 r11|QWORD = LEA [r8|QWORD + 8] size: QWORD  <||@
  Comment 1551 518 r8|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1554 520 JUMP ~[] destination: B45 -> B46  <||@
  Comment 1554 block B46 null  <||@
  Comment 1554 522 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1554 524 r11|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 1558 526 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1561 528 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B46 -> B49 falseDestination: B46 -> B48  <||@
  Comment 1567 block B48 null  <||@
  Comment 1567 534 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1567 536 xmm0|V64_WORD = H [rcx|QWORD[.] + r8|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 1573 538 J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 1579 540 r11|QWORD = LEA [r8|QWORD + 4] size: QWORD  <||@
  Comment 1583 542 r8|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1586 544 JUMP ~[] destination: B48 -> B49  <||@
  Comment 1586 block B49 null  <||@
  Comment 1586 546 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1586 548 r11|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 1590 550 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1593 552 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B49 -> B52 falseDestination: B49 -> B51  <||@
  Comment 1599 block B51 null  <||@
  Comment 1599 558 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1599 560 xmm0|V32_WORD = H [rcx|QWORD[.] + r8|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 1605 562 J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 1611 564 r11|QWORD = LEA [r8|QWORD + 2] size: QWORD  <||@
  Comment 1615 566 r8|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1618 568 JUMP ~[] destination: B51 -> B52  <||@
  Comment 1618 block B52 null  <||@
  Comment 1618 570 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1618 572 r11|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 1624 574 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1627 576 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B52 -> B55 falseDestination: B52 -> B54  <||@
  Comment 1633 block B54 null  <||@
  Comment 1633 582 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1633 584 rcx|DWORD = MOVSX [rcx|QWORD[.] + r8|QWORD * 2] size: DWORD  <||@
  Comment 1638 586 MOV (x: [rdx|QWORD[.] + r8|QWORD * 2], y: rcx|DWORD) size: WORD  <||@
  Comment 1643 588 JUMP ~[] destination: B54 -> B55  <||@
  Comment 1643 block B55 null  <||@
  Comment 1643 590 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1643 592 rdx|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 1646 594 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1649 596 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B75  <||@
  Comment 1655 block B75 null  <||@
  Comment 1655 736 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1655 738 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1659 740 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 1663 742 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1667 744 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B75 -> B76 falseDestination: B75 -> B77  <||@
  Comment 1673 block B77 null  <||@
  Comment 1673 766 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1673 768 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 1677 770 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 1684 772 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1684 774 JUMP ~[] destination: B77 -> B78  <||@
  Comment 1684 block B78 null  <||@
  Comment 1684 776 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1684 778 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 1684 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 1694 780 rcx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1697 782 rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD  <||@
  Comment 1704 784 MOV (x: [rsi|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 1707 786 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 1707 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 1714 788 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@4796bf3d encoding: base: 0 shift: 3  <||@
  Comment 1718 790 MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 1721 792 MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 1725 794 rax|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1728 796 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1737 12  <||@
  Comment 1747 block B56 null  <||@
  Comment 1747 598 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1747 600 rcx|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 1752 602 rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD  <||@
  Comment 1755 604 rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD  <||@
  Comment 1759 606 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1762 608 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B56 -> B57 falseDestination: B56 -> B58  <||@
  Comment 1768 block B57 null  <||@
  Comment 1768 610 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1768 612 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1775 614 JUMP ~[] destination: B57 -> B61  <||@
  Comment 1775 block B61 null  <||@
  Comment 1775 638 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1775 640 rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 1779 642 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1782 644 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B61 -> B64 falseDestination: B61 -> B63  <||@
  Comment 1788 block B63 null  <||@
  Comment 1788 650 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1788 652 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 1792 654 J (address: [rcx|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 1798 656 rsi|QWORD = LEA [r11|QWORD + 8] size: QWORD  <||@
  Comment 1802 658 r11|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1805 660 JUMP ~[] destination: B63 -> B64  <||@
  Comment 1805 block B64 null  <||@
  Comment 1805 662 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1805 664 rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD  <||@
  Comment 1809 666 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1812 668 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B64 -> B67 falseDestination: B64 -> B66  <||@
  Comment 1818 block B66 null  <||@
  Comment 1818 674 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1818 676 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 1822 678 J (address: [rcx|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 1828 680 rsi|QWORD = LEA [r11|QWORD + 4] size: QWORD  <||@
  Comment 1832 682 r11|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1835 684 JUMP ~[] destination: B66 -> B67  <||@
  Comment 1835 block B67 null  <||@
  Comment 1835 686 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1835 688 rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD  <||@
  Comment 1839 690 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1842 692 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B67 -> B70 falseDestination: B67 -> B69  <||@
  Comment 1848 block B69 null  <||@
  Comment 1848 698 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1848 700 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 1852 702 J (address: [rcx|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 1858 704 rsi|QWORD = LEA [r11|QWORD + 2] size: QWORD  <||@
  Comment 1862 706 r11|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1865 708 JUMP ~[] destination: B69 -> B70  <||@
  Comment 1865 block B70 null  <||@
  Comment 1865 710 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1865 712 rdx|QWORD = DEC rdx|QWORD size: QWORD  <||@
  Comment 1868 714 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1871 716 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B70 -> B75 falseDestination: B70 -> B72  <||@
  Comment 1877 block B72 null  <||@
  Comment 1877 722 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1877 724 MOV (x: [rcx|QWORD[.] + r11|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 1882 726 JUMP ~[] destination: B72 -> B75  <||@
  Comment 1887 block B6 null  <||@
  Comment 1887 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1887 64 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1891 66 rsi|QWORD = LEA [rax|QWORD + 48] size: QWORD  <||@
  Comment 1895 68 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1899 70 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 1905 block B8 null  <||@
  Comment 1905 86 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1905 88 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 1909 90 AMD64PREFETCH ~[rax|QWORD + 240] instr: 0  <||@
  Comment 1916 92 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 1916 94 JUMP ~[] destination: B8 -> B9  <||@
  Comment 1916 block B9 null  <||@
  Comment 1916 96 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1916 98 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 1919 100 MOV [rax|QWORD[*] + 12] y: 16 size: DWORD  <||@
  Comment 1926 102 MOV [rax|QWORD[*]] y: 1 size: QWORD  <||@
  Comment 1933 104 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 1933 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 1940 106 xmm0|V256_QWORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 1944 108 J (address: [rax|QWORD[*] + 16], input: xmm0|V256_QWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1949 110 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1952 112 r13|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1958 114 JUMP ~[] destination: B9 -> B22  <||@
  Comment 1958 block B22 null  <||@
  Comment 1958 270 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1958 272 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 1961 274 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B22 -> B23 falseDestination: B22 -> B24  <||@
  Comment 1967 block B24 null  <||@
  Comment 1967 284 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1967 286 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1971 288 rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD  <||@
  Comment 1975 290 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1979 292 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B26  <||@
  Comment 1985 block B26 null  <||@
  Comment 1985 308 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1985 310 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 1989 312 AMD64PREFETCH ~[rax|QWORD + 216] instr: 0  <||@
  Comment 1996 314 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 1996 316 JUMP ~[] destination: B26 -> B27  <||@
  Comment 1996 block B27 null  <||@
  Comment 1996 318 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1996 320 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 1996 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 2006 322 rdx|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 2009 324 rsi|QWORD = MOV [rsi|QWORD + 168] size: QWORD  <||@
  Comment 2016 326 MOV (x: [rax|QWORD[*]], y: rsi|QWORD) size: QWORD  <||@
  Comment 2019 328 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 2019 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 2026 330 MOV [rax|QWORD[*] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}]  <||@
  Comment 2026 {NarrowOop[char[0]{}]}  <||@
  Comment 2033 332 MOV (x: [rax|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 2037 334 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2040 336 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 2049 12  <||@
  Comment 2059 block B58 null  <||@
  Comment 2059 616 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2059 618 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 2063 620 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2070 622 JUMP ~[] destination: B58 -> B59  <||@
  Comment 2070 block B59 loop 2 depth 1 header:1325|LoopBegin  <||@
  Comment 2070 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 2080 626 J (address: [rcx|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 2086 628 r11|QWORD = LEA [r11|QWORD + 16] size: QWORD  <||@
  Comment 2090 630 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 2093 632 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B61 falseDestination: B59 -> B59  <||@
  Comment 2100 block B41 loop 1 depth 1 header:1262|LoopBegin  <||@
  Comment 2100 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 2112 484 xmm0|V256_WORD = H [rcx|QWORD[.] + r8|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 2118 486 J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 2124 488 r8|QWORD = LEA [r8|QWORD + 16] size: QWORD  <||@
  Comment 2128 490 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 2131 492 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B43 falseDestination: B41 -> B41  <||@
  Comment 2138 block B21 null  <||@
  Comment 2138 262 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2138 264 r14|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2141 266 r13|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2144 268 JUMP ~[] destination: B21 -> B22  <||@
  Comment 2149 block B35 null  <||@
  Comment 2149 424 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2149 420 stack:64|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2154 426 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 2154 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 2164 428 rdx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2167 430 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2172 432 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2175 434 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8]  <||@
  Comment 2175 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2180 [stack:16, stack:48]at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1                                                                 |2 
     locals:  |stack:32|QWORD[.]  |vobject:StringBuilder:0{count=r14|DWORD,value=stack:64|QWORD[.]}  |-   <||@
  Comment 2181 436 JUMP ~[] destination: B35 -> B36  <||@
  Comment 2186 block B11 null  <||@
  Comment 2186 134 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2186 136 stack:52|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2191 138 r13|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2194 140 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2197 142 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 2197 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 2207 144 rdx|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 2212 146 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2217 148 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:36, 104]  <||@
  Comment 2217 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2222 [stack:32, stack:48]at sun.reflect.generics.parser.SignatureParser.advance(SignatureParser.java:103) [bci: 36, duringCall: false, rethrow: false]
              |0                 
     locals:  |stack:32|QWORD[.] 
  at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:269) [bci: 104, duringCall: true, rethrow: false]
              |0                  |1                                                                                                                                                                                                                                                                                       |2 
     locals:  |stack:32|QWORD[.]  |vobject:StringBuilder:0{count=int[1|0x1],value=vobject:char[]:1{0=r14|DWORD,1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]}}  |-   <||@
  Comment 2223 150 rcx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2226 152 rdx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2229 154 r8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[256]{1207963663, 1207963663, 1207963663, 1207963663, 1207963663, ...}]  <||@
  Comment 2229 {Object[int[256]{1207963663, 1207963663, 1207963663, 1207963663, 1207963663, ...}]}  <||@
  Comment 2239 156 r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 2244 158 rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2249 160 r14|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2254 162 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2259 164 JUMP ~[] destination: B11 -> B13  <||@
  Comment 2264 block B76 null  <||@
  Comment 2264 746 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2264 748 r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2267 752 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 2267 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 2277 754 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 2282 756 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2287 758 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8]  <||@
  Comment 2287 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2292 [r13:0, stack:16, stack:48]at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1                                                                 |2 
     locals:  |stack:32|QWORD[.]  |vobject:StringBuilder:0{count=r14|DWORD,value=stack:64|QWORD[.]}  |-   <||@
  Comment 2293 760 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2296 762 rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2299 764 JUMP ~[] destination: B76 -> B78  <||@
  Comment 2304 block B25 null  <||@
  Comment 2304 294 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2304 296 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 2304 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 2314 298 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 2319 300 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2324 302 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:92]  <||@
  Comment 2324 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2329 [r14:0]at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 92, duringCall: false, rethrow: false]
              |0  |1                                                            |2 
     locals:  |-  |vobject:StringBuilder:0{count=r13|DWORD,value=r14|QWORD[.]}  |-   <||@
  Comment 2330 304 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2330 306 JUMP ~[] destination: B25 -> B27  <||@
  Comment 2335 block B7 null  <||@
  Comment 2335 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2335 74 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 2335 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 2345 76 rdx|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 2350 78 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2355 80 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 2355 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2360 [stack:48]at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:255) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |-   <||@
  Comment 2361 82 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2361 84 JUMP ~[] destination: B7 -> B9  <||@
  Comment 2366 block B136 null  <||@
  Comment 2366 1352 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2366 1354 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2369 1356 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2372 1358 r10|DWORD = MOVE input: int[-123419|0xfffffffffffe1de5]  <||@
  Comment 2378 1360 JUMP ~[] destination: B136 -> B139  <||@
  Comment 2378 block B139 null  <||@
  Comment 2378 1382 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2378 1384 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2385 1386 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2392 1388 DEOPT info [bci:8]  <||@
  Comment 2392 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2397 [r11:0, r13:0]at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 8, duringCall: false, rethrow: false]
              |0             |1                                                            |2 
     locals:  |r13|QWORD[.]  |vobject:StringBuilder:0{count=r14|DWORD,value=r11|QWORD[.]}  |-   <||@
  Comment 2398 block B137 null  <||@
  Comment 2398 1362 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2398 1364 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2401 1366 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2404 1368 r10|DWORD = MOVE input: int[-113939|0xfffffffffffe42ed]  <||@
  Comment 2410 1370 JUMP ~[] destination: B137 -> B139  <||@
  Comment 2412 block B87 null  <||@
  Comment 2412 880 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2412 882 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2415 884 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2418 886 r10|DWORD = MOVE input: int[-122899|0xfffffffffffe1fed]  <||@
  Comment 2424 888 JUMP ~[] destination: B87 -> B139  <||@
  Comment 2426 block B29 null  <||@
  Comment 2426 348 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2426 350 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2429 352 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2432 354 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2437 356 r10|DWORD = MOVE input: int[-119315|0xfffffffffffe2ded]  <||@
  Comment 2443 358 JUMP ~[] destination: B29 -> B139  <||@
  Comment 2445 block B19 null  <||@
  Comment 2445 246 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2445 248 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2448 250 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2451 252 r10|DWORD = MOVE input: int[-7187|0xffffffffffffe3ed]  <||@
  Comment 2457 254 JUMP ~[] destination: B19 -> B139  <||@
  Comment 2459 block B3 null  <||@
  Comment 2459 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2459 48 r10|DWORD = MOVE input: int[-108307|0xfffffffffffe58ed]  <||@
  Comment 2465 50 JUMP ~[] destination: B3 -> B142  <||@
  Comment 2465 block B142 null  <||@
  Comment 2465 1402 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2465 1404 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2472 1406 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2479 1408 DEOPT info [bci:0]  <||@
  Comment 2479 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2484 [stack:48]at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:255) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |-   <||@
  Comment 2485 block B5 null  <||@
  Comment 2485 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2485 58 r10|DWORD = MOVE input: int[-57619|0xffffffffffff1eed]  <||@
  Comment 2491 60 JUMP ~[] destination: B5 -> B142  <||@
  Comment 2493 block B141 null  <||@
  Comment 2493 1396 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2493 1398 r10|DWORD = MOVE input: int[-109083|0xfffffffffffe55e5]  <||@
  Comment 2499 1400 JUMP ~[] destination: B141 -> B142  <||@
  Comment 2501 block B83 null  <||@
  Comment 2501 834 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2501 836 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2504 838 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2507 840 r10|DWORD = MOVE input: int[-120347|0xfffffffffffe29e5]  <||@
  Comment 2513 842 JUMP ~[] destination: B83 -> B139  <||@
  Comment 2518 block B138 null  <||@
  Comment 2518 1372 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2518 1374 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2521 1376 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2524 1378 r10|DWORD = MOVE input: int[-116763|0xfffffffffffe37e5]  <||@
  Comment 2530 1380 JUMP ~[] destination: B138 -> B139  <||@
  Comment 2535 block B17 null  <||@
  Comment 2535 232 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2535 234 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2538 236 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2541 238 r10|DWORD = MOVE input: int[-115987|0xfffffffffffe3aed]  <||@
  Comment 2547 240 JUMP ~[] destination: B17 -> B139  <||@
  Comment 2552 block B23 null  <||@
  Comment 2552 276 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2552 278 MOV [r15|QWORD + 668] y: -125459 size: DWORD  <||@
  Comment 2563 280 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2570 282 DEOPT info [bci:92]  <||@
  Comment 2570 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2575 [r14:0]at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 92, duringCall: false, rethrow: false]
              |0  |1                                                            |2 
     locals:  |-  |vobject:StringBuilder:0{count=r13|DWORD,value=r14|QWORD[.]}  |-   <||@
  Comment 2576 block B85 null  <||@
  Comment 2576 860 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2576 862 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2579 864 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2582 866 r10|DWORD = MOVE input: int[-122643|0xfffffffffffe20ed]  <||@
  Comment 2588 868 JUMP ~[] destination: B85 -> B139  <||@
  Comment 2593 block B140 null  <||@
  Comment 2593 1390 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2593 1392 r10|DWORD = MOVE input: int[-106003|0xfffffffffffe61ed]  <||@
  Comment 2599 1394 JUMP ~[] destination: B140 -> B142  <||@
  Comment 2604 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2604 4  <||@
  Comment 2610 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 2610 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9792[sun.reflect.generics.parser.SignatureParser.parseIdentifier()]"
  method "HotSpotCompilation-9792[sun.reflect.generics.parser.SignatureParser.parseIdentifier()]"
  date 1527005222081
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107c17780 448b560849c1e203493bc20f85cfe6befe900f1f80000000000f1f800000000089842400c0feff4883ec4848896c24404c8bee4c896c2430418b7510448b34f50c000000418b550c443bf20f866c09000048c1e603440fbf545610450fb7da41f7c300ffffff0f85b509000049b8600400c006000000410fb7ca41b90070000045234c88104181f9004000000f84090900004183fb3a0f8d190000004183fb2e0f84b90600004183fb2f0f84af060000e9460000004183fb3c0f8d0f0000004183fb3a0f8496060000e9910600004183fb5b0f8f230000004183fb5b0f8d7d0600004183fb3c0f84730600004183fb3e0f8469060000e900000000448974242c4889742420ffc24189550c498b4f604c8d49304d3b4f700f876d0700004d894f600f1881f00000004c8bd9c7410c1000000048c70101000000c74108410000f86644895110c5f9efc0c5fa7f41124c8961224489612a664489612e4d8bd341bb01000000660f1f440000660f1f440000443bf20f865d080000440fbf4c5610410fb7c9f7c100ffffff0f85cf070000410fb7d9bf0070000041237c981081ff004000000f843e08000083f93a0f8d1700000083f92e0f847303000083f92f0f846a030000e94000000083f93c0f8d0e00000083f93a0f8453030000e94e03000083f95b0f8f2000000083f95b0f8d3c03000083f93c0f843303000083f93e0f842a030000e900000000418b5a0c418bfbffc78bcf2bcbffc283f9010f8d21000000413bdb0f869b0700006647894c5a104189550c85054c76c7fc448bdfe92effffff8bcbd1e18d49028bc12bc785c00f4ccf83f9010f8cb5070000b8f7ffff7f2bc185c00f8c02070000413bcb0f86cb060000498b4760498b6f7081f9ffffff000f834d020000448bf141d1e6458d76174183e6f84d63f64d8bee4c03e84c3bed0f876b0200004d896f60410f188406c0000000410f18840600010000410f18840640010000410f1884068001000089480c48c70001000000c74008410000f8448bf18954241c897c240c448beb44894c240844895c24044c89542410453bf5418bce410f4fcd4863f14883fe010f8c9a0000004c8b542410488d5010498d4a104c8d56f04d85d249c7c3000000000f8d5b0100004c8d56f84d3bda0f8f13000000c4a17a6f0459c4a17a7f045a4d8d53084d8bda4c8d56fc4d3bda0f8f13000000c4a1f96e0459c4a1f97e045a4d8d53044d8bda4c8d56fe4d3bda0f8f13000000c4a1796e0459c4a1797e045a4d8d53024d8bda4c8bd649ffca4d3bda0f8f0a000000420fbf0c596642890c5a4963d6483bd60f8f440000008b54241c448b4c2408448b5c24044c8b6c24306646894c58104189550c8505a974c7fc448b5c240c4c8bd049b8600400c006000000488b742420448b74242ce972fdffff488d4c7010482bd6488d72f04885f60f8d9700000049c7c200000000488d72f84c3bd60f8f11000000c5f9efc0c4a17a7f0451498d72084c8bd6488d72fc4c3bd60f8f11000000c5f9efc0c4a1f97e0451498d72044c8bd6488d72fe4c3bd60f8f11000000c5f9efc0c4a1797e0451498d72024c8bd648ffca4c3bd20f8f3affffff6646892451e930ffffff660f1f440000c4a17e6f0459c4a17e7f045a4d8d5b104d3bda7eebe98bfeffffc5f9efc049c7c2000000006666660f1f840000000000c4a17e7f04514d8d52104c3bd67ef1e946ffffff8954241c897c240c44894c240844895c24044c89542410448beb49ba080200c007000000498bf28bd18bc1b900000000448bf0e854f137ff90e9ebfdffff8954241c897c240c448beb44894c240844895c24044c89542410ebc04183fb010f8c22030000458b6a0c418bc5412bc385c00f8c30040000498b4760498b77704181fbffffff000f8306030000418bd3d1e28d521783e2f84863d2488bca4803c8483bce0f87e902000049894f600f188402c00000000f188402000100000f188402400100000f188402800100004489580c48c70001000000c74008410000f8458bf34c89542410453bf5458bde450f4fdd4963f34883fe014c8b5424100f8c95000000488d5010498d4a104c8d5ef04d85db49c7c0000000000f8d4e0200004c8d5ef84d3bc30f8f13000000c4a17a6f0441c4a17a7f04424d8d58084d8bc34c8d5efc4d3bc30f8f13000000c4a1f96e0441c4a1f97e04424d8d58044d8bc34c8d5efe4d3bc30f8f13000000c4a1796e0441c4a1797e04424d8d58024d8bc34c8bde49ffcb4d3bc30f8f0a000000420fbf0c416642890c424963d6483bd60f8f5c000000498b7760488d5618493b57700f874f020000498957600f1886d800000048bad01600c007000000488bce488b92a8000000488916c74608da0200f848c1e80389460c44896610488bc1488b6c24404883c4488505b771c7fcc5f877c3488d4c7010482bd6488d72f04885f60f8d2301000049c7c300000000488d72f84c3bde0f8f11000000c5f9efc0c4a17a7f0459498d73084c8bde488d72fc4c3bde0f8f11000000c5f9efc0c4a1f97e0459498d73044c8bde488d72fe4c3bde0f8f11000000c5f9efc0c4a1797e0459498d73024c8bde48ffca4c3bda0f8f22ffffff6646892459e918ffffff498b4760488d7030493b77700f87ae010000498977600f1880f0000000488bf0c7400c1000000048c70001000000c74008410000f8c5f9efc0c5fe7f40104c8bf641bd000000004585ed0f8c49020000498b4760488d7018493b77700f873f010000498977600f1880d800000048bed01600c007000000488bd0488bb6a8000000488930c74008da0200f8c7400c6e7100d844896010488bc2488b6c24404883c44885057f70c7fcc5f877c3c5f9efc049c7c30000000066660f1f840000000000c4a17e7f04594d8d5b104c3bde7ef1e9bbfeffff660f1f440000660f1f440000c4a17e6f0441c4a17e7f04424d8d40104d3bc37eebe998fdffff4d8bf2458bebe941ffffff4c8954241048be080200c007000000418bd3b900000000458bf3e8dced37ff90e930fdffff448954241c448bea458bf348be680b00c007000000ba08000000b901000000e8b2ed37ff90488bc8418bd549b8600400c006000000448b54241c488b742420448b74242c4c8b6c2430e950f8ffff4c8be848be680b00c007000000ba02000000b901000000e86ced37ff90488bf0498bc5e994fdffff48be680b00c007000000ba02000000b901000000e847ed37ff90e9adfeffff48be680b00c007000000ba08000000b901000000e828ed37ff90e93efeffff458bf34d8bda41bae51dfeff4589979c0200004d89a7a8020000e821f5befe90458bf34d8bda41baed42feffebde458bf34d8bda41baed1ffeffebd0458bf34d8bda4c8b6c243041baed2dfeffebbd458bf34d8bda41baede3ffffebaf41baed58feff4589979c0200004d89a7a8020000e8caf4befe9041baed1effffebe441bae555feffebdc458bf34d8bda41bae529feffe974ffffff458bf34d8bda41bae537feffe963ffffff458bf34d8bda41baed3afeffe952ffffff41c7879c020000ed15feff4d89a7a8020000e86ff4befe90458bf34d8bda41baed20feffe929ffffff41baed61feffe975ffffffe86f2403ff90e849f3befe90  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@74196ce0 slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 56 10 rsi|DWORD[.] = MOV [r13|QWORD[.] + 16] size: DWORD  <||@
  Comment 60 12 r14|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 60 [rsi:0, r13:0, stack:48]at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:255) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |r13|QWORD[.]  |-  |-   <||@
  Comment 60 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 68 14 rdx|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 72 16 CMP (x: r14|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 75 18 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B141  <||@
  Comment 81 block B1 null  <||@
  Comment 81 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 81 22 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4796bf3d encoding: base: 0 shift: 3  <||@
  Comment 85 24 r10|DWORD = MOVSX [rsi|QWORD[.] + rdx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 91 26 r11|DWORD = MOVZX r10|DWORD size: DWORD  <||@
  Comment 95 28 TEST r11|DWORD y: -256 size: DWORD  <||@
  Comment 102 30 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B140  <||@
  Comment 108 block B2 null  <||@
  Comment 108 32 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 108 34 r8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[256]{1207963663, 1207963663, 1207963663, 1207963663, 1207963663, ...}]  <||@
  Comment 108 {Object[int[256]{1207963663, 1207963663, 1207963663, 1207963663, 1207963663, ...}]}  <||@
  Comment 118 36 rcx|QWORD = MOVZX r10|DWORD size: DWORD  <||@
  Comment 122 38 r9|DWORD = MOVE input: int[28672|0x7000]  <||@
  Comment 128 40 r9|DWORD = AND (x: r9|DWORD, ~y: [r8|QWORD[.] + rcx|QWORD * 4 + 16]) size: DWORD  <||@
  Comment 133 42 CMP r9|DWORD y: 16384 size: DWORD  <||@
  Comment 140 44 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 146 block B4 null  <||@
  Comment 146 52 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 146 54 AMD64HOTSPOTSTRATEGYSWITCH ~r11|DWORD - keyConstants: [int[46|0x2e], int[47|0x2f], int[58|0x3a], int[59|0x3b], int[60|0x3c], int[62|0x3e], int[91|0x5b]] keyTargets: [B4 -> B6, B4 -> B6, B4 -> B6, B4 -> B6, B4 -> B6, B4 -> B6, B4 -> B6] defaultTarget: B4 -> B10 strategy: BinaryStrategy[avgEffort=3.8795180722891565]  <||@
  Comment 251 block B10 null  <||@
  Comment 251 116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 251 118 stack:36|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 256 120 stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 261 122 rdx|DWORD = INC rdx|DWORD size: DWORD  <||@
  Comment 263 124 MOV (x: [r13|QWORD[.] + 12], y: rdx|DWORD) size: DWORD  <||@
  Comment 267 126 rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 271 128 r9|QWORD = LEA [rcx|QWORD + 48] size: QWORD  <||@
  Comment 275 130 CMP (x: r9|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 279 132 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12  <||@
  Comment 285 block B12 null  <||@
  Comment 285 166 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 285 168 MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD  <||@
  Comment 289 170 AMD64PREFETCH ~[rcx|QWORD + 240] instr: 0  <||@
  Comment 296 172 rcx|QWORD[*] = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 296 174 JUMP ~[] destination: B12 -> B13  <||@
  Comment 296 block B13 null  <||@
  Comment 296 176 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 296 178 r11|QWORD[.] = MOVE rcx|QWORD[*] moveKind: QWORD  <||@
  Comment 299 180 MOV [rcx|QWORD[*] + 12] y: 16 size: DWORD  <||@
  Comment 306 182 MOV [rcx|QWORD[*]] y: 1 size: QWORD  <||@
  Comment 313 184 MOV [rcx|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 313 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 320 186 MOV (x: [rcx|QWORD[*] + 16], y: r10|DWORD) size: WORD  <||@
  Comment 325 188 xmm0|V128_QWORD = L oc: SIMD<0,0>  <||@
  Comment 329 190 J (address: [rcx|QWORD[*] + 18], input: xmm0|V128_QWORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 334 192 MOV (x: [rcx|QWORD[*] + 34], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 338 194 MOV (x: [rcx|QWORD[*] + 42], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 342 196 MOV (x: [rcx|QWORD[*] + 46], y: r12|ILLEGAL) size: WORD  <||@
  Comment 347 198 r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 350 200 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 356 202 JUMP ~[] destination: B13 -> B14  <||@
  Comment 356 block B14 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 356 204 [] = LABEL numbPhis: 3 align: true label: ?  <||@
  Comment 368 206 CMP (x: r14|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 371 208 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B138  <||@
  Comment 377 block B15 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 377 210 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 377 212 r9|DWORD = MOVSX [rsi|QWORD[.] + rdx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 383 214 rcx|DWORD = MOVZX r9|DWORD size: DWORD  <||@
  Comment 387 216 TEST rcx|DWORD y: -256 size: DWORD  <||@
  Comment 393 218 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B137  <||@
  Comment 399 block B16 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 399 220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 399 222 rbx|QWORD = MOVZX r9|DWORD size: DWORD  <||@
  Comment 403 224 rdi|DWORD = MOVE input: int[28672|0x7000]  <||@
  Comment 408 226 rdi|DWORD = AND (x: rdi|DWORD, ~y: [r8|QWORD[.] + rbx|QWORD * 4 + 16]) size: DWORD  <||@
  Comment 413 228 CMP rdi|DWORD y: 16384 size: DWORD  <||@
  Comment 419 230 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18  <||@
  Comment 425 block B18 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 425 242 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 425 244 AMD64HOTSPOTSTRATEGYSWITCH ~rcx|DWORD - keyConstants: [int[46|0x2e], int[47|0x2f], int[58|0x3a], int[59|0x3b], int[60|0x3c], int[62|0x3e], int[91|0x5b]] keyTargets: [B18 -> B20, B18 -> B20, B18 -> B20, B18 -> B20, B18 -> B20, B18 -> B20, B18 -> B20] defaultTarget: B18 -> B80 strategy: BinaryStrategy[avgEffort=3.8795180722891565]  <||@
  Comment 521 block B80 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 521 802 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 521 804 rbx|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 525 806 rdi|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 530 808 rcx|DWORD = SUB (x: rdi|DWORD, ~y: rbx|DWORD) size: DWORD  <||@
  Comment 534 810 rdx|DWORD = INC rdx|DWORD size: DWORD  <||@
  Comment 536 812 CMP rcx|DWORD y: 1 size: DWORD  <||@
  Comment 539 814 BRANCH trueDestinationProbability: 0.9530584988351379 condition: < trueDestination: B80 -> B81 falseDestination: B80 -> B84  <||@
  Comment 545 block B81 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 545 816 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 545 818 CMP (x: rbx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 548 820 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B81 -> B82 falseDestination: B81 -> B83  <||@
  Comment 554 block B82 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 554 822 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 554 824 MOV (x: [r10|QWORD[.] + r11|DWORD * 2 + 16], y: r9|DWORD) size: WORD  <||@
  Comment 560 826 MOV (x: [r13|QWORD[.] + 12], y: rdx|DWORD) size: DWORD  <||@
  Comment 564 828 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:36, 104]  <||@
  Comment 564 [rsi:0, r8:0, r10:0, r13:0, stack:32, stack:48]at sun.reflect.generics.parser.SignatureParser.advance(SignatureParser.java:103) [bci: 36, duringCall: false, rethrow: false]
              |0            
     locals:  |r13|QWORD[.] 
  at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:269) [bci: 104, duringCall: true, rethrow: false]
              |0             |1                                                            |2 
     locals:  |r13|QWORD[.]  |vobject:StringBuilder:0{count=rdi|DWORD,value=r10|QWORD[.]}  |-   <||@
  Comment 564 {infopoint: SAFEPOINT}  <||@
  Comment 564 11  <||@
  Comment 570 830 r11|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 573 832 JUMP ~[] destination: B82 -> B14  <||@
  Comment 578 block B84 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 578 844 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 578 846 rcx|DWORD = SHL rbx|DWORD size: DWORD  <||@
  Comment 582 848 rcx|DWORD = LEA [rcx|DWORD + 2] size: DWORD  <||@
  Comment 585 850 rax|DWORD = SUB (x: rcx|DWORD, ~y: rdi|DWORD) size: DWORD  <||@
  Comment 589 852 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 591 854 rcx|DWORD = CMOVE (falseValue: rcx|DWORD, ~trueValue: rdi|DWORD) condition: <  <||@
  Comment 594 856 CMP rcx|DWORD y: 1 size: DWORD  <||@
  Comment 597 858 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B84 -> B85 falseDestination: B84 -> B86  <||@
  Comment 603 block B86 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 603 870 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 603 872 rax|DWORD = MOVE input: int[2147483639|0x7ffffff7]  <||@
  Comment 608 874 rax|DWORD = SUB (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 610 876 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 612 878 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B86 -> B87 falseDestination: B86 -> B88  <||@
  Comment 618 block B88 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 618 890 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 618 892 CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 621 894 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B88 -> B89 falseDestination: B88 -> B136  <||@
  Comment 627 block B89 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 627 896 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 627 898 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 631 900 rbp|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 635 902 CMP rcx|DWORD y: 16777215 size: DWORD  <||@
  Comment 641 904 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B89 -> B90 falseDestination: B89 -> B93  <||@
  Comment 647 block B90 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 647 906 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 647 908 r14|DWORD = SHL rcx|DWORD size: DWORD  <||@
  Comment 653 910 r14|DWORD = LEA [r14|DWORD + 23] size: DWORD  <||@
  Comment 657 912 r14|DWORD = AND r14|DWORD y: -8 size: DWORD  <||@
  Comment 661 914 r14|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 664 916 r13|QWORD = ADD (x: r14|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 670 918 CMP (x: r13|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 673 920 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B90 -> B91 falseDestination: B90 -> B92  <||@
  Comment 679 block B92 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 679 938 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 679 940 MOV (x: [r15|QWORD + 96], y: r13|QWORD) size: QWORD  <||@
  Comment 683 942 AMD64PREFETCH ~[r14|QWORD + rax|QWORD * 1 + 192] instr: 0  <||@
  Comment 692 944 AMD64PREFETCH ~[r14|QWORD + rax|QWORD * 1 + 256] instr: 0  <||@
  Comment 701 946 AMD64PREFETCH ~[r14|QWORD + rax|QWORD * 1 + 320] instr: 0  <||@
  Comment 710 948 AMD64PREFETCH ~[r14|QWORD + rax|QWORD * 1 + 384] instr: 0  <||@
  Comment 719 950 MOV (x: [rax|QWORD + 12], y: rcx|DWORD) size: DWORD  <||@
  Comment 722 952 MOV [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 729 954 MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 729 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 736 956 rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 736 958 r14|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 739 960 stack:52|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 743 962 stack:68|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 747 964 r13|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 750 966 stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 755 968 stack:76|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 760 970 stack:64|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 765 972 JUMP ~[] destination: B92 -> B95  <||@
  Comment 765 block B95 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 765 1008 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 765 1010 CMP (x: r14|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 768 1012 rcx|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: r13|DWORD) condition: >  <||@
  Comment 775 1014 rsi|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 778 1016 CMP rsi|QWORD y: 1 size: QWORD  <||@
  Comment 782 1018 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B95 -> B114 falseDestination: B95 -> B97  <||@
  Comment 788 block B97 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 788 1024 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 788 1026 r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 793 1028 rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 797 1030 rcx|QWORD[.] = LEA [r10|QWORD[.] + 16] size: QWORD  <||@
  Comment 801 1032 r10|QWORD = LEA [rsi|QWORD - 16] size: QWORD  <||@
  Comment 805 1034 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 808 1040 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 815 1036 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B97 -> B102 falseDestination: B97 -> B100  <||@
  Comment 821 block B102 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 821 1066 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 821 1068 r10|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 825 1070 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 828 1072 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B102 -> B105 falseDestination: B102 -> B104  <||@
  Comment 834 block B104 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 834 1078 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 834 1080 xmm0|V128_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 840 1082 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 846 1084 r10|QWORD = LEA [r11|QWORD + 8] size: QWORD  <||@
  Comment 850 1086 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 853 1088 JUMP ~[] destination: B104 -> B105  <||@
  Comment 853 block B105 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 853 1090 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 853 1092 r10|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 857 1094 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 860 1096 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B105 -> B108 falseDestination: B105 -> B107  <||@
  Comment 866 block B107 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 866 1102 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 866 1104 xmm0|V64_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 872 1106 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 878 1108 r10|QWORD = LEA [r11|QWORD + 4] size: QWORD  <||@
  Comment 882 1110 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 885 1112 JUMP ~[] destination: B107 -> B108  <||@
  Comment 885 block B108 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 885 1114 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 885 1116 r10|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 889 1118 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 892 1120 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B108 -> B111 falseDestination: B108 -> B110  <||@
  Comment 898 block B110 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 898 1126 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 898 1128 xmm0|V32_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 904 1130 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 910 1132 r10|QWORD = LEA [r11|QWORD + 2] size: QWORD  <||@
  Comment 914 1134 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 917 1136 JUMP ~[] destination: B110 -> B111  <||@
  Comment 917 block B111 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 917 1138 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 917 1140 r10|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 923 1142 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 926 1144 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B111 -> B114 falseDestination: B111 -> B113  <||@
  Comment 932 block B113 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 932 1150 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 932 1152 rcx|DWORD = MOVSX [rcx|QWORD[.] + r11|QWORD * 2] size: DWORD  <||@
  Comment 937 1154 MOV (x: [rdx|QWORD[.] + r11|QWORD * 2], y: rcx|DWORD) size: WORD  <||@
  Comment 942 1156 JUMP ~[] destination: B113 -> B114  <||@
  Comment 942 block B114 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 942 1158 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 942 1160 rdx|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 945 1162 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 948 1164 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B114 -> B115 falseDestination: B114 -> B134  <||@
  Comment 954 block B134 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 954 1328 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 954 1318 rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 958 1320 r9|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 963 1322 r11|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 968 1324 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 973 1330 MOV (x: [rax|QWORD[.] + r11|DWORD * 2 + 16], y: r9|DWORD) size: WORD  <||@
  Comment 979 1332 MOV (x: [r13|QWORD[.] + 12], y: rdx|DWORD) size: DWORD  <||@
  Comment 983 1334 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:36, 104]  <||@
  Comment 983 [rax:0, r13:0, stack:32, stack:48]at sun.reflect.generics.parser.SignatureParser.advance(SignatureParser.java:103) [bci: 36, duringCall: false, rethrow: false]
              |0            
     locals:  |r13|QWORD[.] 
  at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:269) [bci: 104, duringCall: true, rethrow: false]
              |0             |1                                                                 |2 
     locals:  |r13|QWORD[.]  |vobject:StringBuilder:0{count=stack:68|DWORD,value=rax|QWORD[.]}  |-   <||@
  Comment 983 {infopoint: SAFEPOINT}  <||@
  Comment 983 11  <||@
  Comment 989 1336 r11|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 994 1338 r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 997 1340 r8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[256]{1207963663, 1207963663, 1207963663, 1207963663, 1207963663, ...}]  <||@
  Comment 997 {Object[int[256]{1207963663, 1207963663, 1207963663, 1207963663, 1207963663, ...}]}  <||@
  Comment 1007 1342 rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1012 1344 r14|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1017 1346 JUMP ~[] destination: B134 -> B14  <||@
  Comment 1022 block B115 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 1022 1166 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1022 1168 rcx|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 1027 1170 rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD  <||@
  Comment 1030 1172 rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD  <||@
  Comment 1034 1174 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1037 1176 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B115 -> B116 falseDestination: B115 -> B117  <||@
  Comment 1043 block B116 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 1043 1178 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1043 1180 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1050 1182 JUMP ~[] destination: B116 -> B120  <||@
  Comment 1050 block B120 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 1050 1206 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1050 1208 rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 1054 1210 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1057 1212 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B120 -> B123 falseDestination: B120 -> B122  <||@
  Comment 1063 block B122 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 1063 1218 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1063 1220 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 1067 1222 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 1073 1224 rsi|QWORD = LEA [r10|QWORD + 8] size: QWORD  <||@
  Comment 1077 1226 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1080 1228 JUMP ~[] destination: B122 -> B123  <||@
  Comment 1080 block B123 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 1080 1230 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1080 1232 rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD  <||@
  Comment 1084 1234 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1087 1236 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B123 -> B126 falseDestination: B123 -> B125  <||@
  Comment 1093 block B125 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 1093 1242 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1093 1244 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 1097 1246 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 1103 1248 rsi|QWORD = LEA [r10|QWORD + 4] size: QWORD  <||@
  Comment 1107 1250 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1110 1252 JUMP ~[] destination: B125 -> B126  <||@
  Comment 1110 block B126 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 1110 1254 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1110 1256 rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD  <||@
  Comment 1114 1258 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1117 1260 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B126 -> B129 falseDestination: B126 -> B128  <||@
  Comment 1123 block B128 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 1123 1266 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1123 1268 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 1127 1270 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 1133 1272 rsi|QWORD = LEA [r10|QWORD + 2] size: QWORD  <||@
  Comment 1137 1274 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1140 1276 JUMP ~[] destination: B128 -> B129  <||@
  Comment 1140 block B129 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 1140 1278 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1140 1280 rdx|QWORD = DEC rdx|QWORD size: QWORD  <||@
  Comment 1143 1282 CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1146 1284 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B129 -> B134 falseDestination: B129 -> B131  <||@
  Comment 1152 block B131 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 1152 1298 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1152 1300 MOV (x: [rcx|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 1157 1310 JUMP ~[] destination: B131 -> B134  <||@
  Comment 1162 block B100 loop 3 depth 2 outer 0 header:1135|LoopBegin  <||@
  Comment 1162 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1168 1052 xmm0|V256_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 1174 1054 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1180 1056 r11|QWORD = LEA [r11|QWORD + 16] size: QWORD  <||@
  Comment 1184 1058 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1187 1060 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B100 -> B102 falseDestination: B100 -> B100  <||@
  Comment 1194 block B117 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 1194 1184 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1194 1186 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 1198 1188 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1205 1190 JUMP ~[] destination: B117 -> B118  <||@
  Comment 1205 block B118 loop 4 depth 2 outer 0 header:1199|LoopBegin  <||@
  Comment 1205 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1216 1194 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1222 1196 r10|QWORD = LEA [r10|QWORD + 16] size: QWORD  <||@
  Comment 1226 1198 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1229 1200 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B118 -> B120 falseDestination: B118 -> B118  <||@
  Comment 1236 block B93 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 1236 974 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1236 976 stack:52|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1240 978 stack:68|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1244 980 stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1249 982 stack:76|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1254 984 stack:64|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1259 986 r13|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1262 988 JUMP ~[] destination: B93 -> B94  <||@
  Comment 1262 block B94 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 1262 990 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1262 992 r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 1262 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 1272 994 rsi|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1275 996 rdx|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1277 998 rax|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1279 1000 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1284 1002 r14|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1287 1004 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8]  <||@
  Comment 1287 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1292 [stack:16, stack:32, stack:48]at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1                                                                      |2 
     locals:  |stack:32|QWORD[.]  |vobject:StringBuilder:0{count=stack:76|DWORD,value=stack:64|QWORD[.]}  |-   <||@
  Comment 1293 1006 JUMP ~[] destination: B94 -> B95  <||@
  Comment 1298 block B91 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 1298 922 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1298 924 stack:52|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1302 926 stack:68|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1306 928 r13|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1309 930 stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1314 932 stack:76|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1319 934 stack:64|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1324 936 JUMP ~[] destination: B91 -> B94  <||@
  Comment 1326 block B20 null  <||@
  Comment 1326 256 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1326 258 CMP r11|DWORD y: 1 size: DWORD  <||@
  Comment 1330 260 BRANCH trueDestinationProbability: 0.09284041465770032 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B28  <||@
  Comment 1336 block B28 null  <||@
  Comment 1336 338 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1336 340 r13|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 1340 342 rax|DWORD = SUB (x: r13|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 1346 344 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1348 346 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30  <||@
  Comment 1354 block B30 null  <||@
  Comment 1354 360 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1354 362 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1358 364 rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 1362 366 CMP r11|DWORD y: 16777215 size: DWORD  <||@
  Comment 1369 368 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B30 -> B31 falseDestination: B30 -> B35  <||@
  Comment 1375 block B31 null  <||@
  Comment 1375 370 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1375 372 rdx|DWORD = SHL r11|DWORD size: DWORD  <||@
  Comment 1380 374 rdx|DWORD = LEA [rdx|DWORD + 23] size: DWORD  <||@
  Comment 1383 376 rdx|DWORD = AND rdx|DWORD y: -8 size: DWORD  <||@
  Comment 1386 378 rdx|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 1389 380 rcx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 1395 382 CMP (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1398 384 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B31 -> B35 falseDestination: B31 -> B33  <||@
  Comment 1404 block B33 null  <||@
  Comment 1404 392 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1404 394 MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD  <||@
  Comment 1408 396 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 192] instr: 0  <||@
  Comment 1416 398 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 256] instr: 0  <||@
  Comment 1424 400 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 320] instr: 0  <||@
  Comment 1432 402 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 384] instr: 0  <||@
  Comment 1440 404 MOV (x: [rax|QWORD + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 1444 406 MOV [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 1451 408 MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 1451 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 1458 410 rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 1458 412 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1461 414 stack:64|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1466 416 JUMP ~[] destination: B33 -> B36  <||@
  Comment 1466 block B36 null  <||@
  Comment 1466 438 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1466 440 CMP (x: r14|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 1469 442 r11|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: r13|DWORD) condition: >  <||@
  Comment 1476 444 rsi|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 1479 446 CMP rsi|QWORD y: 1 size: QWORD  <||@
  Comment 1483 452 r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1488 448 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B36 -> B55 falseDestination: B36 -> B38  <||@
  Comment 1494 block B38 null  <||@
  Comment 1494 456 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1494 460 rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 1498 462 rcx|QWORD[.] = LEA [r10|QWORD[.] + 16] size: QWORD  <||@
  Comment 1502 464 r11|QWORD = LEA [rsi|QWORD - 16] size: QWORD  <||@
  Comment 1506 466 TEST (x: r11|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1509 472 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1516 468 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B38 -> B43 falseDestination: B38 -> B41  <||@
  Comment 1522 block B43 null  <||@
  Comment 1522 498 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1522 500 r11|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 1526 502 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1529 504 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B43 -> B46 falseDestination: B43 -> B45  <||@
  Comment 1535 block B45 null  <||@
  Comment 1535 510 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1535 512 xmm0|V128_WORD = H [rcx|QWORD[.] + r8|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 1541 514 J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 1547 516 r11|QWORD = LEA [r8|QWORD + 8] size: QWORD  <||@
  Comment 1551 518 r8|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1554 520 JUMP ~[] destination: B45 -> B46  <||@
  Comment 1554 block B46 null  <||@
  Comment 1554 522 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1554 524 r11|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 1558 526 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1561 528 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B46 -> B49 falseDestination: B46 -> B48  <||@
  Comment 1567 block B48 null  <||@
  Comment 1567 534 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1567 536 xmm0|V64_WORD = H [rcx|QWORD[.] + r8|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 1573 538 J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 1579 540 r11|QWORD = LEA [r8|QWORD + 4] size: QWORD  <||@
  Comment 1583 542 r8|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1586 544 JUMP ~[] destination: B48 -> B49  <||@
  Comment 1586 block B49 null  <||@
  Comment 1586 546 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1586 548 r11|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 1590 550 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1593 552 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B49 -> B52 falseDestination: B49 -> B51  <||@
  Comment 1599 block B51 null  <||@
  Comment 1599 558 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1599 560 xmm0|V32_WORD = H [rcx|QWORD[.] + r8|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 1605 562 J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 1611 564 r11|QWORD = LEA [r8|QWORD + 2] size: QWORD  <||@
  Comment 1615 566 r8|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1618 568 JUMP ~[] destination: B51 -> B52  <||@
  Comment 1618 block B52 null  <||@
  Comment 1618 570 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1618 572 r11|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 1624 574 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1627 576 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B52 -> B55 falseDestination: B52 -> B54  <||@
  Comment 1633 block B54 null  <||@
  Comment 1633 582 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1633 584 rcx|DWORD = MOVSX [rcx|QWORD[.] + r8|QWORD * 2] size: DWORD  <||@
  Comment 1638 586 MOV (x: [rdx|QWORD[.] + r8|QWORD * 2], y: rcx|DWORD) size: WORD  <||@
  Comment 1643 588 JUMP ~[] destination: B54 -> B55  <||@
  Comment 1643 block B55 null  <||@
  Comment 1643 590 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1643 592 rdx|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 1646 594 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1649 596 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B75  <||@
  Comment 1655 block B75 null  <||@
  Comment 1655 736 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1655 738 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1659 740 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 1663 742 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1667 744 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B75 -> B76 falseDestination: B75 -> B77  <||@
  Comment 1673 block B77 null  <||@
  Comment 1673 766 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1673 768 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 1677 770 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 1684 772 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1684 774 JUMP ~[] destination: B77 -> B78  <||@
  Comment 1684 block B78 null  <||@
  Comment 1684 776 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1684 778 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 1684 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 1694 780 rcx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1697 782 rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD  <||@
  Comment 1704 784 MOV (x: [rsi|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 1707 786 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 1707 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 1714 788 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@4796bf3d encoding: base: 0 shift: 3  <||@
  Comment 1718 790 MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 1721 792 MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 1725 794 rax|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1728 796 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1737 12  <||@
  Comment 1747 block B56 null  <||@
  Comment 1747 598 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1747 600 rcx|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 1752 602 rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD  <||@
  Comment 1755 604 rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD  <||@
  Comment 1759 606 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1762 608 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B56 -> B57 falseDestination: B56 -> B58  <||@
  Comment 1768 block B57 null  <||@
  Comment 1768 610 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1768 612 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1775 614 JUMP ~[] destination: B57 -> B61  <||@
  Comment 1775 block B61 null  <||@
  Comment 1775 638 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1775 640 rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 1779 642 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1782 644 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B61 -> B64 falseDestination: B61 -> B63  <||@
  Comment 1788 block B63 null  <||@
  Comment 1788 650 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1788 652 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 1792 654 J (address: [rcx|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 1798 656 rsi|QWORD = LEA [r11|QWORD + 8] size: QWORD  <||@
  Comment 1802 658 r11|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1805 660 JUMP ~[] destination: B63 -> B64  <||@
  Comment 1805 block B64 null  <||@
  Comment 1805 662 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1805 664 rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD  <||@
  Comment 1809 666 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1812 668 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B64 -> B67 falseDestination: B64 -> B66  <||@
  Comment 1818 block B66 null  <||@
  Comment 1818 674 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1818 676 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 1822 678 J (address: [rcx|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 1828 680 rsi|QWORD = LEA [r11|QWORD + 4] size: QWORD  <||@
  Comment 1832 682 r11|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1835 684 JUMP ~[] destination: B66 -> B67  <||@
  Comment 1835 block B67 null  <||@
  Comment 1835 686 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1835 688 rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD  <||@
  Comment 1839 690 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1842 692 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B67 -> B70 falseDestination: B67 -> B69  <||@
  Comment 1848 block B69 null  <||@
  Comment 1848 698 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1848 700 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 1852 702 J (address: [rcx|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 1858 704 rsi|QWORD = LEA [r11|QWORD + 2] size: QWORD  <||@
  Comment 1862 706 r11|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1865 708 JUMP ~[] destination: B69 -> B70  <||@
  Comment 1865 block B70 null  <||@
  Comment 1865 710 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1865 712 rdx|QWORD = DEC rdx|QWORD size: QWORD  <||@
  Comment 1868 714 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1871 716 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B70 -> B75 falseDestination: B70 -> B72  <||@
  Comment 1877 block B72 null  <||@
  Comment 1877 722 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1877 724 MOV (x: [rcx|QWORD[.] + r11|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 1882 726 JUMP ~[] destination: B72 -> B75  <||@
  Comment 1887 block B6 null  <||@
  Comment 1887 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1887 64 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1891 66 rsi|QWORD = LEA [rax|QWORD + 48] size: QWORD  <||@
  Comment 1895 68 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1899 70 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 1905 block B8 null  <||@
  Comment 1905 86 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1905 88 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 1909 90 AMD64PREFETCH ~[rax|QWORD + 240] instr: 0  <||@
  Comment 1916 92 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 1916 94 JUMP ~[] destination: B8 -> B9  <||@
  Comment 1916 block B9 null  <||@
  Comment 1916 96 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1916 98 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 1919 100 MOV [rax|QWORD[*] + 12] y: 16 size: DWORD  <||@
  Comment 1926 102 MOV [rax|QWORD[*]] y: 1 size: QWORD  <||@
  Comment 1933 104 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 1933 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 1940 106 xmm0|V256_QWORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 1944 108 J (address: [rax|QWORD[*] + 16], input: xmm0|V256_QWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1949 110 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1952 112 r13|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1958 114 JUMP ~[] destination: B9 -> B22  <||@
  Comment 1958 block B22 null  <||@
  Comment 1958 270 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1958 272 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 1961 274 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B22 -> B23 falseDestination: B22 -> B24  <||@
  Comment 1967 block B24 null  <||@
  Comment 1967 284 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1967 286 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1971 288 rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD  <||@
  Comment 1975 290 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1979 292 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B26  <||@
  Comment 1985 block B26 null  <||@
  Comment 1985 308 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1985 310 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 1989 312 AMD64PREFETCH ~[rax|QWORD + 216] instr: 0  <||@
  Comment 1996 314 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 1996 316 JUMP ~[] destination: B26 -> B27  <||@
  Comment 1996 block B27 null  <||@
  Comment 1996 318 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1996 320 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 1996 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 2006 322 rdx|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 2009 324 rsi|QWORD = MOV [rsi|QWORD + 168] size: QWORD  <||@
  Comment 2016 326 MOV (x: [rax|QWORD[*]], y: rsi|QWORD) size: QWORD  <||@
  Comment 2019 328 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 2019 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 2026 330 MOV [rax|QWORD[*] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}]  <||@
  Comment 2026 {NarrowOop[char[0]{}]}  <||@
  Comment 2033 332 MOV (x: [rax|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 2037 334 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2040 336 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 2049 12  <||@
  Comment 2059 block B58 null  <||@
  Comment 2059 616 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2059 618 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 2063 620 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2070 622 JUMP ~[] destination: B58 -> B59  <||@
  Comment 2070 block B59 loop 2 depth 1 header:1325|LoopBegin  <||@
  Comment 2070 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 2080 626 J (address: [rcx|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 2086 628 r11|QWORD = LEA [r11|QWORD + 16] size: QWORD  <||@
  Comment 2090 630 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 2093 632 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B61 falseDestination: B59 -> B59  <||@
  Comment 2100 block B41 loop 1 depth 1 header:1262|LoopBegin  <||@
  Comment 2100 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 2112 484 xmm0|V256_WORD = H [rcx|QWORD[.] + r8|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 2118 486 J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 2124 488 r8|QWORD = LEA [r8|QWORD + 16] size: QWORD  <||@
  Comment 2128 490 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 2131 492 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B43 falseDestination: B41 -> B41  <||@
  Comment 2138 block B21 null  <||@
  Comment 2138 262 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2138 264 r14|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2141 266 r13|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2144 268 JUMP ~[] destination: B21 -> B22  <||@
  Comment 2149 block B35 null  <||@
  Comment 2149 424 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2149 420 stack:64|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2154 426 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 2154 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 2164 428 rdx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2167 430 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2172 432 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2175 434 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8]  <||@
  Comment 2175 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2180 [stack:16, stack:48]at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1                                                                 |2 
     locals:  |stack:32|QWORD[.]  |vobject:StringBuilder:0{count=r14|DWORD,value=stack:64|QWORD[.]}  |-   <||@
  Comment 2181 436 JUMP ~[] destination: B35 -> B36  <||@
  Comment 2186 block B11 null  <||@
  Comment 2186 134 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2186 136 stack:52|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2191 138 r13|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2194 140 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2197 142 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 2197 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 2207 144 rdx|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 2212 146 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2217 148 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:36, 104]  <||@
  Comment 2217 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2222 [stack:32, stack:48]at sun.reflect.generics.parser.SignatureParser.advance(SignatureParser.java:103) [bci: 36, duringCall: false, rethrow: false]
              |0                 
     locals:  |stack:32|QWORD[.] 
  at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:269) [bci: 104, duringCall: true, rethrow: false]
              |0                  |1                                                                                                                                                                                                                                                                                       |2 
     locals:  |stack:32|QWORD[.]  |vobject:StringBuilder:0{count=int[1|0x1],value=vobject:char[]:1{0=r14|DWORD,1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]}}  |-   <||@
  Comment 2223 150 rcx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2226 152 rdx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2229 154 r8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[256]{1207963663, 1207963663, 1207963663, 1207963663, 1207963663, ...}]  <||@
  Comment 2229 {Object[int[256]{1207963663, 1207963663, 1207963663, 1207963663, 1207963663, ...}]}  <||@
  Comment 2239 156 r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 2244 158 rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2249 160 r14|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2254 162 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2259 164 JUMP ~[] destination: B11 -> B13  <||@
  Comment 2264 block B76 null  <||@
  Comment 2264 746 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2264 748 r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2267 752 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 2267 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 2277 754 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 2282 756 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2287 758 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8]  <||@
  Comment 2287 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2292 [r13:0, stack:16, stack:48]at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1                                                                 |2 
     locals:  |stack:32|QWORD[.]  |vobject:StringBuilder:0{count=r14|DWORD,value=stack:64|QWORD[.]}  |-   <||@
  Comment 2293 760 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2296 762 rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2299 764 JUMP ~[] destination: B76 -> B78  <||@
  Comment 2304 block B25 null  <||@
  Comment 2304 294 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2304 296 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 2304 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 2314 298 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 2319 300 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2324 302 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:92]  <||@
  Comment 2324 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2329 [r14:0]at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 92, duringCall: false, rethrow: false]
              |0  |1                                                            |2 
     locals:  |-  |vobject:StringBuilder:0{count=r13|DWORD,value=r14|QWORD[.]}  |-   <||@
  Comment 2330 304 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2330 306 JUMP ~[] destination: B25 -> B27  <||@
  Comment 2335 block B7 null  <||@
  Comment 2335 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2335 74 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 2335 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 2345 76 rdx|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 2350 78 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2355 80 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 2355 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2360 [stack:48]at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:255) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |-   <||@
  Comment 2361 82 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2361 84 JUMP ~[] destination: B7 -> B9  <||@
  Comment 2366 block B136 null  <||@
  Comment 2366 1352 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2366 1354 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2369 1356 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2372 1358 r10|DWORD = MOVE input: int[-123419|0xfffffffffffe1de5]  <||@
  Comment 2378 1360 JUMP ~[] destination: B136 -> B139  <||@
  Comment 2378 block B139 null  <||@
  Comment 2378 1382 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2378 1384 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2385 1386 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2392 1388 DEOPT info [bci:8]  <||@
  Comment 2392 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2397 [r11:0, r13:0]at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:256) [bci: 8, duringCall: false, rethrow: false]
              |0             |1                                                            |2 
     locals:  |r13|QWORD[.]  |vobject:StringBuilder:0{count=r14|DWORD,value=r11|QWORD[.]}  |-   <||@
  Comment 2398 block B137 null  <||@
  Comment 2398 1362 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2398 1364 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2401 1366 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2404 1368 r10|DWORD = MOVE input: int[-113939|0xfffffffffffe42ed]  <||@
  Comment 2410 1370 JUMP ~[] destination: B137 -> B139  <||@
  Comment 2412 block B87 null  <||@
  Comment 2412 880 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2412 882 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2415 884 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2418 886 r10|DWORD = MOVE input: int[-122899|0xfffffffffffe1fed]  <||@
  Comment 2424 888 JUMP ~[] destination: B87 -> B139  <||@
  Comment 2426 block B29 null  <||@
  Comment 2426 348 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2426 350 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2429 352 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2432 354 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2437 356 r10|DWORD = MOVE input: int[-119315|0xfffffffffffe2ded]  <||@
  Comment 2443 358 JUMP ~[] destination: B29 -> B139  <||@
  Comment 2445 block B19 null  <||@
  Comment 2445 246 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2445 248 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2448 250 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2451 252 r10|DWORD = MOVE input: int[-7187|0xffffffffffffe3ed]  <||@
  Comment 2457 254 JUMP ~[] destination: B19 -> B139  <||@
  Comment 2459 block B3 null  <||@
  Comment 2459 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2459 48 r10|DWORD = MOVE input: int[-108307|0xfffffffffffe58ed]  <||@
  Comment 2465 50 JUMP ~[] destination: B3 -> B142  <||@
  Comment 2465 block B142 null  <||@
  Comment 2465 1402 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2465 1404 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2472 1406 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2479 1408 DEOPT info [bci:0]  <||@
  Comment 2479 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2484 [stack:48]at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:255) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |-   <||@
  Comment 2485 block B5 null  <||@
  Comment 2485 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2485 58 r10|DWORD = MOVE input: int[-57619|0xffffffffffff1eed]  <||@
  Comment 2491 60 JUMP ~[] destination: B5 -> B142  <||@
  Comment 2493 block B141 null  <||@
  Comment 2493 1396 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2493 1398 r10|DWORD = MOVE input: int[-109083|0xfffffffffffe55e5]  <||@
  Comment 2499 1400 JUMP ~[] destination: B141 -> B142  <||@
  Comment 2501 block B83 null  <||@
  Comment 2501 834 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2501 836 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2504 838 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2507 840 r10|DWORD = MOVE input: int[-120347|0xfffffffffffe29e5]  <||@
  Comment 2513 842 JUMP ~[] destination: B83 -> B139  <||@
  Comment 2518 block B138 null  <||@
  Comment 2518 1372 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2518 1374 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2521 1376 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2524 1378 r10|DWORD = MOVE input: int[-116763|0xfffffffffffe37e5]  <||@
  Comment 2530 1380 JUMP ~[] destination: B138 -> B139  <||@
  Comment 2535 block B17 null  <||@
  Comment 2535 232 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2535 234 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2538 236 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2541 238 r10|DWORD = MOVE input: int[-115987|0xfffffffffffe3aed]  <||@
  Comment 2547 240 JUMP ~[] destination: B17 -> B139  <||@
  Comment 2552 block B23 null  <||@
  Comment 2552 276 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2552 278 MOV [r15|QWORD + 668] y: -125459 size: DWORD  <||@
  Comment 2563 280 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2570 282 DEOPT info [bci:92]  <||@
  Comment 2570 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2575 [r14:0]at sun.reflect.generics.parser.SignatureParser.parseIdentifier(SignatureParser.java:266) [bci: 92, duringCall: false, rethrow: false]
              |0  |1                                                            |2 
     locals:  |-  |vobject:StringBuilder:0{count=r13|DWORD,value=r14|QWORD[.]}  |-   <||@
  Comment 2576 block B85 null  <||@
  Comment 2576 860 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2576 862 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2579 864 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2582 866 r10|DWORD = MOVE input: int[-122643|0xfffffffffffe20ed]  <||@
  Comment 2588 868 JUMP ~[] destination: B85 -> B139  <||@
  Comment 2593 block B140 null  <||@
  Comment 2593 1390 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2593 1392 r10|DWORD = MOVE input: int[-106003|0xfffffffffffe61ed]  <||@
  Comment 2599 1394 JUMP ~[] destination: B140 -> B142  <||@
  Comment 2604 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2604 4  <||@
  Comment 2610 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 2610 5  <||@
  HexCodeFile>>> <|@
end_nmethod
