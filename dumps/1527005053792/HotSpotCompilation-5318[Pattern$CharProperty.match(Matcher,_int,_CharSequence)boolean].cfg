begin_compilation
  name " HotSpotCompilation-5318[java.util.regex.Pattern$CharProperty.match(Matcher, int, CharSequence)]"
  method "HotSpotCompilation-5318[java.util.regex.Pattern$CharProperty.match(Matcher, int, CharSequence)]"
  date 1527005169280
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B117" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i1976 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: i1976  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/util/regex/Pattern$CharProperty;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v2060 ?175 ?615 v2091 ?197 v2059 v2047 ?304 ?712 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Ljava/util/regex/Matcher;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v2085 ?166 ?175 v1119 v2084 ?535 ?197 ?539 v2043 v2061 v2065 v2083 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v7 v115 v2046 ?175 i22 v111 ?197 v820 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a4 <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: a -
uncheckedStamp: a Ljava/lang/CharSequence;
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?535 ?539 ?175 v1119 v2090 v2044 ?197 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Pattern$CharProperty.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3776
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 a4 - 
=== Succesors ===
=== Usages ===
v1780 i1976 v1977 i1979 v1983 v1987 v1991 v1995 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 a4 -  <|@  <|@
f <@~|@floating>@ <|@
tid v2043 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1976 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1976 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.to
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 2]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v2043 
=== Succesors ===
next: v1226 
=== Usages ===
v7 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v2043 #next: v1226  <|@  <|@
f <@~|@floating>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i1976 
=== Succesors ===
=== Usages ===
v1226 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i1976  <|@  <|@
f <@~|@floating>@ <|@
tid a1777 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1780 v1878 v1848 v1856 v1838 v1826 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1226 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v7 
=== Succesors ===
trueSuccessor: v1223 
falseSuccessor: v1225 
=== Usages ===
=== Predecessor ===
i1976 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v7 #trueSuccessor: v1223 #falseSuccessor: v1225  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B116" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1223 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1977 
=== Usages ===
=== Predecessor ===
v1226 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1977  <|@  <|@
f <@~|@floating>@ <|@
tid v2090 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
v1977 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1977 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v2090 
=== Succesors ===
next: v1234 
=== Usages ===
v1950 
=== Predecessor ===
v1223 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v2090 #next: v1234  <|@  <|@
f <@~|@floating>@ <|@
tid v1949 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1950 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1950 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1977 
y: v1949 
=== Succesors ===
=== Usages ===
v1234 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1977 y: v1949  <|@  <|@
f <@*|@fixed>@ <|@
tid v1234 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1950 
=== Succesors ===
trueSuccessor: v1231 
falseSuccessor: v1233 
=== Usages ===
=== Predecessor ===
v1977 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1950 #trueSuccessor: v1231 #falseSuccessor: v1233  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1231 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1238 
=== Usages ===
=== Predecessor ===
v1234 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1238  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] â‡ˆ0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v16 v107 v111 v566 v85 v187 ?712 v294 ?460 v367 ?318 v432 ?395 ?175 ?164 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i15 
=== Succesors ===
=== Usages ===
v1238 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v1238 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v111 
=== Succesors ===
trueSuccessor: v1237 
falseSuccessor: v1235 
=== Usages ===
=== Predecessor ===
v1231 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v111 #trueSuccessor: v1237 #falseSuccessor: v1235  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1237 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1785 
=== Usages ===
=== Predecessor ===
v1238 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1785  <|@  <|@
f <@~|@floating>@ <|@
tid i1786 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -206867
stableDimension: 0
stamp: i32 [-206867] â‡Š00000000fffcd7ed â‡ˆ00000000fffcd7ed
stampKind: i32
value: int[-206867|0xfffffffffffcd7ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1778 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1785 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1774 
=== Predecessor ===
v1237 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B115" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1235 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1978 
=== Usages ===
=== Predecessor ===
v1238 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1978  <|@  <|@
f <@~|@floating>@ <|@
tid v2044 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
a1978 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1978 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 6]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v2044 
=== Succesors ===
next: i1979 
=== Usages ===
a812 v2045 
=== Predecessor ===
v1235 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2044 #next: i1979  <|@  <|@
f <@~|@floating>@ <|@
tid v2045 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1978 
=== Succesors ===
=== Usages ===
i1979 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1978  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1979 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 9]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v2045 
=== Succesors ===
next: v1246 
=== Usages ===
v115 v820 
=== Predecessor ===
a1978 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v2045 #next: v1246  <|@  <|@
f <@~|@floating>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i1979 
=== Succesors ===
=== Usages ===
v1246 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i1979  <|@  <|@
f <@*|@fixed>@ <|@
tid v1246 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v115 
=== Succesors ===
trueSuccessor: v1243 
falseSuccessor: v1245 
=== Usages ===
=== Predecessor ===
i1979 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v115 #trueSuccessor: v1243 #falseSuccessor: v1245  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B114" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1243 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1250 
=== Usages ===
=== Predecessor ===
v1246 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1250  <|@  <|@
f <@~|@floating>@ <|@
tid v820 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i1979 
=== Succesors ===
=== Usages ===
v1250 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i3 y: i1979  <|@  <|@
f <@*|@fixed>@ <|@
tid v1250 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v820 
=== Succesors ===
trueSuccessor: v1247 
falseSuccessor: v1249 
=== Usages ===
=== Predecessor ===
v1243 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v820 #trueSuccessor: v1247 #falseSuccessor: v1249  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B113" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1247 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1980 
=== Usages ===
i1980 
=== Predecessor ===
v1250 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1980  <|@  <|@
f <@~|@floating>@ <|@
tid a812 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 6]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1978 
=== Succesors ===
=== Usages ===
v2046 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1978  <|@  <|@
f <@~|@floating>@ <|@
tid v2046 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a812 
index: i3 
=== Succesors ===
=== Usages ===
i1980 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a812 index: i3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1980 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v1247 
address: v2046 
=== Succesors ===
next: v1254 
=== Usages ===
i828 j1127 v1216 v1218 j1974 v1975 
=== Predecessor ===
v1247 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1247 address: v2046 #next: v1254  <|@  <|@
f <@~|@floating>@ <|@
tid i1215 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Character.isHighSurrogate(Character.java:4729) [bci: 3]
at java.lang.Character.codePointAt(Character.java:4867) [bci: 9]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
rawvalue: -10240
stableDimension: 0
stamp: i16 [-10240] â‡Š000000000000d800 â‡ˆ000000000000d800
stampKind: i16
value: short[-10240|0xffffffffffffd800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1216 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1216 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Character.isHighSurrogate(Character.java:4729) [bci: 3]
at java.lang.Character.codePointAt(Character.java:4867) [bci: 9]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1980 
y: i1215 
=== Succesors ===
=== Usages ===
v1254 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1980 y: i1215  <|@  <|@
f <@*|@fixed>@ <|@
tid v1254 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isHighSurrogate(Character.java:4729) [bci: 3]
at java.lang.Character.codePointAt(Character.java:4867) [bci: 9]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1216 
=== Succesors ===
trueSuccessor: v1251 
falseSuccessor: v1253 
=== Usages ===
=== Predecessor ===
i1980 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1216 #trueSuccessor: v1251 #falseSuccessor: v1253  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B112" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1251 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isHighSurrogate(Character.java:4729) [bci: 3]
at java.lang.Character.codePointAt(Character.java:4867) [bci: 9]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1981 
=== Usages ===
=== Predecessor ===
v1254 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1981  <|@  <|@
f <@~|@floating>@ <|@
tid v2091 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v1981 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1981 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2091 
=== Succesors ===
next: v1258 
=== Usages ===
v1952 
=== Predecessor ===
v1251 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2091 #next: v1258  <|@  <|@
f <@~|@floating>@ <|@
tid v1951 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1952 v1955 v1957 v1959 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1952 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1981 
y: v1951 
=== Succesors ===
=== Usages ===
v1258 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1981 y: v1951  <|@  <|@
f <@*|@fixed>@ <|@
tid v1258 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1952 
=== Succesors ===
trueSuccessor: v1255 
falseSuccessor: v1257 
=== Usages ===
=== Predecessor ===
v1981 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1952 #trueSuccessor: v1255 #falseSuccessor: v1257  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1255 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1982 
=== Usages ===
=== Predecessor ===
v1258 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1982  <|@  <|@
f <@~|@floating>@ <|@
tid v2047 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1982 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1982 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$lhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 1]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2047 
=== Succesors ===
next: v1983 
=== Usages ===
?318 v2092 v2048 v2049 ?377 v2112 
=== Predecessor ===
v1255 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2047 #next: v1983  <|@  <|@
f <@~|@floating>@ <|@
tid v2092 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1982 
=== Succesors ===
=== Usages ===
v1983 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1982  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1983 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v2092 
=== Succesors ===
next: v216 
=== Usages ===
v1955 v1954 
=== Predecessor ===
a1982 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v2092 #next: v216  <|@  <|@
f <@~|@floating>@ <|@
tid v1953 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1954 v1956 v1958 v1960 v1966 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1954 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1983 
y: v1953 
=== Succesors ===
=== Usages ===
v216 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1983 y: v1953  <|@  <|@
f <@~|@floating>@ <|@
tid v2048 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1982 
=== Succesors ===
=== Usages ===
i1984 a1986 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1982  <|@  <|@
f <@~|@floating>@ <|@
tid i828 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
resultBits: 32
stamp: i32 [0 - 65535] â‡ˆ000000000000ffff
=== Inputs ===
value: i1980 
=== Succesors ===
=== Usages ===
?712 ?175 ?197 ?304 v483 v487 ?1769 v998 v248 ?615 v252 v871 ?377 v907 v347 ?318 ?460 v451 v343 v386 v447 ?442 v885 v382 ?395 v899 v878 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1980  <|@  <|@
tid ?197 <|@
d <@d|@=== Debug Properties ===
bci: 18
code: ResolvedJavaMethodBytecode<Pattern$CharProperty.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3778
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 a4 i828 
=== Succesors ===
=== Usages ===
?304 ?712 ?615 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 a4 i828  <|@  <|@
tid ?110 <|@
d <@d|@=== Debug Properties ===
bci: 37
code: ResolvedJavaMethodBytecode<Pattern$CharProperty.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3779
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - 
=== Succesors ===
=== Usages ===
?535 ?539 ?166 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v1967 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1968 v1970 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i28 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 43]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] â‡Š0000000000000001 â‡ˆ0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v29 i22 i205 i100 v588 v147 i618 i205 i205 i205 i574 i618 i618 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i22 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 35]
stamp: i32
=== Inputs ===
x: i3 
y: i28 
=== Succesors ===
=== Usages ===
v1119 ?539 v984 v1075 ?535 v1086 v1111 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i3 y: i28  <|@  <|@
f <@~|@floating>@ <|@
tid v2065 <|@
d <@d|@=== Debug Properties ===
displacement: 52
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a2012 a2031 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2061 <|@
d <@d|@=== Debug Properties ===
displacement: 60
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a2008 a2027 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1963 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1964 v1969 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2060 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a2006 a2025 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i1217 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
rawvalue: 256
stableDimension: 0
stamp: i16 [256] â‡Š0000000000000100 â‡ˆ0000000000000100
stampKind: i16
value: short[256|0x100]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1218 v1975 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1961 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1962 v1965 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.5000105004025154
=== Inputs ===
condition: v1954 
=== Succesors ===
trueSuccessor: v209 
falseSuccessor: v215 
=== Usages ===
=== Predecessor ===
v1983 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1954 #trueSuccessor: v209 #falseSuccessor: v215  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4602678913751864623
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1984 
=== Usages ===
=== Predecessor ===
v216 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1984  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1984 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2048 
=== Succesors ===
next: v251 
=== Usages ===
v248 
=== Predecessor ===
v209 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2048 #next: v251  <|@  <|@
f <@~|@floating>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i828 
y: i1984 
=== Succesors ===
=== Usages ===
v251 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i828 y: i1984  <|@  <|@
f <@*|@fixed>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.02420300868371932
=== Inputs ===
condition: v248 
=== Succesors ===
trueSuccessor: v249 
falseSuccessor: v250 
=== Usages ===
=== Predecessor ===
i1984 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v248 #trueSuccessor: v249 #falseSuccessor: v250  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B54" 
    xhandlers
    flags 
    probability 4578129810580469169
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 14]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v713 
=== Usages ===
=== Predecessor ===
v251 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v713  <|@  <|@
f <@*|@fixed>@ <|@
tid v713 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v710 
=== Predecessor ===
v249 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4602461002431100593
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 5]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1985 
=== Usages ===
=== Predecessor ===
v251 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1985  <|@  <|@
f <@~|@floating>@ <|@
tid v2049 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1982 
=== Succesors ===
=== Usages ===
i1985 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1982  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1985 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2049 
=== Succesors ===
next: v1266 
=== Usages ===
v252 
=== Predecessor ===
v250 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2049 #next: v1266  <|@  <|@
f <@~|@floating>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1985 
y: i828 
=== Succesors ===
=== Usages ===
v1266 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1985 y: i828  <|@  <|@
f <@*|@fixed>@ <|@
tid v1266 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v252 
=== Succesors ===
trueSuccessor: v1265 
falseSuccessor: v1263 
=== Usages ===
=== Predecessor ===
i1985 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v252 #trueSuccessor: v1265 #falseSuccessor: v1263  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1265 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1803 
=== Usages ===
=== Predecessor ===
v1266 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1803  <|@  <|@
f <@~|@floating>@ <|@
tid i1804 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -215059
stableDimension: 0
stamp: i32 [-215059] â‡Š00000000fffcb7ed â‡ˆ00000000fffcb7ed
stampKind: i32
value: int[-215059|0xfffffffffffcb7ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1778 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1803 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1774 
=== Predecessor ===
v1265 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B84" 
    xhandlers
    flags 
    probability 4602461002431100593
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1263 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v657 
=== Usages ===
=== Predecessor ===
v1266 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v657  <|@  <|@
f <@*|@fixed>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v613 
=== Predecessor ===
v1263 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" "B111" 
    xhandlers
    flags 
    probability 4602678630014211490
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1270 
=== Usages ===
=== Predecessor ===
v216 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1270  <|@  <|@
f <@~|@floating>@ <|@
tid v1955 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1983 
y: v1951 
=== Succesors ===
=== Usages ===
v1270 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1983 y: v1951  <|@  <|@
f <@*|@fixed>@ <|@
tid v1270 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1955 
=== Succesors ===
trueSuccessor: v1267 
falseSuccessor: v1269 
=== Usages ===
=== Predecessor ===
v215 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1955 #trueSuccessor: v1267 #falseSuccessor: v1269  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B21" 
    xhandlers
    flags 
    probability 4602678630014211490
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1267 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1986 
=== Usages ===
=== Predecessor ===
v1270 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1986  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1986 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$lhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2048 
=== Succesors ===
next: v1987 
=== Usages ===
?395 v2093 v2050 v2051 ?442 v2111 
=== Predecessor ===
v1267 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2048 #next: v1987  <|@  <|@
f <@~|@floating>@ <|@
tid v2093 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1986 
=== Succesors ===
=== Usages ===
v1987 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1986  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1987 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v2093 
=== Succesors ===
next: v331 
=== Usages ===
v1957 v1956 
=== Predecessor ===
a1986 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v2093 #next: v331  <|@  <|@
f <@~|@floating>@ <|@
tid v1956 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1987 
y: v1953 
=== Succesors ===
=== Usages ===
v331 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1987 y: v1953  <|@  <|@
f <@~|@floating>@ <|@
tid v2050 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1986 
=== Succesors ===
=== Usages ===
i1988 a1990 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1986  <|@  <|@
tid ?304 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?197 
values: a1 i828 
=== Succesors ===
=== Usages ===
?377 ?1772 ?318 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?197 values: a1 i828  <|@  <|@
f <@*|@fixed>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.5000105004025154
=== Inputs ===
condition: v1956 
=== Succesors ===
trueSuccessor: v324 
falseSuccessor: v330 
=== Usages ===
=== Predecessor ===
v1987 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1956 #trueSuccessor: v324 #falseSuccessor: v330  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4598175219541303937
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1988 
=== Usages ===
=== Predecessor ===
v331 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1988  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1988 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2050 
=== Succesors ===
next: v385 
=== Usages ===
v382 
=== Predecessor ===
v324 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2050 #next: v385  <|@  <|@
f <@~|@floating>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i828 
y: i1988 
=== Succesors ===
=== Usages ===
v385 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i828 y: i1988  <|@  <|@
f <@*|@fixed>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.02420300868371932
=== Inputs ===
condition: v382 
=== Succesors ===
trueSuccessor: v383 
falseSuccessor: v384 
=== Usages ===
=== Predecessor ===
i1988 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v382 #trueSuccessor: v383 #falseSuccessor: v384  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B41" 
    xhandlers
    flags 
    probability 4573626064447517839
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 14]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v729 
=== Usages ===
=== Predecessor ===
v385 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v729  <|@  <|@
f <@*|@fixed>@ <|@
tid v729 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v727 
=== Predecessor ===
v383 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4597957218219621597
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 5]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1989 
=== Usages ===
=== Predecessor ===
v385 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1989  <|@  <|@
f <@~|@floating>@ <|@
tid v2051 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1986 
=== Succesors ===
=== Usages ===
i1989 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1986  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1989 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2051 
=== Succesors ===
next: v1278 
=== Usages ===
v386 
=== Predecessor ===
v384 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2051 #next: v1278  <|@  <|@
f <@~|@floating>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1989 
y: i828 
=== Succesors ===
=== Usages ===
v1278 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1989 y: i828  <|@  <|@
f <@*|@fixed>@ <|@
tid v1278 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v386 
=== Succesors ===
trueSuccessor: v1277 
falseSuccessor: v1275 
=== Usages ===
=== Predecessor ===
i1989 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v386 #trueSuccessor: v1277 #falseSuccessor: v1275  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1277 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1809 
=== Usages ===
=== Predecessor ===
v1278 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1809  <|@  <|@
f <@~|@floating>@ <|@
tid i1810 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -217619
stableDimension: 0
stamp: i32 [-217619] â‡Š00000000fffcaded â‡ˆ00000000fffcaded
stampKind: i32
value: int[-217619|0xfffffffffffcaded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1778 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1809 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1774 
=== Predecessor ===
v1277 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B84" 
    xhandlers
    flags 
    probability 4597957218219621597
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1275 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v674 
=== Usages ===
=== Predecessor ===
v1278 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v674  <|@  <|@
f <@*|@fixed>@ <|@
tid v674 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v613 
=== Predecessor ===
v1275 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" "B110" 
    xhandlers
    flags 
    probability 4598174841232378051
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1282 
=== Usages ===
=== Predecessor ===
v331 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1282  <|@  <|@
f <@~|@floating>@ <|@
tid v1957 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1987 
y: v1951 
=== Succesors ===
=== Usages ===
v1282 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1987 y: v1951  <|@  <|@
f <@*|@fixed>@ <|@
tid v1282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1957 
=== Succesors ===
trueSuccessor: v1279 
falseSuccessor: v1281 
=== Usages ===
=== Predecessor ===
v330 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1957 #trueSuccessor: v1279 #falseSuccessor: v1281  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B28" 
    xhandlers
    flags 
    probability 4598174841232378051
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1279 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1990 
=== Usages ===
=== Predecessor ===
v1282 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1990  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1990 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$lhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2050 
=== Succesors ===
next: v1991 
=== Usages ===
?460 v2094 v2052 v2053 ?1769 v2110 
=== Predecessor ===
v1279 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2050 #next: v1991  <|@  <|@
f <@~|@floating>@ <|@
tid v2094 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1990 
=== Succesors ===
=== Usages ===
v1991 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1990  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1991 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v2094 
=== Succesors ===
next: v408 
=== Usages ===
v1959 v1958 
=== Predecessor ===
a1990 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v2094 #next: v408  <|@  <|@
f <@~|@floating>@ <|@
tid v1958 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1991 
y: v1953 
=== Succesors ===
=== Usages ===
v408 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1991 y: v1953  <|@  <|@
f <@~|@floating>@ <|@
tid v2052 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1990 
=== Succesors ===
=== Usages ===
i1992 a1994 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1990  <|@  <|@
tid ?377 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?304 
values: a1982 i828 
=== Succesors ===
=== Usages ===
?442 ?1771 ?395 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?304 values: a1982 i828  <|@  <|@
f <@*|@fixed>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.5000105004025154
=== Inputs ===
condition: v1958 
=== Succesors ===
trueSuccessor: v401 
falseSuccessor: v407 
=== Usages ===
=== Predecessor ===
v1991 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1958 #trueSuccessor: v401 #falseSuccessor: v407  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4593671430755498102
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1992 
=== Usages ===
=== Predecessor ===
v408 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1992  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1992 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2052 
=== Succesors ===
next: v450 
=== Usages ===
v447 
=== Predecessor ===
v401 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2052 #next: v450  <|@  <|@
f <@~|@floating>@ <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i828 
y: i1992 
=== Succesors ===
=== Usages ===
v450 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i828 y: i1992  <|@  <|@
f <@*|@fixed>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.02420300868371932
=== Inputs ===
condition: v447 
=== Succesors ===
trueSuccessor: v448 
falseSuccessor: v449 
=== Usages ===
=== Predecessor ===
i1992 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v447 #trueSuccessor: v448 #falseSuccessor: v449  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B39" 
    xhandlers
    flags 
    probability 4569122318317643243
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 14]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v761 
=== Usages ===
=== Predecessor ===
v450 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v761  <|@  <|@
f <@*|@fixed>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v759 
=== Predecessor ===
v448 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4593453434012019015
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 5]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1993 
=== Usages ===
=== Predecessor ===
v450 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1993  <|@  <|@
f <@~|@floating>@ <|@
tid v2053 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1990 
=== Succesors ===
=== Usages ===
i1993 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1990  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1993 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2053 
=== Succesors ===
next: v1290 
=== Usages ===
v451 
=== Predecessor ===
v449 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2053 #next: v1290  <|@  <|@
f <@~|@floating>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1993 
y: i828 
=== Succesors ===
=== Usages ===
v1290 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1993 y: i828  <|@  <|@
f <@*|@fixed>@ <|@
tid v1290 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v451 
=== Succesors ===
trueSuccessor: v1289 
falseSuccessor: v1287 
=== Usages ===
=== Predecessor ===
i1993 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v451 #trueSuccessor: v1289 #falseSuccessor: v1287  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1289 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1815 
=== Usages ===
=== Predecessor ===
v1290 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1815  <|@  <|@
f <@~|@floating>@ <|@
tid i1816 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -220179
stableDimension: 0
stamp: i32 [-220179] â‡Š00000000fffca3ed â‡ˆ00000000fffca3ed
stampKind: i32
value: int[-220179|0xfffffffffffca3ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1778 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1815 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1774 
=== Predecessor ===
v1289 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B52" 
    xhandlers
    flags 
    probability 4593453434012019015
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1287 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v708 
=== Usages ===
=== Predecessor ===
v1290 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v708  <|@  <|@
f <@*|@fixed>@ <|@
tid v708 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
v1287 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B29" "B109" 
    xhandlers
    flags 
    probability 4593671052454517008
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1294 
=== Usages ===
=== Predecessor ===
v408 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1294  <|@  <|@
f <@~|@floating>@ <|@
tid v1959 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1991 
y: v1951 
=== Succesors ===
=== Usages ===
v1294 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1991 y: v1951  <|@  <|@
f <@*|@fixed>@ <|@
tid v1294 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1959 
=== Succesors ===
trueSuccessor: v1291 
falseSuccessor: v1293 
=== Usages ===
=== Predecessor ===
v407 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1959 #trueSuccessor: v1291 #falseSuccessor: v1293  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B35" 
    xhandlers
    flags 
    probability 4593671052454517008
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1291 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1994 
=== Usages ===
=== Predecessor ===
v1294 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1994  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1994 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$lhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2052 
=== Succesors ===
next: v1995 
=== Usages ===
a864 v2095 v2054 v2055 
=== Predecessor ===
v1291 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2052 #next: v1995  <|@  <|@
f <@~|@floating>@ <|@
tid v2095 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1994 
=== Succesors ===
=== Usages ===
v1995 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1994  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1995 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v2095 
=== Succesors ===
next: v473 
=== Usages ===
v1960 
=== Predecessor ===
a1994 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v2095 #next: v473  <|@  <|@
f <@~|@floating>@ <|@
tid v1960 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1995 
y: v1953 
=== Succesors ===
=== Usages ===
v473 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1995 y: v1953  <|@  <|@
tid ?442 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?377 
values: a1986 i828 
=== Succesors ===
=== Usages ===
?1770 ?1769 ?460 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?377 values: a1986 i828  <|@  <|@
f <@*|@fixed>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.5000105004025154
=== Inputs ===
condition: v1960 
=== Succesors ===
trueSuccessor: v466 
falseSuccessor: v472 
=== Usages ===
=== Predecessor ===
v1995 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1960 #trueSuccessor: v466 #falseSuccessor: v472  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4589167641973664746
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1996 
=== Usages ===
=== Predecessor ===
v473 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1996  <|@  <|@
f <@~|@floating>@ <|@
tid v2054 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1994 
=== Succesors ===
=== Usages ===
i1996 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1994  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1996 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2054 
=== Succesors ===
next: v486 
=== Usages ===
v483 
=== Predecessor ===
v466 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2054 #next: v486  <|@  <|@
f <@~|@floating>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i828 
y: i1996 
=== Succesors ===
=== Usages ===
v486 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i828 y: i1996  <|@  <|@
f <@*|@fixed>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.02420300868371932
=== Inputs ===
condition: v483 
=== Succesors ===
trueSuccessor: v484 
falseSuccessor: v485 
=== Usages ===
=== Predecessor ===
i1996 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v483 #trueSuccessor: v484 #falseSuccessor: v485  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" 
    xhandlers
    flags 
    probability 4564618572190845318
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 14]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v745 
=== Usages ===
=== Predecessor ===
v486 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v745  <|@  <|@
f <@*|@fixed>@ <|@
tid v745 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v743 
=== Predecessor ===
v484 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4588949649808292766
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 5]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1997 
=== Usages ===
=== Predecessor ===
v486 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1997  <|@  <|@
f <@~|@floating>@ <|@
tid v2055 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1994 
=== Succesors ===
=== Usages ===
i1997 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1994  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1997 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2055 
=== Succesors ===
next: v1302 
=== Usages ===
v487 
=== Predecessor ===
v485 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2055 #next: v1302  <|@  <|@
f <@~|@floating>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1997 
y: i828 
=== Succesors ===
=== Usages ===
v1302 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1997 y: i828  <|@  <|@
f <@*|@fixed>@ <|@
tid v1302 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v487 
=== Succesors ===
trueSuccessor: v1301 
falseSuccessor: v1299 
=== Usages ===
=== Predecessor ===
i1997 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v487 #trueSuccessor: v1301 #falseSuccessor: v1299  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1301 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1819 
=== Usages ===
=== Predecessor ===
v1302 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1819  <|@  <|@
f <@~|@floating>@ <|@
tid i1820 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -222739
stableDimension: 0
stamp: i32 [-222739] â‡Š00000000fffc99ed â‡ˆ00000000fffc99ed
stampKind: i32
value: int[-222739|0xfffffffffffc99ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1778 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1819 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1774 
=== Predecessor ===
v1301 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B52" 
    xhandlers
    flags 
    probability 4588949649808292766
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1299 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v691 
=== Usages ===
=== Predecessor ===
v1302 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v691  <|@  <|@
f <@*|@fixed>@ <|@
tid v691 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
v1299 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" "B51" 
    xhandlers
    flags 
    probability 4589167263680628278
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: i430 
=== Usages ===
=== Predecessor ===
v473 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i430  <|@  <|@
f <@~|@floating>@ <|@
tid a864 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
value: a1994 
=== Succesors ===
=== Usages ===
v871 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1994  <|@  <|@
tid v871 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
returnStamp: i32 [0 - 1] â‡ˆ0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@6a08e544
stamp: void
targetMethod: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>
=== Inputs ===
arguments: a864 i828 
=== Succesors ===
=== Usages ===
i430 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a864 i828  <|@  <|@
tid ?1769 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?442 
values: a1990 i828 
=== Succesors ===
=== Usages ===
i430 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?442 values: a1990 i828  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i430 <|@
d <@d|@=== Debug Properties ===
bci: 5
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
polymorphic: false
stamp: i32 [0 - 1] â‡ˆ0000000000000001
targetMethod: Direct#Pattern$CharProperty.isSatisfiedBy
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v871 
stateDuring: ?1769 
=== Succesors ===
next: v435 
=== Usages ===
v432 
=== Predecessor ===
v472 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v871 stateDuring: ?1769 #next: v435  <|@  <|@
f <@~|@floating>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i430 
y: i15 
=== Succesors ===
=== Usages ===
v435 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i430 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.012246995066949262
=== Inputs ===
condition: v432 
=== Succesors ===
trueSuccessor: v433 
falseSuccessor: v434 
=== Usages ===
=== Predecessor ===
i430 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v432 #trueSuccessor: v433 #falseSuccessor: v434  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560198542224662117
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 11]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v744 
=== Usages ===
=== Predecessor ===
v435 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v744  <|@  <|@
f <@*|@fixed>@ <|@
tid v744 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v743 
=== Predecessor ===
v433 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B31" 
    successors "B38" "B50" 
    xhandlers
    flags 
    probability 4567399126910536796
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v743 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v744 v745 
=== Succesors ===
next: a1998 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v744 v745 #next: a1998  <|@  <|@
f <@~|@floating>@ <|@
tid v2110 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1990 
=== Succesors ===
=== Usages ===
a1998 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1990  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1998 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$rhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2110 
=== Succesors ===
next: v2105 
=== Usages ===
a874 v2105 
=== Predecessor ===
v743 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2110 #next: v2105  <|@  <|@
tid ?460 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 1
=== Inputs ===
outerFrameState: ?442 
values: a1990 i828 i15 
=== Succesors ===
=== Usages ===
v2105 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?442 values: a1990 i828 i15  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2105 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?460 
object: a1998 
=== Succesors ===
next: i438 
=== Usages ===
=== Predecessor ===
a1998 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?460 object: a1998 #next: i438  <|@  <|@
f <@~|@floating>@ <|@
tid a874 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
value: a1998 
=== Succesors ===
=== Usages ===
v878 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1998  <|@  <|@
tid v878 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
returnStamp: i32 [0 - 1] â‡ˆ0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@21c67288
stamp: void
targetMethod: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>
=== Inputs ===
arguments: a874 i828 
=== Succesors ===
=== Usages ===
i438 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a874 i828  <|@  <|@
tid ?1770 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?442 
values: - - 
=== Succesors ===
=== Usages ===
i438 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?442 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i438 <|@
d <@d|@=== Debug Properties ===
bci: 16
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
polymorphic: false
stamp: i32 [0 - 1] â‡ˆ0000000000000001
targetMethod: Direct#Pattern$CharProperty.isSatisfiedBy
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v878 
stateDuring: ?1770 
=== Succesors ===
next: v370 
=== Usages ===
v367 
=== Predecessor ===
v2105 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v878 stateDuring: ?1770 #next: v370  <|@  <|@
f <@~|@floating>@ <|@
tid v367 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i438 
y: i15 
=== Succesors ===
=== Usages ===
v370 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i438 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.012246995066949262
=== Inputs ===
condition: v367 
=== Succesors ===
trueSuccessor: v368 
falseSuccessor: v369 
=== Usages ===
=== Predecessor ===
i438 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v367 #trueSuccessor: v368 #falseSuccessor: v369  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" 
    xhandlers
    flags 
    probability 4538855445253981485
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v368 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 11]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v760 
=== Usages ===
=== Predecessor ===
v370 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v760  <|@  <|@
f <@*|@fixed>@ <|@
tid v760 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v759 
=== Predecessor ===
v368 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B24" 
    successors "B40" "B49" 
    xhandlers
    flags 
    probability 4569186648162324981
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v760 v761 
=== Succesors ===
next: a1999 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v760 v761 #next: a1999  <|@  <|@
f <@~|@floating>@ <|@
tid v2111 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1986 
=== Succesors ===
=== Usages ===
a1999 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1986  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1999 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$rhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2111 
=== Succesors ===
next: v2106 
=== Usages ===
a881 v2106 
=== Predecessor ===
v759 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2111 #next: v2106  <|@  <|@
tid ?395 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 1
=== Inputs ===
outerFrameState: ?377 
values: a1986 i828 i15 
=== Succesors ===
=== Usages ===
v2106 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?377 values: a1986 i828 i15  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2106 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?395 
object: a1999 
=== Succesors ===
next: i373 
=== Usages ===
=== Predecessor ===
a1999 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?395 object: a1999 #next: i373  <|@  <|@
f <@~|@floating>@ <|@
tid a881 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
value: a1999 
=== Succesors ===
=== Usages ===
v885 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1999  <|@  <|@
tid v885 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
returnStamp: i32 [0 - 1] â‡ˆ0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@7d9354a8
stamp: void
targetMethod: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>
=== Inputs ===
arguments: a881 i828 
=== Succesors ===
=== Usages ===
i373 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a881 i828  <|@  <|@
tid ?1771 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?377 
values: - - 
=== Succesors ===
=== Usages ===
i373 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?377 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i373 <|@
d <@d|@=== Debug Properties ===
bci: 16
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
polymorphic: false
stamp: i32 [0 - 1] â‡ˆ0000000000000001
targetMethod: Direct#Pattern$CharProperty.isSatisfiedBy
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v885 
stateDuring: ?1771 
=== Succesors ===
next: v297 
=== Usages ===
v294 
=== Predecessor ===
v2106 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v885 stateDuring: ?1771 #next: v297  <|@  <|@
f <@~|@floating>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i373 
y: i15 
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i373 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.012246995066949262
=== Inputs ===
condition: v294 
=== Succesors ===
trueSuccessor: v295 
falseSuccessor: v296 
=== Usages ===
=== Predecessor ===
i373 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v294 #trueSuccessor: v295 #falseSuccessor: v296  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4540643007714694606
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 11]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v728 
=== Usages ===
=== Predecessor ===
v297 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v728  <|@  <|@
f <@*|@fixed>@ <|@
tid v728 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v727 
=== Predecessor ===
v295 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B17" 
    successors "B42" "B48" 
    xhandlers
    flags 
    probability 4573669175251835067
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v727 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v728 v729 
=== Succesors ===
next: a2000 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v728 v729 #next: a2000  <|@  <|@
f <@~|@floating>@ <|@
tid v2112 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1982 
=== Succesors ===
=== Usages ===
a2000 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1982  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2000 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$rhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2112 
=== Succesors ===
next: v2001 
=== Usages ===
a888 v2096 v2056 
=== Predecessor ===
v727 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2112 #next: v2001  <|@  <|@
tid ?318 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 1
=== Inputs ===
outerFrameState: ?304 
values: a1982 i828 i15 
=== Succesors ===
=== Usages ===
v1826 v2001 i2003 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?304 values: a1982 i828 i15  <|@  <|@
f <@~|@floating>@ <|@
tid v2096 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2000 
=== Succesors ===
=== Usages ===
v2001 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2000  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2001 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?318 
guard: - 
address: v2096 
=== Succesors ===
next: v516 
=== Usages ===
v1962 
=== Predecessor ===
a2000 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?318 guard: - address: v2096 #next: v516  <|@  <|@
f <@~|@floating>@ <|@
tid v1962 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2001 
y: v1961 
=== Succesors ===
=== Usages ===
v516 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2001 y: v1961  <|@  <|@
f <@*|@fixed>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$BitClass; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1962 
=== Succesors ===
trueSuccessor: v509 
falseSuccessor: v515 
=== Usages ===
=== Predecessor ===
v2001 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1962 #trueSuccessor: v509 #falseSuccessor: v515  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B46" 
    xhandlers
    flags 
    probability 4569165575624464571
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v509 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$BitClass; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1318 
=== Usages ===
=== Predecessor ===
v516 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1318  <|@  <|@
f <@~|@floating>@ <|@
tid v1975 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1980 
y: i1217 
=== Succesors ===
=== Usages ===
v1318 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1980 y: i1217  <|@  <|@
f <@*|@fixed>@ <|@
tid v1318 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1975 
=== Succesors ===
trueSuccessor: v1315 
falseSuccessor: v1317 
=== Usages ===
=== Predecessor ===
v509 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1975 #trueSuccessor: v1315 #falseSuccessor: v1317  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4569165575624464571
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1315 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2002 
=== Usages ===
=== Predecessor ===
v1318 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2002  <|@  <|@
f <@~|@floating>@ <|@
tid v2056 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2000 
=== Succesors ===
=== Usages ===
a2002 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2000  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2002 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$BitClass.bits
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: n# [Z
=== Inputs ===
stateBefore: - 
guard: - 
address: v2056 
=== Succesors ===
next: i2003 
=== Usages ===
v2058 v2057 
=== Predecessor ===
v1315 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2056 #next: i2003  <|@  <|@
f <@~|@floating>@ <|@
tid v2057 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2002 
=== Succesors ===
=== Usages ===
i2003 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2002  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2003 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?318 
guard: - 
address: v2057 
=== Succesors ===
next: v1326 
=== Usages ===
v899 
=== Predecessor ===
a2002 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?318 guard: - address: v2057 #next: v1326  <|@  <|@
f <@~|@floating>@ <|@
tid v899 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i828 
y: i2003 
=== Succesors ===
=== Usages ===
v1326 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i828 y: i2003  <|@  <|@
f <@*|@fixed>@ <|@
tid v1326 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v899 
=== Succesors ===
trueSuccessor: v1323 
falseSuccessor: v1325 
=== Usages ===
=== Predecessor ===
i2003 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v899 #trueSuccessor: v1323 #falseSuccessor: v1325  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B52" 
    xhandlers
    flags 
    probability 4569165575624464571
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1323 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2004 
=== Usages ===
i2004 
=== Predecessor ===
v1326 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2004  <|@  <|@
f <@~|@floating>@ <|@
tid j1127 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
resultBits: 64
stamp: i64 [0 - 65535] â‡ˆ000000000000ffff
=== Inputs ===
value: i1980 
=== Succesors ===
=== Usages ===
v2058 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1980  <|@  <|@
f <@~|@floating>@ <|@
tid v2058 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: j1127 
index: a2002 
=== Succesors ===
=== Usages ===
i2004 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1127 index: a2002  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2004 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: byte
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: i8 [0 - 1] â‡ˆ0000000000000001
=== Inputs ===
stateBefore: - 
guard: v1323 
address: v2058 
=== Succesors ===
next: v523 
=== Usages ===
i1128 
=== Predecessor ===
v1323 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1323 address: v2058 #next: v523  <|@  <|@
f <@~|@floating>@ <|@
tid i1128 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 8
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
resultBits: 32
stamp: i32 [0 - 1] â‡ˆ0000000000000001
=== Inputs ===
value: i2004 
=== Succesors ===
=== Usages ===
i205 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2004  <|@  <|@
f <@*|@fixed>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
i2004 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1325 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1831 
=== Usages ===
=== Predecessor ===
v1326 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1831  <|@  <|@
f <@~|@floating>@ <|@
tid i1832 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -230427
stableDimension: 0
stamp: i32 [-230427] â‡Š00000000fffc7be5 â‡ˆ00000000fffc7be5
stampKind: i32
value: int[-230427|0xfffffffffffc7be5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1824 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1831 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1821 
=== Predecessor ===
v1325 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1317 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1829 
=== Usages ===
=== Predecessor ===
v1318 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1829  <|@  <|@
f <@~|@floating>@ <|@
tid i1830 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -227859
stableDimension: 0
stamp: i32 [-227859] â‡Š00000000fffc85ed â‡ˆ00000000fffc85ed
stampKind: i32
value: int[-227859|0xfffffffffffc85ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1824 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1829 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1821 
=== Predecessor ===
v1317 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1824 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-230427 - -227595] â‡Š00000000fffc00e5 â‡ˆ00000000fffcfffd
valueDescription: i32
=== Inputs ===
merge: v1821 
values: i1830 i1832 
=== Succesors ===
=== Usages ===
v1826 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1821 values: i1830 i1832  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1821 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1829 v1831 
=== Succesors ===
next: v1826 
=== Usages ===
i1824 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1829 v1831 #next: v1826  <|@  <|@
f <@*|@fixed>@ <|@
tid v1826 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?318 
actionAndReason: i1824 
speculation: a1777 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1821 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?318 actionAndReason: i1824 speculation: a1777  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B52" 
    xhandlers
    flags 
    probability 4569165575624464571
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: i300 
=== Usages ===
=== Predecessor ===
v516 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i300  <|@  <|@
f <@~|@floating>@ <|@
tid a888 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
value: a2000 
=== Succesors ===
=== Usages ===
v907 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2000  <|@  <|@
tid v907 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
returnStamp: i32 [0 - 1] â‡ˆ0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@4e80f760
stamp: void
targetMethod: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>
=== Inputs ===
arguments: a888 i828 
=== Succesors ===
=== Usages ===
i300 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a888 i828  <|@  <|@
tid ?1772 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?304 
values: - - 
=== Succesors ===
=== Usages ===
i300 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?304 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i300 <|@
d <@d|@=== Debug Properties ===
bci: 16
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
polymorphic: false
stamp: i32 [0 - 1] â‡ˆ0000000000000001
targetMethod: Direct#Pattern$CharProperty.isSatisfiedBy
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v907 
stateDuring: ?1772 
=== Succesors ===
next: v204 
=== Usages ===
i205 
=== Predecessor ===
v515 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v907 stateDuring: ?1772 #next: v204  <|@  <|@
f <@*|@fixed>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
i300 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B84" 
    xhandlers
    flags 
    probability 4569100426553690526
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 22]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v616 
=== Usages ===
=== Predecessor ===
v297 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v616  <|@  <|@
f <@*|@fixed>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v613 
=== Predecessor ===
v296 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B52" 
    xhandlers
    flags 
    probability 4567334797065855058
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 22]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v607 
=== Usages ===
=== Predecessor ===
v370 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v607  <|@  <|@
f <@*|@fixed>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
v369 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B52" 
    xhandlers
    flags 
    probability 4589056961821986236
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 22]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v640 
=== Usages ===
=== Predecessor ===
v435 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v640  <|@  <|@
f <@*|@fixed>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
v434 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" "B44" "B50" "B51" "B34" "B27" 
    successors "B53" "B83" 
    xhandlers
    flags 
    probability 4598229702893204513
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i205 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: i32 [0 - 1] â‡ˆ0000000000000001
valueDescription: i32
=== Inputs ===
merge: v202 
values: i300 i1128 i28 i28 i28 i28 
=== Succesors ===
=== Usages ===
i618 v187 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v202 values: i300 i1128 i28 i28 i28 i28  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v204 v523 v607 v640 v691 v708 
=== Succesors ===
next: v190 
=== Usages ===
i205 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v204 v523 v607 v640 v691 v708 #next: v190  <|@  <|@
f <@~|@floating>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i205 
y: i15 
=== Succesors ===
=== Usages ===
v190 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i205 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.012246995066949262
=== Inputs ===
condition: v187 
=== Succesors ===
trueSuccessor: v188 
falseSuccessor: v189 
=== Usages ===
=== Predecessor ===
v202 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v187 #trueSuccessor: v188 #falseSuccessor: v189  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" 
    xhandlers
    flags 
    probability 4569291743449605540
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 11]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v711 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v711  <|@  <|@
f <@*|@fixed>@ <|@
tid v711 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v710 
=== Predecessor ===
v188 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B10" 
    successors "B55" "B81" 
    xhandlers
    flags 
    probability 4579916140811292442
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v710 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v711 v713 
=== Succesors ===
next: a2005 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v711 v713 #next: a2005  <|@  <|@
f <@~|@floating>@ <|@
tid v2059 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a2005 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2005 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$rhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2059 
=== Succesors ===
next: v2108 
=== Usages ===
v2098 v2108 v2071 v2074 
=== Predecessor ===
v710 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2059 #next: v2108  <|@  <|@
tid ?712 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 1
=== Inputs ===
outerFrameState: ?197 
values: a1 i828 i15 
=== Succesors ===
=== Usages ===
v1878 v2108 v2007 i2009 i2013 v2109 i2018 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?197 values: a1 i828 i15  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2108 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?712 
object: a2005 
=== Succesors ===
next: a2006 
=== Usages ===
=== Predecessor ===
a2005 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?712 object: a2005 #next: a2006  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2006 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 25]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2060 
=== Succesors ===
next: v2007 
=== Usages ===
a915 v2097 v2062 v2066 v2070 
=== Predecessor ===
v2108 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2060 #next: v2007  <|@  <|@
f <@~|@floating>@ <|@
tid v2097 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2006 
=== Succesors ===
=== Usages ===
v2007 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2006  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2007 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?712 
guard: - 
address: v2097 
=== Succesors ===
next: v1338 
=== Usages ===
v1964 
=== Predecessor ===
a2006 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?712 guard: - address: v2097 #next: v1338  <|@  <|@
f <@~|@floating>@ <|@
tid v1964 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2007 
y: v1963 
=== Succesors ===
=== Usages ===
v1338 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2007 y: v1963  <|@  <|@
f <@*|@fixed>@ <|@
tid v1338 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1964 
=== Succesors ===
trueSuccessor: v1335 
falseSuccessor: v1337 
=== Usages ===
=== Predecessor ===
v2007 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1964 #trueSuccessor: v1335 #falseSuccessor: v1337  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B80" 
    xhandlers
    flags 
    probability 4579916140811292442
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1335 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2008 
=== Usages ===
=== Predecessor ===
v1338 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2008  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2008 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.locals
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 1]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v2061 
=== Succesors ===
next: i2009 
=== Usages ===
a921 v2063 
=== Predecessor ===
v1335 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2061 #next: i2009  <|@  <|@
f <@~|@floating>@ <|@
tid v2063 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2008 
=== Succesors ===
=== Usages ===
i2009 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2008  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2009 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?712 
guard: - 
address: v2063 
=== Succesors ===
next: i2010 
=== Usages ===
v929 
=== Predecessor ===
a2008 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?712 guard: - address: v2063 #next: i2010  <|@  <|@
f <@~|@floating>@ <|@
tid v2062 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2006 
=== Succesors ===
=== Usages ===
i2010 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2006  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2010 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupTail.localIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2062 
=== Succesors ===
next: v1346 
=== Usages ===
v2064 v929 
=== Predecessor ===
i2009 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2062 #next: v1346  <|@  <|@
f <@~|@floating>@ <|@
tid v929 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2010 
y: i2009 
=== Succesors ===
=== Usages ===
v1346 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2010 y: i2009  <|@  <|@
f <@*|@fixed>@ <|@
tid v1346 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v929 
=== Succesors ===
trueSuccessor: v1343 
falseSuccessor: v1345 
=== Usages ===
=== Predecessor ===
i2010 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v929 #trueSuccessor: v1343 #falseSuccessor: v1345  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" "B58" 
    xhandlers
    flags 
    probability 4579916140811292442
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1343 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2011 
=== Usages ===
i2011 
=== Predecessor ===
v1346 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2011  <|@  <|@
f <@~|@floating>@ <|@
tid a921 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 1]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a2008 
=== Succesors ===
=== Usages ===
v2064 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2008  <|@  <|@
f <@~|@floating>@ <|@
tid v2064 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a921 
index: i2010 
=== Succesors ===
=== Usages ===
i2011 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a921 index: i2010  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2011 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1343 
address: v2064 
=== Succesors ===
next: v1350 
=== Usages ===
v85 v975 i792 i789 
=== Predecessor ===
v1343 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1343 address: v2064 #next: v1350  <|@  <|@
f <@~|@floating>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2011 
y: i15 
=== Succesors ===
=== Usages ===
v1350 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2011 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v1350 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v85 
=== Succesors ===
trueSuccessor: v1349 
falseSuccessor: v1347 
=== Usages ===
=== Predecessor ===
i2011 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v85 #trueSuccessor: v1349 #falseSuccessor: v1347  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1349 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1885 
=== Usages ===
=== Predecessor ===
v1350 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1885  <|@  <|@
f <@~|@floating>@ <|@
tid i1886 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -240147
stableDimension: 0
stamp: i32 [-240147] â‡Š00000000fffc55ed â‡ˆ00000000fffc55ed
stampKind: i32
value: int[-240147|0xfffffffffffc55ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1876 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1885 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1873 
=== Predecessor ===
v1349 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" "B79" 
    xhandlers
    flags 
    probability 4579916140811292442
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1347 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2012 
=== Usages ===
=== Predecessor ===
v1350 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2012  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2012 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.groups
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 17]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v2065 
=== Succesors ===
next: i2013 
=== Usages ===
a942 v2067 
=== Predecessor ===
v1347 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2065 #next: i2013  <|@  <|@
f <@~|@floating>@ <|@
tid v2067 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2012 
=== Succesors ===
=== Usages ===
i2013 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2012  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2013 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 24]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?712 
guard: - 
address: v2067 
=== Succesors ===
next: i2014 
=== Usages ===
v977 v968 
=== Predecessor ===
a2012 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?712 guard: - address: v2067 #next: i2014  <|@  <|@
f <@~|@floating>@ <|@
tid v2066 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2006 
=== Succesors ===
=== Usages ===
i2014 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2006  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2014 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupTail.groupIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 21]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2066 
=== Succesors ===
next: v1358 
=== Usages ===
v968 i100 v2068 
=== Predecessor ===
i2013 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2066 #next: v1358  <|@  <|@
f <@~|@floating>@ <|@
tid v968 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2014 
y: i2013 
=== Succesors ===
=== Usages ===
v1358 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2014 y: i2013  <|@  <|@
f <@*|@fixed>@ <|@
tid v1358 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v968 
=== Succesors ===
trueSuccessor: v1355 
falseSuccessor: v1357 
=== Usages ===
=== Predecessor ===
i2014 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v968 #trueSuccessor: v1355 #falseSuccessor: v1357  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B78" 
    xhandlers
    flags 
    probability 4579916140811292442
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1355 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1362 
=== Usages ===
i2023 v975 
=== Predecessor ===
v1358 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1362  <|@  <|@
f <@~|@floating>@ <|@
tid i100 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 60]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: i32
=== Inputs ===
x: i2014 
y: i28 
=== Succesors ===
=== Usages ===
v2069 v977 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2014 y: i28  <|@  <|@
f <@~|@floating>@ <|@
tid v977 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i100 
y: i2013 
=== Succesors ===
=== Usages ===
v1362 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i100 y: i2013  <|@  <|@
f <@*|@fixed>@ <|@
tid v1362 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v977 
=== Succesors ===
trueSuccessor: v1359 
falseSuccessor: v1361 
=== Usages ===
=== Predecessor ===
v1355 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v977 #trueSuccessor: v1359 #falseSuccessor: v1361  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B68" 
    xhandlers
    flags 
    probability 4579916140811292442
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1359 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2015 
=== Usages ===
i2022 v984 
=== Predecessor ===
v1362 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2015  <|@  <|@
f <@~|@floating>@ <|@
tid v2070 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2006 
=== Succesors ===
=== Usages ===
a2015 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2006  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2015 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 64]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2070 
=== Succesors ===
next: v2109 
=== Usages ===
a987 v2109 v2099 
=== Predecessor ===
v1359 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2070 #next: v2109  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2109 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?712 
object: a2015 
=== Succesors ===
next: v2016 
=== Usages ===
=== Predecessor ===
a2015 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?712 object: a2015 #next: v2016  <|@  <|@
f <@~|@floating>@ <|@
tid v2098 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2005 
=== Succesors ===
=== Usages ===
v2016 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2005  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2016 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2098 
=== Succesors ===
next: v232 
=== Usages ===
v1966 v1965 
=== Predecessor ===
v2109 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2098 #next: v232  <|@  <|@
f <@~|@floating>@ <|@
tid v1965 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2016 
y: v1961 
=== Succesors ===
=== Usages ===
v232 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2016 y: v1961  <|@  <|@
f <@~|@floating>@ <|@
tid v2071 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2005 
=== Succesors ===
=== Usages ===
a2017 i2020 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2005  <|@  <|@
f <@*|@fixed>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$BitClass; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1965 
=== Succesors ===
trueSuccessor: v225 
falseSuccessor: v231 
=== Usages ===
=== Predecessor ===
v2016 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1965 #trueSuccessor: v225 #falseSuccessor: v231  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B67" 
    xhandlers
    flags 
    probability 4575412541183921946
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$BitClass; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2017 
=== Usages ===
=== Predecessor ===
v232 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2017  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2017 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$BitClass.bits
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: n# [Z
=== Inputs ===
stateBefore: - 
guard: - 
address: v2071 
=== Succesors ===
next: i2018 
=== Usages ===
v2073 v2072 
=== Predecessor ===
v225 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2071 #next: i2018  <|@  <|@
f <@~|@floating>@ <|@
tid v2072 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2017 
=== Succesors ===
=== Usages ===
i2018 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2017  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2018 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?712 
guard: - 
address: v2072 
=== Succesors ===
next: v1374 
=== Usages ===
v998 
=== Predecessor ===
a2017 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?712 guard: - address: v2072 #next: v1374  <|@  <|@
f <@~|@floating>@ <|@
tid v998 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i828 
y: i2018 
=== Succesors ===
=== Usages ===
v1374 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i828 y: i2018  <|@  <|@
f <@*|@fixed>@ <|@
tid v1374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v998 
=== Succesors ===
trueSuccessor: v1371 
falseSuccessor: v1373 
=== Usages ===
=== Predecessor ===
i2018 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v998 #trueSuccessor: v1371 #falseSuccessor: v1373  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B66" 
    xhandlers
    flags 
    probability 4575412541183921946
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1371 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1378 
=== Usages ===
i2019 
=== Predecessor ===
v1374 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1378  <|@  <|@
f <@~|@floating>@ <|@
tid v1218 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1980 
y: i1217 
=== Succesors ===
=== Usages ===
v1378 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1980 y: i1217  <|@  <|@
f <@*|@fixed>@ <|@
tid v1378 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1218 
=== Succesors ===
trueSuccessor: v1375 
falseSuccessor: v1377 
=== Usages ===
=== Predecessor ===
v1371 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1218 #trueSuccessor: v1375 #falseSuccessor: v1377  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4575412541183921946
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1375 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2019 
=== Usages ===
=== Predecessor ===
v1378 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2019  <|@  <|@
f <@~|@floating>@ <|@
tid j1974 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
resultBits: 64
stamp: i64 [0 - 65535] â‡ˆ000000000000ffff
=== Inputs ===
value: i1980 
=== Succesors ===
=== Usages ===
v2073 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1980  <|@  <|@
f <@~|@floating>@ <|@
tid v2073 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: j1974 
index: a2017 
=== Succesors ===
=== Usages ===
i2019 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1974 index: a2017  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2019 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: byte
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: i8 [0 - 1] â‡ˆ0000000000000001
=== Inputs ===
stateBefore: - 
guard: v1371 
address: v2073 
=== Succesors ===
next: v1394 
=== Usages ===
i1137 
=== Predecessor ===
v1375 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1371 address: v2073 #next: v1394  <|@  <|@
f <@~|@floating>@ <|@
tid i1137 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 8
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
resultBits: 32
stamp: i32 [0 - 1] â‡ˆ0000000000000001
=== Inputs ===
value: i2019 
=== Succesors ===
=== Usages ===
v16 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2019  <|@  <|@
f <@~|@floating>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1137 
y: i15 
=== Succesors ===
=== Usages ===
v1394 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1137 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v1394 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v16 
=== Succesors ===
trueSuccessor: v1393 
falseSuccessor: v1391 
=== Usages ===
=== Predecessor ===
i2019 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v16 #trueSuccessor: v1393 #falseSuccessor: v1391  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1393 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1392 
=== Usages ===
=== Predecessor ===
v1394 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1392  <|@  <|@
tid ?175 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<Pattern$CharProperty.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3778
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 a4 i828 i15 
=== Succesors ===
=== Usages ===
v1392 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 a4 i828 i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v1392 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 912
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?175 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1393 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?175  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B74" 
    xhandlers
    flags 
    probability 4575412541183921946
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1391 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2104 
=== Usages ===
=== Predecessor ===
v1394 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2104  <|@  <|@
f <@*|@fixed>@ <|@
tid v2104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2103 
=== Predecessor ===
v1391 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1377 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1907 
=== Usages ===
=== Predecessor ===
v1378 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1907  <|@  <|@
f <@~|@floating>@ <|@
tid i1908 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -253203
stableDimension: 0
stamp: i32 [-253203] â‡Š00000000fffc22ed â‡ˆ00000000fffc22ed
stampKind: i32
value: int[-253203|0xfffffffffffc22ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1876 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1907 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1873 
=== Predecessor ===
v1377 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1373 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1905 
=== Usages ===
=== Predecessor ===
v1374 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1905  <|@  <|@
f <@~|@floating>@ <|@
tid i1906 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -255771
stableDimension: 0
stamp: i32 [-255771] â‡Š00000000fffc18e5 â‡ˆ00000000fffc18e5
stampKind: i32
value: int[-255771|0xfffffffffffc18e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1876 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1905 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1873 
=== Predecessor ===
v1373 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B69" "B77" 
    xhandlers
    flags 
    probability 4575412541183921946
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1382 
=== Usages ===
=== Predecessor ===
v232 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1382  <|@  <|@
f <@~|@floating>@ <|@
tid v1966 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2016 
y: v1953 
=== Succesors ===
=== Usages ===
v1382 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2016 y: v1953  <|@  <|@
f <@*|@fixed>@ <|@
tid v1382 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1966 
=== Succesors ===
trueSuccessor: v1379 
falseSuccessor: v1381 
=== Usages ===
=== Predecessor ===
v231 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1966 #trueSuccessor: v1379 #falseSuccessor: v1381  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4575412541183921946
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1379 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2020 
=== Usages ===
=== Predecessor ===
v1382 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2020  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2020 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2071 
=== Succesors ===
next: v1386 
=== Usages ===
v343 
=== Predecessor ===
v1379 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2071 #next: v1386  <|@  <|@
f <@~|@floating>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i828 
y: i2020 
=== Succesors ===
=== Usages ===
v1386 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i828 y: i2020  <|@  <|@
f <@*|@fixed>@ <|@
tid v1386 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v343 
=== Succesors ===
trueSuccessor: v1385 
falseSuccessor: v1383 
=== Usages ===
=== Predecessor ===
i2020 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v343 #trueSuccessor: v1385 #falseSuccessor: v1383  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1385 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1899 
=== Usages ===
=== Predecessor ===
v1386 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1899  <|@  <|@
f <@~|@floating>@ <|@
tid i1900 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -258067
stableDimension: 0
stamp: i32 [-258067] â‡Š00000000fffc0fed â‡ˆ00000000fffc0fed
stampKind: i32
value: int[-258067|0xfffffffffffc0fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1876 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1899 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1873 
=== Predecessor ===
v1385 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    probability 4575412541183921946
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1383 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2021 
=== Usages ===
=== Predecessor ===
v1386 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2021  <|@  <|@
f <@~|@floating>@ <|@
tid v2074 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2005 
=== Succesors ===
=== Usages ===
i2021 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2005  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2021 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2074 
=== Succesors ===
next: v1390 
=== Usages ===
v347 
=== Predecessor ===
v1383 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2074 #next: v1390  <|@  <|@
f <@~|@floating>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2021 
y: i828 
=== Succesors ===
=== Usages ===
v1390 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2021 y: i828  <|@  <|@
f <@*|@fixed>@ <|@
tid v1390 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v347 
=== Succesors ===
trueSuccessor: v1389 
falseSuccessor: v1387 
=== Usages ===
=== Predecessor ===
i2021 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v347 #trueSuccessor: v1389 #falseSuccessor: v1387  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1389 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1903 
=== Usages ===
=== Predecessor ===
v1390 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1903  <|@  <|@
f <@~|@floating>@ <|@
tid i1904 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -258323
stableDimension: 0
stamp: i32 [-258323] â‡Š00000000fffc0eed â‡ˆ00000000fffc0eed
stampKind: i32
value: int[-258323|0xfffffffffffc0eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1876 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1903 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1873 
=== Predecessor ===
v1389 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" 
    xhandlers
    flags 
    probability 4575412541183921946
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1387 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v199 
=== Usages ===
=== Predecessor ===
v1390 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v199  <|@  <|@
f <@*|@fixed>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2103 
=== Predecessor ===
v1387 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B65" "B73" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4579916140811292442
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2103 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2104 v199 
=== Succesors ===
next: i2022 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2104 v199 #next: i2022  <|@  <|@
f <@~|@floating>@ <|@
tid a942 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 17]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a2012 
=== Succesors ===
=== Usages ===
v2068 a546 v2069 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2012  <|@  <|@
f <@~|@floating>@ <|@
tid v2069 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a942 
index: i100 
=== Succesors ===
=== Usages ===
v984 i2022 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a942 index: i100  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2022 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4715) [bci: 37]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1359 
address: v2069 
=== Succesors ===
next: i2023 
=== Usages ===
i552 i550 
=== Predecessor ===
v2103 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1359 address: v2069 #next: i2023  <|@  <|@
f <@~|@floating>@ <|@
tid v2068 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a942 
index: i2014 
=== Succesors ===
=== Usages ===
v975 i2023 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a942 index: i2014  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2023 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 24]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1355 
address: v2068 
=== Succesors ===
next: v975 
=== Usages ===
i549 i547 
=== Predecessor ===
i2022 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1355 address: v2068 #next: v975  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v975 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1355 
address: v2068 
value: i2011 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v984 
=== Usages ===
=== Predecessor ===
i2023 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1355 address: v2068 value: i2011 stateAfter: - lastLocationAccess: - #next: v984  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v984 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1359 
address: v2069 
value: i22 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2024 
=== Usages ===
=== Predecessor ===
v975 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1359 address: v2069 value: i22 stateAfter: - lastLocationAccess: - #next: v2024  <|@  <|@
f <@~|@floating>@ <|@
tid v2099 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2015 
=== Succesors ===
=== Usages ===
v2024 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2015  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2024 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2099 
=== Succesors ===
next: v134 
=== Usages ===
v1968 
=== Predecessor ===
v984 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2099 #next: v134  <|@  <|@
f <@~|@floating>@ <|@
tid v1968 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2024 
y: v1967 
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2024 y: v1967  <|@  <|@
f <@~|@floating>@ <|@
tid a915 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 25]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a2006 
=== Succesors ===
=== Usages ===
a541 a542 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2006  <|@  <|@
f <@*|@fixed>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$LastNode; target_method=match target_method_class=Ljava/util/regex/Pattern$LastNode; position=at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
trueSuccessorProbability: 0.8257972313536578
=== Inputs ===
condition: v1968 
=== Succesors ===
trueSuccessor: v127 
falseSuccessor: v133 
=== Usages ===
=== Predecessor ===
v2024 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1968 #trueSuccessor: v127 #falseSuccessor: v133  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B92" 
    xhandlers
    flags 
    probability 4578389685735908546
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$LastNode; target_method=match target_method_class=Ljava/util/regex/Pattern$LastNode; position=at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v534 
=== Usages ===
=== Predecessor ===
v134 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v534  <|@  <|@
f <@*|@fixed>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v533 
=== Predecessor ===
v127 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B99" 
    xhandlers
    flags 
    probability 4568252242827848031
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v538 
=== Usages ===
=== Predecessor ===
v134 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v538  <|@  <|@
f <@~|@floating>@ <|@
tid a987 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 64]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a2015 
=== Succesors ===
=== Usages ===
a553 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2015  <|@  <|@
f <@*|@fixed>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v537 
=== Predecessor ===
v133 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1381 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1901 
=== Usages ===
=== Predecessor ===
v1382 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1901  <|@  <|@
f <@~|@floating>@ <|@
tid i1902 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -256819
stableDimension: 0
stamp: i32 [-256819] â‡Š00000000fffc14cd â‡ˆ00000000fffc14cd
stampKind: i32
value: int[-256819|0xfffffffffffc14cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1876 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1901 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1873 
=== Predecessor ===
v1381 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1895 
=== Usages ===
=== Predecessor ===
v1362 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1895  <|@  <|@
f <@~|@floating>@ <|@
tid i1896 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -250395
stableDimension: 0
stamp: i32 [-250395] â‡Š00000000fffc2de5 â‡ˆ00000000fffc2de5
stampKind: i32
value: int[-250395|0xfffffffffffc2de5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1876 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1895 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1873 
=== Predecessor ===
v1361 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1357 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1893 
=== Usages ===
=== Predecessor ===
v1358 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1893  <|@  <|@
f <@~|@floating>@ <|@
tid i1894 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -248091
stableDimension: 0
stamp: i32 [-248091] â‡Š00000000fffc36e5 â‡ˆ00000000fffc36e5
stampKind: i32
value: int[-248091|0xfffffffffffc36e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1876 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1893 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1873 
=== Predecessor ===
v1357 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1345 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1887 
=== Usages ===
=== Predecessor ===
v1346 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1887  <|@  <|@
f <@~|@floating>@ <|@
tid i1888 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -238107
stableDimension: 0
stamp: i32 [-238107] â‡Š00000000fffc5de5 â‡ˆ00000000fffc5de5
stampKind: i32
value: int[-238107|0xfffffffffffc5de5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1876 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1887 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1873 
=== Predecessor ===
v1345 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1337 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1883 
=== Usages ===
=== Predecessor ===
v1338 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1883  <|@  <|@
f <@~|@floating>@ <|@
tid i1884 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -234803
stableDimension: 0
stamp: i32 [-234803] â‡Š00000000fffc6acd â‡ˆ00000000fffc6acd
stampKind: i32
value: int[-234803|0xfffffffffffc6acd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1876 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1883 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1873 
=== Predecessor ===
v1337 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B57" "B80" "B79" "B78" "B70" "B77" "B72" "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 2370019303903723520
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1876 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-258323 - -233227] â‡Š00000000fffc00c5 â‡ˆ00000000fffc7ffd
valueDescription: i32
=== Inputs ===
merge: v1873 
values: i1884 i1886 i1888 i1894 i1896 i1900 i1902 i1904 i1906 i1908 
=== Succesors ===
=== Usages ===
v1878 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1873 values: i1884 i1886 i1888 i1894 i1896 i1900 i1902 i1904 i1906 i1908  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1873 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1883 v1885 v1887 v1893 v1895 v1899 v1901 v1903 v1905 v1907 
=== Succesors ===
next: v1878 
=== Usages ===
i1876 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1883 v1885 v1887 v1893 v1895 v1899 v1901 v1903 v1905 v1907 #next: v1878  <|@  <|@
f <@*|@fixed>@ <|@
tid v1878 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?712 
actionAndReason: i1876 
speculation: a1777 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1873 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?712 actionAndReason: i1876 speculation: a1777  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B84" 
    xhandlers
    flags 
    probability 4598172540601706155
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 22]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v614 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v614  <|@  <|@
f <@*|@fixed>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v613 
=== Predecessor ===
v189 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B49" "B13" "B20" 
    successors "B85" "B107" 
    xhandlers
    flags 
    probability 4607045504440169924
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i618 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] â‡ˆ0000000000000001
valueDescription: i32
=== Inputs ===
merge: v613 
values: i205 i28 i28 i28 
=== Succesors ===
=== Usages ===
?615 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v613 values: i205 i28 i28 i28  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v614 v616 v657 v674 
=== Succesors ===
next: a2025 
=== Usages ===
i618 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v614 v616 v657 v674 #next: a2025  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2025 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 25]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2060 
=== Succesors ===
next: v2026 
=== Usages ===
a1011 v2100 v2075 v2078 v2082 
=== Predecessor ===
v613 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2060 #next: v2026  <|@  <|@
tid ?615 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 1
=== Inputs ===
outerFrameState: ?197 
values: a1 i828 i618 
=== Succesors ===
=== Usages ===
v1856 v2026 i2028 i2032 v2035 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?197 values: a1 i828 i618  <|@  <|@
f <@~|@floating>@ <|@
tid v2100 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2025 
=== Succesors ===
=== Usages ===
v2026 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2025  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2026 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?615 
guard: - 
address: v2100 
=== Succesors ===
next: v1402 
=== Usages ===
v1969 
=== Predecessor ===
a2025 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?615 guard: - address: v2100 #next: v1402  <|@  <|@
f <@~|@floating>@ <|@
tid v1969 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2026 
y: v1963 
=== Succesors ===
=== Usages ===
v1402 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2026 y: v1963  <|@  <|@
f <@*|@fixed>@ <|@
tid v1402 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1969 
=== Succesors ===
trueSuccessor: v1399 
falseSuccessor: v1401 
=== Usages ===
=== Predecessor ===
v2026 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1969 #trueSuccessor: v1399 #falseSuccessor: v1401  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B86" "B106" 
    xhandlers
    flags 
    probability 4607045504440169924
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2027 
=== Usages ===
=== Predecessor ===
v1402 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2027  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2027 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.locals
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 1]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v2061 
=== Succesors ===
next: i2028 
=== Usages ===
a1015 v2076 
=== Predecessor ===
v1399 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2061 #next: i2028  <|@  <|@
f <@~|@floating>@ <|@
tid v2076 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2027 
=== Succesors ===
=== Usages ===
i2028 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2027  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2028 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?615 
guard: - 
address: v2076 
=== Succesors ===
next: i2029 
=== Usages ===
v1023 
=== Predecessor ===
a2027 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?615 guard: - address: v2076 #next: i2029  <|@  <|@
f <@~|@floating>@ <|@
tid v2075 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2025 
=== Succesors ===
=== Usages ===
i2029 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2025  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2029 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupTail.localIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2075 
=== Succesors ===
next: v1410 
=== Usages ===
v2077 v1023 
=== Predecessor ===
i2028 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2075 #next: v1410  <|@  <|@
f <@~|@floating>@ <|@
tid v1023 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2029 
y: i2028 
=== Succesors ===
=== Usages ===
v1410 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2029 y: i2028  <|@  <|@
f <@*|@fixed>@ <|@
tid v1410 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1023 
=== Succesors ===
trueSuccessor: v1407 
falseSuccessor: v1409 
=== Usages ===
=== Predecessor ===
i2029 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1023 #trueSuccessor: v1407 #falseSuccessor: v1409  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B87" "B88" 
    xhandlers
    flags 
    probability 4607045504440169924
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1407 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2030 
=== Usages ===
i2030 
=== Predecessor ===
v1410 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2030  <|@  <|@
f <@~|@floating>@ <|@
tid a1015 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 1]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a2027 
=== Succesors ===
=== Usages ===
v2077 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2027  <|@  <|@
f <@~|@floating>@ <|@
tid v2077 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1015 
index: i2029 
=== Succesors ===
=== Usages ===
i2030 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1015 index: i2029  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2030 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1407 
address: v2077 
=== Succesors ===
next: v1414 
=== Usages ===
v566 v1066 i792 i789 
=== Predecessor ===
v1407 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1407 address: v2077 #next: v1414  <|@  <|@
f <@~|@floating>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2030 
y: i15 
=== Succesors ===
=== Usages ===
v1414 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2030 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v1414 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v566 
=== Succesors ===
trueSuccessor: v1413 
falseSuccessor: v1411 
=== Usages ===
=== Predecessor ===
i2030 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v566 #trueSuccessor: v1413 #falseSuccessor: v1411  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1413 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1861 
=== Usages ===
=== Predecessor ===
v1414 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1861  <|@  <|@
f <@~|@floating>@ <|@
tid i1862 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -263955
stableDimension: 0
stamp: i32 [-263955] â‡Š00000000fffbf8ed â‡ˆ00000000fffbf8ed
stampKind: i32
value: int[-263955|0xfffffffffffbf8ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1854 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1861 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1851 
=== Predecessor ===
v1413 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B89" "B105" 
    xhandlers
    flags 
    probability 4607045504440169924
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1411 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2031 
=== Usages ===
=== Predecessor ===
v1414 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2031  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2031 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.groups
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 17]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v2065 
=== Succesors ===
next: i2032 
=== Usages ===
a1033 v2079 
=== Predecessor ===
v1411 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2065 #next: i2032  <|@  <|@
f <@~|@floating>@ <|@
tid v2079 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2031 
=== Succesors ===
=== Usages ===
i2032 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2031  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2032 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 24]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?615 
guard: - 
address: v2079 
=== Succesors ===
next: i2033 
=== Usages ===
v1068 v1059 
=== Predecessor ===
a2031 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?615 guard: - address: v2079 #next: i2033  <|@  <|@
f <@~|@floating>@ <|@
tid v2078 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2025 
=== Succesors ===
=== Usages ===
i2033 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2025  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2033 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupTail.groupIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 21]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2078 
=== Succesors ===
next: v1422 
=== Usages ===
v1059 v2080 i574 
=== Predecessor ===
i2032 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2078 #next: v1422  <|@  <|@
f <@~|@floating>@ <|@
tid v1059 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2033 
y: i2032 
=== Succesors ===
=== Usages ===
v1422 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2033 y: i2032  <|@  <|@
f <@*|@fixed>@ <|@
tid v1422 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1059 
=== Succesors ===
trueSuccessor: v1419 
falseSuccessor: v1421 
=== Usages ===
=== Predecessor ===
i2033 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1059 #trueSuccessor: v1419 #falseSuccessor: v1421  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B90" "B104" 
    xhandlers
    flags 
    probability 4607045504440169924
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1419 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1426 
=== Usages ===
i2037 v1066 
=== Predecessor ===
v1422 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1426  <|@  <|@
f <@~|@floating>@ <|@
tid i574 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 60]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: i32
=== Inputs ===
x: i2033 
y: i28 
=== Succesors ===
=== Usages ===
v1068 v2081 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2033 y: i28  <|@  <|@
f <@~|@floating>@ <|@
tid v1068 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i574 
y: i2032 
=== Succesors ===
=== Usages ===
v1426 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i574 y: i2032  <|@  <|@
f <@*|@fixed>@ <|@
tid v1426 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1068 
=== Succesors ===
trueSuccessor: v1423 
falseSuccessor: v1425 
=== Usages ===
=== Predecessor ===
v1419 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1068 #trueSuccessor: v1423 #falseSuccessor: v1425  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B91" "B98" 
    xhandlers
    flags 
    probability 4607045504440169924
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1423 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2034 
=== Usages ===
i2036 v1075 
=== Predecessor ===
v1426 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2034  <|@  <|@
f <@~|@floating>@ <|@
tid v2082 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2025 
=== Succesors ===
=== Usages ===
a2034 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2025  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2034 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 64]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2082 
=== Succesors ===
next: v2035 
=== Usages ===
a1078 v2101 
=== Predecessor ===
v1423 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2082 #next: v2035  <|@  <|@
f <@~|@floating>@ <|@
tid v2101 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2034 
=== Succesors ===
=== Usages ===
v2035 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2034  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2035 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?615 
guard: - 
address: v2101 
=== Succesors ===
next: i2036 
=== Usages ===
v1970 
=== Predecessor ===
a2034 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?615 guard: - address: v2101 #next: i2036  <|@  <|@
f <@~|@floating>@ <|@
tid a1033 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 17]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a2031 
=== Succesors ===
=== Usages ===
v2080 a546 v2081 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2031  <|@  <|@
f <@~|@floating>@ <|@
tid v2081 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1033 
index: i574 
=== Succesors ===
=== Usages ===
v1075 i2036 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1033 index: i574  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2036 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4715) [bci: 37]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1423 
address: v2081 
=== Succesors ===
next: i2037 
=== Usages ===
i550 i552 
=== Predecessor ===
v2035 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1423 address: v2081 #next: i2037  <|@  <|@
f <@~|@floating>@ <|@
tid v2080 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1033 
index: i2033 
=== Succesors ===
=== Usages ===
v1066 i2037 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1033 index: i2033  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2037 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 24]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1419 
address: v2080 
=== Succesors ===
next: v1066 
=== Usages ===
i547 i549 
=== Predecessor ===
i2036 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1419 address: v2080 #next: v1066  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1066 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1419 
address: v2080 
value: i2030 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1075 
=== Usages ===
=== Predecessor ===
i2037 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1419 address: v2080 value: i2030 stateAfter: - lastLocationAccess: - #next: v1075  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1075 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1423 
address: v2081 
value: i22 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v584 
=== Usages ===
=== Predecessor ===
v1066 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1423 address: v2081 value: i22 stateAfter: - lastLocationAccess: - #next: v584  <|@  <|@
f <@~|@floating>@ <|@
tid v1970 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2035 
y: v1967 
=== Succesors ===
=== Usages ===
v584 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2035 y: v1967  <|@  <|@
f <@~|@floating>@ <|@
tid a1011 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 25]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a2025 
=== Succesors ===
=== Usages ===
a541 a542 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2025  <|@  <|@
f <@*|@fixed>@ <|@
tid v584 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$LastNode; target_method=match target_method_class=Ljava/util/regex/Pattern$LastNode; position=at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
trueSuccessorProbability: 0.8257972313536578
=== Inputs ===
condition: v1970 
=== Succesors ===
trueSuccessor: v578 
falseSuccessor: v583 
=== Usages ===
=== Predecessor ===
v1075 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1970 #trueSuccessor: v578 #falseSuccessor: v583  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B92" 
    xhandlers
    flags 
    probability 4605500276252797646
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$LastNode; target_method=match target_method_class=Ljava/util/regex/Pattern$LastNode; position=at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v536 
=== Usages ===
=== Predecessor ===
v584 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v536  <|@  <|@
f <@*|@fixed>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v533 
=== Predecessor ===
v578 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B75" "B91" 
    successors "B93" "B94" 
    xhandlers
    flags 
    probability 4605613339752092257
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a542 <|@
d <@d|@=== Debug Properties ===
stamp: a!# Ljava/util/regex/Pattern$GroupTail;
valueDescription: a -
=== Inputs ===
merge: v533 
values: a915 a1011 
=== Succesors ===
=== Usages ===
?535 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v533 values: a915 a1011  <|@  <|@
f <@~|@floating>@ <|@
tid i789 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v533 
values: i2011 i2030 
=== Succesors ===
=== Usages ===
?535 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v533 values: i2011 i2030  <|@  <|@
f <@~|@floating>@ <|@
tid a546 <|@
d <@d|@=== Debug Properties ===
stamp: a# [I
valueDescription: a -
=== Inputs ===
merge: v533 
values: a942 a1033 
=== Succesors ===
=== Usages ===
v2088 v2087 v2086 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v533 values: a942 a1033  <|@  <|@
f <@~|@floating>@ <|@
tid i549 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v533 
values: i2023 i2037 
=== Succesors ===
=== Usages ===
?535 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v533 values: i2023 i2037  <|@  <|@
f <@~|@floating>@ <|@
tid i552 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v533 
values: i2022 i2036 
=== Succesors ===
=== Usages ===
?535 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v533 values: i2022 i2036  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v534 v536 
=== Succesors ===
next: i2038 
=== Usages ===
a542 i789 a546 i549 i552 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v534 v536 #next: i2038  <|@  <|@
f <@~|@floating>@ <|@
tid v2083 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i2038 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2038 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.acceptMode
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 1]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2083 
=== Succesors ===
next: v1434 
=== Usages ===
v147 
=== Predecessor ===
v533 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2083 #next: v1434  <|@  <|@
f <@~|@floating>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2038 
y: i28 
=== Succesors ===
=== Usages ===
v1434 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2038 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v1434 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v147 
=== Succesors ===
trueSuccessor: v1433 
falseSuccessor: v1431 
=== Usages ===
=== Predecessor ===
i2038 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v147 #trueSuccessor: v1433 #falseSuccessor: v1431  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1433 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1834 
=== Usages ===
=== Predecessor ===
v1434 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1834  <|@  <|@
f <@~|@floating>@ <|@
tid i1835 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -277267
stableDimension: 0
stamp: i32 [-277267] â‡Š00000000fffbc4ed â‡ˆ00000000fffbc4ed
stampKind: i32
value: int[-277267|0xfffffffffffbc4ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1836 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1834 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1833 
=== Predecessor ===
v1433 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" "B97" 
    xhandlers
    flags 
    probability 4605613339752092257
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1431 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2039 
=== Usages ===
=== Predecessor ===
v1434 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2039  <|@  <|@
f <@~|@floating>@ <|@
tid v2086 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a546 
index: - 
=== Succesors ===
=== Usages ===
i2039 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a546 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2039 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 32]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v2086 
=== Succesors ===
next: v1442 
=== Usages ===
v1214 
=== Predecessor ===
v1431 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2086 #next: v1442  <|@  <|@
f <@~|@floating>@ <|@
tid i933 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] â‡Š0000000000000002 â‡ˆ0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1214 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1214 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3437) [bci: 42]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2039 
y: i933 
=== Succesors ===
=== Usages ===
v1442 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2039 y: i933  <|@  <|@
f <@*|@fixed>@ <|@
tid v1442 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 32]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1214 
=== Succesors ===
trueSuccessor: v1441 
falseSuccessor: v1439 
=== Usages ===
=== Predecessor ===
i2039 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1214 #trueSuccessor: v1441 #falseSuccessor: v1439  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1441 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 32]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1841 
=== Usages ===
=== Predecessor ===
v1442 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1841  <|@  <|@
f <@~|@floating>@ <|@
tid i1842 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -293147
stableDimension: 0
stamp: i32 [-293147] â‡Š00000000fffb86e5 â‡ˆ00000000fffb86e5
stampKind: i32
value: int[-293147|0xfffffffffffb86e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1836 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1841 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1833 
=== Predecessor ===
v1441 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B93" "B95" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1836 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-293147 - -277267] â‡Š00000000fffb84e5 â‡ˆ00000000fffbc6ed
valueDescription: i32
=== Inputs ===
merge: v1833 
values: i1835 i1842 
=== Succesors ===
=== Usages ===
v1838 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1833 values: i1835 i1842  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1833 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1834 v1841 
=== Succesors ===
next: v1838 
=== Usages ===
i1836 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1834 v1841 #next: v1838  <|@  <|@
tid ?535 <|@
d <@d|@=== Debug Properties ===
bci: 63
code: ResolvedJavaMethodBytecode<Pattern$GroupTail.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4719
stackSize: 0
=== Inputs ===
outerFrameState: ?110 
values: a542 a2 i22 a4 i789 i549 i552 
=== Succesors ===
=== Usages ===
v1838 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?110 values: a542 a2 i22 a4 i789 i549 i552  <|@  <|@
f <@*|@fixed>@ <|@
tid v1838 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?535 
actionAndReason: i1836 
speculation: a1777 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1833 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?535 actionAndReason: i1836 speculation: a1777  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors 
    xhandlers
    flags 
    probability 4605613339752092257
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1439 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 32]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1086 
=== Usages ===
v1102 v1111 
=== Predecessor ===
v1442 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1086  <|@  <|@
f <@~|@floating>@ <|@
tid v2084 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v1086 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1086 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Matcher.last
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3435) [bci: 20]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2084 
value: i22 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i2040 
=== Usages ===
=== Predecessor ===
v1439 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2084 value: i22 stateAfter: - lastLocationAccess: - #next: i2040  <|@  <|@
f <@~|@floating>@ <|@
tid v2085 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i2040 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2040 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.first
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 29]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2085 
=== Succesors ===
next: v1102 
=== Usages ===
v1102 
=== Predecessor ===
v1086 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2085 #next: v1102  <|@  <|@
f <@~|@floating>@ <|@
tid v2087 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a546 
index: - 
=== Succesors ===
=== Usages ===
v1102 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a546 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1102 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 32]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1439 
address: v2087 
value: i2040 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1111 
=== Usages ===
=== Predecessor ===
i2040 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1439 address: v2087 value: i2040 stateAfter: - lastLocationAccess: - #next: v1111  <|@  <|@
f <@~|@floating>@ <|@
tid v2088 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a546 
index: - 
=== Succesors ===
=== Usages ===
v1111 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a546 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1111 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3437) [bci: 42]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1439 
address: v2088 
value: i22 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v588 
=== Usages ===
=== Predecessor ===
v1102 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1439 address: v2088 value: i22 stateAfter: - lastLocationAccess: - #next: v588  <|@  <|@
f <@*|@fixed>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 48]
stamp: void
=== Inputs ===
result: i28 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1111 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i28 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B99" 
    xhandlers
    flags 
    probability 4595348933040024535
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v583 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v540 
=== Usages ===
=== Predecessor ===
v584 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v540  <|@  <|@
f <@~|@floating>@ <|@
tid a1078 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 64]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a2034 
=== Succesors ===
=== Usages ===
a553 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2034  <|@  <|@
f <@*|@fixed>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v537 
=== Predecessor ===
v583 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B76" "B98" 
    successors "B100" "B103" 
    xhandlers
    flags 
    probability 4595444336482236028
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a541 <|@
d <@d|@=== Debug Properties ===
stamp: a!# Ljava/util/regex/Pattern$GroupTail;
valueDescription: a -
=== Inputs ===
merge: v537 
values: a915 a1011 
=== Succesors ===
=== Usages ===
?166 ?539 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v537 values: a915 a1011  <|@  <|@
f <@~|@floating>@ <|@
tid i792 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v537 
values: i2011 i2030 
=== Succesors ===
=== Usages ===
?539 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v537 values: i2011 i2030  <|@  <|@
f <@~|@floating>@ <|@
tid i547 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v537 
values: i2023 i2037 
=== Succesors ===
=== Usages ===
?166 ?539 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v537 values: i2023 i2037  <|@  <|@
f <@~|@floating>@ <|@
tid i550 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v537 
values: i2022 i2036 
=== Succesors ===
=== Usages ===
?166 ?539 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v537 values: i2022 i2036  <|@  <|@
f <@~|@floating>@ <|@
tid a553 <|@
d <@d|@=== Debug Properties ===
stamp: a! Ljava/util/regex/Pattern$Node;
valueDescription: a -
=== Inputs ===
merge: v537 
values: a987 a1078 
=== Succesors ===
=== Usages ===
v2102 v2089 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v537 values: a987 a1078  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v538 v540 
=== Succesors ===
next: v2041 
=== Usages ===
a541 i792 i547 i550 a553 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v538 v540 #next: v2041  <|@  <|@
f <@~|@floating>@ <|@
tid v2102 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a553 
index: - 
=== Succesors ===
=== Usages ===
v2041 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a553 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2041 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2102 
=== Succesors ===
next: v1446 
=== Usages ===
v1972 
=== Predecessor ===
v537 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2102 #next: v1446  <|@  <|@
f <@~|@floating>@ <|@
tid v1971 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$BranchConn;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$BranchConn;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1972 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1972 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2041 
y: v1971 
=== Succesors ===
=== Usages ===
v1446 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2041 y: v1971  <|@  <|@
tid ?539 <|@
d <@d|@=== Debug Properties ===
bci: 63
code: ResolvedJavaMethodBytecode<Pattern$GroupTail.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4719
stackSize: 0
=== Inputs ===
outerFrameState: ?110 
values: a541 a2 i22 a4 i792 i547 i550 
=== Succesors ===
=== Usages ===
v1848 v2107 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?110 values: a541 a2 i22 a4 i792 i547 i550  <|@  <|@
f <@*|@fixed>@ <|@
tid v1446 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BranchConn; target_method=match target_method_class=Ljava/util/regex/Pattern$BranchConn; position=at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1972 
=== Succesors ===
trueSuccessor: v1443 
falseSuccessor: v1445 
=== Usages ===
=== Predecessor ===
v2041 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1972 #trueSuccessor: v1443 #falseSuccessor: v1445  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B101" "B102" 
    xhandlers
    flags 
    probability 4595444336482236028
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1443 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BranchConn; target_method=match target_method_class=Ljava/util/regex/Pattern$BranchConn; position=at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2042 
=== Usages ===
=== Predecessor ===
v1446 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2042  <|@  <|@
f <@~|@floating>@ <|@
tid v2089 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a553 
index: - 
=== Succesors ===
=== Usages ===
a2042 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a553 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2042 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 1]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2089 
=== Succesors ===
next: v2107 
=== Usages ===
a1115 v2107 
=== Predecessor ===
v1443 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2089 #next: v2107  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2107 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?539 
object: a2042 
=== Succesors ===
next: i163 
=== Usages ===
=== Predecessor ===
a2042 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?539 object: a2042 #next: i163  <|@  <|@
f <@~|@floating>@ <|@
tid a1115 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 1]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a2042 
=== Succesors ===
=== Usages ===
v1119 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2042  <|@  <|@
tid v1119 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
returnStamp: i32 [0 - 1] â‡ˆ0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@630f0931
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
arguments: a1115 a2 i22 a4 
=== Succesors ===
=== Usages ===
i163 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1115 a2 i22 a4  <|@  <|@
tid ?166 <|@
d <@d|@=== Debug Properties ===
bci: 70
code: ResolvedJavaMethodBytecode<Pattern$GroupTail.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 7
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4719
stackSize: 0
=== Inputs ===
outerFrameState: ?110 
values: a541 a2 - - - i547 i550 
=== Succesors ===
=== Usages ===
?164 ?1773 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?110 values: a541 a2 - - - i547 i550  <|@  <|@
tid ?1773 <|@
d <@d|@=== Debug Properties ===
bci: 7
code: ResolvedJavaMethodBytecode<Pattern$BranchConn.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4570
stackSize: 0
=== Inputs ===
outerFrameState: ?166 
values: - - - - 
=== Succesors ===
=== Usages ===
i163 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?166 values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i163 <|@
d <@d|@=== Debug Properties ===
bci: 7
nodeSourcePosition: at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
polymorphic: false
stamp: i32 [0 - 1] â‡ˆ0000000000000001
targetMethod: Direct#Pattern$Node.match
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1119 
stateDuring: ?1773 
=== Succesors ===
next: v1454 
=== Usages ===
v107 
=== Predecessor ===
v2107 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1119 stateDuring: ?1773 #next: v1454  <|@  <|@
f <@~|@floating>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i163 
y: i15 
=== Succesors ===
=== Usages ===
v1454 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i163 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v1454 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v107 
=== Succesors ===
trueSuccessor: v1453 
falseSuccessor: v1451 
=== Usages ===
=== Predecessor ===
i163 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v107 #trueSuccessor: v1453 #falseSuccessor: v1451  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1453 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1452 
=== Usages ===
=== Predecessor ===
v1454 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1452  <|@  <|@
tid ?164 <|@
d <@d|@=== Debug Properties ===
bci: 10
code: ResolvedJavaMethodBytecode<Pattern$BranchConn.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4570
stackSize: 1
=== Inputs ===
outerFrameState: ?166 
values: - - - - i15 
=== Succesors ===
=== Usages ===
v1452 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?166 values: - - - - i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v1452 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1120
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?164 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1453 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?164  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors 
    xhandlers
    flags 
    probability 4595444336482236028
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1451 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v29 
=== Usages ===
=== Predecessor ===
v1454 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v29  <|@  <|@
f <@*|@fixed>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 48]
stamp: void
=== Inputs ===
result: i28 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1451 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i28 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1445 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BranchConn; target_method=match target_method_class=Ljava/util/regex/Pattern$BranchConn; position=at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1848 
=== Usages ===
=== Predecessor ===
v1446 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1848  <|@  <|@
f <@~|@floating>@ <|@
tid i1850 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -284723
stableDimension: 0
stamp: i32 [-284723] â‡Š00000000fffba7cd â‡ˆ00000000fffba7cd
stampKind: i32
value: int[-284723|0xfffffffffffba7cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1848 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1848 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?539 
actionAndReason: i1850 
speculation: a1777 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1445 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?539 actionAndReason: i1850 speculation: a1777  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1425 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1871 
=== Usages ===
=== Predecessor ===
v1426 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1871  <|@  <|@
f <@~|@floating>@ <|@
tid i1872 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -273691
stableDimension: 0
stamp: i32 [-273691] â‡Š00000000fffbd2e5 â‡ˆ00000000fffbd2e5
stampKind: i32
value: int[-273691|0xfffffffffffbd2e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1854 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1871 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1851 
=== Predecessor ===
v1425 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1421 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1869 
=== Usages ===
=== Predecessor ===
v1422 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1869  <|@  <|@
f <@~|@floating>@ <|@
tid i1870 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -271387
stableDimension: 0
stamp: i32 [-271387] â‡Š00000000fffbdbe5 â‡ˆ00000000fffbdbe5
stampKind: i32
value: int[-271387|0xfffffffffffbdbe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1854 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1869 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1851 
=== Predecessor ===
v1421 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1409 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1863 
=== Usages ===
=== Predecessor ===
v1410 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1863  <|@  <|@
f <@~|@floating>@ <|@
tid i1864 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -262171
stableDimension: 0
stamp: i32 [-262171] â‡Š00000000fffbffe5 â‡ˆ00000000fffbffe5
stampKind: i32
value: int[-262171|0xfffffffffffbffe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1854 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1863 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1851 
=== Predecessor ===
v1409 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1401 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1859 
=== Usages ===
=== Predecessor ===
v1402 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1859  <|@  <|@
f <@~|@floating>@ <|@
tid i1860 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -259379
stableDimension: 0
stamp: i32 [-259379] â‡Š00000000fffc0acd â‡ˆ00000000fffc0acd
stampKind: i32
value: int[-259379|0xfffffffffffc0acd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1854 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1859 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1851 
=== Predecessor ===
v1401 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" "B87" "B106" "B105" "B104" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1854 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-276235 - -259083] â‡Š00000000fff800c5 â‡ˆ00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v1851 
values: i1860 i1862 i1864 i1870 i1872 
=== Succesors ===
=== Usages ===
v1856 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1851 values: i1860 i1862 i1864 i1870 i1872  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1851 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1859 v1861 v1863 v1869 v1871 
=== Succesors ===
next: v1856 
=== Usages ===
i1854 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1859 v1861 v1863 v1869 v1871 #next: v1856  <|@  <|@
f <@*|@fixed>@ <|@
tid v1856 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?615 
actionAndReason: i1854 
speculation: a1777 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1851 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?615 actionAndReason: i1854 speculation: a1777  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1293 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1817 
=== Usages ===
=== Predecessor ===
v1294 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1817  <|@  <|@
f <@~|@floating>@ <|@
tid i1818 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -220467
stableDimension: 0
stamp: i32 [-220467] â‡Š00000000fffca2cd â‡ˆ00000000fffca2cd
stampKind: i32
value: int[-220467|0xfffffffffffca2cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1778 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1817 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1774 
=== Predecessor ===
v1293 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1281 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1811 
=== Usages ===
=== Predecessor ===
v1282 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1811  <|@  <|@
f <@~|@floating>@ <|@
tid i1812 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -217907
stableDimension: 0
stamp: i32 [-217907] â‡Š00000000fffcaccd â‡ˆ00000000fffcaccd
stampKind: i32
value: int[-217907|0xfffffffffffcaccd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1778 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1811 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1774 
=== Predecessor ===
v1281 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1269 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1805 
=== Usages ===
=== Predecessor ===
v1270 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1805  <|@  <|@
f <@~|@floating>@ <|@
tid i1806 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -215347
stableDimension: 0
stamp: i32 [-215347] â‡Š00000000fffcb6cd â‡ˆ00000000fffcb6cd
stampKind: i32
value: int[-215347|0xfffffffffffcb6cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1778 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1805 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1774 
=== Predecessor ===
v1269 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1257 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1799 
=== Usages ===
=== Predecessor ===
v1258 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1799  <|@  <|@
f <@~|@floating>@ <|@
tid i1800 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -212531
stableDimension: 0
stamp: i32 [-212531] â‡Š00000000fffcc1cd â‡ˆ00000000fffcc1cd
stampKind: i32
value: int[-212531|0xfffffffffffcc1cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1778 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1799 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1774 
=== Predecessor ===
v1257 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1253 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isHighSurrogate(Character.java:4729) [bci: 3]
at java.lang.Character.codePointAt(Character.java:4867) [bci: 9]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1797 
=== Usages ===
=== Predecessor ===
v1254 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1797  <|@  <|@
f <@~|@floating>@ <|@
tid i1798 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -212243
stableDimension: 0
stamp: i32 [-212243] â‡Š00000000fffcc2ed â‡ˆ00000000fffcc2ed
stampKind: i32
value: int[-212243|0xfffffffffffcc2ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1778 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1797 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1774 
=== Predecessor ===
v1253 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1795 
=== Usages ===
=== Predecessor ===
v1250 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1795  <|@  <|@
f <@~|@floating>@ <|@
tid i1796 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -210203
stableDimension: 0
stamp: i32 [-210203] â‡Š00000000fffccae5 â‡ˆ00000000fffccae5
stampKind: i32
value: int[-210203|0xfffffffffffccae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1778 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1795 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1774 
=== Predecessor ===
v1249 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1245 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1793 
=== Usages ===
=== Predecessor ===
v1246 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1793  <|@  <|@
f <@~|@floating>@ <|@
tid i1794 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -209427
stableDimension: 0
stamp: i32 [-209427] â‡Š00000000fffccded â‡ˆ00000000fffccded
stampKind: i32
value: int[-209427|0xfffffffffffccded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1778 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1793 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1774 
=== Predecessor ===
v1245 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1233 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1787 
=== Usages ===
=== Predecessor ===
v1234 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1787  <|@  <|@
f <@~|@floating>@ <|@
tid i1788 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -206643
stableDimension: 0
stamp: i32 [-206643] â‡Š00000000fffcd8cd â‡ˆ00000000fffcd8cd
stampKind: i32
value: int[-206643|0xfffffffffffcd8cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1778 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1787 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1774 
=== Predecessor ===
v1233 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1783 
=== Usages ===
=== Predecessor ===
v1226 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1783  <|@  <|@
f <@~|@floating>@ <|@
tid i1784 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -206099
stableDimension: 0
stamp: i32 [-206099] â‡Š00000000fffcdaed â‡ˆ00000000fffcdaed
stampKind: i32
value: int[-206099|0xfffffffffffcdaed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1778 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1783 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1774 
=== Predecessor ===
v1225 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" "B3" "B116" "B115" "B114" "B113" "B112" "B12" "B111" "B19" "B110" "B26" "B109" "B33" 
    successors 
    xhandlers
    flags 
    probability 2372271103717408768
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1778 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-222739 - -204811] â‡Š00000000fffc80c5 â‡ˆ00000000fffcfffd
valueDescription: i32
=== Inputs ===
merge: v1774 
values: i1784 i1786 i1788 i1794 i1796 i1798 i1800 i1804 i1806 i1810 i1812 i1816 i1818 i1820 
=== Succesors ===
=== Usages ===
v1780 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1774 values: i1784 i1786 i1788 i1794 i1796 i1798 i1800 i1804 i1806 i1810 i1812 i1816 i1818 i1820  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1774 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1783 v1785 v1787 v1793 v1795 v1797 v1799 v1803 v1805 v1809 v1811 v1815 v1817 v1819 
=== Succesors ===
next: v1780 
=== Usages ===
i1778 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1783 v1785 v1787 v1793 v1795 v1797 v1799 v1803 v1805 v1809 v1811 v1815 v1817 v1819 #next: v1780  <|@  <|@
f <@*|@fixed>@ <|@
tid v1780 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?5 
actionAndReason: i1778 
speculation: a1777 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1774 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?5 actionAndReason: i1778 speculation: a1777  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B117" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i1976 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: i1976  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/util/regex/Pattern$CharProperty;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v2060 ?175 ?615 v2091 ?197 v2059 v2047 ?304 ?712 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Ljava/util/regex/Matcher;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v2085 ?166 ?175 v1119 v2084 ?535 ?197 ?539 v2043 v2061 v2065 v2083 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v7 v115 v2046 ?175 i22 v111 ?197 v820 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a4 <|@
result v3|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: a -
uncheckedStamp: a Ljava/lang/CharSequence;
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?535 ?539 ?175 v1119 v2090 v2044 ?197 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Pattern$CharProperty.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3776
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 a4 - 
=== Succesors ===
=== Usages ===
v1780 i1976 v1977 i1979 v1983 v1987 v1991 v1995 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 a4 -  <|@  <|@
f <@~|@floating>@ <|@
tid v2043 <|@
result [v1|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1976 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1976 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.to
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 2]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v2043 
=== Succesors ===
next: v1226 
=== Usages ===
v7 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v2043 #next: v1226  <|@  <|@
f <@~|@floating>@ <|@
tid v7 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i1976 
=== Succesors ===
=== Usages ===
v1226 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i1976  <|@  <|@
f <@~|@floating>@ <|@
tid a1777 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1780 v1878 v1848 v1856 v1838 v1826 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1226 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v7 
=== Succesors ===
trueSuccessor: v1223 
falseSuccessor: v1225 
=== Usages ===
=== Predecessor ===
i1976 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v7 #trueSuccessor: v1223 #falseSuccessor: v1225  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@714f65ea slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction CMP (x: v2|DWORD, y: [v1|QWORD[.] + 16]) size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B116" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1223 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1977 
=== Usages ===
=== Predecessor ===
v1226 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1977  <|@  <|@
f <@~|@floating>@ <|@
tid v2090 <|@
result [v3|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
v1977 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1977 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v2090 
=== Succesors ===
next: v1234 
=== Usages ===
v1950 
=== Predecessor ===
v1223 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v2090 #next: v1234  <|@  <|@
f <@~|@floating>@ <|@
tid v1949 <|@
result meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1950 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1950 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1977 
y: v1949 
=== Succesors ===
=== Usages ===
v1234 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1977 y: v1949  <|@  <|@
f <@*|@fixed>@ <|@
tid v1234 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1950 
=== Succesors ===
trueSuccessor: v1231 
falseSuccessor: v1233 
=== Usages ===
=== Predecessor ===
v1977 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1950 #trueSuccessor: v1231 #falseSuccessor: v1233  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction CMP [v3|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1231 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1238 
=== Usages ===
=== Predecessor ===
v1234 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1238  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] â‡ˆ0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v16 v107 v111 v566 v85 v187 ?712 v294 ?460 v367 ?318 v432 ?395 ?175 ?164 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i15 
=== Succesors ===
=== Usages ===
v1238 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v1238 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v111 
=== Succesors ===
trueSuccessor: v1237 
falseSuccessor: v1235 
=== Usages ===
=== Predecessor ===
v1231 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v111 #trueSuccessor: v1237 #falseSuccessor: v1235  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1237 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1785 
=== Usages ===
=== Predecessor ===
v1238 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1785  <|@  <|@
f <@~|@floating>@ <|@
tid i1786 <|@
result int[-206867|0xfffffffffffcd7ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -206867
stableDimension: 0
stamp: i32 [-206867] â‡Š00000000fffcd7ed â‡ˆ00000000fffcd7ed
stampKind: i32
value: int[-206867|0xfffffffffffcd7ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1778 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1785 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1774 
=== Predecessor ===
v1237 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-206867|0xfffffffffffcd7ed]] destination: B3 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B115" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1235 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1978 
=== Usages ===
=== Predecessor ===
v1238 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1978  <|@  <|@
f <@~|@floating>@ <|@
tid v2044 <|@
result [v3|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
a1978 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1978 <|@
result v4|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 6]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v2044 
=== Succesors ===
next: i1979 
=== Usages ===
a812 v2045 
=== Predecessor ===
v1235 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2044 #next: i1979  <|@  <|@
f <@~|@floating>@ <|@
tid v2045 <|@
result [v4|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1978 
=== Succesors ===
=== Usages ===
i1979 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1978  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1979 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 9]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v2045 
=== Succesors ===
next: v1246 
=== Usages ===
v115 v820 
=== Predecessor ===
a1978 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v2045 #next: v1246  <|@  <|@
f <@~|@floating>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i1979 
=== Succesors ===
=== Usages ===
v1246 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i1979  <|@  <|@
f <@*|@fixed>@ <|@
tid v1246 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v115 
=== Succesors ===
trueSuccessor: v1243 
falseSuccessor: v1245 
=== Usages ===
=== Predecessor ===
i1979 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v115 #trueSuccessor: v1243 #falseSuccessor: v1245  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v3|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction v5|DWORD = MOV [v4|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B114" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1243 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1250 
=== Usages ===
=== Predecessor ===
v1246 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1250  <|@  <|@
f <@~|@floating>@ <|@
tid v820 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i1979 
=== Succesors ===
=== Usages ===
v1250 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i3 y: i1979  <|@  <|@
f <@*|@fixed>@ <|@
tid v1250 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v820 
=== Succesors ===
trueSuccessor: v1247 
falseSuccessor: v1249 
=== Usages ===
=== Predecessor ===
v1243 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v820 #trueSuccessor: v1247 #falseSuccessor: v1249  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B113" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1247 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1980 
=== Usages ===
i1980 
=== Predecessor ===
v1250 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1980  <|@  <|@
f <@~|@floating>@ <|@
tid a812 <|@
result v6|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 6]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1978 
=== Succesors ===
=== Usages ===
v2046 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1978  <|@  <|@
f <@~|@floating>@ <|@
tid v2046 <|@
result [v6|QWORD[.] + v2|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a812 
index: i3 
=== Succesors ===
=== Usages ===
i1980 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a812 index: i3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1980 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v1247 
address: v2046 
=== Succesors ===
next: v1254 
=== Usages ===
i828 j1127 v1216 v1218 j1974 v1975 
=== Predecessor ===
v1247 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1247 address: v2046 #next: v1254  <|@  <|@
f <@~|@floating>@ <|@
tid i1215 <|@
result short[-10240|0xffffffffffffd800] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Character.isHighSurrogate(Character.java:4729) [bci: 3]
at java.lang.Character.codePointAt(Character.java:4867) [bci: 9]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
rawvalue: -10240
stableDimension: 0
stamp: i16 [-10240] â‡Š000000000000d800 â‡ˆ000000000000d800
stampKind: i16
value: short[-10240|0xffffffffffffd800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1216 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1216 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Character.isHighSurrogate(Character.java:4729) [bci: 3]
at java.lang.Character.codePointAt(Character.java:4867) [bci: 9]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1980 
y: i1215 
=== Succesors ===
=== Usages ===
v1254 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1980 y: i1215  <|@  <|@
f <@*|@fixed>@ <|@
tid v1254 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isHighSurrogate(Character.java:4729) [bci: 3]
at java.lang.Character.codePointAt(Character.java:4867) [bci: 9]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1216 
=== Succesors ===
trueSuccessor: v1251 
falseSuccessor: v1253 
=== Usages ===
=== Predecessor ===
i1980 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1216 #trueSuccessor: v1251 #falseSuccessor: v1253  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVSX [v6|QWORD[.] + v2|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v7|DWORD y: -10240 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B112" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1251 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isHighSurrogate(Character.java:4729) [bci: 3]
at java.lang.Character.codePointAt(Character.java:4867) [bci: 9]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1981 
=== Usages ===
=== Predecessor ===
v1254 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1981  <|@  <|@
f <@~|@floating>@ <|@
tid v2091 <|@
result [v0|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v1981 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1981 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2091 
=== Succesors ===
next: v1258 
=== Usages ===
v1952 
=== Predecessor ===
v1251 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2091 #next: v1258  <|@  <|@
f <@~|@floating>@ <|@
tid v1951 <|@
result meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1952 v1955 v1957 v1959 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1952 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1981 
y: v1951 
=== Succesors ===
=== Usages ===
v1258 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1981 y: v1951  <|@  <|@
f <@*|@fixed>@ <|@
tid v1258 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1952 
=== Succesors ===
trueSuccessor: v1255 
falseSuccessor: v1257 
=== Usages ===
=== Predecessor ===
v1981 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1952 #trueSuccessor: v1255 #falseSuccessor: v1257  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v0|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1255 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1982 
=== Usages ===
=== Predecessor ===
v1258 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1982  <|@  <|@
f <@~|@floating>@ <|@
tid v2047 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1982 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1982 <|@
result v8|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$lhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 1]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2047 
=== Succesors ===
next: v1983 
=== Usages ===
?318 v2092 v2048 v2049 ?377 v2112 
=== Predecessor ===
v1255 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2047 #next: v1983  <|@  <|@
f <@~|@floating>@ <|@
tid v2092 <|@
result [v8|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1982 
=== Succesors ===
=== Usages ===
v1983 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1982  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1983 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v2092 
=== Succesors ===
next: v216 
=== Usages ===
v1955 v1954 
=== Predecessor ===
a1982 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v2092 #next: v216  <|@  <|@
f <@~|@floating>@ <|@
tid v1953 <|@
result meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1954 v1956 v1958 v1960 v1966 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1954 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1983 
y: v1953 
=== Succesors ===
=== Usages ===
v216 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1983 y: v1953  <|@  <|@
f <@~|@floating>@ <|@
tid v2048 <|@
result [v8|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1982 
=== Succesors ===
=== Usages ===
i1984 a1986 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1982  <|@  <|@
f <@~|@floating>@ <|@
tid i828 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
resultBits: 32
stamp: i32 [0 - 65535] â‡ˆ000000000000ffff
=== Inputs ===
value: i1980 
=== Succesors ===
=== Usages ===
?712 ?175 ?197 ?304 v483 v487 ?1769 v998 v248 ?615 v252 v871 ?377 v907 v347 ?318 ?460 v451 v343 v386 v447 ?442 v885 v382 ?395 v899 v878 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1980  <|@  <|@
tid ?197 <|@
d <@d|@=== Debug Properties ===
bci: 18
code: ResolvedJavaMethodBytecode<Pattern$CharProperty.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3778
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 a4 i828 
=== Succesors ===
=== Usages ===
?304 ?712 ?615 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 a4 i828  <|@  <|@
tid ?110 <|@
d <@d|@=== Debug Properties ===
bci: 37
code: ResolvedJavaMethodBytecode<Pattern$CharProperty.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3779
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - 
=== Succesors ===
=== Usages ===
?535 ?539 ?166 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v1967 <|@
result meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1968 v1970 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i28 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 43]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] â‡Š0000000000000001 â‡ˆ0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v29 i22 i205 i100 v588 v147 i618 i205 i205 i205 i574 i618 i618 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i22 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 35]
stamp: i32
=== Inputs ===
x: i3 
y: i28 
=== Succesors ===
=== Usages ===
v1119 ?539 v984 v1075 ?535 v1086 v1111 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i3 y: i28  <|@  <|@
f <@~|@floating>@ <|@
tid v2065 <|@
result [v1|QWORD[.] + 52] <|@
d <@d|@=== Debug Properties ===
displacement: 52
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a2012 a2031 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2061 <|@
result [v1|QWORD[.] + 60] <|@
d <@d|@=== Debug Properties ===
displacement: 60
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a2008 a2027 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1963 <|@
result meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1964 v1969 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2060 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a2006 a2025 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i1217 <|@
result short[256|0x100] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
rawvalue: 256
stableDimension: 0
stamp: i16 [256] â‡Š0000000000000100 â‡ˆ0000000000000100
stampKind: i16
value: short[256|0x100]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1218 v1975 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1961 <|@
result meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1962 v1965 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.5000105004025154
=== Inputs ===
condition: v1954 
=== Succesors ===
trueSuccessor: v209 
falseSuccessor: v215 
=== Usages ===
=== Predecessor ===
v1983 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1954 #trueSuccessor: v209 #falseSuccessor: v215  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction v9|DWORD = MOV [v8|DWORD[.] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVZX v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = INC v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4602678913751864623
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1984 
=== Usages ===
=== Predecessor ===
v216 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1984  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1984 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2048 
=== Succesors ===
next: v251 
=== Usages ===
v248 
=== Predecessor ===
v209 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2048 #next: v251  <|@  <|@
f <@~|@floating>@ <|@
tid v248 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i828 
y: i1984 
=== Succesors ===
=== Usages ===
v251 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i828 y: i1984  <|@  <|@
f <@*|@fixed>@ <|@
tid v251 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.02420300868371932
=== Inputs ===
condition: v248 
=== Succesors ===
trueSuccessor: v249 
falseSuccessor: v250 
=== Usages ===
=== Predecessor ===
i1984 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v248 #trueSuccessor: v249 #falseSuccessor: v250  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: [v8|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B54" 
    xhandlers
    flags 
    probability 4578129810580469169
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 14]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v713 
=== Usages ===
=== Predecessor ===
v251 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v713  <|@  <|@
f <@*|@fixed>@ <|@
tid v713 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v710 
=== Predecessor ===
v249 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4602461002431100593
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 5]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1985 
=== Usages ===
=== Predecessor ===
v251 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1985  <|@  <|@
f <@~|@floating>@ <|@
tid v2049 <|@
result [v8|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1982 
=== Succesors ===
=== Usages ===
i1985 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1982  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1985 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2049 
=== Succesors ===
next: v1266 
=== Usages ===
v252 
=== Predecessor ===
v250 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2049 #next: v1266  <|@  <|@
f <@~|@floating>@ <|@
tid v252 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1985 
y: i828 
=== Succesors ===
=== Usages ===
v1266 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1985 y: i828  <|@  <|@
f <@*|@fixed>@ <|@
tid v1266 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v252 
=== Succesors ===
trueSuccessor: v1265 
falseSuccessor: v1263 
=== Usages ===
=== Predecessor ===
i1985 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v252 #trueSuccessor: v1265 #falseSuccessor: v1263  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: [v8|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1265 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1803 
=== Usages ===
=== Predecessor ===
v1266 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1803  <|@  <|@
f <@~|@floating>@ <|@
tid i1804 <|@
result int[-215059|0xfffffffffffcb7ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -215059
stableDimension: 0
stamp: i32 [-215059] â‡Š00000000fffcb7ed â‡ˆ00000000fffcb7ed
stampKind: i32
value: int[-215059|0xfffffffffffcb7ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1778 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1803 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1774 
=== Predecessor ===
v1265 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-215059|0xfffffffffffcb7ed]] destination: B12 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B84" 
    xhandlers
    flags 
    probability 4602461002431100593
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1263 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v657 
=== Usages ===
=== Predecessor ===
v1266 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v657  <|@  <|@
f <@*|@fixed>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v613 
=== Predecessor ===
v1263 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B13 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" "B111" 
    xhandlers
    flags 
    probability 4602678630014211490
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1270 
=== Usages ===
=== Predecessor ===
v216 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1270  <|@  <|@
f <@~|@floating>@ <|@
tid v1955 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1983 
y: v1951 
=== Succesors ===
=== Usages ===
v1270 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1983 y: v1951  <|@  <|@
f <@*|@fixed>@ <|@
tid v1270 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1955 
=== Succesors ===
trueSuccessor: v1267 
falseSuccessor: v1269 
=== Usages ===
=== Predecessor ===
v215 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1955 #trueSuccessor: v1267 #falseSuccessor: v1269  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B21" 
    xhandlers
    flags 
    probability 4602678630014211490
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1267 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1986 
=== Usages ===
=== Predecessor ===
v1270 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1986  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1986 <|@
result v12|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$lhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2048 
=== Succesors ===
next: v1987 
=== Usages ===
?395 v2093 v2050 v2051 ?442 v2111 
=== Predecessor ===
v1267 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2048 #next: v1987  <|@  <|@
f <@~|@floating>@ <|@
tid v2093 <|@
result [v12|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1986 
=== Succesors ===
=== Usages ===
v1987 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1986  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1987 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v2093 
=== Succesors ===
next: v331 
=== Usages ===
v1957 v1956 
=== Predecessor ===
a1986 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v2093 #next: v331  <|@  <|@
f <@~|@floating>@ <|@
tid v1956 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1987 
y: v1953 
=== Succesors ===
=== Usages ===
v331 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1987 y: v1953  <|@  <|@
f <@~|@floating>@ <|@
tid v2050 <|@
result [v12|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1986 
=== Succesors ===
=== Usages ===
i1988 a1990 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1986  <|@  <|@
tid ?304 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?197 
values: a1 i828 
=== Succesors ===
=== Usages ===
?377 ?1772 ?318 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?197 values: a1 i828  <|@  <|@
f <@*|@fixed>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.5000105004025154
=== Inputs ===
condition: v1956 
=== Succesors ===
trueSuccessor: v324 
falseSuccessor: v330 
=== Usages ===
=== Predecessor ===
v1987 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1956 #trueSuccessor: v324 #falseSuccessor: v330  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[.] = MOV [v8|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction v13|DWORD = MOV [v12|DWORD[.] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP v13|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4598175219541303937
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1988 
=== Usages ===
=== Predecessor ===
v331 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1988  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1988 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2050 
=== Succesors ===
next: v385 
=== Usages ===
v382 
=== Predecessor ===
v324 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2050 #next: v385  <|@  <|@
f <@~|@floating>@ <|@
tid v382 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i828 
y: i1988 
=== Succesors ===
=== Usages ===
v385 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i828 y: i1988  <|@  <|@
f <@*|@fixed>@ <|@
tid v385 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.02420300868371932
=== Inputs ===
condition: v382 
=== Succesors ===
trueSuccessor: v383 
falseSuccessor: v384 
=== Usages ===
=== Predecessor ===
i1988 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v382 #trueSuccessor: v383 #falseSuccessor: v384  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: [v12|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B41" 
    xhandlers
    flags 
    probability 4573626064447517839
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 14]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v729 
=== Usages ===
=== Predecessor ===
v385 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v729  <|@  <|@
f <@*|@fixed>@ <|@
tid v729 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v727 
=== Predecessor ===
v383 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4597957218219621597
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 5]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1989 
=== Usages ===
=== Predecessor ===
v385 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1989  <|@  <|@
f <@~|@floating>@ <|@
tid v2051 <|@
result [v12|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1986 
=== Succesors ===
=== Usages ===
i1989 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1986  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1989 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2051 
=== Succesors ===
next: v1278 
=== Usages ===
v386 
=== Predecessor ===
v384 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2051 #next: v1278  <|@  <|@
f <@~|@floating>@ <|@
tid v386 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1989 
y: i828 
=== Succesors ===
=== Usages ===
v1278 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1989 y: i828  <|@  <|@
f <@*|@fixed>@ <|@
tid v1278 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v386 
=== Succesors ===
trueSuccessor: v1277 
falseSuccessor: v1275 
=== Usages ===
=== Predecessor ===
i1989 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v386 #trueSuccessor: v1277 #falseSuccessor: v1275  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: [v12|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1277 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1809 
=== Usages ===
=== Predecessor ===
v1278 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1809  <|@  <|@
f <@~|@floating>@ <|@
tid i1810 <|@
result int[-217619|0xfffffffffffcaded] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -217619
stableDimension: 0
stamp: i32 [-217619] â‡Š00000000fffcaded â‡ˆ00000000fffcaded
stampKind: i32
value: int[-217619|0xfffffffffffcaded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1778 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1809 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1774 
=== Predecessor ===
v1277 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-217619|0xfffffffffffcaded]] destination: B19 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B84" 
    xhandlers
    flags 
    probability 4597957218219621597
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1275 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v674 
=== Usages ===
=== Predecessor ===
v1278 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v674  <|@  <|@
f <@*|@fixed>@ <|@
tid v674 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v613 
=== Predecessor ===
v1275 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B20 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" "B110" 
    xhandlers
    flags 
    probability 4598174841232378051
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1282 
=== Usages ===
=== Predecessor ===
v331 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1282  <|@  <|@
f <@~|@floating>@ <|@
tid v1957 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1987 
y: v1951 
=== Succesors ===
=== Usages ===
v1282 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1987 y: v1951  <|@  <|@
f <@*|@fixed>@ <|@
tid v1282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1957 
=== Succesors ===
trueSuccessor: v1279 
falseSuccessor: v1281 
=== Usages ===
=== Predecessor ===
v330 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1957 #trueSuccessor: v1279 #falseSuccessor: v1281  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v13|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B28" 
    xhandlers
    flags 
    probability 4598174841232378051
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1279 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1990 
=== Usages ===
=== Predecessor ===
v1282 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1990  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1990 <|@
result v14|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$lhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2050 
=== Succesors ===
next: v1991 
=== Usages ===
?460 v2094 v2052 v2053 ?1769 v2110 
=== Predecessor ===
v1279 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2050 #next: v1991  <|@  <|@
f <@~|@floating>@ <|@
tid v2094 <|@
result [v14|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1990 
=== Succesors ===
=== Usages ===
v1991 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1990  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1991 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v2094 
=== Succesors ===
next: v408 
=== Usages ===
v1959 v1958 
=== Predecessor ===
a1990 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v2094 #next: v408  <|@  <|@
f <@~|@floating>@ <|@
tid v1958 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1991 
y: v1953 
=== Succesors ===
=== Usages ===
v408 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1991 y: v1953  <|@  <|@
f <@~|@floating>@ <|@
tid v2052 <|@
result [v14|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1990 
=== Succesors ===
=== Usages ===
i1992 a1994 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1990  <|@  <|@
tid ?377 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?304 
values: a1982 i828 
=== Succesors ===
=== Usages ===
?442 ?1771 ?395 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?304 values: a1982 i828  <|@  <|@
f <@*|@fixed>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.5000105004025154
=== Inputs ===
condition: v1958 
=== Succesors ===
trueSuccessor: v401 
falseSuccessor: v407 
=== Usages ===
=== Predecessor ===
v1991 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1958 #trueSuccessor: v401 #falseSuccessor: v407  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[.] = MOV [v12|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction v15|DWORD = MOV [v14|DWORD[.] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP v15|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4593671430755498102
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1992 
=== Usages ===
=== Predecessor ===
v408 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1992  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1992 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2052 
=== Succesors ===
next: v450 
=== Usages ===
v447 
=== Predecessor ===
v401 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2052 #next: v450  <|@  <|@
f <@~|@floating>@ <|@
tid v447 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i828 
y: i1992 
=== Succesors ===
=== Usages ===
v450 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i828 y: i1992  <|@  <|@
f <@*|@fixed>@ <|@
tid v450 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.02420300868371932
=== Inputs ===
condition: v447 
=== Succesors ===
trueSuccessor: v448 
falseSuccessor: v449 
=== Usages ===
=== Predecessor ===
i1992 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v447 #trueSuccessor: v448 #falseSuccessor: v449  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: [v14|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B39" 
    xhandlers
    flags 
    probability 4569122318317643243
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 14]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v761 
=== Usages ===
=== Predecessor ===
v450 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v761  <|@  <|@
f <@*|@fixed>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v759 
=== Predecessor ===
v448 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4593453434012019015
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 5]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1993 
=== Usages ===
=== Predecessor ===
v450 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1993  <|@  <|@
f <@~|@floating>@ <|@
tid v2053 <|@
result [v14|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1990 
=== Succesors ===
=== Usages ===
i1993 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1990  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1993 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2053 
=== Succesors ===
next: v1290 
=== Usages ===
v451 
=== Predecessor ===
v449 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2053 #next: v1290  <|@  <|@
f <@~|@floating>@ <|@
tid v451 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1993 
y: i828 
=== Succesors ===
=== Usages ===
v1290 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1993 y: i828  <|@  <|@
f <@*|@fixed>@ <|@
tid v1290 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v451 
=== Succesors ===
trueSuccessor: v1289 
falseSuccessor: v1287 
=== Usages ===
=== Predecessor ===
i1993 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v451 #trueSuccessor: v1289 #falseSuccessor: v1287  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: [v14|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1289 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1815 
=== Usages ===
=== Predecessor ===
v1290 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1815  <|@  <|@
f <@~|@floating>@ <|@
tid i1816 <|@
result int[-220179|0xfffffffffffca3ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -220179
stableDimension: 0
stamp: i32 [-220179] â‡Š00000000fffca3ed â‡ˆ00000000fffca3ed
stampKind: i32
value: int[-220179|0xfffffffffffca3ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1778 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1815 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1774 
=== Predecessor ===
v1289 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-220179|0xfffffffffffca3ed]] destination: B26 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B52" 
    xhandlers
    flags 
    probability 4593453434012019015
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1287 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v708 
=== Usages ===
=== Predecessor ===
v1290 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v708  <|@  <|@
f <@*|@fixed>@ <|@
tid v708 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
v1287 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B27 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B29" "B109" 
    xhandlers
    flags 
    probability 4593671052454517008
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1294 
=== Usages ===
=== Predecessor ===
v408 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1294  <|@  <|@
f <@~|@floating>@ <|@
tid v1959 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1991 
y: v1951 
=== Succesors ===
=== Usages ===
v1294 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1991 y: v1951  <|@  <|@
f <@*|@fixed>@ <|@
tid v1294 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1959 
=== Succesors ===
trueSuccessor: v1291 
falseSuccessor: v1293 
=== Usages ===
=== Predecessor ===
v407 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1959 #trueSuccessor: v1291 #falseSuccessor: v1293  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v15|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B35" 
    xhandlers
    flags 
    probability 4593671052454517008
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1291 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1994 
=== Usages ===
=== Predecessor ===
v1294 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1994  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1994 <|@
result v16|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$lhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2052 
=== Succesors ===
next: v1995 
=== Usages ===
a864 v2095 v2054 v2055 
=== Predecessor ===
v1291 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2052 #next: v1995  <|@  <|@
f <@~|@floating>@ <|@
tid v2095 <|@
result [v16|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1994 
=== Succesors ===
=== Usages ===
v1995 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1994  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1995 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v2095 
=== Succesors ===
next: v473 
=== Usages ===
v1960 
=== Predecessor ===
a1994 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v2095 #next: v473  <|@  <|@
f <@~|@floating>@ <|@
tid v1960 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1995 
y: v1953 
=== Succesors ===
=== Usages ===
v473 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1995 y: v1953  <|@  <|@
tid ?442 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?377 
values: a1986 i828 
=== Succesors ===
=== Usages ===
?1770 ?1769 ?460 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?377 values: a1986 i828  <|@  <|@
f <@*|@fixed>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.5000105004025154
=== Inputs ===
condition: v1960 
=== Succesors ===
trueSuccessor: v466 
falseSuccessor: v472 
=== Usages ===
=== Predecessor ===
v1995 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1960 #trueSuccessor: v466 #falseSuccessor: v472  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[.] = MOV [v14|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction v17|DWORD = MOV [v16|DWORD[.] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP v17|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4589167641973664746
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1996 
=== Usages ===
=== Predecessor ===
v473 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1996  <|@  <|@
f <@~|@floating>@ <|@
tid v2054 <|@
result [v16|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1994 
=== Succesors ===
=== Usages ===
i1996 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1994  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1996 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2054 
=== Succesors ===
next: v486 
=== Usages ===
v483 
=== Predecessor ===
v466 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2054 #next: v486  <|@  <|@
f <@~|@floating>@ <|@
tid v483 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i828 
y: i1996 
=== Succesors ===
=== Usages ===
v486 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i828 y: i1996  <|@  <|@
f <@*|@fixed>@ <|@
tid v486 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.02420300868371932
=== Inputs ===
condition: v483 
=== Succesors ===
trueSuccessor: v484 
falseSuccessor: v485 
=== Usages ===
=== Predecessor ===
i1996 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v483 #trueSuccessor: v484 #falseSuccessor: v485  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: [v16|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" 
    xhandlers
    flags 
    probability 4564618572190845318
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 14]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v745 
=== Usages ===
=== Predecessor ===
v486 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v745  <|@  <|@
f <@*|@fixed>@ <|@
tid v745 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v743 
=== Predecessor ===
v484 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4588949649808292766
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 5]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1997 
=== Usages ===
=== Predecessor ===
v486 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1997  <|@  <|@
f <@~|@floating>@ <|@
tid v2055 <|@
result [v16|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1994 
=== Succesors ===
=== Usages ===
i1997 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1994  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1997 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2055 
=== Succesors ===
next: v1302 
=== Usages ===
v487 
=== Predecessor ===
v485 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2055 #next: v1302  <|@  <|@
f <@~|@floating>@ <|@
tid v487 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1997 
y: i828 
=== Succesors ===
=== Usages ===
v1302 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1997 y: i828  <|@  <|@
f <@*|@fixed>@ <|@
tid v1302 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v487 
=== Succesors ===
trueSuccessor: v1301 
falseSuccessor: v1299 
=== Usages ===
=== Predecessor ===
i1997 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v487 #trueSuccessor: v1301 #falseSuccessor: v1299  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: [v16|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1301 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1819 
=== Usages ===
=== Predecessor ===
v1302 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1819  <|@  <|@
f <@~|@floating>@ <|@
tid i1820 <|@
result int[-222739|0xfffffffffffc99ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -222739
stableDimension: 0
stamp: i32 [-222739] â‡Š00000000fffc99ed â‡ˆ00000000fffc99ed
stampKind: i32
value: int[-222739|0xfffffffffffc99ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1778 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1819 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1774 
=== Predecessor ===
v1301 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-222739|0xfffffffffffc99ed]] destination: B33 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B52" 
    xhandlers
    flags 
    probability 4588949649808292766
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1299 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v691 
=== Usages ===
=== Predecessor ===
v1302 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v691  <|@  <|@
f <@*|@fixed>@ <|@
tid v691 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
v1299 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B34 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" "B51" 
    xhandlers
    flags 
    probability 4589167263680628278
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: i430 
=== Usages ===
=== Predecessor ===
v473 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i430  <|@  <|@
f <@~|@floating>@ <|@
tid a864 <|@
result v18|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
value: a1994 
=== Succesors ===
=== Usages ===
v871 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1994  <|@  <|@
tid v871 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
returnStamp: i32 [0 - 1] â‡ˆ0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@6a08e544
stamp: void
targetMethod: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>
=== Inputs ===
arguments: a864 i828 
=== Succesors ===
=== Usages ===
i430 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a864 i828  <|@  <|@
tid ?1769 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?442 
values: a1990 i828 
=== Succesors ===
=== Usages ===
i430 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?442 values: a1990 i828  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i430 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 5
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
polymorphic: false
stamp: i32 [0 - 1] â‡ˆ0000000000000001
targetMethod: Direct#Pattern$CharProperty.isSatisfiedBy
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v871 
stateDuring: ?1769 
=== Succesors ===
next: v435 
=== Usages ===
v432 
=== Predecessor ===
v472 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v871 stateDuring: ?1769 #next: v435  <|@  <|@
f <@~|@floating>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i430 
y: i15 
=== Succesors ===
=== Usages ===
v435 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i430 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.012246995066949262
=== Inputs ===
condition: v432 
=== Succesors ===
trueSuccessor: v433 
falseSuccessor: v434 
=== Usages ===
=== Predecessor ===
i430 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v432 #trueSuccessor: v433 #falseSuccessor: v434  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v14|DWORD[.] v10|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v12|DWORD[.] v10|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v8|DWORD[.] v10|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:5, 5, 5, 5, 18] <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v19|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560198542224662117
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 11]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v744 
=== Usages ===
=== Predecessor ===
v435 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v744  <|@  <|@
f <@*|@fixed>@ <|@
tid v744 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v743 
=== Predecessor ===
v433 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B31" 
    successors "B38" "B50" 
    xhandlers
    flags 
    probability 4567399126910536796
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v743 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v744 v745 
=== Succesors ===
next: a1998 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v744 v745 #next: a1998  <|@  <|@
f <@~|@floating>@ <|@
tid v2110 <|@
result [v14|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1990 
=== Succesors ===
=== Usages ===
a1998 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1990  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1998 <|@
result v20|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$rhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2110 
=== Succesors ===
next: v2105 
=== Usages ===
a874 v2105 
=== Predecessor ===
v743 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2110 #next: v2105  <|@  <|@
tid ?460 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 1
=== Inputs ===
outerFrameState: ?442 
values: a1990 i828 i15 
=== Succesors ===
=== Usages ===
v2105 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?442 values: a1990 i828 i15  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2105 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?460 
object: a1998 
=== Succesors ===
next: i438 
=== Usages ===
=== Predecessor ===
a1998 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?460 object: a1998 #next: i438  <|@  <|@
f <@~|@floating>@ <|@
tid a874 <|@
result v21|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
value: a1998 
=== Succesors ===
=== Usages ===
v878 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1998  <|@  <|@
tid v878 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
returnStamp: i32 [0 - 1] â‡ˆ0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@21c67288
stamp: void
targetMethod: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>
=== Inputs ===
arguments: a874 i828 
=== Succesors ===
=== Usages ===
i438 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a874 i828  <|@  <|@
tid ?1770 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?442 
values: - - 
=== Succesors ===
=== Usages ===
i438 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?442 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i438 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 16
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
polymorphic: false
stamp: i32 [0 - 1] â‡ˆ0000000000000001
targetMethod: Direct#Pattern$CharProperty.isSatisfiedBy
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v878 
stateDuring: ?1770 
=== Succesors ===
next: v370 
=== Usages ===
v367 
=== Predecessor ===
v2105 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v878 stateDuring: ?1770 #next: v370  <|@  <|@
f <@~|@floating>@ <|@
tid v367 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i438 
y: i15 
=== Succesors ===
=== Usages ===
v370 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i438 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.012246995066949262
=== Inputs ===
condition: v367 
=== Succesors ===
trueSuccessor: v368 
falseSuccessor: v369 
=== Usages ===
=== Predecessor ===
i438 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v367 #trueSuccessor: v368 #falseSuccessor: v369  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v20|DWORD[.] = MOV [v14|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v14|DWORD[.] v10|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v12|DWORD[.] v10|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v8|DWORD[.] v10|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v20|DWORD[.] * 8] state [bci:8, 5, 5, 5, 18] <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v20|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v12|DWORD[.] v10|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v8|DWORD[.] v10|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 5, 5, 18] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v22|DWORD, y: v22|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" 
    xhandlers
    flags 
    probability 4538855445253981485
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v368 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 11]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v760 
=== Usages ===
=== Predecessor ===
v370 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v760  <|@  <|@
f <@*|@fixed>@ <|@
tid v760 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v759 
=== Predecessor ===
v368 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B24" 
    successors "B40" "B49" 
    xhandlers
    flags 
    probability 4569186648162324981
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v760 v761 
=== Succesors ===
next: a1999 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v760 v761 #next: a1999  <|@  <|@
f <@~|@floating>@ <|@
tid v2111 <|@
result [v12|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1986 
=== Succesors ===
=== Usages ===
a1999 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1986  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1999 <|@
result v23|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$rhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2111 
=== Succesors ===
next: v2106 
=== Usages ===
a881 v2106 
=== Predecessor ===
v759 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2111 #next: v2106  <|@  <|@
tid ?395 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 1
=== Inputs ===
outerFrameState: ?377 
values: a1986 i828 i15 
=== Succesors ===
=== Usages ===
v2106 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?377 values: a1986 i828 i15  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2106 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?395 
object: a1999 
=== Succesors ===
next: i373 
=== Usages ===
=== Predecessor ===
a1999 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?395 object: a1999 #next: i373  <|@  <|@
f <@~|@floating>@ <|@
tid a881 <|@
result v24|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
value: a1999 
=== Succesors ===
=== Usages ===
v885 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1999  <|@  <|@
tid v885 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
returnStamp: i32 [0 - 1] â‡ˆ0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@7d9354a8
stamp: void
targetMethod: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>
=== Inputs ===
arguments: a881 i828 
=== Succesors ===
=== Usages ===
i373 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a881 i828  <|@  <|@
tid ?1771 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?377 
values: - - 
=== Succesors ===
=== Usages ===
i373 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?377 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i373 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 16
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
polymorphic: false
stamp: i32 [0 - 1] â‡ˆ0000000000000001
targetMethod: Direct#Pattern$CharProperty.isSatisfiedBy
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v885 
stateDuring: ?1771 
=== Succesors ===
next: v297 
=== Usages ===
v294 
=== Predecessor ===
v2106 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v885 stateDuring: ?1771 #next: v297  <|@  <|@
f <@~|@floating>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i373 
y: i15 
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i373 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.012246995066949262
=== Inputs ===
condition: v294 
=== Succesors ===
trueSuccessor: v295 
falseSuccessor: v296 
=== Usages ===
=== Predecessor ===
i373 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v294 #trueSuccessor: v295 #falseSuccessor: v296  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[.] = MOV [v12|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v12|DWORD[.] v10|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v8|DWORD[.] v10|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v23|DWORD[.] * 8] state [bci:8, 5, 5, 18] <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v8|DWORD[.] v10|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 5, 18] <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v25|DWORD, y: v25|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4540643007714694606
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 11]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v728 
=== Usages ===
=== Predecessor ===
v297 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v728  <|@  <|@
f <@*|@fixed>@ <|@
tid v728 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v727 
=== Predecessor ===
v295 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B17" 
    successors "B42" "B48" 
    xhandlers
    flags 
    probability 4573669175251835067
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v727 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v728 v729 
=== Succesors ===
next: a2000 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v728 v729 #next: a2000  <|@  <|@
f <@~|@floating>@ <|@
tid v2112 <|@
result [v8|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1982 
=== Succesors ===
=== Usages ===
a2000 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1982  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2000 <|@
result v26|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$rhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2112 
=== Succesors ===
next: v2001 
=== Usages ===
a888 v2096 v2056 
=== Predecessor ===
v727 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2112 #next: v2001  <|@  <|@
tid ?318 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 1
=== Inputs ===
outerFrameState: ?304 
values: a1982 i828 i15 
=== Succesors ===
=== Usages ===
v1826 v2001 i2003 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?304 values: a1982 i828 i15  <|@  <|@
f <@~|@floating>@ <|@
tid v2096 <|@
result [v26|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2000 
=== Succesors ===
=== Usages ===
v2001 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2000  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2001 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?318 
guard: - 
address: v2096 
=== Succesors ===
next: v516 
=== Usages ===
v1962 
=== Predecessor ===
a2000 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?318 guard: - address: v2096 #next: v516  <|@  <|@
f <@~|@floating>@ <|@
tid v1962 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2001 
y: v1961 
=== Succesors ===
=== Usages ===
v516 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2001 y: v1961  <|@  <|@
f <@*|@fixed>@ <|@
tid v516 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$BitClass; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1962 
=== Succesors ===
trueSuccessor: v509 
falseSuccessor: v515 
=== Usages ===
=== Predecessor ===
v2001 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1962 #trueSuccessor: v509 #falseSuccessor: v515  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|DWORD[.] = MOV [v8|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v8|DWORD[.] v10|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction CMP [v26|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} state [bci:8, 5, 18] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B46" 
    xhandlers
    flags 
    probability 4569165575624464571
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v509 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$BitClass; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1318 
=== Usages ===
=== Predecessor ===
v516 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1318  <|@  <|@
f <@~|@floating>@ <|@
tid v1975 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1980 
y: i1217 
=== Succesors ===
=== Usages ===
v1318 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1980 y: i1217  <|@  <|@
f <@*|@fixed>@ <|@
tid v1318 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1975 
=== Succesors ===
trueSuccessor: v1315 
falseSuccessor: v1317 
=== Usages ===
=== Predecessor ===
v509 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1975 #trueSuccessor: v1315 #falseSuccessor: v1317  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v7|DWORD y: 256 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B42 -> B43 falseDestination: B42 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4569165575624464571
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1315 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2002 
=== Usages ===
=== Predecessor ===
v1318 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2002  <|@  <|@
f <@~|@floating>@ <|@
tid v2056 <|@
result [v26|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2000 
=== Succesors ===
=== Usages ===
a2002 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2000  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2002 <|@
result v27|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$BitClass.bits
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: n# [Z
=== Inputs ===
stateBefore: - 
guard: - 
address: v2056 
=== Succesors ===
next: i2003 
=== Usages ===
v2058 v2057 
=== Predecessor ===
v1315 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2056 #next: i2003  <|@  <|@
f <@~|@floating>@ <|@
tid v2057 <|@
result [v27|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2002 
=== Succesors ===
=== Usages ===
i2003 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2002  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2003 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?318 
guard: - 
address: v2057 
=== Succesors ===
next: v1326 
=== Usages ===
v899 
=== Predecessor ===
a2002 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?318 guard: - address: v2057 #next: v1326  <|@  <|@
f <@~|@floating>@ <|@
tid v899 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i828 
y: i2003 
=== Succesors ===
=== Usages ===
v1326 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i828 y: i2003  <|@  <|@
f <@*|@fixed>@ <|@
tid v1326 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v899 
=== Succesors ===
trueSuccessor: v1323 
falseSuccessor: v1325 
=== Usages ===
=== Predecessor ===
i2003 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v899 #trueSuccessor: v1323 #falseSuccessor: v1325  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|DWORD[.] = MOV [v26|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v8|DWORD[.] v10|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction CMP (x: v10|DWORD, y: [v27|DWORD[.] * 8 + 12]) size: DWORD state [bci:8, 5, 18] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B43 -> B44 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B52" 
    xhandlers
    flags 
    probability 4569165575624464571
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1323 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2004 
=== Usages ===
i2004 
=== Predecessor ===
v1326 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2004  <|@  <|@
f <@~|@floating>@ <|@
tid j1127 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
resultBits: 64
stamp: i64 [0 - 65535] â‡ˆ000000000000ffff
=== Inputs ===
value: i1980 
=== Succesors ===
=== Usages ===
v2058 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1980  <|@  <|@
f <@~|@floating>@ <|@
tid v2058 <|@
result [v28|QWORD + v27|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: j1127 
index: a2002 
=== Succesors ===
=== Usages ===
i2004 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1127 index: a2002  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2004 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: byte
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: i8 [0 - 1] â‡ˆ0000000000000001
=== Inputs ===
stateBefore: - 
guard: v1323 
address: v2058 
=== Succesors ===
next: v523 
=== Usages ===
i1128 
=== Predecessor ===
v1323 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1323 address: v2058 #next: v523  <|@  <|@
f <@~|@floating>@ <|@
tid i1128 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 8
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
resultBits: 32
stamp: i32 [0 - 1] â‡ˆ0000000000000001
=== Inputs ===
value: i2004 
=== Succesors ===
=== Usages ===
i205 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2004  <|@  <|@
f <@*|@fixed>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
i2004 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOVZX v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVZXB [v28|QWORD + v27|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|DWORD] destination: B44 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1325 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1831 
=== Usages ===
=== Predecessor ===
v1326 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1831  <|@  <|@
f <@~|@floating>@ <|@
tid i1832 <|@
result int[-230427|0xfffffffffffc7be5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -230427
stableDimension: 0
stamp: i32 [-230427] â‡Š00000000fffc7be5 â‡ˆ00000000fffc7be5
stampKind: i32
value: int[-230427|0xfffffffffffc7be5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1824 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1831 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1821 
=== Predecessor ===
v1325 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-230427|0xfffffffffffc7be5]] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1317 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1829 
=== Usages ===
=== Predecessor ===
v1318 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1829  <|@  <|@
f <@~|@floating>@ <|@
tid i1830 <|@
result int[-227859|0xfffffffffffc85ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -227859
stableDimension: 0
stamp: i32 [-227859] â‡Š00000000fffc85ed â‡ˆ00000000fffc85ed
stampKind: i32
value: int[-227859|0xfffffffffffc85ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1824 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1829 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1821 
=== Predecessor ===
v1317 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-227859|0xfffffffffffc85ed]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1824 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-230427 - -227595] â‡Š00000000fffc00e5 â‡ˆ00000000fffcfffd
valueDescription: i32
=== Inputs ===
merge: v1821 
values: i1830 i1832 
=== Succesors ===
=== Usages ===
v1826 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1821 values: i1830 i1832  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1821 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1829 v1831 
=== Succesors ===
next: v1826 
=== Usages ===
i1824 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1829 v1831 #next: v1826  <|@  <|@
f <@*|@fixed>@ <|@
tid v1826 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?318 
actionAndReason: i1824 
speculation: a1777 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1821 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?318 actionAndReason: i1824 speculation: a1777  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v8|DWORD[.] v10|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction DEOPT info [bci:8, 5, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B52" 
    xhandlers
    flags 
    probability 4569165575624464571
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: i300 
=== Usages ===
=== Predecessor ===
v516 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i300  <|@  <|@
f <@~|@floating>@ <|@
tid a888 <|@
result v31|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
value: a2000 
=== Succesors ===
=== Usages ===
v907 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2000  <|@  <|@
tid v907 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
returnStamp: i32 [0 - 1] â‡ˆ0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@4e80f760
stamp: void
targetMethod: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>
=== Inputs ===
arguments: a888 i828 
=== Succesors ===
=== Usages ===
i300 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a888 i828  <|@  <|@
tid ?1772 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?304 
values: - - 
=== Succesors ===
=== Usages ===
i300 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?304 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i300 <|@
result v32|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 16
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
polymorphic: false
stamp: i32 [0 - 1] â‡ˆ0000000000000001
targetMethod: Direct#Pattern$CharProperty.isSatisfiedBy
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v907 
stateDuring: ?1772 
=== Succesors ===
next: v204 
=== Usages ===
i205 
=== Predecessor ===
v515 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v907 stateDuring: ?1772 #next: v204  <|@  <|@
f <@*|@fixed>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
i300 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 18] <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|DWORD] destination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B84" 
    xhandlers
    flags 
    probability 4569100426553690526
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 22]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v616 
=== Usages ===
=== Predecessor ===
v297 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v616  <|@  <|@
f <@*|@fixed>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v613 
=== Predecessor ===
v296 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B49 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B52" 
    xhandlers
    flags 
    probability 4567334797065855058
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 22]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v607 
=== Usages ===
=== Predecessor ===
v370 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v607  <|@  <|@
f <@*|@fixed>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
v369 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B52" 
    xhandlers
    flags 
    probability 4589056961821986236
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 22]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v640 
=== Usages ===
=== Predecessor ===
v435 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v640  <|@  <|@
f <@*|@fixed>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
v434 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" "B44" "B50" "B51" "B34" "B27" 
    successors "B53" "B83" 
    xhandlers
    flags 
    probability 4598229702893204513
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i205 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: i32 [0 - 1] â‡ˆ0000000000000001
valueDescription: i32
=== Inputs ===
merge: v202 
values: i300 i1128 i28 i28 i28 i28 
=== Succesors ===
=== Usages ===
i618 v187 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v202 values: i300 i1128 i28 i28 i28 i28  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v204 v523 v607 v640 v691 v708 
=== Succesors ===
next: v190 
=== Usages ===
i205 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v204 v523 v607 v640 v691 v708 #next: v190  <|@  <|@
f <@~|@floating>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i205 
y: i15 
=== Succesors ===
=== Usages ===
v190 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i205 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.012246995066949262
=== Inputs ===
condition: v187 
=== Succesors ===
trueSuccessor: v188 
falseSuccessor: v189 
=== Usages ===
=== Predecessor ===
v202 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v187 #trueSuccessor: v188 #falseSuccessor: v189  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v33|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" 
    xhandlers
    flags 
    probability 4569291743449605540
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 11]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v711 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v711  <|@  <|@
f <@*|@fixed>@ <|@
tid v711 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v710 
=== Predecessor ===
v188 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B10" 
    successors "B55" "B81" 
    xhandlers
    flags 
    probability 4579916140811292442
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v710 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v711 v713 
=== Succesors ===
next: a2005 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v711 v713 #next: a2005  <|@  <|@
f <@~|@floating>@ <|@
tid v2059 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a2005 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2005 <|@
result v34|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$rhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2059 
=== Succesors ===
next: v2108 
=== Usages ===
v2098 v2108 v2071 v2074 
=== Predecessor ===
v710 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2059 #next: v2108  <|@  <|@
tid ?712 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 1
=== Inputs ===
outerFrameState: ?197 
values: a1 i828 i15 
=== Succesors ===
=== Usages ===
v1878 v2108 v2007 i2009 i2013 v2109 i2018 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?197 values: a1 i828 i15  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2108 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?712 
object: a2005 
=== Succesors ===
next: a2006 
=== Usages ===
=== Predecessor ===
a2005 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?712 object: a2005 #next: a2006  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2006 <|@
result v35|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 25]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2060 
=== Succesors ===
next: v2007 
=== Usages ===
a915 v2097 v2062 v2066 v2070 
=== Predecessor ===
v2108 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2060 #next: v2007  <|@  <|@
f <@~|@floating>@ <|@
tid v2097 <|@
result [v35|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2006 
=== Succesors ===
=== Usages ===
v2007 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2006  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2007 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?712 
guard: - 
address: v2097 
=== Succesors ===
next: v1338 
=== Usages ===
v1964 
=== Predecessor ===
a2006 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?712 guard: - address: v2097 #next: v1338  <|@  <|@
f <@~|@floating>@ <|@
tid v1964 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2007 
y: v1963 
=== Succesors ===
=== Usages ===
v1338 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2007 y: v1963  <|@  <|@
f <@*|@fixed>@ <|@
tid v1338 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1964 
=== Succesors ===
trueSuccessor: v1335 
falseSuccessor: v1337 
=== Usages ===
=== Predecessor ===
v2007 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1964 #trueSuccessor: v1335 #falseSuccessor: v1337  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v34|DWORD[.] * 8] state [bci:8, 18] <|@ <|@
      nr   -1  <|@ instruction v35|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction CMP [v35|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:8, 18] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B80" 
    xhandlers
    flags 
    probability 4579916140811292442
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1335 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2008 
=== Usages ===
=== Predecessor ===
v1338 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2008  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2008 <|@
result v36|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.locals
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 1]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v2061 
=== Succesors ===
next: i2009 
=== Usages ===
a921 v2063 
=== Predecessor ===
v1335 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2061 #next: i2009  <|@  <|@
f <@~|@floating>@ <|@
tid v2063 <|@
result [v36|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2008 
=== Succesors ===
=== Usages ===
i2009 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2008  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2009 <|@
result v37|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?712 
guard: - 
address: v2063 
=== Succesors ===
next: i2010 
=== Usages ===
v929 
=== Predecessor ===
a2008 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?712 guard: - address: v2063 #next: i2010  <|@  <|@
f <@~|@floating>@ <|@
tid v2062 <|@
result [v35|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2006 
=== Succesors ===
=== Usages ===
i2010 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2006  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2010 <|@
result v38|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupTail.localIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2062 
=== Succesors ===
next: v1346 
=== Usages ===
v2064 v929 
=== Predecessor ===
i2009 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2062 #next: v1346  <|@  <|@
f <@~|@floating>@ <|@
tid v929 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2010 
y: i2009 
=== Succesors ===
=== Usages ===
v1346 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2010 y: i2009  <|@  <|@
f <@*|@fixed>@ <|@
tid v1346 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v929 
=== Succesors ===
trueSuccessor: v1343 
falseSuccessor: v1345 
=== Usages ===
=== Predecessor ===
i2010 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v929 #trueSuccessor: v1343 #falseSuccessor: v1345  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v36|DWORD[.] = MOV [v1|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction v37|DWORD = MOV [v36|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18] <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOV [v35|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v37|DWORD, y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" "B58" 
    xhandlers
    flags 
    probability 4579916140811292442
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1343 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2011 
=== Usages ===
i2011 
=== Predecessor ===
v1346 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2011  <|@  <|@
f <@~|@floating>@ <|@
tid a921 <|@
result v39|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 1]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a2008 
=== Succesors ===
=== Usages ===
v2064 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2008  <|@  <|@
f <@~|@floating>@ <|@
tid v2064 <|@
result [v39|QWORD[.] + v38|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a921 
index: i2010 
=== Succesors ===
=== Usages ===
i2011 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a921 index: i2010  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2011 <|@
result v40|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1343 
address: v2064 
=== Succesors ===
next: v1350 
=== Usages ===
v85 v975 i792 i789 
=== Predecessor ===
v1343 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1343 address: v2064 #next: v1350  <|@  <|@
f <@~|@floating>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2011 
y: i15 
=== Succesors ===
=== Usages ===
v1350 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2011 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v1350 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v85 
=== Succesors ===
trueSuccessor: v1349 
falseSuccessor: v1347 
=== Usages ===
=== Predecessor ===
i2011 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v85 #trueSuccessor: v1349 #falseSuccessor: v1347  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = MOV [v39|QWORD[.] + v38|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v40|DWORD, y: v40|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1349 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1885 
=== Usages ===
=== Predecessor ===
v1350 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1885  <|@  <|@
f <@~|@floating>@ <|@
tid i1886 <|@
result int[-240147|0xfffffffffffc55ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -240147
stableDimension: 0
stamp: i32 [-240147] â‡Š00000000fffc55ed â‡ˆ00000000fffc55ed
stampKind: i32
value: int[-240147|0xfffffffffffc55ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1876 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1885 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1873 
=== Predecessor ===
v1349 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-240147|0xfffffffffffc55ed]] destination: B57 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" "B79" 
    xhandlers
    flags 
    probability 4579916140811292442
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1347 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2012 
=== Usages ===
=== Predecessor ===
v1350 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2012  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2012 <|@
result v41|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.groups
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 17]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v2065 
=== Succesors ===
next: i2013 
=== Usages ===
a942 v2067 
=== Predecessor ===
v1347 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2065 #next: i2013  <|@  <|@
f <@~|@floating>@ <|@
tid v2067 <|@
result [v41|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2012 
=== Succesors ===
=== Usages ===
i2013 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2012  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2013 <|@
result v42|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 24]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?712 
guard: - 
address: v2067 
=== Succesors ===
next: i2014 
=== Usages ===
v977 v968 
=== Predecessor ===
a2012 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?712 guard: - address: v2067 #next: i2014  <|@  <|@
f <@~|@floating>@ <|@
tid v2066 <|@
result [v35|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2006 
=== Succesors ===
=== Usages ===
i2014 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2006  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2014 <|@
result v43|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupTail.groupIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 21]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2066 
=== Succesors ===
next: v1358 
=== Usages ===
v968 i100 v2068 
=== Predecessor ===
i2013 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2066 #next: v1358  <|@  <|@
f <@~|@floating>@ <|@
tid v968 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2014 
y: i2013 
=== Succesors ===
=== Usages ===
v1358 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2014 y: i2013  <|@  <|@
f <@*|@fixed>@ <|@
tid v1358 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v968 
=== Succesors ===
trueSuccessor: v1355 
falseSuccessor: v1357 
=== Usages ===
=== Predecessor ===
i2014 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v968 #trueSuccessor: v1355 #falseSuccessor: v1357  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|DWORD[.] = MOV [v1|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction v42|DWORD = MOV [v41|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18] <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOV [v35|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v42|DWORD, y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B78" 
    xhandlers
    flags 
    probability 4579916140811292442
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1355 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1362 
=== Usages ===
i2023 v975 
=== Predecessor ===
v1358 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1362  <|@  <|@
f <@~|@floating>@ <|@
tid i100 <|@
result v44|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 60]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: i32
=== Inputs ===
x: i2014 
y: i28 
=== Succesors ===
=== Usages ===
v2069 v977 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2014 y: i28  <|@  <|@
f <@~|@floating>@ <|@
tid v977 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i100 
y: i2013 
=== Succesors ===
=== Usages ===
v1362 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i100 y: i2013  <|@  <|@
f <@*|@fixed>@ <|@
tid v1362 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v977 
=== Succesors ===
trueSuccessor: v1359 
falseSuccessor: v1361 
=== Usages ===
=== Predecessor ===
v1355 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v977 #trueSuccessor: v1359 #falseSuccessor: v1361  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = INC v43|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v42|DWORD, y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B68" 
    xhandlers
    flags 
    probability 4579916140811292442
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1359 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2015 
=== Usages ===
i2022 v984 
=== Predecessor ===
v1362 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2015  <|@  <|@
f <@~|@floating>@ <|@
tid v2070 <|@
result [v35|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2006 
=== Succesors ===
=== Usages ===
a2015 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2006  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2015 <|@
result v45|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 64]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2070 
=== Succesors ===
next: v2109 
=== Usages ===
a987 v2109 v2099 
=== Predecessor ===
v1359 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2070 #next: v2109  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2109 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?712 
object: a2015 
=== Succesors ===
next: v2016 
=== Usages ===
=== Predecessor ===
a2015 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?712 object: a2015 #next: v2016  <|@  <|@
f <@~|@floating>@ <|@
tid v2098 <|@
result [v34|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2005 
=== Succesors ===
=== Usages ===
v2016 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2005  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2016 <|@
result v46|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2098 
=== Succesors ===
next: v232 
=== Usages ===
v1966 v1965 
=== Predecessor ===
v2109 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2098 #next: v232  <|@  <|@
f <@~|@floating>@ <|@
tid v1965 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2016 
y: v1961 
=== Succesors ===
=== Usages ===
v232 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2016 y: v1961  <|@  <|@
f <@~|@floating>@ <|@
tid v2071 <|@
result [v34|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2005 
=== Succesors ===
=== Usages ===
a2017 i2020 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2005  <|@  <|@
f <@*|@fixed>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$BitClass; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1965 
=== Succesors ===
trueSuccessor: v225 
falseSuccessor: v231 
=== Usages ===
=== Predecessor ===
v2016 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1965 #trueSuccessor: v225 #falseSuccessor: v231  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[.] = MOV [v35|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v45|DWORD[.] * 8] state [bci:8, 18] <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOV [v34|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v46|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B67" 
    xhandlers
    flags 
    probability 4575412541183921946
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$BitClass; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2017 
=== Usages ===
=== Predecessor ===
v232 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2017  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2017 <|@
result v47|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$BitClass.bits
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: n# [Z
=== Inputs ===
stateBefore: - 
guard: - 
address: v2071 
=== Succesors ===
next: i2018 
=== Usages ===
v2073 v2072 
=== Predecessor ===
v225 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2071 #next: i2018  <|@  <|@
f <@~|@floating>@ <|@
tid v2072 <|@
result [v47|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2017 
=== Succesors ===
=== Usages ===
i2018 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2017  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2018 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?712 
guard: - 
address: v2072 
=== Succesors ===
next: v1374 
=== Usages ===
v998 
=== Predecessor ===
a2017 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?712 guard: - address: v2072 #next: v1374  <|@  <|@
f <@~|@floating>@ <|@
tid v998 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i828 
y: i2018 
=== Succesors ===
=== Usages ===
v1374 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i828 y: i2018  <|@  <|@
f <@*|@fixed>@ <|@
tid v1374 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v998 
=== Succesors ===
trueSuccessor: v1371 
falseSuccessor: v1373 
=== Usages ===
=== Predecessor ===
i2018 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v998 #trueSuccessor: v1371 #falseSuccessor: v1373  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD[.] = MOV [v34|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction CMP (x: v10|DWORD, y: [v47|DWORD[.] * 8 + 12]) size: DWORD state [bci:8, 18] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B61 -> B62 falseDestination: B61 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B66" 
    xhandlers
    flags 
    probability 4575412541183921946
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1371 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1378 
=== Usages ===
i2019 
=== Predecessor ===
v1374 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1378  <|@  <|@
f <@~|@floating>@ <|@
tid v1218 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1980 
y: i1217 
=== Succesors ===
=== Usages ===
v1378 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1980 y: i1217  <|@  <|@
f <@*|@fixed>@ <|@
tid v1378 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1218 
=== Succesors ===
trueSuccessor: v1375 
falseSuccessor: v1377 
=== Usages ===
=== Predecessor ===
v1371 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1218 #trueSuccessor: v1375 #falseSuccessor: v1377  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v7|DWORD y: 256 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B62 -> B63 falseDestination: B62 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4575412541183921946
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1375 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2019 
=== Usages ===
=== Predecessor ===
v1378 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2019  <|@  <|@
f <@~|@floating>@ <|@
tid j1974 <|@
result v48|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
resultBits: 64
stamp: i64 [0 - 65535] â‡ˆ000000000000ffff
=== Inputs ===
value: i1980 
=== Succesors ===
=== Usages ===
v2073 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1980  <|@  <|@
f <@~|@floating>@ <|@
tid v2073 <|@
result [v48|QWORD + v47|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: j1974 
index: a2017 
=== Succesors ===
=== Usages ===
i2019 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1974 index: a2017  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2019 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: byte
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: i8 [0 - 1] â‡ˆ0000000000000001
=== Inputs ===
stateBefore: - 
guard: v1371 
address: v2073 
=== Succesors ===
next: v1394 
=== Usages ===
i1137 
=== Predecessor ===
v1375 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1371 address: v2073 #next: v1394  <|@  <|@
f <@~|@floating>@ <|@
tid i1137 <|@
result v49|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 8
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
resultBits: 32
stamp: i32 [0 - 1] â‡ˆ0000000000000001
=== Inputs ===
value: i2019 
=== Succesors ===
=== Usages ===
v16 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2019  <|@  <|@
f <@~|@floating>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1137 
y: i15 
=== Succesors ===
=== Usages ===
v1394 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1137 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v1394 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v16 
=== Succesors ===
trueSuccessor: v1393 
falseSuccessor: v1391 
=== Usages ===
=== Predecessor ===
i2019 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v16 #trueSuccessor: v1393 #falseSuccessor: v1391  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOVZX v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = MOVZXB [v48|QWORD + v47|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v49|DWORD, y: v49|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1393 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1392 
=== Usages ===
=== Predecessor ===
v1394 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1392  <|@  <|@
tid ?175 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<Pattern$CharProperty.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3778
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 a4 i828 i15 
=== Succesors ===
=== Usages ===
v1392 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 a4 i828 i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v1392 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 912
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?175 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1393 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?175  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -233491 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction DEOPT info [bci:21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B74" 
    xhandlers
    flags 
    probability 4575412541183921946
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1391 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2104 
=== Usages ===
=== Predecessor ===
v1394 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2104  <|@  <|@
f <@*|@fixed>@ <|@
tid v2104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2103 
=== Predecessor ===
v1391 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B65 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1377 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1907 
=== Usages ===
=== Predecessor ===
v1378 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1907  <|@  <|@
f <@~|@floating>@ <|@
tid i1908 <|@
result int[-253203|0xfffffffffffc22ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -253203
stableDimension: 0
stamp: i32 [-253203] â‡Š00000000fffc22ed â‡ˆ00000000fffc22ed
stampKind: i32
value: int[-253203|0xfffffffffffc22ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1876 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1907 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1873 
=== Predecessor ===
v1377 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-253203|0xfffffffffffc22ed]] destination: B66 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1373 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1905 
=== Usages ===
=== Predecessor ===
v1374 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1905  <|@  <|@
f <@~|@floating>@ <|@
tid i1906 <|@
result int[-255771|0xfffffffffffc18e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -255771
stableDimension: 0
stamp: i32 [-255771] â‡Š00000000fffc18e5 â‡ˆ00000000fffc18e5
stampKind: i32
value: int[-255771|0xfffffffffffc18e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1876 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1905 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1873 
=== Predecessor ===
v1373 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-255771|0xfffffffffffc18e5]] destination: B67 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B69" "B77" 
    xhandlers
    flags 
    probability 4575412541183921946
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1382 
=== Usages ===
=== Predecessor ===
v232 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1382  <|@  <|@
f <@~|@floating>@ <|@
tid v1966 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2016 
y: v1953 
=== Succesors ===
=== Usages ===
v1382 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2016 y: v1953  <|@  <|@
f <@*|@fixed>@ <|@
tid v1382 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1966 
=== Succesors ===
trueSuccessor: v1379 
falseSuccessor: v1381 
=== Usages ===
=== Predecessor ===
v231 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1966 #trueSuccessor: v1379 #falseSuccessor: v1381  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v46|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4575412541183921946
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1379 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2020 
=== Usages ===
=== Predecessor ===
v1382 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2020  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2020 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2071 
=== Succesors ===
next: v1386 
=== Usages ===
v343 
=== Predecessor ===
v1379 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2071 #next: v1386  <|@  <|@
f <@~|@floating>@ <|@
tid v343 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i828 
y: i2020 
=== Succesors ===
=== Usages ===
v1386 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i828 y: i2020  <|@  <|@
f <@*|@fixed>@ <|@
tid v1386 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v343 
=== Succesors ===
trueSuccessor: v1385 
falseSuccessor: v1383 
=== Usages ===
=== Predecessor ===
i2020 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v343 #trueSuccessor: v1385 #falseSuccessor: v1383  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: [v34|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1385 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1899 
=== Usages ===
=== Predecessor ===
v1386 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1899  <|@  <|@
f <@~|@floating>@ <|@
tid i1900 <|@
result int[-258067|0xfffffffffffc0fed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -258067
stableDimension: 0
stamp: i32 [-258067] â‡Š00000000fffc0fed â‡ˆ00000000fffc0fed
stampKind: i32
value: int[-258067|0xfffffffffffc0fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1876 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1899 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1873 
=== Predecessor ===
v1385 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-258067|0xfffffffffffc0fed]] destination: B70 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    probability 4575412541183921946
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1383 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2021 
=== Usages ===
=== Predecessor ===
v1386 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2021  <|@  <|@
f <@~|@floating>@ <|@
tid v2074 <|@
result [v34|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2005 
=== Succesors ===
=== Usages ===
i2021 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2005  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2021 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2074 
=== Succesors ===
next: v1390 
=== Usages ===
v347 
=== Predecessor ===
v1383 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2074 #next: v1390  <|@  <|@
f <@~|@floating>@ <|@
tid v347 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2021 
y: i828 
=== Succesors ===
=== Usages ===
v1390 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2021 y: i828  <|@  <|@
f <@*|@fixed>@ <|@
tid v1390 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v347 
=== Succesors ===
trueSuccessor: v1389 
falseSuccessor: v1387 
=== Usages ===
=== Predecessor ===
i2021 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v347 #trueSuccessor: v1389 #falseSuccessor: v1387  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: [v34|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B71 -> B72 falseDestination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1389 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1903 
=== Usages ===
=== Predecessor ===
v1390 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1903  <|@  <|@
f <@~|@floating>@ <|@
tid i1904 <|@
result int[-258323|0xfffffffffffc0eed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -258323
stableDimension: 0
stamp: i32 [-258323] â‡Š00000000fffc0eed â‡ˆ00000000fffc0eed
stampKind: i32
value: int[-258323|0xfffffffffffc0eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1876 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1903 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1873 
=== Predecessor ===
v1389 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-258323|0xfffffffffffc0eed]] destination: B72 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" 
    xhandlers
    flags 
    probability 4575412541183921946
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1387 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v199 
=== Usages ===
=== Predecessor ===
v1390 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v199  <|@  <|@
f <@*|@fixed>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2103 
=== Predecessor ===
v1387 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B65" "B73" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4579916140811292442
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2103 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2104 v199 
=== Succesors ===
next: i2022 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2104 v199 #next: i2022  <|@  <|@
f <@~|@floating>@ <|@
tid a942 <|@
result v50|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 17]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a2012 
=== Succesors ===
=== Usages ===
v2068 a546 v2069 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2012  <|@  <|@
f <@~|@floating>@ <|@
tid v2069 <|@
result [v50|QWORD[.] + v44|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a942 
index: i100 
=== Succesors ===
=== Usages ===
v984 i2022 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a942 index: i100  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2022 <|@
result v51|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4715) [bci: 37]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1359 
address: v2069 
=== Succesors ===
next: i2023 
=== Usages ===
i552 i550 
=== Predecessor ===
v2103 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1359 address: v2069 #next: i2023  <|@  <|@
f <@~|@floating>@ <|@
tid v2068 <|@
result [v50|QWORD[.] + v43|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a942 
index: i2014 
=== Succesors ===
=== Usages ===
v975 i2023 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a942 index: i2014  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2023 <|@
result v52|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 24]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1355 
address: v2068 
=== Succesors ===
next: v975 
=== Usages ===
i549 i547 
=== Predecessor ===
i2022 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1355 address: v2068 #next: v975  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v975 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1355 
address: v2068 
value: i2011 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v984 
=== Usages ===
=== Predecessor ===
i2023 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1355 address: v2068 value: i2011 stateAfter: - lastLocationAccess: - #next: v984  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v984 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1359 
address: v2069 
value: i22 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2024 
=== Usages ===
=== Predecessor ===
v975 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1359 address: v2069 value: i22 stateAfter: - lastLocationAccess: - #next: v2024  <|@  <|@
f <@~|@floating>@ <|@
tid v2099 <|@
result [v45|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2015 
=== Succesors ===
=== Usages ===
v2024 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2015  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2024 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2099 
=== Succesors ===
next: v134 
=== Usages ===
v1968 
=== Predecessor ===
v984 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2099 #next: v134  <|@  <|@
f <@~|@floating>@ <|@
tid v1968 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2024 
y: v1967 
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2024 y: v1967  <|@  <|@
f <@~|@floating>@ <|@
tid a915 <|@
result v53|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 25]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a2006 
=== Succesors ===
=== Usages ===
a541 a542 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2006  <|@  <|@
f <@*|@fixed>@ <|@
tid v134 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$LastNode; target_method=match target_method_class=Ljava/util/regex/Pattern$LastNode; position=at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
trueSuccessorProbability: 0.8257972313536578
=== Inputs ===
condition: v1968 
=== Succesors ===
trueSuccessor: v127 
falseSuccessor: v133 
=== Usages ===
=== Predecessor ===
v2024 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1968 #trueSuccessor: v127 #falseSuccessor: v133  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = UNCOMPRESSPOINTER (input: v41|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = MOV [v50|QWORD[.] + v44|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOV [v50|QWORD[.] + v43|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v50|QWORD[.] + v43|DWORD * 4 + 16], y: v40|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v50|QWORD[.] + v44|DWORD * 4 + 16], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = UNCOMPRESSPOINTER (input: v35|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP [v45|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8257972313536578 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B92" 
    xhandlers
    flags 
    probability 4578389685735908546
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$LastNode; target_method=match target_method_class=Ljava/util/regex/Pattern$LastNode; position=at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v534 
=== Usages ===
=== Predecessor ===
v134 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v534  <|@  <|@
f <@*|@fixed>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v533 
=== Predecessor ===
v127 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v53|QWORD[.], v40|DWORD, v50|QWORD[.], v52|DWORD, v51|DWORD] destination: B75 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B99" 
    xhandlers
    flags 
    probability 4568252242827848031
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v538 
=== Usages ===
=== Predecessor ===
v134 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v538  <|@  <|@
f <@~|@floating>@ <|@
tid a987 <|@
result v54|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 64]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a2015 
=== Succesors ===
=== Usages ===
a553 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2015  <|@  <|@
f <@*|@fixed>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v537 
=== Predecessor ===
v133 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v53|QWORD[.], v40|DWORD, v52|DWORD, v51|DWORD, v54|QWORD[.]] destination: B76 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1381 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1901 
=== Usages ===
=== Predecessor ===
v1382 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1901  <|@  <|@
f <@~|@floating>@ <|@
tid i1902 <|@
result int[-256819|0xfffffffffffc14cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -256819
stableDimension: 0
stamp: i32 [-256819] â‡Š00000000fffc14cd â‡ˆ00000000fffc14cd
stampKind: i32
value: int[-256819|0xfffffffffffc14cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1876 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1901 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1873 
=== Predecessor ===
v1381 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-256819|0xfffffffffffc14cd]] destination: B77 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1895 
=== Usages ===
=== Predecessor ===
v1362 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1895  <|@  <|@
f <@~|@floating>@ <|@
tid i1896 <|@
result int[-250395|0xfffffffffffc2de5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -250395
stableDimension: 0
stamp: i32 [-250395] â‡Š00000000fffc2de5 â‡ˆ00000000fffc2de5
stampKind: i32
value: int[-250395|0xfffffffffffc2de5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1876 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1895 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1873 
=== Predecessor ===
v1361 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-250395|0xfffffffffffc2de5]] destination: B78 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1357 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1893 
=== Usages ===
=== Predecessor ===
v1358 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1893  <|@  <|@
f <@~|@floating>@ <|@
tid i1894 <|@
result int[-248091|0xfffffffffffc36e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -248091
stableDimension: 0
stamp: i32 [-248091] â‡Š00000000fffc36e5 â‡ˆ00000000fffc36e5
stampKind: i32
value: int[-248091|0xfffffffffffc36e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1876 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1893 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1873 
=== Predecessor ===
v1357 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-248091|0xfffffffffffc36e5]] destination: B79 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1345 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1887 
=== Usages ===
=== Predecessor ===
v1346 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1887  <|@  <|@
f <@~|@floating>@ <|@
tid i1888 <|@
result int[-238107|0xfffffffffffc5de5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -238107
stableDimension: 0
stamp: i32 [-238107] â‡Š00000000fffc5de5 â‡ˆ00000000fffc5de5
stampKind: i32
value: int[-238107|0xfffffffffffc5de5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1876 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1887 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1873 
=== Predecessor ===
v1345 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-238107|0xfffffffffffc5de5]] destination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1337 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1883 
=== Usages ===
=== Predecessor ===
v1338 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1883  <|@  <|@
f <@~|@floating>@ <|@
tid i1884 <|@
result int[-234803|0xfffffffffffc6acd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -234803
stableDimension: 0
stamp: i32 [-234803] â‡Š00000000fffc6acd â‡ˆ00000000fffc6acd
stampKind: i32
value: int[-234803|0xfffffffffffc6acd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1876 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1883 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1873 
=== Predecessor ===
v1337 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-234803|0xfffffffffffc6acd]] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B57" "B80" "B79" "B78" "B70" "B77" "B72" "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 2370019303903723520
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1876 <|@
result v55|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-258323 - -233227] â‡Š00000000fffc00c5 â‡ˆ00000000fffc7ffd
valueDescription: i32
=== Inputs ===
merge: v1873 
values: i1884 i1886 i1888 i1894 i1896 i1900 i1902 i1904 i1906 i1908 
=== Succesors ===
=== Usages ===
v1878 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1873 values: i1884 i1886 i1888 i1894 i1896 i1900 i1902 i1904 i1906 i1908  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1873 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1883 v1885 v1887 v1893 v1895 v1899 v1901 v1903 v1905 v1907 
=== Succesors ===
next: v1878 
=== Usages ===
i1876 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1883 v1885 v1887 v1893 v1895 v1899 v1901 v1903 v1905 v1907 #next: v1878  <|@  <|@
f <@*|@fixed>@ <|@
tid v1878 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?712 
actionAndReason: i1876 
speculation: a1777 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1873 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?712 actionAndReason: i1876 speculation: a1777  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v55|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction DEOPT info [bci:8, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B84" 
    xhandlers
    flags 
    probability 4598172540601706155
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 22]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v614 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v614  <|@  <|@
f <@*|@fixed>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v613 
=== Predecessor ===
v189 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|DWORD] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B49" "B13" "B20" 
    successors "B85" "B107" 
    xhandlers
    flags 
    probability 4607045504440169924
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i618 <|@
result v56|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] â‡ˆ0000000000000001
valueDescription: i32
=== Inputs ===
merge: v613 
values: i205 i28 i28 i28 
=== Succesors ===
=== Usages ===
?615 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v613 values: i205 i28 i28 i28  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v614 v616 v657 v674 
=== Succesors ===
next: a2025 
=== Usages ===
i618 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v614 v616 v657 v674 #next: a2025  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2025 <|@
result v57|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 25]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2060 
=== Succesors ===
next: v2026 
=== Usages ===
a1011 v2100 v2075 v2078 v2082 
=== Predecessor ===
v613 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2060 #next: v2026  <|@  <|@
tid ?615 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 1
=== Inputs ===
outerFrameState: ?197 
values: a1 i828 i618 
=== Succesors ===
=== Usages ===
v1856 v2026 i2028 i2032 v2035 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?197 values: a1 i828 i618  <|@  <|@
f <@~|@floating>@ <|@
tid v2100 <|@
result [v57|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2025 
=== Succesors ===
=== Usages ===
v2026 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2025  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2026 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?615 
guard: - 
address: v2100 
=== Succesors ===
next: v1402 
=== Usages ===
v1969 
=== Predecessor ===
a2025 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?615 guard: - address: v2100 #next: v1402  <|@  <|@
f <@~|@floating>@ <|@
tid v1969 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2026 
y: v1963 
=== Succesors ===
=== Usages ===
v1402 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2026 y: v1963  <|@  <|@
f <@*|@fixed>@ <|@
tid v1402 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1969 
=== Succesors ===
trueSuccessor: v1399 
falseSuccessor: v1401 
=== Usages ===
=== Predecessor ===
v2026 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1969 #trueSuccessor: v1399 #falseSuccessor: v1401  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v57|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: v56|DWORD 
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction CMP [v57|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:8, 18] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B86" "B106" 
    xhandlers
    flags 
    probability 4607045504440169924
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2027 
=== Usages ===
=== Predecessor ===
v1402 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2027  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2027 <|@
result v58|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.locals
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 1]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v2061 
=== Succesors ===
next: i2028 
=== Usages ===
a1015 v2076 
=== Predecessor ===
v1399 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2061 #next: i2028  <|@  <|@
f <@~|@floating>@ <|@
tid v2076 <|@
result [v58|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2027 
=== Succesors ===
=== Usages ===
i2028 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2027  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2028 <|@
result v59|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?615 
guard: - 
address: v2076 
=== Succesors ===
next: i2029 
=== Usages ===
v1023 
=== Predecessor ===
a2027 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?615 guard: - address: v2076 #next: i2029  <|@  <|@
f <@~|@floating>@ <|@
tid v2075 <|@
result [v57|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2025 
=== Succesors ===
=== Usages ===
i2029 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2025  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2029 <|@
result v60|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupTail.localIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2075 
=== Succesors ===
next: v1410 
=== Usages ===
v2077 v1023 
=== Predecessor ===
i2028 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2075 #next: v1410  <|@  <|@
f <@~|@floating>@ <|@
tid v1023 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2029 
y: i2028 
=== Succesors ===
=== Usages ===
v1410 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2029 y: i2028  <|@  <|@
f <@*|@fixed>@ <|@
tid v1410 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1023 
=== Succesors ===
trueSuccessor: v1407 
falseSuccessor: v1409 
=== Usages ===
=== Predecessor ===
i2029 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1023 #trueSuccessor: v1407 #falseSuccessor: v1409  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|DWORD[.] = MOV [v1|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: v56|DWORD 
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction v59|DWORD = MOV [v58|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18] <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = MOV [v57|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v59|DWORD, y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B85 -> B86 falseDestination: B85 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B87" "B88" 
    xhandlers
    flags 
    probability 4607045504440169924
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1407 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2030 
=== Usages ===
i2030 
=== Predecessor ===
v1410 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2030  <|@  <|@
f <@~|@floating>@ <|@
tid a1015 <|@
result v61|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 1]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a2027 
=== Succesors ===
=== Usages ===
v2077 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2027  <|@  <|@
f <@~|@floating>@ <|@
tid v2077 <|@
result [v61|QWORD[.] + v60|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1015 
index: i2029 
=== Succesors ===
=== Usages ===
i2030 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1015 index: i2029  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2030 <|@
result v62|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1407 
address: v2077 
=== Succesors ===
next: v1414 
=== Usages ===
v566 v1066 i792 i789 
=== Predecessor ===
v1407 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1407 address: v2077 #next: v1414  <|@  <|@
f <@~|@floating>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2030 
y: i15 
=== Succesors ===
=== Usages ===
v1414 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2030 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v1414 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v566 
=== Succesors ===
trueSuccessor: v1413 
falseSuccessor: v1411 
=== Usages ===
=== Predecessor ===
i2030 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v566 #trueSuccessor: v1413 #falseSuccessor: v1411  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = MOV [v61|QWORD[.] + v60|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v62|DWORD, y: v62|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B86 -> B87 falseDestination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1413 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1861 
=== Usages ===
=== Predecessor ===
v1414 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1861  <|@  <|@
f <@~|@floating>@ <|@
tid i1862 <|@
result int[-263955|0xfffffffffffbf8ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -263955
stableDimension: 0
stamp: i32 [-263955] â‡Š00000000fffbf8ed â‡ˆ00000000fffbf8ed
stampKind: i32
value: int[-263955|0xfffffffffffbf8ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1854 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1861 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1851 
=== Predecessor ===
v1413 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-263955|0xfffffffffffbf8ed]] destination: B87 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B89" "B105" 
    xhandlers
    flags 
    probability 4607045504440169924
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1411 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2031 
=== Usages ===
=== Predecessor ===
v1414 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2031  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2031 <|@
result v63|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.groups
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 17]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v2065 
=== Succesors ===
next: i2032 
=== Usages ===
a1033 v2079 
=== Predecessor ===
v1411 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2065 #next: i2032  <|@  <|@
f <@~|@floating>@ <|@
tid v2079 <|@
result [v63|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2031 
=== Succesors ===
=== Usages ===
i2032 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2031  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2032 <|@
result v64|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 24]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?615 
guard: - 
address: v2079 
=== Succesors ===
next: i2033 
=== Usages ===
v1068 v1059 
=== Predecessor ===
a2031 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?615 guard: - address: v2079 #next: i2033  <|@  <|@
f <@~|@floating>@ <|@
tid v2078 <|@
result [v57|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2025 
=== Succesors ===
=== Usages ===
i2033 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2025  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2033 <|@
result v65|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupTail.groupIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 21]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2078 
=== Succesors ===
next: v1422 
=== Usages ===
v1059 v2080 i574 
=== Predecessor ===
i2032 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2078 #next: v1422  <|@  <|@
f <@~|@floating>@ <|@
tid v1059 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2033 
y: i2032 
=== Succesors ===
=== Usages ===
v1422 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2033 y: i2032  <|@  <|@
f <@*|@fixed>@ <|@
tid v1422 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1059 
=== Succesors ===
trueSuccessor: v1419 
falseSuccessor: v1421 
=== Usages ===
=== Predecessor ===
i2033 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1059 #trueSuccessor: v1419 #falseSuccessor: v1421  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|DWORD[.] = MOV [v1|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: v56|DWORD 
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction v64|DWORD = MOV [v63|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18] <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOV [v57|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v64|DWORD, y: v65|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B88 -> B89 falseDestination: B88 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B90" "B104" 
    xhandlers
    flags 
    probability 4607045504440169924
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1419 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1426 
=== Usages ===
i2037 v1066 
=== Predecessor ===
v1422 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1426  <|@  <|@
f <@~|@floating>@ <|@
tid i574 <|@
result v66|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 60]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: i32
=== Inputs ===
x: i2033 
y: i28 
=== Succesors ===
=== Usages ===
v1068 v2081 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2033 y: i28  <|@  <|@
f <@~|@floating>@ <|@
tid v1068 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i574 
y: i2032 
=== Succesors ===
=== Usages ===
v1426 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i574 y: i2032  <|@  <|@
f <@*|@fixed>@ <|@
tid v1426 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1068 
=== Succesors ===
trueSuccessor: v1423 
falseSuccessor: v1425 
=== Usages ===
=== Predecessor ===
v1419 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1068 #trueSuccessor: v1423 #falseSuccessor: v1425  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = INC v65|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v64|DWORD, y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B89 -> B90 falseDestination: B89 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B91" "B98" 
    xhandlers
    flags 
    probability 4607045504440169924
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1423 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2034 
=== Usages ===
i2036 v1075 
=== Predecessor ===
v1426 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2034  <|@  <|@
f <@~|@floating>@ <|@
tid v2082 <|@
result [v57|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2025 
=== Succesors ===
=== Usages ===
a2034 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2025  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2034 <|@
result v67|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 64]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2082 
=== Succesors ===
next: v2035 
=== Usages ===
a1078 v2101 
=== Predecessor ===
v1423 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2082 #next: v2035  <|@  <|@
f <@~|@floating>@ <|@
tid v2101 <|@
result [v67|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2034 
=== Succesors ===
=== Usages ===
v2035 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2034  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2035 <|@
result v68|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?615 
guard: - 
address: v2101 
=== Succesors ===
next: i2036 
=== Usages ===
v1970 
=== Predecessor ===
a2034 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?615 guard: - address: v2101 #next: i2036  <|@  <|@
f <@~|@floating>@ <|@
tid a1033 <|@
result v69|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 17]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a2031 
=== Succesors ===
=== Usages ===
v2080 a546 v2081 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2031  <|@  <|@
f <@~|@floating>@ <|@
tid v2081 <|@
result [v69|QWORD[.] + v66|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1033 
index: i574 
=== Succesors ===
=== Usages ===
v1075 i2036 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1033 index: i574  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2036 <|@
result v70|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4715) [bci: 37]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1423 
address: v2081 
=== Succesors ===
next: i2037 
=== Usages ===
i550 i552 
=== Predecessor ===
v2035 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1423 address: v2081 #next: i2037  <|@  <|@
f <@~|@floating>@ <|@
tid v2080 <|@
result [v69|QWORD[.] + v65|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1033 
index: i2033 
=== Succesors ===
=== Usages ===
v1066 i2037 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1033 index: i2033  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2037 <|@
result v71|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 24]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1419 
address: v2080 
=== Succesors ===
next: v1066 
=== Usages ===
i547 i549 
=== Predecessor ===
i2036 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1419 address: v2080 #next: v1066  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1066 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1419 
address: v2080 
value: i2030 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1075 
=== Usages ===
=== Predecessor ===
i2037 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1419 address: v2080 value: i2030 stateAfter: - lastLocationAccess: - #next: v1075  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1075 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1423 
address: v2081 
value: i22 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v584 
=== Usages ===
=== Predecessor ===
v1066 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1423 address: v2081 value: i22 stateAfter: - lastLocationAccess: - #next: v584  <|@  <|@
f <@~|@floating>@ <|@
tid v1970 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2035 
y: v1967 
=== Succesors ===
=== Usages ===
v584 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2035 y: v1967  <|@  <|@
f <@~|@floating>@ <|@
tid a1011 <|@
result v72|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 25]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a2025 
=== Succesors ===
=== Usages ===
a541 a542 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2025  <|@  <|@
f <@*|@fixed>@ <|@
tid v584 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$LastNode; target_method=match target_method_class=Ljava/util/regex/Pattern$LastNode; position=at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
trueSuccessorProbability: 0.8257972313536578
=== Inputs ===
condition: v1970 
=== Succesors ===
trueSuccessor: v578 
falseSuccessor: v583 
=== Usages ===
=== Predecessor ===
v1075 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1970 #trueSuccessor: v578 #falseSuccessor: v583  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v67|DWORD[.] = MOV [v57|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: v56|DWORD 
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction v68|DWORD = MOV [v67|DWORD[.] * 8 + 8] size: DWORD state [bci:8, 18] <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = UNCOMPRESSPOINTER (input: v63|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = MOV [v69|QWORD[.] + v66|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOV [v69|QWORD[.] + v65|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v69|QWORD[.] + v65|DWORD * 4 + 16], y: v62|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v69|QWORD[.] + v66|DWORD * 4 + 16], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = UNCOMPRESSPOINTER (input: v57|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v68|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8257972313536578 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B92" 
    xhandlers
    flags 
    probability 4605500276252797646
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$LastNode; target_method=match target_method_class=Ljava/util/regex/Pattern$LastNode; position=at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v536 
=== Usages ===
=== Predecessor ===
v584 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v536  <|@  <|@
f <@*|@fixed>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v533 
=== Predecessor ===
v578 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v72|QWORD[.], v62|DWORD, v69|QWORD[.], v71|DWORD, v70|DWORD] destination: B91 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B75" "B91" 
    successors "B93" "B94" 
    xhandlers
    flags 
    probability 4605613339752092257
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a542 <|@
result v73|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# Ljava/util/regex/Pattern$GroupTail;
valueDescription: a -
=== Inputs ===
merge: v533 
values: a915 a1011 
=== Succesors ===
=== Usages ===
?535 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v533 values: a915 a1011  <|@  <|@
f <@~|@floating>@ <|@
tid i789 <|@
result v74|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v533 
values: i2011 i2030 
=== Succesors ===
=== Usages ===
?535 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v533 values: i2011 i2030  <|@  <|@
f <@~|@floating>@ <|@
tid a546 <|@
result v75|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# [I
valueDescription: a -
=== Inputs ===
merge: v533 
values: a942 a1033 
=== Succesors ===
=== Usages ===
v2088 v2087 v2086 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v533 values: a942 a1033  <|@  <|@
f <@~|@floating>@ <|@
tid i549 <|@
result v76|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v533 
values: i2023 i2037 
=== Succesors ===
=== Usages ===
?535 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v533 values: i2023 i2037  <|@  <|@
f <@~|@floating>@ <|@
tid i552 <|@
result v77|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v533 
values: i2022 i2036 
=== Succesors ===
=== Usages ===
?535 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v533 values: i2022 i2036  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v534 v536 
=== Succesors ===
next: i2038 
=== Usages ===
a542 i789 a546 i549 i552 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v534 v536 #next: i2038  <|@  <|@
f <@~|@floating>@ <|@
tid v2083 <|@
result [v1|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i2038 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2038 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.acceptMode
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 1]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2083 
=== Succesors ===
next: v1434 
=== Usages ===
v147 
=== Predecessor ===
v533 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2083 #next: v1434  <|@  <|@
f <@~|@floating>@ <|@
tid v147 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2038 
y: i28 
=== Succesors ===
=== Usages ===
v1434 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2038 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v1434 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v147 
=== Succesors ===
trueSuccessor: v1433 
falseSuccessor: v1431 
=== Usages ===
=== Predecessor ===
i2038 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v147 #trueSuccessor: v1433 #falseSuccessor: v1431  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v73|QWORD[.], v74|DWORD, v75|QWORD[.], v76|DWORD, v77|DWORD] = LABEL numbPhis: 5 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v1|QWORD[.] + 24] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1433 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1834 
=== Usages ===
=== Predecessor ===
v1434 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1834  <|@  <|@
f <@~|@floating>@ <|@
tid i1835 <|@
result int[-277267|0xfffffffffffbc4ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -277267
stableDimension: 0
stamp: i32 [-277267] â‡Š00000000fffbc4ed â‡ˆ00000000fffbc4ed
stampKind: i32
value: int[-277267|0xfffffffffffbc4ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1836 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1834 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1833 
=== Predecessor ===
v1433 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-277267|0xfffffffffffbc4ed]] destination: B93 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" "B97" 
    xhandlers
    flags 
    probability 4605613339752092257
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1431 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2039 
=== Usages ===
=== Predecessor ===
v1434 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2039  <|@  <|@
f <@~|@floating>@ <|@
tid v2086 <|@
result [v75|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a546 
index: - 
=== Succesors ===
=== Usages ===
i2039 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a546 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2039 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 32]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v2086 
=== Succesors ===
next: v1442 
=== Usages ===
v1214 
=== Predecessor ===
v1431 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2086 #next: v1442  <|@  <|@
f <@~|@floating>@ <|@
tid i933 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] â‡Š0000000000000002 â‡ˆ0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1214 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1214 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3437) [bci: 42]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2039 
y: i933 
=== Succesors ===
=== Usages ===
v1442 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2039 y: i933  <|@  <|@
f <@*|@fixed>@ <|@
tid v1442 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 32]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1214 
=== Succesors ===
trueSuccessor: v1441 
falseSuccessor: v1439 
=== Usages ===
=== Predecessor ===
i2039 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1214 #trueSuccessor: v1441 #falseSuccessor: v1439  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v75|QWORD[.] + 12] y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B94 -> B95 falseDestination: B94 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1441 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 32]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1841 
=== Usages ===
=== Predecessor ===
v1442 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1841  <|@  <|@
f <@~|@floating>@ <|@
tid i1842 <|@
result int[-293147|0xfffffffffffb86e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -293147
stableDimension: 0
stamp: i32 [-293147] â‡Š00000000fffb86e5 â‡ˆ00000000fffb86e5
stampKind: i32
value: int[-293147|0xfffffffffffb86e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1836 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1841 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1833 
=== Predecessor ===
v1441 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-293147|0xfffffffffffb86e5]] destination: B95 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B93" "B95" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1836 <|@
result v78|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-293147 - -277267] â‡Š00000000fffb84e5 â‡ˆ00000000fffbc6ed
valueDescription: i32
=== Inputs ===
merge: v1833 
values: i1835 i1842 
=== Succesors ===
=== Usages ===
v1838 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1833 values: i1835 i1842  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1833 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1834 v1841 
=== Succesors ===
next: v1838 
=== Usages ===
i1836 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1834 v1841 #next: v1838  <|@  <|@
tid ?535 <|@
d <@d|@=== Debug Properties ===
bci: 63
code: ResolvedJavaMethodBytecode<Pattern$GroupTail.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4719
stackSize: 0
=== Inputs ===
outerFrameState: ?110 
values: a542 a2 i22 a4 i789 i549 i552 
=== Succesors ===
=== Usages ===
v1838 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?110 values: a542 a2 i22 a4 i789 i549 i552  <|@  <|@
f <@*|@fixed>@ <|@
tid v1838 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?535 
actionAndReason: i1836 
speculation: a1777 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1833 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?535 actionAndReason: i1836 speculation: a1777  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v78|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63]
locals: v73|QWORD[.] v1|QWORD[.] v11|DWORD v3|QWORD[.] v74|DWORD v76|DWORD v77|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:63, 37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors 
    xhandlers
    flags 
    probability 4605613339752092257
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1439 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 32]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1086 
=== Usages ===
v1102 v1111 
=== Predecessor ===
v1442 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1086  <|@  <|@
f <@~|@floating>@ <|@
tid v2084 <|@
result [v1|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v1086 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1086 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Matcher.last
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3435) [bci: 20]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2084 
value: i22 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i2040 
=== Usages ===
=== Predecessor ===
v1439 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2084 value: i22 stateAfter: - lastLocationAccess: - #next: i2040  <|@  <|@
f <@~|@floating>@ <|@
tid v2085 <|@
result [v1|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i2040 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2040 <|@
result v79|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.first
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 29]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2085 
=== Succesors ===
next: v1102 
=== Usages ===
v1102 
=== Predecessor ===
v1086 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2085 #next: v1102  <|@  <|@
f <@~|@floating>@ <|@
tid v2087 <|@
result [v75|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a546 
index: - 
=== Succesors ===
=== Usages ===
v1102 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a546 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1102 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 32]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1439 
address: v2087 
value: i2040 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1111 
=== Usages ===
=== Predecessor ===
i2040 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1439 address: v2087 value: i2040 stateAfter: - lastLocationAccess: - #next: v1111  <|@  <|@
f <@~|@floating>@ <|@
tid v2088 <|@
result [v75|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a546 
index: - 
=== Succesors ===
=== Usages ===
v1111 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a546 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1111 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3437) [bci: 42]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1439 
address: v2088 
value: i22 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v588 
=== Usages ===
=== Predecessor ===
v1102 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1439 address: v2088 value: i22 stateAfter: - lastLocationAccess: - #next: v588  <|@  <|@
f <@*|@fixed>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 48]
stamp: void
=== Inputs ===
result: i28 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1111 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i28 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 32], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = MOV [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v75|QWORD[.] + 16], y: v79|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v75|QWORD[.] + 20], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B99" 
    xhandlers
    flags 
    probability 4595348933040024535
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v583 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v540 
=== Usages ===
=== Predecessor ===
v584 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v540  <|@  <|@
f <@~|@floating>@ <|@
tid a1078 <|@
result v80|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 64]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a2034 
=== Succesors ===
=== Usages ===
a553 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2034  <|@  <|@
f <@*|@fixed>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v537 
=== Predecessor ===
v583 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = UNCOMPRESSPOINTER (input: v67|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v72|QWORD[.], v62|DWORD, v71|DWORD, v70|DWORD, v80|QWORD[.]] destination: B98 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B76" "B98" 
    successors "B100" "B103" 
    xhandlers
    flags 
    probability 4595444336482236028
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a541 <|@
result v81|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# Ljava/util/regex/Pattern$GroupTail;
valueDescription: a -
=== Inputs ===
merge: v537 
values: a915 a1011 
=== Succesors ===
=== Usages ===
?166 ?539 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v537 values: a915 a1011  <|@  <|@
f <@~|@floating>@ <|@
tid i792 <|@
result v82|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v537 
values: i2011 i2030 
=== Succesors ===
=== Usages ===
?539 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v537 values: i2011 i2030  <|@  <|@
f <@~|@floating>@ <|@
tid i547 <|@
result v83|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v537 
values: i2023 i2037 
=== Succesors ===
=== Usages ===
?166 ?539 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v537 values: i2023 i2037  <|@  <|@
f <@~|@floating>@ <|@
tid i550 <|@
result v84|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v537 
values: i2022 i2036 
=== Succesors ===
=== Usages ===
?166 ?539 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v537 values: i2022 i2036  <|@  <|@
f <@~|@floating>@ <|@
tid a553 <|@
result v85|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! Ljava/util/regex/Pattern$Node;
valueDescription: a -
=== Inputs ===
merge: v537 
values: a987 a1078 
=== Succesors ===
=== Usages ===
v2102 v2089 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v537 values: a987 a1078  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v538 v540 
=== Succesors ===
next: v2041 
=== Usages ===
a541 i792 i547 i550 a553 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v538 v540 #next: v2041  <|@  <|@
f <@~|@floating>@ <|@
tid v2102 <|@
result [v85|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a553 
index: - 
=== Succesors ===
=== Usages ===
v2041 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a553 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2041 <|@
result v86|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2102 
=== Succesors ===
next: v1446 
=== Usages ===
v1972 
=== Predecessor ===
v537 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2102 #next: v1446  <|@  <|@
f <@~|@floating>@ <|@
tid v1971 <|@
result meta{HotSpotType<Ljava/util/regex/Pattern$BranchConn;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$BranchConn;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$BranchConn;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1972 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1972 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2041 
y: v1971 
=== Succesors ===
=== Usages ===
v1446 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2041 y: v1971  <|@  <|@
tid ?539 <|@
d <@d|@=== Debug Properties ===
bci: 63
code: ResolvedJavaMethodBytecode<Pattern$GroupTail.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4719
stackSize: 0
=== Inputs ===
outerFrameState: ?110 
values: a541 a2 i22 a4 i792 i547 i550 
=== Succesors ===
=== Usages ===
v1848 v2107 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?110 values: a541 a2 i22 a4 i792 i547 i550  <|@  <|@
f <@*|@fixed>@ <|@
tid v1446 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BranchConn; target_method=match target_method_class=Ljava/util/regex/Pattern$BranchConn; position=at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1972 
=== Succesors ===
trueSuccessor: v1443 
falseSuccessor: v1445 
=== Usages ===
=== Predecessor ===
v2041 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1972 #trueSuccessor: v1443 #falseSuccessor: v1445  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v81|QWORD[.], v82|DWORD, v83|DWORD, v84|DWORD, v85|QWORD[.]] = LABEL numbPhis: 5 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = MOV [v85|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v86|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BranchConn;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B101" "B102" 
    xhandlers
    flags 
    probability 4595444336482236028
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1443 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BranchConn; target_method=match target_method_class=Ljava/util/regex/Pattern$BranchConn; position=at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2042 
=== Usages ===
=== Predecessor ===
v1446 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2042  <|@  <|@
f <@~|@floating>@ <|@
tid v2089 <|@
result [v85|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a553 
index: - 
=== Succesors ===
=== Usages ===
a2042 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a553 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2042 <|@
result v87|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 1]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2089 
=== Succesors ===
next: v2107 
=== Usages ===
a1115 v2107 
=== Predecessor ===
v1443 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2089 #next: v2107  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2107 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?539 
object: a2042 
=== Succesors ===
next: i163 
=== Usages ===
=== Predecessor ===
a2042 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?539 object: a2042 #next: i163  <|@  <|@
f <@~|@floating>@ <|@
tid a1115 <|@
result v88|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 1]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a2042 
=== Succesors ===
=== Usages ===
v1119 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2042  <|@  <|@
tid v1119 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
returnStamp: i32 [0 - 1] â‡ˆ0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@630f0931
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
arguments: a1115 a2 i22 a4 
=== Succesors ===
=== Usages ===
i163 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1115 a2 i22 a4  <|@  <|@
tid ?166 <|@
d <@d|@=== Debug Properties ===
bci: 70
code: ResolvedJavaMethodBytecode<Pattern$GroupTail.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 7
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4719
stackSize: 0
=== Inputs ===
outerFrameState: ?110 
values: a541 a2 - - - i547 i550 
=== Succesors ===
=== Usages ===
?164 ?1773 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?110 values: a541 a2 - - - i547 i550  <|@  <|@
tid ?1773 <|@
d <@d|@=== Debug Properties ===
bci: 7
code: ResolvedJavaMethodBytecode<Pattern$BranchConn.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4570
stackSize: 0
=== Inputs ===
outerFrameState: ?166 
values: - - - - 
=== Succesors ===
=== Usages ===
i163 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?166 values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i163 <|@
result v89|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 7
nodeSourcePosition: at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
polymorphic: false
stamp: i32 [0 - 1] â‡ˆ0000000000000001
targetMethod: Direct#Pattern$Node.match
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1119 
stateDuring: ?1773 
=== Succesors ===
next: v1454 
=== Usages ===
v107 
=== Predecessor ===
v2107 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1119 stateDuring: ?1773 #next: v1454  <|@  <|@
f <@~|@floating>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i163 
y: i15 
=== Succesors ===
=== Usages ===
v1454 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i163 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v1454 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v107 
=== Succesors ===
trueSuccessor: v1453 
falseSuccessor: v1451 
=== Usages ===
=== Predecessor ===
i163 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v107 #trueSuccessor: v1453 #falseSuccessor: v1451  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v87|DWORD[.] = MOV [v85|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63]
locals: v81|QWORD[.] v1|QWORD[.] v11|DWORD v3|QWORD[.] v82|DWORD v83|DWORD v84|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v87|DWORD[.] * 8] state [bci:63, 37] <|@ <|@
      nr   -1  <|@ instruction v88|QWORD[.] = UNCOMPRESSPOINTER (input: v87|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v88|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
locals: v81|QWORD[.] v1|QWORD[.] - - - v83|DWORD v84|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:7, 70, 37] <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v89|DWORD, y: v89|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1453 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1452 
=== Usages ===
=== Predecessor ===
v1454 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1452  <|@  <|@
tid ?164 <|@
d <@d|@=== Debug Properties ===
bci: 10
code: ResolvedJavaMethodBytecode<Pattern$BranchConn.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4570
stackSize: 1
=== Inputs ===
outerFrameState: ?166 
values: - - - - i15 
=== Succesors ===
=== Usages ===
v1452 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?166 values: - - - - i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v1452 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1120
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?164 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1453 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?164  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -286739 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 10]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
locals: v81|QWORD[.] v1|QWORD[.] - - - v83|DWORD v84|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:10, 70, 37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors 
    xhandlers
    flags 
    probability 4595444336482236028
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1451 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v29 
=== Usages ===
=== Predecessor ===
v1454 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v29  <|@  <|@
f <@*|@fixed>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 48]
stamp: void
=== Inputs ===
result: i28 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1451 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i28 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1445 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BranchConn; target_method=match target_method_class=Ljava/util/regex/Pattern$BranchConn; position=at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1848 
=== Usages ===
=== Predecessor ===
v1446 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1848  <|@  <|@
f <@~|@floating>@ <|@
tid i1850 <|@
result int[-284723|0xfffffffffffba7cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -284723
stableDimension: 0
stamp: i32 [-284723] â‡Š00000000fffba7cd â‡ˆ00000000fffba7cd
stampKind: i32
value: int[-284723|0xfffffffffffba7cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1848 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1848 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?539 
actionAndReason: i1850 
speculation: a1777 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1445 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?539 actionAndReason: i1850 speculation: a1777  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -284723 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63]
locals: v81|QWORD[.] v1|QWORD[.] v11|DWORD v3|QWORD[.] v82|DWORD v83|DWORD v84|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:63, 37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1425 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1871 
=== Usages ===
=== Predecessor ===
v1426 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1871  <|@  <|@
f <@~|@floating>@ <|@
tid i1872 <|@
result int[-273691|0xfffffffffffbd2e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -273691
stableDimension: 0
stamp: i32 [-273691] â‡Š00000000fffbd2e5 â‡ˆ00000000fffbd2e5
stampKind: i32
value: int[-273691|0xfffffffffffbd2e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1854 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1871 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1851 
=== Predecessor ===
v1425 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-273691|0xfffffffffffbd2e5]] destination: B104 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1421 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1869 
=== Usages ===
=== Predecessor ===
v1422 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1869  <|@  <|@
f <@~|@floating>@ <|@
tid i1870 <|@
result int[-271387|0xfffffffffffbdbe5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -271387
stableDimension: 0
stamp: i32 [-271387] â‡Š00000000fffbdbe5 â‡ˆ00000000fffbdbe5
stampKind: i32
value: int[-271387|0xfffffffffffbdbe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1854 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1869 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1851 
=== Predecessor ===
v1421 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-271387|0xfffffffffffbdbe5]] destination: B105 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1409 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1863 
=== Usages ===
=== Predecessor ===
v1410 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1863  <|@  <|@
f <@~|@floating>@ <|@
tid i1864 <|@
result int[-262171|0xfffffffffffbffe5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -262171
stableDimension: 0
stamp: i32 [-262171] â‡Š00000000fffbffe5 â‡ˆ00000000fffbffe5
stampKind: i32
value: int[-262171|0xfffffffffffbffe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1854 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1863 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1851 
=== Predecessor ===
v1409 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-262171|0xfffffffffffbffe5]] destination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1401 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1859 
=== Usages ===
=== Predecessor ===
v1402 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1859  <|@  <|@
f <@~|@floating>@ <|@
tid i1860 <|@
result int[-259379|0xfffffffffffc0acd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -259379
stableDimension: 0
stamp: i32 [-259379] â‡Š00000000fffc0acd â‡ˆ00000000fffc0acd
stampKind: i32
value: int[-259379|0xfffffffffffc0acd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1854 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1859 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1851 
=== Predecessor ===
v1401 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-259379|0xfffffffffffc0acd]] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" "B87" "B106" "B105" "B104" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1854 <|@
result v90|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-276235 - -259083] â‡Š00000000fff800c5 â‡ˆ00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v1851 
values: i1860 i1862 i1864 i1870 i1872 
=== Succesors ===
=== Usages ===
v1856 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1851 values: i1860 i1862 i1864 i1870 i1872  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1851 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1859 v1861 v1863 v1869 v1871 
=== Succesors ===
next: v1856 
=== Usages ===
i1854 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1859 v1861 v1863 v1869 v1871 #next: v1856  <|@  <|@
f <@*|@fixed>@ <|@
tid v1856 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?615 
actionAndReason: i1854 
speculation: a1777 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1851 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?615 actionAndReason: i1854 speculation: a1777  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v90|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v90|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: v56|DWORD 
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction DEOPT info [bci:8, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1293 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1817 
=== Usages ===
=== Predecessor ===
v1294 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1817  <|@  <|@
f <@~|@floating>@ <|@
tid i1818 <|@
result int[-220467|0xfffffffffffca2cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -220467
stableDimension: 0
stamp: i32 [-220467] â‡Š00000000fffca2cd â‡ˆ00000000fffca2cd
stampKind: i32
value: int[-220467|0xfffffffffffca2cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1778 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1817 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1774 
=== Predecessor ===
v1293 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-220467|0xfffffffffffca2cd]] destination: B109 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1281 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1811 
=== Usages ===
=== Predecessor ===
v1282 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1811  <|@  <|@
f <@~|@floating>@ <|@
tid i1812 <|@
result int[-217907|0xfffffffffffcaccd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -217907
stableDimension: 0
stamp: i32 [-217907] â‡Š00000000fffcaccd â‡ˆ00000000fffcaccd
stampKind: i32
value: int[-217907|0xfffffffffffcaccd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1778 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1811 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1774 
=== Predecessor ===
v1281 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-217907|0xfffffffffffcaccd]] destination: B110 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1269 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1805 
=== Usages ===
=== Predecessor ===
v1270 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1805  <|@  <|@
f <@~|@floating>@ <|@
tid i1806 <|@
result int[-215347|0xfffffffffffcb6cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -215347
stableDimension: 0
stamp: i32 [-215347] â‡Š00000000fffcb6cd â‡ˆ00000000fffcb6cd
stampKind: i32
value: int[-215347|0xfffffffffffcb6cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1778 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1805 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1774 
=== Predecessor ===
v1269 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-215347|0xfffffffffffcb6cd]] destination: B111 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1257 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1799 
=== Usages ===
=== Predecessor ===
v1258 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1799  <|@  <|@
f <@~|@floating>@ <|@
tid i1800 <|@
result int[-212531|0xfffffffffffcc1cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -212531
stableDimension: 0
stamp: i32 [-212531] â‡Š00000000fffcc1cd â‡ˆ00000000fffcc1cd
stampKind: i32
value: int[-212531|0xfffffffffffcc1cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1778 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1799 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1774 
=== Predecessor ===
v1257 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-212531|0xfffffffffffcc1cd]] destination: B112 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1253 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isHighSurrogate(Character.java:4729) [bci: 3]
at java.lang.Character.codePointAt(Character.java:4867) [bci: 9]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1797 
=== Usages ===
=== Predecessor ===
v1254 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1797  <|@  <|@
f <@~|@floating>@ <|@
tid i1798 <|@
result int[-212243|0xfffffffffffcc2ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -212243
stableDimension: 0
stamp: i32 [-212243] â‡Š00000000fffcc2ed â‡ˆ00000000fffcc2ed
stampKind: i32
value: int[-212243|0xfffffffffffcc2ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1778 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1797 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1774 
=== Predecessor ===
v1253 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-212243|0xfffffffffffcc2ed]] destination: B113 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1795 
=== Usages ===
=== Predecessor ===
v1250 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1795  <|@  <|@
f <@~|@floating>@ <|@
tid i1796 <|@
result int[-210203|0xfffffffffffccae5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -210203
stableDimension: 0
stamp: i32 [-210203] â‡Š00000000fffccae5 â‡ˆ00000000fffccae5
stampKind: i32
value: int[-210203|0xfffffffffffccae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1778 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1795 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1774 
=== Predecessor ===
v1249 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-210203|0xfffffffffffccae5]] destination: B114 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1245 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1793 
=== Usages ===
=== Predecessor ===
v1246 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1793  <|@  <|@
f <@~|@floating>@ <|@
tid i1794 <|@
result int[-209427|0xfffffffffffccded] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -209427
stableDimension: 0
stamp: i32 [-209427] â‡Š00000000fffccded â‡ˆ00000000fffccded
stampKind: i32
value: int[-209427|0xfffffffffffccded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1778 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1793 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1774 
=== Predecessor ===
v1245 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-209427|0xfffffffffffccded]] destination: B115 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1233 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1787 
=== Usages ===
=== Predecessor ===
v1234 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1787  <|@  <|@
f <@~|@floating>@ <|@
tid i1788 <|@
result int[-206643|0xfffffffffffcd8cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -206643
stableDimension: 0
stamp: i32 [-206643] â‡Š00000000fffcd8cd â‡ˆ00000000fffcd8cd
stampKind: i32
value: int[-206643|0xfffffffffffcd8cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1778 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1787 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1774 
=== Predecessor ===
v1233 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-206643|0xfffffffffffcd8cd]] destination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1783 
=== Usages ===
=== Predecessor ===
v1226 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1783  <|@  <|@
f <@~|@floating>@ <|@
tid i1784 <|@
result int[-206099|0xfffffffffffcdaed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -206099
stableDimension: 0
stamp: i32 [-206099] â‡Š00000000fffcdaed â‡ˆ00000000fffcdaed
stampKind: i32
value: int[-206099|0xfffffffffffcdaed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1778 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1783 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1774 
=== Predecessor ===
v1225 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-206099|0xfffffffffffcdaed]] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" "B3" "B116" "B115" "B114" "B113" "B112" "B12" "B111" "B19" "B110" "B26" "B109" "B33" 
    successors 
    xhandlers
    flags 
    probability 2372271103717408768
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1778 <|@
result v91|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-222739 - -204811] â‡Š00000000fffc80c5 â‡ˆ00000000fffcfffd
valueDescription: i32
=== Inputs ===
merge: v1774 
values: i1784 i1786 i1788 i1794 i1796 i1798 i1800 i1804 i1806 i1810 i1812 i1816 i1818 i1820 
=== Succesors ===
=== Usages ===
v1780 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1774 values: i1784 i1786 i1788 i1794 i1796 i1798 i1800 i1804 i1806 i1810 i1812 i1816 i1818 i1820  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1774 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1783 v1785 v1787 v1793 v1795 v1797 v1799 v1803 v1805 v1809 v1811 v1815 v1817 v1819 
=== Succesors ===
next: v1780 
=== Usages ===
i1778 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1783 v1785 v1787 v1793 v1795 v1797 v1799 v1803 v1805 v1809 v1811 v1815 v1817 v1819 #next: v1780  <|@  <|@
f <@*|@fixed>@ <|@
tid v1780 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?5 
actionAndReason: i1778 
speculation: a1777 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1774 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?5 actionAndReason: i1778 speculation: a1777  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v91|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v91|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B117" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@714f65ea slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction CMP (x: v2|DWORD, y: [v1|QWORD[.] + 16]) size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B116" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction CMP [v3|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B115" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v3|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction v5|DWORD = MOV [v4|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B114" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B113" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVSX [v6|QWORD[.] + v2|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v7|DWORD y: -10240 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B112" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v0|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction v9|DWORD = MOV [v8|DWORD[.] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVZX v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = INC v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4602678913751864623
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: [v8|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4602461002431100593
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: [v8|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B84" 
    xhandlers
    flags 
    probability 4602461002431100593
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B13 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B49" "B13" "B20" 
    successors "B85" "B107" 
    xhandlers
    flags 
    probability 4607045504440169924
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v57|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: v56|DWORD 
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction CMP [v57|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:8, 18] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B86" "B106" 
    xhandlers
    flags 
    probability 4607045504440169924
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|DWORD[.] = MOV [v1|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: v56|DWORD 
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction v59|DWORD = MOV [v58|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18] <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = MOV [v57|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v59|DWORD, y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B85 -> B86 falseDestination: B85 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B87" "B88" 
    xhandlers
    flags 
    probability 4607045504440169924
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = MOV [v61|QWORD[.] + v60|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v62|DWORD, y: v62|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B86 -> B87 falseDestination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B89" "B105" 
    xhandlers
    flags 
    probability 4607045504440169924
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|DWORD[.] = MOV [v1|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: v56|DWORD 
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction v64|DWORD = MOV [v63|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18] <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOV [v57|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v64|DWORD, y: v65|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B88 -> B89 falseDestination: B88 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B90" "B104" 
    xhandlers
    flags 
    probability 4607045504440169924
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = INC v65|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v64|DWORD, y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B89 -> B90 falseDestination: B89 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B91" "B98" 
    xhandlers
    flags 
    probability 4607045504440169924
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v67|DWORD[.] = MOV [v57|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: v56|DWORD 
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction v68|DWORD = MOV [v67|DWORD[.] * 8 + 8] size: DWORD state [bci:8, 18] <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = UNCOMPRESSPOINTER (input: v63|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = MOV [v69|QWORD[.] + v66|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOV [v69|QWORD[.] + v65|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v69|QWORD[.] + v65|DWORD * 4 + 16], y: v62|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v69|QWORD[.] + v66|DWORD * 4 + 16], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = UNCOMPRESSPOINTER (input: v57|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v68|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8257972313536578 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B92" 
    xhandlers
    flags 
    probability 4605500276252797646
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v72|QWORD[.], v62|DWORD, v69|QWORD[.], v71|DWORD, v70|DWORD] destination: B91 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B75" "B91" 
    successors "B93" "B94" 
    xhandlers
    flags 
    probability 4605613339752092257
    begin_IR
      LIR
      nr   -1  <|@ instruction [v73|QWORD[.], v74|DWORD, v75|QWORD[.], v76|DWORD, v77|DWORD] = LABEL numbPhis: 5 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v1|QWORD[.] + 24] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" "B97" 
    xhandlers
    flags 
    probability 4605613339752092257
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v75|QWORD[.] + 12] y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B94 -> B95 falseDestination: B94 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors 
    xhandlers
    flags 
    probability 4605613339752092257
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 32], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = MOV [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v75|QWORD[.] + 16], y: v79|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v75|QWORD[.] + 20], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" "B111" 
    xhandlers
    flags 
    probability 4602678630014211490
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B21" 
    xhandlers
    flags 
    probability 4602678630014211490
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[.] = MOV [v8|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction v13|DWORD = MOV [v12|DWORD[.] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP v13|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4598175219541303937
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: [v12|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4597957218219621597
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: [v12|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B84" 
    xhandlers
    flags 
    probability 4597957218219621597
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B20 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" "B110" 
    xhandlers
    flags 
    probability 4598174841232378051
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v13|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B28" 
    xhandlers
    flags 
    probability 4598174841232378051
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[.] = MOV [v12|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction v15|DWORD = MOV [v14|DWORD[.] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP v15|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4593671430755498102
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: [v14|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4593453434012019015
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: [v14|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B52" 
    xhandlers
    flags 
    probability 4593453434012019015
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B27 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" "B44" "B50" "B51" "B34" "B27" 
    successors "B53" "B83" 
    xhandlers
    flags 
    probability 4598229702893204513
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v33|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B84" 
    xhandlers
    flags 
    probability 4598172540601706155
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|DWORD] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B99" 
    xhandlers
    flags 
    probability 4595348933040024535
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = UNCOMPRESSPOINTER (input: v67|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v72|QWORD[.], v62|DWORD, v71|DWORD, v70|DWORD, v80|QWORD[.]] destination: B98 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B76" "B98" 
    successors "B100" "B103" 
    xhandlers
    flags 
    probability 4595444336482236028
    begin_IR
      LIR
      nr   -1  <|@ instruction [v81|QWORD[.], v82|DWORD, v83|DWORD, v84|DWORD, v85|QWORD[.]] = LABEL numbPhis: 5 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = MOV [v85|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v86|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BranchConn;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B101" "B102" 
    xhandlers
    flags 
    probability 4595444336482236028
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v87|DWORD[.] = MOV [v85|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63]
locals: v81|QWORD[.] v1|QWORD[.] v11|DWORD v3|QWORD[.] v82|DWORD v83|DWORD v84|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v87|DWORD[.] * 8] state [bci:63, 37] <|@ <|@
      nr   -1  <|@ instruction v88|QWORD[.] = UNCOMPRESSPOINTER (input: v87|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v88|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
locals: v81|QWORD[.] v1|QWORD[.] - - - v83|DWORD v84|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:7, 70, 37] <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v89|DWORD, y: v89|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors 
    xhandlers
    flags 
    probability 4595444336482236028
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B29" "B109" 
    xhandlers
    flags 
    probability 4593671052454517008
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v15|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B35" 
    xhandlers
    flags 
    probability 4593671052454517008
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[.] = MOV [v14|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction v17|DWORD = MOV [v16|DWORD[.] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP v17|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4589167641973664746
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: [v16|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4588949649808292766
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: [v16|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B52" 
    xhandlers
    flags 
    probability 4588949649808292766
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B34 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" "B51" 
    xhandlers
    flags 
    probability 4589167263680628278
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v14|DWORD[.] v10|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v12|DWORD[.] v10|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v8|DWORD[.] v10|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:5, 5, 5, 5, 18] <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v19|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B52" 
    xhandlers
    flags 
    probability 4589056961821986236
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B54" 
    xhandlers
    flags 
    probability 4578129810580469169
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B10" 
    successors "B55" "B81" 
    xhandlers
    flags 
    probability 4579916140811292442
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v34|DWORD[.] * 8] state [bci:8, 18] <|@ <|@
      nr   -1  <|@ instruction v35|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction CMP [v35|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:8, 18] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B80" 
    xhandlers
    flags 
    probability 4579916140811292442
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v36|DWORD[.] = MOV [v1|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction v37|DWORD = MOV [v36|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18] <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOV [v35|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v37|DWORD, y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" "B58" 
    xhandlers
    flags 
    probability 4579916140811292442
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = MOV [v39|QWORD[.] + v38|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v40|DWORD, y: v40|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" "B79" 
    xhandlers
    flags 
    probability 4579916140811292442
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|DWORD[.] = MOV [v1|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction v42|DWORD = MOV [v41|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18] <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOV [v35|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v42|DWORD, y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B78" 
    xhandlers
    flags 
    probability 4579916140811292442
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = INC v43|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v42|DWORD, y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B68" 
    xhandlers
    flags 
    probability 4579916140811292442
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[.] = MOV [v35|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v45|DWORD[.] * 8] state [bci:8, 18] <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOV [v34|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v46|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B69" "B77" 
    xhandlers
    flags 
    probability 4575412541183921946
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v46|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4575412541183921946
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: [v34|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    probability 4575412541183921946
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: [v34|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B71 -> B72 falseDestination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" 
    xhandlers
    flags 
    probability 4575412541183921946
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B65" "B73" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4579916140811292442
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = UNCOMPRESSPOINTER (input: v41|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = MOV [v50|QWORD[.] + v44|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOV [v50|QWORD[.] + v43|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v50|QWORD[.] + v43|DWORD * 4 + 16], y: v40|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v50|QWORD[.] + v44|DWORD * 4 + 16], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = UNCOMPRESSPOINTER (input: v35|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP [v45|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8257972313536578 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B92" 
    xhandlers
    flags 
    probability 4578389685735908546
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v53|QWORD[.], v40|DWORD, v50|QWORD[.], v52|DWORD, v51|DWORD] destination: B75 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B67" 
    xhandlers
    flags 
    probability 4575412541183921946
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD[.] = MOV [v34|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction CMP (x: v10|DWORD, y: [v47|DWORD[.] * 8 + 12]) size: DWORD state [bci:8, 18] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B61 -> B62 falseDestination: B61 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B66" 
    xhandlers
    flags 
    probability 4575412541183921946
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v7|DWORD y: 256 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B62 -> B63 falseDestination: B62 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4575412541183921946
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOVZX v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = MOVZXB [v48|QWORD + v47|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v49|DWORD, y: v49|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B74" 
    xhandlers
    flags 
    probability 4575412541183921946
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B65 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B41" 
    xhandlers
    flags 
    probability 4573626064447517839
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B17" 
    successors "B42" "B48" 
    xhandlers
    flags 
    probability 4573669175251835067
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|DWORD[.] = MOV [v8|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v8|DWORD[.] v10|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction CMP [v26|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} state [bci:8, 5, 18] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B52" 
    xhandlers
    flags 
    probability 4569165575624464571
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 18] <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|DWORD] destination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" 
    xhandlers
    flags 
    probability 4569291743449605540
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B46" 
    xhandlers
    flags 
    probability 4569165575624464571
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v7|DWORD y: 256 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B42 -> B43 falseDestination: B42 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4569165575624464571
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|DWORD[.] = MOV [v26|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v8|DWORD[.] v10|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction CMP (x: v10|DWORD, y: [v27|DWORD[.] * 8 + 12]) size: DWORD state [bci:8, 5, 18] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B43 -> B44 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B52" 
    xhandlers
    flags 
    probability 4569165575624464571
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOVZX v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVZXB [v28|QWORD + v27|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|DWORD] destination: B44 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B39" 
    xhandlers
    flags 
    probability 4569122318317643243
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B24" 
    successors "B40" "B49" 
    xhandlers
    flags 
    probability 4569186648162324981
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[.] = MOV [v12|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v12|DWORD[.] v10|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v8|DWORD[.] v10|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v23|DWORD[.] * 8] state [bci:8, 5, 5, 18] <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v8|DWORD[.] v10|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 5, 18] <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v25|DWORD, y: v25|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B84" 
    xhandlers
    flags 
    probability 4569100426553690526
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B49 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B99" 
    xhandlers
    flags 
    probability 4568252242827848031
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v53|QWORD[.], v40|DWORD, v52|DWORD, v51|DWORD, v54|QWORD[.]] destination: B76 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" 
    xhandlers
    flags 
    probability 4564618572190845318
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B31" 
    successors "B38" "B50" 
    xhandlers
    flags 
    probability 4567399126910536796
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v20|DWORD[.] = MOV [v14|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v14|DWORD[.] v10|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v12|DWORD[.] v10|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v8|DWORD[.] v10|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v20|DWORD[.] * 8] state [bci:8, 5, 5, 5, 18] <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v20|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v12|DWORD[.] v10|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v8|DWORD[.] v10|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 5, 5, 18] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v22|DWORD, y: v22|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B52" 
    xhandlers
    flags 
    probability 4567334797065855058
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560198542224662117
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4540643007714694606
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" 
    xhandlers
    flags 
    probability 4538855445253981485
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-273691|0xfffffffffffbd2e5]] destination: B104 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" "B87" "B106" "B105" "B104" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v90|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v90|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: v56|DWORD 
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction DEOPT info [bci:8, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-240147|0xfffffffffffc55ed]] destination: B57 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B57" "B80" "B79" "B78" "B70" "B77" "B72" "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 2370019303903723520
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v55|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction DEOPT info [bci:8, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-210203|0xfffffffffffccae5]] destination: B114 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" "B3" "B116" "B115" "B114" "B113" "B112" "B12" "B111" "B19" "B110" "B26" "B109" "B33" 
    successors 
    xhandlers
    flags 
    probability 2372271103717408768
    begin_IR
      LIR
      nr   -1  <|@ instruction [v91|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v91|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-227859|0xfffffffffffc85ed]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v8|DWORD[.] v10|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction DEOPT info [bci:8, 5, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-258323|0xfffffffffffc0eed]] destination: B72 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-258067|0xfffffffffffc0fed]] destination: B70 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-256819|0xfffffffffffc14cd]] destination: B77 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-277267|0xfffffffffffbc4ed]] destination: B93 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B93" "B95" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v78|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63]
locals: v73|QWORD[.] v1|QWORD[.] v11|DWORD v3|QWORD[.] v74|DWORD v76|DWORD v77|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:63, 37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-250395|0xfffffffffffc2de5]] destination: B78 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-238107|0xfffffffffffc5de5]] destination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-248091|0xfffffffffffc36e5]] destination: B79 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -233491 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction DEOPT info [bci:21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-271387|0xfffffffffffbdbe5]] destination: B105 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-222739|0xfffffffffffc99ed]] destination: B33 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-220467|0xfffffffffffca2cd]] destination: B109 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -284723 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63]
locals: v81|QWORD[.] v1|QWORD[.] v11|DWORD v3|QWORD[.] v82|DWORD v83|DWORD v84|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:63, 37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-220179|0xfffffffffffca3ed]] destination: B26 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-255771|0xfffffffffffc18e5]] destination: B67 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-259379|0xfffffffffffc0acd]] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-217907|0xfffffffffffcaccd]] destination: B110 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-262171|0xfffffffffffbffe5]] destination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-253203|0xfffffffffffc22ed]] destination: B66 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-215347|0xfffffffffffcb6cd]] destination: B111 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-206099|0xfffffffffffcdaed]] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-234803|0xfffffffffffc6acd]] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-209427|0xfffffffffffccded]] destination: B115 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-263955|0xfffffffffffbf8ed]] destination: B87 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-212243|0xfffffffffffcc2ed]] destination: B113 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-230427|0xfffffffffffc7be5]] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-212531|0xfffffffffffcc1cd]] destination: B112 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-217619|0xfffffffffffcaded]] destination: B19 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-206867|0xfffffffffffcd7ed]] destination: B3 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-206643|0xfffffffffffcd8cd]] destination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-215059|0xfffffffffffcb7ed]] destination: B12 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -286739 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 10]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
locals: v81|QWORD[.] v1|QWORD[.] - - - v83|DWORD v84|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:10, 70, 37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-293147|0xfffffffffffb86e5]] destination: B95 -> B96 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: aload_1       
     2: getfield      #3          // java.util.regex.Matcher.to:int
     5: if_icmpge     49
     8: aload_3       
     9: iload_2       
    10: invokestatic  #4          // java.lang.Character.codePointAt:(java.lang.CharSequence, int)int
    13: istore        4
    15: aload_0       
    16: iload         4
    18: invokevirtual #5          // isSatisfiedBy:(int)boolean
    21: ifeq          47
    24: aload_0       
    25: getfield      #6          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    28: aload_1       
    29: iload_2       
    30: iload         4
    32: invokestatic  #7          // java.lang.Character.charCount:(int)int
    35: iadd          
    36: aload_3       
    37: invokevirtual #8          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    40: ifeq          47
    43: iconst_1      
    44: goto          48
    47: iconst_0      
    48: ireturn       
    49: aload_1       
    50: iconst_1      
    51: putfield      #9          // java.util.regex.Matcher.hitEnd:boolean
    54: iconst_0      
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B117" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@714f65ea slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, stack:64]
live-base-pointers: []
java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - 
>@ <|@ instruction CMP (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B116" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, stack:64]
live-base-pointers: []
java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - 
>@ <|@ instruction CMP [r8|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   22  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B115" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction r10|DWORD[.] = MOV [r8|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r10:0, stack:64]
live-base-pointers: []
java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction CMP (x: r11|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B114" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction CMP (x: r11|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B113" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction r10|DWORD = MOVSX [r10|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   52  <|@ instruction CMP r10|DWORD y: -10240 size: WORD <|@ <|@
      nr   54  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B112" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction CMP [rsi|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr   60  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction r11|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   66  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r11:0, stack:64]
live-base-pointers: []
java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - 
>@ <|@ instruction r9|DWORD = MOV [r11|DWORD[.] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   68  <|@ instruction rbx|DWORD = MOVZX r10|DWORD size: DWORD <|@ <|@
      nr   70  <|@ instruction stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction rdi|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr   74  <|@ instruction CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   76  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4602678913751864623
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction CMP (x: rbx|DWORD, y: [r11|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   82  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4602461002431100593
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction CMP (x: rbx|DWORD, y: [r11|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   98  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B84" 
    xhandlers
    flags 
    probability 4602461002431100593
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  108  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  110  <|@ instruction stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction JUMP ~[] destination: B13 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B49" "B13" "B20" 
    successors "B85" "B107" 
    xhandlers
    flags 
    probability 4607045504440169924
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  766  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  768  <|@ st <@st|@reference-map: [rax:0, rsi:0, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: r10|DWORD 
locals: rsi|QWORD[.] stack:36|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: rsi|QWORD[.] stack:32|QWORD[.] stack:52|DWORD stack:48|QWORD[.] stack:36|DWORD 
>@ <|@ instruction CMP [rax|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:8, 18] <|@ <|@
      nr  770  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B86" "B106" 
    xhandlers
    flags 
    probability 4607045504440169924
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  774  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  776  <|@ instruction rcx|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  778  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, rsi:0, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: r10|DWORD 
locals: rsi|QWORD[.] stack:36|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: rsi|QWORD[.] rdx|QWORD[.] stack:52|DWORD stack:48|QWORD[.] stack:36|DWORD 
>@ <|@ instruction r8|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18] <|@ <|@
      nr  780  <|@ instruction r11|DWORD = MOV [rax|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  782  <|@ instruction CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  784  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B85 -> B86 falseDestination: B85 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B87" "B88" 
    xhandlers
    flags 
    probability 4607045504440169924
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  788  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3 <|@ <|@
      nr  790  <|@ instruction rcx|DWORD = MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  792  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  794  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B86 -> B87 falseDestination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B89" "B105" 
    xhandlers
    flags 
    probability 4607045504440169924
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  806  <|@ instruction r8|DWORD[.] = MOV [rdx|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  808  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, r8:0, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: r10|DWORD 
locals: rsi|QWORD[.] stack:36|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: rsi|QWORD[.] rdx|QWORD[.] stack:52|DWORD stack:48|QWORD[.] stack:36|DWORD 
>@ <|@ instruction r11|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18] <|@ <|@
      nr  810  <|@ instruction r9|DWORD = MOV [rax|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  812  <|@ instruction CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  814  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B88 -> B89 falseDestination: B88 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B90" "B104" 
    xhandlers
    flags 
    probability 4607045504440169924
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  818  <|@ instruction rbx|DWORD = INC r9|DWORD size: DWORD <|@ <|@
      nr  820  <|@ instruction CMP (x: r11|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  822  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B89 -> B90 falseDestination: B89 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B91" "B98" 
    xhandlers
    flags 
    probability 4607045504440169924
    begin_IR
      LIR
      nr  824  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  826  <|@ instruction rdi|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  828  <|@ instruction r11|DWORD[.] = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  830  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, r8:0, r11:0, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: r10|DWORD 
locals: rsi|QWORD[.] stack:36|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: rsi|QWORD[.] rdx|QWORD[.] stack:52|DWORD stack:48|QWORD[.] stack:36|DWORD 
>@ <|@ instruction rbp|DWORD = MOV [r11|DWORD[.] * 8 + 8] size: DWORD state [bci:8, 18] <|@ <|@
      nr  832  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3 <|@ <|@
      nr  834  <|@ instruction rsi|DWORD = MOV [r8|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  836  <|@ instruction r10|DWORD = MOV [r8|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  838  <|@ instruction MOV (x: [r8|QWORD[.] + r9|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  840  <|@ instruction MOV (x: [r8|QWORD[.] + rbx|DWORD * 4 + 16], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  842  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3 <|@ <|@
      nr  844  <|@ instruction CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed} <|@ <|@
      nr  846  <|@ instruction BRANCH trueDestinationProbability: 0.8257972313536578 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B92" 
    xhandlers
    flags 
    probability 4605500276252797646
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  850  <|@ instruction JUMP ~[] destination: B91 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B75" "B91" 
    successors "B93" "B94" 
    xhandlers
    flags 
    probability 4605613339752092257
    begin_IR
      LIR
      nr  852  <|@ instruction [] = LABEL numbPhis: 5 align: false label: ? <|@ <|@
      nr  854  <|@ instruction CMP [rdx|QWORD[.] + 24] y: 1 size: DWORD <|@ <|@
      nr  856  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" "B97" 
    xhandlers
    flags 
    probability 4605613339752092257
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  866  <|@ instruction CMP [r8|QWORD[.] + 12] y: 2 size: DWORD <|@ <|@
      nr  868  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B94 -> B95 falseDestination: B94 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors 
    xhandlers
    flags 
    probability 4605613339752092257
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  886  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  888  <|@ instruction rax|DWORD = MOV [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  890  <|@ instruction MOV (x: [r8|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  892  <|@ instruction MOV (x: [r8|QWORD[.] + 20], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  894  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  896  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" "B111" 
    xhandlers
    flags 
    probability 4602678630014211490
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  120  <|@ instruction CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr  122  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B21" 
    xhandlers
    flags 
    probability 4602678630014211490
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  126  <|@ instruction stack:60|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  128  <|@ instruction r9|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  130  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r9:0, r11:0, stack:36, stack:64]
live-base-pointers: []
java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV [r9|DWORD[.] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  132  <|@ instruction CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr  134  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4598175219541303937
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  138  <|@ instruction CMP (x: rbx|DWORD, y: [r9|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr  140  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4597957218219621597
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  158  <|@ instruction CMP (x: rbx|DWORD, y: [r9|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr  160  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B84" 
    xhandlers
    flags 
    probability 4597957218219621597
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  170  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  172  <|@ instruction stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B20 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" "B110" 
    xhandlers
    flags 
    probability 4598174841232378051
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  182  <|@ instruction CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr  184  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B28" 
    xhandlers
    flags 
    probability 4598174841232378051
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  188  <|@ instruction stack:76|DWORD[.] = MOVE r9|DWORD[.] moveKind: DWORD <|@ <|@
      nr  190  <|@ instruction rax|DWORD[.] = MOV [r9|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  192  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, r8:0, r9:0, stack:20, stack:36, stack:64]
live-base-pointers: []
java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - 
>@ <|@ instruction rbp|DWORD = MOV [rax|DWORD[.] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  194  <|@ instruction CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr  196  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4593671430755498102
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  200  <|@ instruction CMP (x: rbx|DWORD, y: [rax|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr  202  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4593453434012019015
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  220  <|@ instruction CMP (x: rbx|DWORD, y: [rax|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr  222  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B52" 
    xhandlers
    flags 
    probability 4593453434012019015
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  240  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  244  <|@ instruction JUMP ~[] destination: B27 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" "B44" "B50" "B51" "B34" "B27" 
    successors "B53" "B83" 
    xhandlers
    flags 
    probability 4598229702893204513
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  488  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  490  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B84" 
    xhandlers
    flags 
    probability 4598172540601706155
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  758  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  760  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction JUMP ~[] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B99" 
    xhandlers
    flags 
    probability 4595348933040024535
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  900  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3 <|@ <|@
      nr  902  <|@ instruction stack:40|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  904  <|@ instruction stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  906  <|@ instruction stack:88|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  908  <|@ instruction JUMP ~[] destination: B98 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B76" "B98" 
    successors "B100" "B103" 
    xhandlers
    flags 
    probability 4595444336482236028
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL numbPhis: 5 align: false label: ? <|@ <|@
      nr  912  <|@ instruction r8|DWORD = MOV [r11|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  914  <|@ instruction CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BranchConn;, resolved>;compressed} <|@ <|@
      nr  916  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B101" "B102" 
    xhandlers
    flags 
    probability 4595444336482236028
    begin_IR
      LIR
      nr  918  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  920  <|@ instruction r8|DWORD[.] = MOV [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  922  <|@ st <@st|@reference-map: [rdx:0, r8:0, stack:8, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63]
locals: stack:88|QWORD[.] rdx|QWORD[.] rdi|DWORD stack:48|QWORD[.] rcx|DWORD stack:60|DWORD stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r8|DWORD[.] * 8] state [bci:63, 37] <|@ <|@
      nr  924  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3 <|@ <|@
      nr  926  <|@ instruction rsi|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction r9|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  930  <|@ instruction rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  932  <|@ instruction rcx|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  934  <|@ instruction r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  936  <|@ st <@st|@reference-map: [stack:8, stack:64]
live-base-pointers: []
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
locals: stack:88|QWORD[.] stack:32|QWORD[.] - - - stack:60|DWORD stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:7, 70, 37] <|@ <|@
      nr  938  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  940  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors 
    xhandlers
    flags 
    probability 4595444336482236028
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  960  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  962  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B29" "B109" 
    xhandlers
    flags 
    probability 4593671052454517008
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  248  <|@ instruction CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr  250  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B35" 
    xhandlers
    flags 
    probability 4593671052454517008
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  254  <|@ instruction rbp|DWORD[.] = MOV [rax|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  256  <|@ st <@st|@reference-map: [rax:0, rdx:0, rbp:0, rsi:0, r8:0, stack:20, stack:36, stack:64]
live-base-pointers: []
java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - 
>@ <|@ instruction r13|DWORD = MOV [rbp|DWORD[.] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  258  <|@ instruction CMP r13|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr  260  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4589167641973664746
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  264  <|@ instruction CMP (x: rbx|DWORD, y: [rbp|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr  266  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4588949649808292766
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ instruction CMP (x: rbx|DWORD, y: [rbp|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr  286  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B52" 
    xhandlers
    flags 
    probability 4588949649808292766
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  296  <|@ instruction stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  298  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  304  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  308  <|@ instruction JUMP ~[] destination: B34 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" "B51" 
    xhandlers
    flags 
    probability 4589167263680628278
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  312  <|@ instruction stack:80|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  318  <|@ instruction stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  322  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3 <|@ <|@
      nr  326  <|@ instruction rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction rdx|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ st <@st|@reference-map: [stack:16, stack:20, stack:24, stack:36, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:80|DWORD[.] stack:36|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:76|DWORD[.] stack:36|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:60|DWORD[.] stack:36|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:72|QWORD[.] stack:36|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] stack:32|QWORD[.] stack:52|DWORD stack:48|QWORD[.] stack:36|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:5, 5, 5, 5, 18] <|@ <|@
      nr  332  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  334  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B52" 
    xhandlers
    flags 
    probability 4589056961821986236
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  482  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  484  <|@ instruction JUMP ~[] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B54" 
    xhandlers
    flags 
    probability 4578129810580469169
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B10 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B10" 
    successors "B55" "B81" 
    xhandlers
    flags 
    probability 4579916140811292442
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  502  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  504  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:36|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: rsi|QWORD[.] stack:32|QWORD[.] stack:52|DWORD stack:48|QWORD[.] stack:36|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:8, 18] <|@ <|@
      nr  506  <|@ instruction r11|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  508  <|@ st <@st|@reference-map: [rsi:0, r10:0, r11:0, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:36|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: rsi|QWORD[.] stack:32|QWORD[.] stack:52|DWORD stack:48|QWORD[.] stack:36|DWORD 
>@ <|@ instruction CMP [r11|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:8, 18] <|@ <|@
      nr  510  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B80" 
    xhandlers
    flags 
    probability 4579916140811292442
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  514  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction r8|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  518  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r10:0, r11:0, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:36|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: rsi|QWORD[.] rdx|QWORD[.] stack:52|DWORD stack:48|QWORD[.] stack:36|DWORD 
>@ <|@ instruction r9|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18] <|@ <|@
      nr  520  <|@ instruction rcx|DWORD = MOV [r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  522  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  524  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" "B58" 
    xhandlers
    flags 
    probability 4579916140811292442
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  528  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3 <|@ <|@
      nr  530  <|@ instruction rcx|DWORD = MOV [r8|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  532  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  534  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" "B79" 
    xhandlers
    flags 
    probability 4579916140811292442
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  546  <|@ instruction r8|DWORD[.] = MOV [rdx|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  548  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r10:0, r11:0, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:36|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: rsi|QWORD[.] rdx|QWORD[.] stack:52|DWORD stack:48|QWORD[.] stack:36|DWORD 
>@ <|@ instruction r9|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18] <|@ <|@
      nr  550  <|@ instruction rbx|DWORD = MOV [r11|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  552  <|@ instruction CMP (x: r9|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  554  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B78" 
    xhandlers
    flags 
    probability 4579916140811292442
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  558  <|@ instruction rax|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr  560  <|@ instruction CMP (x: r9|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  562  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B68" 
    xhandlers
    flags 
    probability 4579916140811292442
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  566  <|@ instruction r9|DWORD[.] = MOV [r11|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  568  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r9:0, r10:0, r11:0, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:36|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: rsi|QWORD[.] rdx|QWORD[.] stack:52|DWORD stack:48|QWORD[.] stack:36|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r9|DWORD[.] * 8] state [bci:8, 18] <|@ <|@
      nr  570  <|@ instruction rbp|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  572  <|@ instruction CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} <|@ <|@
      nr  574  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B69" "B77" 
    xhandlers
    flags 
    probability 4575412541183921946
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  628  <|@ instruction CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr  630  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4575412541183921946
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  634  <|@ instruction rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  636  <|@ instruction CMP (x: rbp|DWORD, y: [r10|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr  638  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    probability 4575412541183921946
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  648  <|@ instruction CMP (x: rbp|DWORD, y: [r10|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr  650  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B71 -> B72 falseDestination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" 
    xhandlers
    flags 
    probability 4575412541183921946
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  660  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B65" "B73" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4579916140811292442
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  664  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3 <|@ <|@
      nr  666  <|@ instruction r10|DWORD = MOV [r8|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  668  <|@ instruction rsi|DWORD = MOV [r8|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  670  <|@ instruction MOV (x: [r8|QWORD[.] + rbx|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  672  <|@ instruction MOV (x: [r8|QWORD[.] + rax|DWORD * 4 + 16], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  674  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3 <|@ <|@
      nr  676  <|@ instruction CMP [r9|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed} <|@ <|@
      nr  678  <|@ instruction BRANCH trueDestinationProbability: 0.8257972313536578 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B92" 
    xhandlers
    flags 
    probability 4578389685735908546
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  682  <|@ instruction rax|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction stack:40|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  686  <|@ instruction rsi|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  688  <|@ instruction r10|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  690  <|@ instruction JUMP ~[] destination: B75 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B67" 
    xhandlers
    flags 
    probability 4575412541183921946
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  578  <|@ instruction rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  580  <|@ instruction r10|DWORD[.] = MOV [r10|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  582  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r9:0, r10:0, r11:0, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rbp|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: rsi|QWORD[.] rdx|QWORD[.] stack:52|DWORD stack:48|QWORD[.] rbp|DWORD 
>@ <|@ instruction CMP (x: rbp|DWORD, y: [r10|DWORD[.] * 8 + 12]) size: DWORD state [bci:8, 18] <|@ <|@
      nr  584  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B61 -> B62 falseDestination: B61 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B66" 
    xhandlers
    flags 
    probability 4575412541183921946
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  588  <|@ instruction CMP stack:40|DWORD y: 256 size: WORD <|@ <|@
      nr  590  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B62 -> B63 falseDestination: B62 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4575412541183921946
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  594  <|@ instruction r13|QWORD = MOVZX stack:40|DWORD size: DWORD <|@ <|@
      nr  596  <|@ instruction r10|DWORD = MOVZXB [r13|QWORD + r10|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  598  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  600  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B74" 
    xhandlers
    flags 
    probability 4575412541183921946
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  612  <|@ instruction JUMP ~[] destination: B65 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B41" 
    xhandlers
    flags 
    probability 4573626064447517839
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  144  <|@ instruction stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  146  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  152  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B17 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B17" 
    successors "B42" "B48" 
    xhandlers
    flags 
    probability 4573669175251835067
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  390  <|@ instruction r10|DWORD[.] = MOV [r11|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  392  <|@ st <@st|@reference-map: [r10:0, r11:0, stack:24, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: r11|DWORD[.] stack:36|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:72|QWORD[.] stack:36|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] stack:32|QWORD[.] stack:52|DWORD stack:48|QWORD[.] stack:36|DWORD 
>@ <|@ instruction CMP [r10|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} state [bci:8, 5, 18] <|@ <|@
      nr  394  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B52" 
    xhandlers
    flags 
    probability 4569165575624464571
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  454  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3 <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  460  <|@ st <@st|@reference-map: [stack:24, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:72|QWORD[.] stack:36|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] stack:32|QWORD[.] stack:52|DWORD stack:48|QWORD[.] stack:36|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 18] <|@ <|@
      nr  462  <|@ instruction rsi|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" 
    xhandlers
    flags 
    probability 4569291743449605540
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  494  <|@ instruction rdi|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  496  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  498  <|@ instruction JUMP ~[] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B46" 
    xhandlers
    flags 
    probability 4569165575624464571
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  398  <|@ instruction CMP stack:40|DWORD y: 256 size: WORD <|@ <|@
      nr  400  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B42 -> B43 falseDestination: B42 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4569165575624464571
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  404  <|@ instruction rbx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction rsi|DWORD[.] = MOV [r10|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  408  <|@ st <@st|@reference-map: [rsi:0, r11:0, stack:24, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: r11|DWORD[.] rbx|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:72|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] stack:32|QWORD[.] stack:52|DWORD stack:48|QWORD[.] rbx|DWORD 
>@ <|@ instruction CMP (x: rbx|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:8, 5, 18] <|@ <|@
      nr  410  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B43 -> B44 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B52" 
    xhandlers
    flags 
    probability 4569165575624464571
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  414  <|@ instruction rdx|QWORD = MOVZX stack:40|DWORD size: DWORD <|@ <|@
      nr  416  <|@ instruction rsi|DWORD = MOVZXB [rdx|QWORD + rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~[] destination: B44 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B39" 
    xhandlers
    flags 
    probability 4569122318317643243
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  206  <|@ instruction stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  208  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  214  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction JUMP ~[] destination: B24 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B24" 
    successors "B40" "B49" 
    xhandlers
    flags 
    probability 4569186648162324981
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  368  <|@ instruction rsi|DWORD[.] = MOV [r9|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  370  <|@ st <@st|@reference-map: [rsi:0, r9:0, stack:24, stack:36, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: r9|DWORD[.] rbx|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:60|DWORD[.] rbx|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:72|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] stack:32|QWORD[.] stack:52|DWORD stack:48|QWORD[.] rbx|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:8, 5, 5, 18] <|@ <|@
      nr  372  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3 <|@ <|@
      nr  374  <|@ instruction rdx|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ st <@st|@reference-map: [stack:24, stack:36, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:60|DWORD[.] stack:36|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:72|QWORD[.] stack:36|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] stack:32|QWORD[.] stack:52|DWORD stack:48|QWORD[.] stack:36|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 5, 18] <|@ <|@
      nr  378  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  380  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B84" 
    xhandlers
    flags 
    probability 4569100426553690526
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  468  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  470  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B49 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B99" 
    xhandlers
    flags 
    probability 4568252242827848031
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  694  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3 <|@ <|@
      nr  696  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  698  <|@ instruction stack:60|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  700  <|@ instruction stack:88|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction r11|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction JUMP ~[] destination: B76 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" 
    xhandlers
    flags 
    probability 4564618572190845318
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ instruction stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  272  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  278  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction JUMP ~[] destination: B31 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B31" 
    successors "B38" "B50" 
    xhandlers
    flags 
    probability 4567399126910536796
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  344  <|@ instruction rsi|DWORD[.] = MOV [rax|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  346  <|@ st <@st|@reference-map: [rax:0, rsi:0, stack:20, stack:24, stack:36, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: rax|DWORD[.] stack:36|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:76|DWORD[.] stack:36|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:60|DWORD[.] stack:36|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:72|QWORD[.] stack:36|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] stack:32|QWORD[.] stack:52|DWORD stack:48|QWORD[.] stack:36|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:8, 5, 5, 5, 18] <|@ <|@
      nr  348  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3 <|@ <|@
      nr  350  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ st <@st|@reference-map: [stack:20, stack:24, stack:36, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:76|DWORD[.] stack:36|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:60|DWORD[.] stack:36|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:72|QWORD[.] stack:36|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] stack:32|QWORD[.] stack:52|DWORD stack:48|QWORD[.] stack:36|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 5, 5, 18] <|@ <|@
      nr  354  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  356  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B52" 
    xhandlers
    flags 
    probability 4567334797065855058
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  476  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  478  <|@ instruction JUMP ~[] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560198542224662117
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  338  <|@ instruction rax|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4540643007714694606
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  384  <|@ instruction r11|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" 
    xhandlers
    flags 
    probability 4538855445253981485
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  360  <|@ instruction r9|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction rbx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  974  <|@ instruction r11|DWORD = MOVE input: int[-273691|0xfffffffffffbd2e5] <|@ <|@
      nr  976  <|@ instruction rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  978  <|@ instruction JUMP ~[] destination: B104 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" "B87" "B106" "B105" "B104" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1008  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1010  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1012  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:48]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: r10|DWORD 
locals: rsi|QWORD[.] rbp|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: rsi|QWORD[.] rdx|QWORD[.] stack:52|DWORD stack:48|QWORD[.] rbp|DWORD 
>@ <|@ instruction DEOPT info [bci:8, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  538  <|@ instruction r10|DWORD = MOVE input: int[-240147|0xfffffffffffc55ed] <|@ <|@
      nr  540  <|@ instruction rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  542  <|@ instruction JUMP ~[] destination: B57 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B57" "B80" "B79" "B78" "B70" "B77" "B72" "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 2370019303903723520
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  750  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  752  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  754  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:48]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rbp|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: rsi|QWORD[.] rdx|QWORD[.] stack:52|DWORD stack:48|QWORD[.] rbp|DWORD 
>@ <|@ instruction DEOPT info [bci:8, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1046  <|@ instruction r10|DWORD = MOVE input: int[-210203|0xfffffffffffccae5] <|@ <|@
      nr 1048  <|@ instruction JUMP ~[] destination: B114 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" "B3" "B116" "B115" "B114" "B113" "B112" "B12" "B111" "B19" "B110" "B26" "B109" "B33" 
    successors 
    xhandlers
    flags 
    probability 2372271103717408768
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1070  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1072  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1074  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0]
live-base-pointers: []
java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  434  <|@ instruction r10|DWORD = MOVE input: int[-227859|0xfffffffffffc85ed] <|@ <|@
      nr  436  <|@ instruction rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  438  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  440  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  446  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  450  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r11:0, stack:48]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: r11|DWORD[.] rbp|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: rsi|QWORD[.] rbp|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: rsi|QWORD[.] rdx|QWORD[.] stack:52|DWORD stack:48|QWORD[.] rbp|DWORD 
>@ <|@ instruction DEOPT info [bci:8, 5, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  654  <|@ instruction r10|DWORD = MOVE input: int[-258323|0xfffffffffffc0eed] <|@ <|@
      nr  656  <|@ instruction JUMP ~[] destination: B72 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  642  <|@ instruction r10|DWORD = MOVE input: int[-258067|0xfffffffffffc0fed] <|@ <|@
      nr  644  <|@ instruction JUMP ~[] destination: B70 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  708  <|@ instruction r10|DWORD = MOVE input: int[-256819|0xfffffffffffc14cd] <|@ <|@
      nr  710  <|@ instruction rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  712  <|@ instruction JUMP ~[] destination: B77 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  860  <|@ instruction r11|DWORD = MOVE input: int[-277267|0xfffffffffffbc4ed] <|@ <|@
      nr  862  <|@ instruction JUMP ~[] destination: B93 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B93" "B95" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  876  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  878  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  880  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  882  <|@ st <@st|@reference-map: [rax:0, rdx:0, stack:48]
live-base-pointers: []
java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63]
locals: rax|QWORD[.] rdx|QWORD[.] rdi|DWORD stack:48|QWORD[.] rcx|DWORD r10|DWORD rsi|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:63, 37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  716  <|@ instruction r10|DWORD = MOVE input: int[-250395|0xfffffffffffc2de5] <|@ <|@
      nr  718  <|@ instruction rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  720  <|@ instruction JUMP ~[] destination: B78 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  732  <|@ instruction r10|DWORD = MOVE input: int[-238107|0xfffffffffffc5de5] <|@ <|@
      nr  734  <|@ instruction rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  736  <|@ instruction JUMP ~[] destination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  724  <|@ instruction r10|DWORD = MOVE input: int[-248091|0xfffffffffffc36e5] <|@ <|@
      nr  726  <|@ instruction rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  728  <|@ instruction JUMP ~[] destination: B79 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  604  <|@ instruction MOV [r15|QWORD + 668] y: -233491 size: DWORD <|@ <|@
      nr  606  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  608  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:48]
live-base-pointers: []
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rdx|QWORD[.] stack:52|DWORD stack:48|QWORD[.] rbp|DWORD 
>@ <|@ instruction DEOPT info [bci:21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  982  <|@ instruction r11|DWORD = MOVE input: int[-271387|0xfffffffffffbdbe5] <|@ <|@
      nr  984  <|@ instruction rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  986  <|@ instruction JUMP ~[] destination: B105 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  290  <|@ instruction r10|DWORD = MOVE input: int[-222739|0xfffffffffffc99ed] <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B33 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1014  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1016  <|@ instruction r10|DWORD = MOVE input: int[-220467|0xfffffffffffca2cd] <|@ <|@
      nr 1018  <|@ instruction JUMP ~[] destination: B109 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  966  <|@ instruction MOV [r15|QWORD + 668] y: -284723 size: DWORD <|@ <|@
      nr  968  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  970  <|@ st <@st|@reference-map: [rdx:0, stack:8, stack:48]
live-base-pointers: []
java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63]
locals: stack:88|QWORD[.] rdx|QWORD[.] rdi|DWORD stack:48|QWORD[.] rcx|DWORD stack:60|DWORD stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:63, 37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  226  <|@ instruction r10|DWORD = MOVE input: int[-220179|0xfffffffffffca3ed] <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B26 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  622  <|@ instruction r10|DWORD = MOVE input: int[-255771|0xfffffffffffc18e5] <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B67 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  996  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  998  <|@ instruction r11|DWORD = MOVE input: int[-259379|0xfffffffffffc0acd] <|@ <|@
      nr 1000  <|@ instruction rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1002  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1004  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1022  <|@ instruction r10|DWORD = MOVE input: int[-217907|0xfffffffffffcaccd] <|@ <|@
      nr 1024  <|@ instruction JUMP ~[] destination: B110 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  990  <|@ instruction r11|DWORD = MOVE input: int[-262171|0xfffffffffffbffe5] <|@ <|@
      nr  992  <|@ instruction rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  994  <|@ instruction JUMP ~[] destination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  616  <|@ instruction r10|DWORD = MOVE input: int[-253203|0xfffffffffffc22ed] <|@ <|@
      nr  618  <|@ instruction JUMP ~[] destination: B66 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1026  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1028  <|@ instruction r10|DWORD = MOVE input: int[-215347|0xfffffffffffcb6cd] <|@ <|@
      nr 1030  <|@ instruction JUMP ~[] destination: B111 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1062  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1064  <|@ instruction r10|DWORD = MOVE input: int[-206099|0xfffffffffffcdaed] <|@ <|@
      nr 1066  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  740  <|@ instruction r10|DWORD = MOVE input: int[-234803|0xfffffffffffc6acd] <|@ <|@
      nr  742  <|@ instruction rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  744  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction JUMP ~[] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1052  <|@ instruction r10|DWORD = MOVE input: int[-209427|0xfffffffffffccded] <|@ <|@
      nr 1054  <|@ instruction JUMP ~[] destination: B115 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  798  <|@ instruction r11|DWORD = MOVE input: int[-263955|0xfffffffffffbf8ed] <|@ <|@
      nr  800  <|@ instruction rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  802  <|@ instruction JUMP ~[] destination: B87 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1038  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1040  <|@ instruction r10|DWORD = MOVE input: int[-212243|0xfffffffffffcc2ed] <|@ <|@
      nr 1042  <|@ instruction JUMP ~[] destination: B113 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  422  <|@ instruction r10|DWORD = MOVE input: int[-230427|0xfffffffffffc7be5] <|@ <|@
      nr  424  <|@ instruction rbp|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  426  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1034  <|@ instruction r10|DWORD = MOVE input: int[-212531|0xfffffffffffcc1cd] <|@ <|@
      nr 1036  <|@ instruction JUMP ~[] destination: B112 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  164  <|@ instruction r10|DWORD = MOVE input: int[-217619|0xfffffffffffcaded] <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B19 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction r10|DWORD = MOVE input: int[-206867|0xfffffffffffcd7ed] <|@ <|@
      nr   28  <|@ instruction JUMP ~[] destination: B3 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1056  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1058  <|@ instruction r10|DWORD = MOVE input: int[-206643|0xfffffffffffcd8cd] <|@ <|@
      nr 1060  <|@ instruction JUMP ~[] destination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  102  <|@ instruction r10|DWORD = MOVE input: int[-215059|0xfffffffffffcb7ed] <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B12 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  944  <|@ instruction r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  946  <|@ instruction r10|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction r11|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  950  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  952  <|@ instruction MOV [r15|QWORD + 668] y: -286739 size: DWORD <|@ <|@
      nr  954  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  956  <|@ st <@st|@reference-map: [rdx:0, r11:0]
live-base-pointers: []
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 10]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
locals: r11|QWORD[.] rdx|QWORD[.] - - - r10|DWORD r8|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:10, 70, 37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  872  <|@ instruction r11|DWORD = MOVE input: int[-293147|0xfffffffffffb86e5] <|@ <|@
      nr  874  <|@ instruction JUMP ~[] destination: B95 -> B96 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: aload_1       
     2: getfield      #3          // java.util.regex.Matcher.to:int
     5: if_icmpge     49
     8: aload_3       
     9: iload_2       
    10: invokestatic  #4          // java.lang.Character.codePointAt:(java.lang.CharSequence, int)int
    13: istore        4
    15: aload_0       
    16: iload         4
    18: invokevirtual #5          // isSatisfiedBy:(int)boolean
    21: ifeq          47
    24: aload_0       
    25: getfield      #6          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    28: aload_1       
    29: iload_2       
    30: iload         4
    32: invokestatic  #7          // java.lang.Character.charCount:(int)int
    35: iadd          
    36: aload_3       
    37: invokevirtual #8          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    40: ifeq          47
    43: iconst_1      
    44: goto          48
    47: iconst_0      
    48: ireturn       
    49: aload_1       
    50: iconst_1      
    51: putfield      #9          // java.util.regex.Matcher.hitEnd:boolean
    54: iconst_0      
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B117" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@714f65ea slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, stack:64]
live-base-pointers: []
java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - 
>@ <|@ instruction CMP (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B116" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, stack:64]
live-base-pointers: []
java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - 
>@ <|@ instruction CMP [r8|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   22  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B115" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction r10|DWORD[.] = MOV [r8|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r10:0, stack:64]
live-base-pointers: []
java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction CMP (x: r11|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B114" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction CMP (x: r11|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B113" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction r10|DWORD = MOVSX [r10|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   52  <|@ instruction CMP r10|DWORD y: -10240 size: WORD <|@ <|@
      nr   54  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B112" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction CMP [rsi|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr   60  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction r11|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   66  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r11:0, stack:64]
live-base-pointers: []
java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - 
>@ <|@ instruction r9|DWORD = MOV [r11|DWORD[.] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   68  <|@ instruction rbx|DWORD = MOVZX r10|DWORD size: DWORD <|@ <|@
      nr   70  <|@ instruction stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction rdi|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr   74  <|@ instruction CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   76  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4602678913751864623
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction CMP (x: rbx|DWORD, y: [r11|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   82  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4602461002431100593
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction CMP (x: rbx|DWORD, y: [r11|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   98  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B84" 
    xhandlers
    flags 
    probability 4602461002431100593
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  108  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  110  <|@ instruction stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction JUMP ~[] destination: B13 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B49" "B13" "B20" 
    successors "B85" "B107" 
    xhandlers
    flags 
    probability 4607045504440169924
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  766  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  768  <|@ st <@st|@reference-map: [rax:0, rsi:0, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: r10|DWORD 
locals: rsi|QWORD[.] stack:36|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: rsi|QWORD[.] stack:32|QWORD[.] stack:52|DWORD stack:48|QWORD[.] stack:36|DWORD 
>@ <|@ instruction CMP [rax|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:8, 18] <|@ <|@
      nr  770  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B86" "B106" 
    xhandlers
    flags 
    probability 4607045504440169924
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  774  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  776  <|@ instruction rcx|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  778  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, rsi:0, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: r10|DWORD 
locals: rsi|QWORD[.] stack:36|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: rsi|QWORD[.] rdx|QWORD[.] stack:52|DWORD stack:48|QWORD[.] stack:36|DWORD 
>@ <|@ instruction r8|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18] <|@ <|@
      nr  780  <|@ instruction r11|DWORD = MOV [rax|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  782  <|@ instruction CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  784  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B85 -> B86 falseDestination: B85 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B87" "B88" 
    xhandlers
    flags 
    probability 4607045504440169924
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  788  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3 <|@ <|@
      nr  790  <|@ instruction rcx|DWORD = MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  792  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  794  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B86 -> B87 falseDestination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B89" "B105" 
    xhandlers
    flags 
    probability 4607045504440169924
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  806  <|@ instruction r8|DWORD[.] = MOV [rdx|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  808  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, r8:0, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: r10|DWORD 
locals: rsi|QWORD[.] stack:36|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: rsi|QWORD[.] rdx|QWORD[.] stack:52|DWORD stack:48|QWORD[.] stack:36|DWORD 
>@ <|@ instruction r11|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18] <|@ <|@
      nr  810  <|@ instruction r9|DWORD = MOV [rax|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  812  <|@ instruction CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  814  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B88 -> B89 falseDestination: B88 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B90" "B104" 
    xhandlers
    flags 
    probability 4607045504440169924
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  818  <|@ instruction rbx|DWORD = INC r9|DWORD size: DWORD <|@ <|@
      nr  820  <|@ instruction CMP (x: r11|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  822  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B89 -> B90 falseDestination: B89 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B92" "B98" 
    xhandlers
    flags 
    probability 4607045504440169924
    begin_IR
      LIR
      nr  824  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  826  <|@ instruction rdi|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  828  <|@ instruction r11|DWORD[.] = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  830  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, r8:0, r11:0, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: r10|DWORD 
locals: rsi|QWORD[.] stack:36|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: rsi|QWORD[.] rdx|QWORD[.] stack:52|DWORD stack:48|QWORD[.] stack:36|DWORD 
>@ <|@ instruction rbp|DWORD = MOV [r11|DWORD[.] * 8 + 8] size: DWORD state [bci:8, 18] <|@ <|@
      nr  832  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3 <|@ <|@
      nr  834  <|@ instruction rsi|DWORD = MOV [r8|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  836  <|@ instruction r10|DWORD = MOV [r8|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  838  <|@ instruction MOV (x: [r8|QWORD[.] + r9|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  840  <|@ instruction MOV (x: [r8|QWORD[.] + rbx|DWORD * 4 + 16], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  842  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3 <|@ <|@
      nr  844  <|@ instruction CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed} <|@ <|@
      nr  846  <|@ instruction BRANCH trueDestinationProbability: 0.8257972313536578 condition: = trueDestination: B90 -> B92 falseDestination: B90 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B75" "B90" 
    successors "B93" "B94" 
    xhandlers
    flags 
    probability 4605613339752092257
    begin_IR
      LIR
      nr  852  <|@ instruction [] = LABEL numbPhis: 5 align: false label: ? <|@ <|@
      nr  854  <|@ instruction CMP [rdx|QWORD[.] + 24] y: 1 size: DWORD <|@ <|@
      nr  856  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" "B97" 
    xhandlers
    flags 
    probability 4605613339752092257
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  866  <|@ instruction CMP [r8|QWORD[.] + 12] y: 2 size: DWORD <|@ <|@
      nr  868  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B94 -> B95 falseDestination: B94 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors 
    xhandlers
    flags 
    probability 4605613339752092257
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  886  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  888  <|@ instruction rax|DWORD = MOV [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  890  <|@ instruction MOV (x: [r8|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  892  <|@ instruction MOV (x: [r8|QWORD[.] + 20], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  894  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  896  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" "B111" 
    xhandlers
    flags 
    probability 4602678630014211490
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  120  <|@ instruction CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr  122  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B21" 
    xhandlers
    flags 
    probability 4602678630014211490
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  126  <|@ instruction stack:60|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  128  <|@ instruction r9|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  130  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r9:0, r11:0, stack:36, stack:64]
live-base-pointers: []
java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV [r9|DWORD[.] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  132  <|@ instruction CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr  134  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4598175219541303937
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  138  <|@ instruction CMP (x: rbx|DWORD, y: [r9|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr  140  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4597957218219621597
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  158  <|@ instruction CMP (x: rbx|DWORD, y: [r9|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr  160  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B84" 
    xhandlers
    flags 
    probability 4597957218219621597
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  170  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  172  <|@ instruction stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B20 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" "B110" 
    xhandlers
    flags 
    probability 4598174841232378051
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  182  <|@ instruction CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr  184  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B28" 
    xhandlers
    flags 
    probability 4598174841232378051
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  188  <|@ instruction stack:76|DWORD[.] = MOVE r9|DWORD[.] moveKind: DWORD <|@ <|@
      nr  190  <|@ instruction rax|DWORD[.] = MOV [r9|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  192  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, r8:0, r9:0, stack:20, stack:36, stack:64]
live-base-pointers: []
java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - 
>@ <|@ instruction rbp|DWORD = MOV [rax|DWORD[.] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  194  <|@ instruction CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr  196  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4593671430755498102
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  200  <|@ instruction CMP (x: rbx|DWORD, y: [rax|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr  202  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4593453434012019015
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  220  <|@ instruction CMP (x: rbx|DWORD, y: [rax|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr  222  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B52" 
    xhandlers
    flags 
    probability 4593453434012019015
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  240  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  244  <|@ instruction JUMP ~[] destination: B27 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" "B44" "B50" "B51" "B34" "B27" 
    successors "B53" "B83" 
    xhandlers
    flags 
    probability 4598229702893204513
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  488  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  490  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B84" 
    xhandlers
    flags 
    probability 4598172540601706155
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  758  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  760  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction JUMP ~[] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B99" 
    xhandlers
    flags 
    probability 4595348933040024535
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  900  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3 <|@ <|@
      nr  902  <|@ instruction stack:40|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  904  <|@ instruction stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  906  <|@ instruction stack:88|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  908  <|@ instruction JUMP ~[] destination: B98 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B76" "B98" 
    successors "B100" "B103" 
    xhandlers
    flags 
    probability 4595444336482236028
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL numbPhis: 5 align: false label: ? <|@ <|@
      nr  912  <|@ instruction r8|DWORD = MOV [r11|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  914  <|@ instruction CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BranchConn;, resolved>;compressed} <|@ <|@
      nr  916  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B101" "B102" 
    xhandlers
    flags 
    probability 4595444336482236028
    begin_IR
      LIR
      nr  918  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  920  <|@ instruction r8|DWORD[.] = MOV [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  922  <|@ st <@st|@reference-map: [rdx:0, r8:0, stack:8, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63]
locals: stack:88|QWORD[.] rdx|QWORD[.] rdi|DWORD stack:48|QWORD[.] rcx|DWORD stack:60|DWORD stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r8|DWORD[.] * 8] state [bci:63, 37] <|@ <|@
      nr  924  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3 <|@ <|@
      nr  926  <|@ instruction rsi|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction r9|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  932  <|@ instruction rcx|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  934  <|@ instruction r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  936  <|@ st <@st|@reference-map: [stack:8, stack:64]
live-base-pointers: []
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
locals: stack:88|QWORD[.] stack:32|QWORD[.] - - - stack:60|DWORD stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:7, 70, 37] <|@ <|@
      nr  938  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  940  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors 
    xhandlers
    flags 
    probability 4595444336482236028
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  960  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  962  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B29" "B109" 
    xhandlers
    flags 
    probability 4593671052454517008
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  248  <|@ instruction CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr  250  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B35" 
    xhandlers
    flags 
    probability 4593671052454517008
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  254  <|@ instruction rbp|DWORD[.] = MOV [rax|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  256  <|@ st <@st|@reference-map: [rax:0, rdx:0, rbp:0, rsi:0, r8:0, stack:20, stack:36, stack:64]
live-base-pointers: []
java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - 
>@ <|@ instruction r13|DWORD = MOV [rbp|DWORD[.] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  258  <|@ instruction CMP r13|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr  260  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4589167641973664746
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  264  <|@ instruction CMP (x: rbx|DWORD, y: [rbp|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr  266  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4588949649808292766
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ instruction CMP (x: rbx|DWORD, y: [rbp|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr  286  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B52" 
    xhandlers
    flags 
    probability 4588949649808292766
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  296  <|@ instruction stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  298  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  304  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  308  <|@ instruction JUMP ~[] destination: B34 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" "B51" 
    xhandlers
    flags 
    probability 4589167263680628278
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  312  <|@ instruction stack:80|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  318  <|@ instruction stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  322  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3 <|@ <|@
      nr  326  <|@ instruction rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction rdx|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ st <@st|@reference-map: [stack:16, stack:20, stack:24, stack:36, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:80|DWORD[.] stack:36|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:76|DWORD[.] stack:36|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:60|DWORD[.] stack:36|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:72|QWORD[.] stack:36|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] stack:32|QWORD[.] stack:52|DWORD stack:48|QWORD[.] stack:36|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:5, 5, 5, 5, 18] <|@ <|@
      nr  332  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  334  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B52" 
    xhandlers
    flags 
    probability 4589056961821986236
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  482  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  484  <|@ instruction JUMP ~[] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B54" 
    xhandlers
    flags 
    probability 4578129810580469169
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B10 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B10" 
    successors "B55" "B81" 
    xhandlers
    flags 
    probability 4579916140811292442
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  502  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  504  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:36|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: rsi|QWORD[.] stack:32|QWORD[.] stack:52|DWORD stack:48|QWORD[.] stack:36|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:8, 18] <|@ <|@
      nr  506  <|@ instruction r11|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  508  <|@ st <@st|@reference-map: [rsi:0, r10:0, r11:0, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:36|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: rsi|QWORD[.] stack:32|QWORD[.] stack:52|DWORD stack:48|QWORD[.] stack:36|DWORD 
>@ <|@ instruction CMP [r11|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:8, 18] <|@ <|@
      nr  510  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B80" 
    xhandlers
    flags 
    probability 4579916140811292442
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  514  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction r8|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  518  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r10:0, r11:0, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:36|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: rsi|QWORD[.] rdx|QWORD[.] stack:52|DWORD stack:48|QWORD[.] stack:36|DWORD 
>@ <|@ instruction r9|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18] <|@ <|@
      nr  520  <|@ instruction rcx|DWORD = MOV [r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  522  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  524  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" "B58" 
    xhandlers
    flags 
    probability 4579916140811292442
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  528  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3 <|@ <|@
      nr  530  <|@ instruction rcx|DWORD = MOV [r8|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  532  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  534  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" "B79" 
    xhandlers
    flags 
    probability 4579916140811292442
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  546  <|@ instruction r8|DWORD[.] = MOV [rdx|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  548  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r10:0, r11:0, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:36|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: rsi|QWORD[.] rdx|QWORD[.] stack:52|DWORD stack:48|QWORD[.] stack:36|DWORD 
>@ <|@ instruction r9|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18] <|@ <|@
      nr  550  <|@ instruction rbx|DWORD = MOV [r11|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  552  <|@ instruction CMP (x: r9|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  554  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B78" 
    xhandlers
    flags 
    probability 4579916140811292442
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  558  <|@ instruction rax|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr  560  <|@ instruction CMP (x: r9|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  562  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B68" 
    xhandlers
    flags 
    probability 4579916140811292442
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  566  <|@ instruction r9|DWORD[.] = MOV [r11|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  568  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r9:0, r10:0, r11:0, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:36|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: rsi|QWORD[.] rdx|QWORD[.] stack:52|DWORD stack:48|QWORD[.] stack:36|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r9|DWORD[.] * 8] state [bci:8, 18] <|@ <|@
      nr  570  <|@ instruction rbp|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  572  <|@ instruction CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} <|@ <|@
      nr  574  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B69" "B77" 
    xhandlers
    flags 
    probability 4575412541183921946
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  628  <|@ instruction CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr  630  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4575412541183921946
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  634  <|@ instruction rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  636  <|@ instruction CMP (x: rbp|DWORD, y: [r10|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr  638  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B74" 
    xhandlers
    flags 
    probability 4575412541183921946
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  648  <|@ instruction CMP (x: rbp|DWORD, y: [r10|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr  650  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B71 -> B72 falseDestination: B71 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B63" "B71" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4579916140811292442
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  664  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3 <|@ <|@
      nr  666  <|@ instruction r10|DWORD = MOV [r8|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  668  <|@ instruction rsi|DWORD = MOV [r8|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  670  <|@ instruction MOV (x: [r8|QWORD[.] + rbx|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  672  <|@ instruction MOV (x: [r8|QWORD[.] + rax|DWORD * 4 + 16], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  674  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3 <|@ <|@
      nr  676  <|@ instruction CMP [r9|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed} <|@ <|@
      nr  678  <|@ instruction BRANCH trueDestinationProbability: 0.8257972313536578 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B92" 
    xhandlers
    flags 
    probability 4578389685735908546
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  682  <|@ instruction rax|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction stack:40|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  686  <|@ instruction rsi|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  688  <|@ instruction r10|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  690  <|@ instruction JUMP ~[] destination: B75 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B67" 
    xhandlers
    flags 
    probability 4575412541183921946
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  578  <|@ instruction rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  580  <|@ instruction r10|DWORD[.] = MOV [r10|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  582  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r9:0, r10:0, r11:0, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rbp|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: rsi|QWORD[.] rdx|QWORD[.] stack:52|DWORD stack:48|QWORD[.] rbp|DWORD 
>@ <|@ instruction CMP (x: rbp|DWORD, y: [r10|DWORD[.] * 8 + 12]) size: DWORD state [bci:8, 18] <|@ <|@
      nr  584  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B61 -> B62 falseDestination: B61 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B66" 
    xhandlers
    flags 
    probability 4575412541183921946
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  588  <|@ instruction CMP stack:40|DWORD y: 256 size: WORD <|@ <|@
      nr  590  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B62 -> B63 falseDestination: B62 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B74" 
    xhandlers
    flags 
    probability 4575412541183921946
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  594  <|@ instruction r13|QWORD = MOVZX stack:40|DWORD size: DWORD <|@ <|@
      nr  596  <|@ instruction r10|DWORD = MOVZXB [r13|QWORD + r10|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  598  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  600  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B41" 
    xhandlers
    flags 
    probability 4573626064447517839
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  144  <|@ instruction stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  146  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  152  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B17 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B17" 
    successors "B42" "B48" 
    xhandlers
    flags 
    probability 4573669175251835067
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  390  <|@ instruction r10|DWORD[.] = MOV [r11|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  392  <|@ st <@st|@reference-map: [r10:0, r11:0, stack:24, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: r11|DWORD[.] stack:36|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:72|QWORD[.] stack:36|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] stack:32|QWORD[.] stack:52|DWORD stack:48|QWORD[.] stack:36|DWORD 
>@ <|@ instruction CMP [r10|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} state [bci:8, 5, 18] <|@ <|@
      nr  394  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B52" 
    xhandlers
    flags 
    probability 4569165575624464571
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  454  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3 <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  460  <|@ st <@st|@reference-map: [stack:24, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:72|QWORD[.] stack:36|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] stack:32|QWORD[.] stack:52|DWORD stack:48|QWORD[.] stack:36|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 18] <|@ <|@
      nr  462  <|@ instruction rsi|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" 
    xhandlers
    flags 
    probability 4569291743449605540
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  494  <|@ instruction rdi|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  496  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  498  <|@ instruction JUMP ~[] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B46" 
    xhandlers
    flags 
    probability 4569165575624464571
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  398  <|@ instruction CMP stack:40|DWORD y: 256 size: WORD <|@ <|@
      nr  400  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B42 -> B43 falseDestination: B42 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4569165575624464571
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  404  <|@ instruction rbx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction rsi|DWORD[.] = MOV [r10|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  408  <|@ st <@st|@reference-map: [rsi:0, r11:0, stack:24, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: r11|DWORD[.] rbx|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:72|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] stack:32|QWORD[.] stack:52|DWORD stack:48|QWORD[.] rbx|DWORD 
>@ <|@ instruction CMP (x: rbx|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:8, 5, 18] <|@ <|@
      nr  410  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B43 -> B44 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B52" 
    xhandlers
    flags 
    probability 4569165575624464571
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  414  <|@ instruction rdx|QWORD = MOVZX stack:40|DWORD size: DWORD <|@ <|@
      nr  416  <|@ instruction rsi|DWORD = MOVZXB [rdx|QWORD + rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~[] destination: B44 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B39" 
    xhandlers
    flags 
    probability 4569122318317643243
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  206  <|@ instruction stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  208  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  214  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction JUMP ~[] destination: B24 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B24" 
    successors "B40" "B49" 
    xhandlers
    flags 
    probability 4569186648162324981
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  368  <|@ instruction rsi|DWORD[.] = MOV [r9|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  370  <|@ st <@st|@reference-map: [rsi:0, r9:0, stack:24, stack:36, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: r9|DWORD[.] rbx|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:60|DWORD[.] rbx|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:72|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] stack:32|QWORD[.] stack:52|DWORD stack:48|QWORD[.] rbx|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:8, 5, 5, 18] <|@ <|@
      nr  372  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3 <|@ <|@
      nr  374  <|@ instruction rdx|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ st <@st|@reference-map: [stack:24, stack:36, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:60|DWORD[.] stack:36|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:72|QWORD[.] stack:36|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] stack:32|QWORD[.] stack:52|DWORD stack:48|QWORD[.] stack:36|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 5, 18] <|@ <|@
      nr  378  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  380  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B84" 
    xhandlers
    flags 
    probability 4569100426553690526
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  468  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  470  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B49 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B99" 
    xhandlers
    flags 
    probability 4568252242827848031
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  694  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3 <|@ <|@
      nr  696  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  698  <|@ instruction stack:60|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  700  <|@ instruction stack:88|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction r11|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction JUMP ~[] destination: B76 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" 
    xhandlers
    flags 
    probability 4564618572190845318
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ instruction stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  272  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  278  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction JUMP ~[] destination: B31 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B31" 
    successors "B38" "B50" 
    xhandlers
    flags 
    probability 4567399126910536796
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  344  <|@ instruction rsi|DWORD[.] = MOV [rax|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  346  <|@ st <@st|@reference-map: [rax:0, rsi:0, stack:20, stack:24, stack:36, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: rax|DWORD[.] stack:36|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:76|DWORD[.] stack:36|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:60|DWORD[.] stack:36|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:72|QWORD[.] stack:36|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] stack:32|QWORD[.] stack:52|DWORD stack:48|QWORD[.] stack:36|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:8, 5, 5, 5, 18] <|@ <|@
      nr  348  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3 <|@ <|@
      nr  350  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ st <@st|@reference-map: [stack:20, stack:24, stack:36, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:76|DWORD[.] stack:36|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:60|DWORD[.] stack:36|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:72|QWORD[.] stack:36|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] stack:32|QWORD[.] stack:52|DWORD stack:48|QWORD[.] stack:36|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 5, 5, 18] <|@ <|@
      nr  354  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  356  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B52" 
    xhandlers
    flags 
    probability 4567334797065855058
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  476  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  478  <|@ instruction JUMP ~[] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560198542224662117
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  338  <|@ instruction rax|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4540643007714694606
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  384  <|@ instruction r11|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" 
    xhandlers
    flags 
    probability 4538855445253981485
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  360  <|@ instruction r9|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction rbx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  974  <|@ instruction r11|DWORD = MOVE input: int[-273691|0xfffffffffffbd2e5] <|@ <|@
      nr  976  <|@ instruction rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  978  <|@ instruction JUMP ~[] destination: B104 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" "B87" "B106" "B105" "B104" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1008  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1010  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1012  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:48]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: r10|DWORD 
locals: rsi|QWORD[.] rbp|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: rsi|QWORD[.] rdx|QWORD[.] stack:52|DWORD stack:48|QWORD[.] rbp|DWORD 
>@ <|@ instruction DEOPT info [bci:8, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  538  <|@ instruction r10|DWORD = MOVE input: int[-240147|0xfffffffffffc55ed] <|@ <|@
      nr  540  <|@ instruction rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  542  <|@ instruction JUMP ~[] destination: B57 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B57" "B80" "B79" "B78" "B70" "B77" "B72" "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 2370019303903723520
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  750  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  752  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  754  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:48]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rbp|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: rsi|QWORD[.] rdx|QWORD[.] stack:52|DWORD stack:48|QWORD[.] rbp|DWORD 
>@ <|@ instruction DEOPT info [bci:8, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1046  <|@ instruction r10|DWORD = MOVE input: int[-210203|0xfffffffffffccae5] <|@ <|@
      nr 1048  <|@ instruction JUMP ~[] destination: B114 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" "B3" "B116" "B115" "B114" "B113" "B112" "B12" "B111" "B19" "B110" "B26" "B109" "B33" 
    successors 
    xhandlers
    flags 
    probability 2372271103717408768
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1070  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1072  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1074  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0]
live-base-pointers: []
java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  434  <|@ instruction r10|DWORD = MOVE input: int[-227859|0xfffffffffffc85ed] <|@ <|@
      nr  436  <|@ instruction rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  442  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  438  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  440  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  450  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r11:0, stack:48]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: r11|DWORD[.] rbp|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: rsi|QWORD[.] rbp|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: rsi|QWORD[.] rdx|QWORD[.] stack:52|DWORD stack:48|QWORD[.] rbp|DWORD 
>@ <|@ instruction DEOPT info [bci:8, 5, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  654  <|@ instruction r10|DWORD = MOVE input: int[-258323|0xfffffffffffc0eed] <|@ <|@
      nr  656  <|@ instruction JUMP ~[] destination: B72 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  642  <|@ instruction r10|DWORD = MOVE input: int[-258067|0xfffffffffffc0fed] <|@ <|@
      nr  644  <|@ instruction JUMP ~[] destination: B70 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  708  <|@ instruction r10|DWORD = MOVE input: int[-256819|0xfffffffffffc14cd] <|@ <|@
      nr  710  <|@ instruction rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  712  <|@ instruction JUMP ~[] destination: B77 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  860  <|@ instruction r11|DWORD = MOVE input: int[-277267|0xfffffffffffbc4ed] <|@ <|@
      nr  862  <|@ instruction JUMP ~[] destination: B93 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B93" "B95" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  876  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  878  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  880  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  882  <|@ st <@st|@reference-map: [rax:0, rdx:0, stack:48]
live-base-pointers: []
java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63]
locals: rax|QWORD[.] rdx|QWORD[.] rdi|DWORD stack:48|QWORD[.] rcx|DWORD r10|DWORD rsi|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:63, 37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  716  <|@ instruction r10|DWORD = MOVE input: int[-250395|0xfffffffffffc2de5] <|@ <|@
      nr  718  <|@ instruction rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  720  <|@ instruction JUMP ~[] destination: B78 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  732  <|@ instruction r10|DWORD = MOVE input: int[-238107|0xfffffffffffc5de5] <|@ <|@
      nr  734  <|@ instruction rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  736  <|@ instruction JUMP ~[] destination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  724  <|@ instruction r10|DWORD = MOVE input: int[-248091|0xfffffffffffc36e5] <|@ <|@
      nr  726  <|@ instruction rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  728  <|@ instruction JUMP ~[] destination: B79 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  604  <|@ instruction MOV [r15|QWORD + 668] y: -233491 size: DWORD <|@ <|@
      nr  606  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  608  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:48]
live-base-pointers: []
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rdx|QWORD[.] stack:52|DWORD stack:48|QWORD[.] rbp|DWORD 
>@ <|@ instruction DEOPT info [bci:21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  982  <|@ instruction r11|DWORD = MOVE input: int[-271387|0xfffffffffffbdbe5] <|@ <|@
      nr  984  <|@ instruction rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  986  <|@ instruction JUMP ~[] destination: B105 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  290  <|@ instruction r10|DWORD = MOVE input: int[-222739|0xfffffffffffc99ed] <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B33 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1014  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1016  <|@ instruction r10|DWORD = MOVE input: int[-220467|0xfffffffffffca2cd] <|@ <|@
      nr 1018  <|@ instruction JUMP ~[] destination: B109 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  966  <|@ instruction MOV [r15|QWORD + 668] y: -284723 size: DWORD <|@ <|@
      nr  968  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  970  <|@ st <@st|@reference-map: [rdx:0, stack:8, stack:48]
live-base-pointers: []
java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63]
locals: stack:88|QWORD[.] rdx|QWORD[.] rdi|DWORD stack:48|QWORD[.] rcx|DWORD stack:60|DWORD stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:63, 37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  226  <|@ instruction r10|DWORD = MOVE input: int[-220179|0xfffffffffffca3ed] <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B26 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  622  <|@ instruction r10|DWORD = MOVE input: int[-255771|0xfffffffffffc18e5] <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B67 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  996  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  998  <|@ instruction r11|DWORD = MOVE input: int[-259379|0xfffffffffffc0acd] <|@ <|@
      nr 1000  <|@ instruction rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1002  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1004  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1022  <|@ instruction r10|DWORD = MOVE input: int[-217907|0xfffffffffffcaccd] <|@ <|@
      nr 1024  <|@ instruction JUMP ~[] destination: B110 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  990  <|@ instruction r11|DWORD = MOVE input: int[-262171|0xfffffffffffbffe5] <|@ <|@
      nr  992  <|@ instruction rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  994  <|@ instruction JUMP ~[] destination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  616  <|@ instruction r10|DWORD = MOVE input: int[-253203|0xfffffffffffc22ed] <|@ <|@
      nr  618  <|@ instruction JUMP ~[] destination: B66 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1026  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1028  <|@ instruction r10|DWORD = MOVE input: int[-215347|0xfffffffffffcb6cd] <|@ <|@
      nr 1030  <|@ instruction JUMP ~[] destination: B111 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1062  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1064  <|@ instruction r10|DWORD = MOVE input: int[-206099|0xfffffffffffcdaed] <|@ <|@
      nr 1066  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  740  <|@ instruction r10|DWORD = MOVE input: int[-234803|0xfffffffffffc6acd] <|@ <|@
      nr  742  <|@ instruction rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  744  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction JUMP ~[] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1052  <|@ instruction r10|DWORD = MOVE input: int[-209427|0xfffffffffffccded] <|@ <|@
      nr 1054  <|@ instruction JUMP ~[] destination: B115 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  798  <|@ instruction r11|DWORD = MOVE input: int[-263955|0xfffffffffffbf8ed] <|@ <|@
      nr  800  <|@ instruction rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  802  <|@ instruction JUMP ~[] destination: B87 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1038  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1040  <|@ instruction r10|DWORD = MOVE input: int[-212243|0xfffffffffffcc2ed] <|@ <|@
      nr 1042  <|@ instruction JUMP ~[] destination: B113 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  422  <|@ instruction r10|DWORD = MOVE input: int[-230427|0xfffffffffffc7be5] <|@ <|@
      nr  424  <|@ instruction rbp|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1034  <|@ instruction r10|DWORD = MOVE input: int[-212531|0xfffffffffffcc1cd] <|@ <|@
      nr 1036  <|@ instruction JUMP ~[] destination: B112 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  164  <|@ instruction r10|DWORD = MOVE input: int[-217619|0xfffffffffffcaded] <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B19 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction r10|DWORD = MOVE input: int[-206867|0xfffffffffffcd7ed] <|@ <|@
      nr   28  <|@ instruction JUMP ~[] destination: B3 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1056  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1058  <|@ instruction r10|DWORD = MOVE input: int[-206643|0xfffffffffffcd8cd] <|@ <|@
      nr 1060  <|@ instruction JUMP ~[] destination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  102  <|@ instruction r10|DWORD = MOVE input: int[-215059|0xfffffffffffcb7ed] <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B12 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  944  <|@ instruction r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  946  <|@ instruction r10|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction r11|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  950  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  952  <|@ instruction MOV [r15|QWORD + 668] y: -286739 size: DWORD <|@ <|@
      nr  954  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  956  <|@ st <@st|@reference-map: [rdx:0, r11:0]
live-base-pointers: []
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 10]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
locals: r11|QWORD[.] rdx|QWORD[.] - - - r10|DWORD r8|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:10, 70, 37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  872  <|@ instruction r11|DWORD = MOVE input: int[-293147|0xfffffffffffb86e5] <|@ <|@
      nr  874  <|@ instruction JUMP ~[] destination: B95 -> B96 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: aload_1       
     2: getfield      #3          // java.util.regex.Matcher.to:int
     5: if_icmpge     49
     8: aload_3       
     9: iload_2       
    10: invokestatic  #4          // java.lang.Character.codePointAt:(java.lang.CharSequence, int)int
    13: istore        4
    15: aload_0       
    16: iload         4
    18: invokevirtual #5          // isSatisfiedBy:(int)boolean
    21: ifeq          47
    24: aload_0       
    25: getfield      #6          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    28: aload_1       
    29: iload_2       
    30: iload         4
    32: invokestatic  #7          // java.lang.Character.charCount:(int)int
    35: iadd          
    36: aload_3       
    37: invokevirtual #8          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    40: ifeq          47
    43: iconst_1      
    44: goto          48
    47: iconst_0      
    48: ireturn       
    49: aload_1       
    50: iconst_1      
    51: putfield      #9          // java.util.regex.Matcher.hitEnd:boolean
    54: iconst_0      
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec5848896c245048895424403b4a100f8de707000041817808addeadde0f854b08000085c90f8c38080000458b500c468b1cd50c000000443bd90f8edb070000443bd90f865f06000049c1e203450fbf544a10664181fa00d80f83d6070000817e08addeadde0f85e1070000448b5e10468b0cdd08000000410fb7da895c243c8bf9ffc74181f9addeadde0f8517010000423b1cdd100000000f8cff020000423b1cdd140000000f8fcc07000041ba01000000897c24284c89442430894c242c8b460c813cc508000000addeadde0f85e4060000488b5424408b4a3c448b04cd0c000000448b1cc510000000453bc30f86e206000048c1e103428b4c991085c90f8c20070000448b4234468b1cc50c000000448b0cc514000000453bd90f8642060000418bd9ffc3443bdb0f863b0500008b7c2428448b1cc50c000000428b2cdd0800000049c1e003418b749810478b54881043894c881041897c981048c1e00381fdaddeadde0f8514010000837a18010f848f0500004183780c020f822e070000897a208b421c4189401041897814b801000000488b6c24504883c458850500000000c5f877c34181f9addeadde0f853c06000044895c2424468b0cdd10000000428b04cd0800000081f8addeadde0f8534000000423b1ccd100000000f8c0e030000423b1ccd140000000f8f6606000041ba01000000897c24284c89442430894c242ce9b6feffff81f8addeadde0f85b605000044894c2414428b04cd100000008b2cc50800000081fdaddeadde0f85be0000003b1cc5100000000f8c4b0300003b1cc5140000000f8f52050000897c242844895424384c89442430894c242c4889742418be0100000085f60f84d7020000448bd6488b742418e93ffeffff49c1e3038974243844895424244889442408458b43084181f8addeadde0f85e6040000458b430c438504c449c1e003498bf04c8bca8bcf4c8b44243048b8ffffffffffffffff0f1f8000000000e8000000009085c00f84a8050000b801000000488b6c24504883c458850500000000c5f877c381fdaddeadde0f857f0400008b2cc510000000448b2ced080000004181fdaddeadde0f853b0000003b1ced100000000f8cd50200003b1ced140000000f8f3e040000897c242844895424384c89442430894c242c4889742418be01000000e915ffffff89442410897c242844895424384c89442430894c242c488974241848c1e503488bf58bd348b8ffffffffffffffff90e8000000009085c00f84ba020000be01000000e9cefeffff44895424384c89442430894c242c448b5614438504d4448b5e0c42813cdd08000000addeadde0f853d040000488b542440448b423c468b0cc50c000000428b0cdd10000000443bc90f864303000049c1e003418b4c881085c90f8c8d020000448b4234468b0cc50c000000428b1cdd14000000443bcb0f86240300008bc3ffc0443bc80f86f9020000468b0cdd0c000000438504cc428b2cd50800000081fdaddeadde0f846e00000081fdaddeadde0f85a70200008b6c243c423b2cd5100000000f8c8d020000423b2cd5140000000f8f7702000049c1e003458b548010418b74981041894c981041897c801049c1e30342813ccd08000000addeadde0f8543010000498bc389742438418bf2448b542438e9b8fcffff8b6c243c468b14d510000000423b2cd50c0000000f83de02000066817c243800010f830a030000440fb76c2438470fb654d5104585d27586e95b020000897c242844895424384c89442430894c242c4889742418468b14dd1400000042813cd508000000addeadde0f843600000049c1e203498bf28b54243c48b8ffffffffffffffff660f1f440000e800000000908bf0e921fdffff8b7c2428488b742418e953feffff66817c243800010f835c0100008b5c243c428b34d5100000003b1cf50c0000000f83c10200000fb75424380fb674f210e9defcffff897c242844895424384c89442430894c242c4889742418428b34cd14000000418504f448c1e6038bd348b8ffffffffffffffff0f1f440000e8000000009085c00f848000000041ba01000000488b742418e9dcfaffff49c1e1034489542438897424244c895c24084d8bd9e995fcffff897c242844895424384c89442430894c242c48897424188b34c514000000418504f448c1e6038b54243c48b8ffffffffffffffff0f1f4000e8000000009085c00f841a000000be01000000e91efcffff8b442410ebc1448b5c2424e9abfeffff448b4c24148b5c243ce939ffffff41bbe5d2fbff8b6c243c45899f9c0200004d89a7a8020000e8000000009041baed55fcff8b6c243c4589979c0200004d89a7a8020000e8000000009041bae5cafcff4589979c0200004d89a7a8020000e8000000009041baed85fcff8b6c243c488b542440488b7424184589979c0200004d89a7a8020000e8000000009041baed0efcffeba241baed0ffcffeb9a41bacd14fcff8b6c243ceb8e41bbedc4fbff45899f9c0200004d89a7a8020000e8000000009041bae52dfcff8b6c243ce965ffffff41bae55dfcff8b6c243ce956ffffff41bae536fcff8b6c243ce947ffffff41c7879c020000ed6ffcff4d89a7a8020000e8000000009041bbe5dbfbff8b6c243ce902ffffff41baed99fcffe92fffffff41bacda2fcffe924ffffff41c7879c020000cda7fbff4d89a7a8020000e8000000009041baeda3fcffe901ffffff41bae518fcffe9dcfeffff41bbcd0afcff8b6c243c488b542440e9aafeffff41bacdacfcffe9d7feffff41bbe5fffbff8b6c243ce990feffff41baed22fcffe9a3feffff41bacdb6fcffe9b2feffff41baeddafcffe9a7feffff41bacd6afcff8b6c243c488b542440e979feffff41baedcdfcffe988feffff41bbedf8fbff8b6c243ce941feffff41baedc2fcffe96efeffff41bae57bfcff8bebe97ffeffff41bacdc1fcffe956feffff41baedadfcffe94bfeffff41baedd7fcffe940feffff41bacdd8fcffe935feffff41baedb7fcffe92afeffff448b442438448b5424244c8b5c2408488b54244041c7879c020000ed9ffbff4d89a7a8020000e8000000009041bbe586fbffe951feffffe80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@714f65ea slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 CMP (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) size: DWORD state [bci:0]  <||@
  Comment 53 [rdx:0, rsi:0, r8:0, stack:64]at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-   <||@
  Comment 53 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 56 10 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B117  <||@
  Comment 62 block B1 null  <||@
  Comment 62 12 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 62 14 CMP [r8|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0]  <||@
  Comment 62 [rdx:0, rsi:0, r8:0, stack:64]at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-   <||@
  Comment 62 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 62 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 70 16 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B116  <||@
  Comment 76 block B2 null  <||@
  Comment 76 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 76 20 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 78 22 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 84 block B4 null  <||@
  Comment 84 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 84 32 r10|DWORD[.] = MOV [r8|QWORD[.] + 12] size: DWORD  <||@
  Comment 88 34 r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 88 [rdx:0, rsi:0, r8:0, r10:0, stack:64]at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-   <||@
  Comment 88 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 96 36 CMP (x: r11|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 99 38 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B115  <||@
  Comment 105 block B5 null  <||@
  Comment 105 40 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 105 42 CMP (x: r11|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 108 44 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B114  <||@
  Comment 114 block B6 null  <||@
  Comment 114 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 114 48 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3  <||@
  Comment 118 50 r10|DWORD = MOVSX [r10|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 124 52 CMP r10|DWORD y: -10240 size: WORD  <||@
  Comment 130 54 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B113  <||@
  Comment 136 block B7 null  <||@
  Comment 136 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 136 58 CMP [rsi|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}  <||@
  Comment 136 {meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}}  <||@
  Comment 143 60 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B112  <||@
  Comment 149 block B8 null  <||@
  Comment 149 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 149 64 r11|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 153 66 r9|DWORD = MOV [r11|DWORD[.] * 8 + 8] size: DWORD state [bci:0]  <||@
  Comment 153 [rdx:0, rsi:0, r8:0, r11:0, stack:64]at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-   <||@
  Comment 153 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 161 68 rbx|DWORD = MOVZX r10|DWORD size: DWORD  <||@
  Comment 165 70 stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 169 72 rdi|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 173 74 CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 173 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 180 76 BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B14  <||@
  Comment 186 block B9 null  <||@
  Comment 186 78 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 186 80 CMP (x: rbx|DWORD, y: [r11|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 194 82 BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11  <||@
  Comment 200 block B11 null  <||@
  Comment 200 94 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 200 96 CMP (x: rbx|DWORD, y: [r11|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 208 98 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B11 -> B12 falseDestination: B11 -> B13  <||@
  Comment 214 block B13 null  <||@
  Comment 214 106 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 214 108 r10|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 220 110 stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 224 112 stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 229 114 stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 233 116 JUMP ~[] destination: B13 -> B84  <||@
  Comment 233 block B84 null  <||@
  Comment 233 764 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 233 766 rax|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 236 768 CMP [rax|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:8, 18]  <||@
  Comment 236 [rax:0, rsi:0, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1              
     locals:  |rsi|QWORD[.]  |stack:36|DWORD 
     stack:   |r10|DWORD     |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0             |1                  |2               |3                  |4              
     locals:  |rsi|QWORD[.]  |stack:32|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |stack:36|DWORD   <||@
  Comment 236 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 236 {meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed}}  <||@
  Comment 247 770 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B107  <||@
  Comment 253 block B85 null  <||@
  Comment 253 772 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 253 774 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 258 776 rcx|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD  <||@
  Comment 261 778 r8|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18]  <||@
  Comment 261 [rax:0, rcx:0, rdx:0, rsi:0, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1              
     locals:  |rsi|QWORD[.]  |stack:36|DWORD 
     stack:   |r10|DWORD     |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0             |1             |2               |3                  |4              
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |stack:36|DWORD   <||@
  Comment 261 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 269 780 r11|DWORD = MOV [rax|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 277 782 CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 280 784 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B85 -> B86 falseDestination: B85 -> B106  <||@
  Comment 286 block B86 null  <||@
  Comment 286 786 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 286 788 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3  <||@
  Comment 290 790 rcx|DWORD = MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD  <||@
  Comment 295 792 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 297 794 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B86 -> B87 falseDestination: B86 -> B88  <||@
  Comment 303 block B88 null  <||@
  Comment 303 804 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 303 806 r8|DWORD[.] = MOV [rdx|QWORD[.] + 52] size: DWORD  <||@
  Comment 307 808 r11|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18]  <||@
  Comment 307 [rax:0, rdx:0, rsi:0, r8:0, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1              
     locals:  |rsi|QWORD[.]  |stack:36|DWORD 
     stack:   |r10|DWORD     |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0             |1             |2               |3                  |4              
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |stack:36|DWORD   <||@
  Comment 307 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 315 810 r9|DWORD = MOV [rax|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 323 812 CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 326 814 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B88 -> B89 falseDestination: B88 -> B105  <||@
  Comment 332 block B89 null  <||@
  Comment 332 816 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 332 818 rbx|DWORD = INC r9|DWORD size: DWORD  <||@
  Comment 337 820 CMP (x: r11|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 340 822 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B89 -> B90 falseDestination: B89 -> B104  <||@
  Comment 346 block B90 null  <||@
  Comment 346 824 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 346 826 rdi|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 350 828 r11|DWORD[.] = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 358 830 rbp|DWORD = MOV [r11|DWORD[.] * 8 + 8] size: DWORD state [bci:8, 18]  <||@
  Comment 358 [rax:0, rdx:0, rsi:0, r8:0, r11:0, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1              
     locals:  |rsi|QWORD[.]  |stack:36|DWORD 
     stack:   |r10|DWORD     |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0             |1             |2               |3                  |4              
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |stack:36|DWORD   <||@
  Comment 358 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 366 832 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3  <||@
  Comment 370 834 rsi|DWORD = MOV [r8|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 375 836 r10|DWORD = MOV [r8|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD  <||@
  Comment 380 838 MOV (x: [r8|QWORD[.] + r9|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD  <||@
  Comment 385 840 MOV (x: [r8|QWORD[.] + rbx|DWORD * 4 + 16], y: rdi|DWORD) size: DWORD  <||@
  Comment 390 842 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3  <||@
  Comment 394 844 CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}  <||@
  Comment 394 {meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}}  <||@
  Comment 400 846 BRANCH trueDestinationProbability: 0.8257972313536578 condition: = trueDestination: B90 -> B92 falseDestination: B90 -> B98  <||@
  Comment 406 block B92 null  <||@
  Comment 406 852 [] = LABEL numbPhis: 5 align: false label: ?  <||@
  Comment 406 854 CMP [rdx|QWORD[.] + 24] y: 1 size: DWORD  <||@
  Comment 410 856 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B94  <||@
  Comment 416 block B94 null  <||@
  Comment 416 864 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 416 866 CMP [r8|QWORD[.] + 12] y: 2 size: DWORD  <||@
  Comment 421 868 BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B94 -> B95 falseDestination: B94 -> B97  <||@
  Comment 427 block B97 null  <||@
  Comment 427 884 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 427 886 MOV (x: [rdx|QWORD[.] + 32], y: rdi|DWORD) size: DWORD  <||@
  Comment 430 888 rax|DWORD = MOV [rdx|QWORD[.] + 28] size: DWORD  <||@
  Comment 433 890 MOV (x: [r8|QWORD[.] + 16], y: rax|DWORD) size: DWORD  <||@
  Comment 437 892 MOV (x: [r8|QWORD[.] + 20], y: rdi|DWORD) size: DWORD  <||@
  Comment 441 894 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 446 896 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 455 12  <||@
  Comment 465 block B14 null  <||@
  Comment 465 118 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 465 120 CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}  <||@
  Comment 465 {meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}}  <||@
  Comment 472 122 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B111  <||@
  Comment 478 block B15 null  <||@
  Comment 478 124 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 478 126 stack:60|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 483 128 r9|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 491 130 rax|DWORD = MOV [r9|DWORD[.] * 8 + 8] size: DWORD state [bci:0]  <||@
  Comment 491 [rdx:0, rsi:0, r8:0, r9:0, r11:0, stack:36, stack:64]at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-   <||@
  Comment 491 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 499 132 CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 499 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 505 134 BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B21  <||@
  Comment 511 block B16 null  <||@
  Comment 511 136 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 511 138 CMP (x: rbx|DWORD, y: [r9|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 519 140 BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18  <||@
  Comment 525 block B18 null  <||@
  Comment 525 156 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 525 158 CMP (x: rbx|DWORD, y: [r9|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 533 160 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20  <||@
  Comment 539 block B20 null  <||@
  Comment 539 168 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 539 170 r10|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 545 172 stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 549 174 stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 554 176 stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 558 178 JUMP ~[] destination: B20 -> B84  <||@
  Comment 563 block B21 null  <||@
  Comment 563 180 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 563 182 CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}  <||@
  Comment 563 {meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}}  <||@
  Comment 569 184 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B110  <||@
  Comment 575 block B22 null  <||@
  Comment 575 186 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 575 188 stack:76|DWORD[.] = MOVE r9|DWORD[.] moveKind: DWORD  <||@
  Comment 580 190 rax|DWORD[.] = MOV [r9|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 588 192 rbp|DWORD = MOV [rax|DWORD[.] * 8 + 8] size: DWORD state [bci:0]  <||@
  Comment 588 [rax:0, rdx:0, rsi:0, r8:0, r9:0, stack:20, stack:36, stack:64]at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-   <||@
  Comment 588 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 595 194 CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 595 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 601 196 BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B28  <||@
  Comment 607 block B23 null  <||@
  Comment 607 198 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 607 200 CMP (x: rbx|DWORD, y: [rax|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 614 202 BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25  <||@
  Comment 620 block B25 null  <||@
  Comment 620 218 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 620 220 CMP (x: rbx|DWORD, y: [rax|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 627 222 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27  <||@
  Comment 633 block B27 null  <||@
  Comment 633 230 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 633 232 stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 637 234 stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 642 236 stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 647 238 stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 651 240 stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 656 242 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 661 244 JUMP ~[] destination: B27 -> B52  <||@
  Comment 661 block B52 null  <||@
  Comment 661 486 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 661 488 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 663 490 BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B83  <||@
  Comment 669 block B83 null  <||@
  Comment 669 756 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 669 758 r10|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 672 760 rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 677 762 JUMP ~[] destination: B83 -> B84  <||@
  Comment 682 block B98 null  <||@
  Comment 682 898 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 682 900 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3  <||@
  Comment 686 902 stack:40|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 690 904 stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 695 906 stack:88|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 700 908 JUMP ~[] destination: B98 -> B99  <||@
  Comment 700 block B99 null  <||@
  Comment 700 910 [] = LABEL numbPhis: 5 align: false label: ?  <||@
  Comment 700 912 r8|DWORD = MOV [r11|QWORD[.] + 8] size: DWORD  <||@
  Comment 704 914 CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BranchConn;, resolved>;compressed}  <||@
  Comment 704 {meta{HotSpotType<Ljava/util/regex/Pattern$BranchConn;, resolved>;compressed}}  <||@
  Comment 711 916 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B103  <||@
  Comment 717 block B100 null  <||@
  Comment 717 918 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 717 920 r8|DWORD[.] = MOV [r11|QWORD[.] + 12] size: DWORD  <||@
  Comment 721 922 NULLCHECK [r12|QWORD[*] + r8|DWORD[.] * 8] state [bci:63, 37]  <||@
  Comment 721 [rdx:0, r8:0, stack:8, stack:48, stack:64]at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63, duringCall: false, rethrow: false]
              |0                  |1             |2          |3                  |4          |5               |6              
     locals:  |stack:88|QWORD[.]  |rdx|QWORD[.]  |rdi|DWORD  |stack:48|QWORD[.]  |rcx|DWORD  |stack:60|DWORD  |stack:40|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 721 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 725 924 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3  <||@
  Comment 729 926 rsi|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 732 928 r9|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 735 932 rcx|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 737 934 r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 742 936 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:7, 70, 37]  <||@
  Comment 742 7  <||@
  Comment 759 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 764 [stack:8, stack:64]at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4  |5               |6              
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |stack:60|DWORD  |stack:40|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 765 938 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 767 940 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B102  <||@
  Comment 773 block B102 null  <||@
  Comment 773 958 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 773 960 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 778 962 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 787 12  <||@
  Comment 797 block B28 null  <||@
  Comment 797 246 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 797 248 CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}  <||@
  Comment 797 {meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}}  <||@
  Comment 803 250 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B109  <||@
  Comment 809 block B29 null  <||@
  Comment 809 252 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 809 254 rbp|DWORD[.] = MOV [rax|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 816 256 r13|DWORD = MOV [rbp|DWORD[.] * 8 + 8] size: DWORD state [bci:0]  <||@
  Comment 816 [rax:0, rdx:0, rbp:0, rsi:0, r8:0, stack:20, stack:36, stack:64]at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-   <||@
  Comment 816 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 824 258 CMP r13|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 824 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 831 260 BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B35  <||@
  Comment 837 block B30 null  <||@
  Comment 837 262 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 837 264 CMP (x: rbx|DWORD, y: [rbp|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 844 266 BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B30 -> B31 falseDestination: B30 -> B32  <||@
  Comment 850 block B32 null  <||@
  Comment 850 282 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 850 284 CMP (x: rbx|DWORD, y: [rbp|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 857 286 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B34  <||@
  Comment 863 block B34 null  <||@
  Comment 863 294 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 863 296 stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 867 298 stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 872 300 stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 877 302 stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 881 304 stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 886 306 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 891 308 JUMP ~[] destination: B34 -> B52  <||@
  Comment 896 block B35 null  <||@
  Comment 896 310 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 896 312 stack:80|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD  <||@
  Comment 900 314 stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 904 316 stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 909 318 stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 914 320 stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 918 322 stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 923 324 rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3  <||@
  Comment 927 326 rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 930 328 rdx|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 932 330 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:5, 5, 5, 5, 18]  <||@
  Comment 932 7  <||@
  Comment 943 {HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>}  <||@
  Comment 948 [stack:16, stack:20, stack:24, stack:36, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:80|DWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:76|DWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:60|DWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:72|QWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |stack:36|DWORD   <||@
  Comment 949 332 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 951 334 BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B51  <||@
  Comment 957 block B51 null  <||@
  Comment 957 480 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 957 482 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 962 484 JUMP ~[] destination: B51 -> B52  <||@
  Comment 967 block B10 null  <||@
  Comment 967 84 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 967 86 stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 972 88 stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 977 90 stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 981 92 JUMP ~[] destination: B10 -> B54  <||@
  Comment 981 block B54 null  <||@
  Comment 981 500 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 981 502 r10|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 985 504 NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:8, 18]  <||@
  Comment 985 [rsi:0, r10:0, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1              
     locals:  |rsi|QWORD[.]  |stack:36|DWORD 
     stack:   |int[0|0x0]    |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0             |1                  |2               |3                  |4              
     locals:  |rsi|QWORD[.]  |stack:32|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |stack:36|DWORD   <||@
  Comment 985 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 989 506 r11|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 993 508 CMP [r11|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:8, 18]  <||@
  Comment 993 [rsi:0, r10:0, r11:0, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1              
     locals:  |rsi|QWORD[.]  |stack:36|DWORD 
     stack:   |int[0|0x0]    |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0             |1                  |2               |3                  |4              
     locals:  |rsi|QWORD[.]  |stack:32|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |stack:36|DWORD   <||@
  Comment 993 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 993 {meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed}}  <||@
  Comment 1005 510 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B81  <||@
  Comment 1011 block B55 null  <||@
  Comment 1011 512 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1011 514 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1016 516 r8|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD  <||@
  Comment 1020 518 r9|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18]  <||@
  Comment 1020 [rdx:0, rsi:0, r8:0, r10:0, r11:0, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1              
     locals:  |rsi|QWORD[.]  |stack:36|DWORD 
     stack:   |int[0|0x0]    |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0             |1             |2               |3                  |4              
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |stack:36|DWORD   <||@
  Comment 1020 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1028 520 rcx|DWORD = MOV [r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1036 522 CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 1039 524 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B80  <||@
  Comment 1045 block B56 null  <||@
  Comment 1045 526 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1045 528 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3  <||@
  Comment 1049 530 rcx|DWORD = MOV [r8|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1054 532 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 1056 534 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B56 -> B57 falseDestination: B56 -> B58  <||@
  Comment 1062 block B58 null  <||@
  Comment 1062 544 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1062 546 r8|DWORD[.] = MOV [rdx|QWORD[.] + 52] size: DWORD  <||@
  Comment 1066 548 r9|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18]  <||@
  Comment 1066 [rdx:0, rsi:0, r8:0, r10:0, r11:0, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1              
     locals:  |rsi|QWORD[.]  |stack:36|DWORD 
     stack:   |int[0|0x0]    |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0             |1             |2               |3                  |4              
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |stack:36|DWORD   <||@
  Comment 1066 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1074 550 rbx|DWORD = MOV [r11|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 1082 552 CMP (x: r9|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 1085 554 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B79  <||@
  Comment 1091 block B59 null  <||@
  Comment 1091 556 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1091 558 rax|DWORD = INC rbx|DWORD size: DWORD  <||@
  Comment 1095 560 CMP (x: r9|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1098 562 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B78  <||@
  Comment 1104 block B60 null  <||@
  Comment 1104 564 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1104 566 r9|DWORD[.] = MOV [r11|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1112 568 NULLCHECK [r12|QWORD[*] + r9|DWORD[.] * 8] state [bci:8, 18]  <||@
  Comment 1112 [rdx:0, rsi:0, r8:0, r9:0, r10:0, r11:0, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1              
     locals:  |rsi|QWORD[.]  |stack:36|DWORD 
     stack:   |int[0|0x0]    |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0             |1             |2               |3                  |4              
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |stack:36|DWORD   <||@
  Comment 1112 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1116 570 rbp|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 1124 572 CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}  <||@
  Comment 1124 {meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}}  <||@
  Comment 1130 574 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B68  <||@
  Comment 1136 block B68 null  <||@
  Comment 1136 626 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1136 628 CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 1136 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 1142 630 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B77  <||@
  Comment 1148 block B69 null  <||@
  Comment 1148 632 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1148 634 rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1152 636 CMP (x: rbp|DWORD, y: [r10|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 1160 638 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B69 -> B70 falseDestination: B69 -> B71  <||@
  Comment 1166 block B71 null  <||@
  Comment 1166 646 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1166 648 CMP (x: rbp|DWORD, y: [r10|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 1174 650 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B71 -> B72 falseDestination: B71 -> B74  <||@
  Comment 1180 block B74 null  <||@
  Comment 1180 662 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1180 664 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3  <||@
  Comment 1184 666 r10|DWORD = MOV [r8|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1189 668 rsi|DWORD = MOV [r8|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1194 670 MOV (x: [r8|QWORD[.] + rbx|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD  <||@
  Comment 1199 672 MOV (x: [r8|QWORD[.] + rax|DWORD * 4 + 16], y: rdi|DWORD) size: DWORD  <||@
  Comment 1204 674 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3  <||@
  Comment 1208 676 CMP [r9|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}  <||@
  Comment 1208 {meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}}  <||@
  Comment 1220 678 BRANCH trueDestinationProbability: 0.8257972313536578 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76  <||@
  Comment 1226 block B75 null  <||@
  Comment 1226 680 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1226 682 rax|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1229 684 stack:40|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1233 686 rsi|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1236 688 r10|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1241 690 JUMP ~[] destination: B75 -> B92  <||@
  Comment 1246 block B61 null  <||@
  Comment 1246 576 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1246 578 rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1250 580 r10|DWORD[.] = MOV [r10|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1258 582 CMP (x: rbp|DWORD, y: [r10|DWORD[.] * 8 + 12]) size: DWORD state [bci:8, 18]  <||@
  Comment 1258 [rdx:0, rsi:0, r8:0, r9:0, r10:0, r11:0, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rbp|DWORD 
     stack:   |int[0|0x0]    |          
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0             |1             |2               |3                  |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |rbp|DWORD   <||@
  Comment 1258 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1266 584 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B61 -> B62 falseDestination: B61 -> B67  <||@
  Comment 1272 block B62 null  <||@
  Comment 1272 586 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1272 588 CMP stack:40|DWORD y: 256 size: WORD  <||@
  Comment 1279 590 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B62 -> B63 falseDestination: B62 -> B66  <||@
  Comment 1285 block B63 null  <||@
  Comment 1285 592 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1285 594 r13|QWORD = MOVZX stack:40|DWORD size: DWORD  <||@
  Comment 1291 596 r10|DWORD = MOVZXB [r13|QWORD + r10|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1297 598 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 1300 600 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B74  <||@
  Comment 1307 block B17 null  <||@
  Comment 1307 142 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1307 144 stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1311 146 stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1316 148 stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1321 150 stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1325 152 stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1330 154 JUMP ~[] destination: B17 -> B41  <||@
  Comment 1330 block B41 null  <||@
  Comment 1330 388 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1330 390 r10|DWORD[.] = MOV [r11|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 1338 392 CMP [r10|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} state [bci:8, 5, 18]  <||@
  Comment 1338 [r10:0, r11:0, stack:24, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1              
     locals:  |r11|DWORD[.]  |stack:36|DWORD 
     stack:   |int[0|0x0]    |               
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:72|QWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |stack:36|DWORD   <||@
  Comment 1338 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1338 {meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}}  <||@
  Comment 1350 394 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B48  <||@
  Comment 1356 block B48 null  <||@
  Comment 1356 452 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1356 454 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3  <||@
  Comment 1360 456 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1363 458 rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1367 460 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 18]  <||@
  Comment 1367 7  <||@
  Comment 1383 {HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>}  <||@
  Comment 1388 [stack:24, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:72|QWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |stack:36|DWORD   <||@
  Comment 1389 462 rsi|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1391 464 JUMP ~[] destination: B48 -> B52  <||@
  Comment 1396 block B53 null  <||@
  Comment 1396 492 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1396 494 rdi|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 1400 496 rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1405 498 JUMP ~[] destination: B53 -> B54  <||@
  Comment 1410 block B42 null  <||@
  Comment 1410 396 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1410 398 CMP stack:40|DWORD y: 256 size: WORD  <||@
  Comment 1417 400 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B42 -> B43 falseDestination: B42 -> B46  <||@
  Comment 1423 block B43 null  <||@
  Comment 1423 402 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1423 404 rbx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1427 406 rsi|DWORD[.] = MOV [r10|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1435 408 CMP (x: rbx|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:8, 5, 18]  <||@
  Comment 1435 [rsi:0, r11:0, stack:24, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |r11|DWORD[.]  |rbx|DWORD 
     stack:   |int[0|0x0]    |          
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1         
     locals:  |stack:72|QWORD[.]  |rbx|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4         
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |rbx|DWORD   <||@
  Comment 1435 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1442 410 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B43 -> B44 falseDestination: B43 -> B45  <||@
  Comment 1448 block B44 null  <||@
  Comment 1448 412 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1448 414 rdx|QWORD = MOVZX stack:40|DWORD size: DWORD  <||@
  Comment 1453 416 rsi|DWORD = MOVZXB [rdx|QWORD + rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1458 418 JUMP ~[] destination: B44 -> B52  <||@
  Comment 1463 block B24 null  <||@
  Comment 1463 204 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1463 206 stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1467 208 stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1472 210 stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1477 212 stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1481 214 stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1486 216 JUMP ~[] destination: B24 -> B39  <||@
  Comment 1486 block B39 null  <||@
  Comment 1486 366 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1486 368 rsi|DWORD[.] = MOV [r9|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 1494 370 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:8, 5, 5, 18]  <||@
  Comment 1494 [rsi:0, r9:0, stack:24, stack:36, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0            |1         
     locals:  |r9|DWORD[.]  |rbx|DWORD 
     stack:   |int[0|0x0]   |          
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1         
     locals:  |stack:60|DWORD[.]  |rbx|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1         
     locals:  |stack:72|QWORD[.]  |rbx|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4         
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |rbx|DWORD   <||@
  Comment 1494 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1498 372 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3  <||@
  Comment 1502 374 rdx|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1504 376 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 5, 18]  <||@
  Comment 1504 7  <||@
  Comment 1519 {HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>}  <||@
  Comment 1524 [stack:24, stack:36, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:60|DWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:72|QWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |stack:36|DWORD   <||@
  Comment 1525 378 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1527 380 BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B49  <||@
  Comment 1533 block B49 null  <||@
  Comment 1533 466 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1533 468 r10|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1539 470 rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1544 472 JUMP ~[] destination: B49 -> B84  <||@
  Comment 1549 block B76 null  <||@
  Comment 1549 692 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1549 694 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3  <||@
  Comment 1553 696 stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1558 698 stack:60|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1562 700 stack:88|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1567 702 r11|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1570 704 JUMP ~[] destination: B76 -> B99  <||@
  Comment 1575 block B31 null  <||@
  Comment 1575 268 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1575 270 stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1579 272 stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1584 274 stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1589 276 stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1593 278 stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1598 280 JUMP ~[] destination: B31 -> B37  <||@
  Comment 1598 block B37 null  <||@
  Comment 1598 342 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1598 344 rsi|DWORD[.] = MOV [rax|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 1605 346 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:8, 5, 5, 5, 18]  <||@
  Comment 1605 [rax:0, rsi:0, stack:20, stack:24, stack:36, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1              
     locals:  |rax|DWORD[.]  |stack:36|DWORD 
     stack:   |int[0|0x0]    |               
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:76|DWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:60|DWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:72|QWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |stack:36|DWORD   <||@
  Comment 1605 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1609 348 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3  <||@
  Comment 1613 350 rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1617 352 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 5, 5, 18]  <||@
  Comment 1617 7  <||@
  Comment 1631 {HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>}  <||@
  Comment 1636 [stack:20, stack:24, stack:36, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:76|DWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:60|DWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:72|QWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |stack:36|DWORD   <||@
  Comment 1637 354 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1639 356 BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B50  <||@
  Comment 1645 block B50 null  <||@
  Comment 1645 474 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1645 476 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1650 478 JUMP ~[] destination: B50 -> B52  <||@
  Comment 1655 block B36 null  <||@
  Comment 1655 336 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1655 338 rax|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 1659 340 JUMP ~[] destination: B36 -> B37  <||@
  Comment 1661 block B40 null  <||@
  Comment 1661 382 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1661 384 r11|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD  <||@
  Comment 1666 386 JUMP ~[] destination: B40 -> B41  <||@
  Comment 1671 block B38 null  <||@
  Comment 1671 358 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1671 360 r9|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD  <||@
  Comment 1676 362 rbx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1680 364 JUMP ~[] destination: B38 -> B39  <||@
  Comment 1685 block B104 null  <||@
  Comment 1685 972 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1685 974 r11|DWORD = MOVE input: int[-273691|0xfffffffffffbd2e5]  <||@
  Comment 1691 976 rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1695 978 JUMP ~[] destination: B104 -> B108  <||@
  Comment 1695 block B108 null  <||@
  Comment 1695 1006 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1695 1008 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 1702 1010 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1709 1012 DEOPT info [bci:8, 18]  <||@
  Comment 1709 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1714 [rdx:0, rsi:0, stack:48]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rbp|DWORD 
     stack:   |r10|DWORD     |          
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0             |1             |2               |3                  |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |rbp|DWORD   <||@
  Comment 1715 block B57 null  <||@
  Comment 1715 536 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1715 538 r10|DWORD = MOVE input: int[-240147|0xfffffffffffc55ed]  <||@
  Comment 1721 540 rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1725 542 JUMP ~[] destination: B57 -> B82  <||@
  Comment 1725 block B82 null  <||@
  Comment 1725 748 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1725 750 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1732 752 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1739 754 DEOPT info [bci:8, 18]  <||@
  Comment 1739 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1744 [rdx:0, rsi:0, stack:48]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rbp|DWORD 
     stack:   |int[0|0x0]    |          
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0             |1             |2               |3                  |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |rbp|DWORD   <||@
  Comment 1745 block B114 null  <||@
  Comment 1745 1044 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1745 1046 r10|DWORD = MOVE input: int[-210203|0xfffffffffffccae5]  <||@
  Comment 1751 1048 JUMP ~[] destination: B114 -> B118  <||@
  Comment 1751 block B118 null  <||@
  Comment 1751 1068 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1751 1070 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1758 1072 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1765 1074 DEOPT info [bci:0]  <||@
  Comment 1765 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1770 [rdx:0, rsi:0, r8:0]at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-   <||@
  Comment 1771 block B46 null  <||@
  Comment 1771 432 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1771 434 r10|DWORD = MOVE input: int[-227859|0xfffffffffffc85ed]  <||@
  Comment 1777 436 rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1781 442 JUMP ~[] destination: B46 -> B47  <||@
  Comment 1781 block B47 null  <||@
  Comment 1781 444 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1781 438 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1786 440 rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1791 446 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1798 448 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1805 450 DEOPT info [bci:8, 5, 18]  <||@
  Comment 1805 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1810 [rdx:0, rsi:0, r11:0, stack:48]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |r11|DWORD[.]  |rbp|DWORD 
     stack:   |int[0|0x0]    |          
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rbp|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0             |1             |2               |3                  |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |rbp|DWORD   <||@
  Comment 1811 block B72 null  <||@
  Comment 1811 652 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1811 654 r10|DWORD = MOVE input: int[-258323|0xfffffffffffc0eed]  <||@
  Comment 1817 656 JUMP ~[] destination: B72 -> B82  <||@
  Comment 1819 block B70 null  <||@
  Comment 1819 640 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1819 642 r10|DWORD = MOVE input: int[-258067|0xfffffffffffc0fed]  <||@
  Comment 1825 644 JUMP ~[] destination: B70 -> B82  <||@
  Comment 1827 block B77 null  <||@
  Comment 1827 706 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1827 708 r10|DWORD = MOVE input: int[-256819|0xfffffffffffc14cd]  <||@
  Comment 1833 710 rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1837 712 JUMP ~[] destination: B77 -> B82  <||@
  Comment 1839 block B93 null  <||@
  Comment 1839 858 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1839 860 r11|DWORD = MOVE input: int[-277267|0xfffffffffffbc4ed]  <||@
  Comment 1845 862 JUMP ~[] destination: B93 -> B96  <||@
  Comment 1845 block B96 null  <||@
  Comment 1845 876 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1845 878 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 1852 880 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1859 882 DEOPT info [bci:63, 37]  <||@
  Comment 1859 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1864 [rax:0, rdx:0, stack:48]at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63, duringCall: false, rethrow: false]
              |0             |1             |2          |3                  |4          |5          |6         
     locals:  |rax|QWORD[.]  |rdx|QWORD[.]  |rdi|DWORD  |stack:48|QWORD[.]  |rcx|DWORD  |r10|DWORD  |rsi|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 1865 block B78 null  <||@
  Comment 1865 714 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1865 716 r10|DWORD = MOVE input: int[-250395|0xfffffffffffc2de5]  <||@
  Comment 1871 718 rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1875 720 JUMP ~[] destination: B78 -> B82  <||@
  Comment 1880 block B80 null  <||@
  Comment 1880 730 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1880 732 r10|DWORD = MOVE input: int[-238107|0xfffffffffffc5de5]  <||@
  Comment 1886 734 rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1890 736 JUMP ~[] destination: B80 -> B82  <||@
  Comment 1895 block B79 null  <||@
  Comment 1895 722 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1895 724 r10|DWORD = MOVE input: int[-248091|0xfffffffffffc36e5]  <||@
  Comment 1901 726 rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1905 728 JUMP ~[] destination: B79 -> B82  <||@
  Comment 1910 block B64 null  <||@
  Comment 1910 602 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1910 604 MOV [r15|QWORD + 668] y: -233491 size: DWORD  <||@
  Comment 1921 606 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1928 608 DEOPT info [bci:21]  <||@
  Comment 1928 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1933 [rdx:0, rsi:0, stack:48]at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21, duringCall: false, rethrow: false]
              |0             |1             |2               |3                  |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |rbp|DWORD 
     stack:   |int[0|0x0]    |              |                |                   |            <||@
  Comment 1934 block B105 null  <||@
  Comment 1934 980 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1934 982 r11|DWORD = MOVE input: int[-271387|0xfffffffffffbdbe5]  <||@
  Comment 1940 984 rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1944 986 JUMP ~[] destination: B105 -> B108  <||@
  Comment 1949 block B33 null  <||@
  Comment 1949 288 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1949 290 r10|DWORD = MOVE input: int[-222739|0xfffffffffffc99ed]  <||@
  Comment 1955 292 JUMP ~[] destination: B33 -> B118  <||@
  Comment 1960 block B109 null  <||@
  Comment 1960 1014 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1960 1016 r10|DWORD = MOVE input: int[-220467|0xfffffffffffca2cd]  <||@
  Comment 1966 1018 JUMP ~[] destination: B109 -> B118  <||@
  Comment 1971 block B103 null  <||@
  Comment 1971 964 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1971 966 MOV [r15|QWORD + 668] y: -284723 size: DWORD  <||@
  Comment 1982 968 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1989 970 DEOPT info [bci:63, 37]  <||@
  Comment 1989 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1994 [rdx:0, stack:8, stack:48]at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63, duringCall: false, rethrow: false]
              |0                  |1             |2          |3                  |4          |5               |6              
     locals:  |stack:88|QWORD[.]  |rdx|QWORD[.]  |rdi|DWORD  |stack:48|QWORD[.]  |rcx|DWORD  |stack:60|DWORD  |stack:40|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 1995 block B26 null  <||@
  Comment 1995 224 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1995 226 r10|DWORD = MOVE input: int[-220179|0xfffffffffffca3ed]  <||@
  Comment 2001 228 JUMP ~[] destination: B26 -> B118  <||@
  Comment 2006 block B67 null  <||@
  Comment 2006 620 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2006 622 r10|DWORD = MOVE input: int[-255771|0xfffffffffffc18e5]  <||@
  Comment 2012 624 JUMP ~[] destination: B67 -> B82  <||@
  Comment 2017 block B107 null  <||@
  Comment 2017 996 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2017 998 r11|DWORD = MOVE input: int[-259379|0xfffffffffffc0acd]  <||@
  Comment 2023 1000 rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2027 1002 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2032 1004 JUMP ~[] destination: B107 -> B108  <||@
  Comment 2037 block B110 null  <||@
  Comment 2037 1020 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2037 1022 r10|DWORD = MOVE input: int[-217907|0xfffffffffffcaccd]  <||@
  Comment 2043 1024 JUMP ~[] destination: B110 -> B118  <||@
  Comment 2048 block B106 null  <||@
  Comment 2048 988 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2048 990 r11|DWORD = MOVE input: int[-262171|0xfffffffffffbffe5]  <||@
  Comment 2054 992 rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2058 994 JUMP ~[] destination: B106 -> B108  <||@
  Comment 2063 block B66 null  <||@
  Comment 2063 614 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2063 616 r10|DWORD = MOVE input: int[-253203|0xfffffffffffc22ed]  <||@
  Comment 2069 618 JUMP ~[] destination: B66 -> B82  <||@
  Comment 2074 block B111 null  <||@
  Comment 2074 1026 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2074 1028 r10|DWORD = MOVE input: int[-215347|0xfffffffffffcb6cd]  <||@
  Comment 2080 1030 JUMP ~[] destination: B111 -> B118  <||@
  Comment 2085 block B117 null  <||@
  Comment 2085 1062 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2085 1064 r10|DWORD = MOVE input: int[-206099|0xfffffffffffcdaed]  <||@
  Comment 2091 1066 JUMP ~[] destination: B117 -> B118  <||@
  Comment 2096 block B81 null  <||@
  Comment 2096 738 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2096 740 r10|DWORD = MOVE input: int[-234803|0xfffffffffffc6acd]  <||@
  Comment 2102 742 rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2106 744 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2111 746 JUMP ~[] destination: B81 -> B82  <||@
  Comment 2116 block B115 null  <||@
  Comment 2116 1050 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2116 1052 r10|DWORD = MOVE input: int[-209427|0xfffffffffffccded]  <||@
  Comment 2122 1054 JUMP ~[] destination: B115 -> B118  <||@
  Comment 2127 block B87 null  <||@
  Comment 2127 796 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2127 798 r11|DWORD = MOVE input: int[-263955|0xfffffffffffbf8ed]  <||@
  Comment 2133 800 rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2137 802 JUMP ~[] destination: B87 -> B108  <||@
  Comment 2142 block B113 null  <||@
  Comment 2142 1038 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2142 1040 r10|DWORD = MOVE input: int[-212243|0xfffffffffffcc2ed]  <||@
  Comment 2148 1042 JUMP ~[] destination: B113 -> B118  <||@
  Comment 2153 block B45 null  <||@
  Comment 2153 420 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2153 422 r10|DWORD = MOVE input: int[-230427|0xfffffffffffc7be5]  <||@
  Comment 2159 424 rbp|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 2161 430 JUMP ~[] destination: B45 -> B47  <||@
  Comment 2166 block B112 null  <||@
  Comment 2166 1032 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2166 1034 r10|DWORD = MOVE input: int[-212531|0xfffffffffffcc1cd]  <||@
  Comment 2172 1036 JUMP ~[] destination: B112 -> B118  <||@
  Comment 2177 block B19 null  <||@
  Comment 2177 162 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2177 164 r10|DWORD = MOVE input: int[-217619|0xfffffffffffcaded]  <||@
  Comment 2183 166 JUMP ~[] destination: B19 -> B118  <||@
  Comment 2188 block B3 null  <||@
  Comment 2188 24 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2188 26 r10|DWORD = MOVE input: int[-206867|0xfffffffffffcd7ed]  <||@
  Comment 2194 28 JUMP ~[] destination: B3 -> B118  <||@
  Comment 2199 block B116 null  <||@
  Comment 2199 1056 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2199 1058 r10|DWORD = MOVE input: int[-206643|0xfffffffffffcd8cd]  <||@
  Comment 2205 1060 JUMP ~[] destination: B116 -> B118  <||@
  Comment 2210 block B12 null  <||@
  Comment 2210 100 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2210 102 r10|DWORD = MOVE input: int[-215059|0xfffffffffffcb7ed]  <||@
  Comment 2216 104 JUMP ~[] destination: B12 -> B118  <||@
  Comment 2221 block B101 null  <||@
  Comment 2221 942 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2221 944 r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 2226 946 r10|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2231 948 r11|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2236 950 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2241 952 MOV [r15|QWORD + 668] y: -286739 size: DWORD  <||@
  Comment 2252 954 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2259 956 DEOPT info [bci:10, 70, 37]  <||@
  Comment 2259 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2264 [rdx:0, r11:0]at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 10, duringCall: false, rethrow: false]
              |0           |1  |2  |3 
     locals:  |-           |-  |-  |- 
     stack:   |int[0|0x0]  |   |   |  
  at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70, duringCall: true, rethrow: false]
              |0             |1             |2  |3  |4  |5          |6        
     locals:  |r11|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |r10|DWORD  |r8|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 2265 block B95 null  <||@
  Comment 2265 870 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2265 872 r11|DWORD = MOVE input: int[-293147|0xfffffffffffb86e5]  <||@
  Comment 2271 874 JUMP ~[] destination: B95 -> B96  <||@
  Comment 2276 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2276 4  <||@
  Comment 2282 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 2282 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-5318[java.util.regex.Pattern$CharProperty.match(Matcher, int, CharSequence)]"
  method "HotSpotCompilation-5318[java.util.regex.Pattern$CharProperty.match(Matcher, int, CharSequence)]"
  date 1527005169804
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 10760e880 448b560849c1e203493bc20f85cf751fff900f1f80000000000f1f800000000089842400c0feff4883ec5848896c245048895424403b4a100f8de707000041817808da0200f80f854b08000085c90f8c38080000458b500c468b1cd50c000000443bd90f8edb070000443bd90f865f06000049c1e203450fbf544a10664181fa00d80f83d6070000817e089d2101f80f85e1070000448b5e10468b0cdd08000000410fb7da895c243c8bf9ffc74181f9582101f80f8517010000423b1cdd100000000f8cff020000423b1cdd140000000f8fcc07000041ba01000000897c24284c89442430894c242c8b460c813cc508000000072001f80f85e4060000488b5424408b4a3c448b04cd0c000000448b1cc510000000453bc30f86e206000048c1e103428b4c991085c90f8c20070000448b4234468b1cc50c000000448b0cc514000000453bd90f8642060000418bd9ffc3443bdb0f863b0500008b7c2428448b1cc50c000000428b2cdd0800000049c1e003418b749810478b54881043894c881041897c981048c1e00381fdab9f00f80f8514010000837a18010f848f0500004183780c020f822e070000897a208b421c4189401041897814b801000000488b6c24504883c4588505b90528fdc5f877c34181f99d2101f80f853c06000044895c2424468b0cdd10000000428b04cd0800000081f8582101f80f8534000000423b1ccd100000000f8c0e030000423b1ccd140000000f8f6606000041ba01000000897c24284c89442430894c242ce9b6feffff81f89d2101f80f85b605000044894c2414428b04cd100000008b2cc50800000081fd582101f80f85be0000003b1cc5100000000f8c4b0300003b1cc5140000000f8f52050000897c242844895424384c89442430894c242c4889742418be0100000085f60f84d7020000448bd6488b742418e93ffeffff49c1e3038974243844895424244889442408458b43084181f867a500f80f85e6040000458b430c438504c449c1e003498bf04c8bca8bcf4c8b44243048b8ffffffffffffffff0f1f8000000000e864771fff9085c00f84a8050000b801000000488b6c24504883c45885056d0428fdc5f877c381fd9d2101f80f857f0400008b2cc510000000448b2ced080000004181fd582101f80f853b0000003b1ced100000000f8cd50200003b1ced140000000f8f3e040000897c242844895424384c89442430894c242c4889742418be01000000e915ffffff89442410897c242844895424384c89442430894c242c488974241848c1e503488bf58bd348b8ffffffffffffffff90e8ac761fff9085c00f84ba020000be01000000e9cefeffff44895424384c89442430894c242c448b5614438504d4448b5e0c42813cdd08000000072001f80f853d040000488b542440448b423c468b0cc50c000000428b0cdd10000000443bc90f864303000049c1e003418b4c881085c90f8c8d020000448b4234468b0cc50c000000428b1cdd14000000443bcb0f86240300008bc3ffc0443bc80f86f9020000468b0cdd0c000000438504cc428b2cd50800000081fd122101f80f846e00000081fd582101f80f85a70200008b6c243c423b2cd5100000000f8c8d020000423b2cd5140000000f8f7702000049c1e003458b548010418b74981041894c981041897c801049c1e30342813ccd08000000ab9f00f80f8543010000498bc389742438418bf2448b542438e9b8fcffff8b6c243c468b14d510000000423b2cd50c0000000f83de02000066817c243800010f830a030000440fb76c2438470fb654d5104585d27586e95b020000897c242844895424384c89442430894c242c4889742418468b14dd1400000042813cd508000000122101f80f843600000049c1e203498bf28b54243c48b8ffffffffffffffff660f1f440000e8f4741fff908bf0e921fdffff8b7c2428488b742418e953feffff66817c243800010f835c0100008b5c243c428b34d5100000003b1cf50c0000000f83c10200000fb75424380fb674f210e9defcffff897c242844895424384c89442430894c242c4889742418428b34cd14000000418504f448c1e6038bd348b8ffffffffffffffff0f1f440000e86c741fff9085c00f848000000041ba01000000488b742418e9dcfaffff49c1e1034489542438897424244c895c24084d8bd9e995fcffff897c242844895424384c89442430894c242c48897424188b34c514000000418504f448c1e6038b54243c48b8ffffffffffffffff0f1f4000e8fc731fff9085c00f841a000000be01000000e91efcffff8b442410ebc1448b5c2424e9abfeffff448b4c24148b5c243ce939ffffff41bbe5d2fbff8b6c243c45899f9c0200004d89a7a8020000e8cc861fff9041baed55fcff8b6c243c4589979c0200004d89a7a8020000e8ae861fff9041bae5cafcff4589979c0200004d89a7a8020000e894861fff9041baed85fcff8b6c243c488b542440488b7424184589979c0200004d89a7a8020000e86c861fff9041baed0efcffeba241baed0ffcffeb9a41bacd14fcff8b6c243ceb8e41bbedc4fbff45899f9c0200004d89a7a8020000e836861fff9041bae52dfcff8b6c243ce965ffffff41bae55dfcff8b6c243ce956ffffff41bae536fcff8b6c243ce947ffffff41c7879c020000ed6ffcff4d89a7a8020000e8f1851fff9041bbe5dbfbff8b6c243ce902ffffff41baed99fcffe92fffffff41bacda2fcffe924ffffff41c7879c020000cda7fbff4d89a7a8020000e8b4851fff9041baeda3fcffe901ffffff41bae518fcffe9dcfeffff41bbcd0afcff8b6c243c488b542440e9aafeffff41bacdacfcffe9d7feffff41bbe5fffbff8b6c243ce990feffff41baed22fcffe9a3feffff41bacdb6fcffe9b2feffff41baeddafcffe9a7feffff41bacd6afcff8b6c243c488b542440e979feffff41baedcdfcffe988feffff41bbedf8fbff8b6c243ce941feffff41baedc2fcffe96efeffff41bae57bfcff8bebe97ffeffff41bacdc1fcffe956feffff41baedadfcffe94bfeffff41baedd7fcffe940feffff41bacdd8fcffe935feffff41baedb7fcffe92afeffff448b442438448b5424244c8b5c2408488b54244041c7879c020000ed9ffbff4d89a7a8020000e8a6841fff9041bbe586fbffe951feffffe8b7b463ff90e891831fff90  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@714f65ea slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 CMP (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) size: DWORD state [bci:0]  <||@
  Comment 53 [rdx:0, rsi:0, r8:0, stack:64]at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-   <||@
  Comment 53 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 56 10 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B117  <||@
  Comment 62 block B1 null  <||@
  Comment 62 12 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 62 14 CMP [r8|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0]  <||@
  Comment 62 [rdx:0, rsi:0, r8:0, stack:64]at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-   <||@
  Comment 62 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 62 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 70 16 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B116  <||@
  Comment 76 block B2 null  <||@
  Comment 76 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 76 20 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 78 22 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 84 block B4 null  <||@
  Comment 84 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 84 32 r10|DWORD[.] = MOV [r8|QWORD[.] + 12] size: DWORD  <||@
  Comment 88 34 r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 88 [rdx:0, rsi:0, r8:0, r10:0, stack:64]at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-   <||@
  Comment 88 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 96 36 CMP (x: r11|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 99 38 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B115  <||@
  Comment 105 block B5 null  <||@
  Comment 105 40 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 105 42 CMP (x: r11|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 108 44 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B114  <||@
  Comment 114 block B6 null  <||@
  Comment 114 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 114 48 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3  <||@
  Comment 118 50 r10|DWORD = MOVSX [r10|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 124 52 CMP r10|DWORD y: -10240 size: WORD  <||@
  Comment 130 54 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B113  <||@
  Comment 136 block B7 null  <||@
  Comment 136 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 136 58 CMP [rsi|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}  <||@
  Comment 136 {meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}}  <||@
  Comment 143 60 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B112  <||@
  Comment 149 block B8 null  <||@
  Comment 149 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 149 64 r11|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 153 66 r9|DWORD = MOV [r11|DWORD[.] * 8 + 8] size: DWORD state [bci:0]  <||@
  Comment 153 [rdx:0, rsi:0, r8:0, r11:0, stack:64]at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-   <||@
  Comment 153 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 161 68 rbx|DWORD = MOVZX r10|DWORD size: DWORD  <||@
  Comment 165 70 stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 169 72 rdi|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 173 74 CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 173 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 180 76 BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B14  <||@
  Comment 186 block B9 null  <||@
  Comment 186 78 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 186 80 CMP (x: rbx|DWORD, y: [r11|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 194 82 BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11  <||@
  Comment 200 block B11 null  <||@
  Comment 200 94 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 200 96 CMP (x: rbx|DWORD, y: [r11|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 208 98 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B11 -> B12 falseDestination: B11 -> B13  <||@
  Comment 214 block B13 null  <||@
  Comment 214 106 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 214 108 r10|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 220 110 stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 224 112 stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 229 114 stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 233 116 JUMP ~[] destination: B13 -> B84  <||@
  Comment 233 block B84 null  <||@
  Comment 233 764 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 233 766 rax|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 236 768 CMP [rax|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:8, 18]  <||@
  Comment 236 [rax:0, rsi:0, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1              
     locals:  |rsi|QWORD[.]  |stack:36|DWORD 
     stack:   |r10|DWORD     |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0             |1                  |2               |3                  |4              
     locals:  |rsi|QWORD[.]  |stack:32|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |stack:36|DWORD   <||@
  Comment 236 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 236 {meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed}}  <||@
  Comment 247 770 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B107  <||@
  Comment 253 block B85 null  <||@
  Comment 253 772 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 253 774 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 258 776 rcx|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD  <||@
  Comment 261 778 r8|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18]  <||@
  Comment 261 [rax:0, rcx:0, rdx:0, rsi:0, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1              
     locals:  |rsi|QWORD[.]  |stack:36|DWORD 
     stack:   |r10|DWORD     |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0             |1             |2               |3                  |4              
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |stack:36|DWORD   <||@
  Comment 261 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 269 780 r11|DWORD = MOV [rax|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 277 782 CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 280 784 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B85 -> B86 falseDestination: B85 -> B106  <||@
  Comment 286 block B86 null  <||@
  Comment 286 786 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 286 788 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3  <||@
  Comment 290 790 rcx|DWORD = MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD  <||@
  Comment 295 792 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 297 794 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B86 -> B87 falseDestination: B86 -> B88  <||@
  Comment 303 block B88 null  <||@
  Comment 303 804 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 303 806 r8|DWORD[.] = MOV [rdx|QWORD[.] + 52] size: DWORD  <||@
  Comment 307 808 r11|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18]  <||@
  Comment 307 [rax:0, rdx:0, rsi:0, r8:0, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1              
     locals:  |rsi|QWORD[.]  |stack:36|DWORD 
     stack:   |r10|DWORD     |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0             |1             |2               |3                  |4              
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |stack:36|DWORD   <||@
  Comment 307 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 315 810 r9|DWORD = MOV [rax|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 323 812 CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 326 814 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B88 -> B89 falseDestination: B88 -> B105  <||@
  Comment 332 block B89 null  <||@
  Comment 332 816 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 332 818 rbx|DWORD = INC r9|DWORD size: DWORD  <||@
  Comment 337 820 CMP (x: r11|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 340 822 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B89 -> B90 falseDestination: B89 -> B104  <||@
  Comment 346 block B90 null  <||@
  Comment 346 824 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 346 826 rdi|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 350 828 r11|DWORD[.] = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 358 830 rbp|DWORD = MOV [r11|DWORD[.] * 8 + 8] size: DWORD state [bci:8, 18]  <||@
  Comment 358 [rax:0, rdx:0, rsi:0, r8:0, r11:0, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1              
     locals:  |rsi|QWORD[.]  |stack:36|DWORD 
     stack:   |r10|DWORD     |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0             |1             |2               |3                  |4              
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |stack:36|DWORD   <||@
  Comment 358 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 366 832 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3  <||@
  Comment 370 834 rsi|DWORD = MOV [r8|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 375 836 r10|DWORD = MOV [r8|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD  <||@
  Comment 380 838 MOV (x: [r8|QWORD[.] + r9|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD  <||@
  Comment 385 840 MOV (x: [r8|QWORD[.] + rbx|DWORD * 4 + 16], y: rdi|DWORD) size: DWORD  <||@
  Comment 390 842 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3  <||@
  Comment 394 844 CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}  <||@
  Comment 394 {meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}}  <||@
  Comment 400 846 BRANCH trueDestinationProbability: 0.8257972313536578 condition: = trueDestination: B90 -> B92 falseDestination: B90 -> B98  <||@
  Comment 406 block B92 null  <||@
  Comment 406 852 [] = LABEL numbPhis: 5 align: false label: ?  <||@
  Comment 406 854 CMP [rdx|QWORD[.] + 24] y: 1 size: DWORD  <||@
  Comment 410 856 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B94  <||@
  Comment 416 block B94 null  <||@
  Comment 416 864 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 416 866 CMP [r8|QWORD[.] + 12] y: 2 size: DWORD  <||@
  Comment 421 868 BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B94 -> B95 falseDestination: B94 -> B97  <||@
  Comment 427 block B97 null  <||@
  Comment 427 884 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 427 886 MOV (x: [rdx|QWORD[.] + 32], y: rdi|DWORD) size: DWORD  <||@
  Comment 430 888 rax|DWORD = MOV [rdx|QWORD[.] + 28] size: DWORD  <||@
  Comment 433 890 MOV (x: [r8|QWORD[.] + 16], y: rax|DWORD) size: DWORD  <||@
  Comment 437 892 MOV (x: [r8|QWORD[.] + 20], y: rdi|DWORD) size: DWORD  <||@
  Comment 441 894 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 446 896 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 455 12  <||@
  Comment 465 block B14 null  <||@
  Comment 465 118 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 465 120 CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}  <||@
  Comment 465 {meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}}  <||@
  Comment 472 122 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B111  <||@
  Comment 478 block B15 null  <||@
  Comment 478 124 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 478 126 stack:60|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 483 128 r9|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 491 130 rax|DWORD = MOV [r9|DWORD[.] * 8 + 8] size: DWORD state [bci:0]  <||@
  Comment 491 [rdx:0, rsi:0, r8:0, r9:0, r11:0, stack:36, stack:64]at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-   <||@
  Comment 491 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 499 132 CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 499 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 505 134 BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B21  <||@
  Comment 511 block B16 null  <||@
  Comment 511 136 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 511 138 CMP (x: rbx|DWORD, y: [r9|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 519 140 BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18  <||@
  Comment 525 block B18 null  <||@
  Comment 525 156 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 525 158 CMP (x: rbx|DWORD, y: [r9|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 533 160 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20  <||@
  Comment 539 block B20 null  <||@
  Comment 539 168 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 539 170 r10|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 545 172 stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 549 174 stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 554 176 stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 558 178 JUMP ~[] destination: B20 -> B84  <||@
  Comment 563 block B21 null  <||@
  Comment 563 180 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 563 182 CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}  <||@
  Comment 563 {meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}}  <||@
  Comment 569 184 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B110  <||@
  Comment 575 block B22 null  <||@
  Comment 575 186 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 575 188 stack:76|DWORD[.] = MOVE r9|DWORD[.] moveKind: DWORD  <||@
  Comment 580 190 rax|DWORD[.] = MOV [r9|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 588 192 rbp|DWORD = MOV [rax|DWORD[.] * 8 + 8] size: DWORD state [bci:0]  <||@
  Comment 588 [rax:0, rdx:0, rsi:0, r8:0, r9:0, stack:20, stack:36, stack:64]at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-   <||@
  Comment 588 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 595 194 CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 595 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 601 196 BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B28  <||@
  Comment 607 block B23 null  <||@
  Comment 607 198 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 607 200 CMP (x: rbx|DWORD, y: [rax|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 614 202 BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25  <||@
  Comment 620 block B25 null  <||@
  Comment 620 218 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 620 220 CMP (x: rbx|DWORD, y: [rax|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 627 222 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27  <||@
  Comment 633 block B27 null  <||@
  Comment 633 230 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 633 232 stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 637 234 stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 642 236 stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 647 238 stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 651 240 stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 656 242 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 661 244 JUMP ~[] destination: B27 -> B52  <||@
  Comment 661 block B52 null  <||@
  Comment 661 486 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 661 488 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 663 490 BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B83  <||@
  Comment 669 block B83 null  <||@
  Comment 669 756 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 669 758 r10|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 672 760 rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 677 762 JUMP ~[] destination: B83 -> B84  <||@
  Comment 682 block B98 null  <||@
  Comment 682 898 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 682 900 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3  <||@
  Comment 686 902 stack:40|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 690 904 stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 695 906 stack:88|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 700 908 JUMP ~[] destination: B98 -> B99  <||@
  Comment 700 block B99 null  <||@
  Comment 700 910 [] = LABEL numbPhis: 5 align: false label: ?  <||@
  Comment 700 912 r8|DWORD = MOV [r11|QWORD[.] + 8] size: DWORD  <||@
  Comment 704 914 CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BranchConn;, resolved>;compressed}  <||@
  Comment 704 {meta{HotSpotType<Ljava/util/regex/Pattern$BranchConn;, resolved>;compressed}}  <||@
  Comment 711 916 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B103  <||@
  Comment 717 block B100 null  <||@
  Comment 717 918 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 717 920 r8|DWORD[.] = MOV [r11|QWORD[.] + 12] size: DWORD  <||@
  Comment 721 922 NULLCHECK [r12|QWORD[*] + r8|DWORD[.] * 8] state [bci:63, 37]  <||@
  Comment 721 [rdx:0, r8:0, stack:8, stack:48, stack:64]at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63, duringCall: false, rethrow: false]
              |0                  |1             |2          |3                  |4          |5               |6              
     locals:  |stack:88|QWORD[.]  |rdx|QWORD[.]  |rdi|DWORD  |stack:48|QWORD[.]  |rcx|DWORD  |stack:60|DWORD  |stack:40|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 721 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 725 924 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3  <||@
  Comment 729 926 rsi|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 732 928 r9|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 735 932 rcx|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 737 934 r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 742 936 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:7, 70, 37]  <||@
  Comment 742 7  <||@
  Comment 759 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 764 [stack:8, stack:64]at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4  |5               |6              
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |stack:60|DWORD  |stack:40|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 765 938 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 767 940 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B102  <||@
  Comment 773 block B102 null  <||@
  Comment 773 958 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 773 960 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 778 962 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 787 12  <||@
  Comment 797 block B28 null  <||@
  Comment 797 246 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 797 248 CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}  <||@
  Comment 797 {meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}}  <||@
  Comment 803 250 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B109  <||@
  Comment 809 block B29 null  <||@
  Comment 809 252 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 809 254 rbp|DWORD[.] = MOV [rax|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 816 256 r13|DWORD = MOV [rbp|DWORD[.] * 8 + 8] size: DWORD state [bci:0]  <||@
  Comment 816 [rax:0, rdx:0, rbp:0, rsi:0, r8:0, stack:20, stack:36, stack:64]at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-   <||@
  Comment 816 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 824 258 CMP r13|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 824 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 831 260 BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B35  <||@
  Comment 837 block B30 null  <||@
  Comment 837 262 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 837 264 CMP (x: rbx|DWORD, y: [rbp|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 844 266 BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B30 -> B31 falseDestination: B30 -> B32  <||@
  Comment 850 block B32 null  <||@
  Comment 850 282 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 850 284 CMP (x: rbx|DWORD, y: [rbp|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 857 286 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B34  <||@
  Comment 863 block B34 null  <||@
  Comment 863 294 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 863 296 stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 867 298 stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 872 300 stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 877 302 stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 881 304 stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 886 306 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 891 308 JUMP ~[] destination: B34 -> B52  <||@
  Comment 896 block B35 null  <||@
  Comment 896 310 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 896 312 stack:80|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD  <||@
  Comment 900 314 stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 904 316 stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 909 318 stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 914 320 stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 918 322 stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 923 324 rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3  <||@
  Comment 927 326 rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 930 328 rdx|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 932 330 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:5, 5, 5, 5, 18]  <||@
  Comment 932 7  <||@
  Comment 943 {HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>}  <||@
  Comment 948 [stack:16, stack:20, stack:24, stack:36, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:80|DWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:76|DWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:60|DWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:72|QWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |stack:36|DWORD   <||@
  Comment 949 332 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 951 334 BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B51  <||@
  Comment 957 block B51 null  <||@
  Comment 957 480 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 957 482 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 962 484 JUMP ~[] destination: B51 -> B52  <||@
  Comment 967 block B10 null  <||@
  Comment 967 84 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 967 86 stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 972 88 stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 977 90 stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 981 92 JUMP ~[] destination: B10 -> B54  <||@
  Comment 981 block B54 null  <||@
  Comment 981 500 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 981 502 r10|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 985 504 NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:8, 18]  <||@
  Comment 985 [rsi:0, r10:0, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1              
     locals:  |rsi|QWORD[.]  |stack:36|DWORD 
     stack:   |int[0|0x0]    |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0             |1                  |2               |3                  |4              
     locals:  |rsi|QWORD[.]  |stack:32|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |stack:36|DWORD   <||@
  Comment 985 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 989 506 r11|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 993 508 CMP [r11|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:8, 18]  <||@
  Comment 993 [rsi:0, r10:0, r11:0, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1              
     locals:  |rsi|QWORD[.]  |stack:36|DWORD 
     stack:   |int[0|0x0]    |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0             |1                  |2               |3                  |4              
     locals:  |rsi|QWORD[.]  |stack:32|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |stack:36|DWORD   <||@
  Comment 993 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 993 {meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed}}  <||@
  Comment 1005 510 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B81  <||@
  Comment 1011 block B55 null  <||@
  Comment 1011 512 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1011 514 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1016 516 r8|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD  <||@
  Comment 1020 518 r9|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18]  <||@
  Comment 1020 [rdx:0, rsi:0, r8:0, r10:0, r11:0, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1              
     locals:  |rsi|QWORD[.]  |stack:36|DWORD 
     stack:   |int[0|0x0]    |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0             |1             |2               |3                  |4              
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |stack:36|DWORD   <||@
  Comment 1020 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1028 520 rcx|DWORD = MOV [r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1036 522 CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 1039 524 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B80  <||@
  Comment 1045 block B56 null  <||@
  Comment 1045 526 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1045 528 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3  <||@
  Comment 1049 530 rcx|DWORD = MOV [r8|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1054 532 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 1056 534 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B56 -> B57 falseDestination: B56 -> B58  <||@
  Comment 1062 block B58 null  <||@
  Comment 1062 544 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1062 546 r8|DWORD[.] = MOV [rdx|QWORD[.] + 52] size: DWORD  <||@
  Comment 1066 548 r9|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18]  <||@
  Comment 1066 [rdx:0, rsi:0, r8:0, r10:0, r11:0, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1              
     locals:  |rsi|QWORD[.]  |stack:36|DWORD 
     stack:   |int[0|0x0]    |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0             |1             |2               |3                  |4              
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |stack:36|DWORD   <||@
  Comment 1066 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1074 550 rbx|DWORD = MOV [r11|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 1082 552 CMP (x: r9|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 1085 554 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B79  <||@
  Comment 1091 block B59 null  <||@
  Comment 1091 556 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1091 558 rax|DWORD = INC rbx|DWORD size: DWORD  <||@
  Comment 1095 560 CMP (x: r9|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1098 562 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B78  <||@
  Comment 1104 block B60 null  <||@
  Comment 1104 564 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1104 566 r9|DWORD[.] = MOV [r11|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1112 568 NULLCHECK [r12|QWORD[*] + r9|DWORD[.] * 8] state [bci:8, 18]  <||@
  Comment 1112 [rdx:0, rsi:0, r8:0, r9:0, r10:0, r11:0, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1              
     locals:  |rsi|QWORD[.]  |stack:36|DWORD 
     stack:   |int[0|0x0]    |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0             |1             |2               |3                  |4              
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |stack:36|DWORD   <||@
  Comment 1112 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1116 570 rbp|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 1124 572 CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}  <||@
  Comment 1124 {meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}}  <||@
  Comment 1130 574 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B68  <||@
  Comment 1136 block B68 null  <||@
  Comment 1136 626 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1136 628 CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 1136 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 1142 630 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B77  <||@
  Comment 1148 block B69 null  <||@
  Comment 1148 632 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1148 634 rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1152 636 CMP (x: rbp|DWORD, y: [r10|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 1160 638 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B69 -> B70 falseDestination: B69 -> B71  <||@
  Comment 1166 block B71 null  <||@
  Comment 1166 646 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1166 648 CMP (x: rbp|DWORD, y: [r10|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 1174 650 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B71 -> B72 falseDestination: B71 -> B74  <||@
  Comment 1180 block B74 null  <||@
  Comment 1180 662 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1180 664 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3  <||@
  Comment 1184 666 r10|DWORD = MOV [r8|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1189 668 rsi|DWORD = MOV [r8|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1194 670 MOV (x: [r8|QWORD[.] + rbx|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD  <||@
  Comment 1199 672 MOV (x: [r8|QWORD[.] + rax|DWORD * 4 + 16], y: rdi|DWORD) size: DWORD  <||@
  Comment 1204 674 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3  <||@
  Comment 1208 676 CMP [r9|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}  <||@
  Comment 1208 {meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}}  <||@
  Comment 1220 678 BRANCH trueDestinationProbability: 0.8257972313536578 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76  <||@
  Comment 1226 block B75 null  <||@
  Comment 1226 680 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1226 682 rax|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1229 684 stack:40|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1233 686 rsi|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1236 688 r10|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1241 690 JUMP ~[] destination: B75 -> B92  <||@
  Comment 1246 block B61 null  <||@
  Comment 1246 576 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1246 578 rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1250 580 r10|DWORD[.] = MOV [r10|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1258 582 CMP (x: rbp|DWORD, y: [r10|DWORD[.] * 8 + 12]) size: DWORD state [bci:8, 18]  <||@
  Comment 1258 [rdx:0, rsi:0, r8:0, r9:0, r10:0, r11:0, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rbp|DWORD 
     stack:   |int[0|0x0]    |          
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0             |1             |2               |3                  |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |rbp|DWORD   <||@
  Comment 1258 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1266 584 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B61 -> B62 falseDestination: B61 -> B67  <||@
  Comment 1272 block B62 null  <||@
  Comment 1272 586 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1272 588 CMP stack:40|DWORD y: 256 size: WORD  <||@
  Comment 1279 590 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B62 -> B63 falseDestination: B62 -> B66  <||@
  Comment 1285 block B63 null  <||@
  Comment 1285 592 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1285 594 r13|QWORD = MOVZX stack:40|DWORD size: DWORD  <||@
  Comment 1291 596 r10|DWORD = MOVZXB [r13|QWORD + r10|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1297 598 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 1300 600 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B74  <||@
  Comment 1307 block B17 null  <||@
  Comment 1307 142 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1307 144 stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1311 146 stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1316 148 stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1321 150 stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1325 152 stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1330 154 JUMP ~[] destination: B17 -> B41  <||@
  Comment 1330 block B41 null  <||@
  Comment 1330 388 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1330 390 r10|DWORD[.] = MOV [r11|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 1338 392 CMP [r10|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} state [bci:8, 5, 18]  <||@
  Comment 1338 [r10:0, r11:0, stack:24, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1              
     locals:  |r11|DWORD[.]  |stack:36|DWORD 
     stack:   |int[0|0x0]    |               
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:72|QWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |stack:36|DWORD   <||@
  Comment 1338 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1338 {meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}}  <||@
  Comment 1350 394 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B48  <||@
  Comment 1356 block B48 null  <||@
  Comment 1356 452 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1356 454 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3  <||@
  Comment 1360 456 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1363 458 rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1367 460 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 18]  <||@
  Comment 1367 7  <||@
  Comment 1383 {HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>}  <||@
  Comment 1388 [stack:24, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:72|QWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |stack:36|DWORD   <||@
  Comment 1389 462 rsi|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1391 464 JUMP ~[] destination: B48 -> B52  <||@
  Comment 1396 block B53 null  <||@
  Comment 1396 492 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1396 494 rdi|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 1400 496 rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1405 498 JUMP ~[] destination: B53 -> B54  <||@
  Comment 1410 block B42 null  <||@
  Comment 1410 396 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1410 398 CMP stack:40|DWORD y: 256 size: WORD  <||@
  Comment 1417 400 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B42 -> B43 falseDestination: B42 -> B46  <||@
  Comment 1423 block B43 null  <||@
  Comment 1423 402 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1423 404 rbx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1427 406 rsi|DWORD[.] = MOV [r10|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1435 408 CMP (x: rbx|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:8, 5, 18]  <||@
  Comment 1435 [rsi:0, r11:0, stack:24, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |r11|DWORD[.]  |rbx|DWORD 
     stack:   |int[0|0x0]    |          
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1         
     locals:  |stack:72|QWORD[.]  |rbx|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4         
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |rbx|DWORD   <||@
  Comment 1435 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1442 410 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B43 -> B44 falseDestination: B43 -> B45  <||@
  Comment 1448 block B44 null  <||@
  Comment 1448 412 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1448 414 rdx|QWORD = MOVZX stack:40|DWORD size: DWORD  <||@
  Comment 1453 416 rsi|DWORD = MOVZXB [rdx|QWORD + rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1458 418 JUMP ~[] destination: B44 -> B52  <||@
  Comment 1463 block B24 null  <||@
  Comment 1463 204 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1463 206 stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1467 208 stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1472 210 stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1477 212 stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1481 214 stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1486 216 JUMP ~[] destination: B24 -> B39  <||@
  Comment 1486 block B39 null  <||@
  Comment 1486 366 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1486 368 rsi|DWORD[.] = MOV [r9|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 1494 370 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:8, 5, 5, 18]  <||@
  Comment 1494 [rsi:0, r9:0, stack:24, stack:36, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0            |1         
     locals:  |r9|DWORD[.]  |rbx|DWORD 
     stack:   |int[0|0x0]   |          
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1         
     locals:  |stack:60|DWORD[.]  |rbx|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1         
     locals:  |stack:72|QWORD[.]  |rbx|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4         
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |rbx|DWORD   <||@
  Comment 1494 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1498 372 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3  <||@
  Comment 1502 374 rdx|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1504 376 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 5, 18]  <||@
  Comment 1504 7  <||@
  Comment 1519 {HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>}  <||@
  Comment 1524 [stack:24, stack:36, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:60|DWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:72|QWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |stack:36|DWORD   <||@
  Comment 1525 378 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1527 380 BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B49  <||@
  Comment 1533 block B49 null  <||@
  Comment 1533 466 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1533 468 r10|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1539 470 rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1544 472 JUMP ~[] destination: B49 -> B84  <||@
  Comment 1549 block B76 null  <||@
  Comment 1549 692 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1549 694 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3  <||@
  Comment 1553 696 stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1558 698 stack:60|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1562 700 stack:88|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1567 702 r11|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1570 704 JUMP ~[] destination: B76 -> B99  <||@
  Comment 1575 block B31 null  <||@
  Comment 1575 268 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1575 270 stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1579 272 stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1584 274 stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1589 276 stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1593 278 stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1598 280 JUMP ~[] destination: B31 -> B37  <||@
  Comment 1598 block B37 null  <||@
  Comment 1598 342 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1598 344 rsi|DWORD[.] = MOV [rax|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 1605 346 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:8, 5, 5, 5, 18]  <||@
  Comment 1605 [rax:0, rsi:0, stack:20, stack:24, stack:36, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1              
     locals:  |rax|DWORD[.]  |stack:36|DWORD 
     stack:   |int[0|0x0]    |               
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:76|DWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:60|DWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:72|QWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |stack:36|DWORD   <||@
  Comment 1605 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1609 348 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@169e497f encoding: base: 0 shift: 3  <||@
  Comment 1613 350 rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1617 352 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 5, 5, 18]  <||@
  Comment 1617 7  <||@
  Comment 1631 {HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>}  <||@
  Comment 1636 [stack:20, stack:24, stack:36, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:76|DWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:60|DWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:72|QWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |stack:36|DWORD   <||@
  Comment 1637 354 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1639 356 BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B50  <||@
  Comment 1645 block B50 null  <||@
  Comment 1645 474 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1645 476 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1650 478 JUMP ~[] destination: B50 -> B52  <||@
  Comment 1655 block B36 null  <||@
  Comment 1655 336 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1655 338 rax|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 1659 340 JUMP ~[] destination: B36 -> B37  <||@
  Comment 1661 block B40 null  <||@
  Comment 1661 382 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1661 384 r11|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD  <||@
  Comment 1666 386 JUMP ~[] destination: B40 -> B41  <||@
  Comment 1671 block B38 null  <||@
  Comment 1671 358 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1671 360 r9|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD  <||@
  Comment 1676 362 rbx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1680 364 JUMP ~[] destination: B38 -> B39  <||@
  Comment 1685 block B104 null  <||@
  Comment 1685 972 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1685 974 r11|DWORD = MOVE input: int[-273691|0xfffffffffffbd2e5]  <||@
  Comment 1691 976 rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1695 978 JUMP ~[] destination: B104 -> B108  <||@
  Comment 1695 block B108 null  <||@
  Comment 1695 1006 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1695 1008 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 1702 1010 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1709 1012 DEOPT info [bci:8, 18]  <||@
  Comment 1709 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1714 [rdx:0, rsi:0, stack:48]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rbp|DWORD 
     stack:   |r10|DWORD     |          
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0             |1             |2               |3                  |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |rbp|DWORD   <||@
  Comment 1715 block B57 null  <||@
  Comment 1715 536 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1715 538 r10|DWORD = MOVE input: int[-240147|0xfffffffffffc55ed]  <||@
  Comment 1721 540 rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1725 542 JUMP ~[] destination: B57 -> B82  <||@
  Comment 1725 block B82 null  <||@
  Comment 1725 748 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1725 750 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1732 752 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1739 754 DEOPT info [bci:8, 18]  <||@
  Comment 1739 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1744 [rdx:0, rsi:0, stack:48]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rbp|DWORD 
     stack:   |int[0|0x0]    |          
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0             |1             |2               |3                  |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |rbp|DWORD   <||@
  Comment 1745 block B114 null  <||@
  Comment 1745 1044 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1745 1046 r10|DWORD = MOVE input: int[-210203|0xfffffffffffccae5]  <||@
  Comment 1751 1048 JUMP ~[] destination: B114 -> B118  <||@
  Comment 1751 block B118 null  <||@
  Comment 1751 1068 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1751 1070 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1758 1072 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1765 1074 DEOPT info [bci:0]  <||@
  Comment 1765 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1770 [rdx:0, rsi:0, r8:0]at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-   <||@
  Comment 1771 block B46 null  <||@
  Comment 1771 432 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1771 434 r10|DWORD = MOVE input: int[-227859|0xfffffffffffc85ed]  <||@
  Comment 1777 436 rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1781 442 JUMP ~[] destination: B46 -> B47  <||@
  Comment 1781 block B47 null  <||@
  Comment 1781 444 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1781 438 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1786 440 rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1791 446 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1798 448 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1805 450 DEOPT info [bci:8, 5, 18]  <||@
  Comment 1805 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1810 [rdx:0, rsi:0, r11:0, stack:48]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |r11|DWORD[.]  |rbp|DWORD 
     stack:   |int[0|0x0]    |          
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rbp|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0             |1             |2               |3                  |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |rbp|DWORD   <||@
  Comment 1811 block B72 null  <||@
  Comment 1811 652 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1811 654 r10|DWORD = MOVE input: int[-258323|0xfffffffffffc0eed]  <||@
  Comment 1817 656 JUMP ~[] destination: B72 -> B82  <||@
  Comment 1819 block B70 null  <||@
  Comment 1819 640 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1819 642 r10|DWORD = MOVE input: int[-258067|0xfffffffffffc0fed]  <||@
  Comment 1825 644 JUMP ~[] destination: B70 -> B82  <||@
  Comment 1827 block B77 null  <||@
  Comment 1827 706 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1827 708 r10|DWORD = MOVE input: int[-256819|0xfffffffffffc14cd]  <||@
  Comment 1833 710 rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1837 712 JUMP ~[] destination: B77 -> B82  <||@
  Comment 1839 block B93 null  <||@
  Comment 1839 858 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1839 860 r11|DWORD = MOVE input: int[-277267|0xfffffffffffbc4ed]  <||@
  Comment 1845 862 JUMP ~[] destination: B93 -> B96  <||@
  Comment 1845 block B96 null  <||@
  Comment 1845 876 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1845 878 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 1852 880 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1859 882 DEOPT info [bci:63, 37]  <||@
  Comment 1859 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1864 [rax:0, rdx:0, stack:48]at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63, duringCall: false, rethrow: false]
              |0             |1             |2          |3                  |4          |5          |6         
     locals:  |rax|QWORD[.]  |rdx|QWORD[.]  |rdi|DWORD  |stack:48|QWORD[.]  |rcx|DWORD  |r10|DWORD  |rsi|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 1865 block B78 null  <||@
  Comment 1865 714 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1865 716 r10|DWORD = MOVE input: int[-250395|0xfffffffffffc2de5]  <||@
  Comment 1871 718 rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1875 720 JUMP ~[] destination: B78 -> B82  <||@
  Comment 1880 block B80 null  <||@
  Comment 1880 730 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1880 732 r10|DWORD = MOVE input: int[-238107|0xfffffffffffc5de5]  <||@
  Comment 1886 734 rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1890 736 JUMP ~[] destination: B80 -> B82  <||@
  Comment 1895 block B79 null  <||@
  Comment 1895 722 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1895 724 r10|DWORD = MOVE input: int[-248091|0xfffffffffffc36e5]  <||@
  Comment 1901 726 rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1905 728 JUMP ~[] destination: B79 -> B82  <||@
  Comment 1910 block B64 null  <||@
  Comment 1910 602 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1910 604 MOV [r15|QWORD + 668] y: -233491 size: DWORD  <||@
  Comment 1921 606 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1928 608 DEOPT info [bci:21]  <||@
  Comment 1928 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1933 [rdx:0, rsi:0, stack:48]at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21, duringCall: false, rethrow: false]
              |0             |1             |2               |3                  |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |rbp|DWORD 
     stack:   |int[0|0x0]    |              |                |                   |            <||@
  Comment 1934 block B105 null  <||@
  Comment 1934 980 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1934 982 r11|DWORD = MOVE input: int[-271387|0xfffffffffffbdbe5]  <||@
  Comment 1940 984 rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1944 986 JUMP ~[] destination: B105 -> B108  <||@
  Comment 1949 block B33 null  <||@
  Comment 1949 288 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1949 290 r10|DWORD = MOVE input: int[-222739|0xfffffffffffc99ed]  <||@
  Comment 1955 292 JUMP ~[] destination: B33 -> B118  <||@
  Comment 1960 block B109 null  <||@
  Comment 1960 1014 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1960 1016 r10|DWORD = MOVE input: int[-220467|0xfffffffffffca2cd]  <||@
  Comment 1966 1018 JUMP ~[] destination: B109 -> B118  <||@
  Comment 1971 block B103 null  <||@
  Comment 1971 964 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1971 966 MOV [r15|QWORD + 668] y: -284723 size: DWORD  <||@
  Comment 1982 968 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1989 970 DEOPT info [bci:63, 37]  <||@
  Comment 1989 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1994 [rdx:0, stack:8, stack:48]at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63, duringCall: false, rethrow: false]
              |0                  |1             |2          |3                  |4          |5               |6              
     locals:  |stack:88|QWORD[.]  |rdx|QWORD[.]  |rdi|DWORD  |stack:48|QWORD[.]  |rcx|DWORD  |stack:60|DWORD  |stack:40|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 1995 block B26 null  <||@
  Comment 1995 224 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1995 226 r10|DWORD = MOVE input: int[-220179|0xfffffffffffca3ed]  <||@
  Comment 2001 228 JUMP ~[] destination: B26 -> B118  <||@
  Comment 2006 block B67 null  <||@
  Comment 2006 620 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2006 622 r10|DWORD = MOVE input: int[-255771|0xfffffffffffc18e5]  <||@
  Comment 2012 624 JUMP ~[] destination: B67 -> B82  <||@
  Comment 2017 block B107 null  <||@
  Comment 2017 996 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2017 998 r11|DWORD = MOVE input: int[-259379|0xfffffffffffc0acd]  <||@
  Comment 2023 1000 rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2027 1002 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2032 1004 JUMP ~[] destination: B107 -> B108  <||@
  Comment 2037 block B110 null  <||@
  Comment 2037 1020 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2037 1022 r10|DWORD = MOVE input: int[-217907|0xfffffffffffcaccd]  <||@
  Comment 2043 1024 JUMP ~[] destination: B110 -> B118  <||@
  Comment 2048 block B106 null  <||@
  Comment 2048 988 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2048 990 r11|DWORD = MOVE input: int[-262171|0xfffffffffffbffe5]  <||@
  Comment 2054 992 rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2058 994 JUMP ~[] destination: B106 -> B108  <||@
  Comment 2063 block B66 null  <||@
  Comment 2063 614 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2063 616 r10|DWORD = MOVE input: int[-253203|0xfffffffffffc22ed]  <||@
  Comment 2069 618 JUMP ~[] destination: B66 -> B82  <||@
  Comment 2074 block B111 null  <||@
  Comment 2074 1026 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2074 1028 r10|DWORD = MOVE input: int[-215347|0xfffffffffffcb6cd]  <||@
  Comment 2080 1030 JUMP ~[] destination: B111 -> B118  <||@
  Comment 2085 block B117 null  <||@
  Comment 2085 1062 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2085 1064 r10|DWORD = MOVE input: int[-206099|0xfffffffffffcdaed]  <||@
  Comment 2091 1066 JUMP ~[] destination: B117 -> B118  <||@
  Comment 2096 block B81 null  <||@
  Comment 2096 738 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2096 740 r10|DWORD = MOVE input: int[-234803|0xfffffffffffc6acd]  <||@
  Comment 2102 742 rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2106 744 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2111 746 JUMP ~[] destination: B81 -> B82  <||@
  Comment 2116 block B115 null  <||@
  Comment 2116 1050 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2116 1052 r10|DWORD = MOVE input: int[-209427|0xfffffffffffccded]  <||@
  Comment 2122 1054 JUMP ~[] destination: B115 -> B118  <||@
  Comment 2127 block B87 null  <||@
  Comment 2127 796 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2127 798 r11|DWORD = MOVE input: int[-263955|0xfffffffffffbf8ed]  <||@
  Comment 2133 800 rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2137 802 JUMP ~[] destination: B87 -> B108  <||@
  Comment 2142 block B113 null  <||@
  Comment 2142 1038 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2142 1040 r10|DWORD = MOVE input: int[-212243|0xfffffffffffcc2ed]  <||@
  Comment 2148 1042 JUMP ~[] destination: B113 -> B118  <||@
  Comment 2153 block B45 null  <||@
  Comment 2153 420 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2153 422 r10|DWORD = MOVE input: int[-230427|0xfffffffffffc7be5]  <||@
  Comment 2159 424 rbp|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 2161 430 JUMP ~[] destination: B45 -> B47  <||@
  Comment 2166 block B112 null  <||@
  Comment 2166 1032 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2166 1034 r10|DWORD = MOVE input: int[-212531|0xfffffffffffcc1cd]  <||@
  Comment 2172 1036 JUMP ~[] destination: B112 -> B118  <||@
  Comment 2177 block B19 null  <||@
  Comment 2177 162 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2177 164 r10|DWORD = MOVE input: int[-217619|0xfffffffffffcaded]  <||@
  Comment 2183 166 JUMP ~[] destination: B19 -> B118  <||@
  Comment 2188 block B3 null  <||@
  Comment 2188 24 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2188 26 r10|DWORD = MOVE input: int[-206867|0xfffffffffffcd7ed]  <||@
  Comment 2194 28 JUMP ~[] destination: B3 -> B118  <||@
  Comment 2199 block B116 null  <||@
  Comment 2199 1056 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2199 1058 r10|DWORD = MOVE input: int[-206643|0xfffffffffffcd8cd]  <||@
  Comment 2205 1060 JUMP ~[] destination: B116 -> B118  <||@
  Comment 2210 block B12 null  <||@
  Comment 2210 100 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2210 102 r10|DWORD = MOVE input: int[-215059|0xfffffffffffcb7ed]  <||@
  Comment 2216 104 JUMP ~[] destination: B12 -> B118  <||@
  Comment 2221 block B101 null  <||@
  Comment 2221 942 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2221 944 r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 2226 946 r10|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2231 948 r11|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2236 950 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2241 952 MOV [r15|QWORD + 668] y: -286739 size: DWORD  <||@
  Comment 2252 954 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2259 956 DEOPT info [bci:10, 70, 37]  <||@
  Comment 2259 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2264 [rdx:0, r11:0]at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 10, duringCall: false, rethrow: false]
              |0           |1  |2  |3 
     locals:  |-           |-  |-  |- 
     stack:   |int[0|0x0]  |   |   |  
  at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70, duringCall: true, rethrow: false]
              |0             |1             |2  |3  |4  |5          |6        
     locals:  |r11|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |r10|DWORD  |r8|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 2265 block B95 null  <||@
  Comment 2265 870 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2265 872 r11|DWORD = MOVE input: int[-293147|0xfffffffffffb86e5]  <||@
  Comment 2271 874 JUMP ~[] destination: B95 -> B96  <||@
  Comment 2276 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2276 4  <||@
  Comment 2282 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 2282 5  <||@
  HexCodeFile>>> <|@
end_nmethod
