begin_compilation
  name " HotSpotCompilation-9212[org.graalvm.collections.EconomicMapImpl$2.getKey()]"
  method "HotSpotCompilation-9212[org.graalvm.collections.EconomicMapImpl$2.getKey()]"
  date 1527005200294
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a70 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a70  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lorg/graalvm/collections/EconomicMapImpl$2;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v75 v76 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a70 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a70 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$2.this$0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$2.getKey(EconomicMapImpl.java:741) [bci: 1]
nullCheck: false
stamp: n# Lorg/graalvm/collections/EconomicMapImpl;
=== Inputs ===
stateBefore: - 
guard: - 
address: v75 
=== Succesors ===
next: a71 
=== Usages ===
v77 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v75 #next: a71  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<EconomicMapImpl$2.getKey()>
duringCall: false
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 741
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v65 a71 i72 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a70 
=== Succesors ===
=== Usages ===
a71 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a70  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a71 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$2.getKey(EconomicMapImpl.java:741) [bci: 8]
nullCheck: true
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v77 
=== Succesors ===
next: i72 
=== Usages ===
a24 v78 
=== Predecessor ===
a70 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v77 #next: i72  <|@  <|@
f <@~|@floating>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a71 
=== Succesors ===
=== Usages ===
i72 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a71  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i72 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$2.getKey(EconomicMapImpl.java:741) [bci: 8]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v78 
=== Succesors ===
next: i73 
=== Usages ===
v30 
=== Predecessor ===
a71 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v78 #next: i73  <|@  <|@
f <@~|@floating>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i73 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i73 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$2.current
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$2.getKey(EconomicMapImpl.java:741) [bci: 5]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v76 
=== Succesors ===
next: v58 
=== Usages ===
i10 
=== Predecessor ===
i72 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v76 #next: v58  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$2.getKey(EconomicMapImpl.java:741) [bci: 8]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i10 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$2.getKey(EconomicMapImpl.java:741) [bci: 8]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i73 
y: i9 
=== Succesors ===
=== Usages ===
v79 v30 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i73 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$2.getKey(EconomicMapImpl.java:741) [bci: 8]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i10 
y: i72 
=== Succesors ===
=== Usages ===
v58 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i10 y: i72  <|@  <|@
f <@*|@fixed>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$2.getKey(EconomicMapImpl.java:741) [bci: 8]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v30 
=== Succesors ===
trueSuccessor: v55 
falseSuccessor: v57 
=== Usages ===
=== Predecessor ===
i73 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v30 #trueSuccessor: v55 #falseSuccessor: v57  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$2.getKey(EconomicMapImpl.java:741) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: a74 
=== Usages ===
a74 
=== Predecessor ===
v58 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a74  <|@  <|@
f <@~|@floating>@ <|@
tid a24 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$2.getKey(EconomicMapImpl.java:741) [bci: 8]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a71 
=== Succesors ===
=== Usages ===
v79 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a71  <|@  <|@
f <@~|@floating>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a24 
index: i10 
=== Succesors ===
=== Usages ===
a74 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a24 index: i10  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a74 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$2.getKey(EconomicMapImpl.java:741) [bci: 8]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v55 
address: v79 
=== Succesors ===
next: v12 
=== Usages ===
a39 
=== Predecessor ===
v55 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v55 address: v79 #next: v12  <|@  <|@
f <@~|@floating>@ <|@
tid a39 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$2.getKey(EconomicMapImpl.java:741) [bci: 8]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a74 
=== Succesors ===
=== Usages ===
v12 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a74  <|@  <|@
f <@*|@fixed>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$2.getKey(EconomicMapImpl.java:741) [bci: 11]
stamp: void
=== Inputs ===
result: a39 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a74 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a39 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$2.getKey(EconomicMapImpl.java:741) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v65 
=== Usages ===
=== Predecessor ===
v58 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v65  <|@  <|@
f <@~|@floating>@ <|@
tid a62 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v65 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i69 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -7963
stableDimension: 0
stamp: i32 [-7963] ⇊00000000ffffe0e5 ⇈00000000ffffe0e5
stampKind: i32
value: int[-7963|0xffffffffffffe0e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v65 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i69 
speculation: a62 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v57 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i69 speculation: a62  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a70 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a70  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lorg/graalvm/collections/EconomicMapImpl$2;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v75 v76 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v75 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a70 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a70 <|@
result v1|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$2.this$0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$2.getKey(EconomicMapImpl.java:741) [bci: 1]
nullCheck: false
stamp: n# Lorg/graalvm/collections/EconomicMapImpl;
=== Inputs ===
stateBefore: - 
guard: - 
address: v75 
=== Succesors ===
next: a71 
=== Usages ===
v77 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v75 #next: a71  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<EconomicMapImpl$2.getKey()>
duringCall: false
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 741
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v65 a71 i72 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v77 <|@
result [v1|DWORD[.] * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a70 
=== Succesors ===
=== Usages ===
a71 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a70  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a71 <|@
result v2|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$2.getKey(EconomicMapImpl.java:741) [bci: 8]
nullCheck: true
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v77 
=== Succesors ===
next: i72 
=== Usages ===
a24 v78 
=== Predecessor ===
a70 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v77 #next: i72  <|@  <|@
f <@~|@floating>@ <|@
tid v78 <|@
result [v2|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a71 
=== Succesors ===
=== Usages ===
i72 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a71  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i72 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$2.getKey(EconomicMapImpl.java:741) [bci: 8]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v78 
=== Succesors ===
next: i73 
=== Usages ===
v30 
=== Predecessor ===
a71 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v78 #next: i73  <|@  <|@
f <@~|@floating>@ <|@
tid v76 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i73 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i73 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$2.current
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$2.getKey(EconomicMapImpl.java:741) [bci: 5]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v76 
=== Succesors ===
next: v58 
=== Usages ===
i10 
=== Predecessor ===
i72 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v76 #next: v58  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$2.getKey(EconomicMapImpl.java:741) [bci: 8]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i10 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$2.getKey(EconomicMapImpl.java:741) [bci: 8]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i73 
y: i9 
=== Succesors ===
=== Usages ===
v79 v30 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i73 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$2.getKey(EconomicMapImpl.java:741) [bci: 8]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i10 
y: i72 
=== Succesors ===
=== Usages ===
v58 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i10 y: i72  <|@  <|@
f <@*|@fixed>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$2.getKey(EconomicMapImpl.java:741) [bci: 8]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v30 
=== Succesors ===
trueSuccessor: v55 
falseSuccessor: v57 
=== Usages ===
=== Predecessor ===
i73 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v30 #trueSuccessor: v55 #falseSuccessor: v57  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6d9e5fe6 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl$2.getKey(EconomicMapImpl.java:741) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD[.] = MOV [v1|DWORD[.] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl$2.getKey(EconomicMapImpl.java:741) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v3|DWORD = MOV [v2|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SHL v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$2.getKey(EconomicMapImpl.java:741) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: a74 
=== Usages ===
a74 
=== Predecessor ===
v58 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a74  <|@  <|@
f <@~|@floating>@ <|@
tid a24 <|@
result v6|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$2.getKey(EconomicMapImpl.java:741) [bci: 8]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a71 
=== Succesors ===
=== Usages ===
v79 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a71  <|@  <|@
f <@~|@floating>@ <|@
tid v79 <|@
result [v6|QWORD[.] + v5|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a24 
index: i10 
=== Succesors ===
=== Usages ===
a74 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a24 index: i10  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a74 <|@
result v7|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$2.getKey(EconomicMapImpl.java:741) [bci: 8]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v55 
address: v79 
=== Succesors ===
next: v12 
=== Usages ===
a39 
=== Predecessor ===
v55 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v55 address: v79 #next: v12  <|@  <|@
f <@~|@floating>@ <|@
tid a39 <|@
result v8|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$2.getKey(EconomicMapImpl.java:741) [bci: 8]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a74 
=== Succesors ===
=== Usages ===
v12 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a74  <|@  <|@
f <@*|@fixed>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$2.getKey(EconomicMapImpl.java:741) [bci: 11]
stamp: void
=== Inputs ===
result: a39 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a74 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a39 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5e5081b7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[.] = MOV [v6|QWORD[.] + v5|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5e5081b7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$2.getKey(EconomicMapImpl.java:741) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v65 
=== Usages ===
=== Predecessor ===
v58 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v65  <|@  <|@
f <@~|@floating>@ <|@
tid a62 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v65 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i69 <|@
result int[-7963|0xffffffffffffe0e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -7963
stableDimension: 0
stamp: i32 [-7963] ⇊00000000ffffe0e5 ⇈00000000ffffe0e5
stampKind: i32
value: int[-7963|0xffffffffffffe0e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v65 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i69 
speculation: a62 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v57 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i69 speculation: a62  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -7963 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl$2.getKey(EconomicMapImpl.java:741) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6d9e5fe6 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl$2.getKey(EconomicMapImpl.java:741) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD[.] = MOV [v1|DWORD[.] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl$2.getKey(EconomicMapImpl.java:741) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v3|DWORD = MOV [v2|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SHL v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5e5081b7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[.] = MOV [v6|QWORD[.] + v5|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5e5081b7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -7963 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl$2.getKey(EconomicMapImpl.java:741) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #0          // this$0:org.graalvm.collections.EconomicMapImpl
     4: aload_0       
     5: getfield      #2          // current:int
     8: invokestatic  #4          // org.graalvm.collections.EconomicMapImpl.access$200:(org.graalvm.collections.EconomicMapImpl, int)java.lang.Object
    11: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6d9e5fe6 slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$2.getKey(EconomicMapImpl.java:741) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction rax|DWORD[.] = MOV [rax|DWORD[.] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$2.getKey(EconomicMapImpl.java:741) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   14  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   16  <|@ instruction r11|DWORD = SHL r11|DWORD size: DWORD <|@ <|@
      nr   18  <|@ instruction CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5e5081b7 encoding: base: 0 shift: 3 <|@ <|@
      nr   26  <|@ instruction rax|DWORD[.] = MOV [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5e5081b7 encoding: base: 0 shift: 3 <|@ <|@
      nr   32  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction MOV [r15|QWORD + 668] y: -7963 size: DWORD <|@ <|@
      nr   38  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   40  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$2.getKey(EconomicMapImpl.java:741) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #0          // this$0:org.graalvm.collections.EconomicMapImpl
     4: aload_0       
     5: getfield      #2          // current:int
     8: invokestatic  #4          // org.graalvm.collections.EconomicMapImpl.access$200:(org.graalvm.collections.EconomicMapImpl, int)java.lang.Object
    11: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6d9e5fe6 slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$2.getKey(EconomicMapImpl.java:741) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction rax|DWORD[.] = MOV [rax|DWORD[.] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$2.getKey(EconomicMapImpl.java:741) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   14  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   16  <|@ instruction r11|DWORD = SHL r11|DWORD size: DWORD <|@ <|@
      nr   18  <|@ instruction CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5e5081b7 encoding: base: 0 shift: 3 <|@ <|@
      nr   26  <|@ instruction rax|DWORD[.] = MOV [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5e5081b7 encoding: base: 0 shift: 3 <|@ <|@
      nr   32  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction MOV [r15|QWORD + 668] y: -7963 size: DWORD <|@ <|@
      nr   38  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   40  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$2.getKey(EconomicMapImpl.java:741) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #0          // this$0:org.graalvm.collections.EconomicMapImpl
     4: aload_0       
     5: getfield      #2          // current:int
     8: invokestatic  #4          // org.graalvm.collections.EconomicMapImpl.access$200:(org.graalvm.collections.EconomicMapImpl, int)java.lang.Object
    11: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24108b46108b04c518000000448b14c50c000000448b5e0c41d1e3453bd30f862000000048c1e003428b44981048c1e003488b6c24104883c418850500000000c5f877c341c7879c020000e5e0ffff4d89a7a8020000e80000000090e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6d9e5fe6 slotKind: QWORD  <||@
  Comment 48 8 rax|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 51 10 rax|DWORD[.] = MOV [rax|DWORD[.] * 8 + 24] size: DWORD state [bci:0]  <||@
  Comment 51 [rsi:0]at org.graalvm.collections.EconomicMapImpl$2.getKey(EconomicMapImpl.java:741) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 51 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 58 12 r10|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 58 [rax:0, rsi:0]at org.graalvm.collections.EconomicMapImpl$2.getKey(EconomicMapImpl.java:741) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 58 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 66 14 r11|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 70 16 r11|DWORD = SHL r11|DWORD size: DWORD  <||@
  Comment 73 18 CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 76 20 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 82 block B1 null  <||@
  Comment 82 22 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 82 24 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5e5081b7 encoding: base: 0 shift: 3  <||@
  Comment 86 26 rax|DWORD[.] = MOV [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD  <||@
  Comment 91 28 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5e5081b7 encoding: base: 0 shift: 3  <||@
  Comment 95 32 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 104 12  <||@
  Comment 114 block B2 null  <||@
  Comment 114 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 114 36 MOV [r15|QWORD + 668] y: -7963 size: DWORD  <||@
  Comment 125 38 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 132 40 DEOPT info [bci:0]  <||@
  Comment 132 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 137 [rsi:0]at org.graalvm.collections.EconomicMapImpl$2.getKey(EconomicMapImpl.java:741) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 138 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 138 4  <||@
  Comment 144 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 144 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9212[org.graalvm.collections.EconomicMapImpl$2.getKey()]"
  method "HotSpotCompilation-9212[org.graalvm.collections.EconomicMapImpl$2.getKey()]"
  date 1527005200319
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 106be7f20 448b560849c1e203493bc20f852fdfc1ff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24108b46108b04c518000000448b14c50c000000448b5e0c41d1e3453bd30f862000000048c1e003428b44981048c1e003488b6c24104883c41885057870cafdc5f877c341c7879c020000e5e0ffff4d89a7a8020000e855f6c1ff90e87126060090e84bf5c1ff90f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6d9e5fe6 slotKind: QWORD  <||@
  Comment 48 8 rax|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 51 10 rax|DWORD[.] = MOV [rax|DWORD[.] * 8 + 24] size: DWORD state [bci:0]  <||@
  Comment 51 [rsi:0]at org.graalvm.collections.EconomicMapImpl$2.getKey(EconomicMapImpl.java:741) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 51 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 58 12 r10|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 58 [rax:0, rsi:0]at org.graalvm.collections.EconomicMapImpl$2.getKey(EconomicMapImpl.java:741) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 58 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 66 14 r11|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 70 16 r11|DWORD = SHL r11|DWORD size: DWORD  <||@
  Comment 73 18 CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 76 20 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 82 block B1 null  <||@
  Comment 82 22 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 82 24 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5e5081b7 encoding: base: 0 shift: 3  <||@
  Comment 86 26 rax|DWORD[.] = MOV [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD  <||@
  Comment 91 28 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5e5081b7 encoding: base: 0 shift: 3  <||@
  Comment 95 32 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 104 12  <||@
  Comment 114 block B2 null  <||@
  Comment 114 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 114 36 MOV [r15|QWORD + 668] y: -7963 size: DWORD  <||@
  Comment 125 38 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 132 40 DEOPT info [bci:0]  <||@
  Comment 132 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 137 [rsi:0]at org.graalvm.collections.EconomicMapImpl$2.getKey(EconomicMapImpl.java:741) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 138 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 138 4  <||@
  Comment 144 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 144 5  <||@
  HexCodeFile>>> <|@
end_nmethod
