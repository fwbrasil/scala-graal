begin_compilation
  name " HotSpotCompilation-9887[java.util.ArrayDeque.doubleCapacity()]"
  method "HotSpotCompilation-9887[java.util.ArrayDeque.doubleCapacity()]"
  date 1527005229392
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a421 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a421  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/util/ArrayDeque;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v424 v425 v427 ?15 j290 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a421 v129 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a421 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayDeque.elements
nodeSourcePosition: at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:157) [bci: 31]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v425 
=== Succesors ===
next: i422 
=== Usages ===
a32 v426 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v425 #next: i422  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<ArrayDeque.doubleCapacity()>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: ArrayDeque.java
sourceLine: 155
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - 
=== Succesors ===
=== Usages ===
v162 a198 i422 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a421 
=== Succesors ===
=== Usages ===
i422 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a421  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i422 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 60]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:163) [bci: 76]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v426 
=== Succesors ===
next: v147 
=== Usages ===
v133 i8 i9 ?15 i299 v302 
=== Predecessor ===
a421 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v426 #next: v147  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:155) [bci: 0]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i9 v360 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:159) [bci: 42]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i422 
y: i3 
=== Succesors ===
=== Usages ===
v10 j303 i68 i111 v225 i247 v360 v183 a198 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i422 y: i3  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:155) [bci: 3]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v10 v264 a198 v130 v69 v93 v100 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:160) [bci: 47]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i9 
y: i4 
=== Succesors ===
=== Usages ===
v147 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i9 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:160) [bci: 47]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v10 
=== Succesors ===
trueSuccessor: v146 
falseSuccessor: v144 
=== Usages ===
=== Predecessor ===
i422 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v10 #trueSuccessor: v146 #falseSuccessor: v144  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:160) [bci: 47]
stamp: void
=== Inputs ===
=== Succesors ===
next: v163 
=== Usages ===
=== Predecessor ===
v147 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v163  <|@  <|@
f <@~|@floating>@ <|@
tid i164 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -9747
stableDimension: 0
stamp: i32 [-9747] ⇊00000000ffffd9ed ⇈00000000ffffd9ed
stampKind: i32
value: int[-9747|0xffffffffffffd9ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i160 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
v146 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:160) [bci: 47]
stamp: void
=== Inputs ===
=== Succesors ===
next: i423 
=== Usages ===
=== Predecessor ===
v147 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i423  <|@  <|@
f <@~|@floating>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i423 v130 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i423 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayDeque.head
nodeSourcePosition: at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:156) [bci: 26]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v424 
=== Succesors ===
next: v49 
=== Usages ===
i8 j273 ?15 v100 i111 
=== Predecessor ===
v144 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v424 #next: v49  <|@  <|@
f <@~|@floating>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 41]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:164) [bci: 88]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i423 
y: i4 
=== Succesors ===
=== Usages ===
v49 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i423 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i166 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -19041
stableDimension: 0
stamp: i32 [-19041] ⇊00000000ffffb59f ⇈00000000ffffb59f
stampKind: i32
value: int[-19041|0xffffffffffffb59f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i160 i160 i160 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:163) [bci: 76]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v100 
=== Succesors ===
trueSuccessor: v48 
falseSuccessor: v47 
=== Usages ===
=== Predecessor ===
i423 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v100 #trueSuccessor: v48 #falseSuccessor: v47  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:163) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v165 
=== Usages ===
=== Predecessor ===
v49 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v165  <|@  <|@
f <@*|@fixed>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
v48 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:163) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v61 
=== Usages ===
=== Predecessor ===
v49 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v61  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:158) [bci: 38]
stamp: i32
=== Inputs ===
x: i422 
y: i423 
=== Succesors ===
=== Usages ===
j281 ?15 i68 v112 v93 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i422 y: i423  <|@  <|@
f <@~|@floating>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 22]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:164) [bci: 88]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i8 
y: i4 
=== Succesors ===
=== Usages ===
v61 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i8 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 52]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:163) [bci: 76]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v93 
=== Succesors ===
trueSuccessor: v60 
falseSuccessor: v58 
=== Usages ===
=== Predecessor ===
v47 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v93 #trueSuccessor: v60 #falseSuccessor: v58  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:163) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v168 
=== Usages ===
=== Predecessor ===
v61 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v168  <|@  <|@
f <@*|@fixed>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:163) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
v60 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 55]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:163) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v73 
=== Usages ===
=== Predecessor ===
v61 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v73  <|@  <|@
f <@~|@floating>@ <|@
tid i68 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:163) [bci: 76]
stamp: i32
=== Inputs ===
x: i9 
y: i8 
=== Succesors ===
=== Usages ===
v69 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i9 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:163) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i68 
y: i4 
=== Succesors ===
=== Usages ===
v73 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i68 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:163) [bci: 76]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v69 
=== Succesors ===
trueSuccessor: v72 
falseSuccessor: v70 
=== Usages ===
=== Predecessor ===
v58 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v69 #trueSuccessor: v72 #falseSuccessor: v70  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576803513614379298
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:163) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v167 
=== Usages ===
=== Predecessor ===
v73 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v167  <|@  <|@
f <@*|@fixed>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:163) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
v72 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B7" "B5" 
    successors 
    xhandlers
    flags 
    probability 4584217951810505934
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i160 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-19041 - -8715] ⇊00000000ffff9185 ⇈00000000fffffdff
valueDescription: i32
=== Inputs ===
merge: v156 
values: i164 i166 i166 i166 
=== Succesors ===
=== Usages ===
v162 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v156 values: i164 i166 i166 i166  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v163 v165 v167 v168 
=== Succesors ===
next: v162 
=== Usages ===
i160 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v163 v165 v167 v168 #next: v162  <|@  <|@
f <@~|@floating>@ <|@
tid a159 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v162 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i160 
speculation: a159 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v156 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i160 speculation: a159  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" "B13" 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:163) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: j177 
=== Usages ===
=== Predecessor ===
v73 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j177  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j177 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j222 
=== Usages ===
v429 v430 
=== Predecessor ===
v70 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j222  <|@  <|@
f <@~|@floating>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j177 
index: - 
=== Succesors ===
=== Usages ===
j222 v224 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j177 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j222 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v429 
=== Succesors ===
next: j223 
=== Usages ===
j181 v431 v432 a197 v437 v433 v434 v435 v436 
=== Predecessor ===
j177 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v429 #next: j223  <|@  <|@
f <@~|@floating>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j177 
index: - 
=== Succesors ===
=== Usages ===
j223 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j177 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j223 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v430 
=== Succesors ===
next: v186 
=== Usages ===
v187 
=== Predecessor ===
j222 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v430 #next: v186  <|@  <|@
f <@~|@floating>@ <|@
tid i182 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v183 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i9 
y: i182 
=== Succesors ===
=== Usages ===
v186 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i9 y: i182  <|@  <|@
f <@~|@floating>@ <|@
tid j172 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v226 j253 v259 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v183 
=== Succesors ===
trueSuccessor: v185 
falseSuccessor: v184 
=== Usages ===
=== Predecessor ===
j223 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v183 #trueSuccessor: v185 #falseSuccessor: v184  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606040928331984752
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v193 
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v193  <|@  <|@
f <@~|@floating>@ <|@
tid i298 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i299 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i299 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i422 
y: i298 
=== Succesors ===
=== Usages ===
i206 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i422 y: i298  <|@  <|@
f <@~|@floating>@ <|@
tid i205 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i206 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i206 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: i32 [-2147483641 - 2147483647] ⇊0000000000000007
=== Inputs ===
x: i299 
y: i205 
=== Succesors ===
=== Usages ===
i176 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i299 y: i205  <|@  <|@
f <@~|@floating>@ <|@
tid i175 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i176 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i176 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i206 
y: i175 
=== Succesors ===
=== Usages ===
j180 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i206 y: i175  <|@  <|@
f <@~|@floating>@ <|@
tid j180 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i176 
=== Succesors ===
=== Usages ===
j181 v433 v434 v435 v436 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i176  <|@  <|@
f <@~|@floating>@ <|@
tid j181 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: i64
=== Inputs ===
x: j180 
y: j222 
=== Succesors ===
=== Usages ===
v187 v224 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j180 y: j222  <|@  <|@
f <@~|@floating>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j223 
y: j181 
=== Succesors ===
=== Usages ===
v193 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j223 y: j181  <|@  <|@
f <@*|@fixed>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v187 
=== Succesors ===
trueSuccessor: v192 
falseSuccessor: v191 
=== Usages ===
=== Predecessor ===
v185 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v187 #trueSuccessor: v192 #falseSuccessor: v191  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4576187675404546780
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v190 
=== Usages ===
=== Predecessor ===
v193 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v190  <|@  <|@
f <@*|@fixed>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v189 
=== Predecessor ===
v192 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4605962271244117669
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v224 
=== Usages ===
=== Predecessor ===
v193 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v224  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v429 
value: j181 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v211 
=== Usages ===
=== Predecessor ===
v191 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v429 value: j181 stateAfter: - lastLocationAccess: - #next: v211  <|@  <|@
f <@~|@floating>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j180 
index: j222 
=== Succesors ===
=== Usages ===
v211 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j180 index: j222  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: void
=== Inputs ===
address: v433 
=== Succesors ===
next: v214 
=== Usages ===
=== Predecessor ===
v224 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v433 #next: v214  <|@  <|@
f <@~|@floating>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j180 
index: j222 
=== Succesors ===
=== Usages ===
v214 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j180 index: j222  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: void
=== Inputs ===
address: v434 
=== Succesors ===
next: v217 
=== Usages ===
=== Predecessor ===
v211 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v434 #next: v217  <|@  <|@
f <@~|@floating>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j180 
index: j222 
=== Succesors ===
=== Usages ===
v217 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j180 index: j222  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: void
=== Inputs ===
address: v435 
=== Succesors ===
next: v220 
=== Usages ===
=== Predecessor ===
v214 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v435 #next: v220  <|@  <|@
f <@~|@floating>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j180 
index: j222 
=== Succesors ===
=== Usages ===
v220 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j180 index: j222  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: void
=== Inputs ===
address: v436 
=== Succesors ===
next: v225 
=== Usages ===
=== Predecessor ===
v217 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v436 #next: v225  <|@  <|@
f <@~|@floating>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j222 
index: - 
=== Succesors ===
=== Usages ===
v225 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j222 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v431 
value: i9 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v226 
=== Usages ===
=== Predecessor ===
v220 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v431 value: i9 stateAfter: - lastLocationAccess: - #next: v226  <|@  <|@
f <@~|@floating>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j222 
index: - 
=== Succesors ===
=== Usages ===
v226 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j222 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v432 
value: j172 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v230 
=== Usages ===
=== Predecessor ===
v225 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v432 value: j172 stateAfter: - lastLocationAccess: - #next: v230  <|@  <|@
f <@~|@floating>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j222 
index: - 
=== Succesors ===
=== Usages ===
v230 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j222 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v230 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v437 
value: v300 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v196 
=== Usages ===
=== Predecessor ===
v226 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v437 value: v300 stateAfter: - lastLocationAccess: - #next: v196  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: a197 
=== Usages ===
=== Predecessor ===
v230 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a197  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a197 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j222 
=== Succesors ===
next: v199 
=== Usages ===
a202 
=== Predecessor ===
v196 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j222 #next: v199  <|@  <|@
f <@*|@fixed>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v200 
=== Predecessor ===
a197 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4591656161806905670
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v188 
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v188  <|@  <|@
f <@*|@fixed>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v189 
=== Predecessor ===
v184 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 4592285418509842338
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v188 v190 
=== Succesors ===
next: a198 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v188 v190 #next: a198  <|@  <|@
f <@~|@floating>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a198 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a198 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?2 
arguments: v171 i9 i4 
=== Succesors ===
next: v201 
=== Usages ===
a202 
=== Predecessor ===
v189 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2 arguments: v171 i9 i4 #next: v201  <|@  <|@
f <@*|@fixed>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v200 
=== Predecessor ===
a198 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a202 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v200 
values: a197 a198 
=== Succesors ===
=== Usages ===
v428 a154 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v200 values: a197 a198  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v199 v201 
=== Succesors ===
next: v362 
=== Usages ===
a202 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v199 v201 #next: v362  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v311 
=== Usages ===
j364 
=== Predecessor ===
v200 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v311  <|@  <|@
f <@~|@floating>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a202 
index: - 
=== Succesors ===
=== Usages ===
j364 j245 j243 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a202 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i9 
y: i3 
=== Succesors ===
=== Usages ===
v311 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i9 y: i3  <|@  <|@
f <@~|@floating>@ <|@
tid j257 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j258 j405 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v360 
=== Succesors ===
trueSuccessor: v309 
falseSuccessor: v310 
=== Usages ===
=== Predecessor ===
v362 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v360 #trueSuccessor: v309 #falseSuccessor: v310  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602411296347581849
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v328 
=== Usages ===
=== Predecessor ===
v311 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v328  <|@  <|@
f <@*|@fixed>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v329 
=== Predecessor ===
v309 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4602411296347581849
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v310 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v314 
=== Usages ===
=== Predecessor ===
v311 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v314  <|@  <|@
f <@~|@floating>@ <|@
tid j364 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v362 
address: v428 
=== Succesors ===
=== Usages ===
v443 v444 v445 v446 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v362 address: v428  <|@  <|@
f <@~|@floating>@ <|@
tid j303 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483646] ⇈fffffffffffffffe
=== Inputs ===
value: i9 
=== Succesors ===
=== Usages ===
j405 j392 j398 j402 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i9  <|@  <|@
f <@~|@floating>@ <|@
tid j391 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j392 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j392 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483638] ⇈fffffffffffffffe
=== Inputs ===
x: j303 
y: j391 
=== Succesors ===
=== Usages ===
v393 v395 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j303 y: j391  <|@  <|@
f <@~|@floating>@ <|@
tid j209 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j385 v393 j379 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j392 
y: j209 
=== Succesors ===
=== Usages ===
v314 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j392 y: j209  <|@  <|@
f <@*|@fixed>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v393 
=== Succesors ===
trueSuccessor: v312 
falseSuccessor: v313 
=== Usages ===
=== Predecessor ===
v310 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v393 #trueSuccessor: v312 #falseSuccessor: v313  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" 
    xhandlers
    flags 
    probability 4600226377240162867
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v324 
=== Usages ===
=== Predecessor ===
v314 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v324  <|@  <|@
f <@*|@fixed>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v325 
=== Predecessor ===
v312 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4593404097092840857
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v315 
=== Usages ===
=== Predecessor ===
v314 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v315  <|@  <|@
f <@~|@floating>@ <|@
tid j228 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j390 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null,null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n -,n -,n -,n -,n ->
value: SIMD<null,null,null,null,null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v416 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v316 
=== Predecessor ===
v313 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B40" 
    successors "B21" "B40" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602411296347581849
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j385 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v316 
values: j209 j390 
=== Succesors ===
=== Usages ===
v446 j390 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v316 values: j209 j390  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v315 
=== Succesors ===
next: v416 
=== Usages ===
j385 v320 v321 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v315 #next: v416  <|@  <|@
f <@~|@floating>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j364 
index: j385 
=== Succesors ===
=== Usages ===
v416 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j364 index: j385  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v446 
value: v417 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v323 
=== Usages ===
=== Predecessor ===
v316 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v446 value: v417 stateAfter: - lastLocationAccess: - #next: v323  <|@  <|@
f <@~|@floating>@ <|@
tid j390 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j385 
y: j228 
=== Succesors ===
=== Usages ===
j379 j385 v395 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j385 y: j228  <|@  <|@
f <@~|@floating>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j392 
y: j390 
=== Succesors ===
=== Usages ===
v323 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j392 y: j390  <|@  <|@
f <@*|@fixed>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v395 
=== Succesors ===
trueSuccessor: v320 
falseSuccessor: v322 
=== Usages ===
=== Predecessor ===
v416 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v395 #trueSuccessor: v320 #falseSuccessor: v322  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593404097092840857
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v316 
=== Succesors ===
next: v326 
=== Usages ===
=== Predecessor ===
v323 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v316 #next: v326  <|@  <|@
f <@*|@fixed>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v325 
=== Predecessor ===
v320 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B18" "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4602411296347581849
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j379 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v325 
values: j209 j390 
=== Succesors ===
=== Usages ===
v445 j384 j372 v399 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v325 values: j209 j390  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v324 v326 
=== Succesors ===
next: v344 
=== Usages ===
j379 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v324 v326 #next: v344  <|@  <|@
f <@~|@floating>@ <|@
tid j397 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j398 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j398 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483642] ⇈fffffffffffffffe
=== Inputs ===
x: j303 
y: j397 
=== Succesors ===
=== Usages ===
v399 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j303 y: j397  <|@  <|@
f <@~|@floating>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j398 
y: j379 
=== Succesors ===
=== Usages ===
v344 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j398 y: j379  <|@  <|@
f <@*|@fixed>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v399 
=== Succesors ===
trueSuccessor: v343 
falseSuccessor: v342 
=== Usages ===
=== Predecessor ===
v325 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v399 #trueSuccessor: v343 #falseSuccessor: v342  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4593404097092840857
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v347 
=== Usages ===
=== Predecessor ===
v344 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v347  <|@  <|@
f <@*|@fixed>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v336 
=== Predecessor ===
v343 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4600226377240162867
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v415 
=== Usages ===
=== Predecessor ===
v344 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v415  <|@  <|@
f <@~|@floating>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j364 
index: j379 
=== Succesors ===
=== Usages ===
v415 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j364 index: j379  <|@  <|@
f <@~|@floating>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n ->
value: SIMD<null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v415 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v445 
value: v420 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v335 
=== Usages ===
=== Predecessor ===
v342 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v445 value: v420 stateAfter: - lastLocationAccess: - #next: v335  <|@  <|@
f <@~|@floating>@ <|@
tid j367 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j384 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j384 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j379 
y: j367 
=== Succesors ===
=== Usages ===
j372 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j379 y: j367  <|@  <|@
f <@*|@fixed>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v336 
=== Predecessor ===
v415 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4602411296347581849
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j372 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v336 
values: j384 j379 
=== Succesors ===
=== Usages ===
v444 j378 j365 v403 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v336 values: j384 j379  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v335 v347 
=== Succesors ===
next: v350 
=== Usages ===
j372 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v335 v347 #next: v350  <|@  <|@
f <@~|@floating>@ <|@
tid j401 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j402 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j402 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483644] ⇈fffffffffffffffe
=== Inputs ===
x: j303 
y: j401 
=== Succesors ===
=== Usages ===
v403 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j303 y: j401  <|@  <|@
f <@~|@floating>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j402 
y: j372 
=== Succesors ===
=== Usages ===
v350 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j402 y: j372  <|@  <|@
f <@*|@fixed>@ <|@
tid v350 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v403 
=== Succesors ===
trueSuccessor: v349 
falseSuccessor: v348 
=== Usages ===
=== Predecessor ===
v336 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v403 #trueSuccessor: v349 #falseSuccessor: v348  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4593404097092840857
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v353 
=== Usages ===
=== Predecessor ===
v350 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v353  <|@  <|@
f <@*|@fixed>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v339 
=== Predecessor ===
v349 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4600226377240162867
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v413 
=== Usages ===
=== Predecessor ===
v350 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v413  <|@  <|@
f <@~|@floating>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j364 
index: j372 
=== Succesors ===
=== Usages ===
v413 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j364 index: j372  <|@  <|@
f <@~|@floating>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL>
stampKind: <n -,n ->
value: SIMD<null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v413 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v444 
value: v419 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v338 
=== Usages ===
=== Predecessor ===
v348 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v444 value: v419 stateAfter: - lastLocationAccess: - #next: v338  <|@  <|@
f <@~|@floating>@ <|@
tid j377 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j378 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j378 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j372 
y: j377 
=== Succesors ===
=== Usages ===
j365 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j372 y: j377  <|@  <|@
f <@*|@fixed>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v339 
=== Predecessor ===
v413 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4602411296347581849
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j365 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v339 
values: j378 j372 
=== Succesors ===
=== Usages ===
v443 v406 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v339 values: j378 j372  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v338 v353 
=== Succesors ===
next: v356 
=== Usages ===
j365 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v338 v353 #next: v356  <|@  <|@
f <@~|@floating>@ <|@
tid j405 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483645] ⇊0000000000000001
=== Inputs ===
x: j303 
y: j257 
=== Succesors ===
=== Usages ===
v406 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j303 y: j257  <|@  <|@
f <@~|@floating>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j405 
y: j365 
=== Succesors ===
=== Usages ===
v356 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j405 y: j365  <|@  <|@
f <@*|@fixed>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v406 
=== Succesors ===
trueSuccessor: v355 
falseSuccessor: v354 
=== Usages ===
=== Predecessor ===
v339 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v406 #trueSuccessor: v355 #falseSuccessor: v354  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4593404097092840857
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v359 
=== Usages ===
=== Predecessor ===
v356 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v359  <|@  <|@
f <@*|@fixed>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v329 
=== Predecessor ===
v355 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4600226377240162867
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v411 
=== Usages ===
=== Predecessor ===
v356 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v411  <|@  <|@
f <@~|@floating>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j364 
index: j365 
=== Succesors ===
=== Usages ===
v411 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j364 index: j365  <|@  <|@
f <@~|@floating>@ <|@
tid a418 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v411 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v443 
value: a418 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v341 
=== Usages ===
=== Predecessor ===
v354 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v443 value: a418 stateAfter: - lastLocationAccess: - #next: v341  <|@  <|@
f <@*|@fixed>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v329 
=== Predecessor ===
v411 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B16" "B30" "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v328 v341 v359 
=== Succesors ===
next: v241 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v328 v341 v359 #next: v241  <|@  <|@
f <@~|@floating>@ <|@
tid i301 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
rawvalue: 2147483647
stableDimension: 0
stamp: i32 [2147483647] ⇊000000007fffffff ⇈000000007fffffff
stampKind: i32
value: int[2147483647|0x7fffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v302 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: void
=== Inputs ===
x: i422 
y: i301 
=== Succesors ===
=== Usages ===
v241 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i422 y: i301  <|@  <|@
f <@~|@floating>@ <|@
tid j266 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:158) [bci: 12]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j267 v442 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i242 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:157) [bci: 8]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j244 j251 j291 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v302 
=== Succesors ===
trueSuccessor: v239 
falseSuccessor: v240 
=== Usages ===
=== Predecessor ===
v329 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v302 #trueSuccessor: v239 #falseSuccessor: v240  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602411296347581849
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:155) [bci: 4]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v269 
=== Usages ===
=== Predecessor ===
v241 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v269  <|@  <|@
f <@*|@fixed>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v268 
=== Predecessor ===
v239 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4602411296347581849
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:157) [bci: 5]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: j243 
=== Usages ===
=== Predecessor ===
v241 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j243  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j243 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToFirstArrayElement(WriteBarrierSnippets.java:376) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 20]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v428 
=== Succesors ===
next: j245 
=== Usages ===
j244 
=== Predecessor ===
v240 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v428 #next: j245  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j245 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:385) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v428 
=== Succesors ===
next: v254 
=== Usages ===
j250 
=== Predecessor ===
j243 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v428 #next: v254  <|@  <|@
f <@~|@floating>@ <|@
tid i246 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i247 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i247 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i9 
y: i246 
=== Succesors ===
=== Usages ===
i248 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i9 y: i246  <|@  <|@
f <@~|@floating>@ <|@
tid i173 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i248 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i248 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: i32 [-2147483644 - 2147483644] ⇊0000000000000004 ⇈00000000fffffffc
=== Inputs ===
x: i247 
y: i173 
=== Succesors ===
=== Usages ===
j249 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i247 y: i173  <|@  <|@
f <@~|@floating>@ <|@
tid j249 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 26]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
resultBits: 64
stamp: i64 [-2147483644 - 2147483644] ⇊0000000000000004 ⇈fffffffffffffffc
=== Inputs ===
value: i248 
=== Succesors ===
=== Usages ===
j250 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i248  <|@  <|@
f <@~|@floating>@ <|@
tid j250 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 27]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: i64
=== Inputs ===
x: j245 
y: j249 
=== Succesors ===
=== Usages ===
j251 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j245 y: j249  <|@  <|@
f <@~|@floating>@ <|@
tid j251 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 34]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j250 
y: i242 
=== Succesors ===
=== Usages ===
j252 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j250 y: i242  <|@  <|@
f <@~|@floating>@ <|@
tid j244 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 24]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j243 
y: i242 
=== Succesors ===
=== Usages ===
j252 j267 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j243 y: i242  <|@  <|@
f <@~|@floating>@ <|@
tid j252 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 41]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: i64 [-36028797018963967 - 36028797018963967]
=== Inputs ===
x: j251 
y: j244 
=== Succesors ===
=== Usages ===
j253 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j251 y: j244  <|@  <|@
f <@~|@floating>@ <|@
tid j253 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 43]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: i64 [-36028797018963966 - 36028797018963968]
=== Inputs ===
x: j252 
y: j172 
=== Succesors ===
=== Usages ===
j256 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j252 y: j172  <|@  <|@
f <@*|@fixed>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v255 
=== Predecessor ===
j245 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B39" 
    successors "B35" "B39" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4606914895974952345
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j256 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v255 
values: j253 j258 
=== Succesors ===
=== Usages ===
j258 v259 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v255 values: j253 j258  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v254 
=== Succesors ===
next: v262 
=== Usages ===
j256 v260 v265 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v254 #next: v262  <|@  <|@
f <@~|@floating>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j256 
y: j172 
=== Succesors ===
=== Usages ===
v262 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j256 y: j172  <|@  <|@
f <@*|@fixed>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v259 
=== Succesors ===
trueSuccessor: v260 
falseSuccessor: v261 
=== Usages ===
=== Predecessor ===
v255 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v259 #trueSuccessor: v260 #falseSuccessor: v261  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602411296347581849
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:165) [bci: 76]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v255 
=== Succesors ===
next: v270 
=== Usages ===
=== Predecessor ===
v262 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v255 #next: v270  <|@  <|@
f <@*|@fixed>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v268 
=== Predecessor ===
v260 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v269 v270 
=== Succesors ===
next: a154 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v269 v270 #next: a154  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a154 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a202 
=== Succesors ===
next: j272 
=== Usages ===
j277 ?15 j285 a128 
=== Predecessor ===
v268 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a202 #next: j272  <|@  <|@
f <@~|@floating>@ <|@
tid a32 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:157) [bci: 31]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a421 
=== Succesors ===
=== Usages ===
j283 j272 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a421  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j272 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:163) [bci: 76]
stamp: i64
=== Inputs ===
object: a32 
=== Succesors ===
next: j277 
=== Usages ===
v438 
=== Predecessor ===
a154 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a32 #next: j277  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j277 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:163) [bci: 76]
stamp: i64
=== Inputs ===
object: a154 
=== Succesors ===
next: v282 
=== Usages ===
v439 
=== Predecessor ===
j272 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a154 #next: v282  <|@  <|@
f <@~|@floating>@ <|@
tid j273 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:163) [bci: 76]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i423 
=== Succesors ===
=== Usages ===
v438 v289 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i423  <|@  <|@
f <@~|@floating>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: j272 
index: j273 
=== Succesors ===
=== Usages ===
v282 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j272 index: j273  <|@  <|@
f <@~|@floating>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j277 
index: - 
=== Succesors ===
=== Usages ===
v282 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j277 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j281 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:163) [bci: 76]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i8 
=== Succesors ===
=== Usages ===
v282 v441 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i8  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: ObjectArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:163) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v438 v439 j281 
=== Succesors ===
next: v116 
=== Usages ===
=== Predecessor ===
j277 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v438 v439 j281 #next: v116  <|@  <|@
f <@~|@floating>@ <|@
tid i111 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:164) [bci: 88]
stamp: i32
=== Inputs ===
x: i9 
y: i423 
=== Succesors ===
=== Usages ===
v112 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i9 y: i423  <|@  <|@
f <@~|@floating>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:164) [bci: 88]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i111 
y: i8 
=== Succesors ===
=== Usages ===
v116 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i111 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:164) [bci: 88]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v112 
=== Succesors ===
trueSuccessor: v115 
falseSuccessor: v113 
=== Usages ===
=== Predecessor ===
v282 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v112 #trueSuccessor: v115 #falseSuccessor: v113  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:164) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
next: v117 
=== Usages ===
=== Predecessor ===
v116 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v117  <|@  <|@
tid ?15 <|@
d <@d|@=== Debug Properties ===
bci: 79
code: ResolvedJavaMethodBytecode<ArrayDeque.doubleCapacity()>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:163) [bci: 76]
rethrowException: false
sourceFile: ArrayDeque.java
sourceLine: 164
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i423 i422 i8 - a154 
=== Succesors ===
=== Usages ===
v117 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i423 i422 i8 - a154  <|@  <|@
f <@*|@fixed>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.DeoptimizeNode.deopt(DeoptimizationAction, DeoptimizationReason) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:263) [bci: 119]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:164) [bci: 88]
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?15 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v115 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?15  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:164) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
next: j283 
=== Usages ===
=== Predecessor ===
v116 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j283  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j283 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:164) [bci: 88]
stamp: i64
=== Inputs ===
object: a32 
=== Succesors ===
next: j285 
=== Usages ===
v440 
=== Predecessor ===
v113 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a32 #next: j285  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j285 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:164) [bci: 88]
stamp: i64
=== Inputs ===
object: a154 
=== Succesors ===
next: v289 
=== Usages ===
v441 
=== Predecessor ===
j283 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a154 #next: v289  <|@  <|@
f <@~|@floating>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j283 
index: - 
=== Succesors ===
=== Usages ===
v289 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j283 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: j285 
index: j281 
=== Succesors ===
=== Usages ===
v289 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j285 index: j281  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: ObjectArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:164) [bci: 88]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v440 v441 j273 
=== Succesors ===
next: v129 
=== Usages ===
=== Predecessor ===
j285 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v440 v441 j273 #next: v129  <|@  <|@
f <@~|@floating>@ <|@
tid a128 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:165) [bci: 94]
op: Compress
stamp: n! -
=== Inputs ===
value: a154 
=== Succesors ===
=== Usages ===
v129 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a154  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: ArrayDeque.elements
nodeSourcePosition: at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:165) [bci: 94]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v425 
value: a128 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j290 
=== Usages ===
=== Predecessor ===
v289 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v425 value: a128 stateAfter: - lastLocationAccess: - #next: j290  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j290 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:165) [bci: 94]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v294 
=== Usages ===
j291 
=== Predecessor ===
v129 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v294  <|@  <|@
f <@~|@floating>@ <|@
tid j291 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:165) [bci: 94]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j290 
y: i242 
=== Succesors ===
=== Usages ===
v442 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j290 y: i242  <|@  <|@
f <@~|@floating>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j291 
index: j266 
=== Succesors ===
=== Usages ===
v294 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j291 index: j266  <|@  <|@
f <@~|@floating>@ <|@
tid i295 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:165) [bci: 94]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v294 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:165) [bci: 94]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v442 
value: i295 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v130 
=== Usages ===
=== Predecessor ===
j290 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v442 value: i295 stateAfter: - lastLocationAccess: - #next: v130  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayDeque.head
nodeSourcePosition: at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:166) [bci: 99]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v424 
value: i4 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v133 
=== Usages ===
=== Predecessor ===
v294 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v424 value: i4 stateAfter: - lastLocationAccess: - #next: v133  <|@  <|@
f <@~|@floating>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v133 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayDeque.tail
nodeSourcePosition: at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:167) [bci: 104]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v427 
value: i422 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v25 
=== Usages ===
=== Predecessor ===
v130 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v427 value: i422 stateAfter: - lastLocationAccess: - #next: v25  <|@  <|@
f <@*|@fixed>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:168) [bci: 107]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v133 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B34" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4602411296347581849
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 58]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v264 
=== Usages ===
=== Predecessor ===
v262 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v264  <|@  <|@
f <@~|@floating>@ <|@
tid j258 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: i64
=== Inputs ===
x: j256 
y: j257 
=== Succesors ===
=== Usages ===
j256 j263 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j256 y: j257  <|@  <|@
f <@~|@floating>@ <|@
tid j267 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 62]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: i64 [4682670080 - 36028801701634047] ⇈00ffffffffffffff
=== Inputs ===
x: j244 
y: j266 
=== Succesors ===
=== Usages ===
j263 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j244 y: j266  <|@  <|@
f <@~|@floating>@ <|@
tid j263 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 65]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: i64
=== Inputs ===
x: j258 
y: j267 
=== Succesors ===
=== Usages ===
v264 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j258 y: j267  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
kind: boolean
nodeSourcePosition: at org.graalvm.compiler.replacements.nodes.DirectStoreNode.storeBoolean(long, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 70]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: void
=== Inputs ===
address: j263 
value: i4 
=== Succesors ===
next: v265 
=== Usages ===
=== Predecessor ===
v261 >@ <|@
instruction <@DirectStore|@org.graalvm.compiler.replacements.nodes.DirectStoreNode>@ address: j263 value: i4 #next: v265  <|@  <|@
f <@*|@fixed>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: void
=== Inputs ===
loopBegin: v255 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v264 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v255  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B20" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600226377240162867
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v321 
=== Usages ===
=== Predecessor ===
v323 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v321  <|@  <|@
f <@*|@fixed>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v316 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v322 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v316  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a421 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a421  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/util/ArrayDeque;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v424 v425 v427 ?15 j290 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v425 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a421 v129 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a421 <|@
result v1|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayDeque.elements
nodeSourcePosition: at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:157) [bci: 31]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v425 
=== Succesors ===
next: i422 
=== Usages ===
a32 v426 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v425 #next: i422  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<ArrayDeque.doubleCapacity()>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: ArrayDeque.java
sourceLine: 155
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - 
=== Succesors ===
=== Usages ===
v162 a198 i422 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v426 <|@
result [v1|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a421 
=== Succesors ===
=== Usages ===
i422 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a421  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i422 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 60]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:163) [bci: 76]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v426 
=== Succesors ===
next: v147 
=== Usages ===
v133 i8 i9 ?15 i299 v302 
=== Predecessor ===
a421 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v426 #next: v147  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:155) [bci: 0]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i9 v360 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:159) [bci: 42]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i422 
y: i3 
=== Succesors ===
=== Usages ===
v10 j303 i68 i111 v225 i247 v360 v183 a198 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i422 y: i3  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:155) [bci: 3]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v10 v264 a198 v130 v69 v93 v100 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:160) [bci: 47]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i9 
y: i4 
=== Succesors ===
=== Usages ===
v147 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i9 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:160) [bci: 47]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v10 
=== Succesors ===
trueSuccessor: v146 
falseSuccessor: v144 
=== Usages ===
=== Predecessor ===
i422 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v10 #trueSuccessor: v146 #falseSuccessor: v144  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@67208eab slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:155) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = SHL v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:160) [bci: 47]
stamp: void
=== Inputs ===
=== Succesors ===
next: v163 
=== Usages ===
=== Predecessor ===
v147 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v163  <|@  <|@
f <@~|@floating>@ <|@
tid i164 <|@
result int[-9747|0xffffffffffffd9ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -9747
stableDimension: 0
stamp: i32 [-9747] ⇊00000000ffffd9ed ⇈00000000ffffd9ed
stampKind: i32
value: int[-9747|0xffffffffffffd9ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i160 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
v146 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-9747|0xffffffffffffd9ed]] destination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:160) [bci: 47]
stamp: void
=== Inputs ===
=== Succesors ===
next: i423 
=== Usages ===
=== Predecessor ===
v147 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i423  <|@  <|@
f <@~|@floating>@ <|@
tid v424 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i423 v130 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i423 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayDeque.head
nodeSourcePosition: at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:156) [bci: 26]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v424 
=== Succesors ===
next: v49 
=== Usages ===
i8 j273 ?15 v100 i111 
=== Predecessor ===
v144 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v424 #next: v49  <|@  <|@
f <@~|@floating>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 41]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:164) [bci: 88]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i423 
y: i4 
=== Succesors ===
=== Usages ===
v49 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i423 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i166 <|@
result int[-19041|0xffffffffffffb59f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -19041
stableDimension: 0
stamp: i32 [-19041] ⇊00000000ffffb59f ⇈00000000ffffb59f
stampKind: i32
value: int[-19041|0xffffffffffffb59f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i160 i160 i160 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:163) [bci: 76]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v100 
=== Succesors ===
trueSuccessor: v48 
falseSuccessor: v47 
=== Usages ===
=== Predecessor ===
i423 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v100 #trueSuccessor: v48 #falseSuccessor: v47  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:163) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v165 
=== Usages ===
=== Predecessor ===
v49 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v165  <|@  <|@
f <@*|@fixed>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
v48 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-19041|0xffffffffffffb59f]] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:163) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v61 
=== Usages ===
=== Predecessor ===
v49 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v61  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:158) [bci: 38]
stamp: i32
=== Inputs ===
x: i422 
y: i423 
=== Succesors ===
=== Usages ===
j281 ?15 i68 v112 v93 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i422 y: i423  <|@  <|@
f <@~|@floating>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 22]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:164) [bci: 88]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i8 
y: i4 
=== Succesors ===
=== Usages ===
v61 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i8 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 52]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:163) [bci: 76]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v93 
=== Succesors ===
trueSuccessor: v60 
falseSuccessor: v58 
=== Usages ===
=== Predecessor ===
v47 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v93 #trueSuccessor: v60 #falseSuccessor: v58  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SUB (x: v2|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:163) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v168 
=== Usages ===
=== Predecessor ===
v61 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v168  <|@  <|@
f <@*|@fixed>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:163) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
v60 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-19041|0xffffffffffffb59f]] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 55]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:163) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v73 
=== Usages ===
=== Predecessor ===
v61 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v73  <|@  <|@
f <@~|@floating>@ <|@
tid i68 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:163) [bci: 76]
stamp: i32
=== Inputs ===
x: i9 
y: i8 
=== Succesors ===
=== Usages ===
v69 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i9 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:163) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i68 
y: i4 
=== Succesors ===
=== Usages ===
v73 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i68 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:163) [bci: 76]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v69 
=== Succesors ===
trueSuccessor: v72 
falseSuccessor: v70 
=== Usages ===
=== Predecessor ===
v58 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v69 #trueSuccessor: v72 #falseSuccessor: v70  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = SUB (x: v3|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v6|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576803513614379298
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:163) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v167 
=== Usages ===
=== Predecessor ===
v73 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v167  <|@  <|@
f <@*|@fixed>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:163) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
v72 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-19041|0xffffffffffffb59f]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B7" "B5" 
    successors 
    xhandlers
    flags 
    probability 4584217951810505934
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i160 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-19041 - -8715] ⇊00000000ffff9185 ⇈00000000fffffdff
valueDescription: i32
=== Inputs ===
merge: v156 
values: i164 i166 i166 i166 
=== Succesors ===
=== Usages ===
v162 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v156 values: i164 i166 i166 i166  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v163 v165 v167 v168 
=== Succesors ===
next: v162 
=== Usages ===
i160 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v163 v165 v167 v168 #next: v162  <|@  <|@
f <@~|@floating>@ <|@
tid a159 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v162 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i160 
speculation: a159 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v156 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i160 speculation: a159  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:155) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" "B13" 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:163) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: j177 
=== Usages ===
=== Predecessor ===
v73 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j177  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j177 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j222 
=== Usages ===
v429 v430 
=== Predecessor ===
v70 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j222  <|@  <|@
f <@~|@floating>@ <|@
tid v429 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j177 
index: - 
=== Succesors ===
=== Usages ===
j222 v224 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j177 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j222 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v429 
=== Succesors ===
next: j223 
=== Usages ===
j181 v431 v432 a197 v437 v433 v434 v435 v436 
=== Predecessor ===
j177 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v429 #next: j223  <|@  <|@
f <@~|@floating>@ <|@
tid v430 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j177 
index: - 
=== Succesors ===
=== Usages ===
j223 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j177 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j223 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v430 
=== Succesors ===
next: v186 
=== Usages ===
v187 
=== Predecessor ===
j222 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v430 #next: v186  <|@  <|@
f <@~|@floating>@ <|@
tid i182 <|@
result int[16777215|0xffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v183 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i9 
y: i182 
=== Succesors ===
=== Usages ===
v186 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i9 y: i182  <|@  <|@
f <@~|@floating>@ <|@
tid j172 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v226 j253 v259 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v183 
=== Succesors ===
trueSuccessor: v185 
falseSuccessor: v184 
=== Usages ===
=== Predecessor ===
j223 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v183 #trueSuccessor: v185 #falseSuccessor: v184  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606040928331984752
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v193 
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v193  <|@  <|@
f <@~|@floating>@ <|@
tid i298 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i299 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i299 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i422 
y: i298 
=== Succesors ===
=== Usages ===
i206 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i422 y: i298  <|@  <|@
f <@~|@floating>@ <|@
tid i205 <|@
result int[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i206 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i206 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: i32 [-2147483641 - 2147483647] ⇊0000000000000007
=== Inputs ===
x: i299 
y: i205 
=== Succesors ===
=== Usages ===
i176 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i299 y: i205  <|@  <|@
f <@~|@floating>@ <|@
tid i175 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i176 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i176 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i206 
y: i175 
=== Succesors ===
=== Usages ===
j180 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i206 y: i175  <|@  <|@
f <@~|@floating>@ <|@
tid j180 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i176 
=== Succesors ===
=== Usages ===
j181 v433 v434 v435 v436 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i176  <|@  <|@
f <@~|@floating>@ <|@
tid j181 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: i64
=== Inputs ===
x: j180 
y: j222 
=== Succesors ===
=== Usages ===
v187 v224 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j180 y: j222  <|@  <|@
f <@~|@floating>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j223 
y: j181 
=== Succesors ===
=== Usages ===
v193 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j223 y: j181  <|@  <|@
f <@*|@fixed>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v187 
=== Succesors ===
trueSuccessor: v192 
falseSuccessor: v191 
=== Usages ===
=== Predecessor ===
v185 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v187 #trueSuccessor: v192 #falseSuccessor: v191  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = SHL v2|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = LEA [v10|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = AND v11|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVSXD v12|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = ADD (x: v13|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4576187675404546780
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v190 
=== Usages ===
=== Predecessor ===
v193 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v190  <|@  <|@
f <@*|@fixed>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v189 
=== Predecessor ===
v192 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4605962271244117669
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v224 
=== Usages ===
=== Predecessor ===
v193 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v224  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v429 
value: j181 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v211 
=== Usages ===
=== Predecessor ===
v191 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v429 value: j181 stateAfter: - lastLocationAccess: - #next: v211  <|@  <|@
f <@~|@floating>@ <|@
tid v433 <|@
result [v13|QWORD + v8|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j180 
index: j222 
=== Succesors ===
=== Usages ===
v211 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j180 index: j222  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: void
=== Inputs ===
address: v433 
=== Succesors ===
next: v214 
=== Usages ===
=== Predecessor ===
v224 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v433 #next: v214  <|@  <|@
f <@~|@floating>@ <|@
tid v434 <|@
result [v13|QWORD + v8|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j180 
index: j222 
=== Succesors ===
=== Usages ===
v214 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j180 index: j222  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: void
=== Inputs ===
address: v434 
=== Succesors ===
next: v217 
=== Usages ===
=== Predecessor ===
v211 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v434 #next: v217  <|@  <|@
f <@~|@floating>@ <|@
tid v435 <|@
result [v13|QWORD + v8|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j180 
index: j222 
=== Succesors ===
=== Usages ===
v217 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j180 index: j222  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: void
=== Inputs ===
address: v435 
=== Succesors ===
next: v220 
=== Usages ===
=== Predecessor ===
v214 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v435 #next: v220  <|@  <|@
f <@~|@floating>@ <|@
tid v436 <|@
result [v13|QWORD + v8|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j180 
index: j222 
=== Succesors ===
=== Usages ===
v220 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j180 index: j222  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: void
=== Inputs ===
address: v436 
=== Succesors ===
next: v225 
=== Usages ===
=== Predecessor ===
v217 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v436 #next: v225  <|@  <|@
f <@~|@floating>@ <|@
tid v431 <|@
result [v8|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j222 
index: - 
=== Succesors ===
=== Usages ===
v225 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j222 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v431 
value: i9 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v226 
=== Usages ===
=== Predecessor ===
v220 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v431 value: i9 stateAfter: - lastLocationAccess: - #next: v226  <|@  <|@
f <@~|@floating>@ <|@
tid v432 <|@
result [v8|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j222 
index: - 
=== Succesors ===
=== Usages ===
v226 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j222 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v432 
value: j172 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v230 
=== Usages ===
=== Predecessor ===
v225 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v432 value: j172 stateAfter: - lastLocationAccess: - #next: v230  <|@  <|@
f <@~|@floating>@ <|@
tid v437 <|@
result [v8|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j222 
index: - 
=== Succesors ===
=== Usages ===
v230 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j222 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v300 <|@
result meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v230 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v437 
value: v300 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v196 
=== Usages ===
=== Predecessor ===
v226 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v437 value: v300 stateAfter: - lastLocationAccess: - #next: v196  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: a197 
=== Usages ===
=== Predecessor ===
v230 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a197  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a197 <|@
result v15|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j222 
=== Succesors ===
next: v199 
=== Usages ===
a202 
=== Predecessor ===
v196 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j222 #next: v199  <|@  <|@
f <@*|@fixed>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v200 
=== Predecessor ===
a197 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v13|QWORD + v8|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v13|QWORD + v8|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v13|QWORD + v8|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v13|QWORD + v8|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|QWORD + 12], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v8|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v8|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = MOVE v8|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v15|QWORD[.]] destination: B12 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4591656161806905670
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v188 
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v188  <|@  <|@
f <@*|@fixed>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v189 
=== Predecessor ===
v184 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 4592285418509842338
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v188 v190 
=== Succesors ===
next: a198 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v188 v190 #next: a198  <|@  <|@
f <@~|@floating>@ <|@
tid v171 <|@
result v16|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a198 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a198 <|@
result v17|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?2 
arguments: v171 i9 i4 
=== Succesors ===
next: v201 
=== Usages ===
a202 
=== Predecessor ===
v189 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2 arguments: v171 i9 i4 #next: v201  <|@  <|@
f <@*|@fixed>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v200 
=== Predecessor ===
a198 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v16|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:155) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v17|QWORD[.]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a202 <|@
result v18|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v200 
values: a197 a198 
=== Succesors ===
=== Usages ===
v428 a154 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v200 values: a197 a198  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v199 v201 
=== Succesors ===
next: v362 
=== Usages ===
a202 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v199 v201 #next: v362  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v311 
=== Usages ===
j364 
=== Predecessor ===
v200 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v311  <|@  <|@
f <@~|@floating>@ <|@
tid v428 <|@
result [v18|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a202 
index: - 
=== Succesors ===
=== Usages ===
j364 j245 j243 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a202 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i9 
y: i3 
=== Succesors ===
=== Usages ===
v311 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i9 y: i3  <|@  <|@
f <@~|@floating>@ <|@
tid j257 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j258 j405 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v360 
=== Succesors ===
trueSuccessor: v309 
falseSuccessor: v310 
=== Usages ===
=== Predecessor ===
v362 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v360 #trueSuccessor: v309 #falseSuccessor: v310  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602411296347581849
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v328 
=== Usages ===
=== Predecessor ===
v311 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v328  <|@  <|@
f <@*|@fixed>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v329 
=== Predecessor ===
v309 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4602411296347581849
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v310 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v314 
=== Usages ===
=== Predecessor ===
v311 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v314  <|@  <|@
f <@~|@floating>@ <|@
tid j364 <|@
result v19|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v362 
address: v428 
=== Succesors ===
=== Usages ===
v443 v444 v445 v446 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v362 address: v428  <|@  <|@
f <@~|@floating>@ <|@
tid j303 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483646] ⇈fffffffffffffffe
=== Inputs ===
value: i9 
=== Succesors ===
=== Usages ===
j405 j392 j398 j402 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i9  <|@  <|@
f <@~|@floating>@ <|@
tid j391 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j392 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j392 <|@
result v21|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483638] ⇈fffffffffffffffe
=== Inputs ===
x: j303 
y: j391 
=== Succesors ===
=== Usages ===
v393 v395 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j303 y: j391  <|@  <|@
f <@~|@floating>@ <|@
tid j209 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j385 v393 j379 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j392 
y: j209 
=== Succesors ===
=== Usages ===
v314 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j392 y: j209  <|@  <|@
f <@*|@fixed>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v393 
=== Succesors ===
trueSuccessor: v312 
falseSuccessor: v313 
=== Usages ===
=== Predecessor ===
v310 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v393 #trueSuccessor: v312 #falseSuccessor: v313  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = LEA [v18|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOVSXD v3|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = LEA [v20|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v21|QWORD, y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" 
    xhandlers
    flags 
    probability 4600226377240162867
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v324 
=== Usages ===
=== Predecessor ===
v314 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v324  <|@  <|@
f <@*|@fixed>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v325 
=== Predecessor ===
v312 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4593404097092840857
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v315 
=== Usages ===
=== Predecessor ===
v314 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v315  <|@  <|@
f <@~|@floating>@ <|@
tid j228 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j390 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v417 <|@
result v22|V256_DWORD[........] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null,null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n -,n -,n -,n -,n ->
value: SIMD<null,null,null,null,null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v416 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v316 
=== Predecessor ===
v313 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v22|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B40" 
    successors "B21" "B40" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602411296347581849
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j385 <|@
result v23|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v316 
values: j209 j390 
=== Succesors ===
=== Usages ===
v446 j390 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v316 values: j209 j390  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v315 
=== Succesors ===
next: v416 
=== Usages ===
j385 v320 v321 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v315 #next: v416  <|@  <|@
f <@~|@floating>@ <|@
tid v446 <|@
result [v19|QWORD[.] + v23|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j364 
index: j385 
=== Succesors ===
=== Usages ===
v416 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j364 index: j385  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v446 
value: v417 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v323 
=== Usages ===
=== Predecessor ===
v316 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v446 value: v417 stateAfter: - lastLocationAccess: - #next: v323  <|@  <|@
f <@~|@floating>@ <|@
tid j390 <|@
result v24|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j385 
y: j228 
=== Succesors ===
=== Usages ===
j379 j385 v395 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j385 y: j228  <|@  <|@
f <@~|@floating>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j392 
y: j390 
=== Succesors ===
=== Usages ===
v323 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j392 y: j390  <|@  <|@
f <@*|@fixed>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v395 
=== Succesors ===
trueSuccessor: v320 
falseSuccessor: v322 
=== Usages ===
=== Predecessor ===
v416 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v395 #trueSuccessor: v320 #falseSuccessor: v322  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v19|QWORD[.] + v23|QWORD * 4], input: v22|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = LEA [v23|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v24|QWORD, y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593404097092840857
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v316 
=== Succesors ===
next: v326 
=== Usages ===
=== Predecessor ===
v323 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v316 #next: v326  <|@  <|@
f <@*|@fixed>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v325 
=== Predecessor ===
v320 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|QWORD] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B18" "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4602411296347581849
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j379 <|@
result v25|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v325 
values: j209 j390 
=== Succesors ===
=== Usages ===
v445 j384 j372 v399 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v325 values: j209 j390  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v324 v326 
=== Succesors ===
next: v344 
=== Usages ===
j379 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v324 v326 #next: v344  <|@  <|@
f <@~|@floating>@ <|@
tid j397 <|@
result long[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j398 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j398 <|@
result v26|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483642] ⇈fffffffffffffffe
=== Inputs ===
x: j303 
y: j397 
=== Succesors ===
=== Usages ===
v399 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j303 y: j397  <|@  <|@
f <@~|@floating>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j398 
y: j379 
=== Succesors ===
=== Usages ===
v344 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j398 y: j379  <|@  <|@
f <@*|@fixed>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v399 
=== Succesors ===
trueSuccessor: v343 
falseSuccessor: v342 
=== Usages ===
=== Predecessor ===
v325 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v399 #trueSuccessor: v343 #falseSuccessor: v342  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = LEA [v20|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v25|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4593404097092840857
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v347 
=== Usages ===
=== Predecessor ===
v344 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v347  <|@  <|@
f <@*|@fixed>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v336 
=== Predecessor ===
v343 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|QWORD] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4600226377240162867
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v415 
=== Usages ===
=== Predecessor ===
v344 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v415  <|@  <|@
f <@~|@floating>@ <|@
tid v445 <|@
result [v19|QWORD[.] + v25|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j364 
index: j379 
=== Succesors ===
=== Usages ===
v415 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j364 index: j379  <|@  <|@
f <@~|@floating>@ <|@
tid v420 <|@
result v27|V128_DWORD[....] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n ->
value: SIMD<null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v415 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v445 
value: v420 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v335 
=== Usages ===
=== Predecessor ===
v342 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v445 value: v420 stateAfter: - lastLocationAccess: - #next: v335  <|@  <|@
f <@~|@floating>@ <|@
tid j367 <|@
result long[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j384 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j384 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j379 
y: j367 
=== Succesors ===
=== Usages ===
j372 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j379 y: j367  <|@  <|@
f <@*|@fixed>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v336 
=== Predecessor ===
v415 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction J (address: [v19|QWORD[.] + v25|QWORD * 4], input: v27|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = LEA [v25|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|QWORD] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4602411296347581849
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j372 <|@
result v29|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v336 
values: j384 j379 
=== Succesors ===
=== Usages ===
v444 j378 j365 v403 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v336 values: j384 j379  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v335 v347 
=== Succesors ===
next: v350 
=== Usages ===
j372 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v335 v347 #next: v350  <|@  <|@
f <@~|@floating>@ <|@
tid j401 <|@
result long[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j402 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j402 <|@
result v30|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483644] ⇈fffffffffffffffe
=== Inputs ===
x: j303 
y: j401 
=== Succesors ===
=== Usages ===
v403 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j303 y: j401  <|@  <|@
f <@~|@floating>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j402 
y: j372 
=== Succesors ===
=== Usages ===
v350 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j402 y: j372  <|@  <|@
f <@*|@fixed>@ <|@
tid v350 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v403 
=== Succesors ===
trueSuccessor: v349 
falseSuccessor: v348 
=== Usages ===
=== Predecessor ===
v336 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v403 #trueSuccessor: v349 #falseSuccessor: v348  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = LEA [v20|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v29|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4593404097092840857
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v353 
=== Usages ===
=== Predecessor ===
v350 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v353  <|@  <|@
f <@*|@fixed>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v339 
=== Predecessor ===
v349 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|QWORD] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4600226377240162867
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v413 
=== Usages ===
=== Predecessor ===
v350 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v413  <|@  <|@
f <@~|@floating>@ <|@
tid v444 <|@
result [v19|QWORD[.] + v29|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j364 
index: j372 
=== Succesors ===
=== Usages ===
v413 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j364 index: j372  <|@  <|@
f <@~|@floating>@ <|@
tid v419 <|@
result v31|V64_DWORD[..] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL>
stampKind: <n -,n ->
value: SIMD<null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v413 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v444 
value: v419 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v338 
=== Usages ===
=== Predecessor ===
v348 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v444 value: v419 stateAfter: - lastLocationAccess: - #next: v338  <|@  <|@
f <@~|@floating>@ <|@
tid j377 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j378 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j378 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j372 
y: j377 
=== Succesors ===
=== Usages ===
j365 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j372 y: j377  <|@  <|@
f <@*|@fixed>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v339 
=== Predecessor ===
v413 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr   -1  <|@ instruction J (address: [v19|QWORD[.] + v29|QWORD * 4], input: v31|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA [v29|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|QWORD] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4602411296347581849
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j365 <|@
result v33|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v339 
values: j378 j372 
=== Succesors ===
=== Usages ===
v443 v406 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v339 values: j378 j372  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v338 v353 
=== Succesors ===
next: v356 
=== Usages ===
j365 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v338 v353 #next: v356  <|@  <|@
f <@~|@floating>@ <|@
tid j405 <|@
result v34|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483645] ⇊0000000000000001
=== Inputs ===
x: j303 
y: j257 
=== Succesors ===
=== Usages ===
v406 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j303 y: j257  <|@  <|@
f <@~|@floating>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j405 
y: j365 
=== Succesors ===
=== Usages ===
v356 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j405 y: j365  <|@  <|@
f <@*|@fixed>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v406 
=== Succesors ===
trueSuccessor: v355 
falseSuccessor: v354 
=== Usages ===
=== Predecessor ===
v339 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v406 #trueSuccessor: v355 #falseSuccessor: v354  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = DEC v20|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v33|QWORD, y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4593404097092840857
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v359 
=== Usages ===
=== Predecessor ===
v356 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v359  <|@  <|@
f <@*|@fixed>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v329 
=== Predecessor ===
v355 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4600226377240162867
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v411 
=== Usages ===
=== Predecessor ===
v356 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v411  <|@  <|@
f <@~|@floating>@ <|@
tid v443 <|@
result [v19|QWORD[.] + v33|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j364 
index: j365 
=== Succesors ===
=== Usages ===
v411 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j364 index: j365  <|@  <|@
f <@~|@floating>@ <|@
tid a418 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v411 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v443 
value: a418 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v341 
=== Usages ===
=== Predecessor ===
v354 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v443 value: a418 stateAfter: - lastLocationAccess: - #next: v341  <|@  <|@
f <@*|@fixed>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v329 
=== Predecessor ===
v411 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v19|QWORD[.] + v33|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B16" "B30" "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v328 v341 v359 
=== Succesors ===
next: v241 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v328 v341 v359 #next: v241  <|@  <|@
f <@~|@floating>@ <|@
tid i301 <|@
result int[2147483647|0x7fffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
rawvalue: 2147483647
stableDimension: 0
stamp: i32 [2147483647] ⇊000000007fffffff ⇈000000007fffffff
stampKind: i32
value: int[2147483647|0x7fffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v302 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: void
=== Inputs ===
x: i422 
y: i301 
=== Succesors ===
=== Usages ===
v241 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i422 y: i301  <|@  <|@
f <@~|@floating>@ <|@
tid j266 <|@
result v35|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:158) [bci: 12]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j267 v442 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i242 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:157) [bci: 8]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j244 j251 j291 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v302 
=== Succesors ===
trueSuccessor: v239 
falseSuccessor: v240 
=== Usages ===
=== Predecessor ===
v329 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v302 #trueSuccessor: v239 #falseSuccessor: v240  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction TEST v2|DWORD y: 2147483647 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602411296347581849
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:155) [bci: 4]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v269 
=== Usages ===
=== Predecessor ===
v241 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v269  <|@  <|@
f <@*|@fixed>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v268 
=== Predecessor ===
v239 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4602411296347581849
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:157) [bci: 5]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: j243 
=== Usages ===
=== Predecessor ===
v241 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j243  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j243 <|@
result [v18|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToFirstArrayElement(WriteBarrierSnippets.java:376) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 20]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v428 
=== Succesors ===
next: j245 
=== Usages ===
j244 
=== Predecessor ===
v240 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v428 #next: j245  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j245 <|@
result [v18|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:385) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v428 
=== Succesors ===
next: v254 
=== Usages ===
j250 
=== Predecessor ===
j243 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v428 #next: v254  <|@  <|@
f <@~|@floating>@ <|@
tid i246 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i247 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i247 <|@
result v36|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i9 
y: i246 
=== Succesors ===
=== Usages ===
i248 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i9 y: i246  <|@  <|@
f <@~|@floating>@ <|@
tid i173 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i248 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i248 <|@
result v37|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: i32 [-2147483644 - 2147483644] ⇊0000000000000004 ⇈00000000fffffffc
=== Inputs ===
x: i247 
y: i173 
=== Succesors ===
=== Usages ===
j249 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i247 y: i173  <|@  <|@
f <@~|@floating>@ <|@
tid j249 <|@
result v38|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 26]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
resultBits: 64
stamp: i64 [-2147483644 - 2147483644] ⇊0000000000000004 ⇈fffffffffffffffc
=== Inputs ===
value: i248 
=== Succesors ===
=== Usages ===
j250 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i248  <|@  <|@
f <@~|@floating>@ <|@
tid j250 <|@
result v40|QWORD[.] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 27]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: i64
=== Inputs ===
x: j245 
y: j249 
=== Succesors ===
=== Usages ===
j251 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j245 y: j249  <|@  <|@
f <@~|@floating>@ <|@
tid j251 <|@
result v41|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 34]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j250 
y: i242 
=== Succesors ===
=== Usages ===
j252 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j250 y: i242  <|@  <|@
f <@~|@floating>@ <|@
tid j244 <|@
result v42|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 24]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j243 
y: i242 
=== Succesors ===
=== Usages ===
j252 j267 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j243 y: i242  <|@  <|@
f <@~|@floating>@ <|@
tid j252 <|@
result v44|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 41]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: i64 [-36028797018963967 - 36028797018963967]
=== Inputs ===
x: j251 
y: j244 
=== Succesors ===
=== Usages ===
j253 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j251 y: j244  <|@  <|@
f <@~|@floating>@ <|@
tid j253 <|@
result v45|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 43]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: i64 [-36028797018963966 - 36028797018963968]
=== Inputs ===
x: j252 
y: j172 
=== Succesors ===
=== Usages ===
j256 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j252 y: j172  <|@  <|@
f <@*|@fixed>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v255 
=== Predecessor ===
j245 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = DEC v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = SHL v36|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVSXD v37|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = LEA [v18|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = ADD (x: v39|QWORD[.], y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[*] = SHR v40|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = LEA [v18|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[*] = SHR v43|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[*] = SUB (x: v41|QWORD[*], ~y: v42|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[*] = INC v44|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v45|QWORD[*]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B39" 
    successors "B35" "B39" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4606914895974952345
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j256 <|@
result v46|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v255 
values: j253 j258 
=== Succesors ===
=== Usages ===
j258 v259 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v255 values: j253 j258  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v254 
=== Succesors ===
next: v262 
=== Usages ===
j256 v260 v265 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v254 #next: v262  <|@  <|@
f <@~|@floating>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j256 
y: j172 
=== Succesors ===
=== Usages ===
v262 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j256 y: j172  <|@  <|@
f <@*|@fixed>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v259 
=== Succesors ===
trueSuccessor: v260 
falseSuccessor: v261 
=== Usages ===
=== Predecessor ===
v255 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v259 #trueSuccessor: v260 #falseSuccessor: v261  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v46|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v46|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602411296347581849
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:165) [bci: 76]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v255 
=== Succesors ===
next: v270 
=== Usages ===
=== Predecessor ===
v262 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v255 #next: v270  <|@  <|@
f <@*|@fixed>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v268 
=== Predecessor ===
v260 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v269 v270 
=== Succesors ===
next: a154 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v269 v270 #next: a154  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a154 <|@
result v18|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a202 
=== Succesors ===
next: j272 
=== Usages ===
j277 ?15 j285 a128 
=== Predecessor ===
v268 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a202 #next: j272  <|@  <|@
f <@~|@floating>@ <|@
tid a32 <|@
result v47|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:157) [bci: 31]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a421 
=== Succesors ===
=== Usages ===
j283 j272 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a421  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j272 <|@
result v48|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:163) [bci: 76]
stamp: i64
=== Inputs ===
object: a32 
=== Succesors ===
next: j277 
=== Usages ===
v438 
=== Predecessor ===
a154 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a32 #next: j277  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j277 <|@
result v49|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:163) [bci: 76]
stamp: i64
=== Inputs ===
object: a154 
=== Succesors ===
next: v282 
=== Usages ===
v439 
=== Predecessor ===
j272 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a154 #next: v282  <|@  <|@
f <@~|@floating>@ <|@
tid j273 <|@
result v50|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:163) [bci: 76]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i423 
=== Succesors ===
=== Usages ===
v438 v289 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i423  <|@  <|@
f <@~|@floating>@ <|@
tid v438 <|@
result [v48|QWORD[*] + v50|QWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: j272 
index: j273 
=== Succesors ===
=== Usages ===
v282 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j272 index: j273  <|@  <|@
f <@~|@floating>@ <|@
tid v439 <|@
result [v49|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j277 
index: - 
=== Succesors ===
=== Usages ===
v282 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j277 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j281 <|@
result v51|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:163) [bci: 76]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i8 
=== Succesors ===
=== Usages ===
v282 v441 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i8  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: ObjectArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:163) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v438 v439 j281 
=== Succesors ===
next: v116 
=== Usages ===
=== Predecessor ===
j277 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v438 v439 j281 #next: v116  <|@  <|@
f <@~|@floating>@ <|@
tid i111 <|@
result v52|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:164) [bci: 88]
stamp: i32
=== Inputs ===
x: i9 
y: i423 
=== Succesors ===
=== Usages ===
v112 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i9 y: i423  <|@  <|@
f <@~|@floating>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:164) [bci: 88]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i111 
y: i8 
=== Succesors ===
=== Usages ===
v116 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i111 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:164) [bci: 88]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v112 
=== Succesors ===
trueSuccessor: v115 
falseSuccessor: v113 
=== Usages ===
=== Predecessor ===
v282 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v112 #trueSuccessor: v115 #falseSuccessor: v113  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4858514a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[*] = MOVE v47|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[*] = MOVE v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = MOVSXD v4|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = MOVSXD v5|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v48|QWORD[*] + v50|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v49|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v51|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectArraycopy(Word,Word,Word)void@0x106813120:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = SUB (x: v3|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:164) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
next: v117 
=== Usages ===
=== Predecessor ===
v116 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v117  <|@  <|@
tid ?15 <|@
d <@d|@=== Debug Properties ===
bci: 79
code: ResolvedJavaMethodBytecode<ArrayDeque.doubleCapacity()>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:163) [bci: 76]
rethrowException: false
sourceFile: ArrayDeque.java
sourceLine: 164
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i423 i422 i8 - a154 
=== Succesors ===
=== Usages ===
v117 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i423 i422 i8 - a154  <|@  <|@
f <@*|@fixed>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.DeoptimizeNode.deopt(DeoptimizationAction, DeoptimizationReason) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:263) [bci: 119]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:164) [bci: 88]
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?15 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v115 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?15  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -30049 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:164) [bci: 79]
locals: v0|QWORD[.] v4|DWORD v2|DWORD v5|DWORD - v18|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:79] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:164) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
next: j283 
=== Usages ===
=== Predecessor ===
v116 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j283  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j283 <|@
result v53|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:164) [bci: 88]
stamp: i64
=== Inputs ===
object: a32 
=== Succesors ===
next: j285 
=== Usages ===
v440 
=== Predecessor ===
v113 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a32 #next: j285  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j285 <|@
result v54|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:164) [bci: 88]
stamp: i64
=== Inputs ===
object: a154 
=== Succesors ===
next: v289 
=== Usages ===
v441 
=== Predecessor ===
j283 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a154 #next: v289  <|@  <|@
f <@~|@floating>@ <|@
tid v440 <|@
result [v53|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j283 
index: - 
=== Succesors ===
=== Usages ===
v289 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j283 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v441 <|@
result [v54|QWORD[*] + v51|QWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: j285 
index: j281 
=== Succesors ===
=== Usages ===
v289 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j285 index: j281  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: ObjectArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:164) [bci: 88]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v440 v441 j273 
=== Succesors ===
next: v129 
=== Usages ===
=== Predecessor ===
j285 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v440 v441 j273 #next: v129  <|@  <|@
f <@~|@floating>@ <|@
tid a128 <|@
result v55|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:165) [bci: 94]
op: Compress
stamp: n! -
=== Inputs ===
value: a154 
=== Succesors ===
=== Usages ===
v129 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a154  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: ArrayDeque.elements
nodeSourcePosition: at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:165) [bci: 94]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v425 
value: a128 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j290 
=== Usages ===
=== Predecessor ===
v289 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v425 value: a128 stateAfter: - lastLocationAccess: - #next: j290  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j290 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:165) [bci: 94]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v294 
=== Usages ===
j291 
=== Predecessor ===
v129 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v294  <|@  <|@
f <@~|@floating>@ <|@
tid j291 <|@
result v56|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:165) [bci: 94]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j290 
y: i242 
=== Succesors ===
=== Usages ===
v442 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j290 y: i242  <|@  <|@
f <@~|@floating>@ <|@
tid v442 <|@
result [v56|QWORD[*] + v35|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j291 
index: j266 
=== Succesors ===
=== Usages ===
v294 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j291 index: j266  <|@  <|@
f <@~|@floating>@ <|@
tid i295 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:165) [bci: 94]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v294 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:165) [bci: 94]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v442 
value: i295 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v130 
=== Usages ===
=== Predecessor ===
j290 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v442 value: i295 stateAfter: - lastLocationAccess: - #next: v130  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayDeque.head
nodeSourcePosition: at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:166) [bci: 99]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v424 
value: i4 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v133 
=== Usages ===
=== Predecessor ===
v294 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v424 value: i4 stateAfter: - lastLocationAccess: - #next: v133  <|@  <|@
f <@~|@floating>@ <|@
tid v427 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v133 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayDeque.tail
nodeSourcePosition: at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:167) [bci: 104]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v427 
value: i422 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v25 
=== Usages ===
=== Predecessor ===
v130 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v427 value: i422 stateAfter: - lastLocationAccess: - #next: v25  <|@  <|@
f <@*|@fixed>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:168) [bci: 107]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v133 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[*] = MOVE v47|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[*] = MOVE v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v53|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v54|QWORD[*] + v51|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v50|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectArraycopy(Word,Word,Word)void@0x106813120:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v55|DWORD[.] = COMPRESSPOINTER (input: v18|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@4858514a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v55|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v56|QWORD[*] + v35|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B34" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4602411296347581849
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 58]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v264 
=== Usages ===
=== Predecessor ===
v262 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v264  <|@  <|@
f <@~|@floating>@ <|@
tid j258 <|@
result v57|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: i64
=== Inputs ===
x: j256 
y: j257 
=== Succesors ===
=== Usages ===
j256 j263 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j256 y: j257  <|@  <|@
f <@~|@floating>@ <|@
tid j267 <|@
result v58|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 62]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: i64 [4682670080 - 36028801701634047] ⇈00ffffffffffffff
=== Inputs ===
x: j244 
y: j266 
=== Succesors ===
=== Usages ===
j263 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j244 y: j266  <|@  <|@
f <@~|@floating>@ <|@
tid j263 <|@
result v59|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 65]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: i64
=== Inputs ===
x: j258 
y: j267 
=== Succesors ===
=== Usages ===
v264 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j258 y: j267  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
kind: boolean
nodeSourcePosition: at org.graalvm.compiler.replacements.nodes.DirectStoreNode.storeBoolean(long, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 70]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: void
=== Inputs ===
address: j263 
value: i4 
=== Succesors ===
next: v265 
=== Usages ===
=== Predecessor ===
v261 >@ <|@
instruction <@DirectStore|@org.graalvm.compiler.replacements.nodes.DirectStoreNode>@ address: j263 value: i4 #next: v265  <|@  <|@
f <@*|@fixed>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162) [bci: 62]
stamp: void
=== Inputs ===
loopBegin: v255 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v264 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v255  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[*] = DEC v46|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[*] = ADD (x: v42|QWORD[*], y: v35|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[*] = ADD (x: v58|QWORD[*], y: v57|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v59|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|QWORD[*]] destination: B39 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B20" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600226377240162867
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v321 
=== Usages ===
=== Predecessor ===
v323 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v321  <|@  <|@
f <@*|@fixed>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v316 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v322 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v316  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|QWORD] destination: B40 -> B20 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@67208eab slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:155) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = SHL v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SUB (x: v2|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = SUB (x: v3|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v6|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" "B13" 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606040928331984752
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = SHL v2|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = LEA [v10|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = AND v11|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVSXD v12|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = ADD (x: v13|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4605962271244117669
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v13|QWORD + v8|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v13|QWORD + v8|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v13|QWORD + v8|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v13|QWORD + v8|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|QWORD + 12], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v8|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v8|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = MOVE v8|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v15|QWORD[.]] destination: B12 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4602411296347581849
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = LEA [v18|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOVSXD v3|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = LEA [v20|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v21|QWORD, y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" 
    xhandlers
    flags 
    probability 4600226377240162867
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B18" "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4602411296347581849
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = LEA [v20|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v25|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4600226377240162867
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction J (address: [v19|QWORD[.] + v25|QWORD * 4], input: v27|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = LEA [v25|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|QWORD] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4602411296347581849
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = LEA [v20|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v29|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4600226377240162867
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr   -1  <|@ instruction J (address: [v19|QWORD[.] + v29|QWORD * 4], input: v31|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA [v29|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|QWORD] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4602411296347581849
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = DEC v20|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v33|QWORD, y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4600226377240162867
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v19|QWORD[.] + v33|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B16" "B30" "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction TEST v2|DWORD y: 2147483647 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4602411296347581849
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = DEC v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = SHL v36|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVSXD v37|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = LEA [v18|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = ADD (x: v39|QWORD[.], y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[*] = SHR v40|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = LEA [v18|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[*] = SHR v43|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[*] = SUB (x: v41|QWORD[*], ~y: v42|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[*] = INC v44|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v45|QWORD[*]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B34" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4602411296347581849
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[*] = DEC v46|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[*] = ADD (x: v42|QWORD[*], y: v35|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[*] = ADD (x: v58|QWORD[*], y: v57|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v59|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|QWORD[*]] destination: B39 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B39" 
    successors "B35" "B39" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4606914895974952345
    begin_IR
      LIR
      nr   -1  <|@ instruction [v46|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v46|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602411296347581849
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602411296347581849
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4858514a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[*] = MOVE v47|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[*] = MOVE v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = MOVSXD v4|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = MOVSXD v5|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v48|QWORD[*] + v50|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v49|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v51|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectArraycopy(Word,Word,Word)void@0x106813120:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = SUB (x: v3|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[*] = MOVE v47|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[*] = MOVE v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v53|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v54|QWORD[*] + v51|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v50|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectArraycopy(Word,Word,Word)void@0x106813120:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v55|DWORD[.] = COMPRESSPOINTER (input: v18|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@4858514a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v55|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v56|QWORD[*] + v35|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602411296347581849
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4593404097092840857
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v22|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B20" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600226377240162867
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|QWORD] destination: B40 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B40" 
    successors "B21" "B40" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602411296347581849
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v19|QWORD[.] + v23|QWORD * 4], input: v22|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = LEA [v23|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v24|QWORD, y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4593404097092840857
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|QWORD] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4593404097092840857
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593404097092840857
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|QWORD] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4593404097092840857
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|QWORD] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4591656161806905670
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 4592285418509842338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v16|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:155) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v17|QWORD[.]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-19041|0xffffffffffffb59f]] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B7" "B5" 
    successors 
    xhandlers
    flags 
    probability 4584217951810505934
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:155) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-19041|0xffffffffffffb59f]] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576803513614379298
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-19041|0xffffffffffffb59f]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4576187675404546780
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-9747|0xffffffffffffd9ed]] destination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -30049 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:164) [bci: 79]
locals: v0|QWORD[.] v4|DWORD v2|DWORD v5|DWORD - v18|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:79] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #3          // $assertionsDisabled:boolean
     3: ifne          25
     6: aload_0       
     7: getfield      #4          // head:int
    10: aload_0       
    11: getfield      #5          // tail:int
    14: if_icmpeq     25
    17: new           #9          // java.lang.AssertionError
    20: dup           
    21: invokespecial #6          // java.lang.AssertionError.<init>:()void
    24: athrow        
    25: aload_0       
    26: getfield      #4          // head:int
    29: istore_1      
    30: aload_0       
    31: getfield      #2          // elements:java.lang.Object[]
    34: arraylength   
    35: istore_2      
    36: iload_2       
    37: iload_1       
    38: isub          
    39: istore_3      
    40: iload_2       
    41: iconst_1      
    42: ishl          
    43: istore        4
    45: iload         4
    47: ifge          60
    50: new           #11         // java.lang.IllegalStateException
    53: dup           
    54: ldc           #12         // "Sorry, deque too big"
    56: invokespecial #7          // java.lang.IllegalStateException.<init>:(java.lang.String)void
    59: athrow        
    60: iload         4
    62: anewarray     #4          // java.lang.Object
    65: astore        5
    67: aload_0       
    68: getfield      #2          // elements:java.lang.Object[]
    71: iload_1       
    72: aload         5
    74: iconst_0      
    75: iload_3       
    76: invokestatic  #8          // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
    79: aload_0       
    80: getfield      #2          // elements:java.lang.Object[]
    83: iconst_0      
    84: aload         5
    86: iload_3       
    87: iload_1       
    88: invokestatic  #8          // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
    91: aload_0       
    92: aload         5
    94: putfield      #2          // elements:java.lang.Object[]
    97: aload_0       
    98: iconst_0      
    99: putfield      #4          // head:int
   102: aload_0       
   103: iload_2       
   104: putfield      #5          // tail:int
   107: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@67208eab slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [rsi:0, r13:0]
live-base-pointers: []
java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:155) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r14|DWORD = MOV [r13|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ instruction r10|DWORD = SHL r14|DWORD size: DWORD <|@ <|@
      nr   12  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction r8|DWORD = SUB (x: r14|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr   40  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction rdx|DWORD = SUB (x: r10|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   56  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" "B13" 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   76  <|@ instruction stack:36|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   80  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   82  <|@ instruction CMP r10|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   84  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606040928331984752
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction r9|DWORD = SHL r14|DWORD y: 3 size: DWORD <|@ <|@
      nr   90  <|@ instruction r9|DWORD = LEA [r9|DWORD + 23] size: DWORD <|@ <|@
      nr   92  <|@ instruction r9|DWORD = AND r9|DWORD y: -8 size: DWORD <|@ <|@
      nr   94  <|@ instruction r9|QWORD = MOVSXD r9|DWORD size: QWORD <|@ <|@
      nr   96  <|@ instruction rbx|QWORD = ADD (x: r9|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr   98  <|@ instruction CMP (x: rbx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  100  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4605962271244117669
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  112  <|@ instruction MOV (x: [r15|QWORD + 96], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  114  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  116  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  118  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  120  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  122  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  126  <|@ instruction MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  128  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  130  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction stack:40|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction stack:44|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD <|@ <|@
      nr  136  <|@ instruction r13|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  138  <|@ instruction JUMP ~[] destination: B12 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  166  <|@ instruction stack:56|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction CMP r13|DWORD y: 1 size: DWORD <|@ <|@
      nr  170  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4602411296347581849
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  178  <|@ instruction rdi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  180  <|@ instruction rsi|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr  182  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  184  <|@ instruction TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  186  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" 
    xhandlers
    flags 
    probability 4600226377240162867
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B18" "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4602411296347581849
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  218  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr  220  <|@ instruction CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  222  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4600226377240162867
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  230  <|@ instruction xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr  232  <|@ instruction J (address: [rdi|QWORD[.] + r10|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  234  <|@ instruction rdx|QWORD = LEA [r10|QWORD + 4] size: QWORD <|@ <|@
      nr  236  <|@ instruction r10|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4602411296347581849
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  242  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr  244  <|@ instruction CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  246  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4600226377240162867
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  254  <|@ instruction xmm0|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr  256  <|@ instruction J (address: [rdi|QWORD[.] + r10|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr  258  <|@ instruction rdx|QWORD = LEA [r10|QWORD + 2] size: QWORD <|@ <|@
      nr  260  <|@ instruction r10|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4602411296347581849
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  266  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  268  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  270  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4600226377240162867
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction MOV (x: [rdi|QWORD[.] + r10|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  280  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B16" "B30" "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ instruction stack:60|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  286  <|@ instruction r10|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  288  <|@ instruction stack:72|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  290  <|@ instruction TEST r14|DWORD y: 2147483647 size: DWORD <|@ <|@
      nr  292  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4602411296347581849
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  306  <|@ instruction rdi|DWORD = DEC r13|DWORD size: DWORD <|@ <|@
      nr  308  <|@ instruction rdi|DWORD = SHL rdi|DWORD y: 2 size: DWORD <|@ <|@
      nr  310  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr  312  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  314  <|@ instruction rsi|QWORD[.] = ADD (x: rsi|QWORD[.], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  316  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  318  <|@ instruction rdi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  320  <|@ instruction rdi|QWORD[*] = SHR rdi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  322  <|@ instruction rsi|QWORD[*] = SUB (x: rsi|QWORD[*], ~y: rdi|QWORD[*]) size: QWORD <|@ <|@
      nr  324  <|@ instruction rsi|QWORD[*] = INC rsi|QWORD[*] size: QWORD <|@ <|@
      nr  326  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B34" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4602411296347581849
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  442  <|@ instruction rsi|QWORD[*] = DEC rsi|QWORD[*] size: QWORD <|@ <|@
      nr  444  <|@ instruction rdx|QWORD[*] = ADD (x: rdi|QWORD[*], y: r10|QWORD) size: QWORD <|@ <|@
      nr  446  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD[*], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  448  <|@ instruction MOVB (x: [rdx|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  450  <|@ instruction JUMP ~[] destination: B39 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B39" 
    successors "B35" "B39" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4606914895974952345
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  330  <|@ instruction CMP rsi|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr  332  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602411296347581849
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  174  <|@ instruction JUMP ~[] destination: B16 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602411296347581849
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  296  <|@ instruction r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  298  <|@ instruction stack:76|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction r13|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  346  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4858514a encoding: base: 0 shift: 3 <|@ <|@
      nr  348  <|@ instruction rdi|QWORD[*] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction r9|QWORD = MOVSXD stack:40|DWORD size: QWORD <|@ <|@
      nr  354  <|@ instruction rcx|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  356  <|@ instruction rdi|QWORD = LEA [rdi|QWORD[*] + r9|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr  358  <|@ instruction rsi|QWORD = LEA [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  360  <|@ instruction rdx|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction stack:88|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  364  <|@ instruction stack:96|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction stack:104|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectArraycopy(Word,Word,Word)void@0x106813120:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  370  <|@ instruction r10|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: stack:40|DWORD) size: DWORD <|@ <|@
      nr  374  <|@ instruction r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  378  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  398  <|@ instruction rcx|QWORD = MOVE stack:96|QWORD moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction r9|QWORD = MOVE stack:88|QWORD moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction r13|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction rax|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction r13|QWORD[*] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction rdx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction rdi|QWORD = LEA [r13|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  412  <|@ instruction rsi|QWORD = LEA [rdx|QWORD[*] + rcx|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr  414  <|@ instruction rdx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectArraycopy(Word,Word,Word)void@0x106813120:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  418  <|@ instruction rax|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@4858514a encoding: base: 0 shift: 3 <|@ <|@
      nr  422  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  426  <|@ instruction r10|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  428  <|@ instruction r11|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction MOVB (x: [r10|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  432  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  434  <|@ instruction r14|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  436  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r14|DWORD) size: DWORD <|@ <|@
      nr  438  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602411296347581849
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  336  <|@ instruction r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  338  <|@ instruction stack:76|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  340  <|@ instruction r13|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  342  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4593404097092840857
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr  198  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B20" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600226377240162867
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  454  <|@ instruction JUMP ~[] destination: B40 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B40" 
    successors "B21" "B40" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602411296347581849
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  204  <|@ instruction J (address: [rdi|QWORD[.] + r10|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  206  <|@ instruction r10|QWORD = LEA [r10|QWORD + 8] size: QWORD <|@ <|@
      nr  208  <|@ instruction CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  210  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4593404097092840857
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  250  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4593404097092840857
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  274  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593404097092840857
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4593404097092840857
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4591656161806905670
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  142  <|@ instruction stack:40|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  144  <|@ instruction stack:44|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD <|@ <|@
      nr  146  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 4592285418509842338
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  150  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  152  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  156  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  158  <|@ instruction r13|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  160  <|@ st <@st|@reference-map: [stack:68, stack:80]
live-base-pointers: []
java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:155) [bci: 0]
locals: stack:32|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  162  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction r10|DWORD = MOVE input: int[-19041|0xffffffffffffb59f] <|@ <|@
      nr   34  <|@ instruction JUMP ~[] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B7" "B5" 
    successors 
    xhandlers
    flags 
    probability 4584217951810505934
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   66  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   70  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:155) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction r10|DWORD = MOVE input: int[-19041|0xffffffffffffb59f] <|@ <|@
      nr   48  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576803513614379298
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction r10|DWORD = MOVE input: int[-19041|0xffffffffffffb59f] <|@ <|@
      nr   62  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4576187675404546780
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction stack:40|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction stack:44|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction r10|DWORD = MOVE input: int[-9747|0xffffffffffffd9ed] <|@ <|@
      nr   20  <|@ instruction JUMP ~[] destination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  382  <|@ instruction rax|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction r11|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction r14|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  388  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction MOV [r15|QWORD + 668] y: -30049 size: DWORD <|@ <|@
      nr  392  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  394  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:164) [bci: 79]
locals: rsi|QWORD[.] r11|DWORD r14|DWORD r8|DWORD - rax|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:79] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #3          // $assertionsDisabled:boolean
     3: ifne          25
     6: aload_0       
     7: getfield      #4          // head:int
    10: aload_0       
    11: getfield      #5          // tail:int
    14: if_icmpeq     25
    17: new           #9          // java.lang.AssertionError
    20: dup           
    21: invokespecial #6          // java.lang.AssertionError.<init>:()void
    24: athrow        
    25: aload_0       
    26: getfield      #4          // head:int
    29: istore_1      
    30: aload_0       
    31: getfield      #2          // elements:java.lang.Object[]
    34: arraylength   
    35: istore_2      
    36: iload_2       
    37: iload_1       
    38: isub          
    39: istore_3      
    40: iload_2       
    41: iconst_1      
    42: ishl          
    43: istore        4
    45: iload         4
    47: ifge          60
    50: new           #11         // java.lang.IllegalStateException
    53: dup           
    54: ldc           #12         // "Sorry, deque too big"
    56: invokespecial #7          // java.lang.IllegalStateException.<init>:(java.lang.String)void
    59: athrow        
    60: iload         4
    62: anewarray     #4          // java.lang.Object
    65: astore        5
    67: aload_0       
    68: getfield      #2          // elements:java.lang.Object[]
    71: iload_1       
    72: aload         5
    74: iconst_0      
    75: iload_3       
    76: invokestatic  #8          // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
    79: aload_0       
    80: getfield      #2          // elements:java.lang.Object[]
    83: iconst_0      
    84: aload         5
    86: iload_3       
    87: iload_1       
    88: invokestatic  #8          // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
    91: aload_0       
    92: aload         5
    94: putfield      #2          // elements:java.lang.Object[]
    97: aload_0       
    98: iconst_0      
    99: putfield      #4          // head:int
   102: aload_0       
   103: iload_2       
   104: putfield      #5          // tail:int
   107: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@67208eab slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [rsi:0, r13:0]
live-base-pointers: []
java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:155) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r14|DWORD = MOV [r13|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ instruction r10|DWORD = SHL r14|DWORD size: DWORD <|@ <|@
      nr   12  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction r8|DWORD = SUB (x: r14|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr   40  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction rdx|DWORD = SUB (x: r10|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   56  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" "B14" 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   76  <|@ instruction stack:36|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   80  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   82  <|@ instruction CMP r10|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   84  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" "B12" 
    xhandlers
    flags 
    probability 4606040928331984752
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction r9|DWORD = SHL r14|DWORD y: 3 size: DWORD <|@ <|@
      nr   90  <|@ instruction r9|DWORD = LEA [r9|DWORD + 23] size: DWORD <|@ <|@
      nr   92  <|@ instruction r9|DWORD = AND r9|DWORD y: -8 size: DWORD <|@ <|@
      nr   94  <|@ instruction r9|QWORD = MOVSXD r9|DWORD size: QWORD <|@ <|@
      nr   96  <|@ instruction rbx|QWORD = ADD (x: r9|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr   98  <|@ instruction CMP (x: rbx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  100  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B14 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4605962271244117669
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  112  <|@ instruction MOV (x: [r15|QWORD + 96], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  114  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  116  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  118  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  120  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  122  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  126  <|@ instruction MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  128  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  130  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction stack:40|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction stack:44|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD <|@ <|@
      nr  136  <|@ instruction r13|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  138  <|@ instruction JUMP ~[] destination: B12 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B31" "B17" 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  166  <|@ instruction stack:56|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction CMP r13|DWORD y: 1 size: DWORD <|@ <|@
      nr  170  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B15 -> B31 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4602411296347581849
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  178  <|@ instruction rdi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  180  <|@ instruction rsi|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr  182  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  184  <|@ instruction TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  186  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" 
    xhandlers
    flags 
    probability 4600226377240162867
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B25" "B24" 
    xhandlers
    flags 
    probability 4602411296347581849
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  218  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr  220  <|@ instruction CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  222  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B22 -> B25 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4600226377240162867
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  230  <|@ instruction xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr  232  <|@ instruction J (address: [rdi|QWORD[.] + r10|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  234  <|@ instruction rdx|QWORD = LEA [r10|QWORD + 4] size: QWORD <|@ <|@
      nr  236  <|@ instruction r10|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B22" 
    successors "B28" "B27" 
    xhandlers
    flags 
    probability 4602411296347581849
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  242  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr  244  <|@ instruction CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  246  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B25 -> B28 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4600226377240162867
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  254  <|@ instruction xmm0|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr  256  <|@ instruction J (address: [rdi|QWORD[.] + r10|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr  258  <|@ instruction rdx|QWORD = LEA [r10|QWORD + 2] size: QWORD <|@ <|@
      nr  260  <|@ instruction r10|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B25" 
    successors "B31" "B30" 
    xhandlers
    flags 
    probability 4602411296347581849
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  266  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  268  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  270  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B28 -> B31 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4600226377240162867
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction MOV (x: [rdi|QWORD[.] + r10|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  280  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B15" "B30" "B28" 
    successors "B36" "B33" 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ instruction stack:60|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  286  <|@ instruction r10|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  288  <|@ instruction stack:72|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  290  <|@ instruction TEST r14|DWORD y: 2147483647 size: DWORD <|@ <|@
      nr  292  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B31 -> B36 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4602411296347581849
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  306  <|@ instruction rdi|DWORD = DEC r13|DWORD size: DWORD <|@ <|@
      nr  308  <|@ instruction rdi|DWORD = SHL rdi|DWORD y: 2 size: DWORD <|@ <|@
      nr  310  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr  312  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  314  <|@ instruction rsi|QWORD[.] = ADD (x: rsi|QWORD[.], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  316  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  318  <|@ instruction rdi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  320  <|@ instruction rdi|QWORD[*] = SHR rdi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  322  <|@ instruction rsi|QWORD[*] = SUB (x: rsi|QWORD[*], ~y: rdi|QWORD[*]) size: QWORD <|@ <|@
      nr  324  <|@ instruction rsi|QWORD[*] = INC rsi|QWORD[*] size: QWORD <|@ <|@
      nr  326  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B34" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4602411296347581849
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  442  <|@ instruction rsi|QWORD[*] = DEC rsi|QWORD[*] size: QWORD <|@ <|@
      nr  444  <|@ instruction rdx|QWORD[*] = ADD (x: rdi|QWORD[*], y: r10|QWORD) size: QWORD <|@ <|@
      nr  446  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD[*], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  448  <|@ instruction MOVB (x: [rdx|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  450  <|@ instruction JUMP ~[] destination: B39 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B39" 
    successors "B36" "B39" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4606914895974952345
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  330  <|@ instruction CMP rsi|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr  332  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B34 -> B36 falseDestination: B34 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B31" "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  296  <|@ instruction r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  298  <|@ instruction stack:76|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction r13|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  346  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4858514a encoding: base: 0 shift: 3 <|@ <|@
      nr  348  <|@ instruction rdi|QWORD[*] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction r9|QWORD = MOVSXD stack:40|DWORD size: QWORD <|@ <|@
      nr  354  <|@ instruction rcx|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  356  <|@ instruction rdi|QWORD = LEA [rdi|QWORD[*] + r9|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr  358  <|@ instruction rsi|QWORD = LEA [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  360  <|@ instruction rdx|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction stack:88|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  364  <|@ instruction stack:96|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction stack:104|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectArraycopy(Word,Word,Word)void@0x106813120:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  370  <|@ instruction r10|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: stack:40|DWORD) size: DWORD <|@ <|@
      nr  374  <|@ instruction r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  378  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  398  <|@ instruction rcx|QWORD = MOVE stack:96|QWORD moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction r9|QWORD = MOVE stack:88|QWORD moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction r13|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction rax|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction r13|QWORD[*] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction rdx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction rdi|QWORD = LEA [r13|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  412  <|@ instruction rsi|QWORD = LEA [rdx|QWORD[*] + rcx|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr  414  <|@ instruction rdx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectArraycopy(Word,Word,Word)void@0x106813120:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  418  <|@ instruction rax|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@4858514a encoding: base: 0 shift: 3 <|@ <|@
      nr  422  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  426  <|@ instruction r10|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  428  <|@ instruction r11|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction MOVB (x: [r10|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  432  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  434  <|@ instruction r14|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  436  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r14|DWORD) size: DWORD <|@ <|@
      nr  438  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4593404097092840857
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr  198  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B20" 
    successors "B22" "B20" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602411296347581849
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  204  <|@ instruction J (address: [rdi|QWORD[.] + r10|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  206  <|@ instruction r10|QWORD = LEA [r10|QWORD + 8] size: QWORD <|@ <|@
      nr  208  <|@ instruction CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  210  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B22 falseDestination: B20 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4592285418509842338
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  142  <|@ instruction stack:40|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  144  <|@ instruction stack:44|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD <|@ <|@
      nr  150  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  152  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  156  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  158  <|@ instruction r13|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  160  <|@ st <@st|@reference-map: [stack:68, stack:80]
live-base-pointers: []
java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:155) [bci: 0]
locals: stack:32|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  162  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction r10|DWORD = MOVE input: int[-19041|0xffffffffffffb59f] <|@ <|@
      nr   34  <|@ instruction JUMP ~[] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B7" "B5" 
    successors 
    xhandlers
    flags 
    probability 4584217951810505934
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   66  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   70  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:155) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction r10|DWORD = MOVE input: int[-19041|0xffffffffffffb59f] <|@ <|@
      nr   48  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576803513614379298
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction r10|DWORD = MOVE input: int[-19041|0xffffffffffffb59f] <|@ <|@
      nr   62  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction r10|DWORD = MOVE input: int[-9747|0xffffffffffffd9ed] <|@ <|@
      nr   20  <|@ instruction JUMP ~[] destination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  382  <|@ instruction rax|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction r11|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction r14|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  388  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction MOV [r15|QWORD + 668] y: -30049 size: DWORD <|@ <|@
      nr  392  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  394  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:164) [bci: 79]
locals: rsi|QWORD[.] r11|DWORD r14|DWORD r8|DWORD - rax|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:79] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #3          // $assertionsDisabled:boolean
     3: ifne          25
     6: aload_0       
     7: getfield      #4          // head:int
    10: aload_0       
    11: getfield      #5          // tail:int
    14: if_icmpeq     25
    17: new           #9          // java.lang.AssertionError
    20: dup           
    21: invokespecial #6          // java.lang.AssertionError.<init>:()void
    24: athrow        
    25: aload_0       
    26: getfield      #4          // head:int
    29: istore_1      
    30: aload_0       
    31: getfield      #2          // elements:java.lang.Object[]
    34: arraylength   
    35: istore_2      
    36: iload_2       
    37: iload_1       
    38: isub          
    39: istore_3      
    40: iload_2       
    41: iconst_1      
    42: ishl          
    43: istore        4
    45: iload         4
    47: ifge          60
    50: new           #11         // java.lang.IllegalStateException
    53: dup           
    54: ldc           #12         // "Sorry, deque too big"
    56: invokespecial #7          // java.lang.IllegalStateException.<init>:(java.lang.String)void
    59: athrow        
    60: iload         4
    62: anewarray     #4          // java.lang.Object
    65: astore        5
    67: aload_0       
    68: getfield      #2          // elements:java.lang.Object[]
    71: iload_1       
    72: aload         5
    74: iconst_0      
    75: iload_3       
    76: invokestatic  #8          // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
    79: aload_0       
    80: getfield      #2          // elements:java.lang.Object[]
    83: iconst_0      
    84: aload         5
    86: iload_3       
    87: iload_1       
    88: invokestatic  #8          // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
    91: aload_0       
    92: aload         5
    94: putfield      #2          // elements:java.lang.Object[]
    97: aload_0       
    98: iconst_0      
    99: putfield      #4          // head:int
   102: aload_0       
   103: iload_2       
   104: putfield      #5          // tail:int
   107: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec6848896c2460448b6e14468b34ed0c000000458bd641d1e24585d20f8cd0020000448b5e0c4585db0f8c99020000458bc6452bc34585c00f8ca4020000418bd2412bd085d20f8c9e0200004889742450448944244c498b5760498b4f704181faffffff000f8330020000458bce41c1e103458d49174183e1f84d63c9498bd94803da483bd90f870f02000049895f60410f188411c0000000410f18841100010000410f18841140010000410f188411800100004489520c48c70201000000c74208addeadde488bc244895c244844896c2444458bea48894424384183fd010f8c67000000488d78104963f5488d56f84885d20f8d7701000049c7c200000000488d56fc4c3bd20f8f11000000c5f9efc0c4a17a7f0497498d52044c8bd2488d56fe4c3bd20f8f11000000c5f9efc0c4a1f97e0497498d52024c8bd248ffce4c3bd60f8f0400000046892497448974243449ba00e01b17010000004c8954242841f7c6ffffff7f0f843f000000418bfdffcfc1e7024863ff488d70104803f748c1ee09488d781048c1ef09482bf748ffc6e9100000009048ffce488bd74903d24803d64488224883fe017deb448b44244c44896c2424448b6c244449c1e503498bfd488bf04c634c24484963c84a8d7c8f10488d7610488bd14c894c241848894c24104c896c2408e80000000090448b542424442b542448448b44244c453bc20f8ff4000000488b4c24104c8b4c24184c8b6c2408488b442438488bd0498d7d10488d748a10498bd1e80000000090488b44243848c1e803488b7424508946144c8bd649c1ea094c8b5c24284788241a4489660c448b74243444897610488b6c24604883c468850500000000c5f877c3c5f9efc049c7c200000000660f1f440000660f1f440000c4a17e7f04974d8d52084c3bd27ef1e965feffff44895c244844896c244448baaddeaddeaddeadde488bf2418bd2b900000000458beae80000000090e90efeffff41ba9fb5ffff4589979c0200004d89a7a8020000e8000000009041ba9fb5ffffebe441ba9fb5ffffebdc41baedd9ffffebd4488b442438448b5c2448448b742434488b74245041c7879c0200009f8affff4d89a7a8020000e80000000090e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@67208eab slotKind: QWORD  <||@
  Comment 48 6 r13|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 52 8 r14|DWORD = MOV [r13|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 52 [rsi:0, r13:0]at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:155) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 52 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 60 10 r10|DWORD = SHL r14|DWORD size: DWORD  <||@
  Comment 66 12 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 69 14 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 75 block B2 null  <||@
  Comment 75 22 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 75 24 r11|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 79 26 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 82 28 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 88 block B4 null  <||@
  Comment 88 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 88 38 r8|DWORD = SUB (x: r14|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 94 40 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 97 42 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 103 block B6 null  <||@
  Comment 103 50 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 103 52 rdx|DWORD = SUB (x: r10|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 109 54 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 111 56 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B9  <||@
  Comment 117 block B9 null  <||@
  Comment 117 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 117 74 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 122 76 stack:36|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 127 78 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 131 80 rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 135 82 CMP r10|DWORD y: 16777215 size: DWORD  <||@
  Comment 142 84 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B14  <||@
  Comment 148 block B10 null  <||@
  Comment 148 86 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 148 88 r9|DWORD = SHL r14|DWORD y: 3 size: DWORD  <||@
  Comment 155 90 r9|DWORD = LEA [r9|DWORD + 23] size: DWORD  <||@
  Comment 159 92 r9|DWORD = AND r9|DWORD y: -8 size: DWORD  <||@
  Comment 163 94 r9|QWORD = MOVSXD r9|DWORD size: QWORD  <||@
  Comment 166 96 rbx|QWORD = ADD (x: r9|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 172 98 CMP (x: rbx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 175 100 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B14 falseDestination: B10 -> B12  <||@
  Comment 181 block B12 null  <||@
  Comment 181 110 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 181 112 MOV (x: [r15|QWORD + 96], y: rbx|QWORD) size: QWORD  <||@
  Comment 185 114 AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 192] instr: 0  <||@
  Comment 194 116 AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 256] instr: 0  <||@
  Comment 203 118 AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 320] instr: 0  <||@
  Comment 212 120 AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 384] instr: 0  <||@
  Comment 221 122 MOV (x: [rdx|QWORD + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 225 124 MOV [rdx|QWORD] y: 1 size: QWORD  <||@
  Comment 232 126 MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 232 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 239 128 rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 239 130 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 242 132 stack:40|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 247 134 stack:44|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD  <||@
  Comment 252 136 r13|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 255 138 JUMP ~[] destination: B12 -> B15  <||@
  Comment 255 block B15 null  <||@
  Comment 255 164 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 255 166 stack:56|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 260 168 CMP r13|DWORD y: 1 size: DWORD  <||@
  Comment 264 170 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B15 -> B31 falseDestination: B15 -> B17  <||@
  Comment 270 block B17 null  <||@
  Comment 270 176 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 270 178 rdi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 274 180 rsi|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 277 182 rdx|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 281 184 TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 284 186 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B17 -> B18 falseDestination: B17 -> B19  <||@
  Comment 290 block B18 null  <||@
  Comment 290 188 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 290 190 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 297 192 JUMP ~[] destination: B18 -> B22  <||@
  Comment 297 block B22 null  <||@
  Comment 297 216 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 297 218 rdx|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 301 220 CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 304 222 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B22 -> B25 falseDestination: B22 -> B24  <||@
  Comment 310 block B24 null  <||@
  Comment 310 228 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 310 230 xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null>  <||@
  Comment 314 232 J (address: [rdi|QWORD[.] + r10|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 320 234 rdx|QWORD = LEA [r10|QWORD + 4] size: QWORD  <||@
  Comment 324 236 r10|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 327 238 JUMP ~[] destination: B24 -> B25  <||@
  Comment 327 block B25 null  <||@
  Comment 327 240 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 327 242 rdx|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 331 244 CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 334 246 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B25 -> B28 falseDestination: B25 -> B27  <||@
  Comment 340 block B27 null  <||@
  Comment 340 252 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 340 254 xmm0|V64_DWORD[..] = L oc: SIMD<null,null>  <||@
  Comment 344 256 J (address: [rdi|QWORD[.] + r10|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 350 258 rdx|QWORD = LEA [r10|QWORD + 2] size: QWORD  <||@
  Comment 354 260 r10|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 357 262 JUMP ~[] destination: B27 -> B28  <||@
  Comment 357 block B28 null  <||@
  Comment 357 264 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 357 266 rsi|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 360 268 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 363 270 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B28 -> B31 falseDestination: B28 -> B30  <||@
  Comment 369 block B30 null  <||@
  Comment 369 276 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 369 278 MOV (x: [rdi|QWORD[.] + r10|QWORD * 4], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 373 280 JUMP ~[] destination: B30 -> B31  <||@
  Comment 373 block B31 null  <||@
  Comment 373 282 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 373 284 stack:60|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 378 286 r10|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 388 288 stack:72|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 393 290 TEST r14|DWORD y: 2147483647 size: DWORD  <||@
  Comment 400 292 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B31 -> B36 falseDestination: B31 -> B33  <||@
  Comment 406 block B33 null  <||@
  Comment 406 304 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 406 306 rdi|DWORD = DEC r13|DWORD size: DWORD  <||@
  Comment 411 308 rdi|DWORD = SHL rdi|DWORD y: 2 size: DWORD  <||@
  Comment 414 310 rdi|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 417 312 rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 421 314 rsi|QWORD[.] = ADD (x: rsi|QWORD[.], y: rdi|QWORD) size: QWORD  <||@
  Comment 424 316 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 428 318 rdi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 432 320 rdi|QWORD[*] = SHR rdi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 436 322 rsi|QWORD[*] = SUB (x: rsi|QWORD[*], ~y: rdi|QWORD[*]) size: QWORD  <||@
  Comment 439 324 rsi|QWORD[*] = INC rsi|QWORD[*] size: QWORD  <||@
  Comment 442 326 JUMP ~[] destination: B33 -> B34  <||@
  Comment 447 block B39 loop 1 depth 1 header:255|LoopBegin  <||@
  Comment 447 440 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 448 442 rsi|QWORD[*] = DEC rsi|QWORD[*] size: QWORD  <||@
  Comment 451 444 rdx|QWORD[*] = ADD (x: rdi|QWORD[*], y: r10|QWORD) size: QWORD  <||@
  Comment 457 446 rdx|QWORD[*] = ADD (x: rdx|QWORD[*], y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 460 448 MOVB (x: [rdx|QWORD[*]], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 463 450 JUMP ~[] destination: B39 -> B34  <||@
  Comment 463 block B34 loop 1 depth 1 header:255|LoopBegin  <||@
  Comment 463 328 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 463 330 CMP rsi|QWORD[*] y: 1 size: QWORD  <||@
  Comment 467 332 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B34 -> B36 falseDestination: B34 -> B39  <||@
  Comment 469 block B36 null  <||@
  Comment 469 344 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 469 296 r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 474 298 stack:76|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 479 300 r13|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 484 346 r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4858514a encoding: base: 0 shift: 3  <||@
  Comment 488 348 rdi|QWORD[*] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 491 350 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 494 352 r9|QWORD = MOVSXD stack:40|DWORD size: QWORD  <||@
  Comment 499 354 rcx|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 502 356 rdi|QWORD = LEA [rdi|QWORD[*] + r9|QWORD * 4 + 16] size: QWORD  <||@
  Comment 507 358 rsi|QWORD = LEA [rsi|QWORD[*] + 16] size: QWORD  <||@
  Comment 511 360 rdx|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 514 362 stack:88|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 519 364 stack:96|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 524 366 stack:104|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 529 368 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectArraycopy(Word,Word,Word)void@0x106813120:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 529 {Field[name=StubRoutines::_oop_arraycopy, type=address, offset=0, address=0x105a7dc90, value=0x106813120]:0x106813120}  <||@
  Comment 535 370 r10|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 540 372 r10|DWORD = SUB (x: r10|DWORD, ~y: stack:40|DWORD) size: DWORD  <||@
  Comment 545 374 r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 550 376 CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 553 378 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B38  <||@
  Comment 559 block B38 null  <||@
  Comment 559 396 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 559 398 rcx|QWORD = MOVE stack:96|QWORD moveKind: QWORD  <||@
  Comment 564 400 r9|QWORD = MOVE stack:88|QWORD moveKind: QWORD  <||@
  Comment 569 402 r13|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 574 404 rax|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 579 406 r13|QWORD[*] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 579 408 rdx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 582 410 rdi|QWORD = LEA [r13|QWORD[*] + 16] size: QWORD  <||@
  Comment 586 412 rsi|QWORD = LEA [rdx|QWORD[*] + rcx|QWORD * 4 + 16] size: QWORD  <||@
  Comment 591 414 rdx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 594 416 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectArraycopy(Word,Word,Word)void@0x106813120:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 594 {Field[name=StubRoutines::_oop_arraycopy, type=address, offset=0, address=0x105a7dc90, value=0x106813120]:0x106813120}  <||@
  Comment 600 418 rax|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 605 420 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@4858514a encoding: base: 0 shift: 3  <||@
  Comment 609 422 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 614 424 MOV (x: [rsi|QWORD[.] + 20], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 617 426 r10|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 624 428 r11|QWORD = MOVE stack:72|QWORD moveKind: QWORD  <||@
  Comment 629 430 MOVB (x: [r10|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 633 432 MOV (x: [rsi|QWORD[.] + 12], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 637 434 r14|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 642 436 MOV (x: [rsi|QWORD[.] + 16], y: r14|DWORD) size: DWORD  <||@
  Comment 646 438 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 655 12  <||@
  Comment 665 block B19 null  <||@
  Comment 665 194 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 665 196 xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null>  <||@
  Comment 669 198 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 676 200 JUMP ~[] destination: B19 -> B20  <||@
  Comment 676 block B20 loop 0 depth 1 header:316|LoopBegin  <||@
  Comment 676 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 688 204 J (address: [rdi|QWORD[.] + r10|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 694 206 r10|QWORD = LEA [r10|QWORD + 8] size: QWORD  <||@
  Comment 698 208 CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 701 210 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B22 falseDestination: B20 -> B20  <||@
  Comment 708 block B14 null  <||@
  Comment 708 148 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 708 142 stack:40|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 713 144 stack:44|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD  <||@
  Comment 718 150 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>}  <||@
  Comment 718 {meta{HotSpotType<[Ljava/lang/Object;, resolved>}}  <||@
  Comment 728 152 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 731 154 rdx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 734 156 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 739 158 r13|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 742 160 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 742 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 747 [stack:68, stack:80]at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:155) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4  |5 
     locals:  |stack:32|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 748 162 JUMP ~[] destination: B14 -> B15  <||@
  Comment 753 block B3 null  <||@
  Comment 753 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 753 32 r10|DWORD = MOVE input: int[-19041|0xffffffffffffb59f]  <||@
  Comment 759 34 JUMP ~[] destination: B3 -> B8  <||@
  Comment 759 block B8 null  <||@
  Comment 759 64 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 759 66 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 766 68 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 773 70 DEOPT info [bci:0]  <||@
  Comment 773 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 778 [rsi:0]at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:155) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 779 block B5 null  <||@
  Comment 779 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 779 46 r10|DWORD = MOVE input: int[-19041|0xffffffffffffb59f]  <||@
  Comment 785 48 JUMP ~[] destination: B5 -> B8  <||@
  Comment 787 block B7 null  <||@
  Comment 787 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 787 60 r10|DWORD = MOVE input: int[-19041|0xffffffffffffb59f]  <||@
  Comment 793 62 JUMP ~[] destination: B7 -> B8  <||@
  Comment 795 block B1 null  <||@
  Comment 795 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 795 18 r10|DWORD = MOVE input: int[-9747|0xffffffffffffd9ed]  <||@
  Comment 801 20 JUMP ~[] destination: B1 -> B8  <||@
  Comment 803 block B37 null  <||@
  Comment 803 380 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 803 382 rax|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 808 384 r11|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 813 386 r14|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 818 388 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 823 390 MOV [r15|QWORD + 668] y: -30049 size: DWORD  <||@
  Comment 834 392 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 841 394 DEOPT info [bci:79]  <||@
  Comment 841 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 846 [rax:0, rsi:0]at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:164) [bci: 79, duringCall: false, rethrow: false]
              |0             |1          |2          |3         |4  |5            
     locals:  |rsi|QWORD[.]  |r11|DWORD  |r14|DWORD  |r8|DWORD  |-  |rax|QWORD[.]   <||@
  Comment 847 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 847 4  <||@
  Comment 853 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 853 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9887[java.util.ArrayDeque.doubleCapacity()]"
  method "HotSpotCompilation-9887[java.util.ArrayDeque.doubleCapacity()]"
  date 1527005229574
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 106eba000 448b560849c1e203493bc20f854fbe94ff900f1f80000000000f1f800000000089842400c0feff4883ec6848896c2460448b6e14468b34ed0c000000458bd641d1e24585d20f8cd0020000448b5e0c4585db0f8c99020000458bc6452bc34585c00f8ca4020000418bd2412bd085d20f8c9e0200004889742450448944244c498b5760498b4f704181faffffff000f8330020000458bce41c1e103458d49174183e1f84d63c9498bd94803da483bd90f870f02000049895f60410f188411c0000000410f18841100010000410f18841140010000410f188411800100004489520c48c70201000000c74208f52200f8488bc244895c244844896c2444458bea48894424384183fd010f8c67000000488d78104963f5488d56f84885d20f8d7701000049c7c200000000488d56fc4c3bd20f8f11000000c5f9efc0c4a17a7f0497498d52044c8bd2488d56fe4c3bd20f8f11000000c5f9efc0c4a1f97e0497498d52024c8bd248ffce4c3bd60f8f0400000046892497448974243449ba00e01b17010000004c8954242841f7c6ffffff7f0f843f000000418bfdffcfc1e7024863ff488d70104803f748c1ee09488d781048c1ef09482bf748ffc6e9100000009048ffce488bd74903d24803d64488224883fe017deb448b44244c44896c2424448b6c244449c1e503498bfd488bf04c634c24484963c84a8d7c8f10488d7610488bd14c894c241848894c24104c896c2408e80a8f95ff90448b542424442b542448448b44244c453bc20f8ff4000000488b4c24104c8b4c24184c8b6c2408488b442438488bd0498d7d10488d748a10498bd1e8c98e95ff90488b44243848c1e803488b7424508946144c8bd649c1ea094c8b5c24284788241a4489660c448b74243444897610488b6c24604883c4688505714d9dfdc5f877c3c5f9efc049c7c200000000660f1f440000660f1f440000c4a17e7f04974d8d52084c3bd27ef1e965feffff44895c244844896c244448baa81701c007000000488bf2418bd2b900000000458beae8f5ca0d0090e90efeffff41ba9fb5ffff4589979c0200004d89a7a8020000e8f4d294ff9041ba9fb5ffffebe441ba9fb5ffffebdc41baedd9ffffebd4488b442438448b5c2448448b742434488b74245041c7879c0200009f8affff4d89a7a8020000e8b0d294ff90e8cc02d9ff90e8a6d194ff90f4f4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@67208eab slotKind: QWORD  <||@
  Comment 48 6 r13|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 52 8 r14|DWORD = MOV [r13|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 52 [rsi:0, r13:0]at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:155) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 52 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 60 10 r10|DWORD = SHL r14|DWORD size: DWORD  <||@
  Comment 66 12 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 69 14 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 75 block B2 null  <||@
  Comment 75 22 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 75 24 r11|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 79 26 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 82 28 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 88 block B4 null  <||@
  Comment 88 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 88 38 r8|DWORD = SUB (x: r14|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 94 40 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 97 42 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 103 block B6 null  <||@
  Comment 103 50 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 103 52 rdx|DWORD = SUB (x: r10|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 109 54 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 111 56 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B9  <||@
  Comment 117 block B9 null  <||@
  Comment 117 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 117 74 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 122 76 stack:36|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 127 78 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 131 80 rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 135 82 CMP r10|DWORD y: 16777215 size: DWORD  <||@
  Comment 142 84 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B14  <||@
  Comment 148 block B10 null  <||@
  Comment 148 86 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 148 88 r9|DWORD = SHL r14|DWORD y: 3 size: DWORD  <||@
  Comment 155 90 r9|DWORD = LEA [r9|DWORD + 23] size: DWORD  <||@
  Comment 159 92 r9|DWORD = AND r9|DWORD y: -8 size: DWORD  <||@
  Comment 163 94 r9|QWORD = MOVSXD r9|DWORD size: QWORD  <||@
  Comment 166 96 rbx|QWORD = ADD (x: r9|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 172 98 CMP (x: rbx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 175 100 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B14 falseDestination: B10 -> B12  <||@
  Comment 181 block B12 null  <||@
  Comment 181 110 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 181 112 MOV (x: [r15|QWORD + 96], y: rbx|QWORD) size: QWORD  <||@
  Comment 185 114 AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 192] instr: 0  <||@
  Comment 194 116 AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 256] instr: 0  <||@
  Comment 203 118 AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 320] instr: 0  <||@
  Comment 212 120 AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 384] instr: 0  <||@
  Comment 221 122 MOV (x: [rdx|QWORD + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 225 124 MOV [rdx|QWORD] y: 1 size: QWORD  <||@
  Comment 232 126 MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 232 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 239 128 rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 239 130 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 242 132 stack:40|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 247 134 stack:44|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD  <||@
  Comment 252 136 r13|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 255 138 JUMP ~[] destination: B12 -> B15  <||@
  Comment 255 block B15 null  <||@
  Comment 255 164 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 255 166 stack:56|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 260 168 CMP r13|DWORD y: 1 size: DWORD  <||@
  Comment 264 170 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B15 -> B31 falseDestination: B15 -> B17  <||@
  Comment 270 block B17 null  <||@
  Comment 270 176 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 270 178 rdi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 274 180 rsi|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 277 182 rdx|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 281 184 TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 284 186 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B17 -> B18 falseDestination: B17 -> B19  <||@
  Comment 290 block B18 null  <||@
  Comment 290 188 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 290 190 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 297 192 JUMP ~[] destination: B18 -> B22  <||@
  Comment 297 block B22 null  <||@
  Comment 297 216 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 297 218 rdx|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 301 220 CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 304 222 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B22 -> B25 falseDestination: B22 -> B24  <||@
  Comment 310 block B24 null  <||@
  Comment 310 228 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 310 230 xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null>  <||@
  Comment 314 232 J (address: [rdi|QWORD[.] + r10|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 320 234 rdx|QWORD = LEA [r10|QWORD + 4] size: QWORD  <||@
  Comment 324 236 r10|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 327 238 JUMP ~[] destination: B24 -> B25  <||@
  Comment 327 block B25 null  <||@
  Comment 327 240 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 327 242 rdx|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 331 244 CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 334 246 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B25 -> B28 falseDestination: B25 -> B27  <||@
  Comment 340 block B27 null  <||@
  Comment 340 252 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 340 254 xmm0|V64_DWORD[..] = L oc: SIMD<null,null>  <||@
  Comment 344 256 J (address: [rdi|QWORD[.] + r10|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 350 258 rdx|QWORD = LEA [r10|QWORD + 2] size: QWORD  <||@
  Comment 354 260 r10|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 357 262 JUMP ~[] destination: B27 -> B28  <||@
  Comment 357 block B28 null  <||@
  Comment 357 264 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 357 266 rsi|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 360 268 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 363 270 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B28 -> B31 falseDestination: B28 -> B30  <||@
  Comment 369 block B30 null  <||@
  Comment 369 276 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 369 278 MOV (x: [rdi|QWORD[.] + r10|QWORD * 4], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 373 280 JUMP ~[] destination: B30 -> B31  <||@
  Comment 373 block B31 null  <||@
  Comment 373 282 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 373 284 stack:60|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 378 286 r10|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 388 288 stack:72|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 393 290 TEST r14|DWORD y: 2147483647 size: DWORD  <||@
  Comment 400 292 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B31 -> B36 falseDestination: B31 -> B33  <||@
  Comment 406 block B33 null  <||@
  Comment 406 304 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 406 306 rdi|DWORD = DEC r13|DWORD size: DWORD  <||@
  Comment 411 308 rdi|DWORD = SHL rdi|DWORD y: 2 size: DWORD  <||@
  Comment 414 310 rdi|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 417 312 rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 421 314 rsi|QWORD[.] = ADD (x: rsi|QWORD[.], y: rdi|QWORD) size: QWORD  <||@
  Comment 424 316 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 428 318 rdi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 432 320 rdi|QWORD[*] = SHR rdi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 436 322 rsi|QWORD[*] = SUB (x: rsi|QWORD[*], ~y: rdi|QWORD[*]) size: QWORD  <||@
  Comment 439 324 rsi|QWORD[*] = INC rsi|QWORD[*] size: QWORD  <||@
  Comment 442 326 JUMP ~[] destination: B33 -> B34  <||@
  Comment 447 block B39 loop 1 depth 1 header:255|LoopBegin  <||@
  Comment 447 440 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 448 442 rsi|QWORD[*] = DEC rsi|QWORD[*] size: QWORD  <||@
  Comment 451 444 rdx|QWORD[*] = ADD (x: rdi|QWORD[*], y: r10|QWORD) size: QWORD  <||@
  Comment 457 446 rdx|QWORD[*] = ADD (x: rdx|QWORD[*], y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 460 448 MOVB (x: [rdx|QWORD[*]], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 463 450 JUMP ~[] destination: B39 -> B34  <||@
  Comment 463 block B34 loop 1 depth 1 header:255|LoopBegin  <||@
  Comment 463 328 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 463 330 CMP rsi|QWORD[*] y: 1 size: QWORD  <||@
  Comment 467 332 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B34 -> B36 falseDestination: B34 -> B39  <||@
  Comment 469 block B36 null  <||@
  Comment 469 344 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 469 296 r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 474 298 stack:76|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 479 300 r13|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 484 346 r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4858514a encoding: base: 0 shift: 3  <||@
  Comment 488 348 rdi|QWORD[*] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 491 350 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 494 352 r9|QWORD = MOVSXD stack:40|DWORD size: QWORD  <||@
  Comment 499 354 rcx|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 502 356 rdi|QWORD = LEA [rdi|QWORD[*] + r9|QWORD * 4 + 16] size: QWORD  <||@
  Comment 507 358 rsi|QWORD = LEA [rsi|QWORD[*] + 16] size: QWORD  <||@
  Comment 511 360 rdx|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 514 362 stack:88|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 519 364 stack:96|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 524 366 stack:104|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 529 368 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectArraycopy(Word,Word,Word)void@0x106813120:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 529 {Field[name=StubRoutines::_oop_arraycopy, type=address, offset=0, address=0x105a7dc90, value=0x106813120]:0x106813120}  <||@
  Comment 535 370 r10|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 540 372 r10|DWORD = SUB (x: r10|DWORD, ~y: stack:40|DWORD) size: DWORD  <||@
  Comment 545 374 r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 550 376 CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 553 378 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B38  <||@
  Comment 559 block B38 null  <||@
  Comment 559 396 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 559 398 rcx|QWORD = MOVE stack:96|QWORD moveKind: QWORD  <||@
  Comment 564 400 r9|QWORD = MOVE stack:88|QWORD moveKind: QWORD  <||@
  Comment 569 402 r13|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 574 404 rax|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 579 406 r13|QWORD[*] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 579 408 rdx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 582 410 rdi|QWORD = LEA [r13|QWORD[*] + 16] size: QWORD  <||@
  Comment 586 412 rsi|QWORD = LEA [rdx|QWORD[*] + rcx|QWORD * 4 + 16] size: QWORD  <||@
  Comment 591 414 rdx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 594 416 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectArraycopy(Word,Word,Word)void@0x106813120:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 594 {Field[name=StubRoutines::_oop_arraycopy, type=address, offset=0, address=0x105a7dc90, value=0x106813120]:0x106813120}  <||@
  Comment 600 418 rax|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 605 420 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@4858514a encoding: base: 0 shift: 3  <||@
  Comment 609 422 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 614 424 MOV (x: [rsi|QWORD[.] + 20], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 617 426 r10|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 624 428 r11|QWORD = MOVE stack:72|QWORD moveKind: QWORD  <||@
  Comment 629 430 MOVB (x: [r10|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 633 432 MOV (x: [rsi|QWORD[.] + 12], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 637 434 r14|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 642 436 MOV (x: [rsi|QWORD[.] + 16], y: r14|DWORD) size: DWORD  <||@
  Comment 646 438 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 655 12  <||@
  Comment 665 block B19 null  <||@
  Comment 665 194 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 665 196 xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null>  <||@
  Comment 669 198 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 676 200 JUMP ~[] destination: B19 -> B20  <||@
  Comment 676 block B20 loop 0 depth 1 header:316|LoopBegin  <||@
  Comment 676 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 688 204 J (address: [rdi|QWORD[.] + r10|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 694 206 r10|QWORD = LEA [r10|QWORD + 8] size: QWORD  <||@
  Comment 698 208 CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 701 210 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B22 falseDestination: B20 -> B20  <||@
  Comment 708 block B14 null  <||@
  Comment 708 148 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 708 142 stack:40|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 713 144 stack:44|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD  <||@
  Comment 718 150 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>}  <||@
  Comment 718 {meta{HotSpotType<[Ljava/lang/Object;, resolved>}}  <||@
  Comment 728 152 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 731 154 rdx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 734 156 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 739 158 r13|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 742 160 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 742 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 747 [stack:68, stack:80]at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:155) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4  |5 
     locals:  |stack:32|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 748 162 JUMP ~[] destination: B14 -> B15  <||@
  Comment 753 block B3 null  <||@
  Comment 753 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 753 32 r10|DWORD = MOVE input: int[-19041|0xffffffffffffb59f]  <||@
  Comment 759 34 JUMP ~[] destination: B3 -> B8  <||@
  Comment 759 block B8 null  <||@
  Comment 759 64 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 759 66 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 766 68 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 773 70 DEOPT info [bci:0]  <||@
  Comment 773 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 778 [rsi:0]at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:155) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 779 block B5 null  <||@
  Comment 779 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 779 46 r10|DWORD = MOVE input: int[-19041|0xffffffffffffb59f]  <||@
  Comment 785 48 JUMP ~[] destination: B5 -> B8  <||@
  Comment 787 block B7 null  <||@
  Comment 787 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 787 60 r10|DWORD = MOVE input: int[-19041|0xffffffffffffb59f]  <||@
  Comment 793 62 JUMP ~[] destination: B7 -> B8  <||@
  Comment 795 block B1 null  <||@
  Comment 795 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 795 18 r10|DWORD = MOVE input: int[-9747|0xffffffffffffd9ed]  <||@
  Comment 801 20 JUMP ~[] destination: B1 -> B8  <||@
  Comment 803 block B37 null  <||@
  Comment 803 380 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 803 382 rax|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 808 384 r11|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 813 386 r14|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 818 388 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 823 390 MOV [r15|QWORD + 668] y: -30049 size: DWORD  <||@
  Comment 834 392 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 841 394 DEOPT info [bci:79]  <||@
  Comment 841 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 846 [rax:0, rsi:0]at java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:164) [bci: 79, duringCall: false, rethrow: false]
              |0             |1          |2          |3         |4  |5            
     locals:  |rsi|QWORD[.]  |r11|DWORD  |r14|DWORD  |r8|DWORD  |-  |rax|QWORD[.]   <||@
  Comment 847 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 847 4  <||@
  Comment 853 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 853 5  <||@
  HexCodeFile>>> <|@
end_nmethod
