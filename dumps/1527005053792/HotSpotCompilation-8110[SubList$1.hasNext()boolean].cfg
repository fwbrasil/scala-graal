begin_compilation
  name " HotSpotCompilation-8110[java.util.SubList$1.hasNext()]"
  method "HotSpotCompilation-8110[java.util.SubList$1.hasNext()]"
  date 1527005189368
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a117 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a117  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/SubList$1;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v125 v123 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a117 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a117 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList$1.i
nodeSourcePosition: at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 1]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v123 
=== Succesors ===
next: v118 
=== Usages ===
v128 v124 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v123 #next: v118  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<SubList$1.hasNext()>
duringCall: false
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 702
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v106 v118 i120 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a117 
=== Succesors ===
=== Usages ===
v118 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a117  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v128 
=== Succesors ===
next: v75 
=== Usages ===
v116 
=== Predecessor ===
a117 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v128 #next: v75  <|@  <|@
f <@~|@floating>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
rawvalue: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v116 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v118 
y: v115 
=== Succesors ===
=== Usages ===
v75 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v118 y: v115  <|@  <|@
f <@*|@fixed>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=nextIndex target_method_class=Ljava/util/AbstractList$ListItr; position=at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v116 
=== Succesors ===
trueSuccessor: v72 
falseSuccessor: v74 
=== Usages ===
=== Predecessor ===
v118 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v116 #trueSuccessor: v72 #falseSuccessor: v74  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=nextIndex target_method_class=Ljava/util/AbstractList$ListItr; position=at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a119 
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a119  <|@  <|@
f <@~|@floating>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a119 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a119 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList$1.this$0
nodeSourcePosition: at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 10]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
nullCheck: false
stamp: n Ljava/util/SubList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v125 
=== Succesors ===
next: i120 
=== Usages ===
v127 v126 
=== Predecessor ===
v72 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v125 #next: i120  <|@  <|@
f <@~|@floating>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a119 
=== Succesors ===
=== Usages ===
i120 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a119  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i120 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.size
nodeSourcePosition: at java.util.SubList.access$200(AbstractList.java:613) [bci: 1]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 8]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v127 
=== Succesors ===
next: i121 
=== Usages ===
v8 
=== Predecessor ===
a119 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v127 #next: i121  <|@  <|@
f <@~|@floating>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a119 
=== Succesors ===
=== Usages ===
i121 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a119  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i121 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.offset
nodeSourcePosition: at java.util.SubList.access$000(AbstractList.java:613) [bci: 1]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 13]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v126 
=== Succesors ===
next: i122 
=== Usages ===
i19 
=== Predecessor ===
i120 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v126 #next: i122  <|@  <|@
f <@~|@floating>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a117 
=== Succesors ===
=== Usages ===
i122 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a117  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i122 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$ListItr.nextIndex(AbstractList.java:413) [bci: 1]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v124 
=== Succesors ===
next: v12 
=== Usages ===
i19 
=== Predecessor ===
i121 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v124 #next: v12  <|@  <|@
f <@~|@floating>@ <|@
tid i19 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 16]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
stamp: i32
=== Inputs ===
x: i122 
y: i121 
=== Succesors ===
=== Usages ===
v8 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i122 y: i121  <|@  <|@
f <@~|@floating>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 11]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i19 
y: i120 
=== Succesors ===
=== Usages ===
i11 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i19 y: i120  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 11]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i11 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 11]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i11 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 11]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v8 
trueValue: i9 
falseValue: i10 
=== Succesors ===
=== Usages ===
v12 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v8 trueValue: i9 falseValue: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 19]
stamp: void
=== Inputs ===
result: i11 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i122 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i11 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=nextIndex target_method_class=Ljava/util/AbstractList$ListItr; position=at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v106 
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v106  <|@  <|@
f <@~|@floating>@ <|@
tid a103 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i110 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -12083
stableDimension: 0
stamp: i32 [-12083] ⇊00000000ffffd0cd ⇈00000000ffffd0cd
stampKind: i32
value: int[-12083|0xffffffffffffd0cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i110 
speculation: a103 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i110 speculation: a103  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a117 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a117  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/SubList$1;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v125 v123 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v123 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a117 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a117 <|@
result v1|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList$1.i
nodeSourcePosition: at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 1]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v123 
=== Succesors ===
next: v118 
=== Usages ===
v128 v124 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v123 #next: v118  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<SubList$1.hasNext()>
duringCall: false
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 702
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v106 v118 i120 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v128 <|@
result [v1|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a117 
=== Succesors ===
=== Usages ===
v118 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a117  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v118 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v128 
=== Succesors ===
next: v75 
=== Usages ===
v116 
=== Predecessor ===
a117 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v128 #next: v75  <|@  <|@
f <@~|@floating>@ <|@
tid v115 <|@
result meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
rawvalue: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v116 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v116 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v118 
y: v115 
=== Succesors ===
=== Usages ===
v75 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v118 y: v115  <|@  <|@
f <@*|@fixed>@ <|@
tid v75 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=nextIndex target_method_class=Ljava/util/AbstractList$ListItr; position=at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v116 
=== Succesors ===
trueSuccessor: v72 
falseSuccessor: v74 
=== Usages ===
=== Predecessor ===
v118 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v116 #trueSuccessor: v72 #falseSuccessor: v74  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@249336cf slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction CMP [v1|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=nextIndex target_method_class=Ljava/util/AbstractList$ListItr; position=at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a119 
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a119  <|@  <|@
f <@~|@floating>@ <|@
tid v125 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a119 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a119 <|@
result v2|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList$1.this$0
nodeSourcePosition: at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 10]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
nullCheck: false
stamp: n Ljava/util/SubList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v125 
=== Succesors ===
next: i120 
=== Usages ===
v127 v126 
=== Predecessor ===
v72 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v125 #next: i120  <|@  <|@
f <@~|@floating>@ <|@
tid v127 <|@
result [v2|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a119 
=== Succesors ===
=== Usages ===
i120 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a119  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i120 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.size
nodeSourcePosition: at java.util.SubList.access$200(AbstractList.java:613) [bci: 1]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 8]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v127 
=== Succesors ===
next: i121 
=== Usages ===
v8 
=== Predecessor ===
a119 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v127 #next: i121  <|@  <|@
f <@~|@floating>@ <|@
tid v126 <|@
result [v2|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a119 
=== Succesors ===
=== Usages ===
i121 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a119  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i121 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.offset
nodeSourcePosition: at java.util.SubList.access$000(AbstractList.java:613) [bci: 1]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 13]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v126 
=== Succesors ===
next: i122 
=== Usages ===
i19 
=== Predecessor ===
i120 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v126 #next: i122  <|@  <|@
f <@~|@floating>@ <|@
tid v124 <|@
result [v1|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a117 
=== Succesors ===
=== Usages ===
i122 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a117  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i122 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$ListItr.nextIndex(AbstractList.java:413) [bci: 1]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v124 
=== Succesors ===
next: v12 
=== Usages ===
i19 
=== Predecessor ===
i121 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v124 #next: v12  <|@  <|@
f <@~|@floating>@ <|@
tid i19 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 16]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
stamp: i32
=== Inputs ===
x: i122 
y: i121 
=== Succesors ===
=== Usages ===
v8 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i122 y: i121  <|@  <|@
f <@~|@floating>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 11]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i19 
y: i120 
=== Succesors ===
=== Usages ===
i11 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i19 y: i120  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 11]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i11 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 11]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i11 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 11]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v8 
trueValue: i9 
falseValue: i10 
=== Succesors ===
=== Usages ===
v12 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v8 trueValue: i9 falseValue: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 19]
stamp: void
=== Inputs ===
result: i11 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i122 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i11 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v3|DWORD = MOV [v2|DWORD[.] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v2|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v1|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = SUB (x: v5|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=nextIndex target_method_class=Ljava/util/AbstractList$ListItr; position=at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v106 
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v106  <|@  <|@
f <@~|@floating>@ <|@
tid a103 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i110 <|@
result int[-12083|0xffffffffffffd0cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -12083
stableDimension: 0
stamp: i32 [-12083] ⇊00000000ffffd0cd ⇈00000000ffffd0cd
stampKind: i32
value: int[-12083|0xffffffffffffd0cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i110 
speculation: a103 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i110 speculation: a103  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -12083 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@249336cf slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction CMP [v1|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v3|DWORD = MOV [v2|DWORD[.] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v2|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v1|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = SUB (x: v5|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -12083 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #7          // nextIndex:()int
     4: aload_0       
     5: getfield      #0          // this$0:java.util.SubList
     8: invokestatic  #8          // java.util.SubList.access$200:(java.util.SubList)int
    11: if_icmpge     18
    14: iconst_1      
    15: goto          19
    18: iconst_0      
    19: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@249336cf slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction CMP [rax|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0]
live-base-pointers: []
java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction r10|DWORD = MOV [r10|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   22  <|@ instruction rax|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   24  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr   26  <|@ instruction CMP (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction rax|DWORD = SETCC condition: > <|@ <|@
      nr   32  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction MOV [r15|QWORD + 668] y: -12083 size: DWORD <|@ <|@
      nr   38  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   40  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #7          // nextIndex:()int
     4: aload_0       
     5: getfield      #0          // this$0:java.util.SubList
     8: invokestatic  #8          // java.util.SubList.access$200:(java.util.SubList)int
    11: if_icmpge     18
    14: iconst_1      
    15: goto          19
    18: iconst_0      
    19: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@249336cf slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction CMP [rax|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0]
live-base-pointers: []
java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction r10|DWORD = MOV [r10|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   22  <|@ instruction rax|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   24  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr   26  <|@ instruction CMP (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction rax|DWORD = SETCC condition: > <|@ <|@
      nr   32  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction MOV [r15|QWORD + 668] y: -12083 size: DWORD <|@ <|@
      nr   38  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   40  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #7          // nextIndex:()int
     4: aload_0       
     5: getfield      #0          // this$0:java.util.SubList
     8: invokestatic  #8          // java.util.SubList.access$200:(java.util.SubList)int
    11: if_icmpge     18
    14: iconst_1      
    15: goto          19
    18: iconst_0      
    19: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24108b4610813cc508000000addeadde0f853a000000448b5614468b1cd514000000468b14d5100000008b04c50c000000412bc2443bd80f9fc00fb6c0488b6c24104883c418850500000000c5f877c341c7879c020000cdd0ffff4d89a7a8020000e80000000090e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@249336cf slotKind: QWORD  <||@
  Comment 48 8 rax|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 51 10 CMP [rax|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} state [bci:0]  <||@
  Comment 51 [rax:0, rsi:0]at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 51 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 51 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}}  <||@
  Comment 62 12 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 68 block B1 null  <||@
  Comment 68 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 68 16 r10|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 72 18 r11|DWORD = MOV [r10|DWORD[.] * 8 + 20] size: DWORD state [bci:0]  <||@
  Comment 72 [rax:0, rsi:0, r10:0]at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 72 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 80 20 r10|DWORD = MOV [r10|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 88 22 rax|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 95 24 rax|DWORD = SUB (x: rax|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 98 26 CMP (x: r11|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 101 28 rax|DWORD = SETCC condition: >  <||@
  Comment 107 32 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 116 12  <||@
  Comment 126 block B2 null  <||@
  Comment 126 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 126 36 MOV [r15|QWORD + 668] y: -12083 size: DWORD  <||@
  Comment 137 38 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 144 40 DEOPT info [bci:0]  <||@
  Comment 144 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 149 [rsi:0]at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 150 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 150 4  <||@
  Comment 156 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 156 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-8110[java.util.SubList$1.hasNext()]"
  method "HotSpotCompilation-8110[java.util.SubList$1.hasNext()]"
  date 1527005189400
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107b295e0 448b560849c1e203493bc20f856fc8cdfe900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24108b4610813cc50800000073ef01f80f853a000000448b5614468b1cd514000000468b14d5100000008b04c50c000000412bc2443bd80f9fc00fb6c0488b6c24104883c4188505ac59d6fcc5f877c341c7879c020000cdd0ffff4d89a7a8020000e889dfcdfe90e8a50f12ff90e87fdecdfe90f4f4f4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@249336cf slotKind: QWORD  <||@
  Comment 48 8 rax|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 51 10 CMP [rax|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} state [bci:0]  <||@
  Comment 51 [rax:0, rsi:0]at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 51 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 51 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}}  <||@
  Comment 62 12 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 68 block B1 null  <||@
  Comment 68 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 68 16 r10|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 72 18 r11|DWORD = MOV [r10|DWORD[.] * 8 + 20] size: DWORD state [bci:0]  <||@
  Comment 72 [rax:0, rsi:0, r10:0]at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 72 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 80 20 r10|DWORD = MOV [r10|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 88 22 rax|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 95 24 rax|DWORD = SUB (x: rax|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 98 26 CMP (x: r11|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 101 28 rax|DWORD = SETCC condition: >  <||@
  Comment 107 32 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 116 12  <||@
  Comment 126 block B2 null  <||@
  Comment 126 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 126 36 MOV [r15|QWORD + 668] y: -12083 size: DWORD  <||@
  Comment 137 38 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 144 40 DEOPT info [bci:0]  <||@
  Comment 144 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 149 [rsi:0]at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 150 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 150 4  <||@
  Comment 156 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 156 5  <||@
  HexCodeFile>>> <|@
end_nmethod
